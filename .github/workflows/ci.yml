name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

      - name: Type check
        run: npm run type-check

      - name: Security audit
        run: npm run security:check

      - name: Check complexity
        run: npm run quality:complexity

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build extension
        run: npm run build

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test -- --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: github.ref == 'refs/heads/main'
        with:
          name: coverage-report
          path: coverage/
          retention-days: 90

      - name: Build TypeDoc documentation
        run: npm run docs
        if: github.ref == 'refs/heads/main'

      - name: Upload API documentation
        uses: actions/upload-artifact@v4
        if: github.ref == 'refs/heads/main'
        with:
          name: api-docs
          path: docs/generated/api/
          retention-days: 90

  # e2e:
  #   name: E2E Tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'
  #         cache: 'npm'

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Install Playwright Browsers
  #       run: npx playwright install --with-deps chromium

  #     - name: Run Playwright tests
  #       run: npm run test:e2e

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit (production)
        continue-on-error: true
        run: |
          npm audit --production --audit-level=moderate || echo "npm audit found vulnerabilities"

      - name: Run Trivy security scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  deploy-docs:
    name: Deploy Documentation
    needs: [test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: public/coverage

      - name: Download API documentation
        uses: actions/download-artifact@v4
        with:
          name: api-docs
          path: public/api

      - name: Copy static documentation
        run: |
          mkdir -p public
          cp docs/index.html public/
          cp -r docs/user public/
          cp -r docs/dev public/
          cp README.md public/
          cp CHANGELOG.md public/
          cp SECURITY.md public/
          cp docs/TEST_COVERAGE_PLAN.md public/
          cp docs/TEST_COVERAGE_PROGRESS.md public/
          cp docs/SECURITY_CI_PROPOSAL.md public/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          publish_branch: gh-pages
