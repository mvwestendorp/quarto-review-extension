{"version":3,"file":"review.js","sources":["../node_modules/diff/libesm/diff/base.js","../node_modules/diff/libesm/diff/word.js","../node_modules/diff/libesm/diff/line.js","../node_modules/diff/libesm/diff/array.js","../src/modules/changes/converters.ts","../src/modules/changes/index.ts","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/bail/index.js","../node_modules/extend/index.js","../node_modules/is-plain-obj/index.js","../node_modules/trough/lib/index.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/unified/lib/callable-instance.js","../node_modules/unified/lib/index.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark-util-subtokenize/lib/splice-buffer.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark/lib/parse.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/ccount/index.js","../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/mdast-util-find-and-replace/lib/index.js","../node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../node_modules/mdast-util-gfm-footnote/lib/index.js","../node_modules/mdast-util-gfm-strikethrough/lib/index.js","../node_modules/markdown-table/index.js","../node_modules/zwitch/index.js","../node_modules/mdast-util-to-markdown/lib/configure.js","../node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../node_modules/mdast-util-to-markdown/lib/handle/break.js","../node_modules/longest-streak/index.js","../node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","../node_modules/mdast-util-to-markdown/lib/util/check-fence.js","../node_modules/mdast-util-to-markdown/lib/handle/code.js","../node_modules/mdast-util-to-markdown/lib/util/check-quote.js","../node_modules/mdast-util-to-markdown/lib/handle/definition.js","../node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","../node_modules/mdast-util-to-markdown/lib/util/encode-character-reference.js","../node_modules/mdast-util-to-markdown/lib/util/encode-info.js","../node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","../node_modules/mdast-util-to-markdown/lib/handle/heading.js","../node_modules/mdast-util-to-markdown/lib/handle/html.js","../node_modules/mdast-util-to-markdown/lib/handle/image.js","../node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","../node_modules/mdast-util-to-markdown/lib/handle/link.js","../node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","../node_modules/mdast-util-to-markdown/lib/util/check-rule.js","../node_modules/mdast-util-to-markdown/lib/handle/list.js","../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","../node_modules/mdast-util-phrasing/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/root.js","../node_modules/mdast-util-to-markdown/lib/util/check-strong.js","../node_modules/mdast-util-to-markdown/lib/handle/strong.js","../node_modules/mdast-util-to-markdown/lib/handle/text.js","../node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","../node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","../node_modules/mdast-util-to-markdown/lib/handle/index.js","../node_modules/mdast-util-to-markdown/lib/join.js","../node_modules/mdast-util-to-markdown/lib/unsafe.js","../node_modules/mdast-util-to-markdown/lib/util/association.js","../node_modules/mdast-util-to-markdown/lib/util/compile-pattern.js","../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../node_modules/mdast-util-to-markdown/lib/util/safe.js","../node_modules/mdast-util-to-markdown/lib/util/track.js","../node_modules/mdast-util-to-markdown/lib/index.js","../node_modules/mdast-util-gfm-table/lib/index.js","../node_modules/mdast-util-gfm-task-list-item/lib/index.js","../node_modules/mdast-util-gfm/lib/index.js","../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../node_modules/micromark-extension-gfm-table/lib/edit-map.js","../node_modules/micromark-extension-gfm-table/lib/infer.js","../node_modules/micromark-extension-gfm-table/lib/syntax.js","../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../node_modules/micromark-extension-gfm/index.js","../node_modules/remark-gfm/lib/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/unist-util-position/lib/index.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/@ungap/structured-clone/esm/types.js","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/remark-rehype/lib/index.js","../node_modules/html-void-elements/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/index.js","../node_modules/stringify-entities/lib/core.js","../node_modules/stringify-entities/lib/util/to-hexadecimal.js","../node_modules/stringify-entities/lib/util/to-decimal.js","../node_modules/character-entities-legacy/index.js","../node_modules/character-entities-html4/index.js","../node_modules/stringify-entities/lib/constant/dangerous.js","../node_modules/stringify-entities/lib/util/to-named.js","../node_modules/stringify-entities/lib/util/format-smart.js","../node_modules/stringify-entities/lib/index.js","../node_modules/hast-util-to-html/lib/handle/comment.js","../node_modules/hast-util-to-html/lib/handle/doctype.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/hast-util-whitespace/lib/index.js","../node_modules/hast-util-to-html/lib/omission/util/siblings.js","../node_modules/hast-util-to-html/lib/omission/omission.js","../node_modules/hast-util-to-html/lib/omission/closing.js","../node_modules/hast-util-to-html/lib/omission/opening.js","../node_modules/hast-util-to-html/lib/handle/element.js","../node_modules/hast-util-to-html/lib/handle/text.js","../node_modules/hast-util-to-html/lib/handle/raw.js","../node_modules/hast-util-to-html/lib/handle/root.js","../node_modules/hast-util-to-html/lib/handle/index.js","../node_modules/hast-util-to-html/lib/index.js","../node_modules/rehype-stringify/lib/index.js","../src/modules/markdown/remark-criticmarkup.ts","../src/modules/markdown/MarkdownRenderer.ts","../src/modules/markdown/sanitize.ts","../src/modules/markdown/index.ts","../src/modules/comments/index.ts","../src/modules/ui/shared/utils.ts","../src/modules/ui/shared/ModuleEvent.ts","../src/modules/ui/shared/UIState.ts","../node_modules/@milkdown/exception/lib/index.js","../node_modules/@milkdown/ctx/lib/index.js","../node_modules/orderedmap/dist/index.js","../node_modules/prosemirror-model/dist/index.js","../node_modules/remark-stringify/lib/index.js","../node_modules/@milkdown/transformer/lib/index.js","../node_modules/prosemirror-transform/dist/index.js","../node_modules/prosemirror-state/dist/index.js","../node_modules/prosemirror-commands/dist/index.js","../node_modules/prosemirror-inputrules/dist/index.js","../node_modules/@milkdown/prose/lib/index.js","../node_modules/w3c-keyname/index.js","../node_modules/prosemirror-keymap/dist/index.js","../node_modules/prosemirror-view/dist/index.js","../node_modules/@milkdown/core/lib/index.js","../node_modules/clsx/dist/clsx.mjs","../node_modules/@milkdown/theme-nord/lib/index.js","../node_modules/@milkdown/utils/lib/index.js","../node_modules/prosemirror-schema-list/dist/index.js","../node_modules/mdast-util-definitions/lib/index.js","../node_modules/remark-inline-links/lib/index.js","../node_modules/@milkdown/preset-commonmark/lib/index.js","../node_modules/prosemirror-tables/dist/index.js","../node_modules/prosemirror-safari-ime-span/dist/index.js","../node_modules/@milkdown/preset-gfm/lib/index.js","../node_modules/lodash-es/_freeGlobal.js","../node_modules/lodash-es/_root.js","../node_modules/lodash-es/_Symbol.js","../node_modules/lodash-es/_getRawTag.js","../node_modules/lodash-es/_objectToString.js","../node_modules/lodash-es/_baseGetTag.js","../node_modules/lodash-es/isObjectLike.js","../node_modules/lodash-es/isSymbol.js","../node_modules/lodash-es/_trimmedEndIndex.js","../node_modules/lodash-es/_baseTrim.js","../node_modules/lodash-es/isObject.js","../node_modules/lodash-es/toNumber.js","../node_modules/lodash-es/now.js","../node_modules/lodash-es/debounce.js","../node_modules/@milkdown/plugin-listener/lib/index.js","../node_modules/rope-sequence/dist/index.js","../node_modules/prosemirror-history/dist/index.js","../node_modules/@milkdown/plugin-history/lib/index.js","../src/utils/debug.ts","../src/modules/ui/criticmarkup/remark-parser.ts","../src/modules/ui/criticmarkup/milkdown-marks.ts","../src/modules/ui/editor/CommandRegistry.ts","../src/modules/ui/editor/EditorToolbar.ts","../src/modules/ui/editor/MilkdownEditor.ts","../src/modules/ui/editor/EditorLifecycle.ts","../src/modules/ui/comments/CommentsSidebar.ts","../src/modules/ui/comments/CommentComposer.ts","../src/modules/ui/comments/CommentBadges.ts","../src/modules/ui/constants.ts","../src/modules/ui/comments/CommentController.ts","../src/modules/ui/sidebars/MainSidebar.ts","../src/modules/ui/sidebars/ContextMenu.ts","../src/modules/ui/sidebars/ContextMenuCoordinator.ts","../src/modules/ui/shared/editor-content.ts","../src/modules/ui/editor/EditorHistoryStorage.ts","../src/modules/ui/change-summary.ts","../src/utils/debug-tools.ts","../src/modules/ui/index.ts","../src/modules/git/config.ts","../src/modules/git/providers/base.ts","../src/modules/git/providers/github.ts","../src/modules/git/providers/gitlab.ts","../src/modules/git/providers/gitea.ts","../src/modules/git/providers/local.ts","../src/modules/git/providers/index.ts","../src/modules/git/integration.ts","../src/modules/git/fallback.ts","../src/modules/git/index.ts","../src/modules/user/index.ts","../src/main.ts"],"sourcesContent":["export default class Diff {\n    diff(oldStr, newStr, \n    // Type below is not accurate/complete - see above for full possibilities - but it compiles\n    options = {}) {\n        let callback;\n        if (typeof options === 'function') {\n            callback = options;\n            options = {};\n        }\n        else if ('callback' in options) {\n            callback = options.callback;\n        }\n        // Allow subclasses to massage the input prior to running\n        const oldString = this.castInput(oldStr, options);\n        const newString = this.castInput(newStr, options);\n        const oldTokens = this.removeEmpty(this.tokenize(oldString, options));\n        const newTokens = this.removeEmpty(this.tokenize(newString, options));\n        return this.diffWithOptionsObj(oldTokens, newTokens, options, callback);\n    }\n    diffWithOptionsObj(oldTokens, newTokens, options, callback) {\n        var _a;\n        const done = (value) => {\n            value = this.postProcess(value, options);\n            if (callback) {\n                setTimeout(function () { callback(value); }, 0);\n                return undefined;\n            }\n            else {\n                return value;\n            }\n        };\n        const newLen = newTokens.length, oldLen = oldTokens.length;\n        let editLength = 1;\n        let maxEditLength = newLen + oldLen;\n        if (options.maxEditLength != null) {\n            maxEditLength = Math.min(maxEditLength, options.maxEditLength);\n        }\n        const maxExecutionTime = (_a = options.timeout) !== null && _a !== void 0 ? _a : Infinity;\n        const abortAfterTimestamp = Date.now() + maxExecutionTime;\n        const bestPath = [{ oldPos: -1, lastComponent: undefined }];\n        // Seed editLength = 0, i.e. the content starts with the same values\n        let newPos = this.extractCommon(bestPath[0], newTokens, oldTokens, 0, options);\n        if (bestPath[0].oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n            // Identity per the equality and tokenizer\n            return done(this.buildValues(bestPath[0].lastComponent, newTokens, oldTokens));\n        }\n        // Once we hit the right edge of the edit graph on some diagonal k, we can\n        // definitely reach the end of the edit graph in no more than k edits, so\n        // there's no point in considering any moves to diagonal k+1 any more (from\n        // which we're guaranteed to need at least k+1 more edits).\n        // Similarly, once we've reached the bottom of the edit graph, there's no\n        // point considering moves to lower diagonals.\n        // We record this fact by setting minDiagonalToConsider and\n        // maxDiagonalToConsider to some finite value once we've hit the edge of\n        // the edit graph.\n        // This optimization is not faithful to the original algorithm presented in\n        // Myers's paper, which instead pointlessly extends D-paths off the end of\n        // the edit graph - see page 7 of Myers's paper which notes this point\n        // explicitly and illustrates it with a diagram. This has major performance\n        // implications for some common scenarios. For instance, to compute a diff\n        // where the new text simply appends d characters on the end of the\n        // original text of length n, the true Myers algorithm will take O(n+d^2)\n        // time while this optimization needs only O(n+d) time.\n        let minDiagonalToConsider = -Infinity, maxDiagonalToConsider = Infinity;\n        // Main worker method. checks all permutations of a given edit length for acceptance.\n        const execEditLength = () => {\n            for (let diagonalPath = Math.max(minDiagonalToConsider, -editLength); diagonalPath <= Math.min(maxDiagonalToConsider, editLength); diagonalPath += 2) {\n                let basePath;\n                const removePath = bestPath[diagonalPath - 1], addPath = bestPath[diagonalPath + 1];\n                if (removePath) {\n                    // No one else is going to attempt to use this value, clear it\n                    // @ts-expect-error - perf optimisation. This type-violating value will never be read.\n                    bestPath[diagonalPath - 1] = undefined;\n                }\n                let canAdd = false;\n                if (addPath) {\n                    // what newPos will be after we do an insertion:\n                    const addPathNewPos = addPath.oldPos - diagonalPath;\n                    canAdd = addPath && 0 <= addPathNewPos && addPathNewPos < newLen;\n                }\n                const canRemove = removePath && removePath.oldPos + 1 < oldLen;\n                if (!canAdd && !canRemove) {\n                    // If this path is a terminal then prune\n                    // @ts-expect-error - perf optimisation. This type-violating value will never be read.\n                    bestPath[diagonalPath] = undefined;\n                    continue;\n                }\n                // Select the diagonal that we want to branch from. We select the prior\n                // path whose position in the old string is the farthest from the origin\n                // and does not pass the bounds of the diff graph\n                if (!canRemove || (canAdd && removePath.oldPos < addPath.oldPos)) {\n                    basePath = this.addToPath(addPath, true, false, 0, options);\n                }\n                else {\n                    basePath = this.addToPath(removePath, false, true, 1, options);\n                }\n                newPos = this.extractCommon(basePath, newTokens, oldTokens, diagonalPath, options);\n                if (basePath.oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n                    // If we have hit the end of both strings, then we are done\n                    return done(this.buildValues(basePath.lastComponent, newTokens, oldTokens)) || true;\n                }\n                else {\n                    bestPath[diagonalPath] = basePath;\n                    if (basePath.oldPos + 1 >= oldLen) {\n                        maxDiagonalToConsider = Math.min(maxDiagonalToConsider, diagonalPath - 1);\n                    }\n                    if (newPos + 1 >= newLen) {\n                        minDiagonalToConsider = Math.max(minDiagonalToConsider, diagonalPath + 1);\n                    }\n                }\n            }\n            editLength++;\n        };\n        // Performs the length of edit iteration. Is a bit fugly as this has to support the\n        // sync and async mode which is never fun. Loops over execEditLength until a value\n        // is produced, or until the edit length exceeds options.maxEditLength (if given),\n        // in which case it will return undefined.\n        if (callback) {\n            (function exec() {\n                setTimeout(function () {\n                    if (editLength > maxEditLength || Date.now() > abortAfterTimestamp) {\n                        return callback(undefined);\n                    }\n                    if (!execEditLength()) {\n                        exec();\n                    }\n                }, 0);\n            }());\n        }\n        else {\n            while (editLength <= maxEditLength && Date.now() <= abortAfterTimestamp) {\n                const ret = execEditLength();\n                if (ret) {\n                    return ret;\n                }\n            }\n        }\n    }\n    addToPath(path, added, removed, oldPosInc, options) {\n        const last = path.lastComponent;\n        if (last && !options.oneChangePerToken && last.added === added && last.removed === removed) {\n            return {\n                oldPos: path.oldPos + oldPosInc,\n                lastComponent: { count: last.count + 1, added: added, removed: removed, previousComponent: last.previousComponent }\n            };\n        }\n        else {\n            return {\n                oldPos: path.oldPos + oldPosInc,\n                lastComponent: { count: 1, added: added, removed: removed, previousComponent: last }\n            };\n        }\n    }\n    extractCommon(basePath, newTokens, oldTokens, diagonalPath, options) {\n        const newLen = newTokens.length, oldLen = oldTokens.length;\n        let oldPos = basePath.oldPos, newPos = oldPos - diagonalPath, commonCount = 0;\n        while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(oldTokens[oldPos + 1], newTokens[newPos + 1], options)) {\n            newPos++;\n            oldPos++;\n            commonCount++;\n            if (options.oneChangePerToken) {\n                basePath.lastComponent = { count: 1, previousComponent: basePath.lastComponent, added: false, removed: false };\n            }\n        }\n        if (commonCount && !options.oneChangePerToken) {\n            basePath.lastComponent = { count: commonCount, previousComponent: basePath.lastComponent, added: false, removed: false };\n        }\n        basePath.oldPos = oldPos;\n        return newPos;\n    }\n    equals(left, right, options) {\n        if (options.comparator) {\n            return options.comparator(left, right);\n        }\n        else {\n            return left === right\n                || (!!options.ignoreCase && left.toLowerCase() === right.toLowerCase());\n        }\n    }\n    removeEmpty(array) {\n        const ret = [];\n        for (let i = 0; i < array.length; i++) {\n            if (array[i]) {\n                ret.push(array[i]);\n            }\n        }\n        return ret;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    castInput(value, options) {\n        return value;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    tokenize(value, options) {\n        return Array.from(value);\n    }\n    join(chars) {\n        // Assumes ValueT is string, which is the case for most subclasses.\n        // When it's false, e.g. in diffArrays, this method needs to be overridden (e.g. with a no-op)\n        // Yes, the casts are verbose and ugly, because this pattern - of having the base class SORT OF\n        // assume tokens and values are strings, but not completely - is weird and janky.\n        return chars.join('');\n    }\n    postProcess(changeObjects, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    options) {\n        return changeObjects;\n    }\n    get useLongestToken() {\n        return false;\n    }\n    buildValues(lastComponent, newTokens, oldTokens) {\n        // First we convert our linked list of components in reverse order to an\n        // array in the right order:\n        const components = [];\n        let nextComponent;\n        while (lastComponent) {\n            components.push(lastComponent);\n            nextComponent = lastComponent.previousComponent;\n            delete lastComponent.previousComponent;\n            lastComponent = nextComponent;\n        }\n        components.reverse();\n        const componentLen = components.length;\n        let componentPos = 0, newPos = 0, oldPos = 0;\n        for (; componentPos < componentLen; componentPos++) {\n            const component = components[componentPos];\n            if (!component.removed) {\n                if (!component.added && this.useLongestToken) {\n                    let value = newTokens.slice(newPos, newPos + component.count);\n                    value = value.map(function (value, i) {\n                        const oldValue = oldTokens[oldPos + i];\n                        return oldValue.length > value.length ? oldValue : value;\n                    });\n                    component.value = this.join(value);\n                }\n                else {\n                    component.value = this.join(newTokens.slice(newPos, newPos + component.count));\n                }\n                newPos += component.count;\n                // Common case\n                if (!component.added) {\n                    oldPos += component.count;\n                }\n            }\n            else {\n                component.value = this.join(oldTokens.slice(oldPos, oldPos + component.count));\n                oldPos += component.count;\n            }\n        }\n        return components;\n    }\n}\n","import Diff from './base.js';\nimport { longestCommonPrefix, longestCommonSuffix, replacePrefix, replaceSuffix, removePrefix, removeSuffix, maximumOverlap, leadingWs, trailingWs } from '../util/string.js';\n// Based on https://en.wikipedia.org/wiki/Latin_script_in_Unicode\n//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\nconst extendedWordChars = 'a-zA-Z0-9_\\\\u{C0}-\\\\u{FF}\\\\u{D8}-\\\\u{F6}\\\\u{F8}-\\\\u{2C6}\\\\u{2C8}-\\\\u{2D7}\\\\u{2DE}-\\\\u{2FF}\\\\u{1E00}-\\\\u{1EFF}';\n// Each token is one of the following:\n// - A punctuation mark plus the surrounding whitespace\n// - A word plus the surrounding whitespace\n// - Pure whitespace (but only in the special case where this the entire text\n//   is just whitespace)\n//\n// We have to include surrounding whitespace in the tokens because the two\n// alternative approaches produce horribly broken results:\n// * If we just discard the whitespace, we can't fully reproduce the original\n//   text from the sequence of tokens and any attempt to render the diff will\n//   get the whitespace wrong.\n// * If we have separate tokens for whitespace, then in a typical text every\n//   second token will be a single space character. But this often results in\n//   the optimal diff between two texts being a perverse one that preserves\n//   the spaces between words but deletes and reinserts actual common words.\n//   See https://github.com/kpdecker/jsdiff/issues/160#issuecomment-1866099640\n//   for an example.\n//\n// Keeping the surrounding whitespace of course has implications for .equals\n// and .join, not just .tokenize.\n// This regex does NOT fully implement the tokenization rules described above.\n// Instead, it gives runs of whitespace their own \"token\". The tokenize method\n// then handles stitching whitespace tokens onto adjacent word or punctuation\n// tokens.\nconst tokenizeIncludingWhitespace = new RegExp(`[${extendedWordChars}]+|\\\\s+|[^${extendedWordChars}]`, 'ug');\nclass WordDiff extends Diff {\n    equals(left, right, options) {\n        if (options.ignoreCase) {\n            left = left.toLowerCase();\n            right = right.toLowerCase();\n        }\n        return left.trim() === right.trim();\n    }\n    tokenize(value, options = {}) {\n        let parts;\n        if (options.intlSegmenter) {\n            const segmenter = options.intlSegmenter;\n            if (segmenter.resolvedOptions().granularity != 'word') {\n                throw new Error('The segmenter passed must have a granularity of \"word\"');\n            }\n            parts = Array.from(segmenter.segment(value), segment => segment.segment);\n        }\n        else {\n            parts = value.match(tokenizeIncludingWhitespace) || [];\n        }\n        const tokens = [];\n        let prevPart = null;\n        parts.forEach(part => {\n            if ((/\\s/).test(part)) {\n                if (prevPart == null) {\n                    tokens.push(part);\n                }\n                else {\n                    tokens.push(tokens.pop() + part);\n                }\n            }\n            else if (prevPart != null && (/\\s/).test(prevPart)) {\n                if (tokens[tokens.length - 1] == prevPart) {\n                    tokens.push(tokens.pop() + part);\n                }\n                else {\n                    tokens.push(prevPart + part);\n                }\n            }\n            else {\n                tokens.push(part);\n            }\n            prevPart = part;\n        });\n        return tokens;\n    }\n    join(tokens) {\n        // Tokens being joined here will always have appeared consecutively in the\n        // same text, so we can simply strip off the leading whitespace from all the\n        // tokens except the first (and except any whitespace-only tokens - but such\n        // a token will always be the first and only token anyway) and then join them\n        // and the whitespace around words and punctuation will end up correct.\n        return tokens.map((token, i) => {\n            if (i == 0) {\n                return token;\n            }\n            else {\n                return token.replace((/^\\s+/), '');\n            }\n        }).join('');\n    }\n    postProcess(changes, options) {\n        if (!changes || options.oneChangePerToken) {\n            return changes;\n        }\n        let lastKeep = null;\n        // Change objects representing any insertion or deletion since the last\n        // \"keep\" change object. There can be at most one of each.\n        let insertion = null;\n        let deletion = null;\n        changes.forEach(change => {\n            if (change.added) {\n                insertion = change;\n            }\n            else if (change.removed) {\n                deletion = change;\n            }\n            else {\n                if (insertion || deletion) { // May be false at start of text\n                    dedupeWhitespaceInChangeObjects(lastKeep, deletion, insertion, change);\n                }\n                lastKeep = change;\n                insertion = null;\n                deletion = null;\n            }\n        });\n        if (insertion || deletion) {\n            dedupeWhitespaceInChangeObjects(lastKeep, deletion, insertion, null);\n        }\n        return changes;\n    }\n}\nexport const wordDiff = new WordDiff();\nexport function diffWords(oldStr, newStr, options) {\n    // This option has never been documented and never will be (it's clearer to\n    // just call `diffWordsWithSpace` directly if you need that behavior), but\n    // has existed in jsdiff for a long time, so we retain support for it here\n    // for the sake of backwards compatibility.\n    if ((options === null || options === void 0 ? void 0 : options.ignoreWhitespace) != null && !options.ignoreWhitespace) {\n        return diffWordsWithSpace(oldStr, newStr, options);\n    }\n    return wordDiff.diff(oldStr, newStr, options);\n}\nfunction dedupeWhitespaceInChangeObjects(startKeep, deletion, insertion, endKeep) {\n    // Before returning, we tidy up the leading and trailing whitespace of the\n    // change objects to eliminate cases where trailing whitespace in one object\n    // is repeated as leading whitespace in the next.\n    // Below are examples of the outcomes we want here to explain the code.\n    // I=insert, K=keep, D=delete\n    // 1. diffing 'foo bar baz' vs 'foo baz'\n    //    Prior to cleanup, we have K:'foo ' D:' bar ' K:' baz'\n    //    After cleanup, we want:   K:'foo ' D:'bar ' K:'baz'\n    //\n    // 2. Diffing 'foo bar baz' vs 'foo qux baz'\n    //    Prior to cleanup, we have K:'foo ' D:' bar ' I:' qux ' K:' baz'\n    //    After cleanup, we want K:'foo ' D:'bar' I:'qux' K:' baz'\n    //\n    // 3. Diffing 'foo\\nbar baz' vs 'foo baz'\n    //    Prior to cleanup, we have K:'foo ' D:'\\nbar ' K:' baz'\n    //    After cleanup, we want K'foo' D:'\\nbar' K:' baz'\n    //\n    // 4. Diffing 'foo baz' vs 'foo\\nbar baz'\n    //    Prior to cleanup, we have K:'foo\\n' I:'\\nbar ' K:' baz'\n    //    After cleanup, we ideally want K'foo' I:'\\nbar' K:' baz'\n    //    but don't actually manage this currently (the pre-cleanup change\n    //    objects don't contain enough information to make it possible).\n    //\n    // 5. Diffing 'foo   bar baz' vs 'foo  baz'\n    //    Prior to cleanup, we have K:'foo  ' D:'   bar ' K:'  baz'\n    //    After cleanup, we want K:'foo  ' D:' bar ' K:'baz'\n    //\n    // Our handling is unavoidably imperfect in the case where there's a single\n    // indel between keeps and the whitespace has changed. For instance, consider\n    // diffing 'foo\\tbar\\nbaz' vs 'foo baz'. Unless we create an extra change\n    // object to represent the insertion of the space character (which isn't even\n    // a token), we have no way to avoid losing information about the texts'\n    // original whitespace in the result we return. Still, we do our best to\n    // output something that will look sensible if we e.g. print it with\n    // insertions in green and deletions in red.\n    // Between two \"keep\" change objects (or before the first or after the last\n    // change object), we can have either:\n    // * A \"delete\" followed by an \"insert\"\n    // * Just an \"insert\"\n    // * Just a \"delete\"\n    // We handle the three cases separately.\n    if (deletion && insertion) {\n        const oldWsPrefix = leadingWs(deletion.value);\n        const oldWsSuffix = trailingWs(deletion.value);\n        const newWsPrefix = leadingWs(insertion.value);\n        const newWsSuffix = trailingWs(insertion.value);\n        if (startKeep) {\n            const commonWsPrefix = longestCommonPrefix(oldWsPrefix, newWsPrefix);\n            startKeep.value = replaceSuffix(startKeep.value, newWsPrefix, commonWsPrefix);\n            deletion.value = removePrefix(deletion.value, commonWsPrefix);\n            insertion.value = removePrefix(insertion.value, commonWsPrefix);\n        }\n        if (endKeep) {\n            const commonWsSuffix = longestCommonSuffix(oldWsSuffix, newWsSuffix);\n            endKeep.value = replacePrefix(endKeep.value, newWsSuffix, commonWsSuffix);\n            deletion.value = removeSuffix(deletion.value, commonWsSuffix);\n            insertion.value = removeSuffix(insertion.value, commonWsSuffix);\n        }\n    }\n    else if (insertion) {\n        // The whitespaces all reflect what was in the new text rather than\n        // the old, so we essentially have no information about whitespace\n        // insertion or deletion. We just want to dedupe the whitespace.\n        // We do that by having each change object keep its trailing\n        // whitespace and deleting duplicate leading whitespace where\n        // present.\n        if (startKeep) {\n            const ws = leadingWs(insertion.value);\n            insertion.value = insertion.value.substring(ws.length);\n        }\n        if (endKeep) {\n            const ws = leadingWs(endKeep.value);\n            endKeep.value = endKeep.value.substring(ws.length);\n        }\n        // otherwise we've got a deletion and no insertion\n    }\n    else if (startKeep && endKeep) {\n        const newWsFull = leadingWs(endKeep.value), delWsStart = leadingWs(deletion.value), delWsEnd = trailingWs(deletion.value);\n        // Any whitespace that comes straight after startKeep in both the old and\n        // new texts, assign to startKeep and remove from the deletion.\n        const newWsStart = longestCommonPrefix(newWsFull, delWsStart);\n        deletion.value = removePrefix(deletion.value, newWsStart);\n        // Any whitespace that comes straight before endKeep in both the old and\n        // new texts, and hasn't already been assigned to startKeep, assign to\n        // endKeep and remove from the deletion.\n        const newWsEnd = longestCommonSuffix(removePrefix(newWsFull, newWsStart), delWsEnd);\n        deletion.value = removeSuffix(deletion.value, newWsEnd);\n        endKeep.value = replacePrefix(endKeep.value, newWsFull, newWsEnd);\n        // If there's any whitespace from the new text that HASN'T already been\n        // assigned, assign it to the start:\n        startKeep.value = replaceSuffix(startKeep.value, newWsFull, newWsFull.slice(0, newWsFull.length - newWsEnd.length));\n    }\n    else if (endKeep) {\n        // We are at the start of the text. Preserve all the whitespace on\n        // endKeep, and just remove whitespace from the end of deletion to the\n        // extent that it overlaps with the start of endKeep.\n        const endKeepWsPrefix = leadingWs(endKeep.value);\n        const deletionWsSuffix = trailingWs(deletion.value);\n        const overlap = maximumOverlap(deletionWsSuffix, endKeepWsPrefix);\n        deletion.value = removeSuffix(deletion.value, overlap);\n    }\n    else if (startKeep) {\n        // We are at the END of the text. Preserve all the whitespace on\n        // startKeep, and just remove whitespace from the start of deletion to\n        // the extent that it overlaps with the end of startKeep.\n        const startKeepWsSuffix = trailingWs(startKeep.value);\n        const deletionWsPrefix = leadingWs(deletion.value);\n        const overlap = maximumOverlap(startKeepWsSuffix, deletionWsPrefix);\n        deletion.value = removePrefix(deletion.value, overlap);\n    }\n}\nclass WordsWithSpaceDiff extends Diff {\n    tokenize(value) {\n        // Slightly different to the tokenizeIncludingWhitespace regex used above in\n        // that this one treats each individual newline as a distinct tokens, rather\n        // than merging them into other surrounding whitespace. This was requested\n        // in https://github.com/kpdecker/jsdiff/issues/180 &\n        //    https://github.com/kpdecker/jsdiff/issues/211\n        const regex = new RegExp(`(\\\\r?\\\\n)|[${extendedWordChars}]+|[^\\\\S\\\\n\\\\r]+|[^${extendedWordChars}]`, 'ug');\n        return value.match(regex) || [];\n    }\n}\nexport const wordsWithSpaceDiff = new WordsWithSpaceDiff();\nexport function diffWordsWithSpace(oldStr, newStr, options) {\n    return wordsWithSpaceDiff.diff(oldStr, newStr, options);\n}\n","import Diff from './base.js';\nimport { generateOptions } from '../util/params.js';\nclass LineDiff extends Diff {\n    constructor() {\n        super(...arguments);\n        this.tokenize = tokenize;\n    }\n    equals(left, right, options) {\n        // If we're ignoring whitespace, we need to normalise lines by stripping\n        // whitespace before checking equality. (This has an annoying interaction\n        // with newlineIsToken that requires special handling: if newlines get their\n        // own token, then we DON'T want to trim the *newline* tokens down to empty\n        // strings, since this would cause us to treat whitespace-only line content\n        // as equal to a separator between lines, which would be weird and\n        // inconsistent with the documented behavior of the options.)\n        if (options.ignoreWhitespace) {\n            if (!options.newlineIsToken || !left.includes('\\n')) {\n                left = left.trim();\n            }\n            if (!options.newlineIsToken || !right.includes('\\n')) {\n                right = right.trim();\n            }\n        }\n        else if (options.ignoreNewlineAtEof && !options.newlineIsToken) {\n            if (left.endsWith('\\n')) {\n                left = left.slice(0, -1);\n            }\n            if (right.endsWith('\\n')) {\n                right = right.slice(0, -1);\n            }\n        }\n        return super.equals(left, right, options);\n    }\n}\nexport const lineDiff = new LineDiff();\nexport function diffLines(oldStr, newStr, options) {\n    return lineDiff.diff(oldStr, newStr, options);\n}\nexport function diffTrimmedLines(oldStr, newStr, options) {\n    options = generateOptions(options, { ignoreWhitespace: true });\n    return lineDiff.diff(oldStr, newStr, options);\n}\n// Exported standalone so it can be used from jsonDiff too.\nexport function tokenize(value, options) {\n    if (options.stripTrailingCr) {\n        // remove one \\r before \\n to match GNU diff's --strip-trailing-cr behavior\n        value = value.replace(/\\r\\n/g, '\\n');\n    }\n    const retLines = [], linesAndNewlines = value.split(/(\\n|\\r\\n)/);\n    // Ignore the final empty token that occurs if the string ends with a new line\n    if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n        linesAndNewlines.pop();\n    }\n    // Merge the content and line separators into single tokens\n    for (let i = 0; i < linesAndNewlines.length; i++) {\n        const line = linesAndNewlines[i];\n        if (i % 2 && !options.newlineIsToken) {\n            retLines[retLines.length - 1] += line;\n        }\n        else {\n            retLines.push(line);\n        }\n    }\n    return retLines;\n}\n","import Diff from './base.js';\nclass ArrayDiff extends Diff {\n    tokenize(value) {\n        return value.slice();\n    }\n    join(value) {\n        return value;\n    }\n    removeEmpty(value) {\n        return value;\n    }\n}\nexport const arrayDiff = new ArrayDiff();\nexport function diffArrays(oldArr, newArr, options) {\n    return arrayDiff.diff(oldArr, newArr, options);\n}\n","/**\n * Converters for tracking changes and CriticMarkup\n *\n * Architecture:\n * - Store changes as structured TextChange[] objects\n * - Convert to CriticMarkup for UI display\n * - Apply changes to produce clean markdown for Git export\n */\n\nimport * as Diff from 'diff';\nimport type { TextChange } from '@/types';\n\n/**\n * Generate granular changes from old and new content.\n * Uses a line-level diff to preserve structural constructs like lists and tables.\n */\nexport function generateChanges(\n  oldContent: string,\n  newContent: string\n): TextChange[] {\n  const changes: TextChange[] = [];\n  const diffs = Diff.diffLines(oldContent, newContent);\n  let position = 0;\n\n  for (let i = 0; i < diffs.length; i++) {\n    const part = diffs[i];\n    if (!part) {\n      continue;\n    }\n    const value = part.value ?? '';\n\n    if (part.added) {\n      changes.push({\n        type: 'addition',\n        position,\n        length: value.length,\n        text: value,\n      });\n      continue;\n    }\n\n    if (part.removed) {\n      const next = diffs[i + 1];\n\n      if (next && next.added) {\n        const nextValue = next.value ?? '';\n        const wordDiffs = Diff.diffWordsWithSpace(value, nextValue);\n        let localPos = position;\n\n        wordDiffs.forEach((diff) => {\n          if (diff.added) {\n            changes.push({\n              type: 'addition',\n              position: localPos,\n              length: diff.value.length,\n              text: diff.value,\n            });\n          } else if (diff.removed) {\n            changes.push({\n              type: 'deletion',\n              position: localPos,\n              length: diff.value.length,\n              text: diff.value,\n            });\n            localPos += diff.value.length;\n          } else {\n            localPos += diff.value.length;\n          }\n        });\n\n        position += value.length;\n        i++; // skip paired addition\n        continue;\n      }\n\n      changes.push({\n        type: 'deletion',\n        position,\n        length: value.length,\n        text: value,\n      });\n      position += value.length;\n      continue;\n    }\n\n    position += value.length;\n  }\n\n  return changes;\n}\n\n/**\n * Apply changes to CriticMarkup syntax for UI display\n * Returns markdown with {++additions++} and {--deletions--}\n */\nexport function changesToCriticMarkup(\n  oldContent: string,\n  changes: TextChange[]\n): string {\n  if (changes.length === 0) {\n    return oldContent;\n  }\n\n  const newContent = applyChanges(oldContent, changes);\n  const oldTokens = tokenizeMarkdown(oldContent);\n  const newTokens = tokenizeMarkdown(newContent);\n  const parts = Diff.diffArrays(oldTokens, newTokens);\n  const result: string[] = [];\n\n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i];\n    if (!part) {\n      continue;\n    }\n    const partValue = Array.isArray(part.value) ? (part.value as string[]) : [];\n\n    if (part.added) {\n      partValue.forEach((token) => {\n        result.push(formatBlock(token, 'addition'));\n      });\n      continue;\n    }\n\n    if (part.removed) {\n      const next = parts[i + 1];\n      if (next && next.added) {\n        const nextValue = Array.isArray(next.value)\n          ? (next.value as string[])\n          : [];\n        result.push(...formatBlockPair(partValue, nextValue));\n        i++;\n      } else {\n        partValue.forEach((token) => {\n          result.push(formatBlock(token, 'deletion'));\n        });\n      }\n      continue;\n    }\n\n    result.push(...partValue);\n  }\n\n  return result.join('');\n}\n\ntype ChangeKind = 'addition' | 'deletion';\n\nfunction formatBlock(text: string, kind: ChangeKind): string {\n  if (text.trim().length === 0) {\n    return kind === 'addition' ? text : '';\n  }\n\n  return splitIntoLines(text)\n    .map((line) => formatLine(line, kind))\n    .join('');\n}\n\nfunction formatBlockPair(oldBlocks: string[], newBlocks: string[]): string[] {\n  const result: string[] = [];\n  const m = oldBlocks.length;\n  const n = newBlocks.length;\n  const oldMeta = oldBlocks.map((block) => ({\n    block,\n    normalized: normalizeBlock(block),\n    signature: blockSignature(block),\n  }));\n  const newMeta = newBlocks.map((block) => ({\n    block,\n    normalized: normalizeBlock(block),\n    signature: blockSignature(block),\n  }));\n\n  const lcs: number[][] = Array.from({ length: m + 1 }, () =>\n    Array(n + 1).fill(0)\n  );\n\n  for (let i = m - 1; i >= 0; i--) {\n    const currentRow = lcs[i] ?? (lcs[i] = Array(n + 1).fill(0));\n    const nextRow = lcs[i + 1] ?? [];\n    for (let j = n - 1; j >= 0; j--) {\n      const oldEntry = oldMeta[i];\n      const newEntry = newMeta[j];\n      const diag = nextRow[j + 1] ?? 0;\n      const down = nextRow[j] ?? 0;\n      const right = currentRow[j + 1] ?? 0;\n      if (\n        oldEntry &&\n        newEntry &&\n        oldEntry.normalized === newEntry.normalized &&\n        oldEntry.signature === newEntry.signature\n      ) {\n        currentRow[j] = 1 + diag;\n      } else {\n        currentRow[j] = Math.max(down, right);\n      }\n    }\n  }\n\n  let i = 0;\n  let j = 0;\n\n  while (i < m && j < n) {\n    const oldEntry = oldMeta[i];\n    const newEntry = newMeta[j];\n    if (!oldEntry || !newEntry) {\n      break;\n    }\n\n    if (\n      oldEntry.normalized === newEntry.normalized &&\n      oldEntry.signature === newEntry.signature\n    ) {\n      result.push(newEntry.block);\n      i++;\n      j++;\n      continue;\n    }\n\n    const skipOld = lcs[i + 1]?.[j] ?? 0;\n    const skipNew = lcs[i]?.[j + 1] ?? 0;\n\n    if (skipOld === skipNew) {\n      result.push(formatBlockSubstitution(oldEntry.block, newEntry.block));\n      i++;\n      j++;\n    } else if (skipOld > skipNew) {\n      result.push(formatBlock(oldEntry.block, 'deletion'));\n      i++;\n    } else {\n      result.push(formatBlock(newEntry.block, 'addition'));\n      j++;\n    }\n  }\n\n  while (i < m) {\n    const entry = oldMeta[i];\n    if (entry) {\n      result.push(formatBlock(entry.block, 'deletion'));\n    }\n    i++;\n  }\n\n  while (j < n) {\n    const entry = newMeta[j];\n    if (entry) {\n      result.push(formatBlock(entry.block, 'addition'));\n    }\n    j++;\n  }\n\n  return result;\n}\n\nfunction formatBlockSubstitution(\n  oldSegment: string,\n  newSegment: string\n): string {\n  const oldLines = splitIntoLines(oldSegment);\n  const newLines = splitIntoLines(newSegment);\n  const max = Math.max(oldLines.length, newLines.length);\n  const buffer: string[] = [];\n\n  for (let index = 0; index < max; index++) {\n    const oldLine = oldLines[index];\n    const newLine = newLines[index];\n\n    if (oldLine !== undefined && newLine !== undefined) {\n      if (\n        isListItemLine(oldLine) &&\n        isListItemLine(newLine) &&\n        normalizeListMarker(getListMarker(oldLine)) ===\n          normalizeListMarker(getListMarker(newLine))\n      ) {\n        buffer.push(formatListLineChange(oldLine, newLine));\n      } else if (isTableLine(oldLine) && isTableLine(newLine)) {\n        buffer.push(formatTableLineChange(oldLine, newLine));\n      } else {\n        buffer.push(formatLineDiff(oldLine, newLine));\n      }\n    } else if (oldLine !== undefined) {\n      buffer.push(formatLine(oldLine, 'deletion'));\n    } else if (newLine !== undefined) {\n      buffer.push(formatLine(newLine, 'addition'));\n    }\n  }\n\n  return buffer.join('');\n}\n\nfunction formatLineDiff(oldLine: string, newLine: string): string {\n  const { content: oldContent, newline: oldBreak } = splitLine(oldLine);\n  const { content: newContent, newline: newBreak } = splitLine(newLine);\n\n  const { prefix: oldPrefix, body: oldBody } = splitListPrefix(oldContent);\n  const { prefix: newPrefix, body: newBody } = splitListPrefix(newContent);\n\n  if (oldPrefix !== newPrefix) {\n    return formatLine(oldLine, 'deletion') + formatLine(newLine, 'addition');\n  }\n\n  const diffs = Diff.diffWordsWithSpace(oldBody, newBody);\n  let lineResult = oldPrefix;\n\n  diffs.forEach((diff) => {\n    if (diff.added) {\n      // If addition starts with space, put the space outside the markup\n      if (diff.value.startsWith(' ') && diff.value.length > 1) {\n        lineResult += ' ' + wrapWithMarkup(diff.value.slice(1), 'addition');\n      } else {\n        lineResult += wrapWithMarkup(diff.value, 'addition');\n      }\n    } else if (diff.removed) {\n      // Keep deletions as-is (including trailing/leading spaces)\n      lineResult += wrapWithMarkup(diff.value, 'deletion');\n    } else {\n      lineResult += diff.value;\n    }\n  });\n\n  return `${lineResult}${newBreak || oldBreak}`;\n}\n\nfunction formatListLineChange(oldLine: string, newLine: string): string {\n  const { content: oldContent, newline: oldNewline } = splitLine(oldLine);\n  const { content: newContent, newline: newNewline } = splitLine(newLine);\n  const newPrefix = splitListPrefix(newContent).prefix;\n  const oldBody = splitListPrefix(oldContent).body;\n  const newBody = splitListPrefix(newContent).body;\n\n  if (normalizeBlock(oldContent) === normalizeBlock(newContent)) {\n    return `${newContent}${newNewline || oldNewline}`;\n  }\n\n  // Use the new line's prefix (with proper spacing)\n  const prefix = newPrefix;\n  const newline = newNewline || oldNewline;\n\n  const diffs = Diff.diffWordsWithSpace(oldBody, newBody);\n  const hasAdditions = diffs.some((diff) => diff.added);\n  const hasDeletions = diffs.some((diff) => diff.removed);\n  const hasUnchanged = diffs.some(\n    (diff) => !diff.added && !diff.removed && diff.value.trim().length > 0\n  );\n\n  if (hasAdditions && hasDeletions && !hasUnchanged) {\n    return `${prefix}${wrapWithSubstitution(oldBody, newBody)}${newline}`;\n  }\n\n  let trimmedResult = '';\n\n  diffs.forEach((diff) => {\n    if (diff.added) {\n      // If addition starts with space, put the space outside the markup\n      if (diff.value.startsWith(' ') && diff.value.length > 1) {\n        trimmedResult += ' ' + wrapWithMarkup(diff.value.slice(1), 'addition');\n      } else {\n        trimmedResult += wrapWithMarkup(diff.value, 'addition');\n      }\n    } else if (diff.removed) {\n      // Keep deletions as-is (including trailing/leading spaces)\n      trimmedResult += wrapWithMarkup(diff.value, 'deletion');\n    } else {\n      trimmedResult += diff.value;\n    }\n  });\n\n  const result = `${prefix}${trimmedResult}`;\n  if (result.trim() === prefix.trim()) {\n    return `${prefix}${wrapWithMarkup(newBody, 'addition')}${newline}`;\n  }\n\n  return `${result}${newline}`;\n}\n\nfunction formatTableLineChange(oldLine: string, newLine: string): string {\n  const { content: oldContent, newline } = splitLine(oldLine);\n  const { content: newContent } = splitLine(newLine);\n\n  if (isAlignmentRow(oldContent) && isAlignmentRow(newContent)) {\n    return `${newContent}${newline || ''}`;\n  }\n\n  const oldCells = oldContent.split('|');\n  const newCells = newContent.split('|');\n  const cellCount = Math.max(oldCells.length, newCells.length);\n  const formattedCells: string[] = [];\n\n  for (let i = 0; i < cellCount; i++) {\n    const oldCell = oldCells[i] ?? '';\n    const newCell = newCells[i] ?? '';\n\n    if (i === 0 || i === cellCount - 1) {\n      formattedCells.push(newCell || oldCell);\n      continue;\n    }\n\n    formattedCells.push(formatTableCellChange(oldCell, newCell));\n  }\n\n  return `${formattedCells.join('|')}${newline || ''}`;\n}\n\nfunction formatLine(line: string, kind: ChangeKind): string {\n  const { content, newline } = splitLine(line);\n  if (!content.trim()) {\n    return kind === 'addition' ? content + newline : newline;\n  }\n\n  const { prefix, body } = splitListPrefix(content);\n\n  if (prefix) {\n    // Keep list markers outside CriticMarkup so Markdown still recognizes the list\n    // Fall back to wrapping the full line when the body is empty (e.g. placeholder items)\n    if (body.trim().length === 0) {\n      const fullLine = `${prefix}${body}`;\n      return `${wrapWithMarkup(fullLine, kind)}${newline}`;\n    }\n\n    return `${prefix}${wrapWithMarkup(body, kind)}${newline}`;\n  }\n\n  if (isTableLine(content)) {\n    return formatTableLine('', content, kind) + newline;\n  }\n\n  return `${wrapWithMarkup(content, kind)}${newline}`;\n}\n\nfunction wrapWithMarkup(content: string, kind: ChangeKind): string {\n  if (!content) return '';\n  const text = content;\n  if (!text.trim()) {\n    return text;\n  }\n  return kind === 'addition' ? `{++${text}++}` : `{--${text}--}`;\n}\n\nfunction wrapWithSubstitution(oldContent: string, newContent: string): string {\n  const oldText = oldContent.trim();\n  const newText = newContent.trim();\n  if (!oldText && !newText) {\n    return newContent;\n  }\n\n  const leading = newContent.match(/^\\s*/)?.[0] ?? '';\n  const trailing = newContent.match(/\\s*$/)?.[0] ?? '';\n\n  return `${leading}{~~${oldText}~>${newText}~~}${trailing}`;\n}\n\nfunction formatTableCellChange(oldCell: string, newCell: string): string {\n  const oldTrimmed = oldCell.trim();\n  const newTrimmed = newCell.trim();\n\n  if (oldTrimmed === newTrimmed) {\n    return newCell || oldCell;\n  }\n\n  const leadingMatch = newCell.match(/^\\s*/);\n  const trailingMatch = newCell.match(/\\s*$/);\n  const leading: string = leadingMatch?.[0] ?? '';\n  const trailing: string = trailingMatch?.[0] ?? '';\n\n  const diffs = Diff.diffWordsWithSpace(oldTrimmed, newTrimmed);\n  let result = '';\n\n  diffs.forEach((diff) => {\n    const value = diff.value ?? '';\n    if (diff.added) {\n      result += wrapWithMarkup(value, 'addition');\n    } else if (diff.removed) {\n      result += wrapWithMarkup(value, 'deletion');\n    } else {\n      result += value;\n    }\n  });\n\n  return `${leading}${result}${trailing}`;\n}\n\nfunction splitLine(line: string): { content: string; newline: string } {\n  if (line.endsWith('\\n')) {\n    return { content: line.slice(0, -1), newline: '\\n' };\n  }\n  return { content: line, newline: '' };\n}\n\nfunction splitListPrefix(content: string): { prefix: string; body: string } {\n  const match = content.match(/^(\\s*(?:[-*+]|\\d+[.)])\\s+)(.*)$/);\n  if (match) {\n    const [, prefixMatch = '', bodyMatch = ''] = match;\n    return { prefix: prefixMatch, body: bodyMatch };\n  }\n  return { prefix: '', body: content };\n}\n\nfunction splitIntoLines(text: string): string[] {\n  if (text === '') return [];\n  return text.match(/[^\\n]*\\n?/g)?.filter((line) => line.length > 0) ?? [];\n}\n\nfunction getListMarker(line: string): string | null {\n  const { content } = splitLine(line);\n  const match = content.match(/^(\\s*(?:[-*+]|\\d+[.)])\\s+)/);\n  return match?.[0] ?? null;\n}\n\nfunction normalizeListMarker(marker: string | null): string | null {\n  if (!marker) return null;\n  // Normalize to single space after marker, preserve leading indent\n  return marker.replace(/^(\\s*)([-*+]|\\d+[.)])\\s+/, '$1$2 ');\n}\n\nfunction isTableLine(body: string): boolean {\n  const trimmed = body.trim();\n  if (!trimmed.includes('|')) return false;\n  const pipeCount = (trimmed.match(/\\|/g) || []).length;\n  return pipeCount >= 2;\n}\n\nfunction isAlignmentRow(line: string): boolean {\n  const trimmed = line.trim();\n  if (!trimmed.includes('|')) return false;\n  const cells = trimmed.split('|').filter((cell) => cell.length > 0);\n  return (\n    cells.length > 0 && cells.every((cell) => /^:?-+:?$/.test(cell.trim()))\n  );\n}\n\nfunction formatTableLine(\n  prefix: string,\n  body: string,\n  kind: ChangeKind\n): string {\n  const cells = body.split('|');\n  if (cells.length < 2) {\n    return `${prefix}${wrapWithMarkup(body, kind)}`;\n  }\n\n  const formatted = cells\n    .map((cell, index) => {\n      if (index === 0 || index === cells.length - 1) {\n        return cell;\n      }\n      const trimmed = cell.trim();\n      if (!trimmed || /^:?-+:?$/.test(trimmed)) {\n        return cell;\n      }\n\n      const leadingMatch = cell.match(/^\\s*/);\n      const trailingMatch = cell.match(/\\s*$/);\n      const leading: string = leadingMatch?.[0] ?? '';\n      const trailing: string = trailingMatch?.[0] ?? '';\n      const inner = cell.slice(leading.length, cell.length - trailing.length);\n\n      return `${leading}${wrapWithMarkup(inner || ' ', kind)}${trailing}`;\n    })\n    .join('|');\n\n  return `${prefix}${formatted}`;\n}\n\nfunction tokenizeMarkdown(content: string): string[] {\n  const lines = splitIntoLines(content);\n  const tokens: string[] = [];\n  let index = 0;\n\n  while (index < lines.length) {\n    const line = lines[index];\n    if (!line) {\n      break;\n    }\n\n    if (isListItemLine(line)) {\n      const indent = getIndentWidth(line);\n      let token = line;\n      index++;\n\n      // Collect continuation lines (indented more than the list item)\n      while (index < lines.length) {\n        const nextLine = lines[index];\n        if (!nextLine) {\n          break;\n        }\n\n        // Empty line ends the list item token but should stay attached so\n        // subsequent neutral blocks don't split the diff pairing.\n        if (nextLine.trim() === '') {\n          token += nextLine;\n          index++;\n          break;\n        }\n\n        // If next line is also a list item at same or less indent, stop\n        if (isListItemLine(nextLine)) {\n          const nextIndent = getIndentWidth(nextLine);\n          if (nextIndent <= indent) {\n            break;\n          }\n        }\n\n        // If it's a continuation line (indented more), include it\n        if (isContinuationLine(nextLine, indent)) {\n          token += nextLine;\n          index++;\n          continue;\n        }\n\n        // Otherwise, stop\n        break;\n      }\n\n      tokens.push(token);\n    } else {\n      tokens.push(line);\n      index++;\n    }\n  }\n\n  return tokens;\n}\n\nfunction normalizeBlock(block: string): string {\n  return stripListFormatting(block);\n}\n\nfunction blockSignature(block: string): string {\n  const trimmed = block.replace(/[ \\t]+$/gm, '').trimEnd();\n  const lines = trimmed.split(/\\r?\\n/);\n  return lines\n    .map((line) => {\n      const { prefix } = splitListPrefix(line);\n      if (!prefix) {\n        return 'paragraph';\n      }\n      const indentMatch = prefix.match(/^\\s*/);\n      const indentLength = (indentMatch?.[0] ?? '').length;\n      const markerMatch = prefix\n        .trim()\n        .replace(/\\d+/g, '#')\n        .match(/^([-*+]|#(?:[.)]?))/);\n      const marker = markerMatch?.[0] ?? prefix.trim();\n      return `${indentLength}:${marker}`;\n    })\n    .join('|');\n}\n\nfunction isListItemLine(line: string): boolean {\n  return /^(\\s*)([-*+]|\\d+[.)])\\s/.test(line);\n}\n\nfunction getIndentWidth(line: string): number {\n  const match = line.match(/^(\\s*)/);\n  return match?.[1]?.length ?? 0;\n}\n\nfunction isContinuationLine(line: string, baseIndent: number): boolean {\n  if (!line.trim()) return true;\n  const indent = getIndentWidth(line);\n  return indent > baseIndent;\n}\n\nfunction stripListFormatting(block: string): string {\n  const lines = block.split(/\\r?\\n/);\n  const normalized = lines\n    .map((line) => {\n      if (!line.trim()) {\n        return '';\n      }\n      const { prefix, body } = splitListPrefix(line);\n      const cleanedBody = removeMarkupForNormalization(body);\n      if (!prefix) {\n        return cleanedBody.trim();\n      }\n      const normalizedPrefix = prefix.replace(/\\s+/g, ' ').trimEnd();\n      const trimmedBody = cleanedBody.trim();\n      return trimmedBody.length > 0\n        ? `${normalizedPrefix} ${trimmedBody}`\n        : normalizedPrefix;\n    })\n    .filter((line) => line.length > 0);\n\n  return normalized.join('\\n');\n}\n\nfunction removeMarkupForNormalization(text: string): string {\n  return text\n    .replace(/\\{~~([^~]*?)~>([^]*?)~~\\}/g, '$2')\n    .replace(/\\{--([^]*?)--\\}/g, '')\n    .replace(/\\{\\+\\+([^]*?)\\+\\+\\}/g, '$1')\n    .replace(/\\{==([^]*?)==\\}/g, '$1')\n    .replace(/\\{>>([^]*?)<<\\}/g, '')\n    .trim();\n}\n\n/**\n * Apply changes to produce final clean content\n * Used for accepting all changes\n */\nexport function applyChanges(\n  oldContent: string,\n  changes: TextChange[]\n): string {\n  if (changes.length === 0) {\n    return oldContent;\n  }\n\n  // Sort changes by position (reverse order for proper application)\n  const sortedChanges = [...changes].sort((a, b) => b.position - a.position);\n\n  let result = oldContent;\n\n  for (const change of sortedChanges) {\n    if (change.type === 'addition') {\n      // Insert addition at position\n      const before = result.substring(0, change.position);\n      const after = result.substring(change.position);\n      result = before + change.text + after;\n    } else if (change.type === 'deletion') {\n      // Remove deleted text\n      const before = result.substring(0, change.position);\n      const after = result.substring(change.position + change.length);\n      result = before + after;\n    }\n  }\n\n  return result;\n}\n\n/**\n * Remove changes to revert to original content\n * Used for rejecting all changes (returns oldContent without additions)\n */\nexport function revertChanges(\n  oldContent: string,\n  _changes: TextChange[]\n): string {\n  // Simply return oldContent - all changes are based on positions in oldContent\n  // Additions were never in oldContent, deletions are still there\n  return oldContent;\n}\n\n/**\n * Strip all CriticMarkup syntax from content\n * Useful for cleaning up content that has CriticMarkup annotations\n */\nexport function stripCriticMarkup(content: string, acceptMode = true): string {\n  let result = content;\n\n  if (acceptMode) {\n    // Accept mode: keep additions/new, remove deletions/old\n    // Remove deletions: {--text--}\n    result = result.replace(/\\{--[^}]*--\\}/g, '');\n    // Keep addition content: {++text++} -> text\n    result = result.replace(/\\{\\+\\+([^}]*)\\+\\+\\}/g, '$1');\n    // Keep new from substitutions: {~~old~>new~~} -> new\n    result = result.replace(/\\{~~[^~]*~>([^}]*)~~\\}/g, '$1');\n  } else {\n    // Reject mode: keep deletions/old, remove additions/new\n    // Keep deletion content: {--text--} -> text\n    result = result.replace(/\\{--([^}]*)--\\}/g, '$1');\n    // Remove additions: {++text++}\n    result = result.replace(/\\{\\+\\+[^}]*\\+\\+\\}/g, '');\n    // Keep old from substitutions: {~~old~>new~~} -> old\n    result = result.replace(/\\{~~([^~]*)~>[^}]*~~\\}/g, '$1');\n  }\n\n  // Remove comments and highlights (always strip in export)\n  result = result.replace(/\\{>>[^}]*<<\\}/g, '');\n  result = result.replace(/\\{==([^}]*)==\\}/g, '$1');\n\n  return result;\n}\n","/**\n * Changes Module\n * Manages document operations and reconstruction\n */\n\nimport type {\n  Element,\n  Operation,\n  OperationType,\n  OperationData,\n  InsertData,\n  DeleteData,\n  EditData,\n  MoveData,\n  ElementMetadata,\n} from '@/types';\nimport {\n  generateChanges,\n  changesToCriticMarkup,\n  stripCriticMarkup,\n} from './converters';\n\nexport class ChangesModule {\n  private originalElements: Element[] = [];\n  private operations: Operation[] = [];\n  private redoStack: Operation[] = [];\n  private saved: boolean = true;\n\n  /**\n   * Initialize from DOM - parse HTML to extract original elements\n   */\n  public initializeFromDOM(): void {\n    // Select all elements with data-review-id (includes .review-editable divs and header sections)\n    const editableElements = document.querySelectorAll('[data-review-id]');\n\n    this.originalElements = Array.from(editableElements).map((elem) => {\n      const id = elem.getAttribute('data-review-id') || '';\n      const type = elem.getAttribute('data-review-type') || 'Para';\n      const level = elem.getAttribute('data-review-level');\n      const sourceLine = elem.getAttribute('data-review-source-line');\n      const sourceColumn = elem.getAttribute('data-review-source-column');\n\n      const metadata: ElementMetadata = {\n        type: type as Element['metadata']['type'],\n        level: level ? parseInt(level, 10) : undefined,\n        attributes: this.extractAttributes(elem),\n        classes: this.extractClasses(elem),\n      };\n\n      const content = this.extractMarkdownContent(elem);\n\n      const element: Element = {\n        id,\n        content,\n        metadata,\n      };\n\n      if (sourceLine) {\n        element.sourcePosition = {\n          line: parseInt(sourceLine, 10),\n          column: sourceColumn ? parseInt(sourceColumn, 10) : 0,\n        };\n      }\n\n      return element;\n    });\n  }\n\n  /**\n   * Extract markdown content from HTML element\n   *\n   * This function ONLY reads from the embedded data-review-markdown attribute.\n   * It does NOT parse or convert HTML to markdown.\n   *\n   * If the attribute is missing, it throws an error (document not rendered with extension).\n   */\n  private extractMarkdownContent(elem: globalThis.Element): string {\n    const embeddedMarkdown = elem.getAttribute('data-review-markdown');\n\n    if (!embeddedMarkdown) {\n      const id = elem.getAttribute('data-review-id') || 'unknown';\n      throw new Error(\n        `Missing data-review-markdown attribute on element ${id}. ` +\n          `The document was not rendered with the Quarto review extension. ` +\n          `Please render with: quarto render --filter review`\n      );\n    }\n\n    const markdown = this.unescapeHtml(embeddedMarkdown);\n    return this.removeNestedReviewWrappers(markdown);\n  }\n\n  /**\n   * Unescape HTML entities\n   */\n  private unescapeHtml(text: string): string {\n    const map: Record<string, string> = {\n      '&amp;': '&',\n      '&lt;': '<',\n      '&gt;': '>',\n      '&quot;': '\"',\n      '&#39;': \"'\",\n    };\n    return text.replace(\n      /&amp;|&lt;|&gt;|&quot;|&#39;/g,\n      (entity) => map[entity] ?? entity\n    );\n  }\n\n  /**\n   * Extract attributes from element\n   */\n  private extractAttributes(elem: globalThis.Element): Record<string, string> {\n    const attrs: Record<string, string> = {};\n    const child = elem.querySelector(':scope > *:not([data-review-id])');\n\n    if (child) {\n      Array.from(child.attributes).forEach((attr) => {\n        if (!attr.name.startsWith('data-review-')) {\n          attrs[attr.name] = attr.value;\n        }\n      });\n    }\n\n    return attrs;\n  }\n\n  /**\n   * Extract classes from element\n   */\n  private extractClasses(elem: globalThis.Element): string[] {\n    const child = elem.querySelector(':scope > *:not([data-review-id])');\n    if (!child) return [];\n\n    return Array.from(child.classList).filter(\n      (cls) => !cls.startsWith('review-')\n    );\n  }\n\n  /**\n   * Add an operation\n   */\n  public addOperation(\n    type: OperationType,\n    elementId: string,\n    data: OperationData,\n    userId?: string\n  ): void {\n    const operation: Operation = {\n      id: this.generateOperationId(),\n      type,\n      elementId,\n      timestamp: Date.now(),\n      userId,\n      data,\n    };\n\n    this.operations.push(operation);\n    this.redoStack = []; // Clear redo stack when new operation is added\n    this.saved = false;\n  }\n\n  /**\n   * Insert a new element\n   */\n  public insert(\n    content: string,\n    metadata: ElementMetadata,\n    position: InsertData['position'],\n    userId?: string,\n    options?: { parentId?: string; generated?: boolean }\n  ): string {\n    const elementId = `temp-${this.generateOperationId()}`;\n    const data: InsertData = {\n      type: 'insert',\n      content,\n      metadata,\n      position,\n      parentId: options?.parentId,\n      generated: options?.generated,\n    };\n\n    this.addOperation('insert', elementId, data, userId);\n    return elementId;\n  }\n\n  public replaceElementWithSegments(\n    elementId: string,\n    segments: { content: string; metadata: ElementMetadata }[]\n  ): { elementIds: string[]; removedIds: string[] } {\n    const element = this.findElement(elementId);\n    if (!element) {\n      throw new Error(`Element ${elementId} not found`);\n    }\n\n    const normalizedSegments =\n      segments.length > 0\n        ? segments\n        : [\n            {\n              content: '',\n              metadata: element.metadata,\n            },\n          ];\n\n    const existingGeneratedIds = this.getGeneratedSegmentIds(elementId);\n    const resultIds: string[] = [];\n    const removedIds: string[] = [];\n\n    const [firstSegment, ...tailSegments] = normalizedSegments;\n    if (!firstSegment) {\n      return { elementIds: resultIds, removedIds };\n    }\n    this.edit(\n      elementId,\n      firstSegment.content,\n      undefined,\n      firstSegment.metadata\n    );\n    resultIds.push(elementId);\n\n    let lastId = elementId;\n\n    const reuseCount = Math.min(\n      tailSegments.length,\n      existingGeneratedIds.length\n    );\n\n    for (let i = 0; i < reuseCount; i++) {\n      const segment = tailSegments[i];\n      if (!segment) {\n        continue;\n      }\n      const existingId = existingGeneratedIds[i];\n      if (!existingId) {\n        continue;\n      }\n      this.edit(existingId, segment.content, undefined, segment.metadata);\n      resultIds.push(existingId);\n      lastId = existingId;\n    }\n\n    for (let i = reuseCount; i < tailSegments.length; i++) {\n      const segment = tailSegments[i];\n      if (!segment) {\n        continue;\n      }\n      const newId = this.insert(\n        segment.content,\n        segment.metadata,\n        { after: lastId },\n        undefined,\n        { parentId: elementId, generated: true }\n      );\n      resultIds.push(newId);\n      lastId = newId;\n    }\n\n    for (let i = reuseCount; i < existingGeneratedIds.length; i++) {\n      const id = existingGeneratedIds[i];\n      if (!id) continue;\n      this.delete(id);\n      removedIds.push(id);\n    }\n\n    return { elementIds: resultIds, removedIds };\n  }\n\n  /**\n   * Delete an element\n   */\n  public delete(elementId: string, userId?: string): void {\n    const element = this.findElement(elementId);\n    if (!element) {\n      throw new Error(`Element ${elementId} not found`);\n    }\n\n    const data: DeleteData = {\n      type: 'delete',\n      originalContent: element.content,\n      originalMetadata: element.metadata,\n    };\n\n    this.addOperation('delete', elementId, data, userId);\n  }\n\n  /**\n   * Edit an element\n   */\n  public edit(\n    elementId: string,\n    newContent: string,\n    userId?: string,\n    newMetadata?: ElementMetadata\n  ): void {\n    const element = this.findElement(elementId);\n    if (!element) {\n      throw new Error(`Element ${elementId} not found`);\n    }\n\n    const oldContent = element.content;\n    const metadataChanged =\n      newMetadata &&\n      (newMetadata.type !== element.metadata.type ||\n        newMetadata.level !== element.metadata.level ||\n        JSON.stringify(newMetadata.attributes ?? {}) !==\n          JSON.stringify(element.metadata.attributes ?? {}) ||\n        JSON.stringify(newMetadata.classes ?? []) !==\n          JSON.stringify(element.metadata.classes ?? []));\n\n    if (!metadataChanged && oldContent === newContent) return;\n\n    // Generate character-level changes\n    const changes = generateChanges(oldContent, newContent);\n\n    const data: EditData = {\n      type: 'edit',\n      oldContent,\n      newContent,\n      changes,\n    };\n\n    if (metadataChanged) {\n      data.oldMetadata = element.metadata;\n      data.newMetadata = newMetadata;\n    }\n\n    this.addOperation('edit', elementId, data, userId);\n  }\n\n  /**\n   * Move an element\n   */\n  public move(\n    elementId: string,\n    fromPosition: number,\n    toPosition: number,\n    userId?: string\n  ): void {\n    const data: MoveData = {\n      type: 'move',\n      fromPosition,\n      toPosition,\n    };\n\n    this.addOperation('move', elementId, data, userId);\n  }\n\n  /**\n   * Undo last operation\n   */\n  public undo(): boolean {\n    const operation = this.operations.pop();\n    if (!operation) return false;\n\n    this.redoStack.push(operation);\n    this.saved = false;\n    return true;\n  }\n\n  public canUndo(): boolean {\n    return this.operations.length > 0;\n  }\n\n  /**\n   * Redo last undone operation\n   */\n  public redo(): boolean {\n    const operation = this.redoStack.pop();\n    if (!operation) return false;\n\n    this.operations.push(operation);\n    this.saved = false;\n    return true;\n  }\n\n  public canRedo(): boolean {\n    return this.redoStack.length > 0;\n  }\n\n  /**\n   * Get current state by applying operations to original elements\n   */\n  public getCurrentState(): Element[] {\n    let elements = [...this.originalElements];\n\n    for (const operation of this.operations) {\n      elements = this.applyOperation(elements, operation);\n    }\n\n    return elements;\n  }\n\n  /**\n   * Get element by ID from current state\n   * Returns the element with all operations applied\n   */\n  public getElementById(id: string): Element | null {\n    const element = this.findElement(id);\n    return element || null;\n  }\n\n  /**\n   * Get element content by ID from current state\n   * Returns the markdown content with all operations applied\n   */\n  public getElementContent(id: string): string {\n    const element = this.getElementById(id);\n    if (!element) {\n      throw new Error(`Element ${id} not found`);\n    }\n    return element.content;\n  }\n\n  /**\n   * Get element content with tracked changes as CriticMarkup\n   * Shows edits as {++additions++} and {--deletions--}\n   */\n  public getElementContentWithTrackedChanges(id: string): string {\n    const element = this.getElementById(id);\n    if (!element) {\n      throw new Error(`Element ${id} not found`);\n    }\n    const baseline = this.getElementBaseline(id);\n    const targetContent = element.content;\n\n    const relevantOperations = this.operations.filter(\n      (op) => op.elementId === id\n    );\n\n    // If no operations touched this element and baseline matches current, return content\n    if (relevantOperations.length === 0 && baseline === targetContent) {\n      return targetContent;\n    }\n\n    const changes = generateChanges(baseline, targetContent);\n    if (changes.length === 0) {\n      return targetContent;\n    }\n\n    return changesToCriticMarkup(baseline, changes);\n  }\n\n  /**\n   * Apply a single operation to element array\n   */\n  private applyOperation(elements: Element[], operation: Operation): Element[] {\n    switch (operation.type) {\n      case 'insert':\n        return this.applyInsert(elements, operation);\n      case 'delete':\n        return this.applyDelete(elements, operation);\n      case 'edit':\n        return this.applyEdit(elements, operation);\n      case 'move':\n        return this.applyMove(elements, operation);\n      default:\n        return elements;\n    }\n  }\n\n  /**\n   * Apply insert operation\n   */\n  private applyInsert(elements: Element[], operation: Operation): Element[] {\n    const data = operation.data as InsertData;\n    const newElement: Element = {\n      id: operation.elementId,\n      content: data.content,\n      metadata: data.metadata,\n    };\n\n    // Find insertion point\n    if (data.position.after) {\n      const index = elements.findIndex((e) => e.id === data.position.after);\n      if (index !== -1) {\n        elements.splice(index + 1, 0, newElement);\n      }\n    } else if (data.position.before) {\n      const index = elements.findIndex((e) => e.id === data.position.before);\n      if (index !== -1) {\n        elements.splice(index, 0, newElement);\n      }\n    } else {\n      elements.push(newElement);\n    }\n\n    return elements;\n  }\n\n  private getGeneratedSegmentIds(parentId: string): string[] {\n    if (!parentId) {\n      return [];\n    }\n\n    const activeIds = new Set<string>();\n\n    for (const op of this.operations) {\n      if (op.type === 'insert') {\n        const insertData = op.data as InsertData;\n        if (insertData.parentId === parentId) {\n          activeIds.add(op.elementId);\n        }\n      } else if (op.type === 'delete') {\n        if (activeIds.has(op.elementId)) {\n          activeIds.delete(op.elementId);\n        }\n      }\n    }\n\n    if (activeIds.size === 0) {\n      return [];\n    }\n\n    const state = this.getCurrentState();\n    const parentIndex = state.findIndex((el) => el.id === parentId);\n    if (parentIndex === -1) {\n      return [];\n    }\n\n    const orderedIds: string[] = [];\n    for (let i = parentIndex + 1; i < state.length; i++) {\n      const candidate = state[i];\n      if (!candidate) {\n        break;\n      }\n      const candidateId = candidate.id;\n      if (!activeIds.has(candidateId)) {\n        break;\n      }\n      orderedIds.push(candidateId);\n    }\n\n    return orderedIds;\n  }\n\n  /**\n   * Apply delete operation\n   */\n  private applyDelete(elements: Element[], operation: Operation): Element[] {\n    return elements.filter((e) => e.id !== operation.elementId);\n  }\n\n  /**\n   * Apply edit operation\n   */\n  private applyEdit(elements: Element[], operation: Operation): Element[] {\n    const data = operation.data as EditData;\n    return elements.map((e) => {\n      if (e.id === operation.elementId) {\n        const updated: Element = { ...e, content: data.newContent };\n        if (data.newMetadata) {\n          updated.metadata = data.newMetadata;\n        }\n        return updated;\n      }\n      return e;\n    });\n  }\n\n  /**\n   * Apply move operation\n   */\n  private applyMove(elements: Element[], operation: Operation): Element[] {\n    const data = operation.data as MoveData;\n    const element = elements[data.fromPosition];\n\n    if (!element) return elements;\n\n    elements.splice(data.fromPosition, 1);\n    elements.splice(data.toPosition, 0, element);\n\n    return elements;\n  }\n\n  /**\n   * Convert current state to markdown\n   *\n   * This function reconstructs the full document markdown by:\n   * 1. Getting current state (original elements + applied operations)\n   * 2. Using the embedded markdown from each element (stored in e.content)\n   * 3. Joining elements with blank lines\n   *\n   * NO HTML parsing or conversion happens here - all content is already markdown.\n   * The markdown comes from:\n   * - Original: data-review-markdown attributes (set by Lua filter)\n   * - Edits: User-provided markdown strings\n   *\n   * NOTE: This may include CriticMarkup annotations from comments/highlights.\n   * Use toCleanMarkdown() for Git exports to strip CriticMarkup.\n   */\n  public toMarkdown(): string {\n    const elements = this.getCurrentState();\n    return elements.map((e) => e.content).join('\\n\\n');\n  }\n\n  /**\n   * Convert current state to clean markdown suitable for Git commits\n   * Strips all CriticMarkup annotations (comments, highlights, etc.)\n   * and applies tracked changes in accept mode.\n   */\n  public toCleanMarkdown(): string {\n    const elements = this.getCurrentState();\n    return elements.map((e) => stripCriticMarkup(e.content, true)).join('\\n\\n');\n  }\n\n  /**\n   * Remove nested review-editable wrappers (Pandoc div fences) that appear inside lists.\n   * These wrappers are only present to keep Lua filter metadata and should not surface in the editor.\n   */\n  private removeNestedReviewWrappers(markdown: string): string {\n    if (!markdown.includes(':::')) {\n      return markdown;\n    }\n\n    const pattern =\n      /((?:\\r?\\n)?)([ \\t]*):::\\s*\\{[^}]*review-editable[^}]*\\}[ \\t]*(?:\\r?\\n)?([\\s\\S]*?)(?:\\r?\\n)?[ \\t]*:::[^\\S\\r\\n]*(?:\\r?\\n)?/g;\n\n    let cleaned = markdown;\n    let previous: string;\n    do {\n      previous = cleaned;\n      cleaned = cleaned.replace(pattern, (_match, leading, indent, inner) => {\n        const lines = inner.split(/\\r?\\n/);\n        let minIndent = Number.POSITIVE_INFINITY;\n\n        for (const line of lines) {\n          const match = line.match(/^([ \\t]*)(\\S)/);\n          if (match) {\n            minIndent = Math.min(minIndent, match[1].length);\n          }\n        }\n\n        if (!Number.isFinite(minIndent)) {\n          minIndent = 0;\n        }\n\n        const reindented = lines\n          .map((line: string) => {\n            if (!line.trim()) {\n              return '';\n            }\n            const stripped = line.slice(minIndent);\n            return `${indent}${stripped}`;\n          })\n          .join('\\n');\n\n        return `${leading}${reindented}`;\n      });\n    } while (cleaned !== previous);\n\n    return cleaned;\n  }\n\n  /**\n   * Get summary of operations\n   */\n  public summarizeOperations(): string {\n    const counts: Record<string, number> = {};\n\n    for (const op of this.operations) {\n      counts[op.type] = (counts[op.type] || 0) + 1;\n    }\n\n    const parts: string[] = [];\n    if (counts.insert) parts.push(`Added ${counts.insert} element(s)`);\n    if (counts.delete) parts.push(`Deleted ${counts.delete} element(s)`);\n    if (counts.edit) parts.push(`Edited ${counts.edit} element(s)`);\n    if (counts.move) parts.push(`Moved ${counts.move} element(s)`);\n\n    return parts.length > 0 ? parts.join(', ') : 'No changes';\n  }\n\n  /**\n   * Find element by ID in current or original state\n   */\n  private findElement(id: string): Element | undefined {\n    const current = this.getCurrentState();\n    return current.find((e) => e.id === id);\n  }\n\n  private getElementBaseline(id: string): string {\n    const original = this.findOriginalElement(id);\n    if (original) return original.content;\n\n    const firstInsert = this.operations.find(\n      (op) => op.type === 'insert' && op.elementId === id\n    );\n    if (firstInsert) {\n      const data = firstInsert.data as InsertData;\n      return data.content;\n    }\n\n    return '';\n  }\n\n  private findOriginalElement(id: string): Element | undefined {\n    return this.originalElements.find((e) => e.id === id);\n  }\n\n  /**\n   * Generate unique operation ID\n   */\n  private generateOperationId(): string {\n    return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  /**\n   * Check if there are unsaved operations\n   */\n  public hasUnsavedOperations(): boolean {\n    return !this.saved && this.operations.length > 0;\n  }\n\n  /**\n   * Mark as saved\n   */\n  public markAsSaved(): void {\n    this.saved = true;\n  }\n\n  /**\n   * Get operation history\n   */\n  public getOperations(): Readonly<Operation[]> {\n    return this.operations;\n  }\n\n  /**\n   * Clear all operations\n   */\n  public clear(): void {\n    this.operations = [];\n    this.redoStack = [];\n    this.saved = true;\n  }\n}\n\nexport default ChangesModule;\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file = ''\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual = undefined\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected = undefined\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note = undefined\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url = undefined\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","/// <reference lib=\"dom\" />\n\n/* global document */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string | false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const character = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  if (\n    // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n    // yield `null`.\n    character.charCodeAt(character.length - 1) === 59 /* `;` */ &&\n    value !== 'semi'\n  ) {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return character === characterReference ? false : character\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length;\n  let chunkStart = 0;\n  /** @type {Array<unknown>} */\n  let parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}","/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return value\n  // Collapse markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, \" \")\n  // Trim.\n  .replace(/^ | $/g, '')\n  // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","import { asciiAlphanumeric } from 'micromark-util-character';\nimport { encode } from 'micromark-util-encode';\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''));\n  if (!protocol) {\n    return value;\n  }\n  const colon = value.indexOf(':');\n  const questionMark = value.indexOf('?');\n  const numberSign = value.indexOf('#');\n  const slash = value.indexOf('/');\n  if (\n  // If there is no protocol, it’s relative.\n  colon < 0 ||\n  // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n  slash > -1 && colon > slash || questionMark > -1 && colon > questionMark || numberSign > -1 && colon > numberSign ||\n  // It is a protocol, it should be allowed.\n  protocol.test(value.slice(0, colon))) {\n    return value;\n  }\n  return '';\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = [];\n  let index = -1;\n  let start = 0;\n  let skip = 0;\n  while (++index < value.length) {\n    const code = value.charCodeAt(index);\n    /** @type {string} */\n    let replace = '';\n\n    // A correct percent encoded value.\n    if (code === 37 && asciiAlphanumeric(value.charCodeAt(index + 1)) && asciiAlphanumeric(value.charCodeAt(index + 2))) {\n      skip = 2;\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code);\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1);\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next);\n        skip = 1;\n      }\n      // Lone surrogate.\n      else {\n        replace = \"\\uFFFD\";\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code);\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace));\n      start = index + skip + 1;\n      replace = '';\n    }\n    if (skip) {\n      index += skip;\n      skip = 0;\n    }\n  }\n  return result.join('') + value.slice(start);\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { markdownSpace } from 'micromark-util-character';\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      return prefix(code);\n    }\n    return ok(code);\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n    effects.exit(type);\n    return ok(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Initializer}\n *   Content.\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);\n  /** @type {Token} */\n  let previous;\n  return contentStart;\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, contentStart, \"linePrefix\");\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter(\"paragraph\");\n    return lineStart(code);\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(\"chunkText\", {\n      contentType: \"text\",\n      previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return data(code);\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit(\"chunkText\");\n      effects.exit(\"paragraph\");\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit(\"chunkText\");\n      return lineStart;\n    }\n\n    // Data.\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Construct,\n *   ContainerState,\n *   InitialConstruct,\n *   Initializer,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n *   Construct and its state.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n};\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeDocument(effects) {\n  const self = this;\n  /** @type {Array<StackItem>} */\n  const stack = [];\n  let continued = 0;\n  /** @type {TokenizeContext | undefined} */\n  let childFlow;\n  /** @type {Token | undefined} */\n  let childToken;\n  /** @type {number} */\n  let lineStartOffset;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued];\n      self.containerState = item[1];\n      return effects.attempt(item[0].continuation, documentContinue, checkNewContainers)(code);\n    }\n\n    // Done.\n    return checkNewContainers(code);\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++;\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined;\n      if (childFlow) {\n        closeFlow();\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          point = self.events[indexBeforeFlow][1].end;\n          break;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      let index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n      return checkNewContainers(code);\n    }\n    return start(code);\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code);\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code);\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack);\n    }\n\n    // Check if there is a new container.\n    self.containerState = {};\n    return effects.check(containerConstruct, thereIsANewContainer, thereIsNoNewContainer)(code);\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow();\n    exitContainers(continued);\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length;\n    lineStartOffset = self.now().offset;\n    return flowStart(code);\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {};\n    return effects.attempt(containerConstruct, containerContinue, flowStart)(code);\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++;\n    stack.push([self.currentConstruct, self.containerState]);\n    // Try another.\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow();\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    childFlow = childFlow || self.parser.flow(self.now());\n    effects.enter(\"chunkFlow\", {\n      _tokenizer: childFlow,\n      contentType: \"flow\",\n      previous: childToken\n    });\n    return flowContinue(code);\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit(\"chunkFlow\"), true);\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      writeToChild(effects.exit(\"chunkFlow\"));\n      // Get ready for the next line.\n      continued = 0;\n      self.interrupt = undefined;\n      return start;\n    }\n    effects.consume(code);\n    return flowContinue;\n  }\n\n  /**\n   * @param {Token} token\n   *   Token.\n   * @param {boolean | undefined} [endOfFile]\n   *   Whether the token is at the end of the file (default: `false`).\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function writeToChild(token, endOfFile) {\n    const stream = self.sliceStream(token);\n    if (endOfFile) stream.push(null);\n    token.previous = childToken;\n    if (childToken) childToken.next = token;\n    childToken = token;\n    childFlow.defineSkip(token.start);\n    childFlow.write(stream);\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length;\n      while (index--) {\n        if (\n        // The token starts before the line ending…\n        childFlow.events[index][1].start.offset < lineStartOffset && (\n        // …and either is not ended yet…\n        !childFlow.events[index][1].end ||\n        // …or ends after it.\n        childFlow.events[index][1].end.offset > lineStartOffset)) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return;\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {boolean | undefined} */\n      let seen;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end;\n            break;\n          }\n          seen = true;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n    }\n  }\n\n  /**\n   * @param {number} size\n   *   Size.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exitContainers(size) {\n    let index = stack.length;\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index];\n      self.containerState = entry[1];\n      entry[0].exit.call(self, effects);\n    }\n    stack.length = size;\n  }\n  function closeFlow() {\n    childFlow.write([null]);\n    childToken = undefined;\n    childFlow = undefined;\n    self.containerState._closeFlow = undefined;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n *   Tokenizer.\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(effects, effects.attempt(this.parser.constructs.document, ok, nok), \"linePrefix\", this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Event,\n *   Point,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  resolveAll: resolveAllAttention,\n  tokenize: tokenizeAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = {\n            ...events[open][1].end\n          };\n          const end = {\n            ...events[index][1].start\n          };\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: {\n              ...events[open][1].end\n            }\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: {\n              ...events[index][1].start\n            },\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: {\n              ...events[open][1].end\n            },\n            end: {\n              ...events[index][1].start\n            }\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: {\n              ...openingSequence.start\n            },\n            end: {\n              ...closingSequence.end\n            }\n          };\n          events[open][1].end = {\n            ...openingSequence.start\n          };\n          events[index][1].start = {\n            ...closingSequence.end\n          };\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n *   Point.\n * @param {number} offset\n *   Amount to move.\n * @returns {undefined}\n *   Nothing.\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  partial: true,\n  tokenize: tokenizeBlankLine\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit,\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuation\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  concrete: true,\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    partial: true,\n    tokenize: tokenizeCloseStart\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  partial: true,\n  tokenize: tokenizeFurtherStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Previous,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  previous,\n  resolve: resolveCodeText,\n  tokenize: tokenizeCodeText\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push(...newElements)` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @import {Chunk, Event, Token} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else if (otherEvent[1].type === \"linePrefix\" || otherEvent[1].type === \"listItemIndent\") {\n          // Move past.\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = {\n          ...events.get(lineIndex)[1].start\n        };\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n *   Events.\n * @param {number} eventIndex\n *   Index.\n * @returns {Record<string, number>}\n *   Gaps.\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  let tokenizer = token._tokenizer;\n  if (!tokenizer) {\n    tokenizer = context.parser[token.contentType](token.start);\n    if (token._contentTypeTextTrailing) {\n      tokenizer._contentTypeTextTrailing = true;\n    }\n  }\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  resolve: resolveContent,\n  tokenize: tokenizeContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  partial: true,\n  tokenize: tokenizeContinuation\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return enclosedBefore;\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return raw(code);\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return enclosed(code);\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      return enclosedBefore(code);\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? enclosedEscape : enclosed;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return enclosed;\n    }\n    return enclosed(code);\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (!balance && (code === null || code === 41 || markdownLineEndingOrSpace(code))) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code);\n      balance++;\n      return raw;\n    }\n    if (code === 41) {\n      effects.consume(code);\n      balance--;\n      return raw;\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? rawEscape : raw;\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return raw;\n    }\n    return raw(code);\n  }\n}","/**\n * @import {\n *   Effects,\n *   State,\n *   TokenizeContext,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this;\n  let size = 0;\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    effects.enter(stringType);\n    return atBreak;\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (size > 999 || code === null || code === 91 || code === 93 && !seen ||\n    // To do: remove in the future once we’ve switched from\n    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n    // which doesn’t need this.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    code === 94 && !size && '_hiddenFootnoteSupport' in self.parser.constructs) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit(stringType);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return atBreak;\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return labelInside(code);\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (code === null || code === 91 || code === 93 || markdownLineEnding(code) || size++ > 999) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    if (!seen) seen = !markdownSpace(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Effects,\n *   State,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      marker = code === 40 ? 41 : code;\n      return begin;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    return atBreak(code);\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType);\n      return begin(marker);\n    }\n    if (code === null) {\n      return nok(code);\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return factorySpace(effects, atBreak, \"linePrefix\");\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return inside(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? escape : inside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code);\n      return inside;\n    }\n    return inside(code);\n  }\n}","/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      seen = true;\n      return start;\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, start, seen ? \"linePrefix\" : \"lineSuffix\")(code);\n    }\n    return ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  partial: true,\n  tokenize: tokenizeTitleBefore\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  resolve: resolveHeadingAtx,\n  tokenize: tokenizeHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  concrete: true,\n  name: 'htmlFlow',\n  resolveTo: resolveToHtmlFlow,\n  tokenize: tokenizeHtmlFlow\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  partial: true,\n  tokenize: tokenizeBlankLineBefore\n};\nconst nonLazyContinuationStart = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuationStart\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      // Always the case.\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Event,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  resolveAll: resolveAllLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  tokenize: tokenizeLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  /** @type {Array<Event>} */\n  const newEvents = [];\n  while (++index < events.length) {\n    const token = events[index][1];\n    newEvents.push(events[index]);\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      const offset = token.type === \"labelImage\" ? 4 : 2;\n      token.type = \"data\";\n      index += offset;\n    }\n  }\n\n  // If the events are equal, we don't have to copy newEvents to events\n  if (events.length !== newEvents.length) {\n    splice(events, 0, events.length, newEvents);\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n  const label = {\n    type: \"label\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[close][1].end\n    }\n  };\n  const text = {\n    type: \"labelText\",\n    start: {\n      ...events[open + offset + 2][1].end\n    },\n    end: {\n      ...events[close - 2][1].start\n    }\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartImage\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartLink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd,\n  name: 'list',\n  tokenize: tokenizeListStart\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  partial: true,\n  tokenize: tokenizeListItemPrefixWhitespace\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  partial: true,\n  tokenize: tokenizeIndent\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Exiter}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  resolveTo: resolveToSetextUnderline,\n  tokenize: tokenizeSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: {\n      ...events[content][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = {\n      ...events[definition][1].end\n    };\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport { blankLine, content } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeFlow(effects) {\n  const self = this;\n  const initial = effects.attempt(\n  // Try to parse a blank line.\n  blankLine, atBlankEnding,\n  // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), \"linePrefix\")));\n  return initial;\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEndingBlank\");\n    effects.consume(code);\n    effects.exit(\"lineEndingBlank\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}","/**\n * @import {\n *   Code,\n *   InitialConstruct,\n *   Initializer,\n *   Resolver,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n};\nexport const string = initializeFactory('string');\nexport const text = initializeFactory('text');\n\n/**\n * @param {'string' | 'text'} field\n *   Field.\n * @returns {InitialConstruct}\n *   Construct.\n */\nfunction initializeFactory(field) {\n  return {\n    resolveAll: createResolver(field === 'text' ? resolveAllLineSuffixes : undefined),\n    tokenize: initializeText\n  };\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this;\n    const constructs = this.parser.constructs[field];\n    const text = effects.attempt(constructs, start, notText);\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code);\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code);\n        return;\n      }\n      effects.enter(\"data\");\n      effects.consume(code);\n      return data;\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(\"data\");\n        return text(code);\n      }\n\n      // Data.\n      effects.consume(code);\n      return data;\n    }\n\n    /**\n     * @param {Code} code\n     *   Code.\n     * @returns {boolean}\n     *   Whether the code is a break.\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true;\n      }\n      const list = constructs[code];\n      let index = -1;\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index];\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n *   Resolver.\n * @returns {Resolver}\n *   Resolver.\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText;\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1;\n    /** @type {number | undefined} */\n    let enter;\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === \"data\") {\n          enter = index;\n          index++;\n        }\n      } else if (!events[index] || events[index][1].type !== \"data\") {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end;\n          events.splice(enter + 2, index - enter - 2);\n          index = enter + 2;\n        }\n        enter = undefined;\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events;\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0; // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if ((eventIndex === events.length || events[eventIndex][1].type === \"lineEnding\") && events[eventIndex - 1][1].type === \"data\") {\n      const data = events[eventIndex - 1][1];\n      const chunks = context.sliceStream(data);\n      let index = chunks.length;\n      let bufferIndex = -1;\n      let size = 0;\n      /** @type {boolean | undefined} */\n      let tabs;\n      while (index--) {\n        const chunk = chunks[index];\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length;\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++;\n            bufferIndex--;\n          }\n          if (bufferIndex) break;\n          bufferIndex = -1;\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true;\n          size++;\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++;\n          break;\n        }\n      }\n\n      // Allow final trailing whitespace.\n      if (context._contentTypeTextTrailing && eventIndex === events.length) {\n        size = 0;\n      }\n      if (size) {\n        const token = {\n          type: eventIndex === events.length || tabs || size < 2 ? \"lineSuffix\" : \"hardBreakTrailing\",\n          start: {\n            _bufferIndex: index ? bufferIndex : data.start._bufferIndex + bufferIndex,\n            _index: data.start._index + index,\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size\n          },\n          end: {\n            ...data.end\n          }\n        };\n        data.end = {\n          ...token.start\n        };\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token);\n        } else {\n          events.splice(eventIndex, 0, ['enter', token, context], ['exit', token, context]);\n          eventIndex += 2;\n        }\n      }\n      eventIndex++;\n    }\n  }\n  return events;\n}","/**\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport { attention, autolink, blockQuote, characterEscape, characterReference, codeFenced, codeIndented, codeText, definition, hardBreakEscape, headingAtx, htmlFlow, htmlText, labelEnd, labelStartImage, labelStartLink, lineEnding, list, setextUnderline, thematicBreak } from 'micromark-core-commonmark';\nimport { resolver as resolveText } from './initialize/text.js';\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n};\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n};\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n};\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n};\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n};\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n};\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n};\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n};\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n};","/**\n * @import {\n *   Chunk,\n *   Code,\n *   ConstructRecord,\n *   Construct,\n *   Effects,\n *   InitialConstruct,\n *   ParseContext,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @callback Restore\n *   Restore the state.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef Info\n *   Info.\n * @property {Restore} restore\n *   Restore.\n * @property {number} from\n *   From.\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n *   Construct.\n * @param {Info} info\n *   Info.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n *   Parser.\n * @param {InitialConstruct} initialize\n *   Construct.\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n *   Point (optional).\n * @returns {TokenizeContext}\n *   Context.\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = {\n    _bufferIndex: -1,\n    _index: 0,\n    line: from && from.line || 1,\n    column: from && from.column || 1,\n    offset: from && from.offset || 0\n  };\n  /** @type {Record<string, number>} */\n  const columnStart = {};\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = [];\n  /** @type {Array<Chunk>} */\n  let chunks = [];\n  /** @type {Array<Token>} */\n  let stack = [];\n  /** @type {boolean | undefined} */\n  let consumed = true;\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    consume,\n    enter,\n    exit,\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  };\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    code: null,\n    containerState: {},\n    defineSkip,\n    events: [],\n    now,\n    parser,\n    previous: null,\n    sliceSerialize,\n    sliceStream,\n    write\n  };\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects);\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode;\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize);\n  }\n  return context;\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice);\n    main();\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return [];\n    }\n    addResult(initialize, 0);\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context);\n    return context.events;\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs);\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token);\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    } = point;\n    return {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    };\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column;\n    accountForPotentialSkip();\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex;\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index];\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index;\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0;\n        }\n        while (point._index === chunkIndex && point._bufferIndex < chunk.length) {\n          go(chunk.charCodeAt(point._bufferIndex));\n        }\n      } else {\n        go(chunk);\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   *   Code.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function go(code) {\n    consumed = undefined;\n    expectedCode = code;\n    state = state(code);\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++;\n      point.column = 1;\n      point.offset += code === -3 ? 2 : 1;\n      accountForPotentialSkip();\n    } else if (code !== -1) {\n      point.column++;\n      point.offset++;\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++;\n    } else {\n      point._bufferIndex++;\n\n      // At end of string chunk.\n      if (point._bufferIndex ===\n      // Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      /** @type {string} */\n      chunks[point._index].length) {\n        point._bufferIndex = -1;\n        point._index++;\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code;\n\n    // Mark as consumed.\n    consumed = true;\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {};\n    token.type = type;\n    token.start = now();\n    context.events.push(['enter', token, context]);\n    stack.push(token);\n    return token;\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop();\n    token.end = now();\n    context.events.push(['exit', token, context]);\n    return token;\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from);\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore();\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   *   Callback.\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   *   Fields.\n   */\n  function constructFactory(onreturn, fields) {\n    return hook;\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | ConstructRecord | Construct} constructs\n     *   Constructs.\n     * @param {State} returnState\n     *   State.\n     * @param {State | undefined} [bogusState]\n     *   State.\n     * @returns {State}\n     *   State.\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {ReadonlyArray<Construct>} */\n      let listOfConstructs;\n      /** @type {number} */\n      let constructIndex;\n      /** @type {Construct} */\n      let currentConstruct;\n      /** @type {Info} */\n      let info;\n      return Array.isArray(constructs) ? /* c8 ignore next 1 */\n      handleListOfConstructs(constructs) : 'tokenize' in constructs ?\n      // Looks like a construct.\n      handleListOfConstructs([(/** @type {Construct} */constructs)]) : handleMapOfConstructs(constructs);\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleMapOfConstructs(map) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          const left = code !== null && map[code];\n          const all = code !== null && map.null;\n          const list = [\n          // To do: add more extension tests.\n          /* c8 ignore next 2 */\n          ...(Array.isArray(left) ? left : left ? [left] : []), ...(Array.isArray(all) ? all : all ? [all] : [])];\n          return handleListOfConstructs(list)(code);\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ReadonlyArray<Construct>} list\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list;\n        constructIndex = 0;\n        if (list.length === 0) {\n          return bogusState;\n        }\n        return handleConstruct(list[constructIndex]);\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       *   Construct.\n       * @returns {State}\n       *   State.\n       */\n      function handleConstruct(construct) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store();\n          currentConstruct = construct;\n          if (!construct.partial) {\n            context.currentConstruct = construct;\n          }\n\n          // Always populated by defaults.\n\n          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {\n            return nok(code);\n          }\n          return construct.tokenize.call(\n          // If we do have fields, create an object w/ `context` as its\n          // prototype.\n          // This allows a “live binding”, which is needed for `interrupt`.\n          fields ? Object.assign(Object.create(context), fields) : context, effects, ok, nok)(code);\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true;\n        onreturn(currentConstruct, info);\n        return returnState;\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true;\n        info.restore();\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex]);\n        }\n        return bogusState;\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   *   Construct.\n   * @param {number} from\n   *   From.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct);\n    }\n    if (construct.resolve) {\n      splice(context.events, from, context.events.length - from, construct.resolve(context.events.slice(from), context));\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context);\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   *   Info.\n   */\n  function store() {\n    const startPoint = now();\n    const startPrevious = context.previous;\n    const startCurrentConstruct = context.currentConstruct;\n    const startEventsIndex = context.events.length;\n    const startStack = Array.from(stack);\n    return {\n      from: startEventsIndex,\n      restore\n    };\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function restore() {\n      point = startPoint;\n      context.previous = startPrevious;\n      context.currentConstruct = startCurrentConstruct;\n      context.events.length = startEventsIndex;\n      stack = startStack;\n      accountForPotentialSkip();\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line];\n      point.offset += columnStart[point.line] - 1;\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {Pick<Token, 'end' | 'start'>} token\n *   Token.\n * @returns {Array<Chunk>}\n *   Chunks.\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index;\n  const startBufferIndex = token.start._bufferIndex;\n  const endIndex = token.end._index;\n  const endBufferIndex = token.end._bufferIndex;\n  /** @type {Array<Chunk>} */\n  let view;\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];\n  } else {\n    view = chunks.slice(startIndex, endIndex);\n    if (startBufferIndex > -1) {\n      const head = view[0];\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex);\n        /* c8 ignore next 4 -- used to be used, no longer */\n      } else {\n        view.shift();\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex));\n    }\n  }\n  return view;\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {boolean | undefined} [expandTabs=false]\n *   Whether to expand tabs (default: `false`).\n * @returns {string}\n *   Result.\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1;\n  /** @type {Array<string>} */\n  const result = [];\n  /** @type {boolean | undefined} */\n  let atTab;\n  while (++index < chunks.length) {\n    const chunk = chunks[index];\n    /** @type {string} */\n    let value;\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else switch (chunk) {\n      case -5:\n        {\n          value = \"\\r\";\n          break;\n        }\n      case -4:\n        {\n          value = \"\\n\";\n          break;\n        }\n      case -3:\n        {\n          value = \"\\r\" + \"\\n\";\n          break;\n        }\n      case -2:\n        {\n          value = expandTabs ? \" \" : \"\\t\";\n          break;\n        }\n      case -1:\n        {\n          if (!expandTabs && atTab) continue;\n          value = \" \";\n          break;\n        }\n      default:\n        {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk);\n        }\n    }\n    atTab = chunk === -2;\n    result.push(value);\n  }\n  return result.join('');\n}","/**\n * @import {\n *   Create,\n *   FullNormalizedExtension,\n *   InitialConstruct,\n *   ParseContext,\n *   ParseOptions\n * } from 'micromark-util-types'\n */\n\nimport { combineExtensions } from 'micromark-util-combine-extensions';\nimport { content } from './initialize/content.js';\nimport { document } from './initialize/document.js';\nimport { flow } from './initialize/flow.js';\nimport { string, text } from './initialize/text.js';\nimport * as defaultConstructs from './constructs.js';\nimport { createTokenizer } from './create-tokenizer.js';\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ParseContext}\n *   Parser.\n */\nexport function parse(options) {\n  const settings = options || {};\n  const constructs = /** @type {FullNormalizedExtension} */\n  combineExtensions([defaultConstructs, ...(settings.extensions || [])]);\n\n  /** @type {ParseContext} */\n  const parser = {\n    constructs,\n    content: create(content),\n    defined: [],\n    document: create(document),\n    flow: create(flow),\n    lazy: {},\n    string: create(string),\n    text: create(text)\n  };\n  return parser;\n\n  /**\n   * @param {InitialConstruct} initial\n   *   Construct to start with.\n   * @returns {Create}\n   *   Create a tokenizer.\n   */\n  function create(initial) {\n    return creator;\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from);\n    }\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\nimport { subtokenize } from 'micromark-util-subtokenize';\n\n/**\n * @param {Array<Event>} events\n *   Events.\n * @returns {Array<Event>}\n *   Events.\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events;\n}","/**\n * @import {Chunk, Code, Encoding, Value} from 'micromark-util-types'\n */\n\n/**\n * @callback Preprocessor\n *   Preprocess a value.\n * @param {Value} value\n *   Value.\n * @param {Encoding | null | undefined} [encoding]\n *   Encoding when `value` is a typed array (optional).\n * @param {boolean | null | undefined} [end=false]\n *   Whether this is the last chunk (default: `false`).\n * @returns {Array<Chunk>}\n *   Chunks.\n */\n\nconst search = /[\\0\\t\\n\\r]/g;\n\n/**\n * @returns {Preprocessor}\n *   Preprocess a value.\n */\nexport function preprocess() {\n  let column = 1;\n  let buffer = '';\n  /** @type {boolean | undefined} */\n  let start = true;\n  /** @type {boolean | undefined} */\n  let atCarriageReturn;\n  return preprocessor;\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = [];\n    /** @type {RegExpMatchArray | null} */\n    let match;\n    /** @type {number} */\n    let next;\n    /** @type {number} */\n    let startPosition;\n    /** @type {number} */\n    let endPosition;\n    /** @type {Code} */\n    let code;\n    value = buffer + (typeof value === 'string' ? value.toString() : new TextDecoder(encoding || undefined).decode(value));\n    startPosition = 0;\n    buffer = '';\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++;\n      }\n      start = undefined;\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition;\n      match = search.exec(value);\n      endPosition = match && match.index !== undefined ? match.index : value.length;\n      code = value.charCodeAt(endPosition);\n      if (!match) {\n        buffer = value.slice(startPosition);\n        break;\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3);\n        atCarriageReturn = undefined;\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5);\n          atCarriageReturn = undefined;\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition));\n          column += endPosition - startPosition;\n        }\n        switch (code) {\n          case 0:\n            {\n              chunks.push(65533);\n              column++;\n              break;\n            }\n          case 9:\n            {\n              next = Math.ceil(column / 4) * 4;\n              chunks.push(-2);\n              while (column++ < next) chunks.push(-1);\n              break;\n            }\n          case 10:\n            {\n              chunks.push(-4);\n              column = 1;\n              break;\n            }\n          default:\n            {\n              atCarriageReturn = true;\n              column = 1;\n            }\n        }\n      }\n      startPosition = endPosition + 1;\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5);\n      if (buffer) chunks.push(buffer);\n      chunks.push(null);\n    }\n    return chunks;\n  }\n}","import { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nconst characterEscapeOrReference = /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi;\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode);\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @param {string} $1\n *   Character escape.\n * @param {string} $2\n *   Character reference.\n * @returns {string}\n *   Decoded value\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1;\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0);\n  if (head === 35) {\n    const head = $2.charCodeAt(1);\n    const hex = head === 120 || head === 88;\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10);\n  }\n  return decodeNamedCharacterReference($2) || $0;\n}","/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler || undefined]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @import {Node, Parent} from 'unist'\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | ReadonlyArray<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends ReadonlyArray<string>>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition[number]}) &\n   *   (<Condition extends Array<string>>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition[number]}) &\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test)\n          ? anyFactory(test)\n          : // Cast because `ReadonlyArray` goes into the above but `isArray`\n            // narrows to `Array`.\n            propertiesFactory(/** @type {Props} */ (test))\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propertiesFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @import {Node as UnistNode, Parent as UnistParent} from 'unist'\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends ReadonlyArray<infer T>\n *   ? MatchesOne<Value, T>\n *   : Check extends Array<infer T>\n *   ? MatchesOne<Value, T>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n            typeof value.name === 'string'\n            ? value.name\n            : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @import {Nodes, Parents, PhrasingContent, Root, Text} from 'mdast'\n * @import {BuildVisitor, Test, VisitorResult} from 'unist-util-visit-parents'\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","/**\n * @import {RegExpMatchObject, ReplaceFunction} from 'mdast-util-find-and-replace'\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, Transform as FromMarkdownTransform} from 'mdast-util-from-markdown'\n * @import {ConstructName, Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n * @import {Link, PhrasingContent} from 'mdast'\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/gu, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    // If it’s an email, the previous character should not be a slash.\n    (!email || code !== 47)\n  )\n}\n","/**\n * @import {\n *   CompileContext,\n *   Extension as FromMarkdownExtension,\n *   Handle as FromMarkdownHandle\n * } from 'mdast-util-from-markdown'\n * @import {ToMarkdownOptions} from 'mdast-util-gfm-footnote'\n * @import {\n *   Handle as ToMarkdownHandle,\n *   Map,\n *   Options as ToMarkdownExtension\n * } from 'mdast-util-to-markdown'\n * @import {FootnoteDefinition, FootnoteReference} from 'mdast'\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {after: ']', before: value})\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteCallString: enterFootnoteCallString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: enterFootnoteDefinition\n    },\n    exit: {\n      gfmFootnoteCallString: exitFootnoteCallString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: exitFootnoteDefinition\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown(options) {\n  // To do: next major: change default.\n  let firstLineBlank = false\n\n  if (options && options.firstLineBlank) {\n    firstLineBlank = true\n  }\n\n  return {\n    handlers: {footnoteDefinition, footnoteReference},\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['label', 'phrasing', 'reference']}]\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, state, info) {\n    const tracker = state.createTracker(info)\n    let value = tracker.move('[^')\n    const exit = state.enter('footnoteDefinition')\n    const subexit = state.enter('label')\n    value += tracker.move(\n      state.safe(state.associationId(node), {before: value, after: ']'})\n    )\n    subexit()\n\n    value += tracker.move(']:')\n\n    if (node.children && node.children.length > 0) {\n      tracker.shift(4)\n\n      value += tracker.move(\n        (firstLineBlank ? '\\n' : ' ') +\n          state.indentLines(\n            state.containerFlow(node, tracker.current()),\n            firstLineBlank ? mapAll : mapExceptFirst\n          )\n      )\n    }\n\n    exit()\n\n    return value\n  }\n}\n\n/** @type {Map} */\nfunction mapExceptFirst(line, index, blank) {\n  return index === 0 ? line : mapAll(line, index, blank)\n}\n\n/** @type {Map} */\nfunction mapAll(line, index, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","// To do: next major: remove.\n/**\n * @typedef {Options} MarkdownTableOptions\n *   Configuration.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [alignDelimiters=true]\n *   Whether to align the delimiters (default: `true`);\n *   they are aligned by default:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {ReadonlyArray<string | null | undefined> | string | null | undefined} [align]\n *   How to align columns (default: `''`);\n *   one style for all columns or styles for their respective columns;\n *   each style is either `'l'` (left), `'r'` (right), or `'c'` (center);\n *   other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left;\n *   *only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean | null | undefined} [delimiterEnd=true]\n *   Whether to end each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean | null | undefined} [delimiterStart=true]\n *   Whether to begin each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean | null | undefined} [padding=true]\n *   Whether to add a space of padding between delimiters and cells\n *   (default: `true`).\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {((value: string) => number) | null | undefined} [stringLength]\n *   Function to detect the length of table cell content (optional);\n *   this is used when aligning the delimiters (`|`) between table cells;\n *   full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source;\n *   to fix this, you can pass this function,\n *   which receives the cell content and returns its “visible” size;\n *   note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @param {string} value\n *   Cell value.\n * @returns {number}\n *   Cell size.\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * Generate a markdown\n * ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables))\n * table.\n *\n * @param {ReadonlyArray<ReadonlyArray<string | null | undefined>>} table\n *   Table data (matrix of strings).\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Result.\n */\nexport function markdownTable(table, options) {\n  const settings = options || {}\n  // To do: next major: change to spread.\n  const align = (settings.align || []).concat()\n  const stringLength = settings.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (settings.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      settings.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (settings.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (settings.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (settings.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        settings.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(settings.alignDelimiters === false && cell === '') &&\n        (settings.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (settings.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (settings.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (settings.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        settings.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      settings.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string | null | undefined} [value]\n *   Value to serialize.\n * @returns {string}\n *   Result.\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string | null | undefined} value\n *   Value.\n * @returns {number}\n *   Alignment.\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n      ? 108 /* `l` */\n      : code === 82 /* `R` */ || code === 114 /* `r` */\n        ? 114 /* `r` */\n        : 0\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @import {Options, State} from './types.js'\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {State} base\n * @param {Options} extension\n * @returns {State}\n */\nexport function configure(base, extension) {\n  let index = -1\n  /** @type {keyof Options} */\n  let key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'extensions': {\n          // Empty.\n          break\n        }\n\n        /* c8 ignore next 4 */\n        case 'unsafe': {\n          list(base[key], extension[key])\n          break\n        }\n\n        case 'join': {\n          list(base[key], extension[key])\n          break\n        }\n\n        case 'handlers': {\n          map(base[key], extension[key])\n          break\n        }\n\n        default: {\n          // @ts-expect-error: matches.\n          base.options[key] = extension[key]\n        }\n      }\n    }\n  }\n\n  return base\n}\n\n/**\n * @template T\n * @param {Array<T>} left\n * @param {Array<T> | null | undefined} right\n */\nfunction list(left, right) {\n  if (right) {\n    left.push(...right)\n  }\n}\n\n/**\n * @template T\n * @param {Record<string, T>} left\n * @param {Record<string, T> | null | undefined} right\n */\nfunction map(left, right) {\n  if (right) {\n    Object.assign(left, right)\n  }\n}\n","/**\n * @import {Blockquote, Parents} from 'mdast'\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @import {Break, Parents} from 'mdast'\n * @import {Info, State} from 'mdast-util-to-markdown'\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Code} from 'mdast'\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {Code, Parents} from 'mdast'\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Definition, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * Encode a code point as a character reference.\n *\n * @param {number} code\n *   Code point to encode.\n * @returns {string}\n *   Encoded character reference.\n */\nexport function encodeCharacterReference(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n","/**\n * @import {EncodeSides} from '../types.js'\n */\n\nimport {classifyCharacter} from 'micromark-util-classify-character'\n\n/**\n * Check whether to encode (as a character reference) the characters\n * surrounding an attention run.\n *\n * Which characters are around an attention run influence whether it works or\n * not.\n *\n * See <https://github.com/orgs/syntax-tree/discussions/60> for more info.\n * See this markdown in a particular renderer to see what works:\n *\n * ```markdown\n * |                         | A (letter inside) | B (punctuation inside) | C (whitespace inside) | D (nothing inside) |\n * | ----------------------- | ----------------- | ---------------------- | --------------------- | ------------------ |\n * | 1 (letter outside)      | x*y*z             | x*.*z                  | x* *z                 | x**z               |\n * | 2 (punctuation outside) | .*y*.             | .*.*.                  | .* *.                 | .**.               |\n * | 3 (whitespace outside)  | x *y* z           | x *.* z                | x * * z               | x ** z             |\n * | 4 (nothing outside)     | *x*               | *.*                    | * *                   | **                 |\n * ```\n *\n * @param {number} outside\n *   Code point on the outer side of the run.\n * @param {number} inside\n *   Code point on the inner side of the run.\n * @param {'*' | '_'} marker\n *   Marker of the run.\n *   Underscores are handled more strictly (they form less often) than\n *   asterisks.\n * @returns {EncodeSides}\n *   Whether to encode characters.\n */\n// Important: punctuation must never be encoded.\n// Punctuation is solely used by markdown constructs.\n// And by encoding itself.\n// Encoding them will break constructs or double encode things.\nexport function encodeInfo(outside, inside, marker) {\n  const outsideKind = classifyCharacter(outside)\n  const insideKind = classifyCharacter(inside)\n\n  // Letter outside:\n  if (outsideKind === undefined) {\n    return insideKind === undefined\n      ? // Letter inside:\n        // we have to encode *both* letters for `_` as it is looser.\n        // it already forms for `*` (and GFMs `~`).\n        marker === '_'\n        ? {inside: true, outside: true}\n        : {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (letter, whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: encode outer (letter)\n          {inside: false, outside: true}\n  }\n\n  // Whitespace outside:\n  if (outsideKind === 1) {\n    return insideKind === undefined\n      ? // Letter inside: already forms.\n        {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: already forms.\n          {inside: false, outside: false}\n  }\n\n  // Punctuation outside:\n  return insideKind === undefined\n    ? // Letter inside: already forms.\n      {inside: false, outside: false}\n    : insideKind === 1\n      ? // Whitespace inside: encode inner (whitespace).\n        {inside: true, outside: false}\n      : // Punctuation inside: already forms.\n        {inside: false, outside: false}\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Emphasis, Parents} from 'mdast'\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nemphasis.peek = emphasisPeek\n\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Heading} from 'mdast'\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Heading, Parents} from 'mdast'\n */\n\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value = encodeCharacterReference(value.charCodeAt(0)) + value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @import {Html} from 'mdast'\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Image, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {ImageReference, Parents} from 'mdast'\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {InlineCode, Parents} from 'mdast'\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Link} from 'mdast'\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Link, Parents} from 'mdast'\n * @import {Exit} from '../types.js'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {LinkReference, Parents} from 'mdast'\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {List, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {ListItem, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Paragraph, Parents} from 'mdast'\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Root} from 'mdast'\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n\n  const container = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return container.call(state, node, info)\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Strong} from 'mdast'\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nstrong.peek = strongPeek\n\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker + marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker + marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Text} from 'mdast'\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Parents, ThematicBreak} from 'mdast'\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @import {Join} from 'mdast-util-to-markdown'\n */\n\nimport {formatCodeAsIndented} from './util/format-code-as-indented.js'\nimport {formatHeadingAsSetext} from './util/format-heading-as-setext.js'\n\n/** @type {Array<Join>} */\nexport const join = [joinDefaults]\n\n/** @type {Join} */\nfunction joinDefaults(left, right, parent, state) {\n  // Indented code after list or another indented code.\n  if (\n    right.type === 'code' &&\n    formatCodeAsIndented(right, state) &&\n    (left.type === 'list' ||\n      (left.type === right.type && formatCodeAsIndented(left, state)))\n  ) {\n    return false\n  }\n\n  // Join children of a list or an item.\n  // In which case, `parent` has a `spread` field.\n  if ('spread' in parent && typeof parent.spread === 'boolean') {\n    if (\n      left.type === 'paragraph' &&\n      // Two paragraphs.\n      (left.type === right.type ||\n        right.type === 'definition' ||\n        // Paragraph followed by a setext heading.\n        (right.type === 'heading' && formatHeadingAsSetext(right, state)))\n    ) {\n      return\n    }\n\n    return parent.spread ? 1 : 0\n  }\n}\n","/**\n * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain things like attention (emphasis, strong), images, or links.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * @type {Array<ConstructName>}\n */\nconst fullPhrasingSpans = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\n/** @type {Array<Unsafe>} */\nexport const unsafe = [\n  {character: '\\t', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {character: '\\t', before: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {\n    character: '\\t',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  {\n    character: '\\r',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: '\\n',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {character: ' ', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {character: ' ', before: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {\n    character: ' ',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  // An exclamation mark can start an image, if it is followed by a link or\n  // a link reference.\n  {\n    character: '!',\n    after: '\\\\[',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  // A quote can break out of a title.\n  {character: '\"', inConstruct: 'titleQuote'},\n  // A number sign could start an ATX heading if it starts a line.\n  {atBreak: true, character: '#'},\n  {character: '#', inConstruct: 'headingAtx', after: '(?:[\\r\\n]|$)'},\n  // Dollar sign and percentage are not used in markdown.\n  // An ampersand could start a character reference.\n  {character: '&', after: '[#A-Za-z]', inConstruct: 'phrasing'},\n  // An apostrophe can break out of a title.\n  {character: \"'\", inConstruct: 'titleApostrophe'},\n  // A left paren could break out of a destination raw.\n  {character: '(', inConstruct: 'destinationRaw'},\n  // A left paren followed by `]` could make something into a link or image.\n  {\n    before: '\\\\]',\n    character: '(',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  // A right paren could start a list item or break out of a destination\n  // raw.\n  {atBreak: true, before: '\\\\d+', character: ')'},\n  {character: ')', inConstruct: 'destinationRaw'},\n  // An asterisk can start thematic breaks, list items, emphasis, strong.\n  {atBreak: true, character: '*', after: '(?:[ \\t\\r\\n*])'},\n  {character: '*', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // A plus sign could start a list item.\n  {atBreak: true, character: '+', after: '(?:[ \\t\\r\\n])'},\n  // A dash can start thematic breaks, list items, and setext heading\n  // underlines.\n  {atBreak: true, character: '-', after: '(?:[ \\t\\r\\n-])'},\n  // A dot could start a list item.\n  {atBreak: true, before: '\\\\d+', character: '.', after: '(?:[ \\t\\r\\n]|$)'},\n  // Slash, colon, and semicolon are not used in markdown for constructs.\n  // A less than can start html (flow or text) or an autolink.\n  // HTML could start with an exclamation mark (declaration, cdata, comment),\n  // slash (closing tag), question mark (instruction), or a letter (tag).\n  // An autolink also starts with a letter.\n  // Finally, it could break out of a destination literal.\n  {atBreak: true, character: '<', after: '[!/?A-Za-z]'},\n  {\n    character: '<',\n    after: '[!/?A-Za-z]',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  {character: '<', inConstruct: 'destinationLiteral'},\n  // An equals to can start setext heading underlines.\n  {atBreak: true, character: '='},\n  // A greater than can start block quotes and it can break out of a\n  // destination literal.\n  {atBreak: true, character: '>'},\n  {character: '>', inConstruct: 'destinationLiteral'},\n  // Question mark and at sign are not used in markdown for constructs.\n  // A left bracket can start definitions, references, labels,\n  {atBreak: true, character: '['},\n  {character: '[', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  {character: '[', inConstruct: ['label', 'reference']},\n  // A backslash can start an escape (when followed by punctuation) or a\n  // hard break (when followed by an eol).\n  // Note: typical escapes are handled in `safe`!\n  {character: '\\\\', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  // A right bracket can exit labels.\n  {character: ']', inConstruct: ['label', 'reference']},\n  // Caret is not used in markdown for constructs.\n  // An underscore can start emphasis, strong, or a thematic break.\n  {atBreak: true, character: '_'},\n  {character: '_', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // A grave accent can start code (fenced or text), or it can break out of\n  // a grave accent code fence.\n  {atBreak: true, character: '`'},\n  {\n    character: '`',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedMetaGraveAccent']\n  },\n  {character: '`', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // Left brace, vertical bar, right brace are not used in markdown for\n  // constructs.\n  // A tilde can start code (fenced).\n  {atBreak: true, character: '~'}\n]\n","/**\n * @import {AssociationId} from '../types.js'\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * Get an identifier from an association to match it to others.\n *\n * Associations are nodes that match to something else through an ID:\n * <https://github.com/syntax-tree/mdast#association>.\n *\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another:\n * controversially, character escapes and references don’t work in this\n * matching: `&copy;` does not match `©`, and `\\+` does not match `+`.\n *\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character\n * escapes and all character references.\n *\n * @type {AssociationId}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @import {CompilePattern} from '../types.js'\n */\n\n/**\n * @type {CompilePattern}\n */\nexport function compilePattern(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @import {Handle, Info, State} from 'mdast-util-to-markdown'\n * @import {PhrasingParents} from '../types.js'\n */\n\nimport {encodeCharacterReference} from './encode-character-reference.js'\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @param {PhrasingParents} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nexport function containerPhrasing(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = info.before\n  /** @type {string | undefined} */\n  let encodeAfter\n\n  indexStack.push(-1)\n  let tracker = state.createTracker(info)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = state.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, state, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = info.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = state.createTracker(info)\n      tracker.move(results.join(''))\n    }\n\n    let value = state.handle(child, parent, state, {\n      ...tracker.current(),\n      after,\n      before\n    })\n\n    // If we had to encode the first character after the previous node and it’s\n    // still the same character,\n    // encode it.\n    if (encodeAfter && encodeAfter === value.slice(0, 1)) {\n      value =\n        encodeCharacterReference(encodeAfter.charCodeAt(0)) + value.slice(1)\n    }\n\n    const encodingInfo = state.attentionEncodeSurroundingInfo\n    state.attentionEncodeSurroundingInfo = undefined\n    encodeAfter = undefined\n\n    // If we have to encode the first character before the current node and\n    // it’s still the same character,\n    // encode it.\n    if (encodingInfo) {\n      if (\n        results.length > 0 &&\n        encodingInfo.before &&\n        before === results[results.length - 1].slice(-1)\n      ) {\n        results[results.length - 1] =\n          results[results.length - 1].slice(0, -1) +\n          encodeCharacterReference(before.charCodeAt(0))\n      }\n\n      if (encodingInfo.after) encodeAfter = after\n    }\n\n    tracker.move(value)\n    results.push(value)\n    before = value.slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {FlowChildren, FlowParents, TrackFields} from '../types.js'\n */\n\n/**\n * @param {FlowParents} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {FlowChildren} left\n * @param {FlowChildren} right\n * @param {FlowParents} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n","/**\n * @import {IndentLines} from '../types.js'\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @type {IndentLines}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @import {SafeConfig, State} from 'mdast-util-to-markdown'\n */\n\nimport {encodeCharacterReference} from './encode-character-reference.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {string | null | undefined} input\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nexport function safe(state, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n\n    if (!patternInScope(state.stack, pattern)) {\n      continue\n    }\n\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(encodeCharacterReference(value.charCodeAt(position)))\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @import {CreateTracker, TrackCurrent, TrackMove, TrackShift} from '../types.js'\n */\n\n/**\n * Track positional info in the output.\n *\n * @type {CreateTracker}\n */\nexport function track(config) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = config || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @type {TrackCurrent}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @type {TrackShift}\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past some generated markdown.\n   *\n   * @type {TrackMove}\n   */\n  function move(input) {\n    // eslint-disable-next-line unicorn/prefer-default-parameters\n    const value = input || ''\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @import {Info, Join, Options, SafeConfig, State} from 'mdast-util-to-markdown'\n * @import {Nodes} from 'mdast'\n * @import {Enter, FlowParents, PhrasingParents, TrackFields} from './types.js'\n */\n\nimport {zwitch} from 'zwitch'\nimport {configure} from './configure.js'\nimport {handle as handlers} from './handle/index.js'\nimport {join} from './join.js'\nimport {unsafe} from './unsafe.js'\nimport {association} from './util/association.js'\nimport {compilePattern} from './util/compile-pattern.js'\nimport {containerPhrasing} from './util/container-phrasing.js'\nimport {containerFlow} from './util/container-flow.js'\nimport {indentLines} from './util/indent-lines.js'\nimport {safe} from './util/safe.js'\nimport {track} from './util/track.js'\n\n/**\n * Turn an mdast syntax tree into markdown.\n *\n * @param {Nodes} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized markdown representing `tree`.\n */\nexport function toMarkdown(tree, options) {\n  const settings = options || {}\n  /** @type {State} */\n  const state = {\n    associationId: association,\n    containerPhrasing: containerPhrasingBound,\n    containerFlow: containerFlowBound,\n    createTracker: track,\n    compilePattern,\n    enter,\n    // @ts-expect-error: GFM / frontmatter are typed in `mdast` but not defined\n    // here.\n    handlers: {...handlers},\n    // @ts-expect-error: add `handle` in a second.\n    handle: undefined,\n    indentLines,\n    indexStack: [],\n    join: [...join],\n    options: {},\n    safe: safeBound,\n    stack: [],\n    unsafe: [...unsafe]\n  }\n\n  configure(state, settings)\n\n  if (state.options.tightDefinitions) {\n    state.join.push(joinDefinition)\n  }\n\n  state.handle = zwitch('type', {\n    invalid,\n    unknown,\n    handlers: state.handlers\n  })\n\n  let result = state.handle(tree, undefined, state, {\n    before: '\\n',\n    after: '\\n',\n    now: {line: 1, column: 1},\n    lineShift: 0\n  })\n\n  if (\n    result &&\n    result.charCodeAt(result.length - 1) !== 10 &&\n    result.charCodeAt(result.length - 1) !== 13\n  ) {\n    result += '\\n'\n  }\n\n  return result\n\n  /** @type {Enter} */\n  function enter(name) {\n    state.stack.push(name)\n    return exit\n\n    /**\n     * @returns {undefined}\n     */\n    function exit() {\n      state.stack.pop()\n    }\n  }\n}\n\n/**\n * @param {unknown} value\n * @returns {never}\n */\nfunction invalid(value) {\n  throw new Error('Cannot handle value `' + value + '`, expected node')\n}\n\n/**\n * @param {unknown} value\n * @returns {never}\n */\nfunction unknown(value) {\n  // Always a node.\n  const node = /** @type {Nodes} */ (value)\n  throw new Error('Cannot handle unknown node `' + node.type + '`')\n}\n\n/** @type {Join} */\nfunction joinDefinition(left, right) {\n  // No blank line between adjacent definitions.\n  if (left.type === 'definition' && left.type === right.type) {\n    return 0\n  }\n}\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {PhrasingParents} parent\n *   Parent of flow nodes.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nfunction containerPhrasingBound(parent, info) {\n  return containerPhrasing(parent, this, info)\n}\n\n/**\n * Serialize the children of a parent that contains flow children.\n *\n * These children will typically be joined by blank lines.\n * What they are joined by exactly is defined by `Join` functions.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {FlowParents} parent\n *   Parent of flow nodes.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nfunction containerFlowBound(parent, info) {\n  return containerFlow(parent, this, info)\n}\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {string | null | undefined} value\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nfunction safeBound(value, config) {\n  return safe(this, value, config)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @import {Extension as FromMarkdownExtension} from 'mdast-util-from-markdown'\n * @import {Options} from 'mdast-util-gfm'\n * @import {Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(options),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","/**\n * @import {Code, ConstructRecord, Event, Extension, Previous, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiControl, markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n};\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n};\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n};\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n};\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n};\nconst wwwAutolink = {\n  name: 'wwwAutolink',\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n};\nconst protocolAutolink = {\n  name: 'protocolAutolink',\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n};\nconst emailAutolink = {\n  name: 'emailAutolink',\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n};\n\n/** @type {ConstructRecord} */\nconst text = {};\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  };\n}\n\n/** @type {Code} */\nlet code = 48;\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink;\n  code++;\n  if (code === 58) code = 65;else if (code === 91) code = 97;\n}\ntext[43] = emailAutolink;\ntext[45] = emailAutolink;\ntext[46] = emailAutolink;\ntext[95] = emailAutolink;\ntext[72] = [emailAutolink, protocolAutolink];\ntext[104] = [emailAutolink, protocolAutolink];\ntext[87] = [emailAutolink, wwwAutolink];\ntext[119] = [emailAutolink, wwwAutolink];\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this;\n  /** @type {boolean | undefined} */\n  let dot;\n  /** @type {boolean} */\n  let data;\n  return start;\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (!gfmAtext(code) || !previousEmail.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkEmail');\n    return atext(code);\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code);\n      return atext;\n    }\n    if (code === 64) {\n      effects.consume(code);\n      return emailDomain;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(emailDomainDotTrail, emailDomainAfter, emailDomainDot)(code);\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true;\n      effects.consume(code);\n      return emailDomain;\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code);\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code);\n    dot = true;\n    return emailDomain;\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail');\n      effects.exit('literalAutolink');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this;\n  return wwwStart;\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (code !== 87 && code !== 119 || !previousWww.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkWww');\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(wwwPrefix, effects.attempt(domain, effects.attempt(path, wwwAfter), nok), nok)(code);\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this;\n  let buffer = '';\n  let seen = false;\n  return protocolStart;\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if ((code === 72 || code === 104) && previousProtocol.call(self, self.previous) && !previousUnbalanced(self.events)) {\n      effects.enter('literalAutolink');\n      effects.enter('literalAutolinkHttp');\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase();\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code);\n        return protocolSlashesInside;\n      }\n    }\n    return nok(code);\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code);\n      if (seen) {\n        return afterProtocol;\n      }\n      seen = true;\n      return protocolSlashesInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null || asciiControl(code) || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || unicodePunctuation(code) ? nok(code) : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code);\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0;\n  return wwwPrefixInside;\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++;\n      effects.consume(code);\n      return wwwPrefixInside;\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code);\n      return wwwPrefixAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code);\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment;\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment;\n  /** @type {boolean | undefined} */\n  let seen;\n  return domainInside;\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code);\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || code !== 45 && unicodePunctuation(code)) {\n      return domainAfter(code);\n    }\n    seen = true;\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true;\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment;\n      underscoreInLastSegment = undefined;\n    }\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code);\n    }\n    return ok(code);\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0;\n  let sizeClose = 0;\n  return pathInside;\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++;\n      effects.consume(code);\n      return pathInside;\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code);\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (code === 33 || code === 34 || code === 38 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 60 || code === 63 || code === 93 || code === 95 || code === 126) {\n      return effects.check(trail, ok, pathAtPunctuation)(code);\n    }\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++;\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail;\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (code === 33 || code === 34 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 63 || code === 95 || code === 126) {\n      effects.consume(code);\n      return trail;\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code);\n      return trailCharacterReferenceStart;\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code);\n      return trailBracketAfter;\n    }\n    if (\n    // `<` is an end.\n    code === 60 ||\n    // So is whitespace.\n    code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (code === null || code === 40 || code === 91 || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return trail(code);\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharacterReferenceInside(code) : nok(code);\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code);\n      return trail;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return trailCharacterReferenceInside;\n    }\n\n    // It’s not a trail.\n    return nok(code);\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start;\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code);\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return code === null || code === 40 || code === 42 || code === 95 || code === 91 || code === 93 || code === 126 || markdownLineEndingOrSpace(code);\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code);\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code));\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return code === 43 || code === 45 || code === 46 || code === 95 || asciiAlphanumeric(code);\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length;\n  let result = false;\n  while (index--) {\n    const token = events[index][1];\n    if ((token.type === 'labelLink' || token.type === 'labelImage') && !token._balanced) {\n      result = true;\n      break;\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false;\n      break;\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;\n  }\n  return result;\n}","/**\n * @import {Event, Exiter, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { blankLine } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        name: 'gfmFootnoteDefinition',\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        name: 'gfmFootnoteCall',\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        name: 'gfmPotentialFootnoteCall',\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  };\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {Token} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1];\n    if (token.type === \"labelImage\") {\n      labelStart = token;\n      break;\n    }\n\n    // Exit if we’ve walked far enough.\n    if (token.type === 'gfmFootnoteCall' || token.type === \"labelLink\" || token.type === \"label\" || token.type === \"image\" || token.type === \"link\") {\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code);\n    }\n    const id = normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    }));\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code);\n    }\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return ok(code);\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length;\n  /** @type {Token | undefined} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    if (events[index][1].type === \"labelImage\" && events[index][0] === 'enter') {\n      labelStart = events[index][1];\n      break;\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = \"data\";\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker';\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  };\n  // Increment the end 1 character.\n  marker.end.column++;\n  marker.end.offset++;\n  marker.end._bufferIndex++;\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  };\n  /** @type {Token} */\n  const chunk = {\n    type: \"chunkString\",\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  };\n\n  /** @type {Array<Event>} */\n  const replacement = [\n  // Take the `labelImageMarker` (now `data`, the `!`)\n  events[index + 1], events[index + 2], ['enter', call, context],\n  // The `[`\n  events[index + 3], events[index + 4],\n  // The `^`.\n  ['enter', marker, context], ['exit', marker, context],\n  // Everything in between.\n  ['enter', string, context], ['enter', chunk, context], ['exit', chunk, context], ['exit', string, context],\n  // The ending (`]`, properly parsed and labelled).\n  events[events.length - 2], events[events.length - 1], ['exit', call, context]];\n  events.splice(index, events.length - index + 1, ...replacement);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  let size = 0;\n  /** @type {boolean} */\n  let data;\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start;\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall');\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return callStart;\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code);\n    effects.enter('gfmFootnoteCallMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallMarker');\n    effects.enter('gfmFootnoteCallString');\n    effects.enter('chunkString').contentType = 'string';\n    return callData;\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteCallString');\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code);\n      }\n      effects.enter('gfmFootnoteCallLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteCallLabelMarker');\n      effects.exit('gfmFootnoteCall');\n      return ok;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? callEscape : callData;\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return callData;\n    }\n    return callData(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {string} */\n  let identifier;\n  let size = 0;\n  /** @type {boolean | undefined} */\n  let data;\n  return start;\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true;\n    effects.enter('gfmFootnoteDefinitionLabel');\n    effects.enter('gfmFootnoteDefinitionLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteDefinitionLabelMarker');\n    return labelAtMarker;\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionMarker');\n      effects.enter('gfmFootnoteDefinitionLabelString');\n      effects.enter('chunkString').contentType = 'string';\n      return labelInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteDefinitionLabelString');\n      identifier = normalizeIdentifier(self.sliceSerialize(token));\n      effects.enter('gfmFootnoteDefinitionLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionLabelMarker');\n      effects.exit('gfmFootnoteDefinitionLabel');\n      return labelAfter;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker');\n      if (!defined.includes(identifier)) {\n        defined.push(identifier);\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(effects, whitespaceAfter, 'gfmFootnoteDefinitionWhitespace');\n    }\n    return nok(code);\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok));\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition');\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, 'gfmFootnoteDefinitionIndent', 4 + 1);\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'gfmFootnoteDefinitionIndent' && tail[2].sliceSerialize(tail[1], true).length === 4 ? ok(code) : nok(code);\n  }\n}","/**\n * @import {Options} from 'micromark-extension-gfm-strikethrough'\n * @import {Event, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {};\n  let single = options_.singleTilde;\n  const tokenizer = {\n    name: 'strikethrough',\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  };\n  if (single === null || single === undefined) {\n    single = true;\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  };\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1;\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (events[index][0] === 'enter' && events[index][1].type === 'strikethroughSequenceTemporary' && events[index][1]._close) {\n        let open = index;\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (events[open][0] === 'exit' && events[open][1].type === 'strikethroughSequenceTemporary' && events[open][1]._open &&\n          // If the sizes are the same:\n          events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n            events[index][1].type = 'strikethroughSequence';\n            events[open][1].type = 'strikethroughSequence';\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            };\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            };\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [['enter', strikethrough, context], ['enter', events[open][1], context], ['exit', events[open][1], context], ['enter', text, context]];\n            const insideSpan = context.parser.constructs.insideSpan.null;\n            if (insideSpan) {\n              // Between.\n              splice(nextEvents, nextEvents.length, 0, resolveAll(insideSpan, events.slice(open + 1, index), context));\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [['exit', text, context], ['enter', events[index][1], context], ['exit', events[index][1], context], ['exit', strikethrough, context]]);\n            splice(events, open - 1, index - open + 3, nextEvents);\n            index = open + nextEvents.length - 2;\n            break;\n          }\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = \"data\";\n      }\n    }\n    return events;\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous;\n    const events = this.events;\n    let size = 0;\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      if (previous === 126 && events[events.length - 1][1].type !== \"characterEscape\") {\n        return nok(code);\n      }\n      effects.enter('strikethroughSequenceTemporary');\n      return more(code);\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous);\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code);\n        effects.consume(code);\n        size++;\n        return more;\n      }\n      if (size < 2 && !single) return nok(code);\n      const token = effects.exit('strikethroughSequenceTemporary');\n      const after = classifyCharacter(code);\n      token._open = !after || after === 2 && Boolean(before);\n      token._close = !before || before === 2 && Boolean(after);\n      return ok(code);\n    }\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = [];\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImplementation(this, index, remove, add);\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImplementation(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return;\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length;\n    /** @type {Array<Array<Event>>} */\n    const vecs = [];\n    while (index > 0) {\n      index -= 1;\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]), this.map[index][2]);\n\n      // Truncate rest.\n      events.length = this.map[index][0];\n    }\n    vecs.push(events.slice());\n    events.length = 0;\n    let slice = vecs.pop();\n    while (slice) {\n      for (const element of slice) {\n        events.push(element);\n      }\n      slice = vecs.pop();\n    }\n\n    // Truncate everything.\n    this.map.length = 0;\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImplementation(editMap, at, remove, add) {\n  let index = 0;\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return;\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove;\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add);\n      // }\n\n      return;\n    }\n    index += 1;\n  }\n  editMap.map.push([at, remove, add]);\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false;\n  /** @type {Array<Align>} */\n  const align = [];\n  while (index < events.length) {\n    const event = events[index];\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(events[index + 1][1].type === 'tableDelimiterMarker' ? 'left' : 'none');\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1;\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right';\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break;\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true;\n    }\n    index += 1;\n  }\n  return align;\n}","/**\n * @import {Event, Extension, Point, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { EditMap } from './edit-map.js';\nimport { gfmTableAlign } from './infer.js';\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        name: 'table',\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  let sizeB = 0;\n  /** @type {boolean | undefined} */\n  let seen;\n  return start;\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1;\n    while (index > -1) {\n      const type = self.events[index][1].type;\n      if (type === \"lineEnding\" ||\n      // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n      type === \"linePrefix\") index--;else break;\n    }\n    const tail = index > -1 ? self.events[index][1].type : null;\n    const next = tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore;\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    return next(code);\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead');\n    effects.enter('tableRow');\n    return headRowStart(code);\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code);\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true;\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1;\n    return headRowBreak(code);\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0;\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true;\n        effects.exit('tableRow');\n        effects.enter(\"lineEnding\");\n        effects.consume(code);\n        effects.exit(\"lineEnding\");\n        return headDelimiterStart;\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, \"whitespace\")(code);\n    }\n    sizeB += 1;\n    if (seen) {\n      seen = false;\n      // Header cell count.\n      size += 1;\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      // Whether a delimiter was seen.\n      seen = true;\n      return headRowBreak;\n    }\n\n    // Anything else is cell data.\n    effects.enter(\"data\");\n    return headRowData(code);\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return headRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? headRowEscape : headRowData;\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return headRowData;\n    }\n    return headRowData(code);\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false;\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    effects.enter('tableDelimiterRow');\n    // Track if we’ve seen a `:` or `|`.\n    seen = false;\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return headDelimiterBefore(code);\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code);\n    }\n    if (code === 124) {\n      seen = true;\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return headDelimiterCellBefore;\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, \"whitespace\")(code);\n    }\n    return headDelimiterValueBefore(code);\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1;\n      seen = true;\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterLeftAlignmentAfter;\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1;\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller');\n      return headDelimiterFiller(code);\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return headDelimiterFiller;\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true;\n      effects.exit('tableDelimiterFiller');\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterRightAlignmentAfter;\n    }\n    effects.exit('tableDelimiterFiller');\n    return headDelimiterRightAlignmentAfter(code);\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, \"whitespace\")(code);\n    }\n    return headDelimiterCellAfter(code);\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code);\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow');\n      effects.exit('tableHead');\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code);\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow');\n    return bodyRowBreak(code);\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return bodyRowBreak;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow');\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, \"whitespace\")(code);\n    }\n\n    // Anything else is cell content.\n    effects.enter(\"data\");\n    return bodyRowData(code);\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return bodyRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? bodyRowEscape : bodyRowData;\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return bodyRowData;\n    }\n    return bodyRowData(code);\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1;\n  let inFirstCellAwaitingPipe = true;\n  /** @type {RowKind} */\n  let rowKind = 0;\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0];\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0];\n  let afterHeadAwaitingFirstBodyRow = false;\n  let lastTableEnd = 0;\n  /** @type {Token | undefined} */\n  let currentTable;\n  /** @type {Token | undefined} */\n  let currentBody;\n  /** @type {Token | undefined} */\n  let currentCell;\n  const map = new EditMap();\n  while (++index < events.length) {\n    const event = events[index];\n    const token = event[1];\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false;\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n          currentBody = undefined;\n          lastTableEnd = 0;\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        };\n        map.add(index, 0, [['enter', currentTable, context]]);\n      } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n        inFirstCellAwaitingPipe = true;\n        currentCell = undefined;\n        lastCell = [0, 0, 0, 0];\n        cell = [0, index + 1, 0, 0];\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false;\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          };\n          map.add(index, 0, [['enter', currentBody, context]]);\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1;\n      }\n      // Cell data.\n      else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n        inFirstCellAwaitingPipe = false;\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n            lastCell = [0, 0, 0, 0];\n          }\n          cell[2] = index;\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false;\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n          }\n          lastCell = cell;\n          cell = [lastCell[1], index, 0, 0];\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true;\n      lastTableEnd = index;\n    } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n      lastTableEnd = index;\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1];\n        currentCell = flushCell(map, context, lastCell, rowKind, index, currentCell);\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell);\n      }\n      rowKind = 0;\n    } else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n      cell[3] = index;\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n  }\n  map.consume(context.events);\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1;\n  while (++index < context.events.length) {\n    const event = context.events[index];\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index);\n    }\n  }\n  return events;\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName = rowKind === 1 ? 'tableHeader' : rowKind === 2 ? 'tableDelimiter' : 'tableData';\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent';\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]));\n    map.add(range[0], 0, [['exit', previousCell, context]]);\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1]);\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  };\n  map.add(range[1], 0, [['enter', previousCell, context]]);\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2]);\n    const relatedEnd = getPoint(context.events, range[3]);\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    };\n    map.add(range[2], 0, [['enter', valueToken, context]]);\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]];\n      const end = context.events[range[3]];\n      start[1].end = Object.assign({}, end[1].end);\n      start[1].type = \"chunkText\";\n      start[1].contentType = \"text\";\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1;\n        const b = range[3] - range[2] - 1;\n        map.add(a, b, []);\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]]);\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd));\n    map.add(rowEnd, 0, [['exit', previousCell, context]]);\n    previousCell = undefined;\n  }\n  return previousCell;\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = [];\n  const related = getPoint(context.events, index);\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related);\n    exits.push(['exit', tableBody, context]);\n  }\n  table.end = Object.assign({}, related);\n  exits.push(['exit', table, context]);\n  map.add(index + 1, 0, exits);\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index];\n  const side = event[0] === 'enter' ? 'start' : 'end';\n  return event[1][side];\n}","/**\n * @import {Extension, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nconst tasklistCheck = {\n  name: 'tasklistCheck',\n  tokenize: tokenizeTasklistCheck\n};\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this;\n  return open;\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n    // Exit if there’s stuff before.\n    self.previous !== null ||\n    // Exit if not in the first content that is the first child of a list\n    // item.\n    !self._gfmTasklistFirstContentOfListItem) {\n      return nok(code);\n    }\n    effects.enter('taskListCheck');\n    effects.enter('taskListCheckMarker');\n    effects.consume(code);\n    effects.exit('taskListCheckMarker');\n    return inside;\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueUnchecked');\n      return close;\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueChecked');\n      return close;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker');\n      effects.consume(code);\n      effects.exit('taskListCheckMarker');\n      effects.exit('taskListCheck');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code);\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({\n        tokenize: spaceThenNonSpace\n      }, ok, nok)(code);\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, \"whitespace\");\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/**\n * @import {Root} from 'mdast'\n * @import {Options} from 'remark-gfm'\n * @import {} from 'remark-parse'\n * @import {} from 'remark-stringify'\n * @import {Processor} from 'unified'\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor<Root>} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n      case 'ArrayBuffer':\n        return as(new Uint8Array(value).buffer, value);\n      case 'DataView': {\n        const { buffer } = new Uint8Array(value);\n        return as(new DataView(buffer), value);\n      }\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n    case 'DataView':\n      return [ARRAY, asString];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type) {\n          let spread = value;\n          if (type === 'DataView') {\n            spread = new Uint8Array(value.buffer);\n          }\n          else if (type === 'ArrayBuffer') {\n            spread = new Uint8Array(value);\n          }\n          return as([type, [...spread]], value);\n        }\n\n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * * if a processor is given,\n *   runs the (rehype) plugins used on it with a hast tree,\n *   then discards the result (*bridge mode*)\n * * otherwise,\n *   returns a hast tree,\n *   the plugins used after `remarkRehype` are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**:\n * > It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * * `rehype-stringify` also has an option `allowDangerousHtml` which will\n *   output the raw HTML.\n *   This is typically discouraged as noted by the option name but is useful if\n *   you completely trust authors\n * * `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *   into standard hast nodes (`element`, `text`, etc);\n *   this is a heavy task as it needs a full HTML parser,\n *   but it is the only way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark,\n * which we follow by default.\n * They are supported by GitHub,\n * so footnotes can be enabled in markdown with `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes,\n * which is hidden for sighted users but shown to assistive technology.\n * When your page is not in English,\n * you must define translated values.\n *\n * Back references use ARIA attributes,\n * but the section label itself uses a heading that is hidden with an\n * `sr-only` class.\n * To show it to sighted users,\n * define different attributes in `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem,\n * as it links footnote calls to footnote definitions on the page through `id`\n * attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * * when the node has a `value`\n *   (and doesn’t have `data.hName`, `data.hProperties`, or `data.hChildren`,\n *   see later),\n *   create a hast `text` node\n * * otherwise,\n *   create a `<div>` element (which could be changed with `data.hName`),\n *   with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @overload\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge | TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given,\n *   configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @import {Schema as SchemaType, Space} from 'property-information'\n */\n\n/** @type {SchemaType} */\nexport class Schema {\n  /**\n   * @param {SchemaType['property']} property\n   *   Property.\n   * @param {SchemaType['normal']} normal\n   *   Normal.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Schema.\n   */\n  constructor(property, normal, space) {\n    this.normal = normal\n    this.property = property\n\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\nSchema.prototype.normal = {}\nSchema.prototype.property = {}\nSchema.prototype.space = undefined\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {ReadonlyArray<Schema>} definitions\n *   Definitions.\n * @param {Space | undefined} [space]\n *   Space.\n * @returns {Schema}\n *   Schema.\n */\nexport function merge(definitions, space) {\n  /** @type {Record<string, Info>} */\n  const property = {}\n  /** @type {Record<string, string>} */\n  const normal = {}\n\n  for (const definition of definitions) {\n    Object.assign(property, definition.property)\n    Object.assign(normal, definition.normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * Get the cleaned case insensitive form of an attribute or property.\n *\n * @param {string} value\n *   An attribute-like or property-like name.\n * @returns {string}\n *   Value that can be used to look up the properly cased property on a\n *   `Schema`.\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","/**\n * @import {Info as InfoType} from 'property-information'\n */\n\n/** @type {InfoType} */\nexport class Info {\n  /**\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute) {\n    this.attribute = attribute\n    this.property = property\n  }\n}\n\nInfo.prototype.attribute = ''\nInfo.prototype.booleanish = false\nInfo.prototype.boolean = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.defined = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.number = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.property = ''\nInfo.prototype.spaceSeparated = false\nInfo.prototype.space = undefined\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @import {Space} from 'property-information'\n */\n\nimport {Info} from './info.js'\nimport * as types from './types.js'\n\nconst checks = /** @type {ReadonlyArray<keyof typeof types>} */ (\n  Object.keys(types)\n)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @param {number | null | undefined} [mask]\n   *   Mask.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @template {keyof DefinedInfo} Key\n *   Key type.\n * @param {DefinedInfo} values\n *   Info.\n * @param {Key} key\n *   Key.\n * @param {DefinedInfo[Key]} value\n *   Value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\n/**\n * @typedef Definition\n *   Definition of a schema.\n * @property {Record<string, string> | undefined} [attributes]\n *   Normalzed names to special attribute case.\n * @property {ReadonlyArray<string> | undefined} [mustUseProperty]\n *   Normalized names that must be set as properties.\n * @property {Record<string, number | null>} properties\n *   Property names to their types.\n * @property {Space | undefined} [space]\n *   Space.\n * @property {Transform} transform\n *   Transform a property name.\n */\n\n/**\n * @callback Transform\n *   Transform.\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Attribute.\n */\n\nimport {normalize} from '../normalize.js'\nimport {DefinedInfo} from './defined-info.js'\nimport {Schema} from './schema.js'\n\n/**\n * @param {Definition} definition\n *   Definition.\n * @returns {Schema}\n *   Schema.\n */\nexport function create(definition) {\n  /** @type {Record<string, Info>} */\n  const properties = {}\n  /** @type {Record<string, string>} */\n  const normals = {}\n\n  for (const [property, value] of Object.entries(definition.properties)) {\n    const info = new DefinedInfo(\n      property,\n      definition.transform(definition.attributes || {}, property),\n      value,\n      definition.space\n    )\n\n    if (\n      definition.mustUseProperty &&\n      definition.mustUseProperty.includes(property)\n    ) {\n      info.mustUseProperty = true\n    }\n\n    properties[property] = info\n\n    normals[normalize(property)] = property\n    normals[normalize(info.attribute)] = property\n  }\n\n  return new Schema(properties, normals, definition.space)\n}\n","import {create} from './util/create.js'\nimport {booleanish, number, spaceSeparated} from './util/types.js'\n\nexport const aria = create({\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  },\n  transform(_, property) {\n    return property === 'role'\n      ? property\n      : 'aria-' + property.slice(4).toLowerCase()\n  }\n})\n","/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} attribute\n *   Attribute.\n * @returns {string}\n *   Transformed attribute.\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Transformed property.\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  booleanish,\n  boolean,\n  commaSeparated,\n  number,\n  overloadedBoolean,\n  spaceSeparated\n} from './util/types.js'\n\nexport const html = create({\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: overloadedBoolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  },\n  space: 'html',\n  transform: caseInsensitiveTransform\n})\n","import {caseSensitiveTransform} from './util/case-sensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  boolean,\n  commaOrSpaceSeparated,\n  commaSeparated,\n  number,\n  spaceSeparated\n} from './util/types.js'\n\nexport const svg = create({\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  },\n  space: 'svg',\n  transform: caseSensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  },\n  space: 'xlink',\n  transform(_, property) {\n    return 'xlink:' + property.slice(5).toLowerCase()\n  }\n})\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  properties: {xmlnsXLink: null, xmlns: null},\n  space: 'xmlns',\n  transform: caseInsensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  properties: {xmlBase: null, xmlLang: null, xmlSpace: null},\n  space: 'xml',\n  transform(_, property) {\n    return 'xml:' + property.slice(3).toLowerCase()\n  }\n})\n","/**\n * @import {Schema} from 'property-information'\n */\n\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\nimport {normalize} from './normalize.js'\n\nconst cap = /[A-Z]/g\nconst dash = /-[a-z]/g\nconst valid = /^data[-\\w.:]+$/i\n\n/**\n * Look up info on a property.\n *\n * In most cases the given `schema` contains info on the property.\n * All standard,\n * most legacy,\n * and some non-standard properties are supported.\n * For these cases,\n * the returned `Info` has hints about the value of the property.\n *\n * `name` can also be a valid data attribute or property,\n * in which case an `Info` object with the correctly cased `attribute` and\n * `property` is returned.\n *\n * `name` can be an unknown attribute,\n * in which case an `Info` object with `attribute` and `property` set to the\n * given name is returned.\n * It is not recommended to provide unsupported legacy or recently specced\n * properties.\n *\n *\n * @param {Schema} schema\n *   Schema;\n *   either the `html` or `svg` export.\n * @param {string} value\n *   An attribute-like or property-like name;\n *   it will be passed through `normalize` to hopefully find the correct info.\n * @returns {Info}\n *   Info.\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let property = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      property = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(property, value)\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Kebab.\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Camel.\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","// Note: types exposed from `index.d.ts`.\nimport {merge} from './lib/util/merge.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\nimport {xlink} from './lib/xlink.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {xml} from './lib/xml.js'\n\nexport {hastToReact} from './lib/hast-to-react.js'\n\nexport const html = merge([aria, htmlBase, xlink, xmlns, xml], 'html')\n\nexport {find} from './lib/find.js'\nexport {normalize} from './lib/normalize.js'\n\nexport const svg = merge([aria, svgBase, xlink, xmlns, xml], 'svg')\n","/**\n * @typedef CoreOptions\n * @property {ReadonlyArray<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\nconst defaultSubsetRegex = /[\"&'<>`]/g\nconst surrogatePairsRegex = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g\nconst controlCharactersRegex =\n  // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n  /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g\nconst regexEscapeRegex = /[|\\\\{}()[\\]^$+*?.]/g\n\n/** @type {WeakMap<ReadonlyArray<string>, RegExp>} */\nconst subsetToRegexCache = new WeakMap()\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset\n      ? charactersToExpressionCached(options.subset)\n      : defaultSubsetRegex,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(surrogatePairsRegex, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(controlCharactersRegex, basic)\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * A wrapper function that caches the result of `charactersToExpression` with a WeakMap.\n * This can improve performance when tooling calls `charactersToExpression` repeatedly\n * with the same subset.\n *\n * @param {ReadonlyArray<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpressionCached(subset) {\n  let cached = subsetToRegexCache.get(subset)\n\n  if (!cached) {\n    cached = charactersToExpression(subset)\n    subsetToRegexCache.set(subset, cached)\n  }\n\n  return cached\n}\n\n/**\n * @param {ReadonlyArray<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(regexEscapeRegex, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n","const hexadecimalRegex = /[\\dA-Fa-f]/\n\n/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !hexadecimalRegex.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","const decimalRegex = /\\d/\n\n/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !decimalRegex.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n}\n","/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nexport const dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n]\n","import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterEntitiesHtml4} from 'character-entities-html4'\nimport {dangerous} from '../constant/dangerous.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {}\n\n/** @type {string} */\nlet key\n\nfor (key in characterEntitiesHtml4) {\n  if (own.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key\n  }\n}\n\nconst notAlphanumericRegex = /[^\\dA-Za-z]/\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code)\n\n  if (own.call(characters, character)) {\n    const name = characters[character]\n    const value = '&' + name\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          notAlphanumericRegex.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n","/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n  /** @type {string|undefined} */\n  let named\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n","/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n","/**\n * @import {Comment, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\nconst htmlCommentRegex = /^>|^->|<!--|-->|--!>|<!-$/g\n\n// Declare arrays as variables so it can be cached by `stringifyEntities`\nconst bogusCommentEntitySubset = ['>']\nconst commentEntitySubset = ['<', '>']\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {\n            subset: bogusCommentEntitySubset\n          })\n        ) +\n        '>'\n    : '<!--' + node.value.replace(htmlCommentRegex, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: commentEntitySubset\n      })\n    )\n  }\n}\n","/**\n * @import {Doctype, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\n/**\n * Serialize a doctype.\n *\n * @param {Doctype} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @import {Parents, RootContent} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/** @type {Array<RootContent>} */\nconst emptyChildren = []\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @template {Parents} Parent\n   *   Parent type.\n   * @param {Parent | undefined} parent\n   *   Parent.\n   * @param {number | undefined} index\n   *   Index of child in `parent`.\n   * @param {boolean | undefined} [includeWhitespace=false]\n   *   Whether to include whitespace (default: `false`).\n   * @returns {Parent extends {children: Array<infer Child>} ? Child | undefined : never}\n   *   Child of parent.\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : emptyChildren\n    let offset = (index || 0) + increment\n    let next = siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    // @ts-expect-error: it’s a correct child.\n    return next\n  }\n}\n","/**\n * @import {Element, Parents} from 'hast'\n */\n\n/**\n * @callback OmitHandle\n *   Check if a tag can be omitted.\n * @param {Element} element\n *   Element to check.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether to omit a tag.\n *\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n","/**\n * @import {Element, Parents} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter} from './util/siblings.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  body,\n  caption: headOrColgroupOrCaption,\n  colgroup: headOrColgroupOrCaption,\n  dd,\n  dt,\n  head: headOrColgroupOrCaption,\n  html,\n  li,\n  optgroup,\n  option,\n  p,\n  rp: rubyElement,\n  rt: rubyElement,\n  tbody,\n  td: cells,\n  tfoot,\n  th: cells,\n  thead,\n  tr\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n","/**\n * @import {Element, Parents} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter, siblingBefore} from './util/siblings.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  body,\n  colgroup,\n  head,\n  html,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  /** @type {Set<string>} */\n  const seen = new Set()\n\n  // Whether `srcdoc` or not,\n  // make sure the content model at least doesn’t have too many `base`s/`title`s.\n  for (const child of node.children) {\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'base' || child.tagName === 'title')\n    ) {\n      if (seen.has(child.tagName)) return false\n      seen.add(child.tagName)\n    }\n  }\n\n  // “May be omitted if the element is empty,\n  // or if the first thing inside the head element is an element.”\n  const child = node.children[0]\n  return !child || child.type === 'element'\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'col')\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'tr')\n}\n","/**\n * @import {Element, Parents, Properties} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {ccount} from 'ccount'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {find, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {closing} from '../omission/closing.js'\nimport {opening} from '../omission/opening.js'\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'double' | 'name' | 'single' | 'unquoted', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function element(node, index, parent, state) {\n  const schema = state.schema\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg\n  }\n\n  const attributes = serializeAttributes(state, node.properties)\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  state.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  // Note: `menuitem` has since been removed from the HTML spec, and so is no\n  // longer void.\n  if (content) selfClosing = false\n\n  if (attributes || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attributes ? ' ' + attributes : '')\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attributes.charAt(attributes.length - 1)\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} properties\n * @returns {string}\n */\nfunction serializeAttributes(state, properties) {\n  /** @type {Array<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (properties) {\n    for (key in properties) {\n      if (properties[key] !== null && properties[key] !== undefined) {\n        const value = serializeAttribute(state, key, properties[key])\n        if (value) values.push(value)\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : undefined\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {Properties[keyof Properties]} value\n * @returns {string}\n */\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key)\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1\n  const y = state.settings.allowDangerousCharacters ? 0 : 1\n  let quote = state.quote\n  /** @type {string | undefined} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    (info.boolean || info.overloadedBoolean) &&\n    (typeof value !== 'string' || value === info.attribute || value === '')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === null ||\n    value === undefined ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can’t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? commas : spaces)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value)\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        attribute: true,\n        subset: constants.unquoted[x][y]\n      })\n    )\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n","/**\n * @import {Parents, Text} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {State} from '../index.js'\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n// Declare array as variable so it can be cached by `stringifyEntities`\nconst textEntitySubset = ['<', '&']\n\n/**\n * Serialize a text node.\n *\n * @param {Raw | Text} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: textEntitySubset\n        })\n      )\n}\n","/**\n * @import {Parents} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {State} from '../index.js'\n */\n\nimport {text} from './text.js'\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n","/**\n * @import {Parents, Root} from 'hast'\n * @import {State} from '../index.js'\n */\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function root(node, _1, _2, state) {\n  return state.all(node)\n}\n","/**\n * @import {Nodes, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {zwitch} from 'zwitch'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {element} from './element.js'\nimport {raw} from './raw.js'\nimport {root} from './root.js'\nimport {text} from './text.js'\n\n/**\n * @type {(node: Nodes, index: number | undefined, parent: Parents | undefined, state: State) => string}\n */\nexport const handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n})\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node_\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node_) {\n  // `type` is guaranteed by runtime JS.\n  const node = /** @type {Nodes} */ (node_)\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n","/**\n * @import {Nodes, Parents, RootContent} from 'hast'\n * @import {Schema} from 'property-information'\n * @import {Options as StringifyEntitiesOptions} from 'stringify-entities'\n */\n\n/**\n * @typedef {Omit<StringifyEntitiesOptions, 'attribute' | 'escapeOnly' | 'subset'>} CharacterReferences\n *\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [allowDangerousCharacters=false]\n *   Do not encode some characters which cause XSS vulnerabilities in older\n *   browsers (default: `false`).\n *\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Allow `raw` nodes and insert them as raw HTML (default: `false`).\n *\n *   When `false`, `Raw` nodes are encoded.\n *\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowParseErrors=false]\n *   Do not encode characters which cause parse errors (even though they work),\n *   to save bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [bogusComments=false]\n *   Use “bogus comments” instead of comments to save byes: `<?charlie>`\n *   instead of `<!--charlie-->` (default: `false`).\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {CharacterReferences | null | undefined} [characterReferences]\n *   Configure how to serialize character references (optional).\n * @property {boolean | null | undefined} [closeEmptyElements=false]\n *   Close SVG elements without any content with slash (`/`) on the opening tag\n *   instead of an end tag: `<circle />` instead of `<circle></circle>`\n *   (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the HTML space.\n * @property {boolean | null | undefined} [closeSelfClosing=false]\n *   Close self-closing nodes with an extra slash (`/`): `<img />` instead of\n *   `<img>` (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [collapseEmptyAttributes=false]\n *   Collapse empty attributes: get `class` instead of `class=\"\"` (default:\n *   `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: boolean attributes (such as `hidden`) are always collapsed.\n * @property {boolean | null | undefined} [omitOptionalTags=false]\n *   Omit optional opening and closing tags (default: `false`).\n *\n *   For example, in `<ol><li>one</li><li>two</li></ol>`, both `</li>` closing\n *   tags can be omitted.\n *   The first because it’s followed by another `li`, the last because it’s\n *   followed by nothing.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [preferUnquoted=false]\n *   Leave attributes unquoted if that results in less bytes (default: `false`).\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [quoteSmart=false]\n *   Use the other quote if that results in less bytes (default: `false`).\n * @property {Quote | null | undefined} [quote='\"']\n *   Preferred quote to use (default: `'\"'`).\n * @property {Space | null | undefined} [space='html']\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it (default: `'html'`).\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use [`xast`][xast] if you need to support SVG as XML.\n * @property {boolean | null | undefined} [tightAttributes=false]\n *   Join attributes together, without whitespace, if possible: get\n *   `class=\"a b\"title=\"c d\"` instead of `class=\"a b\" title=\"c d\"` to save\n *   bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [tightCommaSeparatedLists=false]\n *   Join known comma-separated attribute values with just a comma (`,`),\n *   instead of padding them on the right as well (`,␠`, where `␠` represents a\n *   space) (default: `false`).\n * @property {boolean | null | undefined} [tightDoctype=false]\n *   Drop unneeded spaces in doctypes: `<!doctypehtml>` instead of\n *   `<!doctype html>` to save bytes (default: `false`).\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [tightSelfClosing=false]\n *   Do not use an extra space when closing self-closing elements: `<img/>`\n *   instead of `<img />` (default: `false`).\n *\n *   > 👉 **Note**: only used if `closeSelfClosing: true` or\n *   > `closeEmptyElements: true`.\n * @property {boolean | null | undefined} [upperDoctype=false]\n *   Use a `<!DOCTYPE…` instead of `<!doctype…` (default: `false`).\n *\n *   Useless except for XHTML.\n * @property {ReadonlyArray<string> | null | undefined} [voids]\n *   Tag names of elements to serialize without closing tag (default: `html-void-elements`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: It’s highly unlikely that you want to pass this, because\n *   > hast is not for XML, and HTML will not add more void elements.\n *\n * @typedef {'\"' | \"'\"} Quote\n *   HTML quotes for attribute values.\n *\n * @typedef {Omit<Required<{[key in keyof Options]: Exclude<Options[key], null | undefined>}>, 'space' | 'quote'>} Settings\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Parents | undefined) => string} all\n *   Serialize the children of a parent node.\n * @property {Quote} alternative\n *   Alternative quote.\n * @property {(node: Nodes, index: number | undefined, parent: Parents | undefined) => string} one\n *   Serialize one node.\n * @property {Quote} quote\n *   Preferred quote.\n * @property {Schema} schema\n *   Current schema.\n * @property {Settings} settings\n *   User configuration.\n */\n\nimport {htmlVoidElements} from 'html-void-elements'\nimport {html, svg} from 'property-information'\nimport {handle} from './handle/index.js'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/** @type {CharacterReferences} */\nconst emptyCharacterReferences = {}\n\n/** @type {Array<never>} */\nconst emptyChildren = []\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Array<RootContent> | Nodes} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized HTML.\n */\nexport function toHtml(tree, options) {\n  const options_ = options || emptyOptions\n  const quote = options_.quote || '\"'\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || emptyCharacterReferences,\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html,\n    quote,\n    alternative\n  }\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parents | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nexport function all(parent) {\n  /** @type {Array<string>} */\n  const results = []\n  const children = (parent && parent.children) || emptyChildren\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent)\n  }\n\n  return results.join('')\n}\n","/**\n * @import {Root} from 'hast'\n * @import {Options} from 'hast-util-to-html'\n * @import {Compiler, Processor} from 'unified'\n */\n\nimport {toHtml} from 'hast-util-to-html'\n\n/**\n * Plugin to add support for serializing as HTML.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function rehypeStringify(options) {\n  /** @type {Processor<undefined, undefined, undefined, Root, string>} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n  const settings = {...self.data('settings'), ...options}\n\n  self.compiler = compiler\n\n  /**\n   * @type {Compiler<Root, string>}\n   */\n  function compiler(tree) {\n    return toHtml(tree, settings)\n  }\n}\n","/**\n * Remark plugin for CriticMarkup syntax\n * Supports: additions, deletions, substitutions, comments, and highlights\n */\n\nimport { visit } from 'unist-util-visit';\nimport type { Root, Text, Html, Parent } from 'mdast';\nimport type { Plugin } from 'unified';\n\ninterface CriticMarkupOptions {\n  // Whether to render in accept mode (show additions/new, hide deletions/old)\n  acceptMode?: boolean;\n  // Whether to render in reject mode (show deletions/old, hide additions/new)\n  rejectMode?: boolean;\n  // CSS class prefix for generated HTML\n  classPrefix?: string;\n}\n\nconst defaultOptions: CriticMarkupOptions = {\n  acceptMode: false,\n  rejectMode: false,\n  classPrefix: 'critic',\n};\n\n/**\n * CriticMarkup patterns\n * Using [\\s\\S] instead of . to match newlines\n */\nconst PATTERNS = {\n  // Addition: {++text++}\n  addition: /\\{\\+\\+([\\s\\S]+?)\\+\\+\\}/g,\n  // Deletion: {--text--}\n  deletion: /\\{--([\\s\\S]+?)--\\}/g,\n  // Substitution: {~~old~>new~~}\n  substitution: /\\{~~([\\s\\S]+?)~>([\\s\\S]+?)~~\\}/g,\n  // Comment: {>>comment<<}\n  comment: /\\{>>([\\s\\S]+?)<<\\}/g,\n  // Highlight: {==text==} optionally followed by {>>comment<<}\n  highlight: /\\{==([\\s\\S]+?)==\\}(?:\\{>>([\\s\\S]+?)<<\\})?/g,\n};\n\n/**\n * Convert CriticMarkup syntax to HTML\n */\nfunction processCriticMarkup(\n  text: string,\n  options: CriticMarkupOptions\n): string {\n  const { acceptMode, rejectMode, classPrefix } = options;\n  let result = text;\n\n  // Process additions\n  result = result.replace(PATTERNS.addition, (_match, content) => {\n    if (rejectMode) {\n      return ''; // Hide additions in reject mode\n    }\n    return `<ins class=\"${classPrefix}-addition\" data-critic-type=\"addition\">${content}</ins>`;\n  });\n\n  // Process deletions\n  result = result.replace(PATTERNS.deletion, (_match, content) => {\n    if (acceptMode) {\n      return ''; // Hide deletions in accept mode\n    }\n    return `<del class=\"${classPrefix}-deletion\" data-critic-type=\"deletion\">${content}</del>`;\n  });\n\n  // Process substitutions\n  result = result.replace(PATTERNS.substitution, (_match, oldText, newText) => {\n    let markup = '';\n\n    if (!acceptMode) {\n      markup += `<del class=\"${classPrefix}-substitution-old\" data-critic-type=\"deletion\">${oldText}</del>`;\n    }\n\n    if (!rejectMode) {\n      markup += `<ins class=\"${classPrefix}-substitution-new\" data-critic-type=\"addition\">${newText}</ins>`;\n    }\n\n    return `<span class=\"${classPrefix}-substitution\" data-critic-type=\"substitution\">${markup}</span>`;\n  });\n\n  // Process highlights with optional comments\n  result = result.replace(PATTERNS.highlight, (_match, text, comment) => {\n    const commentHtml = comment\n      ? `<span class=\"${classPrefix}-comment\" data-critic-type=\"comment\">${comment}</span>`\n      : '';\n    return `<mark class=\"${classPrefix}-highlight\" data-critic-type=\"highlight\">${text}</mark>${commentHtml}`;\n  });\n\n  // Process standalone comments\n  result = result.replace(PATTERNS.comment, (_match, content) => {\n    return `<span class=\"${classPrefix}-comment\" data-critic-type=\"comment\">${content}</span>`;\n  });\n\n  return result;\n}\n\n/**\n * Check if text contains CriticMarkup syntax\n */\nfunction hasCriticMarkup(text: string): boolean {\n  return Object.values(PATTERNS).some((pattern) => {\n    pattern.lastIndex = 0; // Reset regex\n    return pattern.test(text);\n  });\n}\n\nfunction renderSubstitutionMarkup(\n  oldText: string,\n  newText: string,\n  options: CriticMarkupOptions\n): string {\n  const { classPrefix, acceptMode, rejectMode } = options;\n\n  let markup = '';\n\n  if (!acceptMode) {\n    markup += `<del class=\"${classPrefix}-substitution-old\" data-critic-type=\"deletion\">${oldText}</del>`;\n  }\n\n  if (!rejectMode) {\n    markup += `<ins class=\"${classPrefix}-substitution-new\" data-critic-type=\"addition\">${newText}</ins>`;\n  }\n\n  return `<span class=\"${classPrefix}-substitution\" data-critic-type=\"substitution\">${markup}</span>`;\n}\n\nfunction processNodeChildren(node: Parent, options: CriticMarkupOptions): void {\n  if (!node.children) return;\n\n  const nextChildren: Parent['children'] = [];\n\n  for (let i = 0; i < node.children.length; i++) {\n    const child = node.children[i] as any;\n\n    if (child.type === 'delete') {\n      const previous = nextChildren[nextChildren.length - 1] as\n        | Text\n        | Html\n        | undefined;\n      const nextSibling = node.children[i + 1] as Text | undefined;\n      const deleteText =\n        child.children\n          ?.map((c: any) => ('value' in c ? (c as Text).value : ''))\n          .join('') ?? '';\n      const [oldText, newText] = deleteText.split('~>');\n\n      if (\n        oldText !== undefined &&\n        newText !== undefined &&\n        previous &&\n        previous.type === 'text' &&\n        nextSibling &&\n        nextSibling.type === 'text' &&\n        previous.value?.includes('{') &&\n        nextSibling.value?.includes('}')\n      ) {\n        const braceIndex = previous.value.lastIndexOf('{');\n        if (braceIndex !== -1) {\n          const updated =\n            previous.value.slice(0, braceIndex) +\n            previous.value.slice(braceIndex + 1);\n          if (updated) {\n            previous.value = updated;\n          } else {\n            nextChildren.pop();\n          }\n        }\n\n        const substitutionHtml = renderSubstitutionMarkup(\n          oldText,\n          newText,\n          options\n        );\n        nextChildren.push({\n          type: 'html',\n          value: substitutionHtml,\n        } as Html);\n\n        nextSibling.value = nextSibling.value.replace(/^\\}/, '');\n\n        continue;\n      }\n    }\n\n    nextChildren.push(child);\n  }\n\n  node.children = nextChildren;\n}\n\n/**\n * Remark plugin to transform CriticMarkup syntax\n */\nexport const remarkCriticMarkup: Plugin<[CriticMarkupOptions?], Root> = (\n  userOptions = {}\n) => {\n  const options = { ...defaultOptions, ...userOptions };\n\n  return (tree: Root) => {\n    visit(tree, 'text', (node: Text, index, parent) => {\n      if (!parent || index === null || index === undefined) return;\n\n      const text = node.value;\n\n      // Only process if text contains CriticMarkup\n      if (!hasCriticMarkup(text)) return;\n\n      // Convert CriticMarkup to HTML\n      const html = processCriticMarkup(text, options);\n\n      // Replace text node with HTML node\n      const htmlNode: Html = {\n        type: 'html',\n        value: html,\n      };\n\n      (parent as Parent).children[index] = htmlNode;\n    });\n\n    visit(\n      tree,\n      ['paragraph', 'heading', 'table', 'tableRow', 'tableCell'],\n      (node: any) => {\n        processNodeChildren(node, options);\n      }\n    );\n  };\n};\n\n/**\n * Extract all CriticMarkup annotations from text\n */\nexport function extractCriticMarkup(text: string): {\n  type: 'addition' | 'deletion' | 'substitution' | 'comment' | 'highlight';\n  content: string;\n  comment?: string;\n  position: { start: number; end: number };\n}[] {\n  const annotations: ReturnType<typeof extractCriticMarkup> = [];\n\n  // Extract additions\n  let match;\n  PATTERNS.addition.lastIndex = 0;\n  while ((match = PATTERNS.addition.exec(text)) !== null) {\n    const fullMatch = match?.[0] ?? '';\n    const content = match?.[1] ?? '';\n    const matchIndex = match?.index ?? 0;\n    annotations.push({\n      type: 'addition',\n      content,\n      position: { start: matchIndex, end: matchIndex + fullMatch.length },\n    });\n  }\n\n  // Extract deletions\n  PATTERNS.deletion.lastIndex = 0;\n  while ((match = PATTERNS.deletion.exec(text)) !== null) {\n    const fullMatch = match?.[0] ?? '';\n    const content = match?.[1] ?? '';\n    const matchIndex = match?.index ?? 0;\n    annotations.push({\n      type: 'deletion',\n      content,\n      position: { start: matchIndex, end: matchIndex + fullMatch.length },\n    });\n  }\n\n  // Extract substitutions\n  PATTERNS.substitution.lastIndex = 0;\n  while ((match = PATTERNS.substitution.exec(text)) !== null) {\n    const fullMatch = match?.[0] ?? '';\n    const left = match?.[1] ?? '';\n    const right = match?.[2] ?? '';\n    const matchIndex = match?.index ?? 0;\n    annotations.push({\n      type: 'substitution',\n      content: `${left}~>${right}`,\n      position: { start: matchIndex, end: matchIndex + fullMatch.length },\n    });\n  }\n\n  // Extract highlights\n  PATTERNS.highlight.lastIndex = 0;\n  while ((match = PATTERNS.highlight.exec(text)) !== null) {\n    const fullMatch = match?.[0] ?? '';\n    const content = match?.[1] ?? '';\n    const comment = match?.[2] ?? '';\n    const matchIndex = match?.index ?? 0;\n    annotations.push({\n      type: 'highlight',\n      content,\n      comment: comment || undefined,\n      position: { start: matchIndex, end: matchIndex + fullMatch.length },\n    });\n  }\n\n  // Extract standalone comments\n  PATTERNS.comment.lastIndex = 0;\n  while ((match = PATTERNS.comment.exec(text)) !== null) {\n    const fullMatch = match?.[0] ?? '';\n    const content = match?.[1] ?? '';\n    const matchIndex = match?.index ?? 0;\n    // Skip if this comment is part of a highlight (already processed)\n    const prevChar = matchIndex > 0 ? text.charAt(matchIndex - 1) : '';\n    const isPreviousHighlight = prevChar === '}';\n    if (!isPreviousHighlight) {\n      annotations.push({\n        type: 'comment',\n        content,\n        position: { start: matchIndex, end: matchIndex + fullMatch.length },\n      });\n    }\n  }\n\n  return annotations.sort((a, b) => a.position.start - b.position.start);\n}\n\nexport default remarkCriticMarkup;\n","import { unified, type Processor } from 'unified';\nimport remarkParse from 'remark-parse';\nimport remarkGfm from 'remark-gfm';\nimport remarkRehype from 'remark-rehype';\nimport rehypeStringify from 'rehype-stringify';\n\nimport { remarkCriticMarkup } from './remark-criticmarkup';\n\nexport interface RendererOptions {\n  enableCriticMarkup: boolean;\n  allowRawHtml: boolean;\n}\n\nconst DEFAULT_OPTIONS: RendererOptions = {\n  enableCriticMarkup: true,\n  allowRawHtml: false,\n};\n\n/**\n * Shared renderer for markdown pipelines. Caches unified processors by option set\n * so we do not rebuild the entire chain for every render call.\n */\ntype MarkdownProcessor = Processor<any, any, any, any, string>;\n\nexport class MarkdownRenderer {\n  private readonly cache = new Map<string, MarkdownProcessor>();\n\n  render(markdown: string, options?: Partial<RendererOptions>): string {\n    const processor = this.getProcessor(options);\n    return String(processor.processSync(markdown));\n  }\n\n  renderAsync(\n    markdown: string,\n    options?: Partial<RendererOptions>\n  ): Promise<string> {\n    const processor = this.getProcessor(options);\n    return processor.process(markdown).then(String);\n  }\n\n  private getProcessor(partial?: Partial<RendererOptions>): MarkdownProcessor {\n    const opts = { ...DEFAULT_OPTIONS, ...partial };\n    const cacheKey = `${opts.enableCriticMarkup}:${opts.allowRawHtml}`;\n\n    const cached = this.cache.get(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    const pipeline = unified() as unknown as MarkdownProcessor;\n    pipeline.use(remarkParse).use(remarkGfm);\n\n    if (opts.enableCriticMarkup) {\n      pipeline.use(remarkCriticMarkup as any);\n    }\n\n    pipeline\n      .use(remarkRehype as any, { allowDangerousHtml: true })\n      .use(rehypeStringify as any, { allowDangerousHtml: true });\n\n    this.cache.set(cacheKey, pipeline as MarkdownProcessor);\n    return pipeline as MarkdownProcessor;\n  }\n}\n","/**\n * Lightweight HTML sanitizer for browser/JSDOM contexts.\n * Removes script tags and inline event handlers while preserving markup.\n */\nexport function sanitizeHtml(html: string): string {\n  if (typeof document === 'undefined') {\n    return html;\n  }\n\n  const temp = document.createElement('div');\n  temp.innerHTML = html;\n\n  temp.querySelectorAll('script').forEach((node) => {\n    const replacement = document.createTextNode(node.outerHTML);\n    node.replaceWith(replacement);\n  });\n\n  temp.querySelectorAll<HTMLElement>('*').forEach((element) => {\n    Array.from(element.attributes).forEach((attr) => {\n      if (attr.name.toLowerCase().startsWith('on')) {\n        element.removeAttribute(attr.name);\n      }\n    });\n  });\n\n  const serialized = temp.innerHTML;\n  return normalizeEntities(serialized);\n}\n\nfunction normalizeEntities(value: string): string {\n  return value\n    .replace(/&#x26;/gi, '&amp;')\n    .replace(/&#x3c;/gi, '&lt;')\n    .replace(/&#x3e;/gi, '&gt;');\n}\n","/**\n * Markdown Module\n * Handles markdown-to-HTML conversion using Remark/Unified ecosystem\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport type { Root } from 'mdast';\nimport { MarkdownRenderer, type RendererOptions } from './MarkdownRenderer';\nimport { sanitizeHtml } from './sanitize';\nimport { unified } from 'unified';\nimport remarkParse from 'remark-parse';\nimport remarkGfm from 'remark-gfm';\n\nexport interface MarkdownOptions {\n  enableCriticMarkup?: boolean;\n  allowRawHtml?: boolean;\n}\n\nexport class MarkdownModule {\n  private options: Required<MarkdownOptions>;\n  private renderer: MarkdownRenderer;\n  private readonly astProcessor = unified().use(remarkParse).use(remarkGfm);\n\n  constructor(options: MarkdownOptions = {}) {\n    this.options = {\n      enableCriticMarkup: options.enableCriticMarkup ?? true,\n      allowRawHtml: options.allowRawHtml ?? false,\n    };\n    this.renderer = new MarkdownRenderer();\n  }\n\n  public getOptions(): Readonly<Required<MarkdownOptions>> {\n    return { ...this.options };\n  }\n\n  public setEnableCriticMarkup(enabled: boolean): void {\n    this.options = { ...this.options, enableCriticMarkup: enabled };\n  }\n\n  public setAllowRawHtml(allow: boolean): void {\n    this.options = { ...this.options, allowRawHtml: allow };\n  }\n\n  public updateOptions(update: MarkdownOptions): void {\n    this.options = {\n      enableCriticMarkup:\n        update.enableCriticMarkup ?? this.options.enableCriticMarkup,\n      allowRawHtml: update.allowRawHtml ?? this.options.allowRawHtml,\n    };\n  }\n\n  private resolveRendererOptions(\n    override?: Partial<RendererOptions>\n  ): RendererOptions {\n    const base: RendererOptions = {\n      enableCriticMarkup: this.options.enableCriticMarkup,\n      allowRawHtml: this.options.allowRawHtml,\n    };\n    if (!override) {\n      return base;\n    }\n    const resolved = { ...base };\n    if (override.enableCriticMarkup !== undefined) {\n      resolved.enableCriticMarkup = override.enableCriticMarkup;\n    }\n    if (override.allowRawHtml !== undefined) {\n      resolved.allowRawHtml = override.allowRawHtml;\n    }\n    return resolved;\n  }\n\n  private prepareMarkdown(markdown: string): string {\n    return this.normalizeCriticMarkupLists(markdown);\n  }\n\n  private normalizeCriticMarkupLists(markdown: string): string {\n    const pattern =\n      /(^|\\n)([ \\t]*)\\{(\\+\\+|--|~~)\\s*((?:[*+-])|(?:\\d+[.)]))\\s+([\\s\\S]*?)\\3\\}(?=\\n|$)/g;\n\n    return markdown.replace(\n      pattern,\n      (\n        _match,\n        lineBreak: string,\n        indent: string,\n        criticToken: string,\n        marker: string,\n        body: string\n      ) => {\n        const cleanedBody = body.replace(/^\\s+/, '').replace(/\\s+$/, '');\n        const normalizedMarker = marker.trim();\n        return `${lineBreak}${indent}${normalizedMarker} {${criticToken}${cleanedBody}${criticToken}}`;\n      }\n    );\n  }\n\n  /**\n   * Convert markdown to HTML using Remark/Unified pipeline (async)\n   */\n  public async render(\n    markdown: string,\n    enableCriticMarkup?: boolean\n  ): Promise<string> {\n    const options = this.resolveRendererOptions({ enableCriticMarkup });\n    const prepared = this.prepareMarkdown(markdown);\n    const html = await this.renderer.renderAsync(prepared, options);\n    return this.sanitizeOutput(html, options);\n  }\n\n  /**\n   * Convert markdown to HTML using Remark/Unified pipeline (synchronous)\n   */\n  public renderSync(markdown: string, enableCriticMarkup?: boolean): string {\n    const options = this.resolveRendererOptions({ enableCriticMarkup });\n    const prepared = this.prepareMarkdown(markdown);\n    const html = this.renderer.render(prepared, options);\n    return this.sanitizeOutput(html, options);\n  }\n\n  /**\n   * Convert markdown inline content to HTML\n   */\n  public renderInline(markdown: string): string {\n    // For inline content, just render and strip the outer <p> tags\n    const html = this.renderSync(markdown);\n    return html.replace(/^<p>|<\\/p>$/g, '').trim();\n  }\n\n  private sanitizeOutput(html: string, options: RendererOptions): string {\n    return options.allowRawHtml ? html : sanitizeHtml(html);\n  }\n\n  /**\n   * Parse markdown to MDAST (Markdown Abstract Syntax Tree)\n   */\n  public parseToAST(markdown: string): Root {\n    const prepared = this.prepareMarkdown(markdown);\n    return this.astProcessor.parse(prepared) as Root;\n  }\n\n  /**\n   * Extract plain text from markdown using Remark\n   */\n  public toPlainText(markdown: string): string {\n    const ast = this.parseToAST(markdown);\n    return ast.children\n      .map((child) => toString(child).trim())\n      .filter((segment) => segment.length > 0)\n      .join('\\n');\n  }\n\n  /**\n   * Convert a single element to HTML based on its type\n   */\n  public renderElement(content: string, type: string, level?: number): string {\n    // For headers, strip existing # and attributes, then render\n    if (type === 'Header' && level) {\n      return this.renderHeading(content, level);\n    }\n\n    // For block quotes, ensure proper formatting\n    if (type === 'BlockQuote') {\n      // If content doesn't start with >, add it\n      if (!content.trim().startsWith('>')) {\n        const lines = content.split('\\n');\n        const quotedLines = lines.map((line) => `> ${line}`);\n        return this.renderSync(quotedLines.join('\\n'));\n      }\n    }\n\n    if (type === 'CodeBlock') {\n      let html = this.renderSync(content);\n      if (!html.includes('<code>')) {\n        html = html.replace(/<code[^>]*>/, '<code>');\n      }\n      return html;\n    }\n\n    // For all other types, render as-is\n    return this.renderSync(content);\n  }\n\n  /**\n   * Sanitize HTML to prevent XSS\n   */\n  public sanitize(html: string): string {\n    return sanitizeHtml(html);\n  }\n\n  /**\n   * Remove trailing Pandoc attribute blocks (e.g. {#id .class}) from heading source\n   * while leaving CriticMarkup blocks like {++addition++} untouched.\n   */\n  private stripPandocHeadingAttributes(source: string): string {\n    let working = source.trimEnd();\n    const attributePattern = /\\s+\\{([^}]+)\\}\\s*$/;\n\n    while (true) {\n      const matchResult = attributePattern.exec(working);\n      if (!matchResult) {\n        break;\n      }\n\n      const rawAttribute = matchResult[1]?.trim() ?? '';\n      if (!rawAttribute || !this.isPandocAttributeBlock(rawAttribute)) {\n        break;\n      }\n\n      const fullMatch = matchResult[0] ?? '';\n      working = working\n        .slice(0, Math.max(0, working.length - fullMatch.length))\n        .trimEnd();\n    }\n\n    return working;\n  }\n\n  private renderHeading(content: string, level: number): string {\n    const cleaned = this.stripPandocHeadingAttributes(content);\n    const textContent = this.extractHeadingText(cleaned);\n    const markdown = textContent\n      ? `${'#'.repeat(level)} ${textContent}`\n      : `${'#'.repeat(level)}`;\n    return this.renderSync(markdown);\n  }\n\n  private extractHeadingText(source: string): string {\n    const trimmed = source.trim();\n\n    const stripLeadingMarkers = (value: string): string => {\n      if (value.startsWith('\\\\#')) {\n        return value;\n      }\n      return value.replace(/^#+\\s+/, '').trim();\n    };\n\n    const atxMatch = trimmed.match(/^#+\\s*(.*)$/);\n    if (atxMatch) {\n      const candidate = atxMatch[1]?.trim() ?? '';\n      return stripLeadingMarkers(candidate);\n    }\n\n    const lines = trimmed.split(/\\r?\\n/);\n    if (lines.length >= 2) {\n      const underline = lines[1]?.trim() ?? '';\n      if (/^=+$|^-+$/.test(underline)) {\n        const candidate = lines[0]?.trim() ?? '';\n        return stripLeadingMarkers(candidate);\n      }\n    }\n\n    return stripLeadingMarkers(trimmed);\n  }\n\n  private isPandocAttributeBlock(content: string): boolean {\n    if (!content) {\n      return false;\n    }\n\n    // Pandoc attributes are sequences of tokens separated by spaces.\n    // Tokens can be:\n    // - #id\n    // - .class\n    // - key=value\n    // CriticMarkup uses braces but different prefixes ({++ ... ++}, {== ... ==}, etc.)\n    const tokens = content.split(/\\s+/);\n    if (tokens.length === 0) {\n      return false;\n    }\n\n    return tokens.every((token) => {\n      if (!token) return false;\n      if (token.startsWith('#') && token.length > 1) return true;\n      if (token.startsWith('.') && token.length > 1) return true;\n      if (\n        token.includes('=') &&\n        !token.startsWith('{') &&\n        !token.startsWith('}')\n      )\n        return true;\n      return false;\n    });\n  }\n}\n\nexport default MarkdownModule;\n","/**\n * Comments Module\n * CriticMarkup parser and renderer for comments and annotations\n */\n\nimport type { Comment } from '@/types';\n\n/**\n * CriticMarkup patterns\n * {++ addition ++}\n * {-- deletion --}\n * {~~ substitution ~> replacement ~~}\n * {>> comment <<}\n * {== highlight ==}{>> comment <<}\n */\n\nexport interface CriticMarkupMatch {\n  type: 'addition' | 'deletion' | 'substitution' | 'comment' | 'highlight';\n  content: string;\n  replacement?: string;\n  comment?: string;\n  start: number;\n  end: number;\n}\n\ntype MarkdownSegment = {\n  type: 'text' | 'code';\n  content: string;\n  start: number;\n};\n\ntype MarkdownRange = {\n  start: number;\n  end: number;\n};\n\nexport class CommentsModule {\n  private comments: Map<string, Comment> = new Map();\n\n  // CriticMarkup regex patterns\n  private readonly patterns = {\n    addition: /\\{\\+\\+(.+?)\\+\\+\\}/g,\n    deletion: /\\{--(.+?)--\\}/g,\n    substitution: /\\{~~(.+?)~>(.+?)~~\\}/g,\n    comment: /\\{>>(.+?)<<\\}/g,\n    highlight: /\\{==(.+?)==\\}(?:\\{>>(.+?)<<\\})?/g,\n  };\n\n  /**\n   * Parse CriticMarkup from markdown text\n   */\n  public parse(markdown: string): CriticMarkupMatch[] {\n    const matches: CriticMarkupMatch[] = [];\n    const segments = this.segmentMarkdown(markdown);\n\n    segments.forEach((segment) => {\n      if (segment.type !== 'text' || !segment.content) {\n        return;\n      }\n      this.collectCriticMarkupMatches(segment.content, segment.start, matches);\n    });\n\n    return matches.sort((a, b) => a.start - b.start);\n  }\n\n  /**\n   * Render CriticMarkup as HTML\n   */\n  public renderToHTML(markdown: string): string {\n    const segments = this.segmentMarkdown(markdown);\n\n    return segments\n      .map((segment) => {\n        if (segment.type === 'code') {\n          return segment.content;\n        }\n        if (!segment.content) {\n          return segment.content;\n        }\n        return this.renderMarkupSegment(segment.content);\n      })\n      .join('');\n  }\n\n  /**\n   * Accept a CriticMarkup change (keep addition/replacement, remove deletion)\n   */\n  public accept(markdown: string, match: CriticMarkupMatch): string {\n    const before = markdown.substring(0, match.start);\n    const after = markdown.substring(match.end);\n\n    switch (match.type) {\n      case 'addition':\n        return before + match.content + after;\n      case 'deletion':\n        return before + after;\n      case 'substitution':\n        return before + (match.replacement || '') + after;\n      case 'highlight':\n        return before + match.content + after;\n      case 'comment':\n        return before + after;\n      default:\n        return markdown;\n    }\n  }\n\n  /**\n   * Reject a CriticMarkup change (keep original, remove addition)\n   */\n  public reject(markdown: string, match: CriticMarkupMatch): string {\n    const before = markdown.substring(0, match.start);\n    const after = markdown.substring(match.end);\n\n    switch (match.type) {\n      case 'addition':\n        return before + after;\n      case 'deletion':\n        return before + match.content + after;\n      case 'substitution':\n        return before + match.content + after;\n      case 'highlight':\n        return before + match.content + after;\n      case 'comment':\n        return before + after;\n      default:\n        return markdown;\n    }\n  }\n\n  /**\n   * Accept all CriticMarkup changes\n   */\n  public acceptAll(markdown: string): string {\n    let result = markdown;\n    const matches = this.parse(result);\n\n    // Process in reverse order to maintain indices\n    for (let i = matches.length - 1; i >= 0; i--) {\n      const match = matches[i];\n      if (!match) continue;\n      result = this.accept(result, match);\n    }\n\n    return result;\n  }\n\n  /**\n   * Reject all CriticMarkup changes\n   */\n  public rejectAll(markdown: string): string {\n    let result = markdown;\n    const matches = this.parse(result);\n\n    // Process in reverse order to maintain indices\n    for (let i = matches.length - 1; i >= 0; i--) {\n      const match = matches[i];\n      if (!match) continue;\n      result = this.reject(result, match);\n    }\n\n    return result;\n  }\n\n  /**\n   * Add a comment to an element\n   */\n  public addComment(\n    elementId: string,\n    content: string,\n    userId: string,\n    type: Comment['type'] = 'comment'\n  ): Comment {\n    const comment: Comment = {\n      id: this.generateCommentId(),\n      elementId,\n      userId,\n      timestamp: Date.now(),\n      content,\n      resolved: false,\n      type,\n    };\n\n    this.comments.set(comment.id, comment);\n    return comment;\n  }\n\n  /**\n   * Get comment by ID\n   */\n  public getComment(id: string): Comment | undefined {\n    return this.comments.get(id);\n  }\n\n  /**\n   * Get all comments for an element\n   */\n  public getCommentsForElement(elementId: string): Comment[] {\n    return Array.from(this.comments.values()).filter(\n      (c) => c.elementId === elementId\n    );\n  }\n\n  /**\n   * Get all comments\n   */\n  public getAllComments(): Comment[] {\n    return Array.from(this.comments.values());\n  }\n\n  /**\n   * Resolve a comment\n   */\n  public resolveComment(id: string): boolean {\n    const comment = this.comments.get(id);\n    if (!comment) return false;\n\n    comment.resolved = true;\n    return true;\n  }\n\n  /**\n   * Unresolve a comment\n   */\n  public unresolveComment(id: string): boolean {\n    const comment = this.comments.get(id);\n    if (!comment) return false;\n\n    comment.resolved = false;\n    return true;\n  }\n\n  /**\n   * Delete a comment\n   */\n  public deleteComment(id: string): boolean {\n    return this.comments.delete(id);\n  }\n\n  private segmentMarkdown(markdown: string): MarkdownSegment[] {\n    const codeRanges = this.collectCodeRanges(markdown);\n    if (codeRanges.length === 0) {\n      return [{ type: 'text', content: markdown, start: 0 }];\n    }\n\n    const segments: MarkdownSegment[] = [];\n    let cursor = 0;\n\n    codeRanges.forEach((range) => {\n      if (range.start > cursor) {\n        segments.push({\n          type: 'text',\n          content: markdown.slice(cursor, range.start),\n          start: cursor,\n        });\n      }\n      segments.push({\n        type: 'code',\n        content: markdown.slice(range.start, range.end),\n        start: range.start,\n      });\n      cursor = range.end;\n    });\n\n    if (cursor < markdown.length) {\n      segments.push({\n        type: 'text',\n        content: markdown.slice(cursor),\n        start: cursor,\n      });\n    }\n\n    return segments;\n  }\n\n  private collectCodeRanges(markdown: string): MarkdownRange[] {\n    const ranges: MarkdownRange[] = [];\n    let match: RegExpExecArray | null;\n\n    const fencePattern = /(```+[\\s\\S]*?```+|~~~+[\\s\\S]*?~~~+)/g;\n    while ((match = fencePattern.exec(markdown)) !== null) {\n      const fullMatch = match?.[0] ?? '';\n      const startIndex = match?.index ?? 0;\n      ranges.push({\n        start: startIndex,\n        end: startIndex + fullMatch.length,\n      });\n    }\n\n    const inlinePattern = /(`+)([\\s\\S]*?)(\\1)/g;\n    while ((match = inlinePattern.exec(markdown)) !== null) {\n      const fullMatch = match?.[0] ?? '';\n      const start = match?.index ?? 0;\n      const end = start + fullMatch.length;\n\n      if (ranges.some((range) => start >= range.start && end <= range.end)) {\n        continue;\n      }\n\n      ranges.push({ start, end });\n    }\n\n    ranges.sort((a, b) => a.start - b.start);\n    return this.mergeRanges(ranges);\n  }\n\n  private mergeRanges(ranges: MarkdownRange[]): MarkdownRange[] {\n    if (ranges.length === 0) {\n      return [];\n    }\n\n    const firstRange = ranges[0];\n    if (!firstRange) {\n      return [];\n    }\n    const merged: MarkdownRange[] = [{ ...firstRange }];\n\n    for (let i = 1; i < ranges.length; i++) {\n      const current = ranges[i];\n      if (!current) continue;\n      const last = merged[merged.length - 1];\n      if (!last) {\n        merged.push({ ...current });\n        continue;\n      }\n      const currentStart = current.start ?? 0;\n      const currentEnd = current.end ?? currentStart;\n      const lastStart = last.start ?? 0;\n      const lastEnd = last.end ?? lastStart;\n      if (currentStart <= lastEnd) {\n        last.end = Math.max(lastEnd, currentEnd);\n      } else {\n        merged.push({ ...current });\n      }\n    }\n\n    return merged;\n  }\n\n  private collectCriticMarkupMatches(\n    segment: string,\n    offset: number,\n    matches: CriticMarkupMatch[]\n  ): void {\n    let match: RegExpExecArray | null;\n\n    const additionPattern = new RegExp(this.patterns.addition);\n    while ((match = additionPattern.exec(segment)) !== null) {\n      const content = match?.[1] ?? '';\n      const fullMatch = match?.[0] ?? '';\n      const startIndex = match?.index ?? 0;\n      matches.push({\n        type: 'addition',\n        content,\n        start: offset + startIndex,\n        end: offset + startIndex + fullMatch.length,\n      });\n    }\n\n    const deletionPattern = new RegExp(this.patterns.deletion);\n    while ((match = deletionPattern.exec(segment)) !== null) {\n      const content = match?.[1] ?? '';\n      const fullMatch = match?.[0] ?? '';\n      const startIndex = match?.index ?? 0;\n      matches.push({\n        type: 'deletion',\n        content,\n        start: offset + startIndex,\n        end: offset + startIndex + fullMatch.length,\n      });\n    }\n\n    const substitutionPattern = new RegExp(this.patterns.substitution);\n    while ((match = substitutionPattern.exec(segment)) !== null) {\n      const content = match?.[1] ?? '';\n      const replacement = match?.[2] ?? '';\n      const fullMatch = match?.[0] ?? '';\n      const startIndex = match?.index ?? 0;\n      matches.push({\n        type: 'substitution',\n        content,\n        replacement,\n        start: offset + startIndex,\n        end: offset + startIndex + fullMatch.length,\n      });\n    }\n\n    const highlightPattern = new RegExp(this.patterns.highlight);\n    while ((match = highlightPattern.exec(segment)) !== null) {\n      const content = match?.[1] ?? '';\n      const comment = match?.[2] ?? '';\n      const fullMatch = match?.[0] ?? '';\n      const startIndex = match?.index ?? 0;\n      matches.push({\n        type: 'highlight',\n        content,\n        comment,\n        start: offset + startIndex,\n        end: offset + startIndex + fullMatch.length,\n      });\n    }\n\n    const commentPattern = new RegExp(this.patterns.comment);\n    while ((match = commentPattern.exec(segment)) !== null) {\n      const fullMatch = match?.[0] ?? '';\n      const content = match?.[1] ?? '';\n      const startIndex = match?.index ?? 0;\n      const start = offset + startIndex;\n      const end = start + fullMatch.length;\n\n      const isPartOfHighlight = matches.some(\n        (m) =>\n          m.type === 'highlight' &&\n          m.comment &&\n          start >= m.start &&\n          start < m.end\n      );\n\n      if (!isPartOfHighlight) {\n        matches.push({\n          type: 'comment',\n          content,\n          start,\n          end,\n        });\n      }\n    }\n  }\n\n  private renderMarkupSegment(segment: string): string {\n    let html = segment;\n\n    html = html.replace(\n      new RegExp(this.patterns.addition),\n      '<span class=\"critic-addition\" data-critic-type=\"addition\">$1</span>'\n    );\n\n    html = html.replace(\n      new RegExp(this.patterns.deletion),\n      '<span class=\"critic-deletion\" data-critic-type=\"deletion\">$1</span>'\n    );\n\n    html = html.replace(\n      new RegExp(this.patterns.substitution),\n      '<span class=\"critic-substitution\" data-critic-type=\"substitution\" data-critic-original=\"$1\">$2</span>'\n    );\n\n    html = html.replace(\n      new RegExp(this.patterns.highlight),\n      (_match, content: string, comment: string) => {\n        if (comment) {\n          return `<span class=\"critic-highlight\" data-critic-type=\"highlight\" data-critic-comment=\"${this.escapeHtml(comment)}\">${content}</span>`;\n        }\n        return `<span class=\"critic-highlight\" data-critic-type=\"highlight\">${content}</span>`;\n      }\n    );\n\n    html = html.replace(\n      new RegExp(this.patterns.comment),\n      '<span class=\"critic-comment\" data-critic-type=\"comment\">$1</span>'\n    );\n\n    return html;\n  }\n\n  /**\n   * Create CriticMarkup addition\n   */\n  public createAddition(text: string): string {\n    return `{++${text}++}`;\n  }\n\n  /**\n   * Create CriticMarkup deletion\n   */\n  public createDeletion(text: string): string {\n    return `{--${text}--}`;\n  }\n\n  /**\n   * Create CriticMarkup substitution\n   */\n  public createSubstitution(original: string, replacement: string): string {\n    return `{~~${original}~>${replacement}~~}`;\n  }\n\n  /**\n   * Create CriticMarkup comment\n   */\n  public createComment(text: string): string {\n    const trimmed = text.replace(/\\s+/g, ' ').trim();\n    return `{>>${trimmed}<<}`;\n  }\n\n  /**\n   * Create CriticMarkup highlight with optional comment\n   */\n  public createHighlight(text: string, comment?: string): string {\n    if (comment) {\n      const trimmed = comment.replace(/\\s+/g, ' ').trim();\n      return `{==${text}==}{>>${trimmed}<<}`;\n    }\n    return `{==${text}==}`;\n  }\n\n  /**\n   * Check if markdown contains CriticMarkup\n   */\n  public hasCriticMarkup(markdown: string): boolean {\n    return (\n      this.patterns.addition.test(markdown) ||\n      this.patterns.deletion.test(markdown) ||\n      this.patterns.substitution.test(markdown) ||\n      this.patterns.comment.test(markdown) ||\n      this.patterns.highlight.test(markdown)\n    );\n  }\n\n  /**\n   * Strip all CriticMarkup (accept all changes)\n   */\n  public stripCriticMarkup(markdown: string): string {\n    return this.acceptAll(markdown);\n  }\n\n  /**\n   * Generate unique comment ID\n   */\n  private generateCommentId(): string {\n    return `comment-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  /**\n   * Escape HTML special characters\n   */\n  private escapeHtml(text: string): string {\n    const map: Record<string, string> = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#039;',\n    };\n    return text.replace(/[&<>\"']/g, (char) => map[char] ?? char);\n  }\n\n  /**\n   * Clear all comments\n   */\n  public clear(): void {\n    this.comments.clear();\n  }\n}\n\nexport default CommentsModule;\n","/**\n * Shared UI Utilities\n *\n * Common utility functions used across the UI module, including:\n * - HTML escaping and sanitization\n * - String trimming and normalization\n * - Markdown list marker normalization\n *\n * Extracted from index.ts to reduce code duplication and improve maintainability.\n */\n\n/**\n * Escape HTML special characters to prevent XSS\n * Uses the DOM to properly handle all edge cases\n */\nexport function escapeHtml(text: string): string {\n  const div = document.createElement('div');\n  div.textContent = text;\n  return div.innerHTML;\n}\n\n/**\n * Check if a character is whitespace (space, tab, CR, LF)\n */\nexport function isWhitespaceChar(char: string): boolean {\n  return char === ' ' || char === '\\t' || char === '\\r' || char === '\\n';\n}\n\n/**\n * Trim whitespace from the end of a string without using String.trimEnd()\n * for precise control over what constitutes \"whitespace\"\n */\nexport function trimLineEnd(text: string): string {\n  let end = text.length;\n  while (end > 0 && isWhitespaceChar(text.charAt(end - 1))) {\n    end--;\n  }\n  return text.slice(0, end);\n}\n\n/**\n * Trim whitespace from the start of a string without using String.trimStart()\n * for precise control over what constitutes \"whitespace\"\n */\nexport function trimLineStart(text: string): string {\n  let start = 0;\n  while (start < text.length && isWhitespaceChar(text.charAt(start))) {\n    start++;\n  }\n  return text.slice(start);\n}\n\n/**\n * Check if a line is a Setext underline (markdown H1/H2 syntax)\n * Setext underlines are lines of `=` or `-` characters\n */\nexport function isSetextUnderline(line: string): boolean {\n  if (!line) {\n    return false;\n  }\n  const trimmed = line.trim();\n  if (trimmed.length === 0) {\n    return false;\n  }\n  const firstChar = trimmed.charAt(0);\n  if (firstChar !== '=' && firstChar !== '-') {\n    return false;\n  }\n  for (let i = 1; i < trimmed.length; i++) {\n    if (trimmed.charAt(i) !== firstChar) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Normalize markdown list markers\n *\n * Converts Milkdown output (`*`/`+`) to canonical `-` format.\n * Skips fenced code blocks to avoid touching sample snippets.\n *\n * This is useful for ensuring consistent markdown output across different editors.\n */\nexport function normalizeListMarkers(content: string): string {\n  const lines = content.split(/\\r?\\n/);\n  let fenceDelimiter: string | null = null;\n\n  const normalized = lines.map((line) => {\n    const trimmed = line.trim();\n    const fenceMatch = trimmed.match(/^(`{3,}|~{3,})/);\n    const delimiter = fenceMatch?.[1] ?? null;\n\n    if (delimiter) {\n      if (!fenceDelimiter) {\n        fenceDelimiter = delimiter;\n      } else if (fenceDelimiter && trimmed.startsWith(fenceDelimiter)) {\n        fenceDelimiter = null;\n      }\n      return line;\n    }\n\n    if (fenceDelimiter) {\n      return line;\n    }\n\n    return line.replace(\n      /^(\\s*)[*+]\\s+/,\n      (_match, indent: string) => `${indent}- `\n    );\n  });\n\n  return normalized.join('\\n');\n}\n","/**\n * Module Event System\n *\n * Provides a typed event system for module-to-module communication.\n * Enables loose coupling between modules while maintaining type safety.\n */\n\n/**\n * Typed custom event for module communication\n */\nexport class ModuleEvent<T = any> extends CustomEvent<T> {\n  constructor(type: string, detail?: T) {\n    super(type, {\n      detail,\n      bubbles: true,\n      cancelable: true,\n    });\n  }\n}\n\n/**\n * Event type definitions for module communication\n */\nexport const MODULE_EVENTS = {\n  // Editor events\n  EDITOR_READY: 'module:editor:ready',\n  EDITOR_CONTENT_CHANGED: 'module:editor:content:changed',\n  EDITOR_SELECTION_CHANGED: 'module:editor:selection:changed',\n  EDITOR_FOCUSED: 'module:editor:focused',\n  EDITOR_BLURRED: 'module:editor:blurred',\n\n  // Comment events\n  COMMENT_SUBMITTED: 'module:comment:submitted',\n  COMMENT_CANCELLED: 'module:comment:cancelled',\n  COMMENT_COMPOSER_OPENED: 'module:comment:composer:opened',\n  COMMENT_COMPOSER_CLOSED: 'module:comment:composer:closed',\n\n  // Toolbar events\n  TOOLBAR_COMMAND_EXECUTED: 'module:toolbar:command:executed',\n  TOOLBAR_STATE_UPDATED: 'module:toolbar:state:updated',\n\n  // Sidebar events\n  SIDEBAR_TOGGLED: 'module:sidebar:toggled',\n  SIDEBAR_OPENED: 'module:sidebar:opened',\n  SIDEBAR_CLOSED: 'module:sidebar:closed',\n\n  // Context menu events\n  CONTEXT_MENU_OPENED: 'module:context:menu:opened',\n  CONTEXT_MENU_CLOSED: 'module:context:menu:closed',\n} as const;\n\n/**\n * Event detail types\n */\nexport interface EditorReadyDetail {\n  editor: any; // Editor instance\n}\n\nexport interface EditorContentChangedDetail {\n  markdown: string;\n}\n\nexport interface EditorSelectionChangedDetail {\n  from: number;\n  to: number;\n}\n\nexport interface CommentSubmittedDetail {\n  elementId: string;\n  content: string;\n  isEdit: boolean;\n}\n\nexport interface CommentCancelledDetail {\n  elementId: string;\n}\n\nexport interface CommentComposerOpenedDetail {\n  elementId: string;\n  existingComment?: any;\n}\n\nexport interface ToolbarCommandExecutedDetail {\n  action: string;\n  handled: boolean;\n}\n\nexport interface ToolbarStateUpdatedDetail {\n  activeStates: Record<string, boolean>;\n}\n\nexport interface SidebarToggledDetail {\n  isOpen: boolean;\n}\n\nexport interface ContextMenuOpenedDetail {\n  sectionId: string;\n  x: number;\n  y: number;\n}\n\n/**\n * Module event emitter mixin\n * Add event emission capability to any module\n */\nexport class ModuleEventEmitter {\n  private listeners: Map<string, Set<(event: CustomEvent) => void>> = new Map();\n\n  /**\n   * Listen to module events\n   */\n  on<T = any>(eventType: string, handler: (detail: T) => void): void {\n    if (!this.listeners.has(eventType)) {\n      this.listeners.set(eventType, new Set());\n    }\n    this.listeners.get(eventType)!.add((event: CustomEvent) => {\n      handler(event.detail as T);\n    });\n  }\n\n  /**\n   * Listen to module events once\n   */\n  once<T = any>(eventType: string, handler: (detail: T) => void): void {\n    const wrappedHandler = (detail: T) => {\n      handler(detail);\n      this.off(eventType, wrappedHandler);\n    };\n    this.on(eventType, wrappedHandler);\n  }\n\n  /**\n   * Stop listening to module events\n   */\n  off<T = any>(eventType: string, handler: (detail: T) => void): void {\n    if (!this.listeners.has(eventType)) return;\n    const handlers = this.listeners.get(eventType)!;\n    handlers.forEach((h) => {\n      if (h.toString() === handler.toString()) {\n        handlers.delete(h);\n      }\n    });\n  }\n\n  /**\n   * Remove all listeners for a specific event type\n   * This prevents duplicate listener accumulation when components are reinitialized\n   * @param eventType - The specific event type to clear listeners for. If omitted, clears all listeners.\n   */\n  removeAllListeners(eventType?: string): void {\n    if (eventType) {\n      this.listeners.delete(eventType);\n    } else {\n      this.listeners.clear();\n    }\n  }\n\n  /**\n   * Emit a module event\n   */\n  emit<T = any>(eventType: string, detail?: T): void {\n    const event = new ModuleEvent<T>(eventType, detail);\n    document.dispatchEvent(event);\n\n    // Also call local listeners\n    if (this.listeners.has(eventType)) {\n      this.listeners.get(eventType)!.forEach((handler) => {\n        handler(event);\n      });\n    }\n  }\n\n  /**\n   * Clean up all listeners\n   * Removes all listeners for all event types\n   */\n  clearListeners(): void {\n    this.removeAllListeners();\n  }\n}\n\n/**\n * Helper to listen to module events globally\n */\nexport function onModuleEvent<T = any>(\n  eventType: string,\n  handler: (detail: T) => void\n): () => void {\n  const listener = (event: Event) => {\n    if (event instanceof CustomEvent) {\n      handler(event.detail as T);\n    }\n  };\n  document.addEventListener(eventType, listener);\n\n  // Return unsubscribe function\n  return () => {\n    document.removeEventListener(eventType, listener);\n  };\n}\n\n/**\n * Helper to emit module events globally\n */\nexport function emitModuleEvent<T = any>(eventType: string, detail?: T): void {\n  const event = new ModuleEvent<T>(eventType, detail);\n  document.dispatchEvent(event);\n}\n","/**\n * UI State Objects\n *\n * Consolidates related state properties into logical state objects\n * to improve code organization and maintainability.\n *\n * This replaces scattered individual state properties in UIModule\n * with cohesive, domain-specific state objects.\n */\n\nimport type { Editor } from '@milkdown/kit/core';\n\n/**\n * Editor state - all properties related to the active editor instance\n */\nexport interface EditorState {\n  activeEditor: HTMLElement | null;\n  activeEditorToolbar: HTMLElement | null;\n  currentElementId: string | null;\n  milkdownEditor: Editor | null;\n  currentEditorContent: string;\n  showTrackedChanges: boolean;\n}\n\n/**\n * UI state - all properties related to sidebar and toolbar UI\n */\nexport interface UIState {\n  isSidebarCollapsed: boolean;\n}\n\n/**\n * Comment state - all properties related to comments and commenting\n */\nexport interface CommentState {\n  activeCommentComposer: HTMLElement | null;\n  activeComposerInsertionAnchor: HTMLElement | null;\n  activeComposerOriginalItem: HTMLElement | null;\n  activeHighlightedSection: HTMLElement | null;\n  highlightedBy: 'hover' | 'composer' | null;\n}\n\n/**\n * Context menu state - all properties related to context menu\n */\nexport interface ContextMenuState {\n  activeContextMenu: HTMLElement | null;\n  contextMenuScrollHandler: (() => void) | null;\n}\n\n/**\n * Create initial editor state\n */\nexport function createInitialEditorState(): EditorState {\n  return {\n    activeEditor: null,\n    activeEditorToolbar: null,\n    currentElementId: null,\n    milkdownEditor: null,\n    currentEditorContent: '',\n    showTrackedChanges: true,\n  };\n}\n\n/**\n * Create initial UI state\n */\nexport function createInitialUIState(): UIState {\n  return {\n    isSidebarCollapsed: false,\n  };\n}\n\n/**\n * Create initial comment state\n */\nexport function createInitialCommentState(): CommentState {\n  return {\n    activeCommentComposer: null,\n    activeComposerInsertionAnchor: null,\n    activeComposerOriginalItem: null,\n    activeHighlightedSection: null,\n    highlightedBy: null,\n  };\n}\n\n/**\n * Create initial context menu state\n */\nexport function createInitialContextMenuState(): ContextMenuState {\n  return {\n    activeContextMenu: null,\n    contextMenuScrollHandler: null,\n  };\n}\n","var ErrorCode = /* @__PURE__ */ ((ErrorCode2) => {\n  ErrorCode2[\"docTypeError\"] = \"docTypeError\";\n  ErrorCode2[\"contextNotFound\"] = \"contextNotFound\";\n  ErrorCode2[\"timerNotFound\"] = \"timerNotFound\";\n  ErrorCode2[\"ctxCallOutOfScope\"] = \"ctxCallOutOfScope\";\n  ErrorCode2[\"createNodeInParserFail\"] = \"createNodeInParserFail\";\n  ErrorCode2[\"stackOverFlow\"] = \"stackOverFlow\";\n  ErrorCode2[\"parserMatchError\"] = \"parserMatchError\";\n  ErrorCode2[\"serializerMatchError\"] = \"serializerMatchError\";\n  ErrorCode2[\"getAtomFromSchemaFail\"] = \"getAtomFromSchemaFail\";\n  ErrorCode2[\"expectDomTypeError\"] = \"expectDomTypeError\";\n  ErrorCode2[\"callCommandBeforeEditorView\"] = \"callCommandBeforeEditorView\";\n  ErrorCode2[\"missingRootElement\"] = \"missingRootElement\";\n  ErrorCode2[\"missingNodeInSchema\"] = \"missingNodeInSchema\";\n  ErrorCode2[\"missingMarkInSchema\"] = \"missingMarkInSchema\";\n  ErrorCode2[\"ctxNotBind\"] = \"ctxNotBind\";\n  ErrorCode2[\"missingYjsDoc\"] = \"missingYjsDoc\";\n  return ErrorCode2;\n})(ErrorCode || {});\nclass MilkdownError extends Error {\n  constructor(code, message) {\n    super(message);\n    this.name = \"MilkdownError\";\n    this.code = code;\n  }\n}\nconst functionReplacer = (_, value) => typeof value === \"function\" ? \"[Function]\" : value;\nconst stringify = (x) => JSON.stringify(x, functionReplacer);\nfunction docTypeError(type) {\n  return new MilkdownError(\n    ErrorCode.docTypeError,\n    `Doc type error, unsupported type: ${stringify(type)}`\n  );\n}\nfunction contextNotFound(name) {\n  return new MilkdownError(\n    ErrorCode.contextNotFound,\n    `Context \"${name}\" not found, do you forget to inject it?`\n  );\n}\nfunction timerNotFound(name) {\n  return new MilkdownError(\n    ErrorCode.timerNotFound,\n    `Timer \"${name}\" not found, do you forget to record it?`\n  );\n}\nfunction ctxCallOutOfScope() {\n  return new MilkdownError(\n    ErrorCode.ctxCallOutOfScope,\n    \"Should not call a context out of the plugin.\"\n  );\n}\nfunction createNodeInParserFail(nodeType, attrs, content) {\n  const nodeTypeName = \"name\" in nodeType ? nodeType.name : nodeType;\n  const heading = `Cannot create node for ${nodeTypeName}`;\n  const serialize = (x) => {\n    if (x == null) return \"null\";\n    if (Array.isArray(x)) {\n      return `[${x.map(serialize).join(\", \")}]`;\n    }\n    if (typeof x === \"object\") {\n      if (\"toJSON\" in x && typeof x.toJSON === \"function\") {\n        return JSON.stringify(x.toJSON());\n      }\n      if (\"spec\" in x) {\n        return JSON.stringify(x.spec);\n      }\n      return JSON.stringify(x);\n    }\n    if (typeof x === \"string\" || typeof x === \"number\" || typeof x === \"boolean\") {\n      return JSON.stringify(x);\n    }\n    if (typeof x === \"function\") {\n      return `[Function: ${x.name || \"anonymous\"}]`;\n    }\n    try {\n      return String(x);\n    } catch {\n      return \"[Unserializable]\";\n    }\n  };\n  const headingMessage = [\"[Description]\", heading];\n  const attrsMessage = [\"[Attributes]\", attrs];\n  const contentMessage = [\n    \"[Content]\",\n    (content ?? []).map((node) => {\n      if (!node) return \"null\";\n      if (typeof node === \"object\" && \"type\" in node) {\n        return `${node}`;\n      }\n      return serialize(node);\n    })\n  ];\n  const messages = [headingMessage, attrsMessage, contentMessage].reduce(\n    (acc, [title, value]) => {\n      const message = `${title}: ${serialize(value)}.`;\n      return acc.concat(message);\n    },\n    []\n  );\n  return new MilkdownError(\n    ErrorCode.createNodeInParserFail,\n    messages.join(\"\\n\")\n  );\n}\nfunction stackOverFlow() {\n  return new MilkdownError(\n    ErrorCode.stackOverFlow,\n    \"Stack over flow, cannot pop on an empty stack.\"\n  );\n}\nfunction parserMatchError(node) {\n  return new MilkdownError(\n    ErrorCode.parserMatchError,\n    `Cannot match target parser for node: ${stringify(node)}.`\n  );\n}\nfunction serializerMatchError(node) {\n  return new MilkdownError(\n    ErrorCode.serializerMatchError,\n    `Cannot match target serializer for node: ${stringify(node)}.`\n  );\n}\nfunction getAtomFromSchemaFail(type, name) {\n  return new MilkdownError(\n    ErrorCode.getAtomFromSchemaFail,\n    `Cannot get ${type}: ${name} from schema.`\n  );\n}\nfunction expectDomTypeError(node) {\n  return new MilkdownError(\n    ErrorCode.expectDomTypeError,\n    `Expect to be a dom, but get: ${stringify(node)}.`\n  );\n}\nfunction callCommandBeforeEditorView() {\n  return new MilkdownError(\n    ErrorCode.callCommandBeforeEditorView,\n    \"You're trying to call a command before editor view initialized, make sure to get commandManager from ctx after editor view has been initialized\"\n  );\n}\nfunction missingRootElement() {\n  return new MilkdownError(\n    ErrorCode.missingRootElement,\n    \"Missing root element, milkdown cannot find root element of the editor.\"\n  );\n}\nfunction missingNodeInSchema(name) {\n  return new MilkdownError(\n    ErrorCode.missingNodeInSchema,\n    `Missing node in schema, milkdown cannot find \"${name}\" in schema.`\n  );\n}\nfunction missingMarkInSchema(name) {\n  return new MilkdownError(\n    ErrorCode.missingMarkInSchema,\n    `Missing mark in schema, milkdown cannot find \"${name}\" in schema.`\n  );\n}\nfunction ctxNotBind() {\n  return new MilkdownError(\n    ErrorCode.ctxNotBind,\n    \"Context not bind, please make sure the plugin has been initialized.\"\n  );\n}\nfunction missingYjsDoc() {\n  return new MilkdownError(\n    ErrorCode.missingYjsDoc,\n    \"Missing yjs doc, please make sure you have bind one.\"\n  );\n}\nexport {\n  callCommandBeforeEditorView,\n  contextNotFound,\n  createNodeInParserFail,\n  ctxCallOutOfScope,\n  ctxNotBind,\n  docTypeError,\n  expectDomTypeError,\n  getAtomFromSchemaFail,\n  missingMarkInSchema,\n  missingNodeInSchema,\n  missingRootElement,\n  missingYjsDoc,\n  parserMatchError,\n  serializerMatchError,\n  stackOverFlow,\n  timerNotFound\n};\n//# sourceMappingURL=index.js.map\n","import { contextNotFound, ctxCallOutOfScope, timerNotFound } from \"@milkdown/exception\";\nclass Container {\n  constructor() {\n    this.sliceMap = /* @__PURE__ */ new Map();\n    this.get = (slice) => {\n      const context = typeof slice === \"string\" ? [...this.sliceMap.values()].find((x) => x.type.name === slice) : this.sliceMap.get(slice.id);\n      if (!context) {\n        const name = typeof slice === \"string\" ? slice : slice.name;\n        throw contextNotFound(name);\n      }\n      return context;\n    };\n    this.remove = (slice) => {\n      const context = typeof slice === \"string\" ? [...this.sliceMap.values()].find((x) => x.type.name === slice) : this.sliceMap.get(slice.id);\n      if (!context) return;\n      this.sliceMap.delete(context.type.id);\n    };\n    this.has = (slice) => {\n      if (typeof slice === \"string\")\n        return [...this.sliceMap.values()].some((x) => x.type.name === slice);\n      return this.sliceMap.has(slice.id);\n    };\n  }\n}\nclass Slice {\n  /// @internal\n  constructor(container, value, type) {\n    this.#watchers = [];\n    this.#emit = () => {\n      this.#watchers.forEach((watcher) => watcher(this.#value));\n    };\n    this.set = (value2) => {\n      this.#value = value2;\n      this.#emit();\n    };\n    this.get = () => this.#value;\n    this.update = (updater) => {\n      this.#value = updater(this.#value);\n      this.#emit();\n    };\n    this.type = type;\n    this.#value = value;\n    container.set(type.id, this);\n  }\n  #watchers;\n  /// @internal\n  #value;\n  #emit;\n  /// Add a watcher for changes in the slice.\n  /// Returns a function to remove the watcher.\n  on(watcher) {\n    this.#watchers.push(watcher);\n    return () => {\n      this.#watchers = this.#watchers.filter((w) => w !== watcher);\n    };\n  }\n  /// Add a one-time watcher for changes in the slice.\n  /// The watcher will be removed after it is called.\n  /// Returns a function to remove the watcher.\n  once(watcher) {\n    const off = this.on((value) => {\n      watcher(value);\n      off();\n    });\n    return off;\n  }\n  /// Remove a watcher.\n  off(watcher) {\n    this.#watchers = this.#watchers.filter((w) => w !== watcher);\n  }\n  /// Remove all watchers.\n  offAll() {\n    this.#watchers = [];\n  }\n}\nclass SliceType {\n  /// Create a slice type with a default value and a name.\n  /// The name should be unique in the container.\n  constructor(value, name) {\n    this.id = Symbol(`Context-${name}`);\n    this.name = name;\n    this._defaultValue = value;\n    this._typeInfo = () => {\n      throw ctxCallOutOfScope();\n    };\n  }\n  /// Create a slice with a container.\n  /// You can also pass a value to override the default value.\n  create(container, value = this._defaultValue) {\n    return new Slice(container, value, this);\n  }\n}\nconst createSlice = (value, name) => new SliceType(value, name);\nclass Inspector {\n  /// Create an inspector with container, clock and metadata.\n  constructor(container, clock, meta) {\n    this.#injectedSlices = /* @__PURE__ */ new Set();\n    this.#consumedSlices = /* @__PURE__ */ new Set();\n    this.#recordedTimers = /* @__PURE__ */ new Map();\n    this.#waitTimers = /* @__PURE__ */ new Map();\n    this.read = () => {\n      return {\n        metadata: this.#meta,\n        injectedSlices: [...this.#injectedSlices].map((slice) => ({\n          name: typeof slice === \"string\" ? slice : slice.name,\n          value: this.#getSlice(slice)\n        })),\n        consumedSlices: [...this.#consumedSlices].map((slice) => ({\n          name: typeof slice === \"string\" ? slice : slice.name,\n          value: this.#getSlice(slice)\n        })),\n        recordedTimers: [...this.#recordedTimers].map(\n          ([timer, { duration }]) => ({\n            name: timer.name,\n            duration,\n            status: this.#getTimer(timer)\n          })\n        ),\n        waitTimers: [...this.#waitTimers].map(([timer, { duration }]) => ({\n          name: timer.name,\n          duration,\n          status: this.#getTimer(timer)\n        }))\n      };\n    };\n    this.onRecord = (timerType) => {\n      this.#recordedTimers.set(timerType, { start: Date.now(), duration: 0 });\n    };\n    this.onClear = (timerType) => {\n      this.#recordedTimers.delete(timerType);\n    };\n    this.onDone = (timerType) => {\n      const timer = this.#recordedTimers.get(timerType);\n      if (!timer) return;\n      timer.duration = Date.now() - timer.start;\n    };\n    this.onWait = (timerType, promise) => {\n      const start = Date.now();\n      promise.finally(() => {\n        this.#waitTimers.set(timerType, { duration: Date.now() - start });\n      }).catch(console.error);\n    };\n    this.onInject = (sliceType) => {\n      this.#injectedSlices.add(sliceType);\n    };\n    this.onRemove = (sliceType) => {\n      this.#injectedSlices.delete(sliceType);\n    };\n    this.onUse = (sliceType) => {\n      this.#consumedSlices.add(sliceType);\n    };\n    this.#getSlice = (sliceType) => {\n      return this.#container.get(sliceType).get();\n    };\n    this.#getTimer = (timerType) => {\n      return this.#clock.get(timerType).status;\n    };\n    this.#container = container;\n    this.#clock = clock;\n    this.#meta = meta;\n  }\n  /// @internal\n  #meta;\n  /// @internal\n  #container;\n  /// @internal\n  #clock;\n  #injectedSlices;\n  #consumedSlices;\n  #recordedTimers;\n  #waitTimers;\n  #getSlice;\n  #getTimer;\n}\nclass Ctx {\n  /// Create a ctx object with container and clock.\n  constructor(container, clock, meta) {\n    this.produce = (meta2) => {\n      if (meta2 && Object.keys(meta2).length)\n        return new Ctx(this.#container, this.#clock, { ...meta2 });\n      return this;\n    };\n    this.inject = (sliceType, value) => {\n      const slice = sliceType.create(this.#container.sliceMap);\n      if (value != null) slice.set(value);\n      this.#inspector?.onInject(sliceType);\n      return this;\n    };\n    this.remove = (sliceType) => {\n      this.#container.remove(sliceType);\n      this.#inspector?.onRemove(sliceType);\n      return this;\n    };\n    this.record = (timerType) => {\n      timerType.create(this.#clock.store);\n      this.#inspector?.onRecord(timerType);\n      return this;\n    };\n    this.clearTimer = (timerType) => {\n      this.#clock.remove(timerType);\n      this.#inspector?.onClear(timerType);\n      return this;\n    };\n    this.isInjected = (sliceType) => this.#container.has(sliceType);\n    this.isRecorded = (timerType) => this.#clock.has(timerType);\n    this.use = (sliceType) => {\n      this.#inspector?.onUse(sliceType);\n      return this.#container.get(sliceType);\n    };\n    this.get = (sliceType) => this.use(sliceType).get();\n    this.set = (sliceType, value) => this.use(sliceType).set(value);\n    this.update = (sliceType, updater) => this.use(sliceType).update(updater);\n    this.timer = (timer) => this.#clock.get(timer);\n    this.done = (timer) => {\n      this.timer(timer).done();\n      this.#inspector?.onDone(timer);\n    };\n    this.wait = (timer) => {\n      const promise = this.timer(timer).start();\n      this.#inspector?.onWait(timer, promise);\n      return promise;\n    };\n    this.waitTimers = async (slice) => {\n      await Promise.all(this.get(slice).map((x) => this.wait(x)));\n    };\n    this.#container = container;\n    this.#clock = clock;\n    this.#meta = meta;\n    if (meta) this.#inspector = new Inspector(container, clock, meta);\n  }\n  /// @internal\n  #container;\n  /// @internal\n  #clock;\n  /// @internal\n  #meta;\n  /// @internal\n  #inspector;\n  /// Get metadata of the ctx.\n  get meta() {\n    return this.#meta;\n  }\n  /// Get the inspector of the ctx.\n  get inspector() {\n    return this.#inspector;\n  }\n}\nclass Clock {\n  constructor() {\n    this.store = /* @__PURE__ */ new Map();\n    this.get = (timer) => {\n      const meta = this.store.get(timer.id);\n      if (!meta) throw timerNotFound(timer.name);\n      return meta;\n    };\n    this.remove = (timer) => {\n      this.store.delete(timer.id);\n    };\n    this.has = (timer) => {\n      return this.store.has(timer.id);\n    };\n  }\n}\nclass Timer {\n  /// @internal\n  constructor(clock, type) {\n    this.#promise = null;\n    this.#listener = null;\n    this.#status = \"pending\";\n    this.start = () => {\n      this.#promise ??= new Promise((resolve, reject) => {\n        this.#listener = (e) => {\n          if (!(e instanceof CustomEvent)) return;\n          if (e.detail.id === this.#eventUniqId) {\n            this.#status = \"resolved\";\n            this.#removeListener();\n            e.stopImmediatePropagation();\n            resolve();\n          }\n        };\n        this.#waitTimeout(() => {\n          if (this.#status === \"pending\") this.#status = \"rejected\";\n          this.#removeListener();\n          reject(new Error(`Timing ${this.type.name} timeout.`));\n        });\n        this.#status = \"pending\";\n        addEventListener(this.type.name, this.#listener);\n      });\n      return this.#promise;\n    };\n    this.done = () => {\n      const event = new CustomEvent(this.type.name, {\n        detail: { id: this.#eventUniqId }\n      });\n      dispatchEvent(event);\n    };\n    this.#removeListener = () => {\n      if (this.#listener) removeEventListener(this.type.name, this.#listener);\n    };\n    this.#waitTimeout = (ifTimeout) => {\n      setTimeout(() => {\n        ifTimeout();\n      }, this.type.timeout);\n    };\n    this.#eventUniqId = Symbol(type.name);\n    this.type = type;\n    clock.set(type.id, this);\n  }\n  #promise;\n  #listener;\n  /// @internal\n  #eventUniqId;\n  #status;\n  /// The status of the timer.\n  /// Can be `pending`, `resolved` or `rejected`.\n  get status() {\n    return this.#status;\n  }\n  #removeListener;\n  #waitTimeout;\n}\nclass TimerType {\n  /// Create a timer type with a name and a timeout.\n  /// The name should be unique in the clock.\n  constructor(name, timeout = 3e3) {\n    this.create = (clock) => {\n      return new Timer(clock, this);\n    };\n    this.id = Symbol(`Timer-${name}`);\n    this.name = name;\n    this.timeout = timeout;\n  }\n}\nconst createTimer = (name, timeout = 3e3) => new TimerType(name, timeout);\nexport {\n  Clock,\n  Container,\n  Ctx,\n  Inspector,\n  Slice,\n  SliceType,\n  Timer,\n  TimerType,\n  createSlice,\n  createTimer\n};\n//# sourceMappingURL=index.js.map\n","// ::- Persistent data structure representing an ordered mapping from\n// strings to values, with some convenient update methods.\nfunction OrderedMap(content) {\n  this.content = content;\n}\n\nOrderedMap.prototype = {\n  constructor: OrderedMap,\n\n  find: function(key) {\n    for (var i = 0; i < this.content.length; i += 2)\n      if (this.content[i] === key) return i\n    return -1\n  },\n\n  // :: (string) → ?any\n  // Retrieve the value stored under `key`, or return undefined when\n  // no such key exists.\n  get: function(key) {\n    var found = this.find(key);\n    return found == -1 ? undefined : this.content[found + 1]\n  },\n\n  // :: (string, any, ?string) → OrderedMap\n  // Create a new map by replacing the value of `key` with a new\n  // value, or adding a binding to the end of the map. If `newKey` is\n  // given, the key of the binding will be replaced with that key.\n  update: function(key, value, newKey) {\n    var self = newKey && newKey != key ? this.remove(newKey) : this;\n    var found = self.find(key), content = self.content.slice();\n    if (found == -1) {\n      content.push(newKey || key, value);\n    } else {\n      content[found + 1] = value;\n      if (newKey) content[found] = newKey;\n    }\n    return new OrderedMap(content)\n  },\n\n  // :: (string) → OrderedMap\n  // Return a map with the given key removed, if it existed.\n  remove: function(key) {\n    var found = this.find(key);\n    if (found == -1) return this\n    var content = this.content.slice();\n    content.splice(found, 2);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the start of the map.\n  addToStart: function(key, value) {\n    return new OrderedMap([key, value].concat(this.remove(key).content))\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the end of the map.\n  addToEnd: function(key, value) {\n    var content = this.remove(key).content.slice();\n    content.push(key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, string, any) → OrderedMap\n  // Add a key after the given key. If `place` is not found, the new\n  // key is added to the end.\n  addBefore: function(place, key, value) {\n    var without = this.remove(key), content = without.content.slice();\n    var found = without.find(place);\n    content.splice(found == -1 ? content.length : found, 0, key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: ((key: string, value: any))\n  // Call the given function for each key/value pair in the map, in\n  // order.\n  forEach: function(f) {\n    for (var i = 0; i < this.content.length; i += 2)\n      f(this.content[i], this.content[i + 1]);\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by prepending the keys in this map that don't\n  // appear in `map` before the keys in `map`.\n  prepend: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(map.content.concat(this.subtract(map).content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by appending the keys in this map that don't\n  // appear in `map` after the keys in `map`.\n  append: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(this.subtract(map).content.concat(map.content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a map containing all the keys in this map that don't\n  // appear in `map`.\n  subtract: function(map) {\n    var result = this;\n    map = OrderedMap.from(map);\n    for (var i = 0; i < map.content.length; i += 2)\n      result = result.remove(map.content[i]);\n    return result\n  },\n\n  // :: () → Object\n  // Turn ordered map into a plain object.\n  toObject: function() {\n    var result = {};\n    this.forEach(function(key, value) { result[key] = value; });\n    return result\n  },\n\n  // :: number\n  // The amount of keys in this map.\n  get size() {\n    return this.content.length >> 1\n  }\n};\n\n// :: (?union<Object, OrderedMap>) → OrderedMap\n// Return a map with the given content. If null, create an empty\n// map. If given an ordered map, return that map itself. If given an\n// object, create a map from the object's properties.\nOrderedMap.from = function(value) {\n  if (value instanceof OrderedMap) return value\n  var content = [];\n  if (value) for (var prop in value) content.push(prop, value[prop]);\n  return new OrderedMap(content)\n};\n\nexport default OrderedMap;\n","import OrderedMap from 'orderedmap';\n\nfunction findDiffStart(a, b, pos) {\n    for (let i = 0;; i++) {\n        if (i == a.childCount || i == b.childCount)\n            return a.childCount == b.childCount ? null : pos;\n        let childA = a.child(i), childB = b.child(i);\n        if (childA == childB) {\n            pos += childA.nodeSize;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return pos;\n        if (childA.isText && childA.text != childB.text) {\n            for (let j = 0; childA.text[j] == childB.text[j]; j++)\n                pos++;\n            return pos;\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffStart(childA.content, childB.content, pos + 1);\n            if (inner != null)\n                return inner;\n        }\n        pos += childA.nodeSize;\n    }\n}\nfunction findDiffEnd(a, b, posA, posB) {\n    for (let iA = a.childCount, iB = b.childCount;;) {\n        if (iA == 0 || iB == 0)\n            return iA == iB ? null : { a: posA, b: posB };\n        let childA = a.child(--iA), childB = b.child(--iB), size = childA.nodeSize;\n        if (childA == childB) {\n            posA -= size;\n            posB -= size;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return { a: posA, b: posB };\n        if (childA.isText && childA.text != childB.text) {\n            let same = 0, minSize = Math.min(childA.text.length, childB.text.length);\n            while (same < minSize && childA.text[childA.text.length - same - 1] == childB.text[childB.text.length - same - 1]) {\n                same++;\n                posA--;\n                posB--;\n            }\n            return { a: posA, b: posB };\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffEnd(childA.content, childB.content, posA - 1, posB - 1);\n            if (inner)\n                return inner;\n        }\n        posA -= size;\n        posB -= size;\n    }\n}\n\n/**\nA fragment represents a node's collection of child nodes.\n\nLike nodes, fragments are persistent data structures, and you\nshould not mutate them or their content. Rather, you create new\ninstances whenever needed. The API tries to make this easy.\n*/\nclass Fragment {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The child nodes in this fragment.\n    */\n    content, size) {\n        this.content = content;\n        this.size = size || 0;\n        if (size == null)\n            for (let i = 0; i < content.length; i++)\n                this.size += content[i].nodeSize;\n    }\n    /**\n    Invoke a callback for all descendant nodes between the given two\n    positions (relative to start of this fragment). Doesn't descend\n    into a node when the callback returns `false`.\n    */\n    nodesBetween(from, to, f, nodeStart = 0, parent) {\n        for (let i = 0, pos = 0; pos < to; i++) {\n            let child = this.content[i], end = pos + child.nodeSize;\n            if (end > from && f(child, nodeStart + pos, parent || null, i) !== false && child.content.size) {\n                let start = pos + 1;\n                child.nodesBetween(Math.max(0, from - start), Math.min(child.content.size, to - start), f, nodeStart + start);\n            }\n            pos = end;\n        }\n    }\n    /**\n    Call the given callback for every descendant node. `pos` will be\n    relative to the start of the fragment. The callback may return\n    `false` to prevent traversal of a given node's children.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.size, f);\n    }\n    /**\n    Extract the text between `from` and `to`. See the same method on\n    [`Node`](https://prosemirror.net/docs/ref/#model.Node.textBetween).\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        let text = \"\", first = true;\n        this.nodesBetween(from, to, (node, pos) => {\n            let nodeText = node.isText ? node.text.slice(Math.max(from, pos) - pos, to - pos)\n                : !node.isLeaf ? \"\"\n                    : leafText ? (typeof leafText === \"function\" ? leafText(node) : leafText)\n                        : node.type.spec.leafText ? node.type.spec.leafText(node)\n                            : \"\";\n            if (node.isBlock && (node.isLeaf && nodeText || node.isTextblock) && blockSeparator) {\n                if (first)\n                    first = false;\n                else\n                    text += blockSeparator;\n            }\n            text += nodeText;\n        }, 0);\n        return text;\n    }\n    /**\n    Create a new fragment containing the combined content of this\n    fragment and the other.\n    */\n    append(other) {\n        if (!other.size)\n            return this;\n        if (!this.size)\n            return other;\n        let last = this.lastChild, first = other.firstChild, content = this.content.slice(), i = 0;\n        if (last.isText && last.sameMarkup(first)) {\n            content[content.length - 1] = last.withText(last.text + first.text);\n            i = 1;\n        }\n        for (; i < other.content.length; i++)\n            content.push(other.content[i]);\n        return new Fragment(content, this.size + other.size);\n    }\n    /**\n    Cut out the sub-fragment between the two given positions.\n    */\n    cut(from, to = this.size) {\n        if (from == 0 && to == this.size)\n            return this;\n        let result = [], size = 0;\n        if (to > from)\n            for (let i = 0, pos = 0; pos < to; i++) {\n                let child = this.content[i], end = pos + child.nodeSize;\n                if (end > from) {\n                    if (pos < from || end > to) {\n                        if (child.isText)\n                            child = child.cut(Math.max(0, from - pos), Math.min(child.text.length, to - pos));\n                        else\n                            child = child.cut(Math.max(0, from - pos - 1), Math.min(child.content.size, to - pos - 1));\n                    }\n                    result.push(child);\n                    size += child.nodeSize;\n                }\n                pos = end;\n            }\n        return new Fragment(result, size);\n    }\n    /**\n    @internal\n    */\n    cutByIndex(from, to) {\n        if (from == to)\n            return Fragment.empty;\n        if (from == 0 && to == this.content.length)\n            return this;\n        return new Fragment(this.content.slice(from, to));\n    }\n    /**\n    Create a new fragment in which the node at the given index is\n    replaced by the given node.\n    */\n    replaceChild(index, node) {\n        let current = this.content[index];\n        if (current == node)\n            return this;\n        let copy = this.content.slice();\n        let size = this.size + node.nodeSize - current.nodeSize;\n        copy[index] = node;\n        return new Fragment(copy, size);\n    }\n    /**\n    Create a new fragment by prepending the given node to this\n    fragment.\n    */\n    addToStart(node) {\n        return new Fragment([node].concat(this.content), this.size + node.nodeSize);\n    }\n    /**\n    Create a new fragment by appending the given node to this\n    fragment.\n    */\n    addToEnd(node) {\n        return new Fragment(this.content.concat(node), this.size + node.nodeSize);\n    }\n    /**\n    Compare this fragment to another one.\n    */\n    eq(other) {\n        if (this.content.length != other.content.length)\n            return false;\n        for (let i = 0; i < this.content.length; i++)\n            if (!this.content[i].eq(other.content[i]))\n                return false;\n        return true;\n    }\n    /**\n    The first child of the fragment, or `null` if it is empty.\n    */\n    get firstChild() { return this.content.length ? this.content[0] : null; }\n    /**\n    The last child of the fragment, or `null` if it is empty.\n    */\n    get lastChild() { return this.content.length ? this.content[this.content.length - 1] : null; }\n    /**\n    The number of child nodes in this fragment.\n    */\n    get childCount() { return this.content.length; }\n    /**\n    Get the child node at the given index. Raise an error when the\n    index is out of range.\n    */\n    child(index) {\n        let found = this.content[index];\n        if (!found)\n            throw new RangeError(\"Index \" + index + \" out of range for \" + this);\n        return found;\n    }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) {\n        return this.content[index] || null;\n    }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) {\n        for (let i = 0, p = 0; i < this.content.length; i++) {\n            let child = this.content[i];\n            f(child, p, i);\n            p += child.nodeSize;\n        }\n    }\n    /**\n    Find the first position at which this fragment and another\n    fragment differ, or `null` if they are the same.\n    */\n    findDiffStart(other, pos = 0) {\n        return findDiffStart(this, other, pos);\n    }\n    /**\n    Find the first position, searching from the end, at which this\n    fragment and the given fragment differ, or `null` if they are\n    the same. Since this position will not be the same in both\n    nodes, an object with two separate positions is returned.\n    */\n    findDiffEnd(other, pos = this.size, otherPos = other.size) {\n        return findDiffEnd(this, other, pos, otherPos);\n    }\n    /**\n    Find the index and inner offset corresponding to a given relative\n    position in this fragment. The result object will be reused\n    (overwritten) the next time the function is called. @internal\n    */\n    findIndex(pos) {\n        if (pos == 0)\n            return retIndex(0, pos);\n        if (pos == this.size)\n            return retIndex(this.content.length, pos);\n        if (pos > this.size || pos < 0)\n            throw new RangeError(`Position ${pos} outside of fragment (${this})`);\n        for (let i = 0, curPos = 0;; i++) {\n            let cur = this.child(i), end = curPos + cur.nodeSize;\n            if (end >= pos) {\n                if (end == pos)\n                    return retIndex(i + 1, end);\n                return retIndex(i, curPos);\n            }\n            curPos = end;\n        }\n    }\n    /**\n    Return a debugging string that describes this fragment.\n    */\n    toString() { return \"<\" + this.toStringInner() + \">\"; }\n    /**\n    @internal\n    */\n    toStringInner() { return this.content.join(\", \"); }\n    /**\n    Create a JSON-serializeable representation of this fragment.\n    */\n    toJSON() {\n        return this.content.length ? this.content.map(n => n.toJSON()) : null;\n    }\n    /**\n    Deserialize a fragment from its JSON representation.\n    */\n    static fromJSON(schema, value) {\n        if (!value)\n            return Fragment.empty;\n        if (!Array.isArray(value))\n            throw new RangeError(\"Invalid input for Fragment.fromJSON\");\n        return new Fragment(value.map(schema.nodeFromJSON));\n    }\n    /**\n    Build a fragment from an array of nodes. Ensures that adjacent\n    text nodes with the same marks are joined together.\n    */\n    static fromArray(array) {\n        if (!array.length)\n            return Fragment.empty;\n        let joined, size = 0;\n        for (let i = 0; i < array.length; i++) {\n            let node = array[i];\n            size += node.nodeSize;\n            if (i && node.isText && array[i - 1].sameMarkup(node)) {\n                if (!joined)\n                    joined = array.slice(0, i);\n                joined[joined.length - 1] = node\n                    .withText(joined[joined.length - 1].text + node.text);\n            }\n            else if (joined) {\n                joined.push(node);\n            }\n        }\n        return new Fragment(joined || array, size);\n    }\n    /**\n    Create a fragment from something that can be interpreted as a\n    set of nodes. For `null`, it returns the empty fragment. For a\n    fragment, the fragment itself. For a node or array of nodes, a\n    fragment containing those nodes.\n    */\n    static from(nodes) {\n        if (!nodes)\n            return Fragment.empty;\n        if (nodes instanceof Fragment)\n            return nodes;\n        if (Array.isArray(nodes))\n            return this.fromArray(nodes);\n        if (nodes.attrs)\n            return new Fragment([nodes], nodes.nodeSize);\n        throw new RangeError(\"Can not convert \" + nodes + \" to a Fragment\" +\n            (nodes.nodesBetween ? \" (looks like multiple versions of prosemirror-model were loaded)\" : \"\"));\n    }\n}\n/**\nAn empty fragment. Intended to be reused whenever a node doesn't\ncontain anything (rather than allocating a new empty fragment for\neach leaf node).\n*/\nFragment.empty = new Fragment([], 0);\nconst found = { index: 0, offset: 0 };\nfunction retIndex(index, offset) {\n    found.index = index;\n    found.offset = offset;\n    return found;\n}\n\nfunction compareDeep(a, b) {\n    if (a === b)\n        return true;\n    if (!(a && typeof a == \"object\") ||\n        !(b && typeof b == \"object\"))\n        return false;\n    let array = Array.isArray(a);\n    if (Array.isArray(b) != array)\n        return false;\n    if (array) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!compareDeep(a[i], b[i]))\n                return false;\n    }\n    else {\n        for (let p in a)\n            if (!(p in b) || !compareDeep(a[p], b[p]))\n                return false;\n        for (let p in b)\n            if (!(p in a))\n                return false;\n    }\n    return true;\n}\n\n/**\nA mark is a piece of information that can be attached to a node,\nsuch as it being emphasized, in code font, or a link. It has a\ntype and optionally a set of attributes that provide further\ninformation (such as the target of the link). Marks are created\nthrough a `Schema`, which controls which types exist and which\nattributes they have.\n*/\nclass Mark {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of this mark.\n    */\n    type, \n    /**\n    The attributes associated with this mark.\n    */\n    attrs) {\n        this.type = type;\n        this.attrs = attrs;\n    }\n    /**\n    Given a set of marks, create a new set which contains this one as\n    well, in the right position. If this mark is already in the set,\n    the set itself is returned. If any marks that are set to be\n    [exclusive](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) with this mark are present,\n    those are replaced by this one.\n    */\n    addToSet(set) {\n        let copy, placed = false;\n        for (let i = 0; i < set.length; i++) {\n            let other = set[i];\n            if (this.eq(other))\n                return set;\n            if (this.type.excludes(other.type)) {\n                if (!copy)\n                    copy = set.slice(0, i);\n            }\n            else if (other.type.excludes(this.type)) {\n                return set;\n            }\n            else {\n                if (!placed && other.type.rank > this.type.rank) {\n                    if (!copy)\n                        copy = set.slice(0, i);\n                    copy.push(this);\n                    placed = true;\n                }\n                if (copy)\n                    copy.push(other);\n            }\n        }\n        if (!copy)\n            copy = set.slice();\n        if (!placed)\n            copy.push(this);\n        return copy;\n    }\n    /**\n    Remove this mark from the given set, returning a new set. If this\n    mark is not in the set, the set itself is returned.\n    */\n    removeFromSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return set.slice(0, i).concat(set.slice(i + 1));\n        return set;\n    }\n    /**\n    Test whether this mark is in the given set of marks.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return true;\n        return false;\n    }\n    /**\n    Test whether this mark has the same type and attributes as\n    another mark.\n    */\n    eq(other) {\n        return this == other ||\n            (this.type == other.type && compareDeep(this.attrs, other.attrs));\n    }\n    /**\n    Convert this mark to a JSON-serializeable representation.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        return obj;\n    }\n    /**\n    Deserialize a mark from JSON.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Mark.fromJSON\");\n        let type = schema.marks[json.type];\n        if (!type)\n            throw new RangeError(`There is no mark type ${json.type} in this schema`);\n        let mark = type.create(json.attrs);\n        type.checkAttrs(mark.attrs);\n        return mark;\n    }\n    /**\n    Test whether two sets of marks are identical.\n    */\n    static sameSet(a, b) {\n        if (a == b)\n            return true;\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!a[i].eq(b[i]))\n                return false;\n        return true;\n    }\n    /**\n    Create a properly sorted mark set from null, a single mark, or an\n    unsorted array of marks.\n    */\n    static setFrom(marks) {\n        if (!marks || Array.isArray(marks) && marks.length == 0)\n            return Mark.none;\n        if (marks instanceof Mark)\n            return [marks];\n        let copy = marks.slice();\n        copy.sort((a, b) => a.type.rank - b.type.rank);\n        return copy;\n    }\n}\n/**\nThe empty set of marks.\n*/\nMark.none = [];\n\n/**\nError type raised by [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) when\ngiven an invalid replacement.\n*/\nclass ReplaceError extends Error {\n}\n/*\nReplaceError = function(this: any, message: string) {\n  let err = Error.call(this, message)\n  ;(err as any).__proto__ = ReplaceError.prototype\n  return err\n} as any\n\nReplaceError.prototype = Object.create(Error.prototype)\nReplaceError.prototype.constructor = ReplaceError\nReplaceError.prototype.name = \"ReplaceError\"\n*/\n/**\nA slice represents a piece cut out of a larger document. It\nstores not only a fragment, but also the depth up to which nodes on\nboth side are ‘open’ (cut through).\n*/\nclass Slice {\n    /**\n    Create a slice. When specifying a non-zero open depth, you must\n    make sure that there are nodes of at least that depth at the\n    appropriate side of the fragment—i.e. if the fragment is an\n    empty paragraph node, `openStart` and `openEnd` can't be greater\n    than 1.\n    \n    It is not necessary for the content of open nodes to conform to\n    the schema's content constraints, though it should be a valid\n    start/end/middle for such a node, depending on which sides are\n    open.\n    */\n    constructor(\n    /**\n    The slice's content.\n    */\n    content, \n    /**\n    The open depth at the start of the fragment.\n    */\n    openStart, \n    /**\n    The open depth at the end.\n    */\n    openEnd) {\n        this.content = content;\n        this.openStart = openStart;\n        this.openEnd = openEnd;\n    }\n    /**\n    The size this slice would add when inserted into a document.\n    */\n    get size() {\n        return this.content.size - this.openStart - this.openEnd;\n    }\n    /**\n    @internal\n    */\n    insertAt(pos, fragment) {\n        let content = insertInto(this.content, pos + this.openStart, fragment);\n        return content && new Slice(content, this.openStart, this.openEnd);\n    }\n    /**\n    @internal\n    */\n    removeBetween(from, to) {\n        return new Slice(removeRange(this.content, from + this.openStart, to + this.openStart), this.openStart, this.openEnd);\n    }\n    /**\n    Tests whether this slice is equal to another slice.\n    */\n    eq(other) {\n        return this.content.eq(other.content) && this.openStart == other.openStart && this.openEnd == other.openEnd;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return this.content + \"(\" + this.openStart + \",\" + this.openEnd + \")\";\n    }\n    /**\n    Convert a slice to a JSON-serializable representation.\n    */\n    toJSON() {\n        if (!this.content.size)\n            return null;\n        let json = { content: this.content.toJSON() };\n        if (this.openStart > 0)\n            json.openStart = this.openStart;\n        if (this.openEnd > 0)\n            json.openEnd = this.openEnd;\n        return json;\n    }\n    /**\n    Deserialize a slice from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            return Slice.empty;\n        let openStart = json.openStart || 0, openEnd = json.openEnd || 0;\n        if (typeof openStart != \"number\" || typeof openEnd != \"number\")\n            throw new RangeError(\"Invalid input for Slice.fromJSON\");\n        return new Slice(Fragment.fromJSON(schema, json.content), openStart, openEnd);\n    }\n    /**\n    Create a slice from a fragment by taking the maximum possible\n    open value on both side of the fragment.\n    */\n    static maxOpen(fragment, openIsolating = true) {\n        let openStart = 0, openEnd = 0;\n        for (let n = fragment.firstChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.firstChild)\n            openStart++;\n        for (let n = fragment.lastChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.lastChild)\n            openEnd++;\n        return new Slice(fragment, openStart, openEnd);\n    }\n}\n/**\nThe empty slice.\n*/\nSlice.empty = new Slice(Fragment.empty, 0, 0);\nfunction removeRange(content, from, to) {\n    let { index, offset } = content.findIndex(from), child = content.maybeChild(index);\n    let { index: indexTo, offset: offsetTo } = content.findIndex(to);\n    if (offset == from || child.isText) {\n        if (offsetTo != to && !content.child(indexTo).isText)\n            throw new RangeError(\"Removing non-flat range\");\n        return content.cut(0, from).append(content.cut(to));\n    }\n    if (index != indexTo)\n        throw new RangeError(\"Removing non-flat range\");\n    return content.replaceChild(index, child.copy(removeRange(child.content, from - offset - 1, to - offset - 1)));\n}\nfunction insertInto(content, dist, insert, parent) {\n    let { index, offset } = content.findIndex(dist), child = content.maybeChild(index);\n    if (offset == dist || child.isText) {\n        if (parent && !parent.canReplace(index, index, insert))\n            return null;\n        return content.cut(0, dist).append(insert).append(content.cut(dist));\n    }\n    let inner = insertInto(child.content, dist - offset - 1, insert, child);\n    return inner && content.replaceChild(index, child.copy(inner));\n}\nfunction replace($from, $to, slice) {\n    if (slice.openStart > $from.depth)\n        throw new ReplaceError(\"Inserted content deeper than insertion position\");\n    if ($from.depth - slice.openStart != $to.depth - slice.openEnd)\n        throw new ReplaceError(\"Inconsistent open depths\");\n    return replaceOuter($from, $to, slice, 0);\n}\nfunction replaceOuter($from, $to, slice, depth) {\n    let index = $from.index(depth), node = $from.node(depth);\n    if (index == $to.index(depth) && depth < $from.depth - slice.openStart) {\n        let inner = replaceOuter($from, $to, slice, depth + 1);\n        return node.copy(node.content.replaceChild(index, inner));\n    }\n    else if (!slice.content.size) {\n        return close(node, replaceTwoWay($from, $to, depth));\n    }\n    else if (!slice.openStart && !slice.openEnd && $from.depth == depth && $to.depth == depth) { // Simple, flat case\n        let parent = $from.parent, content = parent.content;\n        return close(parent, content.cut(0, $from.parentOffset).append(slice.content).append(content.cut($to.parentOffset)));\n    }\n    else {\n        let { start, end } = prepareSliceForReplace(slice, $from);\n        return close(node, replaceThreeWay($from, start, end, $to, depth));\n    }\n}\nfunction checkJoin(main, sub) {\n    if (!sub.type.compatibleContent(main.type))\n        throw new ReplaceError(\"Cannot join \" + sub.type.name + \" onto \" + main.type.name);\n}\nfunction joinable($before, $after, depth) {\n    let node = $before.node(depth);\n    checkJoin(node, $after.node(depth));\n    return node;\n}\nfunction addNode(child, target) {\n    let last = target.length - 1;\n    if (last >= 0 && child.isText && child.sameMarkup(target[last]))\n        target[last] = child.withText(target[last].text + child.text);\n    else\n        target.push(child);\n}\nfunction addRange($start, $end, depth, target) {\n    let node = ($end || $start).node(depth);\n    let startIndex = 0, endIndex = $end ? $end.index(depth) : node.childCount;\n    if ($start) {\n        startIndex = $start.index(depth);\n        if ($start.depth > depth) {\n            startIndex++;\n        }\n        else if ($start.textOffset) {\n            addNode($start.nodeAfter, target);\n            startIndex++;\n        }\n    }\n    for (let i = startIndex; i < endIndex; i++)\n        addNode(node.child(i), target);\n    if ($end && $end.depth == depth && $end.textOffset)\n        addNode($end.nodeBefore, target);\n}\nfunction close(node, content) {\n    node.type.checkContent(content);\n    return node.copy(content);\n}\nfunction replaceThreeWay($from, $start, $end, $to, depth) {\n    let openStart = $from.depth > depth && joinable($from, $start, depth + 1);\n    let openEnd = $to.depth > depth && joinable($end, $to, depth + 1);\n    let content = [];\n    addRange(null, $from, depth, content);\n    if (openStart && openEnd && $start.index(depth) == $end.index(depth)) {\n        checkJoin(openStart, openEnd);\n        addNode(close(openStart, replaceThreeWay($from, $start, $end, $to, depth + 1)), content);\n    }\n    else {\n        if (openStart)\n            addNode(close(openStart, replaceTwoWay($from, $start, depth + 1)), content);\n        addRange($start, $end, depth, content);\n        if (openEnd)\n            addNode(close(openEnd, replaceTwoWay($end, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction replaceTwoWay($from, $to, depth) {\n    let content = [];\n    addRange(null, $from, depth, content);\n    if ($from.depth > depth) {\n        let type = joinable($from, $to, depth + 1);\n        addNode(close(type, replaceTwoWay($from, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction prepareSliceForReplace(slice, $along) {\n    let extra = $along.depth - slice.openStart, parent = $along.node(extra);\n    let node = parent.copy(slice.content);\n    for (let i = extra - 1; i >= 0; i--)\n        node = $along.node(i).copy(Fragment.from(node));\n    return { start: node.resolveNoCache(slice.openStart + extra),\n        end: node.resolveNoCache(node.content.size - slice.openEnd - extra) };\n}\n\n/**\nYou can [_resolve_](https://prosemirror.net/docs/ref/#model.Node.resolve) a position to get more\ninformation about it. Objects of this class represent such a\nresolved position, providing various pieces of context\ninformation, and some helper methods.\n\nThroughout this interface, methods that take an optional `depth`\nparameter will interpret undefined as `this.depth` and negative\nnumbers as `this.depth + value`.\n*/\nclass ResolvedPos {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The position that was resolved.\n    */\n    pos, \n    /**\n    @internal\n    */\n    path, \n    /**\n    The offset this position has into its parent node.\n    */\n    parentOffset) {\n        this.pos = pos;\n        this.path = path;\n        this.parentOffset = parentOffset;\n        this.depth = path.length / 3 - 1;\n    }\n    /**\n    @internal\n    */\n    resolveDepth(val) {\n        if (val == null)\n            return this.depth;\n        if (val < 0)\n            return this.depth + val;\n        return val;\n    }\n    /**\n    The parent node that the position points into. Note that even if\n    a position points into a text node, that node is not considered\n    the parent—text nodes are ‘flat’ in this model, and have no content.\n    */\n    get parent() { return this.node(this.depth); }\n    /**\n    The root node in which the position was resolved.\n    */\n    get doc() { return this.node(0); }\n    /**\n    The ancestor node at the given level. `p.node(p.depth)` is the\n    same as `p.parent`.\n    */\n    node(depth) { return this.path[this.resolveDepth(depth) * 3]; }\n    /**\n    The index into the ancestor at the given level. If this points\n    at the 3rd node in the 2nd paragraph on the top level, for\n    example, `p.index(0)` is 1 and `p.index(1)` is 2.\n    */\n    index(depth) { return this.path[this.resolveDepth(depth) * 3 + 1]; }\n    /**\n    The index pointing after this position into the ancestor at the\n    given level.\n    */\n    indexAfter(depth) {\n        depth = this.resolveDepth(depth);\n        return this.index(depth) + (depth == this.depth && !this.textOffset ? 0 : 1);\n    }\n    /**\n    The (absolute) position at the start of the node at the given\n    level.\n    */\n    start(depth) {\n        depth = this.resolveDepth(depth);\n        return depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n    }\n    /**\n    The (absolute) position at the end of the node at the given\n    level.\n    */\n    end(depth) {\n        depth = this.resolveDepth(depth);\n        return this.start(depth) + this.node(depth).content.size;\n    }\n    /**\n    The (absolute) position directly before the wrapping node at the\n    given level, or, when `depth` is `this.depth + 1`, the original\n    position.\n    */\n    before(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position before the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1];\n    }\n    /**\n    The (absolute) position directly after the wrapping node at the\n    given level, or the original position when `depth` is `this.depth + 1`.\n    */\n    after(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position after the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1] + this.path[depth * 3].nodeSize;\n    }\n    /**\n    When this position points into a text node, this returns the\n    distance between the position and the start of the text node.\n    Will be zero for positions that point between nodes.\n    */\n    get textOffset() { return this.pos - this.path[this.path.length - 1]; }\n    /**\n    Get the node directly after the position, if any. If the position\n    points into a text node, only the part of that node after the\n    position is returned.\n    */\n    get nodeAfter() {\n        let parent = this.parent, index = this.index(this.depth);\n        if (index == parent.childCount)\n            return null;\n        let dOff = this.pos - this.path[this.path.length - 1], child = parent.child(index);\n        return dOff ? parent.child(index).cut(dOff) : child;\n    }\n    /**\n    Get the node directly before the position, if any. If the\n    position points into a text node, only the part of that node\n    before the position is returned.\n    */\n    get nodeBefore() {\n        let index = this.index(this.depth);\n        let dOff = this.pos - this.path[this.path.length - 1];\n        if (dOff)\n            return this.parent.child(index).cut(0, dOff);\n        return index == 0 ? null : this.parent.child(index - 1);\n    }\n    /**\n    Get the position at the given index in the parent node at the\n    given depth (which defaults to `this.depth`).\n    */\n    posAtIndex(index, depth) {\n        depth = this.resolveDepth(depth);\n        let node = this.path[depth * 3], pos = depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n        for (let i = 0; i < index; i++)\n            pos += node.child(i).nodeSize;\n        return pos;\n    }\n    /**\n    Get the marks at this position, factoring in the surrounding\n    marks' [`inclusive`](https://prosemirror.net/docs/ref/#model.MarkSpec.inclusive) property. If the\n    position is at the start of a non-empty node, the marks of the\n    node after it (if any) are returned.\n    */\n    marks() {\n        let parent = this.parent, index = this.index();\n        // In an empty parent, return the empty array\n        if (parent.content.size == 0)\n            return Mark.none;\n        // When inside a text node, just return the text node's marks\n        if (this.textOffset)\n            return parent.child(index).marks;\n        let main = parent.maybeChild(index - 1), other = parent.maybeChild(index);\n        // If the `after` flag is true of there is no node before, make\n        // the node after this position the main reference.\n        if (!main) {\n            let tmp = main;\n            main = other;\n            other = tmp;\n        }\n        // Use all marks in the main node, except those that have\n        // `inclusive` set to false and are not present in the other node.\n        let marks = main.marks;\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!other || !marks[i].isInSet(other.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    Get the marks after the current position, if any, except those\n    that are non-inclusive and not present at position `$end`. This\n    is mostly useful for getting the set of marks to preserve after a\n    deletion. Will return `null` if this position is at the end of\n    its parent node or its parent node isn't a textblock (in which\n    case no marks should be preserved).\n    */\n    marksAcross($end) {\n        let after = this.parent.maybeChild(this.index());\n        if (!after || !after.isInline)\n            return null;\n        let marks = after.marks, next = $end.parent.maybeChild($end.index());\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!next || !marks[i].isInSet(next.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    The depth up to which this position and the given (non-resolved)\n    position share the same parent nodes.\n    */\n    sharedDepth(pos) {\n        for (let depth = this.depth; depth > 0; depth--)\n            if (this.start(depth) <= pos && this.end(depth) >= pos)\n                return depth;\n        return 0;\n    }\n    /**\n    Returns a range based on the place where this position and the\n    given position diverge around block content. If both point into\n    the same textblock, for example, a range around that textblock\n    will be returned. If they point into different blocks, the range\n    around those blocks in their shared ancestor is returned. You can\n    pass in an optional predicate that will be called with a parent\n    node to see if a range into that parent is acceptable.\n    */\n    blockRange(other = this, pred) {\n        if (other.pos < this.pos)\n            return other.blockRange(this);\n        for (let d = this.depth - (this.parent.inlineContent || this.pos == other.pos ? 1 : 0); d >= 0; d--)\n            if (other.pos <= this.end(d) && (!pred || pred(this.node(d))))\n                return new NodeRange(this, other, d);\n        return null;\n    }\n    /**\n    Query whether the given position shares the same parent node.\n    */\n    sameParent(other) {\n        return this.pos - this.parentOffset == other.pos - other.parentOffset;\n    }\n    /**\n    Return the greater of this and the given position.\n    */\n    max(other) {\n        return other.pos > this.pos ? other : this;\n    }\n    /**\n    Return the smaller of this and the given position.\n    */\n    min(other) {\n        return other.pos < this.pos ? other : this;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let str = \"\";\n        for (let i = 1; i <= this.depth; i++)\n            str += (str ? \"/\" : \"\") + this.node(i).type.name + \"_\" + this.index(i - 1);\n        return str + \":\" + this.parentOffset;\n    }\n    /**\n    @internal\n    */\n    static resolve(doc, pos) {\n        if (!(pos >= 0 && pos <= doc.content.size))\n            throw new RangeError(\"Position \" + pos + \" out of range\");\n        let path = [];\n        let start = 0, parentOffset = pos;\n        for (let node = doc;;) {\n            let { index, offset } = node.content.findIndex(parentOffset);\n            let rem = parentOffset - offset;\n            path.push(node, index, start + offset);\n            if (!rem)\n                break;\n            node = node.child(index);\n            if (node.isText)\n                break;\n            parentOffset = rem - 1;\n            start += offset + 1;\n        }\n        return new ResolvedPos(pos, path, parentOffset);\n    }\n    /**\n    @internal\n    */\n    static resolveCached(doc, pos) {\n        let cache = resolveCache.get(doc);\n        if (cache) {\n            for (let i = 0; i < cache.elts.length; i++) {\n                let elt = cache.elts[i];\n                if (elt.pos == pos)\n                    return elt;\n            }\n        }\n        else {\n            resolveCache.set(doc, cache = new ResolveCache);\n        }\n        let result = cache.elts[cache.i] = ResolvedPos.resolve(doc, pos);\n        cache.i = (cache.i + 1) % resolveCacheSize;\n        return result;\n    }\n}\nclass ResolveCache {\n    constructor() {\n        this.elts = [];\n        this.i = 0;\n    }\n}\nconst resolveCacheSize = 12, resolveCache = new WeakMap();\n/**\nRepresents a flat range of content, i.e. one that starts and\nends in the same node.\n*/\nclass NodeRange {\n    /**\n    Construct a node range. `$from` and `$to` should point into the\n    same node until at least the given `depth`, since a node range\n    denotes an adjacent set of nodes in a single parent node.\n    */\n    constructor(\n    /**\n    A resolved position along the start of the content. May have a\n    `depth` greater than this object's `depth` property, since\n    these are the positions that were used to compute the range,\n    not re-resolved positions directly at its boundaries.\n    */\n    $from, \n    /**\n    A position along the end of the content. See\n    caveat for [`$from`](https://prosemirror.net/docs/ref/#model.NodeRange.$from).\n    */\n    $to, \n    /**\n    The depth of the node that this range points into.\n    */\n    depth) {\n        this.$from = $from;\n        this.$to = $to;\n        this.depth = depth;\n    }\n    /**\n    The position at the start of the range.\n    */\n    get start() { return this.$from.before(this.depth + 1); }\n    /**\n    The position at the end of the range.\n    */\n    get end() { return this.$to.after(this.depth + 1); }\n    /**\n    The parent node that the range points into.\n    */\n    get parent() { return this.$from.node(this.depth); }\n    /**\n    The start index of the range in the parent node.\n    */\n    get startIndex() { return this.$from.index(this.depth); }\n    /**\n    The end index of the range in the parent node.\n    */\n    get endIndex() { return this.$to.indexAfter(this.depth); }\n}\n\nconst emptyAttrs = Object.create(null);\n/**\nThis class represents a node in the tree that makes up a\nProseMirror document. So a document is an instance of `Node`, with\nchildren that are also instances of `Node`.\n\nNodes are persistent data structures. Instead of changing them, you\ncreate new ones with the content you want. Old ones keep pointing\nat the old document shape. This is made cheaper by sharing\nstructure between the old and new data as much as possible, which a\ntree shape like this (without back pointers) makes easy.\n\n**Do not** directly mutate the properties of a `Node` object. See\n[the guide](https://prosemirror.net/docs/guide/#doc) for more information.\n*/\nclass Node {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of node that this is.\n    */\n    type, \n    /**\n    An object mapping attribute names to values. The kind of\n    attributes allowed and required are\n    [determined](https://prosemirror.net/docs/ref/#model.NodeSpec.attrs) by the node type.\n    */\n    attrs, \n    // A fragment holding the node's children.\n    content, \n    /**\n    The marks (things like whether it is emphasized or part of a\n    link) applied to this node.\n    */\n    marks = Mark.none) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.content = content || Fragment.empty;\n    }\n    /**\n    The array of this node's child nodes.\n    */\n    get children() { return this.content.content; }\n    /**\n    The size of this node, as defined by the integer-based [indexing\n    scheme](https://prosemirror.net/docs/guide/#doc.indexing). For text nodes, this is the\n    amount of characters. For other leaf nodes, it is one. For\n    non-leaf nodes, it is the size of the content plus two (the\n    start and end token).\n    */\n    get nodeSize() { return this.isLeaf ? 1 : 2 + this.content.size; }\n    /**\n    The number of children that the node has.\n    */\n    get childCount() { return this.content.childCount; }\n    /**\n    Get the child node at the given index. Raises an error when the\n    index is out of range.\n    */\n    child(index) { return this.content.child(index); }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) { return this.content.maybeChild(index); }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) { this.content.forEach(f); }\n    /**\n    Invoke a callback for all descendant nodes recursively between\n    the given two positions that are relative to start of this\n    node's content. The callback is invoked with the node, its\n    position relative to the original node (method receiver),\n    its parent node, and its child index. When the callback returns\n    false for a given node, that node's children will not be\n    recursed over. The last parameter can be used to specify a\n    starting position to count from.\n    */\n    nodesBetween(from, to, f, startPos = 0) {\n        this.content.nodesBetween(from, to, f, startPos, this);\n    }\n    /**\n    Call the given callback for every descendant node. Doesn't\n    descend into a node when the callback returns `false`.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.content.size, f);\n    }\n    /**\n    Concatenates all the text nodes found in this fragment and its\n    children.\n    */\n    get textContent() {\n        return (this.isLeaf && this.type.spec.leafText)\n            ? this.type.spec.leafText(this)\n            : this.textBetween(0, this.content.size, \"\");\n    }\n    /**\n    Get all text between positions `from` and `to`. When\n    `blockSeparator` is given, it will be inserted to separate text\n    from different block nodes. If `leafText` is given, it'll be\n    inserted for every non-text leaf node encountered, otherwise\n    [`leafText`](https://prosemirror.net/docs/ref/#model.NodeSpec.leafText) will be used.\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        return this.content.textBetween(from, to, blockSeparator, leafText);\n    }\n    /**\n    Returns this node's first child, or `null` if there are no\n    children.\n    */\n    get firstChild() { return this.content.firstChild; }\n    /**\n    Returns this node's last child, or `null` if there are no\n    children.\n    */\n    get lastChild() { return this.content.lastChild; }\n    /**\n    Test whether two nodes represent the same piece of document.\n    */\n    eq(other) {\n        return this == other || (this.sameMarkup(other) && this.content.eq(other.content));\n    }\n    /**\n    Compare the markup (type, attributes, and marks) of this node to\n    those of another. Returns `true` if both have the same markup.\n    */\n    sameMarkup(other) {\n        return this.hasMarkup(other.type, other.attrs, other.marks);\n    }\n    /**\n    Check whether this node's markup correspond to the given type,\n    attributes, and marks.\n    */\n    hasMarkup(type, attrs, marks) {\n        return this.type == type &&\n            compareDeep(this.attrs, attrs || type.defaultAttrs || emptyAttrs) &&\n            Mark.sameSet(this.marks, marks || Mark.none);\n    }\n    /**\n    Create a new node with the same markup as this node, containing\n    the given content (or empty, if no content is given).\n    */\n    copy(content = null) {\n        if (content == this.content)\n            return this;\n        return new Node(this.type, this.attrs, content, this.marks);\n    }\n    /**\n    Create a copy of this node, with the given set of marks instead\n    of the node's own marks.\n    */\n    mark(marks) {\n        return marks == this.marks ? this : new Node(this.type, this.attrs, this.content, marks);\n    }\n    /**\n    Create a copy of this node with only the content between the\n    given positions. If `to` is not given, it defaults to the end of\n    the node.\n    */\n    cut(from, to = this.content.size) {\n        if (from == 0 && to == this.content.size)\n            return this;\n        return this.copy(this.content.cut(from, to));\n    }\n    /**\n    Cut out the part of the document between the given positions, and\n    return it as a `Slice` object.\n    */\n    slice(from, to = this.content.size, includeParents = false) {\n        if (from == to)\n            return Slice.empty;\n        let $from = this.resolve(from), $to = this.resolve(to);\n        let depth = includeParents ? 0 : $from.sharedDepth(to);\n        let start = $from.start(depth), node = $from.node(depth);\n        let content = node.content.cut($from.pos - start, $to.pos - start);\n        return new Slice(content, $from.depth - depth, $to.depth - depth);\n    }\n    /**\n    Replace the part of the document between the given positions with\n    the given slice. The slice must 'fit', meaning its open sides\n    must be able to connect to the surrounding content, and its\n    content nodes must be valid children for the node they are placed\n    into. If any of this is violated, an error of type\n    [`ReplaceError`](https://prosemirror.net/docs/ref/#model.ReplaceError) is thrown.\n    */\n    replace(from, to, slice) {\n        return replace(this.resolve(from), this.resolve(to), slice);\n    }\n    /**\n    Find the node directly after the given position.\n    */\n    nodeAt(pos) {\n        for (let node = this;;) {\n            let { index, offset } = node.content.findIndex(pos);\n            node = node.maybeChild(index);\n            if (!node)\n                return null;\n            if (offset == pos || node.isText)\n                return node;\n            pos -= offset + 1;\n        }\n    }\n    /**\n    Find the (direct) child node after the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childAfter(pos) {\n        let { index, offset } = this.content.findIndex(pos);\n        return { node: this.content.maybeChild(index), index, offset };\n    }\n    /**\n    Find the (direct) child node before the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childBefore(pos) {\n        if (pos == 0)\n            return { node: null, index: 0, offset: 0 };\n        let { index, offset } = this.content.findIndex(pos);\n        if (offset < pos)\n            return { node: this.content.child(index), index, offset };\n        let node = this.content.child(index - 1);\n        return { node, index: index - 1, offset: offset - node.nodeSize };\n    }\n    /**\n    Resolve the given position in the document, returning an\n    [object](https://prosemirror.net/docs/ref/#model.ResolvedPos) with information about its context.\n    */\n    resolve(pos) { return ResolvedPos.resolveCached(this, pos); }\n    /**\n    @internal\n    */\n    resolveNoCache(pos) { return ResolvedPos.resolve(this, pos); }\n    /**\n    Test whether a given mark or mark type occurs in this document\n    between the two given positions.\n    */\n    rangeHasMark(from, to, type) {\n        let found = false;\n        if (to > from)\n            this.nodesBetween(from, to, node => {\n                if (type.isInSet(node.marks))\n                    found = true;\n                return !found;\n            });\n        return found;\n    }\n    /**\n    True when this is a block (non-inline node)\n    */\n    get isBlock() { return this.type.isBlock; }\n    /**\n    True when this is a textblock node, a block node with inline\n    content.\n    */\n    get isTextblock() { return this.type.isTextblock; }\n    /**\n    True when this node allows inline content.\n    */\n    get inlineContent() { return this.type.inlineContent; }\n    /**\n    True when this is an inline node (a text node or a node that can\n    appear among text).\n    */\n    get isInline() { return this.type.isInline; }\n    /**\n    True when this is a text node.\n    */\n    get isText() { return this.type.isText; }\n    /**\n    True when this is a leaf node.\n    */\n    get isLeaf() { return this.type.isLeaf; }\n    /**\n    True when this is an atom, i.e. when it does not have directly\n    editable content. This is usually the same as `isLeaf`, but can\n    be configured with the [`atom` property](https://prosemirror.net/docs/ref/#model.NodeSpec.atom)\n    on a node's spec (typically used when the node is displayed as\n    an uneditable [node view](https://prosemirror.net/docs/ref/#view.NodeView)).\n    */\n    get isAtom() { return this.type.isAtom; }\n    /**\n    Return a string representation of this node for debugging\n    purposes.\n    */\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        let name = this.type.name;\n        if (this.content.size)\n            name += \"(\" + this.content.toStringInner() + \")\";\n        return wrapMarks(this.marks, name);\n    }\n    /**\n    Get the content match in this node at the given index.\n    */\n    contentMatchAt(index) {\n        let match = this.type.contentMatch.matchFragment(this.content, 0, index);\n        if (!match)\n            throw new Error(\"Called contentMatchAt on a node with invalid content\");\n        return match;\n    }\n    /**\n    Test whether replacing the range between `from` and `to` (by\n    child index) with the given replacement fragment (which defaults\n    to the empty fragment) would leave the node's content valid. You\n    can optionally pass `start` and `end` indices into the\n    replacement fragment.\n    */\n    canReplace(from, to, replacement = Fragment.empty, start = 0, end = replacement.childCount) {\n        let one = this.contentMatchAt(from).matchFragment(replacement, start, end);\n        let two = one && one.matchFragment(this.content, to);\n        if (!two || !two.validEnd)\n            return false;\n        for (let i = start; i < end; i++)\n            if (!this.type.allowsMarks(replacement.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Test whether replacing the range `from` to `to` (by index) with\n    a node of the given type would leave the node's content valid.\n    */\n    canReplaceWith(from, to, type, marks) {\n        if (marks && !this.type.allowsMarks(marks))\n            return false;\n        let start = this.contentMatchAt(from).matchType(type);\n        let end = start && start.matchFragment(this.content, to);\n        return end ? end.validEnd : false;\n    }\n    /**\n    Test whether the given node's content could be appended to this\n    node. If that node is empty, this will only return true if there\n    is at least one node type that can appear in both nodes (to avoid\n    merging completely incompatible nodes).\n    */\n    canAppend(other) {\n        if (other.content.size)\n            return this.canReplace(this.childCount, this.childCount, other.content);\n        else\n            return this.type.compatibleContent(other.type);\n    }\n    /**\n    Check whether this node and its descendants conform to the\n    schema, and raise an exception when they do not.\n    */\n    check() {\n        this.type.checkContent(this.content);\n        this.type.checkAttrs(this.attrs);\n        let copy = Mark.none;\n        for (let i = 0; i < this.marks.length; i++) {\n            let mark = this.marks[i];\n            mark.type.checkAttrs(mark.attrs);\n            copy = mark.addToSet(copy);\n        }\n        if (!Mark.sameSet(copy, this.marks))\n            throw new RangeError(`Invalid collection of marks for node ${this.type.name}: ${this.marks.map(m => m.type.name)}`);\n        this.content.forEach(node => node.check());\n    }\n    /**\n    Return a JSON-serializeable representation of this node.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        if (this.content.size)\n            obj.content = this.content.toJSON();\n        if (this.marks.length)\n            obj.marks = this.marks.map(n => n.toJSON());\n        return obj;\n    }\n    /**\n    Deserialize a node from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Node.fromJSON\");\n        let marks = undefined;\n        if (json.marks) {\n            if (!Array.isArray(json.marks))\n                throw new RangeError(\"Invalid mark data for Node.fromJSON\");\n            marks = json.marks.map(schema.markFromJSON);\n        }\n        if (json.type == \"text\") {\n            if (typeof json.text != \"string\")\n                throw new RangeError(\"Invalid text node in JSON\");\n            return schema.text(json.text, marks);\n        }\n        let content = Fragment.fromJSON(schema, json.content);\n        let node = schema.nodeType(json.type).create(json.attrs, content, marks);\n        node.type.checkAttrs(node.attrs);\n        return node;\n    }\n}\nNode.prototype.text = undefined;\nclass TextNode extends Node {\n    /**\n    @internal\n    */\n    constructor(type, attrs, content, marks) {\n        super(type, attrs, null, marks);\n        if (!content)\n            throw new RangeError(\"Empty text nodes are not allowed\");\n        this.text = content;\n    }\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        return wrapMarks(this.marks, JSON.stringify(this.text));\n    }\n    get textContent() { return this.text; }\n    textBetween(from, to) { return this.text.slice(from, to); }\n    get nodeSize() { return this.text.length; }\n    mark(marks) {\n        return marks == this.marks ? this : new TextNode(this.type, this.attrs, this.text, marks);\n    }\n    withText(text) {\n        if (text == this.text)\n            return this;\n        return new TextNode(this.type, this.attrs, text, this.marks);\n    }\n    cut(from = 0, to = this.text.length) {\n        if (from == 0 && to == this.text.length)\n            return this;\n        return this.withText(this.text.slice(from, to));\n    }\n    eq(other) {\n        return this.sameMarkup(other) && this.text == other.text;\n    }\n    toJSON() {\n        let base = super.toJSON();\n        base.text = this.text;\n        return base;\n    }\n}\nfunction wrapMarks(marks, str) {\n    for (let i = marks.length - 1; i >= 0; i--)\n        str = marks[i].type.name + \"(\" + str + \")\";\n    return str;\n}\n\n/**\nInstances of this class represent a match state of a node type's\n[content expression](https://prosemirror.net/docs/ref/#model.NodeSpec.content), and can be used to\nfind out whether further content matches here, and whether a given\nposition is a valid end of the node.\n*/\nclass ContentMatch {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    True when this match state represents a valid end of the node.\n    */\n    validEnd) {\n        this.validEnd = validEnd;\n        /**\n        @internal\n        */\n        this.next = [];\n        /**\n        @internal\n        */\n        this.wrapCache = [];\n    }\n    /**\n    @internal\n    */\n    static parse(string, nodeTypes) {\n        let stream = new TokenStream(string, nodeTypes);\n        if (stream.next == null)\n            return ContentMatch.empty;\n        let expr = parseExpr(stream);\n        if (stream.next)\n            stream.err(\"Unexpected trailing text\");\n        let match = dfa(nfa(expr));\n        checkForDeadEnds(match, stream);\n        return match;\n    }\n    /**\n    Match a node type, returning a match after that node if\n    successful.\n    */\n    matchType(type) {\n        for (let i = 0; i < this.next.length; i++)\n            if (this.next[i].type == type)\n                return this.next[i].next;\n        return null;\n    }\n    /**\n    Try to match a fragment. Returns the resulting match when\n    successful.\n    */\n    matchFragment(frag, start = 0, end = frag.childCount) {\n        let cur = this;\n        for (let i = start; cur && i < end; i++)\n            cur = cur.matchType(frag.child(i).type);\n        return cur;\n    }\n    /**\n    @internal\n    */\n    get inlineContent() {\n        return this.next.length != 0 && this.next[0].type.isInline;\n    }\n    /**\n    Get the first matching node type at this match position that can\n    be generated.\n    */\n    get defaultType() {\n        for (let i = 0; i < this.next.length; i++) {\n            let { type } = this.next[i];\n            if (!(type.isText || type.hasRequiredAttrs()))\n                return type;\n        }\n        return null;\n    }\n    /**\n    @internal\n    */\n    compatible(other) {\n        for (let i = 0; i < this.next.length; i++)\n            for (let j = 0; j < other.next.length; j++)\n                if (this.next[i].type == other.next[j].type)\n                    return true;\n        return false;\n    }\n    /**\n    Try to match the given fragment, and if that fails, see if it can\n    be made to match by inserting nodes in front of it. When\n    successful, return a fragment of inserted nodes (which may be\n    empty if nothing had to be inserted). When `toEnd` is true, only\n    return a fragment if the resulting match goes to the end of the\n    content expression.\n    */\n    fillBefore(after, toEnd = false, startIndex = 0) {\n        let seen = [this];\n        function search(match, types) {\n            let finished = match.matchFragment(after, startIndex);\n            if (finished && (!toEnd || finished.validEnd))\n                return Fragment.from(types.map(tp => tp.createAndFill()));\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!(type.isText || type.hasRequiredAttrs()) && seen.indexOf(next) == -1) {\n                    seen.push(next);\n                    let found = search(next, types.concat(type));\n                    if (found)\n                        return found;\n                }\n            }\n            return null;\n        }\n        return search(this, []);\n    }\n    /**\n    Find a set of wrapping node types that would allow a node of the\n    given type to appear at this position. The result may be empty\n    (when it fits directly) and will be null when no such wrapping\n    exists.\n    */\n    findWrapping(target) {\n        for (let i = 0; i < this.wrapCache.length; i += 2)\n            if (this.wrapCache[i] == target)\n                return this.wrapCache[i + 1];\n        let computed = this.computeWrapping(target);\n        this.wrapCache.push(target, computed);\n        return computed;\n    }\n    /**\n    @internal\n    */\n    computeWrapping(target) {\n        let seen = Object.create(null), active = [{ match: this, type: null, via: null }];\n        while (active.length) {\n            let current = active.shift(), match = current.match;\n            if (match.matchType(target)) {\n                let result = [];\n                for (let obj = current; obj.type; obj = obj.via)\n                    result.push(obj.type);\n                return result.reverse();\n            }\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!type.isLeaf && !type.hasRequiredAttrs() && !(type.name in seen) && (!current.type || next.validEnd)) {\n                    active.push({ match: type.contentMatch, type, via: current });\n                    seen[type.name] = true;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n    The number of outgoing edges this node has in the finite\n    automaton that describes the content expression.\n    */\n    get edgeCount() {\n        return this.next.length;\n    }\n    /**\n    Get the _n_​th outgoing edge from this node in the finite\n    automaton that describes the content expression.\n    */\n    edge(n) {\n        if (n >= this.next.length)\n            throw new RangeError(`There's no ${n}th edge in this content match`);\n        return this.next[n];\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let seen = [];\n        function scan(m) {\n            seen.push(m);\n            for (let i = 0; i < m.next.length; i++)\n                if (seen.indexOf(m.next[i].next) == -1)\n                    scan(m.next[i].next);\n        }\n        scan(this);\n        return seen.map((m, i) => {\n            let out = i + (m.validEnd ? \"*\" : \" \") + \" \";\n            for (let i = 0; i < m.next.length; i++)\n                out += (i ? \", \" : \"\") + m.next[i].type.name + \"->\" + seen.indexOf(m.next[i].next);\n            return out;\n        }).join(\"\\n\");\n    }\n}\n/**\n@internal\n*/\nContentMatch.empty = new ContentMatch(true);\nclass TokenStream {\n    constructor(string, nodeTypes) {\n        this.string = string;\n        this.nodeTypes = nodeTypes;\n        this.inline = null;\n        this.pos = 0;\n        this.tokens = string.split(/\\s*(?=\\b|\\W|$)/);\n        if (this.tokens[this.tokens.length - 1] == \"\")\n            this.tokens.pop();\n        if (this.tokens[0] == \"\")\n            this.tokens.shift();\n    }\n    get next() { return this.tokens[this.pos]; }\n    eat(tok) { return this.next == tok && (this.pos++ || true); }\n    err(str) { throw new SyntaxError(str + \" (in content expression '\" + this.string + \"')\"); }\n}\nfunction parseExpr(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSeq(stream));\n    } while (stream.eat(\"|\"));\n    return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n}\nfunction parseExprSeq(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSubscript(stream));\n    } while (stream.next && stream.next != \")\" && stream.next != \"|\");\n    return exprs.length == 1 ? exprs[0] : { type: \"seq\", exprs };\n}\nfunction parseExprSubscript(stream) {\n    let expr = parseExprAtom(stream);\n    for (;;) {\n        if (stream.eat(\"+\"))\n            expr = { type: \"plus\", expr };\n        else if (stream.eat(\"*\"))\n            expr = { type: \"star\", expr };\n        else if (stream.eat(\"?\"))\n            expr = { type: \"opt\", expr };\n        else if (stream.eat(\"{\"))\n            expr = parseExprRange(stream, expr);\n        else\n            break;\n    }\n    return expr;\n}\nfunction parseNum(stream) {\n    if (/\\D/.test(stream.next))\n        stream.err(\"Expected number, got '\" + stream.next + \"'\");\n    let result = Number(stream.next);\n    stream.pos++;\n    return result;\n}\nfunction parseExprRange(stream, expr) {\n    let min = parseNum(stream), max = min;\n    if (stream.eat(\",\")) {\n        if (stream.next != \"}\")\n            max = parseNum(stream);\n        else\n            max = -1;\n    }\n    if (!stream.eat(\"}\"))\n        stream.err(\"Unclosed braced range\");\n    return { type: \"range\", min, max, expr };\n}\nfunction resolveName(stream, name) {\n    let types = stream.nodeTypes, type = types[name];\n    if (type)\n        return [type];\n    let result = [];\n    for (let typeName in types) {\n        let type = types[typeName];\n        if (type.isInGroup(name))\n            result.push(type);\n    }\n    if (result.length == 0)\n        stream.err(\"No node type or group '\" + name + \"' found\");\n    return result;\n}\nfunction parseExprAtom(stream) {\n    if (stream.eat(\"(\")) {\n        let expr = parseExpr(stream);\n        if (!stream.eat(\")\"))\n            stream.err(\"Missing closing paren\");\n        return expr;\n    }\n    else if (!/\\W/.test(stream.next)) {\n        let exprs = resolveName(stream, stream.next).map(type => {\n            if (stream.inline == null)\n                stream.inline = type.isInline;\n            else if (stream.inline != type.isInline)\n                stream.err(\"Mixing inline and block content\");\n            return { type: \"name\", value: type };\n        });\n        stream.pos++;\n        return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n    }\n    else {\n        stream.err(\"Unexpected token '\" + stream.next + \"'\");\n    }\n}\n// Construct an NFA from an expression as returned by the parser. The\n// NFA is represented as an array of states, which are themselves\n// arrays of edges, which are `{term, to}` objects. The first state is\n// the entry state and the last node is the success state.\n//\n// Note that unlike typical NFAs, the edge ordering in this one is\n// significant, in that it is used to contruct filler content when\n// necessary.\nfunction nfa(expr) {\n    let nfa = [[]];\n    connect(compile(expr, 0), node());\n    return nfa;\n    function node() { return nfa.push([]) - 1; }\n    function edge(from, to, term) {\n        let edge = { term, to };\n        nfa[from].push(edge);\n        return edge;\n    }\n    function connect(edges, to) {\n        edges.forEach(edge => edge.to = to);\n    }\n    function compile(expr, from) {\n        if (expr.type == \"choice\") {\n            return expr.exprs.reduce((out, expr) => out.concat(compile(expr, from)), []);\n        }\n        else if (expr.type == \"seq\") {\n            for (let i = 0;; i++) {\n                let next = compile(expr.exprs[i], from);\n                if (i == expr.exprs.length - 1)\n                    return next;\n                connect(next, from = node());\n            }\n        }\n        else if (expr.type == \"star\") {\n            let loop = node();\n            edge(from, loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"plus\") {\n            let loop = node();\n            connect(compile(expr.expr, from), loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"opt\") {\n            return [edge(from)].concat(compile(expr.expr, from));\n        }\n        else if (expr.type == \"range\") {\n            let cur = from;\n            for (let i = 0; i < expr.min; i++) {\n                let next = node();\n                connect(compile(expr.expr, cur), next);\n                cur = next;\n            }\n            if (expr.max == -1) {\n                connect(compile(expr.expr, cur), cur);\n            }\n            else {\n                for (let i = expr.min; i < expr.max; i++) {\n                    let next = node();\n                    edge(cur, next);\n                    connect(compile(expr.expr, cur), next);\n                    cur = next;\n                }\n            }\n            return [edge(cur)];\n        }\n        else if (expr.type == \"name\") {\n            return [edge(from, undefined, expr.value)];\n        }\n        else {\n            throw new Error(\"Unknown expr type\");\n        }\n    }\n}\nfunction cmp(a, b) { return b - a; }\n// Get the set of nodes reachable by null edges from `node`. Omit\n// nodes with only a single null-out-edge, since they may lead to\n// needless duplicated nodes.\nfunction nullFrom(nfa, node) {\n    let result = [];\n    scan(node);\n    return result.sort(cmp);\n    function scan(node) {\n        let edges = nfa[node];\n        if (edges.length == 1 && !edges[0].term)\n            return scan(edges[0].to);\n        result.push(node);\n        for (let i = 0; i < edges.length; i++) {\n            let { term, to } = edges[i];\n            if (!term && result.indexOf(to) == -1)\n                scan(to);\n        }\n    }\n}\n// Compiles an NFA as produced by `nfa` into a DFA, modeled as a set\n// of state objects (`ContentMatch` instances) with transitions\n// between them.\nfunction dfa(nfa) {\n    let labeled = Object.create(null);\n    return explore(nullFrom(nfa, 0));\n    function explore(states) {\n        let out = [];\n        states.forEach(node => {\n            nfa[node].forEach(({ term, to }) => {\n                if (!term)\n                    return;\n                let set;\n                for (let i = 0; i < out.length; i++)\n                    if (out[i][0] == term)\n                        set = out[i][1];\n                nullFrom(nfa, to).forEach(node => {\n                    if (!set)\n                        out.push([term, set = []]);\n                    if (set.indexOf(node) == -1)\n                        set.push(node);\n                });\n            });\n        });\n        let state = labeled[states.join(\",\")] = new ContentMatch(states.indexOf(nfa.length - 1) > -1);\n        for (let i = 0; i < out.length; i++) {\n            let states = out[i][1].sort(cmp);\n            state.next.push({ type: out[i][0], next: labeled[states.join(\",\")] || explore(states) });\n        }\n        return state;\n    }\n}\nfunction checkForDeadEnds(match, stream) {\n    for (let i = 0, work = [match]; i < work.length; i++) {\n        let state = work[i], dead = !state.validEnd, nodes = [];\n        for (let j = 0; j < state.next.length; j++) {\n            let { type, next } = state.next[j];\n            nodes.push(type.name);\n            if (dead && !(type.isText || type.hasRequiredAttrs()))\n                dead = false;\n            if (work.indexOf(next) == -1)\n                work.push(next);\n        }\n        if (dead)\n            stream.err(\"Only non-generatable nodes (\" + nodes.join(\", \") + \") in a required position (see https://prosemirror.net/docs/guide/#generatable)\");\n    }\n}\n\n// For node types where all attrs have a default value (or which don't\n// have any attributes), build up a single reusable default attribute\n// object, and use it for all nodes that don't specify specific\n// attributes.\nfunction defaultAttrs(attrs) {\n    let defaults = Object.create(null);\n    for (let attrName in attrs) {\n        let attr = attrs[attrName];\n        if (!attr.hasDefault)\n            return null;\n        defaults[attrName] = attr.default;\n    }\n    return defaults;\n}\nfunction computeAttrs(attrs, value) {\n    let built = Object.create(null);\n    for (let name in attrs) {\n        let given = value && value[name];\n        if (given === undefined) {\n            let attr = attrs[name];\n            if (attr.hasDefault)\n                given = attr.default;\n            else\n                throw new RangeError(\"No value supplied for attribute \" + name);\n        }\n        built[name] = given;\n    }\n    return built;\n}\nfunction checkAttrs(attrs, values, type, name) {\n    for (let name in values)\n        if (!(name in attrs))\n            throw new RangeError(`Unsupported attribute ${name} for ${type} of type ${name}`);\n    for (let name in attrs) {\n        let attr = attrs[name];\n        if (attr.validate)\n            attr.validate(values[name]);\n    }\n}\nfunction initAttrs(typeName, attrs) {\n    let result = Object.create(null);\n    if (attrs)\n        for (let name in attrs)\n            result[name] = new Attribute(typeName, name, attrs[name]);\n    return result;\n}\n/**\nNode types are objects allocated once per `Schema` and used to\n[tag](https://prosemirror.net/docs/ref/#model.Node.type) `Node` instances. They contain information\nabout the node type, such as its name and what kind of node it\nrepresents.\n*/\nclass NodeType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name the node type has in this schema.\n    */\n    name, \n    /**\n    A link back to the `Schema` the node type belongs to.\n    */\n    schema, \n    /**\n    The spec that this type is based on\n    */\n    spec) {\n        this.name = name;\n        this.schema = schema;\n        this.spec = spec;\n        /**\n        The set of marks allowed in this node. `null` means all marks\n        are allowed.\n        */\n        this.markSet = null;\n        this.groups = spec.group ? spec.group.split(\" \") : [];\n        this.attrs = initAttrs(name, spec.attrs);\n        this.defaultAttrs = defaultAttrs(this.attrs);\n        this.contentMatch = null;\n        this.inlineContent = null;\n        this.isBlock = !(spec.inline || name == \"text\");\n        this.isText = name == \"text\";\n    }\n    /**\n    True if this is an inline type.\n    */\n    get isInline() { return !this.isBlock; }\n    /**\n    True if this is a textblock type, a block that contains inline\n    content.\n    */\n    get isTextblock() { return this.isBlock && this.inlineContent; }\n    /**\n    True for node types that allow no content.\n    */\n    get isLeaf() { return this.contentMatch == ContentMatch.empty; }\n    /**\n    True when this node is an atom, i.e. when it does not have\n    directly editable content.\n    */\n    get isAtom() { return this.isLeaf || !!this.spec.atom; }\n    /**\n    Return true when this node type is part of the given\n    [group](https://prosemirror.net/docs/ref/#model.NodeSpec.group).\n    */\n    isInGroup(group) {\n        return this.groups.indexOf(group) > -1;\n    }\n    /**\n    The node type's [whitespace](https://prosemirror.net/docs/ref/#model.NodeSpec.whitespace) option.\n    */\n    get whitespace() {\n        return this.spec.whitespace || (this.spec.code ? \"pre\" : \"normal\");\n    }\n    /**\n    Tells you whether this node type has any required attributes.\n    */\n    hasRequiredAttrs() {\n        for (let n in this.attrs)\n            if (this.attrs[n].isRequired)\n                return true;\n        return false;\n    }\n    /**\n    Indicates whether this node allows some of the same content as\n    the given node type.\n    */\n    compatibleContent(other) {\n        return this == other || this.contentMatch.compatible(other.contentMatch);\n    }\n    /**\n    @internal\n    */\n    computeAttrs(attrs) {\n        if (!attrs && this.defaultAttrs)\n            return this.defaultAttrs;\n        else\n            return computeAttrs(this.attrs, attrs);\n    }\n    /**\n    Create a `Node` of this type. The given attributes are\n    checked and defaulted (you can pass `null` to use the type's\n    defaults entirely, if no required attributes exist). `content`\n    may be a `Fragment`, a node, an array of nodes, or\n    `null`. Similarly `marks` may be `null` to default to the empty\n    set of marks.\n    */\n    create(attrs = null, content, marks) {\n        if (this.isText)\n            throw new Error(\"NodeType.create can't construct text nodes\");\n        return new Node(this, this.computeAttrs(attrs), Fragment.from(content), Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but check the given content\n    against the node type's content restrictions, and throw an error\n    if it doesn't match.\n    */\n    createChecked(attrs = null, content, marks) {\n        content = Fragment.from(content);\n        this.checkContent(content);\n        return new Node(this, this.computeAttrs(attrs), content, Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but see if it is\n    necessary to add nodes to the start or end of the given fragment\n    to make it fit the node. If no fitting wrapping can be found,\n    return null. Note that, due to the fact that required nodes can\n    always be created, this will always succeed if you pass null or\n    `Fragment.empty` as content.\n    */\n    createAndFill(attrs = null, content, marks) {\n        attrs = this.computeAttrs(attrs);\n        content = Fragment.from(content);\n        if (content.size) {\n            let before = this.contentMatch.fillBefore(content);\n            if (!before)\n                return null;\n            content = before.append(content);\n        }\n        let matched = this.contentMatch.matchFragment(content);\n        let after = matched && matched.fillBefore(Fragment.empty, true);\n        if (!after)\n            return null;\n        return new Node(this, attrs, content.append(after), Mark.setFrom(marks));\n    }\n    /**\n    Returns true if the given fragment is valid content for this node\n    type.\n    */\n    validContent(content) {\n        let result = this.contentMatch.matchFragment(content);\n        if (!result || !result.validEnd)\n            return false;\n        for (let i = 0; i < content.childCount; i++)\n            if (!this.allowsMarks(content.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Throws a RangeError if the given fragment is not valid content for this\n    node type.\n    @internal\n    */\n    checkContent(content) {\n        if (!this.validContent(content))\n            throw new RangeError(`Invalid content for node ${this.name}: ${content.toString().slice(0, 50)}`);\n    }\n    /**\n    @internal\n    */\n    checkAttrs(attrs) {\n        checkAttrs(this.attrs, attrs, \"node\", this.name);\n    }\n    /**\n    Check whether the given mark type is allowed in this node.\n    */\n    allowsMarkType(markType) {\n        return this.markSet == null || this.markSet.indexOf(markType) > -1;\n    }\n    /**\n    Test whether the given set of marks are allowed in this node.\n    */\n    allowsMarks(marks) {\n        if (this.markSet == null)\n            return true;\n        for (let i = 0; i < marks.length; i++)\n            if (!this.allowsMarkType(marks[i].type))\n                return false;\n        return true;\n    }\n    /**\n    Removes the marks that are not allowed in this node from the given set.\n    */\n    allowedMarks(marks) {\n        if (this.markSet == null)\n            return marks;\n        let copy;\n        for (let i = 0; i < marks.length; i++) {\n            if (!this.allowsMarkType(marks[i].type)) {\n                if (!copy)\n                    copy = marks.slice(0, i);\n            }\n            else if (copy) {\n                copy.push(marks[i]);\n            }\n        }\n        return !copy ? marks : copy.length ? copy : Mark.none;\n    }\n    /**\n    @internal\n    */\n    static compile(nodes, schema) {\n        let result = Object.create(null);\n        nodes.forEach((name, spec) => result[name] = new NodeType(name, schema, spec));\n        let topType = schema.spec.topNode || \"doc\";\n        if (!result[topType])\n            throw new RangeError(\"Schema is missing its top node type ('\" + topType + \"')\");\n        if (!result.text)\n            throw new RangeError(\"Every schema needs a 'text' type\");\n        for (let _ in result.text.attrs)\n            throw new RangeError(\"The text node type should not have attributes\");\n        return result;\n    }\n}\nfunction validateType(typeName, attrName, type) {\n    let types = type.split(\"|\");\n    return (value) => {\n        let name = value === null ? \"null\" : typeof value;\n        if (types.indexOf(name) < 0)\n            throw new RangeError(`Expected value of type ${types} for attribute ${attrName} on type ${typeName}, got ${name}`);\n    };\n}\n// Attribute descriptors\nclass Attribute {\n    constructor(typeName, attrName, options) {\n        this.hasDefault = Object.prototype.hasOwnProperty.call(options, \"default\");\n        this.default = options.default;\n        this.validate = typeof options.validate == \"string\" ? validateType(typeName, attrName, options.validate) : options.validate;\n    }\n    get isRequired() {\n        return !this.hasDefault;\n    }\n}\n// Marks\n/**\nLike nodes, marks (which are associated with nodes to signify\nthings like emphasis or being part of a link) are\n[tagged](https://prosemirror.net/docs/ref/#model.Mark.type) with type objects, which are\ninstantiated once per `Schema`.\n*/\nclass MarkType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name of the mark type.\n    */\n    name, \n    /**\n    @internal\n    */\n    rank, \n    /**\n    The schema that this mark type instance is part of.\n    */\n    schema, \n    /**\n    The spec on which the type is based.\n    */\n    spec) {\n        this.name = name;\n        this.rank = rank;\n        this.schema = schema;\n        this.spec = spec;\n        this.attrs = initAttrs(name, spec.attrs);\n        this.excluded = null;\n        let defaults = defaultAttrs(this.attrs);\n        this.instance = defaults ? new Mark(this, defaults) : null;\n    }\n    /**\n    Create a mark of this type. `attrs` may be `null` or an object\n    containing only some of the mark's attributes. The others, if\n    they have defaults, will be added.\n    */\n    create(attrs = null) {\n        if (!attrs && this.instance)\n            return this.instance;\n        return new Mark(this, computeAttrs(this.attrs, attrs));\n    }\n    /**\n    @internal\n    */\n    static compile(marks, schema) {\n        let result = Object.create(null), rank = 0;\n        marks.forEach((name, spec) => result[name] = new MarkType(name, rank++, schema, spec));\n        return result;\n    }\n    /**\n    When there is a mark of this type in the given set, a new set\n    without it is returned. Otherwise, the input set is returned.\n    */\n    removeFromSet(set) {\n        for (var i = 0; i < set.length; i++)\n            if (set[i].type == this) {\n                set = set.slice(0, i).concat(set.slice(i + 1));\n                i--;\n            }\n        return set;\n    }\n    /**\n    Tests whether there is a mark of this type in the given set.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (set[i].type == this)\n                return set[i];\n    }\n    /**\n    @internal\n    */\n    checkAttrs(attrs) {\n        checkAttrs(this.attrs, attrs, \"mark\", this.name);\n    }\n    /**\n    Queries whether a given mark type is\n    [excluded](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) by this one.\n    */\n    excludes(other) {\n        return this.excluded.indexOf(other) > -1;\n    }\n}\n/**\nA document schema. Holds [node](https://prosemirror.net/docs/ref/#model.NodeType) and [mark\ntype](https://prosemirror.net/docs/ref/#model.MarkType) objects for the nodes and marks that may\noccur in conforming documents, and provides functionality for\ncreating and deserializing such documents.\n\nWhen given, the type parameters provide the names of the nodes and\nmarks in this schema.\n*/\nclass Schema {\n    /**\n    Construct a schema from a schema [specification](https://prosemirror.net/docs/ref/#model.SchemaSpec).\n    */\n    constructor(spec) {\n        /**\n        The [linebreak\n        replacement](https://prosemirror.net/docs/ref/#model.NodeSpec.linebreakReplacement) node defined\n        in this schema, if any.\n        */\n        this.linebreakReplacement = null;\n        /**\n        An object for storing whatever values modules may want to\n        compute and cache per schema. (If you want to store something\n        in it, try to use property names unlikely to clash.)\n        */\n        this.cached = Object.create(null);\n        let instanceSpec = this.spec = {};\n        for (let prop in spec)\n            instanceSpec[prop] = spec[prop];\n        instanceSpec.nodes = OrderedMap.from(spec.nodes),\n            instanceSpec.marks = OrderedMap.from(spec.marks || {}),\n            this.nodes = NodeType.compile(this.spec.nodes, this);\n        this.marks = MarkType.compile(this.spec.marks, this);\n        let contentExprCache = Object.create(null);\n        for (let prop in this.nodes) {\n            if (prop in this.marks)\n                throw new RangeError(prop + \" can not be both a node and a mark\");\n            let type = this.nodes[prop], contentExpr = type.spec.content || \"\", markExpr = type.spec.marks;\n            type.contentMatch = contentExprCache[contentExpr] ||\n                (contentExprCache[contentExpr] = ContentMatch.parse(contentExpr, this.nodes));\n            type.inlineContent = type.contentMatch.inlineContent;\n            if (type.spec.linebreakReplacement) {\n                if (this.linebreakReplacement)\n                    throw new RangeError(\"Multiple linebreak nodes defined\");\n                if (!type.isInline || !type.isLeaf)\n                    throw new RangeError(\"Linebreak replacement nodes must be inline leaf nodes\");\n                this.linebreakReplacement = type;\n            }\n            type.markSet = markExpr == \"_\" ? null :\n                markExpr ? gatherMarks(this, markExpr.split(\" \")) :\n                    markExpr == \"\" || !type.inlineContent ? [] : null;\n        }\n        for (let prop in this.marks) {\n            let type = this.marks[prop], excl = type.spec.excludes;\n            type.excluded = excl == null ? [type] : excl == \"\" ? [] : gatherMarks(this, excl.split(\" \"));\n        }\n        this.nodeFromJSON = json => Node.fromJSON(this, json);\n        this.markFromJSON = json => Mark.fromJSON(this, json);\n        this.topNodeType = this.nodes[this.spec.topNode || \"doc\"];\n        this.cached.wrappings = Object.create(null);\n    }\n    /**\n    Create a node in this schema. The `type` may be a string or a\n    `NodeType` instance. Attributes will be extended with defaults,\n    `content` may be a `Fragment`, `null`, a `Node`, or an array of\n    nodes.\n    */\n    node(type, attrs = null, content, marks) {\n        if (typeof type == \"string\")\n            type = this.nodeType(type);\n        else if (!(type instanceof NodeType))\n            throw new RangeError(\"Invalid node type: \" + type);\n        else if (type.schema != this)\n            throw new RangeError(\"Node type from different schema used (\" + type.name + \")\");\n        return type.createChecked(attrs, content, marks);\n    }\n    /**\n    Create a text node in the schema. Empty text nodes are not\n    allowed.\n    */\n    text(text, marks) {\n        let type = this.nodes.text;\n        return new TextNode(type, type.defaultAttrs, text, Mark.setFrom(marks));\n    }\n    /**\n    Create a mark with the given type and attributes.\n    */\n    mark(type, attrs) {\n        if (typeof type == \"string\")\n            type = this.marks[type];\n        return type.create(attrs);\n    }\n    /**\n    @internal\n    */\n    nodeType(name) {\n        let found = this.nodes[name];\n        if (!found)\n            throw new RangeError(\"Unknown node type: \" + name);\n        return found;\n    }\n}\nfunction gatherMarks(schema, marks) {\n    let found = [];\n    for (let i = 0; i < marks.length; i++) {\n        let name = marks[i], mark = schema.marks[name], ok = mark;\n        if (mark) {\n            found.push(mark);\n        }\n        else {\n            for (let prop in schema.marks) {\n                let mark = schema.marks[prop];\n                if (name == \"_\" || (mark.spec.group && mark.spec.group.split(\" \").indexOf(name) > -1))\n                    found.push(ok = mark);\n            }\n        }\n        if (!ok)\n            throw new SyntaxError(\"Unknown mark type: '\" + marks[i] + \"'\");\n    }\n    return found;\n}\n\nfunction isTagRule(rule) { return rule.tag != null; }\nfunction isStyleRule(rule) { return rule.style != null; }\n/**\nA DOM parser represents a strategy for parsing DOM content into a\nProseMirror document conforming to a given schema. Its behavior is\ndefined by an array of [rules](https://prosemirror.net/docs/ref/#model.ParseRule).\n*/\nclass DOMParser {\n    /**\n    Create a parser that targets the given schema, using the given\n    parsing rules.\n    */\n    constructor(\n    /**\n    The schema into which the parser parses.\n    */\n    schema, \n    /**\n    The set of [parse rules](https://prosemirror.net/docs/ref/#model.ParseRule) that the parser\n    uses, in order of precedence.\n    */\n    rules) {\n        this.schema = schema;\n        this.rules = rules;\n        /**\n        @internal\n        */\n        this.tags = [];\n        /**\n        @internal\n        */\n        this.styles = [];\n        let matchedStyles = this.matchedStyles = [];\n        rules.forEach(rule => {\n            if (isTagRule(rule)) {\n                this.tags.push(rule);\n            }\n            else if (isStyleRule(rule)) {\n                let prop = /[^=]*/.exec(rule.style)[0];\n                if (matchedStyles.indexOf(prop) < 0)\n                    matchedStyles.push(prop);\n                this.styles.push(rule);\n            }\n        });\n        // Only normalize list elements when lists in the schema can't directly contain themselves\n        this.normalizeLists = !this.tags.some(r => {\n            if (!/^(ul|ol)\\b/.test(r.tag) || !r.node)\n                return false;\n            let node = schema.nodes[r.node];\n            return node.contentMatch.matchType(node);\n        });\n    }\n    /**\n    Parse a document from the content of a DOM node.\n    */\n    parse(dom, options = {}) {\n        let context = new ParseContext(this, options, false);\n        context.addAll(dom, Mark.none, options.from, options.to);\n        return context.finish();\n    }\n    /**\n    Parses the content of the given DOM node, like\n    [`parse`](https://prosemirror.net/docs/ref/#model.DOMParser.parse), and takes the same set of\n    options. But unlike that method, which produces a whole node,\n    this one returns a slice that is open at the sides, meaning that\n    the schema constraints aren't applied to the start of nodes to\n    the left of the input and the end of nodes at the end.\n    */\n    parseSlice(dom, options = {}) {\n        let context = new ParseContext(this, options, true);\n        context.addAll(dom, Mark.none, options.from, options.to);\n        return Slice.maxOpen(context.finish());\n    }\n    /**\n    @internal\n    */\n    matchTag(dom, context, after) {\n        for (let i = after ? this.tags.indexOf(after) + 1 : 0; i < this.tags.length; i++) {\n            let rule = this.tags[i];\n            if (matches(dom, rule.tag) &&\n                (rule.namespace === undefined || dom.namespaceURI == rule.namespace) &&\n                (!rule.context || context.matchesContext(rule.context))) {\n                if (rule.getAttrs) {\n                    let result = rule.getAttrs(dom);\n                    if (result === false)\n                        continue;\n                    rule.attrs = result || undefined;\n                }\n                return rule;\n            }\n        }\n    }\n    /**\n    @internal\n    */\n    matchStyle(prop, value, context, after) {\n        for (let i = after ? this.styles.indexOf(after) + 1 : 0; i < this.styles.length; i++) {\n            let rule = this.styles[i], style = rule.style;\n            if (style.indexOf(prop) != 0 ||\n                rule.context && !context.matchesContext(rule.context) ||\n                // Test that the style string either precisely matches the prop,\n                // or has an '=' sign after the prop, followed by the given\n                // value.\n                style.length > prop.length &&\n                    (style.charCodeAt(prop.length) != 61 || style.slice(prop.length + 1) != value))\n                continue;\n            if (rule.getAttrs) {\n                let result = rule.getAttrs(value);\n                if (result === false)\n                    continue;\n                rule.attrs = result || undefined;\n            }\n            return rule;\n        }\n    }\n    /**\n    @internal\n    */\n    static schemaRules(schema) {\n        let result = [];\n        function insert(rule) {\n            let priority = rule.priority == null ? 50 : rule.priority, i = 0;\n            for (; i < result.length; i++) {\n                let next = result[i], nextPriority = next.priority == null ? 50 : next.priority;\n                if (nextPriority < priority)\n                    break;\n            }\n            result.splice(i, 0, rule);\n        }\n        for (let name in schema.marks) {\n            let rules = schema.marks[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    if (!(rule.mark || rule.ignore || rule.clearMark))\n                        rule.mark = name;\n                });\n        }\n        for (let name in schema.nodes) {\n            let rules = schema.nodes[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    if (!(rule.node || rule.ignore || rule.mark))\n                        rule.node = name;\n                });\n        }\n        return result;\n    }\n    /**\n    Construct a DOM parser using the parsing rules listed in a\n    schema's [node specs](https://prosemirror.net/docs/ref/#model.NodeSpec.parseDOM), reordered by\n    [priority](https://prosemirror.net/docs/ref/#model.GenericParseRule.priority).\n    */\n    static fromSchema(schema) {\n        return schema.cached.domParser ||\n            (schema.cached.domParser = new DOMParser(schema, DOMParser.schemaRules(schema)));\n    }\n}\nconst blockTags = {\n    address: true, article: true, aside: true, blockquote: true, canvas: true,\n    dd: true, div: true, dl: true, fieldset: true, figcaption: true, figure: true,\n    footer: true, form: true, h1: true, h2: true, h3: true, h4: true, h5: true,\n    h6: true, header: true, hgroup: true, hr: true, li: true, noscript: true, ol: true,\n    output: true, p: true, pre: true, section: true, table: true, tfoot: true, ul: true\n};\nconst ignoreTags = {\n    head: true, noscript: true, object: true, script: true, style: true, title: true\n};\nconst listTags = { ol: true, ul: true };\n// Using a bitfield for node context options\nconst OPT_PRESERVE_WS = 1, OPT_PRESERVE_WS_FULL = 2, OPT_OPEN_LEFT = 4;\nfunction wsOptionsFor(type, preserveWhitespace, base) {\n    if (preserveWhitespace != null)\n        return (preserveWhitespace ? OPT_PRESERVE_WS : 0) |\n            (preserveWhitespace === \"full\" ? OPT_PRESERVE_WS_FULL : 0);\n    return type && type.whitespace == \"pre\" ? OPT_PRESERVE_WS | OPT_PRESERVE_WS_FULL : base & ~OPT_OPEN_LEFT;\n}\nclass NodeContext {\n    constructor(type, attrs, marks, solid, match, options) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.solid = solid;\n        this.options = options;\n        this.content = [];\n        // Marks applied to the node's children\n        this.activeMarks = Mark.none;\n        this.match = match || (options & OPT_OPEN_LEFT ? null : type.contentMatch);\n    }\n    findWrapping(node) {\n        if (!this.match) {\n            if (!this.type)\n                return [];\n            let fill = this.type.contentMatch.fillBefore(Fragment.from(node));\n            if (fill) {\n                this.match = this.type.contentMatch.matchFragment(fill);\n            }\n            else {\n                let start = this.type.contentMatch, wrap;\n                if (wrap = start.findWrapping(node.type)) {\n                    this.match = start;\n                    return wrap;\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n        return this.match.findWrapping(node.type);\n    }\n    finish(openEnd) {\n        if (!(this.options & OPT_PRESERVE_WS)) { // Strip trailing whitespace\n            let last = this.content[this.content.length - 1], m;\n            if (last && last.isText && (m = /[ \\t\\r\\n\\u000c]+$/.exec(last.text))) {\n                let text = last;\n                if (last.text.length == m[0].length)\n                    this.content.pop();\n                else\n                    this.content[this.content.length - 1] = text.withText(text.text.slice(0, text.text.length - m[0].length));\n            }\n        }\n        let content = Fragment.from(this.content);\n        if (!openEnd && this.match)\n            content = content.append(this.match.fillBefore(Fragment.empty, true));\n        return this.type ? this.type.create(this.attrs, content, this.marks) : content;\n    }\n    inlineContext(node) {\n        if (this.type)\n            return this.type.inlineContent;\n        if (this.content.length)\n            return this.content[0].isInline;\n        return node.parentNode && !blockTags.hasOwnProperty(node.parentNode.nodeName.toLowerCase());\n    }\n}\nclass ParseContext {\n    constructor(\n    // The parser we are using.\n    parser, \n    // The options passed to this parse.\n    options, isOpen) {\n        this.parser = parser;\n        this.options = options;\n        this.isOpen = isOpen;\n        this.open = 0;\n        this.localPreserveWS = false;\n        let topNode = options.topNode, topContext;\n        let topOptions = wsOptionsFor(null, options.preserveWhitespace, 0) | (isOpen ? OPT_OPEN_LEFT : 0);\n        if (topNode)\n            topContext = new NodeContext(topNode.type, topNode.attrs, Mark.none, true, options.topMatch || topNode.type.contentMatch, topOptions);\n        else if (isOpen)\n            topContext = new NodeContext(null, null, Mark.none, true, null, topOptions);\n        else\n            topContext = new NodeContext(parser.schema.topNodeType, null, Mark.none, true, null, topOptions);\n        this.nodes = [topContext];\n        this.find = options.findPositions;\n        this.needsBlock = false;\n    }\n    get top() {\n        return this.nodes[this.open];\n    }\n    // Add a DOM node to the content. Text is inserted as text node,\n    // otherwise, the node is passed to `addElement` or, if it has a\n    // `style` attribute, `addElementWithStyles`.\n    addDOM(dom, marks) {\n        if (dom.nodeType == 3)\n            this.addTextNode(dom, marks);\n        else if (dom.nodeType == 1)\n            this.addElement(dom, marks);\n    }\n    addTextNode(dom, marks) {\n        let value = dom.nodeValue;\n        let top = this.top, preserveWS = (top.options & OPT_PRESERVE_WS_FULL) ? \"full\"\n            : this.localPreserveWS || (top.options & OPT_PRESERVE_WS) > 0;\n        let { schema } = this.parser;\n        if (preserveWS === \"full\" ||\n            top.inlineContext(dom) ||\n            /[^ \\t\\r\\n\\u000c]/.test(value)) {\n            if (!preserveWS) {\n                value = value.replace(/[ \\t\\r\\n\\u000c]+/g, \" \");\n                // If this starts with whitespace, and there is no node before it, or\n                // a hard break, or a text node that ends with whitespace, strip the\n                // leading space.\n                if (/^[ \\t\\r\\n\\u000c]/.test(value) && this.open == this.nodes.length - 1) {\n                    let nodeBefore = top.content[top.content.length - 1];\n                    let domNodeBefore = dom.previousSibling;\n                    if (!nodeBefore ||\n                        (domNodeBefore && domNodeBefore.nodeName == 'BR') ||\n                        (nodeBefore.isText && /[ \\t\\r\\n\\u000c]$/.test(nodeBefore.text)))\n                        value = value.slice(1);\n                }\n            }\n            else if (preserveWS === \"full\") {\n                value = value.replace(/\\r\\n?/g, \"\\n\");\n            }\n            else if (schema.linebreakReplacement && /[\\r\\n]/.test(value) && this.top.findWrapping(schema.linebreakReplacement.create())) {\n                let lines = value.split(/\\r?\\n|\\r/);\n                for (let i = 0; i < lines.length; i++) {\n                    if (i)\n                        this.insertNode(schema.linebreakReplacement.create(), marks, true);\n                    if (lines[i])\n                        this.insertNode(schema.text(lines[i]), marks, !/\\S/.test(lines[i]));\n                }\n                value = \"\";\n            }\n            else {\n                value = value.replace(/\\r?\\n|\\r/g, \" \");\n            }\n            if (value)\n                this.insertNode(schema.text(value), marks, !/\\S/.test(value));\n            this.findInText(dom);\n        }\n        else {\n            this.findInside(dom);\n        }\n    }\n    // Try to find a handler for the given tag and use that to parse. If\n    // none is found, the element's content nodes are added directly.\n    addElement(dom, marks, matchAfter) {\n        let outerWS = this.localPreserveWS, top = this.top;\n        if (dom.tagName == \"PRE\" || /pre/.test(dom.style && dom.style.whiteSpace))\n            this.localPreserveWS = true;\n        let name = dom.nodeName.toLowerCase(), ruleID;\n        if (listTags.hasOwnProperty(name) && this.parser.normalizeLists)\n            normalizeList(dom);\n        let rule = (this.options.ruleFromNode && this.options.ruleFromNode(dom)) ||\n            (ruleID = this.parser.matchTag(dom, this, matchAfter));\n        out: if (rule ? rule.ignore : ignoreTags.hasOwnProperty(name)) {\n            this.findInside(dom);\n            this.ignoreFallback(dom, marks);\n        }\n        else if (!rule || rule.skip || rule.closeParent) {\n            if (rule && rule.closeParent)\n                this.open = Math.max(0, this.open - 1);\n            else if (rule && rule.skip.nodeType)\n                dom = rule.skip;\n            let sync, oldNeedsBlock = this.needsBlock;\n            if (blockTags.hasOwnProperty(name)) {\n                if (top.content.length && top.content[0].isInline && this.open) {\n                    this.open--;\n                    top = this.top;\n                }\n                sync = true;\n                if (!top.type)\n                    this.needsBlock = true;\n            }\n            else if (!dom.firstChild) {\n                this.leafFallback(dom, marks);\n                break out;\n            }\n            let innerMarks = rule && rule.skip ? marks : this.readStyles(dom, marks);\n            if (innerMarks)\n                this.addAll(dom, innerMarks);\n            if (sync)\n                this.sync(top);\n            this.needsBlock = oldNeedsBlock;\n        }\n        else {\n            let innerMarks = this.readStyles(dom, marks);\n            if (innerMarks)\n                this.addElementByRule(dom, rule, innerMarks, rule.consuming === false ? ruleID : undefined);\n        }\n        this.localPreserveWS = outerWS;\n    }\n    // Called for leaf DOM nodes that would otherwise be ignored\n    leafFallback(dom, marks) {\n        if (dom.nodeName == \"BR\" && this.top.type && this.top.type.inlineContent)\n            this.addTextNode(dom.ownerDocument.createTextNode(\"\\n\"), marks);\n    }\n    // Called for ignored nodes\n    ignoreFallback(dom, marks) {\n        // Ignored BR nodes should at least create an inline context\n        if (dom.nodeName == \"BR\" && (!this.top.type || !this.top.type.inlineContent))\n            this.findPlace(this.parser.schema.text(\"-\"), marks, true);\n    }\n    // Run any style parser associated with the node's styles. Either\n    // return an updated array of marks, or null to indicate some of the\n    // styles had a rule with `ignore` set.\n    readStyles(dom, marks) {\n        let styles = dom.style;\n        // Because many properties will only show up in 'normalized' form\n        // in `style.item` (i.e. text-decoration becomes\n        // text-decoration-line, text-decoration-color, etc), we directly\n        // query the styles mentioned in our rules instead of iterating\n        // over the items.\n        if (styles && styles.length)\n            for (let i = 0; i < this.parser.matchedStyles.length; i++) {\n                let name = this.parser.matchedStyles[i], value = styles.getPropertyValue(name);\n                if (value)\n                    for (let after = undefined;;) {\n                        let rule = this.parser.matchStyle(name, value, this, after);\n                        if (!rule)\n                            break;\n                        if (rule.ignore)\n                            return null;\n                        if (rule.clearMark)\n                            marks = marks.filter(m => !rule.clearMark(m));\n                        else\n                            marks = marks.concat(this.parser.schema.marks[rule.mark].create(rule.attrs));\n                        if (rule.consuming === false)\n                            after = rule;\n                        else\n                            break;\n                    }\n            }\n        return marks;\n    }\n    // Look up a handler for the given node. If none are found, return\n    // false. Otherwise, apply it, use its return value to drive the way\n    // the node's content is wrapped, and return true.\n    addElementByRule(dom, rule, marks, continueAfter) {\n        let sync, nodeType;\n        if (rule.node) {\n            nodeType = this.parser.schema.nodes[rule.node];\n            if (!nodeType.isLeaf) {\n                let inner = this.enter(nodeType, rule.attrs || null, marks, rule.preserveWhitespace);\n                if (inner) {\n                    sync = true;\n                    marks = inner;\n                }\n            }\n            else if (!this.insertNode(nodeType.create(rule.attrs), marks, dom.nodeName == \"BR\")) {\n                this.leafFallback(dom, marks);\n            }\n        }\n        else {\n            let markType = this.parser.schema.marks[rule.mark];\n            marks = marks.concat(markType.create(rule.attrs));\n        }\n        let startIn = this.top;\n        if (nodeType && nodeType.isLeaf) {\n            this.findInside(dom);\n        }\n        else if (continueAfter) {\n            this.addElement(dom, marks, continueAfter);\n        }\n        else if (rule.getContent) {\n            this.findInside(dom);\n            rule.getContent(dom, this.parser.schema).forEach(node => this.insertNode(node, marks, false));\n        }\n        else {\n            let contentDOM = dom;\n            if (typeof rule.contentElement == \"string\")\n                contentDOM = dom.querySelector(rule.contentElement);\n            else if (typeof rule.contentElement == \"function\")\n                contentDOM = rule.contentElement(dom);\n            else if (rule.contentElement)\n                contentDOM = rule.contentElement;\n            this.findAround(dom, contentDOM, true);\n            this.addAll(contentDOM, marks);\n            this.findAround(dom, contentDOM, false);\n        }\n        if (sync && this.sync(startIn))\n            this.open--;\n    }\n    // Add all child nodes between `startIndex` and `endIndex` (or the\n    // whole node, if not given). If `sync` is passed, use it to\n    // synchronize after every block element.\n    addAll(parent, marks, startIndex, endIndex) {\n        let index = startIndex || 0;\n        for (let dom = startIndex ? parent.childNodes[startIndex] : parent.firstChild, end = endIndex == null ? null : parent.childNodes[endIndex]; dom != end; dom = dom.nextSibling, ++index) {\n            this.findAtPoint(parent, index);\n            this.addDOM(dom, marks);\n        }\n        this.findAtPoint(parent, index);\n    }\n    // Try to find a way to fit the given node type into the current\n    // context. May add intermediate wrappers and/or leave non-solid\n    // nodes that we're in.\n    findPlace(node, marks, cautious) {\n        let route, sync;\n        for (let depth = this.open, penalty = 0; depth >= 0; depth--) {\n            let cx = this.nodes[depth];\n            let found = cx.findWrapping(node);\n            if (found && (!route || route.length > found.length + penalty)) {\n                route = found;\n                sync = cx;\n                if (!found.length)\n                    break;\n            }\n            if (cx.solid) {\n                if (cautious)\n                    break;\n                penalty += 2;\n            }\n        }\n        if (!route)\n            return null;\n        this.sync(sync);\n        for (let i = 0; i < route.length; i++)\n            marks = this.enterInner(route[i], null, marks, false);\n        return marks;\n    }\n    // Try to insert the given node, adjusting the context when needed.\n    insertNode(node, marks, cautious) {\n        if (node.isInline && this.needsBlock && !this.top.type) {\n            let block = this.textblockFromContext();\n            if (block)\n                marks = this.enterInner(block, null, marks);\n        }\n        let innerMarks = this.findPlace(node, marks, cautious);\n        if (innerMarks) {\n            this.closeExtra();\n            let top = this.top;\n            if (top.match)\n                top.match = top.match.matchType(node.type);\n            let nodeMarks = Mark.none;\n            for (let m of innerMarks.concat(node.marks))\n                if (top.type ? top.type.allowsMarkType(m.type) : markMayApply(m.type, node.type))\n                    nodeMarks = m.addToSet(nodeMarks);\n            top.content.push(node.mark(nodeMarks));\n            return true;\n        }\n        return false;\n    }\n    // Try to start a node of the given type, adjusting the context when\n    // necessary.\n    enter(type, attrs, marks, preserveWS) {\n        let innerMarks = this.findPlace(type.create(attrs), marks, false);\n        if (innerMarks)\n            innerMarks = this.enterInner(type, attrs, marks, true, preserveWS);\n        return innerMarks;\n    }\n    // Open a node of the given type\n    enterInner(type, attrs, marks, solid = false, preserveWS) {\n        this.closeExtra();\n        let top = this.top;\n        top.match = top.match && top.match.matchType(type);\n        let options = wsOptionsFor(type, preserveWS, top.options);\n        if ((top.options & OPT_OPEN_LEFT) && top.content.length == 0)\n            options |= OPT_OPEN_LEFT;\n        let applyMarks = Mark.none;\n        marks = marks.filter(m => {\n            if (top.type ? top.type.allowsMarkType(m.type) : markMayApply(m.type, type)) {\n                applyMarks = m.addToSet(applyMarks);\n                return false;\n            }\n            return true;\n        });\n        this.nodes.push(new NodeContext(type, attrs, applyMarks, solid, null, options));\n        this.open++;\n        return marks;\n    }\n    // Make sure all nodes above this.open are finished and added to\n    // their parents\n    closeExtra(openEnd = false) {\n        let i = this.nodes.length - 1;\n        if (i > this.open) {\n            for (; i > this.open; i--)\n                this.nodes[i - 1].content.push(this.nodes[i].finish(openEnd));\n            this.nodes.length = this.open + 1;\n        }\n    }\n    finish() {\n        this.open = 0;\n        this.closeExtra(this.isOpen);\n        return this.nodes[0].finish(!!(this.isOpen || this.options.topOpen));\n    }\n    sync(to) {\n        for (let i = this.open; i >= 0; i--) {\n            if (this.nodes[i] == to) {\n                this.open = i;\n                return true;\n            }\n            else if (this.localPreserveWS) {\n                this.nodes[i].options |= OPT_PRESERVE_WS;\n            }\n        }\n        return false;\n    }\n    get currentPos() {\n        this.closeExtra();\n        let pos = 0;\n        for (let i = this.open; i >= 0; i--) {\n            let content = this.nodes[i].content;\n            for (let j = content.length - 1; j >= 0; j--)\n                pos += content[j].nodeSize;\n            if (i)\n                pos++;\n        }\n        return pos;\n    }\n    findAtPoint(parent, offset) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == parent && this.find[i].offset == offset)\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findInside(parent) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node))\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findAround(parent, content, before) {\n        if (parent != content && this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node)) {\n                    let pos = content.compareDocumentPosition(this.find[i].node);\n                    if (pos & (before ? 2 : 4))\n                        this.find[i].pos = this.currentPos;\n                }\n            }\n    }\n    findInText(textNode) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == textNode)\n                    this.find[i].pos = this.currentPos - (textNode.nodeValue.length - this.find[i].offset);\n            }\n    }\n    // Determines whether the given context string matches this context.\n    matchesContext(context) {\n        if (context.indexOf(\"|\") > -1)\n            return context.split(/\\s*\\|\\s*/).some(this.matchesContext, this);\n        let parts = context.split(\"/\");\n        let option = this.options.context;\n        let useRoot = !this.isOpen && (!option || option.parent.type == this.nodes[0].type);\n        let minDepth = -(option ? option.depth + 1 : 0) + (useRoot ? 0 : 1);\n        let match = (i, depth) => {\n            for (; i >= 0; i--) {\n                let part = parts[i];\n                if (part == \"\") {\n                    if (i == parts.length - 1 || i == 0)\n                        continue;\n                    for (; depth >= minDepth; depth--)\n                        if (match(i - 1, depth))\n                            return true;\n                    return false;\n                }\n                else {\n                    let next = depth > 0 || (depth == 0 && useRoot) ? this.nodes[depth].type\n                        : option && depth >= minDepth ? option.node(depth - minDepth).type\n                            : null;\n                    if (!next || (next.name != part && !next.isInGroup(part)))\n                        return false;\n                    depth--;\n                }\n            }\n            return true;\n        };\n        return match(parts.length - 1, this.open);\n    }\n    textblockFromContext() {\n        let $context = this.options.context;\n        if ($context)\n            for (let d = $context.depth; d >= 0; d--) {\n                let deflt = $context.node(d).contentMatchAt($context.indexAfter(d)).defaultType;\n                if (deflt && deflt.isTextblock && deflt.defaultAttrs)\n                    return deflt;\n            }\n        for (let name in this.parser.schema.nodes) {\n            let type = this.parser.schema.nodes[name];\n            if (type.isTextblock && type.defaultAttrs)\n                return type;\n        }\n    }\n}\n// Kludge to work around directly nested list nodes produced by some\n// tools and allowed by browsers to mean that the nested list is\n// actually part of the list item above it.\nfunction normalizeList(dom) {\n    for (let child = dom.firstChild, prevItem = null; child; child = child.nextSibling) {\n        let name = child.nodeType == 1 ? child.nodeName.toLowerCase() : null;\n        if (name && listTags.hasOwnProperty(name) && prevItem) {\n            prevItem.appendChild(child);\n            child = prevItem;\n        }\n        else if (name == \"li\") {\n            prevItem = child;\n        }\n        else if (name) {\n            prevItem = null;\n        }\n    }\n}\n// Apply a CSS selector.\nfunction matches(dom, selector) {\n    return (dom.matches || dom.msMatchesSelector || dom.webkitMatchesSelector || dom.mozMatchesSelector).call(dom, selector);\n}\nfunction copy(obj) {\n    let copy = {};\n    for (let prop in obj)\n        copy[prop] = obj[prop];\n    return copy;\n}\n// Used when finding a mark at the top level of a fragment parse.\n// Checks whether it would be reasonable to apply a given mark type to\n// a given node, by looking at the way the mark occurs in the schema.\nfunction markMayApply(markType, nodeType) {\n    let nodes = nodeType.schema.nodes;\n    for (let name in nodes) {\n        let parent = nodes[name];\n        if (!parent.allowsMarkType(markType))\n            continue;\n        let seen = [], scan = (match) => {\n            seen.push(match);\n            for (let i = 0; i < match.edgeCount; i++) {\n                let { type, next } = match.edge(i);\n                if (type == nodeType)\n                    return true;\n                if (seen.indexOf(next) < 0 && scan(next))\n                    return true;\n            }\n        };\n        if (scan(parent.contentMatch))\n            return true;\n    }\n}\n\n/**\nA DOM serializer knows how to convert ProseMirror nodes and\nmarks of various types to DOM nodes.\n*/\nclass DOMSerializer {\n    /**\n    Create a serializer. `nodes` should map node names to functions\n    that take a node and return a description of the corresponding\n    DOM. `marks` does the same for mark names, but also gets an\n    argument that tells it whether the mark's content is block or\n    inline content (for typical use, it'll always be inline). A mark\n    serializer may be `null` to indicate that marks of that type\n    should not be serialized.\n    */\n    constructor(\n    /**\n    The node serialization functions.\n    */\n    nodes, \n    /**\n    The mark serialization functions.\n    */\n    marks) {\n        this.nodes = nodes;\n        this.marks = marks;\n    }\n    /**\n    Serialize the content of this fragment to a DOM fragment. When\n    not in the browser, the `document` option, containing a DOM\n    document, should be passed so that the serializer can create\n    nodes.\n    */\n    serializeFragment(fragment, options = {}, target) {\n        if (!target)\n            target = doc(options).createDocumentFragment();\n        let top = target, active = [];\n        fragment.forEach(node => {\n            if (active.length || node.marks.length) {\n                let keep = 0, rendered = 0;\n                while (keep < active.length && rendered < node.marks.length) {\n                    let next = node.marks[rendered];\n                    if (!this.marks[next.type.name]) {\n                        rendered++;\n                        continue;\n                    }\n                    if (!next.eq(active[keep][0]) || next.type.spec.spanning === false)\n                        break;\n                    keep++;\n                    rendered++;\n                }\n                while (keep < active.length)\n                    top = active.pop()[1];\n                while (rendered < node.marks.length) {\n                    let add = node.marks[rendered++];\n                    let markDOM = this.serializeMark(add, node.isInline, options);\n                    if (markDOM) {\n                        active.push([add, top]);\n                        top.appendChild(markDOM.dom);\n                        top = markDOM.contentDOM || markDOM.dom;\n                    }\n                }\n            }\n            top.appendChild(this.serializeNodeInner(node, options));\n        });\n        return target;\n    }\n    /**\n    @internal\n    */\n    serializeNodeInner(node, options) {\n        let { dom, contentDOM } = renderSpec(doc(options), this.nodes[node.type.name](node), null, node.attrs);\n        if (contentDOM) {\n            if (node.isLeaf)\n                throw new RangeError(\"Content hole not allowed in a leaf node spec\");\n            this.serializeFragment(node.content, options, contentDOM);\n        }\n        return dom;\n    }\n    /**\n    Serialize this node to a DOM node. This can be useful when you\n    need to serialize a part of a document, as opposed to the whole\n    document. To serialize a whole document, use\n    [`serializeFragment`](https://prosemirror.net/docs/ref/#model.DOMSerializer.serializeFragment) on\n    its [content](https://prosemirror.net/docs/ref/#model.Node.content).\n    */\n    serializeNode(node, options = {}) {\n        let dom = this.serializeNodeInner(node, options);\n        for (let i = node.marks.length - 1; i >= 0; i--) {\n            let wrap = this.serializeMark(node.marks[i], node.isInline, options);\n            if (wrap) {\n                (wrap.contentDOM || wrap.dom).appendChild(dom);\n                dom = wrap.dom;\n            }\n        }\n        return dom;\n    }\n    /**\n    @internal\n    */\n    serializeMark(mark, inline, options = {}) {\n        let toDOM = this.marks[mark.type.name];\n        return toDOM && renderSpec(doc(options), toDOM(mark, inline), null, mark.attrs);\n    }\n    static renderSpec(doc, structure, xmlNS = null, blockArraysIn) {\n        return renderSpec(doc, structure, xmlNS, blockArraysIn);\n    }\n    /**\n    Build a serializer using the [`toDOM`](https://prosemirror.net/docs/ref/#model.NodeSpec.toDOM)\n    properties in a schema's node and mark specs.\n    */\n    static fromSchema(schema) {\n        return schema.cached.domSerializer ||\n            (schema.cached.domSerializer = new DOMSerializer(this.nodesFromSchema(schema), this.marksFromSchema(schema)));\n    }\n    /**\n    Gather the serializers in a schema's node specs into an object.\n    This can be useful as a base to build a custom serializer from.\n    */\n    static nodesFromSchema(schema) {\n        let result = gatherToDOM(schema.nodes);\n        if (!result.text)\n            result.text = node => node.text;\n        return result;\n    }\n    /**\n    Gather the serializers in a schema's mark specs into an object.\n    */\n    static marksFromSchema(schema) {\n        return gatherToDOM(schema.marks);\n    }\n}\nfunction gatherToDOM(obj) {\n    let result = {};\n    for (let name in obj) {\n        let toDOM = obj[name].spec.toDOM;\n        if (toDOM)\n            result[name] = toDOM;\n    }\n    return result;\n}\nfunction doc(options) {\n    return options.document || window.document;\n}\nconst suspiciousAttributeCache = new WeakMap();\nfunction suspiciousAttributes(attrs) {\n    let value = suspiciousAttributeCache.get(attrs);\n    if (value === undefined)\n        suspiciousAttributeCache.set(attrs, value = suspiciousAttributesInner(attrs));\n    return value;\n}\nfunction suspiciousAttributesInner(attrs) {\n    let result = null;\n    function scan(value) {\n        if (value && typeof value == \"object\") {\n            if (Array.isArray(value)) {\n                if (typeof value[0] == \"string\") {\n                    if (!result)\n                        result = [];\n                    result.push(value);\n                }\n                else {\n                    for (let i = 0; i < value.length; i++)\n                        scan(value[i]);\n                }\n            }\n            else {\n                for (let prop in value)\n                    scan(value[prop]);\n            }\n        }\n    }\n    scan(attrs);\n    return result;\n}\nfunction renderSpec(doc, structure, xmlNS, blockArraysIn) {\n    if (typeof structure == \"string\")\n        return { dom: doc.createTextNode(structure) };\n    if (structure.nodeType != null)\n        return { dom: structure };\n    if (structure.dom && structure.dom.nodeType != null)\n        return structure;\n    let tagName = structure[0], suspicious;\n    if (typeof tagName != \"string\")\n        throw new RangeError(\"Invalid array passed to renderSpec\");\n    if (blockArraysIn && (suspicious = suspiciousAttributes(blockArraysIn)) &&\n        suspicious.indexOf(structure) > -1)\n        throw new RangeError(\"Using an array from an attribute object as a DOM spec. This may be an attempted cross site scripting attack.\");\n    let space = tagName.indexOf(\" \");\n    if (space > 0) {\n        xmlNS = tagName.slice(0, space);\n        tagName = tagName.slice(space + 1);\n    }\n    let contentDOM;\n    let dom = (xmlNS ? doc.createElementNS(xmlNS, tagName) : doc.createElement(tagName));\n    let attrs = structure[1], start = 1;\n    if (attrs && typeof attrs == \"object\" && attrs.nodeType == null && !Array.isArray(attrs)) {\n        start = 2;\n        for (let name in attrs)\n            if (attrs[name] != null) {\n                let space = name.indexOf(\" \");\n                if (space > 0)\n                    dom.setAttributeNS(name.slice(0, space), name.slice(space + 1), attrs[name]);\n                else if (name == \"style\" && dom.style)\n                    dom.style.cssText = attrs[name];\n                else\n                    dom.setAttribute(name, attrs[name]);\n            }\n    }\n    for (let i = start; i < structure.length; i++) {\n        let child = structure[i];\n        if (child === 0) {\n            if (i < structure.length - 1 || i > start)\n                throw new RangeError(\"Content hole must be the only child of its parent node\");\n            return { dom, contentDOM: dom };\n        }\n        else {\n            let { dom: inner, contentDOM: innerContent } = renderSpec(doc, child, xmlNS, blockArraysIn);\n            dom.appendChild(inner);\n            if (innerContent) {\n                if (contentDOM)\n                    throw new RangeError(\"Multiple content holes\");\n                contentDOM = innerContent;\n            }\n        }\n    }\n    return { dom, contentDOM };\n}\n\nexport { ContentMatch, DOMParser, DOMSerializer, Fragment, Mark, MarkType, Node, NodeRange, NodeType, ReplaceError, ResolvedPos, Schema, Slice };\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownOptions\n * @typedef {import('unified').Compiler<Root, string>} Compiler\n * @typedef {import('unified').Processor<undefined, undefined, undefined, Root, string>} Processor\n */\n\n/**\n * @typedef {Omit<ToMarkdownOptions, 'extensions'>} Options\n */\n\nimport {toMarkdown} from 'mdast-util-to-markdown'\n\n/**\n * Add support for serializing to markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkStringify(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.compiler = compiler\n\n  /**\n   * @type {Compiler}\n   */\n  function compiler(tree) {\n    return toMarkdown(tree, {\n      ...self.data('settings'),\n      ...options,\n      // Note: this option is not in the readme.\n      // The goal is for it to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('toMarkdownExtensions') || []\n    })\n  }\n}\n","var __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\nvar _marks, _hasText, _maybeMerge, _matchTarget, _runNode, _closeNodeAndPush, _addNodeAndPush, _marks2, _matchTarget2, _runProseNode, _runProseMark, _runNode2, _searchType, _maybeMergeChildren, _createMarkdownNode, _moveSpaces, _closeNodeAndPush2, _addNodeAndPush2, _openMark, _closeMark;\nimport { stackOverFlow, parserMatchError, createNodeInParserFail, serializerMatchError } from \"@milkdown/exception\";\nimport { Mark } from \"@milkdown/prose/model\";\nclass StackElement {\n}\nclass Stack {\n  constructor() {\n    this.elements = [];\n    this.size = () => {\n      return this.elements.length;\n    };\n    this.top = () => {\n      return this.elements.at(-1);\n    };\n    this.push = (node) => {\n      this.top()?.push(node);\n    };\n    this.open = (node) => {\n      this.elements.push(node);\n    };\n    this.close = () => {\n      const el = this.elements.pop();\n      if (!el) throw stackOverFlow();\n      return el;\n    };\n  }\n}\nclass ParserStackElement extends StackElement {\n  constructor(type, content, attrs) {\n    super();\n    this.type = type;\n    this.content = content;\n    this.attrs = attrs;\n  }\n  push(node, ...rest) {\n    this.content.push(node, ...rest);\n  }\n  pop() {\n    return this.content.pop();\n  }\n  static create(type, content, attrs) {\n    return new ParserStackElement(type, content, attrs);\n  }\n}\nconst _ParserState = class _ParserState extends Stack {\n  /// @internal\n  constructor(schema) {\n    super();\n    __privateAdd(this, _marks);\n    __privateAdd(this, _hasText);\n    __privateAdd(this, _maybeMerge);\n    __privateAdd(this, _matchTarget);\n    __privateAdd(this, _runNode);\n    __privateAdd(this, _closeNodeAndPush);\n    __privateAdd(this, _addNodeAndPush);\n    __privateSet(this, _marks, Mark.none);\n    __privateSet(this, _hasText, (node) => node.isText);\n    __privateSet(this, _maybeMerge, (a, b) => {\n      if (__privateGet(this, _hasText).call(this, a) && __privateGet(this, _hasText).call(this, b) && Mark.sameSet(a.marks, b.marks))\n        return this.schema.text(a.text + b.text, a.marks);\n      return void 0;\n    });\n    __privateSet(this, _matchTarget, (node) => {\n      const result = Object.values({\n        ...this.schema.nodes,\n        ...this.schema.marks\n      }).find((x) => {\n        const spec = x.spec;\n        return spec.parseMarkdown.match(node);\n      });\n      if (!result) throw parserMatchError(node);\n      return result;\n    });\n    __privateSet(this, _runNode, (node) => {\n      const type = __privateGet(this, _matchTarget).call(this, node);\n      const spec = type.spec;\n      spec.parseMarkdown.runner(this, node, type);\n    });\n    this.injectRoot = (node, nodeType, attrs) => {\n      this.openNode(nodeType, attrs);\n      this.next(node.children);\n      return this;\n    };\n    this.openNode = (nodeType, attrs) => {\n      this.open(ParserStackElement.create(nodeType, [], attrs));\n      return this;\n    };\n    __privateSet(this, _closeNodeAndPush, () => {\n      __privateSet(this, _marks, Mark.none);\n      const element = this.close();\n      return __privateGet(this, _addNodeAndPush).call(this, element.type, element.attrs, element.content);\n    });\n    this.closeNode = () => {\n      try {\n        __privateGet(this, _closeNodeAndPush).call(this);\n      } catch (e) {\n        console.error(e);\n      }\n      return this;\n    };\n    __privateSet(this, _addNodeAndPush, (nodeType, attrs, content) => {\n      const node = nodeType.createAndFill(attrs, content, __privateGet(this, _marks));\n      if (!node) throw createNodeInParserFail(nodeType, attrs, content);\n      this.push(node);\n      return node;\n    });\n    this.addNode = (nodeType, attrs, content) => {\n      try {\n        __privateGet(this, _addNodeAndPush).call(this, nodeType, attrs, content);\n      } catch (e) {\n        console.error(e);\n      }\n      return this;\n    };\n    this.openMark = (markType, attrs) => {\n      const mark = markType.create(attrs);\n      __privateSet(this, _marks, mark.addToSet(__privateGet(this, _marks)));\n      return this;\n    };\n    this.closeMark = (markType) => {\n      __privateSet(this, _marks, markType.removeFromSet(__privateGet(this, _marks)));\n      return this;\n    };\n    this.addText = (text) => {\n      try {\n        const topElement = this.top();\n        if (!topElement) throw stackOverFlow();\n        const prevNode = topElement.pop();\n        const currNode = this.schema.text(text, __privateGet(this, _marks));\n        if (!prevNode) {\n          topElement.push(currNode);\n          return this;\n        }\n        const merged = __privateGet(this, _maybeMerge).call(this, prevNode, currNode);\n        if (merged) {\n          topElement.push(merged);\n          return this;\n        }\n        topElement.push(prevNode, currNode);\n        return this;\n      } catch (e) {\n        console.error(e);\n        return this;\n      }\n    };\n    this.build = () => {\n      let doc;\n      do\n        doc = __privateGet(this, _closeNodeAndPush).call(this);\n      while (this.size());\n      return doc;\n    };\n    this.next = (nodes = []) => {\n      [nodes].flat().forEach((node) => __privateGet(this, _runNode).call(this, node));\n      return this;\n    };\n    this.toDoc = () => this.build();\n    this.run = (remark, markdown) => {\n      const tree = remark.runSync(\n        remark.parse(markdown),\n        markdown\n      );\n      this.next(tree);\n      return this;\n    };\n    this.schema = schema;\n  }\n};\n_marks = new WeakMap();\n_hasText = new WeakMap();\n_maybeMerge = new WeakMap();\n_matchTarget = new WeakMap();\n_runNode = new WeakMap();\n_closeNodeAndPush = new WeakMap();\n_addNodeAndPush = new WeakMap();\n_ParserState.create = (schema, remark) => {\n  const state = new _ParserState(schema);\n  return (text) => {\n    state.run(remark, text);\n    return state.toDoc();\n  };\n};\nlet ParserState = _ParserState;\nconst _SerializerStackElement = class _SerializerStackElement extends StackElement {\n  constructor(type, children, value, props = {}) {\n    super();\n    this.type = type;\n    this.children = children;\n    this.value = value;\n    this.props = props;\n    this.push = (node, ...rest) => {\n      if (!this.children) this.children = [];\n      this.children.push(node, ...rest);\n    };\n    this.pop = () => this.children?.pop();\n  }\n};\n_SerializerStackElement.create = (type, children, value, props = {}) => new _SerializerStackElement(type, children, value, props);\nlet SerializerStackElement = _SerializerStackElement;\nconst isFragment = (x) => Object.prototype.hasOwnProperty.call(x, \"size\");\nconst _SerializerState = class _SerializerState extends Stack {\n  /// @internal\n  constructor(schema) {\n    super();\n    __privateAdd(this, _marks2);\n    __privateAdd(this, _matchTarget2);\n    __privateAdd(this, _runProseNode);\n    __privateAdd(this, _runProseMark);\n    __privateAdd(this, _runNode2);\n    __privateAdd(this, _searchType);\n    __privateAdd(this, _maybeMergeChildren);\n    __privateAdd(this, _createMarkdownNode);\n    __privateAdd(this, _moveSpaces);\n    __privateAdd(this, _closeNodeAndPush2);\n    __privateAdd(this, _addNodeAndPush2);\n    __privateAdd(this, _openMark);\n    __privateAdd(this, _closeMark);\n    __privateSet(this, _marks2, Mark.none);\n    __privateSet(this, _matchTarget2, (node) => {\n      const result = Object.values({\n        ...this.schema.nodes,\n        ...this.schema.marks\n      }).find((x) => {\n        const spec = x.spec;\n        return spec.toMarkdown.match(node);\n      });\n      if (!result) throw serializerMatchError(node.type);\n      return result;\n    });\n    __privateSet(this, _runProseNode, (node) => {\n      const type = __privateGet(this, _matchTarget2).call(this, node);\n      const spec = type.spec;\n      return spec.toMarkdown.runner(this, node);\n    });\n    __privateSet(this, _runProseMark, (mark, node) => {\n      const type = __privateGet(this, _matchTarget2).call(this, mark);\n      const spec = type.spec;\n      return spec.toMarkdown.runner(this, mark, node);\n    });\n    __privateSet(this, _runNode2, (node) => {\n      const { marks } = node;\n      const getPriority = (x) => x.type.spec.priority ?? 50;\n      const tmp = [...marks].sort((a, b) => getPriority(a) - getPriority(b));\n      const unPreventNext = tmp.every((mark) => !__privateGet(this, _runProseMark).call(this, mark, node));\n      if (unPreventNext) __privateGet(this, _runProseNode).call(this, node);\n      marks.forEach((mark) => __privateGet(this, _closeMark).call(this, mark));\n    });\n    __privateSet(this, _searchType, (child, type) => {\n      if (child.type === type) return child;\n      if (child.children?.length !== 1) return child;\n      const searchNode = (node2) => {\n        if (node2.type === type) return node2;\n        if (node2.children?.length !== 1) return null;\n        const [firstChild] = node2.children;\n        if (!firstChild) return null;\n        return searchNode(firstChild);\n      };\n      const target = searchNode(child);\n      if (!target) return child;\n      const tmp = target.children ? [...target.children] : void 0;\n      const node = { ...child, children: tmp };\n      node.children = tmp;\n      target.children = [node];\n      return target;\n    });\n    __privateSet(this, _maybeMergeChildren, (node) => {\n      const { children } = node;\n      if (!children) return node;\n      node.children = children.reduce((nextChildren, child, index) => {\n        if (index === 0) return [child];\n        const last = nextChildren.at(-1);\n        if (last && last.isMark && child.isMark) {\n          child = __privateGet(this, _searchType).call(this, child, last.type);\n          const { children: currChildren, ...currRest } = child;\n          const { children: prevChildren, ...prevRest } = last;\n          if (child.type === last.type && currChildren && prevChildren && JSON.stringify(currRest) === JSON.stringify(prevRest)) {\n            const next = {\n              ...prevRest,\n              children: [...prevChildren, ...currChildren]\n            };\n            return nextChildren.slice(0, -1).concat(__privateGet(this, _maybeMergeChildren).call(this, next));\n          }\n        }\n        return nextChildren.concat(child);\n      }, []);\n      return node;\n    });\n    __privateSet(this, _createMarkdownNode, (element) => {\n      const node = {\n        ...element.props,\n        type: element.type\n      };\n      if (element.children) node.children = element.children;\n      if (element.value) node.value = element.value;\n      return node;\n    });\n    this.openNode = (type, value, props) => {\n      this.open(SerializerStackElement.create(type, void 0, value, props));\n      return this;\n    };\n    __privateSet(this, _moveSpaces, (element, onPush) => {\n      let startSpaces = \"\";\n      let endSpaces = \"\";\n      const children = element.children;\n      let first = -1;\n      let last = -1;\n      const findIndex = (node) => {\n        if (!node) return;\n        node.forEach((child, index) => {\n          if (child.type === \"text\" && child.value) {\n            if (first < 0) first = index;\n            last = index;\n          }\n        });\n      };\n      if (children) {\n        findIndex(children);\n        const lastChild = children?.[last];\n        const firstChild = children?.[first];\n        if (lastChild && lastChild.value.endsWith(\" \")) {\n          const text = lastChild.value;\n          const trimmed = text.trimEnd();\n          endSpaces = text.slice(trimmed.length);\n          lastChild.value = trimmed;\n        }\n        if (firstChild && firstChild.value.startsWith(\" \")) {\n          const text = firstChild.value;\n          const trimmed = text.trimStart();\n          startSpaces = text.slice(0, text.length - trimmed.length);\n          firstChild.value = trimmed;\n        }\n      }\n      if (startSpaces.length) __privateGet(this, _addNodeAndPush2).call(this, \"text\", void 0, startSpaces);\n      const result = onPush();\n      if (endSpaces.length) __privateGet(this, _addNodeAndPush2).call(this, \"text\", void 0, endSpaces);\n      return result;\n    });\n    __privateSet(this, _closeNodeAndPush2, (trim = false) => {\n      const element = this.close();\n      const onPush = () => __privateGet(this, _addNodeAndPush2).call(this, element.type, element.children, element.value, element.props);\n      if (trim) return __privateGet(this, _moveSpaces).call(this, element, onPush);\n      return onPush();\n    });\n    this.closeNode = () => {\n      __privateGet(this, _closeNodeAndPush2).call(this);\n      return this;\n    };\n    __privateSet(this, _addNodeAndPush2, (type, children, value, props) => {\n      const element = SerializerStackElement.create(type, children, value, props);\n      const node = __privateGet(this, _maybeMergeChildren).call(this, __privateGet(this, _createMarkdownNode).call(this, element));\n      this.push(node);\n      return node;\n    });\n    this.addNode = (type, children, value, props) => {\n      __privateGet(this, _addNodeAndPush2).call(this, type, children, value, props);\n      return this;\n    };\n    __privateSet(this, _openMark, (mark, type, value, props) => {\n      const isIn = mark.isInSet(__privateGet(this, _marks2));\n      if (isIn) return this;\n      __privateSet(this, _marks2, mark.addToSet(__privateGet(this, _marks2)));\n      return this.openNode(type, value, { ...props, isMark: true });\n    });\n    __privateSet(this, _closeMark, (mark) => {\n      const isIn = mark.isInSet(__privateGet(this, _marks2));\n      if (!isIn) return;\n      __privateSet(this, _marks2, mark.type.removeFromSet(__privateGet(this, _marks2)));\n      __privateGet(this, _closeNodeAndPush2).call(this, true);\n    });\n    this.withMark = (mark, type, value, props) => {\n      __privateGet(this, _openMark).call(this, mark, type, value, props);\n      return this;\n    };\n    this.closeMark = (mark) => {\n      __privateGet(this, _closeMark).call(this, mark);\n      return this;\n    };\n    this.build = () => {\n      let doc = null;\n      do\n        doc = __privateGet(this, _closeNodeAndPush2).call(this);\n      while (this.size());\n      return doc;\n    };\n    this.next = (nodes) => {\n      if (isFragment(nodes)) {\n        nodes.forEach((node) => {\n          __privateGet(this, _runNode2).call(this, node);\n        });\n        return this;\n      }\n      __privateGet(this, _runNode2).call(this, nodes);\n      return this;\n    };\n    this.toString = (remark) => remark.stringify(this.build());\n    this.run = (tree) => {\n      this.next(tree);\n      return this;\n    };\n    this.schema = schema;\n  }\n};\n_marks2 = new WeakMap();\n_matchTarget2 = new WeakMap();\n_runProseNode = new WeakMap();\n_runProseMark = new WeakMap();\n_runNode2 = new WeakMap();\n_searchType = new WeakMap();\n_maybeMergeChildren = new WeakMap();\n_createMarkdownNode = new WeakMap();\n_moveSpaces = new WeakMap();\n_closeNodeAndPush2 = new WeakMap();\n_addNodeAndPush2 = new WeakMap();\n_openMark = new WeakMap();\n_closeMark = new WeakMap();\n_SerializerState.create = (schema, remark) => {\n  const state = new _SerializerState(schema);\n  return (content) => {\n    state.run(content);\n    return state.toString(remark);\n  };\n};\nlet SerializerState = _SerializerState;\nexport {\n  ParserState,\n  SerializerState,\n  Stack,\n  StackElement\n};\n//# sourceMappingURL=index.js.map\n","import { ReplaceError, Slice, Fragment, MarkType, Mark } from 'prosemirror-model';\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\nconst lower16 = 0xffff;\nconst factor16 = Math.pow(2, 16);\nfunction makeRecover(index, offset) { return index + offset * factor16; }\nfunction recoverIndex(value) { return value & lower16; }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16; }\nconst DEL_BEFORE = 1, DEL_AFTER = 2, DEL_ACROSS = 4, DEL_SIDE = 8;\n/**\nAn object representing a mapped position with extra\ninformation.\n*/\nclass MapResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The mapped version of the position.\n    */\n    pos, \n    /**\n    @internal\n    */\n    delInfo, \n    /**\n    @internal\n    */\n    recover) {\n        this.pos = pos;\n        this.delInfo = delInfo;\n        this.recover = recover;\n    }\n    /**\n    Tells you whether the position was deleted, that is, whether the\n    step removed the token on the side queried (via the `assoc`)\n    argument from the document.\n    */\n    get deleted() { return (this.delInfo & DEL_SIDE) > 0; }\n    /**\n    Tells you whether the token before the mapped position was deleted.\n    */\n    get deletedBefore() { return (this.delInfo & (DEL_BEFORE | DEL_ACROSS)) > 0; }\n    /**\n    True when the token after the mapped position was deleted.\n    */\n    get deletedAfter() { return (this.delInfo & (DEL_AFTER | DEL_ACROSS)) > 0; }\n    /**\n    Tells whether any of the steps mapped through deletes across the\n    position (including both the token before and after the\n    position).\n    */\n    get deletedAcross() { return (this.delInfo & DEL_ACROSS) > 0; }\n}\n/**\nA map describing the deletions and insertions made by a step, which\ncan be used to find the correspondence between positions in the\npre-step version of a document and the same position in the\npost-step version.\n*/\nclass StepMap {\n    /**\n    Create a position map. The modifications to the document are\n    represented as an array of numbers, in which each group of three\n    represents a modified chunk as `[start, oldSize, newSize]`.\n    */\n    constructor(\n    /**\n    @internal\n    */\n    ranges, \n    /**\n    @internal\n    */\n    inverted = false) {\n        this.ranges = ranges;\n        this.inverted = inverted;\n        if (!ranges.length && StepMap.empty)\n            return StepMap.empty;\n    }\n    /**\n    @internal\n    */\n    recover(value) {\n        let diff = 0, index = recoverIndex(value);\n        if (!this.inverted)\n            for (let i = 0; i < index; i++)\n                diff += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1];\n        return this.ranges[index * 3] + diff + recoverOffset(value);\n    }\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    map(pos, assoc = 1) { return this._map(pos, assoc, true); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex], end = start + oldSize;\n            if (pos <= end) {\n                let side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc;\n                let result = start + diff + (side < 0 ? 0 : newSize);\n                if (simple)\n                    return result;\n                let recover = pos == (assoc < 0 ? start : end) ? null : makeRecover(i / 3, pos - start);\n                let del = pos == start ? DEL_AFTER : pos == end ? DEL_BEFORE : DEL_ACROSS;\n                if (assoc < 0 ? pos != start : pos != end)\n                    del |= DEL_SIDE;\n                return new MapResult(result, del, recover);\n            }\n            diff += newSize - oldSize;\n        }\n        return simple ? pos + diff : new MapResult(pos + diff, 0, null);\n    }\n    /**\n    @internal\n    */\n    touches(pos, recover) {\n        let diff = 0, index = recoverIndex(recover);\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], end = start + oldSize;\n            if (pos <= end && i == index * 3)\n                return true;\n            diff += this.ranges[i + newIndex] - oldSize;\n        }\n        return false;\n    }\n    /**\n    Calls the given function on each of the changed ranges included in\n    this map.\n    */\n    forEach(f) {\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0, diff = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i], oldStart = start - (this.inverted ? diff : 0), newStart = start + (this.inverted ? 0 : diff);\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex];\n            f(oldStart, oldStart + oldSize, newStart, newStart + newSize);\n            diff += newSize - oldSize;\n        }\n    }\n    /**\n    Create an inverted version of this map. The result can be used to\n    map positions in the post-step document to the pre-step document.\n    */\n    invert() {\n        return new StepMap(this.ranges, !this.inverted);\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges);\n    }\n    /**\n    Create a map that moves all positions by offset `n` (which may be\n    negative). This can be useful when applying steps meant for a\n    sub-document to a larger document, or vice-versa.\n    */\n    static offset(n) {\n        return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n]);\n    }\n}\n/**\nA StepMap that contains no changed ranges.\n*/\nStepMap.empty = new StepMap([]);\n/**\nA mapping represents a pipeline of zero or more [step\nmaps](https://prosemirror.net/docs/ref/#transform.StepMap). It has special provisions for losslessly\nhandling mapping positions through a series of steps in which some\nsteps are inverted versions of earlier steps. (This comes up when\n‘[rebasing](https://prosemirror.net/docs/guide/#transform.rebasing)’ steps for\ncollaboration or history management.)\n*/\nclass Mapping {\n    /**\n    Create a new mapping with the given position maps.\n    */\n    constructor(maps, \n    /**\n    @internal\n    */\n    mirror, \n    /**\n    The starting position in the `maps` array, used when `map` or\n    `mapResult` is called.\n    */\n    from = 0, \n    /**\n    The end position in the `maps` array.\n    */\n    to = maps ? maps.length : 0) {\n        this.mirror = mirror;\n        this.from = from;\n        this.to = to;\n        this._maps = maps || [];\n        this.ownData = !(maps || mirror);\n    }\n    /**\n    The step maps in this mapping.\n    */\n    get maps() { return this._maps; }\n    /**\n    Create a mapping that maps only through a part of this one.\n    */\n    slice(from = 0, to = this.maps.length) {\n        return new Mapping(this._maps, this.mirror, from, to);\n    }\n    /**\n    Add a step map to the end of this mapping. If `mirrors` is\n    given, it should be the index of the step map that is the mirror\n    image of this one.\n    */\n    appendMap(map, mirrors) {\n        if (!this.ownData) {\n            this._maps = this._maps.slice();\n            this.mirror = this.mirror && this.mirror.slice();\n            this.ownData = true;\n        }\n        this.to = this._maps.push(map);\n        if (mirrors != null)\n            this.setMirror(this._maps.length - 1, mirrors);\n    }\n    /**\n    Add all the step maps in a given mapping to this one (preserving\n    mirroring information).\n    */\n    appendMapping(mapping) {\n        for (let i = 0, startSize = this._maps.length; i < mapping._maps.length; i++) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping._maps[i], mirr != null && mirr < i ? startSize + mirr : undefined);\n        }\n    }\n    /**\n    Finds the offset of the step map that mirrors the map at the\n    given offset, in this mapping (as per the second argument to\n    `appendMap`).\n    */\n    getMirror(n) {\n        if (this.mirror)\n            for (let i = 0; i < this.mirror.length; i++)\n                if (this.mirror[i] == n)\n                    return this.mirror[i + (i % 2 ? -1 : 1)];\n    }\n    /**\n    @internal\n    */\n    setMirror(n, m) {\n        if (!this.mirror)\n            this.mirror = [];\n        this.mirror.push(n, m);\n    }\n    /**\n    Append the inverse of the given mapping to this one.\n    */\n    appendMappingInverted(mapping) {\n        for (let i = mapping.maps.length - 1, totalSize = this._maps.length + mapping._maps.length; i >= 0; i--) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping._maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : undefined);\n        }\n    }\n    /**\n    Create an inverted version of this mapping.\n    */\n    invert() {\n        let inverse = new Mapping;\n        inverse.appendMappingInverted(this);\n        return inverse;\n    }\n    /**\n    Map a position through this mapping.\n    */\n    map(pos, assoc = 1) {\n        if (this.mirror)\n            return this._map(pos, assoc, true);\n        for (let i = this.from; i < this.to; i++)\n            pos = this._maps[i].map(pos, assoc);\n        return pos;\n    }\n    /**\n    Map a position through this mapping, returning a mapping\n    result.\n    */\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let delInfo = 0;\n        for (let i = this.from; i < this.to; i++) {\n            let map = this._maps[i], result = map.mapResult(pos, assoc);\n            if (result.recover != null) {\n                let corr = this.getMirror(i);\n                if (corr != null && corr > i && corr < this.to) {\n                    i = corr;\n                    pos = this._maps[corr].recover(result.recover);\n                    continue;\n                }\n            }\n            delInfo |= result.delInfo;\n            pos = result.pos;\n        }\n        return simple ? pos : new MapResult(pos, delInfo, null);\n    }\n}\n\nconst stepsByID = Object.create(null);\n/**\nA step object represents an atomic change. It generally applies\nonly to the document it was created for, since the positions\nstored in it will only make sense for that document.\n\nNew steps are defined by creating classes that extend `Step`,\noverriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\nmethods, and registering your class with a unique\nJSON-serialization identifier using\n[`Step.jsonID`](https://prosemirror.net/docs/ref/#transform.Step^jsonID).\n*/\nclass Step {\n    /**\n    Get the step map that represents the changes made by this step,\n    and which can be used to transform between positions in the old\n    and the new document.\n    */\n    getMap() { return StepMap.empty; }\n    /**\n    Try to merge this step with another one, to be applied directly\n    after it. Returns the merged step when possible, null if the\n    steps can't be merged.\n    */\n    merge(other) { return null; }\n    /**\n    Deserialize a step from its JSON representation. Will call\n    through to the step class' own implementation of this method.\n    */\n    static fromJSON(schema, json) {\n        if (!json || !json.stepType)\n            throw new RangeError(\"Invalid input for Step.fromJSON\");\n        let type = stepsByID[json.stepType];\n        if (!type)\n            throw new RangeError(`No step type ${json.stepType} defined`);\n        return type.fromJSON(schema, json);\n    }\n    /**\n    To be able to serialize steps to JSON, each step needs a string\n    ID to attach to its JSON representation. Use this method to\n    register an ID for your step classes. Try to pick something\n    that's unlikely to clash with steps from other modules.\n    */\n    static jsonID(id, stepClass) {\n        if (id in stepsByID)\n            throw new RangeError(\"Duplicate use of step JSON ID \" + id);\n        stepsByID[id] = stepClass;\n        stepClass.prototype.jsonID = id;\n        return stepClass;\n    }\n}\n/**\nThe result of [applying](https://prosemirror.net/docs/ref/#transform.Step.apply) a step. Contains either a\nnew document or a failure value.\n*/\nclass StepResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The transformed document, if successful.\n    */\n    doc, \n    /**\n    The failure message, if unsuccessful.\n    */\n    failed) {\n        this.doc = doc;\n        this.failed = failed;\n    }\n    /**\n    Create a successful step result.\n    */\n    static ok(doc) { return new StepResult(doc, null); }\n    /**\n    Create a failed step result.\n    */\n    static fail(message) { return new StepResult(null, message); }\n    /**\n    Call [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) with the given\n    arguments. Create a successful result if it succeeds, and a\n    failed one if it throws a `ReplaceError`.\n    */\n    static fromReplace(doc, from, to, slice) {\n        try {\n            return StepResult.ok(doc.replace(from, to, slice));\n        }\n        catch (e) {\n            if (e instanceof ReplaceError)\n                return StepResult.fail(e.message);\n            throw e;\n        }\n    }\n}\n\nfunction mapFragment(fragment, f, parent) {\n    let mapped = [];\n    for (let i = 0; i < fragment.childCount; i++) {\n        let child = fragment.child(i);\n        if (child.content.size)\n            child = child.copy(mapFragment(child.content, f, child));\n        if (child.isInline)\n            child = f(child, parent, i);\n        mapped.push(child);\n    }\n    return Fragment.fromArray(mapped);\n}\n/**\nAdd a mark to all inline content between two positions.\n*/\nclass AddMarkStep extends Step {\n    /**\n    Create a mark step.\n    */\n    constructor(\n    /**\n    The start of the marked range.\n    */\n    from, \n    /**\n    The end of the marked range.\n    */\n    to, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from);\n        let parent = $from.node($from.sharedDepth(this.to));\n        let slice = new Slice(mapFragment(oldSlice.content, (node, parent) => {\n            if (!node.isAtom || !parent.type.allowsMarkType(this.mark.type))\n                return node;\n            return node.mark(this.mark.addToSet(node.marks));\n        }, parent), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new RemoveMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new AddMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof AddMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new AddMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\");\n        return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addMark\", AddMarkStep);\n/**\nRemove a mark from all inline content between two positions.\n*/\nclass RemoveMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The start of the unmarked range.\n    */\n    from, \n    /**\n    The end of the unmarked range.\n    */\n    to, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to);\n        let slice = new Slice(mapFragment(oldSlice.content, node => {\n            return node.mark(this.mark.removeFromSet(node.marks));\n        }, doc), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new AddMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new RemoveMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof RemoveMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new RemoveMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\");\n        return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeMark\", RemoveMarkStep);\n/**\nAdd a mark to a specific node.\n*/\nclass AddNodeMarkStep extends Step {\n    /**\n    Create a node mark step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.addToSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (node) {\n            let newSet = this.mark.addToSet(node.marks);\n            if (newSet.length == node.marks.length) {\n                for (let i = 0; i < node.marks.length; i++)\n                    if (!node.marks[i].isInSet(newSet))\n                        return new AddNodeMarkStep(this.pos, node.marks[i]);\n                return new AddNodeMarkStep(this.pos, this.mark);\n            }\n        }\n        return new RemoveNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AddNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"addNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for AddNodeMarkStep.fromJSON\");\n        return new AddNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addNodeMark\", AddNodeMarkStep);\n/**\nRemove a mark from a specific node.\n*/\nclass RemoveNodeMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.removeFromSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node || !this.mark.isInSet(node.marks))\n            return this;\n        return new AddNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new RemoveNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"removeNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for RemoveNodeMarkStep.fromJSON\");\n        return new RemoveNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeNodeMark\", RemoveNodeMarkStep);\n\n/**\nReplace a part of the document with a slice of new content.\n*/\nclass ReplaceStep extends Step {\n    /**\n    The given `slice` should fit the 'gap' between `from` and\n    `to`—the depths must line up, and the surrounding nodes must be\n    able to be joined with the open sides of the slice. When\n    `structure` is true, the step will fail if the content between\n    from and to is not just a sequence of closing and then opening\n    tokens (this is to guard against rebased replace steps\n    overwriting something they weren't supposed to).\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.slice = slice;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && contentBetween(doc, this.from, this.to))\n            return StepResult.fail(\"Structure replace would overwrite content\");\n        return StepResult.fromReplace(doc, this.from, this.to, this.slice);\n    }\n    getMap() {\n        return new StepMap([this.from, this.to - this.from, this.slice.size]);\n    }\n    invert(doc) {\n        return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to));\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deletedAcross && to.deletedAcross)\n            return null;\n        return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice, this.structure);\n    }\n    merge(other) {\n        if (!(other instanceof ReplaceStep) || other.structure || this.structure)\n            return null;\n        if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd);\n            return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure);\n        }\n        else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd);\n            return new ReplaceStep(other.from, this.to, slice, this.structure);\n        }\n        else {\n            return null;\n        }\n    }\n    toJSON() {\n        let json = { stepType: \"replace\", from: this.from, to: this.to };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\");\n        return new ReplaceStep(json.from, json.to, Slice.fromJSON(schema, json.slice), !!json.structure);\n    }\n}\nStep.jsonID(\"replace\", ReplaceStep);\n/**\nReplace a part of the document with a slice of content, but\npreserve a range of the replaced content by moving it into the\nslice.\n*/\nclass ReplaceAroundStep extends Step {\n    /**\n    Create a replace-around step with the given range and gap.\n    `insert` should be the point in the slice into which the content\n    of the gap should be moved. `structure` has the same meaning as\n    it has in the [`ReplaceStep`](https://prosemirror.net/docs/ref/#transform.ReplaceStep) class.\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The start of preserved range.\n    */\n    gapFrom, \n    /**\n    The end of preserved range.\n    */\n    gapTo, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    The position in the slice where the preserved range should be\n    inserted.\n    */\n    insert, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.gapFrom = gapFrom;\n        this.gapTo = gapTo;\n        this.slice = slice;\n        this.insert = insert;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n            contentBetween(doc, this.gapTo, this.to)))\n            return StepResult.fail(\"Structure gap-replace would overwrite content\");\n        let gap = doc.slice(this.gapFrom, this.gapTo);\n        if (gap.openStart || gap.openEnd)\n            return StepResult.fail(\"Gap is not a flat range\");\n        let inserted = this.slice.insertAt(this.insert, gap.content);\n        if (!inserted)\n            return StepResult.fail(\"Content does not fit in gap\");\n        return StepResult.fromReplace(doc, this.from, this.to, inserted);\n    }\n    getMap() {\n        return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n            this.gapTo, this.to - this.gapTo, this.slice.size - this.insert]);\n    }\n    invert(doc) {\n        let gap = this.gapTo - this.gapFrom;\n        return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap, this.from + this.insert, this.from + this.insert + gap, doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from), this.gapFrom - this.from, this.structure);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        let gapFrom = this.from == this.gapFrom ? from.pos : mapping.map(this.gapFrom, -1);\n        let gapTo = this.to == this.gapTo ? to.pos : mapping.map(this.gapTo, 1);\n        if ((from.deletedAcross && to.deletedAcross) || gapFrom < from.pos || gapTo > to.pos)\n            return null;\n        return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure);\n    }\n    toJSON() {\n        let json = { stepType: \"replaceAround\", from: this.from, to: this.to,\n            gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n            typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\");\n        return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo, Slice.fromJSON(schema, json.slice), json.insert, !!json.structure);\n    }\n}\nStep.jsonID(\"replaceAround\", ReplaceAroundStep);\nfunction contentBetween(doc, from, to) {\n    let $from = doc.resolve(from), dist = to - from, depth = $from.depth;\n    while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n        depth--;\n        dist--;\n    }\n    if (dist > 0) {\n        let next = $from.node(depth).maybeChild($from.indexAfter(depth));\n        while (dist > 0) {\n            if (!next || next.isLeaf)\n                return true;\n            next = next.firstChild;\n            dist--;\n        }\n    }\n    return false;\n}\n\nfunction addMark(tr, from, to, mark) {\n    let removed = [], added = [];\n    let removing, adding;\n    tr.doc.nodesBetween(from, to, (node, pos, parent) => {\n        if (!node.isInline)\n            return;\n        let marks = node.marks;\n        if (!mark.isInSet(marks) && parent.type.allowsMarkType(mark.type)) {\n            let start = Math.max(pos, from), end = Math.min(pos + node.nodeSize, to);\n            let newSet = mark.addToSet(marks);\n            for (let i = 0; i < marks.length; i++) {\n                if (!marks[i].isInSet(newSet)) {\n                    if (removing && removing.to == start && removing.mark.eq(marks[i]))\n                        removing.to = end;\n                    else\n                        removed.push(removing = new RemoveMarkStep(start, end, marks[i]));\n                }\n            }\n            if (adding && adding.to == start)\n                adding.to = end;\n            else\n                added.push(adding = new AddMarkStep(start, end, mark));\n        }\n    });\n    removed.forEach(s => tr.step(s));\n    added.forEach(s => tr.step(s));\n}\nfunction removeMark(tr, from, to, mark) {\n    let matched = [], step = 0;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        if (!node.isInline)\n            return;\n        step++;\n        let toRemove = null;\n        if (mark instanceof MarkType) {\n            let set = node.marks, found;\n            while (found = mark.isInSet(set)) {\n                (toRemove || (toRemove = [])).push(found);\n                set = found.removeFromSet(set);\n            }\n        }\n        else if (mark) {\n            if (mark.isInSet(node.marks))\n                toRemove = [mark];\n        }\n        else {\n            toRemove = node.marks;\n        }\n        if (toRemove && toRemove.length) {\n            let end = Math.min(pos + node.nodeSize, to);\n            for (let i = 0; i < toRemove.length; i++) {\n                let style = toRemove[i], found;\n                for (let j = 0; j < matched.length; j++) {\n                    let m = matched[j];\n                    if (m.step == step - 1 && style.eq(matched[j].style))\n                        found = m;\n                }\n                if (found) {\n                    found.to = end;\n                    found.step = step;\n                }\n                else {\n                    matched.push({ style, from: Math.max(pos, from), to: end, step });\n                }\n            }\n        }\n    });\n    matched.forEach(m => tr.step(new RemoveMarkStep(m.from, m.to, m.style)));\n}\nfunction clearIncompatible(tr, pos, parentType, match = parentType.contentMatch, clearNewlines = true) {\n    let node = tr.doc.nodeAt(pos);\n    let replSteps = [], cur = pos + 1;\n    for (let i = 0; i < node.childCount; i++) {\n        let child = node.child(i), end = cur + child.nodeSize;\n        let allowed = match.matchType(child.type);\n        if (!allowed) {\n            replSteps.push(new ReplaceStep(cur, end, Slice.empty));\n        }\n        else {\n            match = allowed;\n            for (let j = 0; j < child.marks.length; j++)\n                if (!parentType.allowsMarkType(child.marks[j].type))\n                    tr.step(new RemoveMarkStep(cur, end, child.marks[j]));\n            if (clearNewlines && child.isText && parentType.whitespace != \"pre\") {\n                let m, newline = /\\r?\\n|\\r/g, slice;\n                while (m = newline.exec(child.text)) {\n                    if (!slice)\n                        slice = new Slice(Fragment.from(parentType.schema.text(\" \", parentType.allowedMarks(child.marks))), 0, 0);\n                    replSteps.push(new ReplaceStep(cur + m.index, cur + m.index + m[0].length, slice));\n                }\n            }\n        }\n        cur = end;\n    }\n    if (!match.validEnd) {\n        let fill = match.fillBefore(Fragment.empty, true);\n        tr.replace(cur, cur, new Slice(fill, 0, 0));\n    }\n    for (let i = replSteps.length - 1; i >= 0; i--)\n        tr.step(replSteps[i]);\n}\n\nfunction canCut(node, start, end) {\n    return (start == 0 || node.canReplace(start, node.childCount)) &&\n        (end == node.childCount || node.canReplace(0, end));\n}\n/**\nTry to find a target depth to which the content in the given range\ncan be lifted. Will not go across\n[isolating](https://prosemirror.net/docs/ref/#model.NodeSpec.isolating) parent nodes.\n*/\nfunction liftTarget(range) {\n    let parent = range.parent;\n    let content = parent.content.cutByIndex(range.startIndex, range.endIndex);\n    for (let depth = range.depth;; --depth) {\n        let node = range.$from.node(depth);\n        let index = range.$from.index(depth), endIndex = range.$to.indexAfter(depth);\n        if (depth < range.depth && node.canReplace(index, endIndex, content))\n            return depth;\n        if (depth == 0 || node.type.spec.isolating || !canCut(node, index, endIndex))\n            break;\n    }\n    return null;\n}\nfunction lift(tr, range, target) {\n    let { $from, $to, depth } = range;\n    let gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1);\n    let start = gapStart, end = gapEnd;\n    let before = Fragment.empty, openStart = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $from.index(d) > 0) {\n            splitting = true;\n            before = Fragment.from($from.node(d).copy(before));\n            openStart++;\n        }\n        else {\n            start--;\n        }\n    let after = Fragment.empty, openEnd = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $to.after(d + 1) < $to.end(d)) {\n            splitting = true;\n            after = Fragment.from($to.node(d).copy(after));\n            openEnd++;\n        }\n        else {\n            end++;\n        }\n    tr.step(new ReplaceAroundStep(start, end, gapStart, gapEnd, new Slice(before.append(after), openStart, openEnd), before.size - openStart, true));\n}\n/**\nTry to find a valid way to wrap the content in the given range in a\nnode of the given type. May introduce extra nodes around and inside\nthe wrapper node, if necessary. Returns null if no valid wrapping\ncould be found. When `innerRange` is given, that range's content is\nused as the content to fit into the wrapping, instead of the\ncontent of `range`.\n*/\nfunction findWrapping(range, nodeType, attrs = null, innerRange = range) {\n    let around = findWrappingOutside(range, nodeType);\n    let inner = around && findWrappingInside(innerRange, nodeType);\n    if (!inner)\n        return null;\n    return around.map(withAttrs)\n        .concat({ type: nodeType, attrs }).concat(inner.map(withAttrs));\n}\nfunction withAttrs(type) { return { type, attrs: null }; }\nfunction findWrappingOutside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let around = parent.contentMatchAt(startIndex).findWrapping(type);\n    if (!around)\n        return null;\n    let outer = around.length ? around[0] : type;\n    return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null;\n}\nfunction findWrappingInside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let inner = parent.child(startIndex);\n    let inside = type.contentMatch.findWrapping(inner.type);\n    if (!inside)\n        return null;\n    let lastType = inside.length ? inside[inside.length - 1] : type;\n    let innerMatch = lastType.contentMatch;\n    for (let i = startIndex; innerMatch && i < endIndex; i++)\n        innerMatch = innerMatch.matchType(parent.child(i).type);\n    if (!innerMatch || !innerMatch.validEnd)\n        return null;\n    return inside;\n}\nfunction wrap(tr, range, wrappers) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--) {\n        if (content.size) {\n            let match = wrappers[i].type.contentMatch.matchFragment(content);\n            if (!match || !match.validEnd)\n                throw new RangeError(\"Wrapper type given to Transform.wrap does not form valid content of its parent wrapper\");\n        }\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    }\n    let start = range.start, end = range.end;\n    tr.step(new ReplaceAroundStep(start, end, start, end, new Slice(content, 0, 0), wrappers.length, true));\n}\nfunction setBlockType(tr, from, to, type, attrs) {\n    if (!type.isTextblock)\n        throw new RangeError(\"Type given to setBlockType should be a textblock\");\n    let mapFrom = tr.steps.length;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        let attrsHere = typeof attrs == \"function\" ? attrs(node) : attrs;\n        if (node.isTextblock && !node.hasMarkup(type, attrsHere) &&\n            canChangeType(tr.doc, tr.mapping.slice(mapFrom).map(pos), type)) {\n            let convertNewlines = null;\n            if (type.schema.linebreakReplacement) {\n                let pre = type.whitespace == \"pre\", supportLinebreak = !!type.contentMatch.matchType(type.schema.linebreakReplacement);\n                if (pre && !supportLinebreak)\n                    convertNewlines = false;\n                else if (!pre && supportLinebreak)\n                    convertNewlines = true;\n            }\n            // Ensure all markup that isn't allowed in the new node type is cleared\n            if (convertNewlines === false)\n                replaceLinebreaks(tr, node, pos, mapFrom);\n            clearIncompatible(tr, tr.mapping.slice(mapFrom).map(pos, 1), type, undefined, convertNewlines === null);\n            let mapping = tr.mapping.slice(mapFrom);\n            let startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1);\n            tr.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1, new Slice(Fragment.from(type.create(attrsHere, null, node.marks)), 0, 0), 1, true));\n            if (convertNewlines === true)\n                replaceNewlines(tr, node, pos, mapFrom);\n            return false;\n        }\n    });\n}\nfunction replaceNewlines(tr, node, pos, mapFrom) {\n    node.forEach((child, offset) => {\n        if (child.isText) {\n            let m, newline = /\\r?\\n|\\r/g;\n            while (m = newline.exec(child.text)) {\n                let start = tr.mapping.slice(mapFrom).map(pos + 1 + offset + m.index);\n                tr.replaceWith(start, start + 1, node.type.schema.linebreakReplacement.create());\n            }\n        }\n    });\n}\nfunction replaceLinebreaks(tr, node, pos, mapFrom) {\n    node.forEach((child, offset) => {\n        if (child.type == child.type.schema.linebreakReplacement) {\n            let start = tr.mapping.slice(mapFrom).map(pos + 1 + offset);\n            tr.replaceWith(start, start + 1, node.type.schema.text(\"\\n\"));\n        }\n    });\n}\nfunction canChangeType(doc, pos, type) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return $pos.parent.canReplaceWith(index, index + 1, type);\n}\n/**\nChange the type, attributes, and/or marks of the node at `pos`.\nWhen `type` isn't given, the existing node type is preserved,\n*/\nfunction setNodeMarkup(tr, pos, type, attrs, marks) {\n    let node = tr.doc.nodeAt(pos);\n    if (!node)\n        throw new RangeError(\"No node at given position\");\n    if (!type)\n        type = node.type;\n    let newNode = type.create(attrs, null, marks || node.marks);\n    if (node.isLeaf)\n        return tr.replaceWith(pos, pos + node.nodeSize, newNode);\n    if (!type.validContent(node.content))\n        throw new RangeError(\"Invalid content for node type \" + type.name);\n    tr.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1, new Slice(Fragment.from(newNode), 0, 0), 1, true));\n}\n/**\nCheck whether splitting at the given position is allowed.\n*/\nfunction canSplit(doc, pos, depth = 1, typesAfter) {\n    let $pos = doc.resolve(pos), base = $pos.depth - depth;\n    let innerType = (typesAfter && typesAfter[typesAfter.length - 1]) || $pos.parent;\n    if (base < 0 || $pos.parent.type.spec.isolating ||\n        !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) ||\n        !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount)))\n        return false;\n    for (let d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n        let node = $pos.node(d), index = $pos.index(d);\n        if (node.type.spec.isolating)\n            return false;\n        let rest = node.content.cutByIndex(index, node.childCount);\n        let overrideChild = typesAfter && typesAfter[i + 1];\n        if (overrideChild)\n            rest = rest.replaceChild(0, overrideChild.type.create(overrideChild.attrs));\n        let after = (typesAfter && typesAfter[i]) || node;\n        if (!node.canReplace(index + 1, node.childCount) || !after.type.validContent(rest))\n            return false;\n    }\n    let index = $pos.indexAfter(base);\n    let baseType = typesAfter && typesAfter[0];\n    return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type);\n}\nfunction split(tr, pos, depth = 1, typesAfter) {\n    let $pos = tr.doc.resolve(pos), before = Fragment.empty, after = Fragment.empty;\n    for (let d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n        before = Fragment.from($pos.node(d).copy(before));\n        let typeAfter = typesAfter && typesAfter[i];\n        after = Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after));\n    }\n    tr.step(new ReplaceStep(pos, pos, new Slice(before.append(after), depth, depth), true));\n}\n/**\nTest whether the blocks before and after a given position can be\njoined.\n*/\nfunction canJoin(doc, pos) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return joinable($pos.nodeBefore, $pos.nodeAfter) &&\n        $pos.parent.canReplace(index, index + 1);\n}\nfunction canAppendWithSubstitutedLinebreaks(a, b) {\n    if (!b.content.size)\n        a.type.compatibleContent(b.type);\n    let match = a.contentMatchAt(a.childCount);\n    let { linebreakReplacement } = a.type.schema;\n    for (let i = 0; i < b.childCount; i++) {\n        let child = b.child(i);\n        let type = child.type == linebreakReplacement ? a.type.schema.nodes.text : child.type;\n        match = match.matchType(type);\n        if (!match)\n            return false;\n        if (!a.type.allowsMarks(child.marks))\n            return false;\n    }\n    return match.validEnd;\n}\nfunction joinable(a, b) {\n    return !!(a && b && !a.isLeaf && canAppendWithSubstitutedLinebreaks(a, b));\n}\n/**\nFind an ancestor of the given position that can be joined to the\nblock before (or after if `dir` is positive). Returns the joinable\npoint, if any.\n*/\nfunction joinPoint(doc, pos, dir = -1) {\n    let $pos = doc.resolve(pos);\n    for (let d = $pos.depth;; d--) {\n        let before, after, index = $pos.index(d);\n        if (d == $pos.depth) {\n            before = $pos.nodeBefore;\n            after = $pos.nodeAfter;\n        }\n        else if (dir > 0) {\n            before = $pos.node(d + 1);\n            index++;\n            after = $pos.node(d).maybeChild(index);\n        }\n        else {\n            before = $pos.node(d).maybeChild(index - 1);\n            after = $pos.node(d + 1);\n        }\n        if (before && !before.isTextblock && joinable(before, after) &&\n            $pos.node(d).canReplace(index, index + 1))\n            return pos;\n        if (d == 0)\n            break;\n        pos = dir < 0 ? $pos.before(d) : $pos.after(d);\n    }\n}\nfunction join(tr, pos, depth) {\n    let convertNewlines = null;\n    let { linebreakReplacement } = tr.doc.type.schema;\n    let $before = tr.doc.resolve(pos - depth), beforeType = $before.node().type;\n    if (linebreakReplacement && beforeType.inlineContent) {\n        let pre = beforeType.whitespace == \"pre\";\n        let supportLinebreak = !!beforeType.contentMatch.matchType(linebreakReplacement);\n        if (pre && !supportLinebreak)\n            convertNewlines = false;\n        else if (!pre && supportLinebreak)\n            convertNewlines = true;\n    }\n    let mapFrom = tr.steps.length;\n    if (convertNewlines === false) {\n        let $after = tr.doc.resolve(pos + depth);\n        replaceLinebreaks(tr, $after.node(), $after.before(), mapFrom);\n    }\n    if (beforeType.inlineContent)\n        clearIncompatible(tr, pos + depth - 1, beforeType, $before.node().contentMatchAt($before.index()), convertNewlines == null);\n    let mapping = tr.mapping.slice(mapFrom), start = mapping.map(pos - depth);\n    tr.step(new ReplaceStep(start, mapping.map(pos + depth, -1), Slice.empty, true));\n    if (convertNewlines === true) {\n        let $full = tr.doc.resolve(start);\n        replaceNewlines(tr, $full.node(), $full.before(), tr.steps.length);\n    }\n    return tr;\n}\n/**\nTry to find a point where a node of the given type can be inserted\nnear `pos`, by searching up the node hierarchy when `pos` itself\nisn't a valid place but is at the start or end of a node. Return\nnull if no position was found.\n*/\nfunction insertPoint(doc, pos, nodeType) {\n    let $pos = doc.resolve(pos);\n    if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType))\n        return pos;\n    if ($pos.parentOffset == 0)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.index(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.before(d + 1);\n            if (index > 0)\n                return null;\n        }\n    if ($pos.parentOffset == $pos.parent.content.size)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.indexAfter(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.after(d + 1);\n            if (index < $pos.node(d).childCount)\n                return null;\n        }\n    return null;\n}\n/**\nFinds a position at or around the given position where the given\nslice can be inserted. Will look at parent nodes' nearest boundary\nand try there, even if the original position wasn't directly at the\nstart or end of that node. Returns null when no position was found.\n*/\nfunction dropPoint(doc, pos, slice) {\n    let $pos = doc.resolve(pos);\n    if (!slice.content.size)\n        return pos;\n    let content = slice.content;\n    for (let i = 0; i < slice.openStart; i++)\n        content = content.firstChild.content;\n    for (let pass = 1; pass <= (slice.openStart == 0 && slice.size ? 2 : 1); pass++) {\n        for (let d = $pos.depth; d >= 0; d--) {\n            let bias = d == $pos.depth ? 0 : $pos.pos <= ($pos.start(d + 1) + $pos.end(d + 1)) / 2 ? -1 : 1;\n            let insertPos = $pos.index(d) + (bias > 0 ? 1 : 0);\n            let parent = $pos.node(d), fits = false;\n            if (pass == 1) {\n                fits = parent.canReplace(insertPos, insertPos, content);\n            }\n            else {\n                let wrapping = parent.contentMatchAt(insertPos).findWrapping(content.firstChild.type);\n                fits = wrapping && parent.canReplaceWith(insertPos, insertPos, wrapping[0]);\n            }\n            if (fits)\n                return bias == 0 ? $pos.pos : bias < 0 ? $pos.before(d + 1) : $pos.after(d + 1);\n        }\n    }\n    return null;\n}\n\n/**\n‘Fit’ a slice into a given position in the document, producing a\n[step](https://prosemirror.net/docs/ref/#transform.Step) that inserts it. Will return null if\nthere's no meaningful way to insert the slice here, or inserting it\nwould be a no-op (an empty slice over an empty range).\n*/\nfunction replaceStep(doc, from, to = from, slice = Slice.empty) {\n    if (from == to && !slice.size)\n        return null;\n    let $from = doc.resolve(from), $to = doc.resolve(to);\n    // Optimization -- avoid work if it's obvious that it's not needed.\n    if (fitsTrivially($from, $to, slice))\n        return new ReplaceStep(from, to, slice);\n    return new Fitter($from, $to, slice).fit();\n}\nfunction fitsTrivially($from, $to, slice) {\n    return !slice.openStart && !slice.openEnd && $from.start() == $to.start() &&\n        $from.parent.canReplace($from.index(), $to.index(), slice.content);\n}\n// Algorithm for 'placing' the elements of a slice into a gap:\n//\n// We consider the content of each node that is open to the left to be\n// independently placeable. I.e. in <p(\"foo\"), p(\"bar\")>, when the\n// paragraph on the left is open, \"foo\" can be placed (somewhere on\n// the left side of the replacement gap) independently from p(\"bar\").\n//\n// This class tracks the state of the placement progress in the\n// following properties:\n//\n//  - `frontier` holds a stack of `{type, match}` objects that\n//    represent the open side of the replacement. It starts at\n//    `$from`, then moves forward as content is placed, and is finally\n//    reconciled with `$to`.\n//\n//  - `unplaced` is a slice that represents the content that hasn't\n//    been placed yet.\n//\n//  - `placed` is a fragment of placed content. Its open-start value\n//    is implicit in `$from`, and its open-end value in `frontier`.\nclass Fitter {\n    constructor($from, $to, unplaced) {\n        this.$from = $from;\n        this.$to = $to;\n        this.unplaced = unplaced;\n        this.frontier = [];\n        this.placed = Fragment.empty;\n        for (let i = 0; i <= $from.depth; i++) {\n            let node = $from.node(i);\n            this.frontier.push({\n                type: node.type,\n                match: node.contentMatchAt($from.indexAfter(i))\n            });\n        }\n        for (let i = $from.depth; i > 0; i--)\n            this.placed = Fragment.from($from.node(i).copy(this.placed));\n    }\n    get depth() { return this.frontier.length - 1; }\n    fit() {\n        // As long as there's unplaced content, try to place some of it.\n        // If that fails, either increase the open score of the unplaced\n        // slice, or drop nodes from it, and then try again.\n        while (this.unplaced.size) {\n            let fit = this.findFittable();\n            if (fit)\n                this.placeNodes(fit);\n            else\n                this.openMore() || this.dropNode();\n        }\n        // When there's inline content directly after the frontier _and_\n        // directly after `this.$to`, we must generate a `ReplaceAround`\n        // step that pulls that content into the node after the frontier.\n        // That means the fitting must be done to the end of the textblock\n        // node after `this.$to`, not `this.$to` itself.\n        let moveInline = this.mustMoveInline(), placedSize = this.placed.size - this.depth - this.$from.depth;\n        let $from = this.$from, $to = this.close(moveInline < 0 ? this.$to : $from.doc.resolve(moveInline));\n        if (!$to)\n            return null;\n        // If closing to `$to` succeeded, create a step\n        let content = this.placed, openStart = $from.depth, openEnd = $to.depth;\n        while (openStart && openEnd && content.childCount == 1) { // Normalize by dropping open parent nodes\n            content = content.firstChild.content;\n            openStart--;\n            openEnd--;\n        }\n        let slice = new Slice(content, openStart, openEnd);\n        if (moveInline > -1)\n            return new ReplaceAroundStep($from.pos, moveInline, this.$to.pos, this.$to.end(), slice, placedSize);\n        if (slice.size || $from.pos != this.$to.pos) // Don't generate no-op steps\n            return new ReplaceStep($from.pos, $to.pos, slice);\n        return null;\n    }\n    // Find a position on the start spine of `this.unplaced` that has\n    // content that can be moved somewhere on the frontier. Returns two\n    // depths, one for the slice and one for the frontier.\n    findFittable() {\n        let startDepth = this.unplaced.openStart;\n        for (let cur = this.unplaced.content, d = 0, openEnd = this.unplaced.openEnd; d < startDepth; d++) {\n            let node = cur.firstChild;\n            if (cur.childCount > 1)\n                openEnd = 0;\n            if (node.type.spec.isolating && openEnd <= d) {\n                startDepth = d;\n                break;\n            }\n            cur = node.content;\n        }\n        // Only try wrapping nodes (pass 2) after finding a place without\n        // wrapping failed.\n        for (let pass = 1; pass <= 2; pass++) {\n            for (let sliceDepth = pass == 1 ? startDepth : this.unplaced.openStart; sliceDepth >= 0; sliceDepth--) {\n                let fragment, parent = null;\n                if (sliceDepth) {\n                    parent = contentAt(this.unplaced.content, sliceDepth - 1).firstChild;\n                    fragment = parent.content;\n                }\n                else {\n                    fragment = this.unplaced.content;\n                }\n                let first = fragment.firstChild;\n                for (let frontierDepth = this.depth; frontierDepth >= 0; frontierDepth--) {\n                    let { type, match } = this.frontier[frontierDepth], wrap, inject = null;\n                    // In pass 1, if the next node matches, or there is no next\n                    // node but the parents look compatible, we've found a\n                    // place.\n                    if (pass == 1 && (first ? match.matchType(first.type) || (inject = match.fillBefore(Fragment.from(first), false))\n                        : parent && type.compatibleContent(parent.type)))\n                        return { sliceDepth, frontierDepth, parent, inject };\n                    // In pass 2, look for a set of wrapping nodes that make\n                    // `first` fit here.\n                    else if (pass == 2 && first && (wrap = match.findWrapping(first.type)))\n                        return { sliceDepth, frontierDepth, parent, wrap };\n                    // Don't continue looking further up if the parent node\n                    // would fit here.\n                    if (parent && match.matchType(parent.type))\n                        break;\n                }\n            }\n        }\n    }\n    openMore() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (!inner.childCount || inner.firstChild.isLeaf)\n            return false;\n        this.unplaced = new Slice(content, openStart + 1, Math.max(openEnd, inner.size + openStart >= content.size - openEnd ? openStart + 1 : 0));\n        return true;\n    }\n    dropNode() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (inner.childCount <= 1 && openStart > 0) {\n            let openAtEnd = content.size - openStart <= openStart + inner.size;\n            this.unplaced = new Slice(dropFromFragment(content, openStart - 1, 1), openStart - 1, openAtEnd ? openStart - 1 : openEnd);\n        }\n        else {\n            this.unplaced = new Slice(dropFromFragment(content, openStart, 1), openStart, openEnd);\n        }\n    }\n    // Move content from the unplaced slice at `sliceDepth` to the\n    // frontier node at `frontierDepth`. Close that frontier node when\n    // applicable.\n    placeNodes({ sliceDepth, frontierDepth, parent, inject, wrap }) {\n        while (this.depth > frontierDepth)\n            this.closeFrontierNode();\n        if (wrap)\n            for (let i = 0; i < wrap.length; i++)\n                this.openFrontierNode(wrap[i]);\n        let slice = this.unplaced, fragment = parent ? parent.content : slice.content;\n        let openStart = slice.openStart - sliceDepth;\n        let taken = 0, add = [];\n        let { match, type } = this.frontier[frontierDepth];\n        if (inject) {\n            for (let i = 0; i < inject.childCount; i++)\n                add.push(inject.child(i));\n            match = match.matchFragment(inject);\n        }\n        // Computes the amount of (end) open nodes at the end of the\n        // fragment. When 0, the parent is open, but no more. When\n        // negative, nothing is open.\n        let openEndCount = (fragment.size + sliceDepth) - (slice.content.size - slice.openEnd);\n        // Scan over the fragment, fitting as many child nodes as\n        // possible.\n        while (taken < fragment.childCount) {\n            let next = fragment.child(taken), matches = match.matchType(next.type);\n            if (!matches)\n                break;\n            taken++;\n            if (taken > 1 || openStart == 0 || next.content.size) { // Drop empty open nodes\n                match = matches;\n                add.push(closeNodeStart(next.mark(type.allowedMarks(next.marks)), taken == 1 ? openStart : 0, taken == fragment.childCount ? openEndCount : -1));\n            }\n        }\n        let toEnd = taken == fragment.childCount;\n        if (!toEnd)\n            openEndCount = -1;\n        this.placed = addToFragment(this.placed, frontierDepth, Fragment.from(add));\n        this.frontier[frontierDepth].match = match;\n        // If the parent types match, and the entire node was moved, and\n        // it's not open, close this frontier node right away.\n        if (toEnd && openEndCount < 0 && parent && parent.type == this.frontier[this.depth].type && this.frontier.length > 1)\n            this.closeFrontierNode();\n        // Add new frontier nodes for any open nodes at the end.\n        for (let i = 0, cur = fragment; i < openEndCount; i++) {\n            let node = cur.lastChild;\n            this.frontier.push({ type: node.type, match: node.contentMatchAt(node.childCount) });\n            cur = node.content;\n        }\n        // Update `this.unplaced`. Drop the entire node from which we\n        // placed it we got to its end, otherwise just drop the placed\n        // nodes.\n        this.unplaced = !toEnd ? new Slice(dropFromFragment(slice.content, sliceDepth, taken), slice.openStart, slice.openEnd)\n            : sliceDepth == 0 ? Slice.empty\n                : new Slice(dropFromFragment(slice.content, sliceDepth - 1, 1), sliceDepth - 1, openEndCount < 0 ? slice.openEnd : sliceDepth - 1);\n    }\n    mustMoveInline() {\n        if (!this.$to.parent.isTextblock)\n            return -1;\n        let top = this.frontier[this.depth], level;\n        if (!top.type.isTextblock || !contentAfterFits(this.$to, this.$to.depth, top.type, top.match, false) ||\n            (this.$to.depth == this.depth && (level = this.findCloseLevel(this.$to)) && level.depth == this.depth))\n            return -1;\n        let { depth } = this.$to, after = this.$to.after(depth);\n        while (depth > 1 && after == this.$to.end(--depth))\n            ++after;\n        return after;\n    }\n    findCloseLevel($to) {\n        scan: for (let i = Math.min(this.depth, $to.depth); i >= 0; i--) {\n            let { match, type } = this.frontier[i];\n            let dropInner = i < $to.depth && $to.end(i + 1) == $to.pos + ($to.depth - (i + 1));\n            let fit = contentAfterFits($to, i, type, match, dropInner);\n            if (!fit)\n                continue;\n            for (let d = i - 1; d >= 0; d--) {\n                let { match, type } = this.frontier[d];\n                let matches = contentAfterFits($to, d, type, match, true);\n                if (!matches || matches.childCount)\n                    continue scan;\n            }\n            return { depth: i, fit, move: dropInner ? $to.doc.resolve($to.after(i + 1)) : $to };\n        }\n    }\n    close($to) {\n        let close = this.findCloseLevel($to);\n        if (!close)\n            return null;\n        while (this.depth > close.depth)\n            this.closeFrontierNode();\n        if (close.fit.childCount)\n            this.placed = addToFragment(this.placed, close.depth, close.fit);\n        $to = close.move;\n        for (let d = close.depth + 1; d <= $to.depth; d++) {\n            let node = $to.node(d), add = node.type.contentMatch.fillBefore(node.content, true, $to.index(d));\n            this.openFrontierNode(node.type, node.attrs, add);\n        }\n        return $to;\n    }\n    openFrontierNode(type, attrs = null, content) {\n        let top = this.frontier[this.depth];\n        top.match = top.match.matchType(type);\n        this.placed = addToFragment(this.placed, this.depth, Fragment.from(type.create(attrs, content)));\n        this.frontier.push({ type, match: type.contentMatch });\n    }\n    closeFrontierNode() {\n        let open = this.frontier.pop();\n        let add = open.match.fillBefore(Fragment.empty, true);\n        if (add.childCount)\n            this.placed = addToFragment(this.placed, this.frontier.length, add);\n    }\n}\nfunction dropFromFragment(fragment, depth, count) {\n    if (depth == 0)\n        return fragment.cutByIndex(count, fragment.childCount);\n    return fragment.replaceChild(0, fragment.firstChild.copy(dropFromFragment(fragment.firstChild.content, depth - 1, count)));\n}\nfunction addToFragment(fragment, depth, content) {\n    if (depth == 0)\n        return fragment.append(content);\n    return fragment.replaceChild(fragment.childCount - 1, fragment.lastChild.copy(addToFragment(fragment.lastChild.content, depth - 1, content)));\n}\nfunction contentAt(fragment, depth) {\n    for (let i = 0; i < depth; i++)\n        fragment = fragment.firstChild.content;\n    return fragment;\n}\nfunction closeNodeStart(node, openStart, openEnd) {\n    if (openStart <= 0)\n        return node;\n    let frag = node.content;\n    if (openStart > 1)\n        frag = frag.replaceChild(0, closeNodeStart(frag.firstChild, openStart - 1, frag.childCount == 1 ? openEnd - 1 : 0));\n    if (openStart > 0) {\n        frag = node.type.contentMatch.fillBefore(frag).append(frag);\n        if (openEnd <= 0)\n            frag = frag.append(node.type.contentMatch.matchFragment(frag).fillBefore(Fragment.empty, true));\n    }\n    return node.copy(frag);\n}\nfunction contentAfterFits($to, depth, type, match, open) {\n    let node = $to.node(depth), index = open ? $to.indexAfter(depth) : $to.index(depth);\n    if (index == node.childCount && !type.compatibleContent(node.type))\n        return null;\n    let fit = match.fillBefore(node.content, true, index);\n    return fit && !invalidMarks(type, node.content, index) ? fit : null;\n}\nfunction invalidMarks(type, fragment, start) {\n    for (let i = start; i < fragment.childCount; i++)\n        if (!type.allowsMarks(fragment.child(i).marks))\n            return true;\n    return false;\n}\nfunction definesContent(type) {\n    return type.spec.defining || type.spec.definingForContent;\n}\nfunction replaceRange(tr, from, to, slice) {\n    if (!slice.size)\n        return tr.deleteRange(from, to);\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    if (fitsTrivially($from, $to, slice))\n        return tr.step(new ReplaceStep(from, to, slice));\n    let targetDepths = coveredDepths($from, tr.doc.resolve(to));\n    // Can't replace the whole document, so remove 0 if it's present\n    if (targetDepths[targetDepths.length - 1] == 0)\n        targetDepths.pop();\n    // Negative numbers represent not expansion over the whole node at\n    // that depth, but replacing from $from.before(-D) to $to.pos.\n    let preferredTarget = -($from.depth + 1);\n    targetDepths.unshift(preferredTarget);\n    // This loop picks a preferred target depth, if one of the covering\n    // depths is not outside of a defining node, and adds negative\n    // depths for any depth that has $from at its start and does not\n    // cross a defining node.\n    for (let d = $from.depth, pos = $from.pos - 1; d > 0; d--, pos--) {\n        let spec = $from.node(d).type.spec;\n        if (spec.defining || spec.definingAsContext || spec.isolating)\n            break;\n        if (targetDepths.indexOf(d) > -1)\n            preferredTarget = d;\n        else if ($from.before(d) == pos)\n            targetDepths.splice(1, 0, -d);\n    }\n    // Try to fit each possible depth of the slice into each possible\n    // target depth, starting with the preferred depths.\n    let preferredTargetIndex = targetDepths.indexOf(preferredTarget);\n    let leftNodes = [], preferredDepth = slice.openStart;\n    for (let content = slice.content, i = 0;; i++) {\n        let node = content.firstChild;\n        leftNodes.push(node);\n        if (i == slice.openStart)\n            break;\n        content = node.content;\n    }\n    // Back up preferredDepth to cover defining textblocks directly\n    // above it, possibly skipping a non-defining textblock.\n    for (let d = preferredDepth - 1; d >= 0; d--) {\n        let leftNode = leftNodes[d], def = definesContent(leftNode.type);\n        if (def && !leftNode.sameMarkup($from.node(Math.abs(preferredTarget) - 1)))\n            preferredDepth = d;\n        else if (def || !leftNode.type.isTextblock)\n            break;\n    }\n    for (let j = slice.openStart; j >= 0; j--) {\n        let openDepth = (j + preferredDepth + 1) % (slice.openStart + 1);\n        let insert = leftNodes[openDepth];\n        if (!insert)\n            continue;\n        for (let i = 0; i < targetDepths.length; i++) {\n            // Loop over possible expansion levels, starting with the\n            // preferred one\n            let targetDepth = targetDepths[(i + preferredTargetIndex) % targetDepths.length], expand = true;\n            if (targetDepth < 0) {\n                expand = false;\n                targetDepth = -targetDepth;\n            }\n            let parent = $from.node(targetDepth - 1), index = $from.index(targetDepth - 1);\n            if (parent.canReplaceWith(index, index, insert.type, insert.marks))\n                return tr.replace($from.before(targetDepth), expand ? $to.after(targetDepth) : to, new Slice(closeFragment(slice.content, 0, slice.openStart, openDepth), openDepth, slice.openEnd));\n        }\n    }\n    let startSteps = tr.steps.length;\n    for (let i = targetDepths.length - 1; i >= 0; i--) {\n        tr.replace(from, to, slice);\n        if (tr.steps.length > startSteps)\n            break;\n        let depth = targetDepths[i];\n        if (depth < 0)\n            continue;\n        from = $from.before(depth);\n        to = $to.after(depth);\n    }\n}\nfunction closeFragment(fragment, depth, oldOpen, newOpen, parent) {\n    if (depth < oldOpen) {\n        let first = fragment.firstChild;\n        fragment = fragment.replaceChild(0, first.copy(closeFragment(first.content, depth + 1, oldOpen, newOpen, first)));\n    }\n    if (depth > newOpen) {\n        let match = parent.contentMatchAt(0);\n        let start = match.fillBefore(fragment).append(fragment);\n        fragment = start.append(match.matchFragment(start).fillBefore(Fragment.empty, true));\n    }\n    return fragment;\n}\nfunction replaceRangeWith(tr, from, to, node) {\n    if (!node.isInline && from == to && tr.doc.resolve(from).parent.content.size) {\n        let point = insertPoint(tr.doc, from, node.type);\n        if (point != null)\n            from = to = point;\n    }\n    tr.replaceRange(from, to, new Slice(Fragment.from(node), 0, 0));\n}\nfunction deleteRange(tr, from, to) {\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    let covered = coveredDepths($from, $to);\n    for (let i = 0; i < covered.length; i++) {\n        let depth = covered[i], last = i == covered.length - 1;\n        if ((last && depth == 0) || $from.node(depth).type.contentMatch.validEnd)\n            return tr.delete($from.start(depth), $to.end(depth));\n        if (depth > 0 && (last || $from.node(depth - 1).canReplace($from.index(depth - 1), $to.indexAfter(depth - 1))))\n            return tr.delete($from.before(depth), $to.after(depth));\n    }\n    for (let d = 1; d <= $from.depth && d <= $to.depth; d++) {\n        if (from - $from.start(d) == $from.depth - d && to > $from.end(d) && $to.end(d) - to != $to.depth - d &&\n            $from.start(d - 1) == $to.start(d - 1) && $from.node(d - 1).canReplace($from.index(d - 1), $to.index(d - 1)))\n            return tr.delete($from.before(d), to);\n    }\n    tr.delete(from, to);\n}\n// Returns an array of all depths for which $from - $to spans the\n// whole content of the nodes at that depth.\nfunction coveredDepths($from, $to) {\n    let result = [], minDepth = Math.min($from.depth, $to.depth);\n    for (let d = minDepth; d >= 0; d--) {\n        let start = $from.start(d);\n        if (start < $from.pos - ($from.depth - d) ||\n            $to.end(d) > $to.pos + ($to.depth - d) ||\n            $from.node(d).type.spec.isolating ||\n            $to.node(d).type.spec.isolating)\n            break;\n        if (start == $to.start(d) ||\n            (d == $from.depth && d == $to.depth && $from.parent.inlineContent && $to.parent.inlineContent &&\n                d && $to.start(d - 1) == start - 1))\n            result.push(d);\n    }\n    return result;\n}\n\n/**\nUpdate an attribute in a specific node.\n*/\nclass AttrStep extends Step {\n    /**\n    Construct an attribute step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The attribute to set.\n    */\n    attr, \n    // The attribute's new value.\n    value) {\n        super();\n        this.pos = pos;\n        this.attr = attr;\n        this.value = value;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at attribute step's position\");\n        let attrs = Object.create(null);\n        for (let name in node.attrs)\n            attrs[name] = node.attrs[name];\n        attrs[this.attr] = this.value;\n        let updated = node.type.create(attrs, null, node.marks);\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    getMap() {\n        return StepMap.empty;\n    }\n    invert(doc) {\n        return new AttrStep(this.pos, this.attr, doc.nodeAt(this.pos).attrs[this.attr]);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AttrStep(pos.pos, this.attr, this.value);\n    }\n    toJSON() {\n        return { stepType: \"attr\", pos: this.pos, attr: this.attr, value: this.value };\n    }\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\" || typeof json.attr != \"string\")\n            throw new RangeError(\"Invalid input for AttrStep.fromJSON\");\n        return new AttrStep(json.pos, json.attr, json.value);\n    }\n}\nStep.jsonID(\"attr\", AttrStep);\n/**\nUpdate an attribute in the doc node.\n*/\nclass DocAttrStep extends Step {\n    /**\n    Construct an attribute step.\n    */\n    constructor(\n    /**\n    The attribute to set.\n    */\n    attr, \n    // The attribute's new value.\n    value) {\n        super();\n        this.attr = attr;\n        this.value = value;\n    }\n    apply(doc) {\n        let attrs = Object.create(null);\n        for (let name in doc.attrs)\n            attrs[name] = doc.attrs[name];\n        attrs[this.attr] = this.value;\n        let updated = doc.type.create(attrs, doc.content, doc.marks);\n        return StepResult.ok(updated);\n    }\n    getMap() {\n        return StepMap.empty;\n    }\n    invert(doc) {\n        return new DocAttrStep(this.attr, doc.attrs[this.attr]);\n    }\n    map(mapping) {\n        return this;\n    }\n    toJSON() {\n        return { stepType: \"docAttr\", attr: this.attr, value: this.value };\n    }\n    static fromJSON(schema, json) {\n        if (typeof json.attr != \"string\")\n            throw new RangeError(\"Invalid input for DocAttrStep.fromJSON\");\n        return new DocAttrStep(json.attr, json.value);\n    }\n}\nStep.jsonID(\"docAttr\", DocAttrStep);\n\n/**\n@internal\n*/\nlet TransformError = class extends Error {\n};\nTransformError = function TransformError(message) {\n    let err = Error.call(this, message);\n    err.__proto__ = TransformError.prototype;\n    return err;\n};\nTransformError.prototype = Object.create(Error.prototype);\nTransformError.prototype.constructor = TransformError;\nTransformError.prototype.name = \"TransformError\";\n/**\nAbstraction to build up and track an array of\n[steps](https://prosemirror.net/docs/ref/#transform.Step) representing a document transformation.\n\nMost transforming methods return the `Transform` object itself, so\nthat they can be chained.\n*/\nclass Transform {\n    /**\n    Create a transform that starts with the given document.\n    */\n    constructor(\n    /**\n    The current document (the result of applying the steps in the\n    transform).\n    */\n    doc) {\n        this.doc = doc;\n        /**\n        The steps in this transform.\n        */\n        this.steps = [];\n        /**\n        The documents before each of the steps.\n        */\n        this.docs = [];\n        /**\n        A mapping with the maps for each of the steps in this transform.\n        */\n        this.mapping = new Mapping;\n    }\n    /**\n    The starting document.\n    */\n    get before() { return this.docs.length ? this.docs[0] : this.doc; }\n    /**\n    Apply a new step in this transform, saving the result. Throws an\n    error when the step fails.\n    */\n    step(step) {\n        let result = this.maybeStep(step);\n        if (result.failed)\n            throw new TransformError(result.failed);\n        return this;\n    }\n    /**\n    Try to apply a step in this transformation, ignoring it if it\n    fails. Returns the step result.\n    */\n    maybeStep(step) {\n        let result = step.apply(this.doc);\n        if (!result.failed)\n            this.addStep(step, result.doc);\n        return result;\n    }\n    /**\n    True when the document has been changed (when there are any\n    steps).\n    */\n    get docChanged() {\n        return this.steps.length > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        this.docs.push(this.doc);\n        this.steps.push(step);\n        this.mapping.appendMap(step.getMap());\n        this.doc = doc;\n    }\n    /**\n    Replace the part of the document between `from` and `to` with the\n    given `slice`.\n    */\n    replace(from, to = from, slice = Slice.empty) {\n        let step = replaceStep(this.doc, from, to, slice);\n        if (step)\n            this.step(step);\n        return this;\n    }\n    /**\n    Replace the given range with the given content, which may be a\n    fragment, node, or array of nodes.\n    */\n    replaceWith(from, to, content) {\n        return this.replace(from, to, new Slice(Fragment.from(content), 0, 0));\n    }\n    /**\n    Delete the content between the given positions.\n    */\n    delete(from, to) {\n        return this.replace(from, to, Slice.empty);\n    }\n    /**\n    Insert the given content at the given position.\n    */\n    insert(pos, content) {\n        return this.replaceWith(pos, pos, content);\n    }\n    /**\n    Replace a range of the document with a given slice, using\n    `from`, `to`, and the slice's\n    [`openStart`](https://prosemirror.net/docs/ref/#model.Slice.openStart) property as hints, rather\n    than fixed start and end points. This method may grow the\n    replaced area or close open nodes in the slice in order to get a\n    fit that is more in line with WYSIWYG expectations, by dropping\n    fully covered parent nodes of the replaced region when they are\n    marked [non-defining as\n    context](https://prosemirror.net/docs/ref/#model.NodeSpec.definingAsContext), or including an\n    open parent node from the slice that _is_ marked as [defining\n    its content](https://prosemirror.net/docs/ref/#model.NodeSpec.definingForContent).\n    \n    This is the method, for example, to handle paste. The similar\n    [`replace`](https://prosemirror.net/docs/ref/#transform.Transform.replace) method is a more\n    primitive tool which will _not_ move the start and end of its given\n    range, and is useful in situations where you need more precise\n    control over what happens.\n    */\n    replaceRange(from, to, slice) {\n        replaceRange(this, from, to, slice);\n        return this;\n    }\n    /**\n    Replace the given range with a node, but use `from` and `to` as\n    hints, rather than precise positions. When from and to are the same\n    and are at the start or end of a parent node in which the given\n    node doesn't fit, this method may _move_ them out towards a parent\n    that does allow the given node to be placed. When the given range\n    completely covers a parent node, this method may completely replace\n    that parent node.\n    */\n    replaceRangeWith(from, to, node) {\n        replaceRangeWith(this, from, to, node);\n        return this;\n    }\n    /**\n    Delete the given range, expanding it to cover fully covered\n    parent nodes until a valid replace is found.\n    */\n    deleteRange(from, to) {\n        deleteRange(this, from, to);\n        return this;\n    }\n    /**\n    Split the content in the given range off from its parent, if there\n    is sibling content before or after it, and move it up the tree to\n    the depth specified by `target`. You'll probably want to use\n    [`liftTarget`](https://prosemirror.net/docs/ref/#transform.liftTarget) to compute `target`, to make\n    sure the lift is valid.\n    */\n    lift(range, target) {\n        lift(this, range, target);\n        return this;\n    }\n    /**\n    Join the blocks around the given position. If depth is 2, their\n    last and first siblings are also joined, and so on.\n    */\n    join(pos, depth = 1) {\n        join(this, pos, depth);\n        return this;\n    }\n    /**\n    Wrap the given [range](https://prosemirror.net/docs/ref/#model.NodeRange) in the given set of wrappers.\n    The wrappers are assumed to be valid in this position, and should\n    probably be computed with [`findWrapping`](https://prosemirror.net/docs/ref/#transform.findWrapping).\n    */\n    wrap(range, wrappers) {\n        wrap(this, range, wrappers);\n        return this;\n    }\n    /**\n    Set the type of all textblocks (partly) between `from` and `to` to\n    the given node type with the given attributes.\n    */\n    setBlockType(from, to = from, type, attrs = null) {\n        setBlockType(this, from, to, type, attrs);\n        return this;\n    }\n    /**\n    Change the type, attributes, and/or marks of the node at `pos`.\n    When `type` isn't given, the existing node type is preserved,\n    */\n    setNodeMarkup(pos, type, attrs = null, marks) {\n        setNodeMarkup(this, pos, type, attrs, marks);\n        return this;\n    }\n    /**\n    Set a single attribute on a given node to a new value.\n    The `pos` addresses the document content. Use `setDocAttribute`\n    to set attributes on the document itself.\n    */\n    setNodeAttribute(pos, attr, value) {\n        this.step(new AttrStep(pos, attr, value));\n        return this;\n    }\n    /**\n    Set a single attribute on the document to a new value.\n    */\n    setDocAttribute(attr, value) {\n        this.step(new DocAttrStep(attr, value));\n        return this;\n    }\n    /**\n    Add a mark to the node at position `pos`.\n    */\n    addNodeMark(pos, mark) {\n        this.step(new AddNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Remove a mark (or all marks of the given type) from the node at\n    position `pos`.\n    */\n    removeNodeMark(pos, mark) {\n        let node = this.doc.nodeAt(pos);\n        if (!node)\n            throw new RangeError(\"No node at position \" + pos);\n        if (mark instanceof Mark) {\n            if (mark.isInSet(node.marks))\n                this.step(new RemoveNodeMarkStep(pos, mark));\n        }\n        else {\n            let set = node.marks, found, steps = [];\n            while (found = mark.isInSet(set)) {\n                steps.push(new RemoveNodeMarkStep(pos, found));\n                set = found.removeFromSet(set);\n            }\n            for (let i = steps.length - 1; i >= 0; i--)\n                this.step(steps[i]);\n        }\n        return this;\n    }\n    /**\n    Split the node at the given position, and optionally, if `depth` is\n    greater than one, any number of nodes above that. By default, the\n    parts split off will inherit the node type of the original node.\n    This can be changed by passing an array of types and attributes to\n    use after the split (with the outermost nodes coming first).\n    */\n    split(pos, depth = 1, typesAfter) {\n        split(this, pos, depth, typesAfter);\n        return this;\n    }\n    /**\n    Add the given mark to the inline content between `from` and `to`.\n    */\n    addMark(from, to, mark) {\n        addMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Remove marks from inline nodes between `from` and `to`. When\n    `mark` is a single mark, remove precisely that mark. When it is\n    a mark type, remove all marks of that type. When it is null,\n    remove all marks of any type.\n    */\n    removeMark(from, to, mark) {\n        removeMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Removes all marks and nodes from the content of the node at\n    `pos` that don't match the given new parent node type. Accepts\n    an optional starting [content match](https://prosemirror.net/docs/ref/#model.ContentMatch) as\n    third argument.\n    */\n    clearIncompatible(pos, parentType, match) {\n        clearIncompatible(this, pos, parentType, match);\n        return this;\n    }\n}\n\nexport { AddMarkStep, AddNodeMarkStep, AttrStep, DocAttrStep, MapResult, Mapping, RemoveMarkStep, RemoveNodeMarkStep, ReplaceAroundStep, ReplaceStep, Step, StepMap, StepResult, Transform, TransformError, canJoin, canSplit, dropPoint, findWrapping, insertPoint, joinPoint, liftTarget, replaceStep };\n","import { Slice, Fragment, Mark, Node } from 'prosemirror-model';\nimport { ReplaceStep, ReplaceAroundStep, Transform } from 'prosemirror-transform';\n\nconst classesById = Object.create(null);\n/**\nSuperclass for editor selections. Every selection type should\nextend this. Should not be instantiated directly.\n*/\nclass Selection {\n    /**\n    Initialize a selection with the head and anchor and ranges. If no\n    ranges are given, constructs a single range across `$anchor` and\n    `$head`.\n    */\n    constructor(\n    /**\n    The resolved anchor of the selection (the side that stays in\n    place when the selection is modified).\n    */\n    $anchor, \n    /**\n    The resolved head of the selection (the side that moves when\n    the selection is modified).\n    */\n    $head, ranges) {\n        this.$anchor = $anchor;\n        this.$head = $head;\n        this.ranges = ranges || [new SelectionRange($anchor.min($head), $anchor.max($head))];\n    }\n    /**\n    The selection's anchor, as an unresolved position.\n    */\n    get anchor() { return this.$anchor.pos; }\n    /**\n    The selection's head.\n    */\n    get head() { return this.$head.pos; }\n    /**\n    The lower bound of the selection's main range.\n    */\n    get from() { return this.$from.pos; }\n    /**\n    The upper bound of the selection's main range.\n    */\n    get to() { return this.$to.pos; }\n    /**\n    The resolved lower  bound of the selection's main range.\n    */\n    get $from() {\n        return this.ranges[0].$from;\n    }\n    /**\n    The resolved upper bound of the selection's main range.\n    */\n    get $to() {\n        return this.ranges[0].$to;\n    }\n    /**\n    Indicates whether the selection contains any content.\n    */\n    get empty() {\n        let ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++)\n            if (ranges[i].$from.pos != ranges[i].$to.pos)\n                return false;\n        return true;\n    }\n    /**\n    Get the content of this selection as a slice.\n    */\n    content() {\n        return this.$from.doc.slice(this.from, this.to, true);\n    }\n    /**\n    Replace the selection with a slice or, if no slice is given,\n    delete the selection. Will append to the given transaction.\n    */\n    replace(tr, content = Slice.empty) {\n        // Put the new selection at the position after the inserted\n        // content. When that ended in an inline node, search backwards,\n        // to get the position after that node. If not, search forward.\n        let lastNode = content.content.lastChild, lastParent = null;\n        for (let i = 0; i < content.openEnd; i++) {\n            lastParent = lastNode;\n            lastNode = lastNode.lastChild;\n        }\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            tr.replaceRange(mapping.map($from.pos), mapping.map($to.pos), i ? Slice.empty : content);\n            if (i == 0)\n                selectionToInsertionEnd(tr, mapFrom, (lastNode ? lastNode.isInline : lastParent && lastParent.isTextblock) ? -1 : 1);\n        }\n    }\n    /**\n    Replace the selection with the given node, appending the changes\n    to the given transaction.\n    */\n    replaceWith(tr, node) {\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            let from = mapping.map($from.pos), to = mapping.map($to.pos);\n            if (i) {\n                tr.deleteRange(from, to);\n            }\n            else {\n                tr.replaceRangeWith(from, to, node);\n                selectionToInsertionEnd(tr, mapFrom, node.isInline ? -1 : 1);\n            }\n        }\n    }\n    /**\n    Find a valid cursor or leaf node selection starting at the given\n    position and searching back if `dir` is negative, and forward if\n    positive. When `textOnly` is true, only consider cursor\n    selections. Will return null when no valid selection position is\n    found.\n    */\n    static findFrom($pos, dir, textOnly = false) {\n        let inner = $pos.parent.inlineContent ? new TextSelection($pos)\n            : findSelectionIn($pos.node(0), $pos.parent, $pos.pos, $pos.index(), dir, textOnly);\n        if (inner)\n            return inner;\n        for (let depth = $pos.depth - 1; depth >= 0; depth--) {\n            let found = dir < 0\n                ? findSelectionIn($pos.node(0), $pos.node(depth), $pos.before(depth + 1), $pos.index(depth), dir, textOnly)\n                : findSelectionIn($pos.node(0), $pos.node(depth), $pos.after(depth + 1), $pos.index(depth) + 1, dir, textOnly);\n            if (found)\n                return found;\n        }\n        return null;\n    }\n    /**\n    Find a valid cursor or leaf node selection near the given\n    position. Searches forward first by default, but if `bias` is\n    negative, it will search backwards first.\n    */\n    static near($pos, bias = 1) {\n        return this.findFrom($pos, bias) || this.findFrom($pos, -bias) || new AllSelection($pos.node(0));\n    }\n    /**\n    Find the cursor or leaf node selection closest to the start of\n    the given document. Will return an\n    [`AllSelection`](https://prosemirror.net/docs/ref/#state.AllSelection) if no valid position\n    exists.\n    */\n    static atStart(doc) {\n        return findSelectionIn(doc, doc, 0, 0, 1) || new AllSelection(doc);\n    }\n    /**\n    Find the cursor or leaf node selection closest to the end of the\n    given document.\n    */\n    static atEnd(doc) {\n        return findSelectionIn(doc, doc, doc.content.size, doc.childCount, -1) || new AllSelection(doc);\n    }\n    /**\n    Deserialize the JSON representation of a selection. Must be\n    implemented for custom classes (as a static class method).\n    */\n    static fromJSON(doc, json) {\n        if (!json || !json.type)\n            throw new RangeError(\"Invalid input for Selection.fromJSON\");\n        let cls = classesById[json.type];\n        if (!cls)\n            throw new RangeError(`No selection type ${json.type} defined`);\n        return cls.fromJSON(doc, json);\n    }\n    /**\n    To be able to deserialize selections from JSON, custom selection\n    classes must register themselves with an ID string, so that they\n    can be disambiguated. Try to pick something that's unlikely to\n    clash with classes from other modules.\n    */\n    static jsonID(id, selectionClass) {\n        if (id in classesById)\n            throw new RangeError(\"Duplicate use of selection JSON ID \" + id);\n        classesById[id] = selectionClass;\n        selectionClass.prototype.jsonID = id;\n        return selectionClass;\n    }\n    /**\n    Get a [bookmark](https://prosemirror.net/docs/ref/#state.SelectionBookmark) for this selection,\n    which is a value that can be mapped without having access to a\n    current document, and later resolved to a real selection for a\n    given document again. (This is used mostly by the history to\n    track and restore old selections.) The default implementation of\n    this method just converts the selection to a text selection and\n    returns the bookmark for that.\n    */\n    getBookmark() {\n        return TextSelection.between(this.$anchor, this.$head).getBookmark();\n    }\n}\nSelection.prototype.visible = true;\n/**\nRepresents a selected range in a document.\n*/\nclass SelectionRange {\n    /**\n    Create a range.\n    */\n    constructor(\n    /**\n    The lower bound of the range.\n    */\n    $from, \n    /**\n    The upper bound of the range.\n    */\n    $to) {\n        this.$from = $from;\n        this.$to = $to;\n    }\n}\nlet warnedAboutTextSelection = false;\nfunction checkTextSelection($pos) {\n    if (!warnedAboutTextSelection && !$pos.parent.inlineContent) {\n        warnedAboutTextSelection = true;\n        console[\"warn\"](\"TextSelection endpoint not pointing into a node with inline content (\" + $pos.parent.type.name + \")\");\n    }\n}\n/**\nA text selection represents a classical editor selection, with a\nhead (the moving side) and anchor (immobile side), both of which\npoint into textblock nodes. It can be empty (a regular cursor\nposition).\n*/\nclass TextSelection extends Selection {\n    /**\n    Construct a text selection between the given points.\n    */\n    constructor($anchor, $head = $anchor) {\n        checkTextSelection($anchor);\n        checkTextSelection($head);\n        super($anchor, $head);\n    }\n    /**\n    Returns a resolved position if this is a cursor selection (an\n    empty text selection), and null otherwise.\n    */\n    get $cursor() { return this.$anchor.pos == this.$head.pos ? this.$head : null; }\n    map(doc, mapping) {\n        let $head = doc.resolve(mapping.map(this.head));\n        if (!$head.parent.inlineContent)\n            return Selection.near($head);\n        let $anchor = doc.resolve(mapping.map(this.anchor));\n        return new TextSelection($anchor.parent.inlineContent ? $anchor : $head, $head);\n    }\n    replace(tr, content = Slice.empty) {\n        super.replace(tr, content);\n        if (content == Slice.empty) {\n            let marks = this.$from.marksAcross(this.$to);\n            if (marks)\n                tr.ensureMarks(marks);\n        }\n    }\n    eq(other) {\n        return other instanceof TextSelection && other.anchor == this.anchor && other.head == this.head;\n    }\n    getBookmark() {\n        return new TextBookmark(this.anchor, this.head);\n    }\n    toJSON() {\n        return { type: \"text\", anchor: this.anchor, head: this.head };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid input for TextSelection.fromJSON\");\n        return new TextSelection(doc.resolve(json.anchor), doc.resolve(json.head));\n    }\n    /**\n    Create a text selection from non-resolved positions.\n    */\n    static create(doc, anchor, head = anchor) {\n        let $anchor = doc.resolve(anchor);\n        return new this($anchor, head == anchor ? $anchor : doc.resolve(head));\n    }\n    /**\n    Return a text selection that spans the given positions or, if\n    they aren't text positions, find a text selection near them.\n    `bias` determines whether the method searches forward (default)\n    or backwards (negative number) first. Will fall back to calling\n    [`Selection.near`](https://prosemirror.net/docs/ref/#state.Selection^near) when the document\n    doesn't contain a valid text position.\n    */\n    static between($anchor, $head, bias) {\n        let dPos = $anchor.pos - $head.pos;\n        if (!bias || dPos)\n            bias = dPos >= 0 ? 1 : -1;\n        if (!$head.parent.inlineContent) {\n            let found = Selection.findFrom($head, bias, true) || Selection.findFrom($head, -bias, true);\n            if (found)\n                $head = found.$head;\n            else\n                return Selection.near($head, bias);\n        }\n        if (!$anchor.parent.inlineContent) {\n            if (dPos == 0) {\n                $anchor = $head;\n            }\n            else {\n                $anchor = (Selection.findFrom($anchor, -bias, true) || Selection.findFrom($anchor, bias, true)).$anchor;\n                if (($anchor.pos < $head.pos) != (dPos < 0))\n                    $anchor = $head;\n            }\n        }\n        return new TextSelection($anchor, $head);\n    }\n}\nSelection.jsonID(\"text\", TextSelection);\nclass TextBookmark {\n    constructor(anchor, head) {\n        this.anchor = anchor;\n        this.head = head;\n    }\n    map(mapping) {\n        return new TextBookmark(mapping.map(this.anchor), mapping.map(this.head));\n    }\n    resolve(doc) {\n        return TextSelection.between(doc.resolve(this.anchor), doc.resolve(this.head));\n    }\n}\n/**\nA node selection is a selection that points at a single node. All\nnodes marked [selectable](https://prosemirror.net/docs/ref/#model.NodeSpec.selectable) can be the\ntarget of a node selection. In such a selection, `from` and `to`\npoint directly before and after the selected node, `anchor` equals\n`from`, and `head` equals `to`..\n*/\nclass NodeSelection extends Selection {\n    /**\n    Create a node selection. Does not verify the validity of its\n    argument.\n    */\n    constructor($pos) {\n        let node = $pos.nodeAfter;\n        let $end = $pos.node(0).resolve($pos.pos + node.nodeSize);\n        super($pos, $end);\n        this.node = node;\n    }\n    map(doc, mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        let $pos = doc.resolve(pos);\n        if (deleted)\n            return Selection.near($pos);\n        return new NodeSelection($pos);\n    }\n    content() {\n        return new Slice(Fragment.from(this.node), 0, 0);\n    }\n    eq(other) {\n        return other instanceof NodeSelection && other.anchor == this.anchor;\n    }\n    toJSON() {\n        return { type: \"node\", anchor: this.anchor };\n    }\n    getBookmark() { return new NodeBookmark(this.anchor); }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\")\n            throw new RangeError(\"Invalid input for NodeSelection.fromJSON\");\n        return new NodeSelection(doc.resolve(json.anchor));\n    }\n    /**\n    Create a node selection from non-resolved positions.\n    */\n    static create(doc, from) {\n        return new NodeSelection(doc.resolve(from));\n    }\n    /**\n    Determines whether the given node may be selected as a node\n    selection.\n    */\n    static isSelectable(node) {\n        return !node.isText && node.type.spec.selectable !== false;\n    }\n}\nNodeSelection.prototype.visible = false;\nSelection.jsonID(\"node\", NodeSelection);\nclass NodeBookmark {\n    constructor(anchor) {\n        this.anchor = anchor;\n    }\n    map(mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        return deleted ? new TextBookmark(pos, pos) : new NodeBookmark(pos);\n    }\n    resolve(doc) {\n        let $pos = doc.resolve(this.anchor), node = $pos.nodeAfter;\n        if (node && NodeSelection.isSelectable(node))\n            return new NodeSelection($pos);\n        return Selection.near($pos);\n    }\n}\n/**\nA selection type that represents selecting the whole document\n(which can not necessarily be expressed with a text selection, when\nthere are for example leaf block nodes at the start or end of the\ndocument).\n*/\nclass AllSelection extends Selection {\n    /**\n    Create an all-selection over the given document.\n    */\n    constructor(doc) {\n        super(doc.resolve(0), doc.resolve(doc.content.size));\n    }\n    replace(tr, content = Slice.empty) {\n        if (content == Slice.empty) {\n            tr.delete(0, tr.doc.content.size);\n            let sel = Selection.atStart(tr.doc);\n            if (!sel.eq(tr.selection))\n                tr.setSelection(sel);\n        }\n        else {\n            super.replace(tr, content);\n        }\n    }\n    toJSON() { return { type: \"all\" }; }\n    /**\n    @internal\n    */\n    static fromJSON(doc) { return new AllSelection(doc); }\n    map(doc) { return new AllSelection(doc); }\n    eq(other) { return other instanceof AllSelection; }\n    getBookmark() { return AllBookmark; }\n}\nSelection.jsonID(\"all\", AllSelection);\nconst AllBookmark = {\n    map() { return this; },\n    resolve(doc) { return new AllSelection(doc); }\n};\n// FIXME we'll need some awareness of text direction when scanning for selections\n// Try to find a selection inside the given node. `pos` points at the\n// position where the search starts. When `text` is true, only return\n// text selections.\nfunction findSelectionIn(doc, node, pos, index, dir, text = false) {\n    if (node.inlineContent)\n        return TextSelection.create(doc, pos);\n    for (let i = index - (dir > 0 ? 0 : 1); dir > 0 ? i < node.childCount : i >= 0; i += dir) {\n        let child = node.child(i);\n        if (!child.isAtom) {\n            let inner = findSelectionIn(doc, child, pos + dir, dir < 0 ? child.childCount : 0, dir, text);\n            if (inner)\n                return inner;\n        }\n        else if (!text && NodeSelection.isSelectable(child)) {\n            return NodeSelection.create(doc, pos - (dir < 0 ? child.nodeSize : 0));\n        }\n        pos += child.nodeSize * dir;\n    }\n    return null;\n}\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n    let last = tr.steps.length - 1;\n    if (last < startLen)\n        return;\n    let step = tr.steps[last];\n    if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep))\n        return;\n    let map = tr.mapping.maps[last], end;\n    map.forEach((_from, _to, _newFrom, newTo) => { if (end == null)\n        end = newTo; });\n    tr.setSelection(Selection.near(tr.doc.resolve(end), bias));\n}\n\nconst UPDATED_SEL = 1, UPDATED_MARKS = 2, UPDATED_SCROLL = 4;\n/**\nAn editor state transaction, which can be applied to a state to\ncreate an updated state. Use\n[`EditorState.tr`](https://prosemirror.net/docs/ref/#state.EditorState.tr) to create an instance.\n\nTransactions track changes to the document (they are a subclass of\n[`Transform`](https://prosemirror.net/docs/ref/#transform.Transform)), but also other state changes,\nlike selection updates and adjustments of the set of [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks). In addition, you can store\nmetadata properties in a transaction, which are extra pieces of\ninformation that client code or plugins can use to describe what a\ntransaction represents, so that they can update their [own\nstate](https://prosemirror.net/docs/ref/#state.StateField) accordingly.\n\nThe [editor view](https://prosemirror.net/docs/ref/#view.EditorView) uses a few metadata\nproperties: it will attach a property `\"pointer\"` with the value\n`true` to selection transactions directly caused by mouse or touch\ninput, a `\"composition\"` property holding an ID identifying the\ncomposition that caused it to transactions caused by composed DOM\ninput, and a `\"uiEvent\"` property of that may be `\"paste\"`,\n`\"cut\"`, or `\"drop\"`.\n*/\nclass Transaction extends Transform {\n    /**\n    @internal\n    */\n    constructor(state) {\n        super(state.doc);\n        // The step count for which the current selection is valid.\n        this.curSelectionFor = 0;\n        // Bitfield to track which aspects of the state were updated by\n        // this transaction.\n        this.updated = 0;\n        // Object used to store metadata properties for the transaction.\n        this.meta = Object.create(null);\n        this.time = Date.now();\n        this.curSelection = state.selection;\n        this.storedMarks = state.storedMarks;\n    }\n    /**\n    The transaction's current selection. This defaults to the editor\n    selection [mapped](https://prosemirror.net/docs/ref/#state.Selection.map) through the steps in the\n    transaction, but can be overwritten with\n    [`setSelection`](https://prosemirror.net/docs/ref/#state.Transaction.setSelection).\n    */\n    get selection() {\n        if (this.curSelectionFor < this.steps.length) {\n            this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor));\n            this.curSelectionFor = this.steps.length;\n        }\n        return this.curSelection;\n    }\n    /**\n    Update the transaction's current selection. Will determine the\n    selection that the editor gets when the transaction is applied.\n    */\n    setSelection(selection) {\n        if (selection.$from.doc != this.doc)\n            throw new RangeError(\"Selection passed to setSelection must point at the current document\");\n        this.curSelection = selection;\n        this.curSelectionFor = this.steps.length;\n        this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS;\n        this.storedMarks = null;\n        return this;\n    }\n    /**\n    Whether the selection was explicitly updated by this transaction.\n    */\n    get selectionSet() {\n        return (this.updated & UPDATED_SEL) > 0;\n    }\n    /**\n    Set the current stored marks.\n    */\n    setStoredMarks(marks) {\n        this.storedMarks = marks;\n        this.updated |= UPDATED_MARKS;\n        return this;\n    }\n    /**\n    Make sure the current stored marks or, if that is null, the marks\n    at the selection, match the given set of marks. Does nothing if\n    this is already the case.\n    */\n    ensureMarks(marks) {\n        if (!Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n            this.setStoredMarks(marks);\n        return this;\n    }\n    /**\n    Add a mark to the set of stored marks.\n    */\n    addStoredMark(mark) {\n        return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Remove a mark or mark type from the set of stored marks.\n    */\n    removeStoredMark(mark) {\n        return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Whether the stored marks were explicitly set for this transaction.\n    */\n    get storedMarksSet() {\n        return (this.updated & UPDATED_MARKS) > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        super.addStep(step, doc);\n        this.updated = this.updated & ~UPDATED_MARKS;\n        this.storedMarks = null;\n    }\n    /**\n    Update the timestamp for the transaction.\n    */\n    setTime(time) {\n        this.time = time;\n        return this;\n    }\n    /**\n    Replace the current selection with the given slice.\n    */\n    replaceSelection(slice) {\n        this.selection.replace(this, slice);\n        return this;\n    }\n    /**\n    Replace the selection with the given node. When `inheritMarks` is\n    true and the content is inline, it inherits the marks from the\n    place where it is inserted.\n    */\n    replaceSelectionWith(node, inheritMarks = true) {\n        let selection = this.selection;\n        if (inheritMarks)\n            node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || Mark.none)));\n        selection.replaceWith(this, node);\n        return this;\n    }\n    /**\n    Delete the selection.\n    */\n    deleteSelection() {\n        this.selection.replace(this);\n        return this;\n    }\n    /**\n    Replace the given range, or the selection if no range is given,\n    with a text node containing the given string.\n    */\n    insertText(text, from, to) {\n        let schema = this.doc.type.schema;\n        if (from == null) {\n            if (!text)\n                return this.deleteSelection();\n            return this.replaceSelectionWith(schema.text(text), true);\n        }\n        else {\n            if (to == null)\n                to = from;\n            if (!text)\n                return this.deleteRange(from, to);\n            let marks = this.storedMarks;\n            if (!marks) {\n                let $from = this.doc.resolve(from);\n                marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to));\n            }\n            this.replaceRangeWith(from, to, schema.text(text, marks));\n            if (!this.selection.empty && this.selection.to == from + text.length)\n                this.setSelection(Selection.near(this.selection.$to));\n            return this;\n        }\n    }\n    /**\n    Store a metadata property in this transaction, keyed either by\n    name or by plugin.\n    */\n    setMeta(key, value) {\n        this.meta[typeof key == \"string\" ? key : key.key] = value;\n        return this;\n    }\n    /**\n    Retrieve a metadata property for a given name or plugin.\n    */\n    getMeta(key) {\n        return this.meta[typeof key == \"string\" ? key : key.key];\n    }\n    /**\n    Returns true if this transaction doesn't contain any metadata,\n    and can thus safely be extended.\n    */\n    get isGeneric() {\n        for (let _ in this.meta)\n            return false;\n        return true;\n    }\n    /**\n    Indicate that the editor should scroll the selection into view\n    when updated to the state produced by this transaction.\n    */\n    scrollIntoView() {\n        this.updated |= UPDATED_SCROLL;\n        return this;\n    }\n    /**\n    True when this transaction has had `scrollIntoView` called on it.\n    */\n    get scrolledIntoView() {\n        return (this.updated & UPDATED_SCROLL) > 0;\n    }\n}\n\nfunction bind(f, self) {\n    return !self || !f ? f : f.bind(self);\n}\nclass FieldDesc {\n    constructor(name, desc, self) {\n        this.name = name;\n        this.init = bind(desc.init, self);\n        this.apply = bind(desc.apply, self);\n    }\n}\nconst baseFields = [\n    new FieldDesc(\"doc\", {\n        init(config) { return config.doc || config.schema.topNodeType.createAndFill(); },\n        apply(tr) { return tr.doc; }\n    }),\n    new FieldDesc(\"selection\", {\n        init(config, instance) { return config.selection || Selection.atStart(instance.doc); },\n        apply(tr) { return tr.selection; }\n    }),\n    new FieldDesc(\"storedMarks\", {\n        init(config) { return config.storedMarks || null; },\n        apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null; }\n    }),\n    new FieldDesc(\"scrollToSelection\", {\n        init() { return 0; },\n        apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev; }\n    })\n];\n// Object wrapping the part of a state object that stays the same\n// across transactions. Stored in the state's `config` property.\nclass Configuration {\n    constructor(schema, plugins) {\n        this.schema = schema;\n        this.plugins = [];\n        this.pluginsByKey = Object.create(null);\n        this.fields = baseFields.slice();\n        if (plugins)\n            plugins.forEach(plugin => {\n                if (this.pluginsByKey[plugin.key])\n                    throw new RangeError(\"Adding different instances of a keyed plugin (\" + plugin.key + \")\");\n                this.plugins.push(plugin);\n                this.pluginsByKey[plugin.key] = plugin;\n                if (plugin.spec.state)\n                    this.fields.push(new FieldDesc(plugin.key, plugin.spec.state, plugin));\n            });\n    }\n}\n/**\nThe state of a ProseMirror editor is represented by an object of\nthis type. A state is a persistent data structure—it isn't\nupdated, but rather a new state value is computed from an old one\nusing the [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) method.\n\nA state holds a number of built-in fields, and plugins can\n[define](https://prosemirror.net/docs/ref/#state.PluginSpec.state) additional fields.\n*/\nclass EditorState {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    config) {\n        this.config = config;\n    }\n    /**\n    The schema of the state's document.\n    */\n    get schema() {\n        return this.config.schema;\n    }\n    /**\n    The plugins that are active in this state.\n    */\n    get plugins() {\n        return this.config.plugins;\n    }\n    /**\n    Apply the given transaction to produce a new state.\n    */\n    apply(tr) {\n        return this.applyTransaction(tr).state;\n    }\n    /**\n    @internal\n    */\n    filterTransaction(tr, ignore = -1) {\n        for (let i = 0; i < this.config.plugins.length; i++)\n            if (i != ignore) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.filterTransaction && !plugin.spec.filterTransaction.call(plugin, tr, this))\n                    return false;\n            }\n        return true;\n    }\n    /**\n    Verbose variant of [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) that\n    returns the precise transactions that were applied (which might\n    be influenced by the [transaction\n    hooks](https://prosemirror.net/docs/ref/#state.PluginSpec.filterTransaction) of\n    plugins) along with the new state.\n    */\n    applyTransaction(rootTr) {\n        if (!this.filterTransaction(rootTr))\n            return { state: this, transactions: [] };\n        let trs = [rootTr], newState = this.applyInner(rootTr), seen = null;\n        // This loop repeatedly gives plugins a chance to respond to\n        // transactions as new transactions are added, making sure to only\n        // pass the transactions the plugin did not see before.\n        for (;;) {\n            let haveNew = false;\n            for (let i = 0; i < this.config.plugins.length; i++) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.appendTransaction) {\n                    let n = seen ? seen[i].n : 0, oldState = seen ? seen[i].state : this;\n                    let tr = n < trs.length &&\n                        plugin.spec.appendTransaction.call(plugin, n ? trs.slice(n) : trs, oldState, newState);\n                    if (tr && newState.filterTransaction(tr, i)) {\n                        tr.setMeta(\"appendedTransaction\", rootTr);\n                        if (!seen) {\n                            seen = [];\n                            for (let j = 0; j < this.config.plugins.length; j++)\n                                seen.push(j < i ? { state: newState, n: trs.length } : { state: this, n: 0 });\n                        }\n                        trs.push(tr);\n                        newState = newState.applyInner(tr);\n                        haveNew = true;\n                    }\n                    if (seen)\n                        seen[i] = { state: newState, n: trs.length };\n                }\n            }\n            if (!haveNew)\n                return { state: newState, transactions: trs };\n        }\n    }\n    /**\n    @internal\n    */\n    applyInner(tr) {\n        if (!tr.before.eq(this.doc))\n            throw new RangeError(\"Applying a mismatched transaction\");\n        let newInstance = new EditorState(this.config), fields = this.config.fields;\n        for (let i = 0; i < fields.length; i++) {\n            let field = fields[i];\n            newInstance[field.name] = field.apply(tr, this[field.name], this, newInstance);\n        }\n        return newInstance;\n    }\n    /**\n    Accessor that constructs and returns a new [transaction](https://prosemirror.net/docs/ref/#state.Transaction) from this state.\n    */\n    get tr() { return new Transaction(this); }\n    /**\n    Create a new state.\n    */\n    static create(config) {\n        let $config = new Configuration(config.doc ? config.doc.type.schema : config.schema, config.plugins);\n        let instance = new EditorState($config);\n        for (let i = 0; i < $config.fields.length; i++)\n            instance[$config.fields[i].name] = $config.fields[i].init(config, instance);\n        return instance;\n    }\n    /**\n    Create a new state based on this one, but with an adjusted set\n    of active plugins. State fields that exist in both sets of\n    plugins are kept unchanged. Those that no longer exist are\n    dropped, and those that are new are initialized using their\n    [`init`](https://prosemirror.net/docs/ref/#state.StateField.init) method, passing in the new\n    configuration object..\n    */\n    reconfigure(config) {\n        let $config = new Configuration(this.schema, config.plugins);\n        let fields = $config.fields, instance = new EditorState($config);\n        for (let i = 0; i < fields.length; i++) {\n            let name = fields[i].name;\n            instance[name] = this.hasOwnProperty(name) ? this[name] : fields[i].init(config, instance);\n        }\n        return instance;\n    }\n    /**\n    Serialize this state to JSON. If you want to serialize the state\n    of plugins, pass an object mapping property names to use in the\n    resulting JSON object to plugin objects. The argument may also be\n    a string or number, in which case it is ignored, to support the\n    way `JSON.stringify` calls `toString` methods.\n    */\n    toJSON(pluginFields) {\n        let result = { doc: this.doc.toJSON(), selection: this.selection.toJSON() };\n        if (this.storedMarks)\n            result.storedMarks = this.storedMarks.map(m => m.toJSON());\n        if (pluginFields && typeof pluginFields == 'object')\n            for (let prop in pluginFields) {\n                if (prop == \"doc\" || prop == \"selection\")\n                    throw new RangeError(\"The JSON fields `doc` and `selection` are reserved\");\n                let plugin = pluginFields[prop], state = plugin.spec.state;\n                if (state && state.toJSON)\n                    result[prop] = state.toJSON.call(plugin, this[plugin.key]);\n            }\n        return result;\n    }\n    /**\n    Deserialize a JSON representation of a state. `config` should\n    have at least a `schema` field, and should contain array of\n    plugins to initialize the state with. `pluginFields` can be used\n    to deserialize the state of plugins, by associating plugin\n    instances with the property names they use in the JSON object.\n    */\n    static fromJSON(config, json, pluginFields) {\n        if (!json)\n            throw new RangeError(\"Invalid input for EditorState.fromJSON\");\n        if (!config.schema)\n            throw new RangeError(\"Required config field 'schema' missing\");\n        let $config = new Configuration(config.schema, config.plugins);\n        let instance = new EditorState($config);\n        $config.fields.forEach(field => {\n            if (field.name == \"doc\") {\n                instance.doc = Node.fromJSON(config.schema, json.doc);\n            }\n            else if (field.name == \"selection\") {\n                instance.selection = Selection.fromJSON(instance.doc, json.selection);\n            }\n            else if (field.name == \"storedMarks\") {\n                if (json.storedMarks)\n                    instance.storedMarks = json.storedMarks.map(config.schema.markFromJSON);\n            }\n            else {\n                if (pluginFields)\n                    for (let prop in pluginFields) {\n                        let plugin = pluginFields[prop], state = plugin.spec.state;\n                        if (plugin.key == field.name && state && state.fromJSON &&\n                            Object.prototype.hasOwnProperty.call(json, prop)) {\n                            instance[field.name] = state.fromJSON.call(plugin, config, json[prop], instance);\n                            return;\n                        }\n                    }\n                instance[field.name] = field.init(config, instance);\n            }\n        });\n        return instance;\n    }\n}\n\nfunction bindProps(obj, self, target) {\n    for (let prop in obj) {\n        let val = obj[prop];\n        if (val instanceof Function)\n            val = val.bind(self);\n        else if (prop == \"handleDOMEvents\")\n            val = bindProps(val, self, {});\n        target[prop] = val;\n    }\n    return target;\n}\n/**\nPlugins bundle functionality that can be added to an editor.\nThey are part of the [editor state](https://prosemirror.net/docs/ref/#state.EditorState) and\nmay influence that state and the view that contains it.\n*/\nclass Plugin {\n    /**\n    Create a plugin.\n    */\n    constructor(\n    /**\n    The plugin's [spec object](https://prosemirror.net/docs/ref/#state.PluginSpec).\n    */\n    spec) {\n        this.spec = spec;\n        /**\n        The [props](https://prosemirror.net/docs/ref/#view.EditorProps) exported by this plugin.\n        */\n        this.props = {};\n        if (spec.props)\n            bindProps(spec.props, this, this.props);\n        this.key = spec.key ? spec.key.key : createKey(\"plugin\");\n    }\n    /**\n    Extract the plugin's state field from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\nconst keys = Object.create(null);\nfunction createKey(name) {\n    if (name in keys)\n        return name + \"$\" + ++keys[name];\n    keys[name] = 0;\n    return name + \"$\";\n}\n/**\nA key is used to [tag](https://prosemirror.net/docs/ref/#state.PluginSpec.key) plugins in a way\nthat makes it possible to find them, given an editor state.\nAssigning a key does mean only one plugin of that type can be\nactive in a state.\n*/\nclass PluginKey {\n    /**\n    Create a plugin key.\n    */\n    constructor(name = \"key\") { this.key = createKey(name); }\n    /**\n    Get the active plugin with this key, if any, from an editor\n    state.\n    */\n    get(state) { return state.config.pluginsByKey[this.key]; }\n    /**\n    Get the plugin's state from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\n\nexport { AllSelection, EditorState, NodeSelection, Plugin, PluginKey, Selection, SelectionRange, TextSelection, Transaction };\n","import { liftTarget, replaceStep, ReplaceStep, canJoin, joinPoint, canSplit, ReplaceAroundStep, findWrapping } from 'prosemirror-transform';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { NodeSelection, Selection, TextSelection, AllSelection, SelectionRange } from 'prosemirror-state';\n\n/**\nDelete the selection, if there is one.\n*/\nconst deleteSelection = (state, dispatch) => {\n    if (state.selection.empty)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.deleteSelection().scrollIntoView());\n    return true;\n};\nfunction atBlockStart(state, view) {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"backward\", state)\n        : $cursor.parentOffset > 0))\n        return null;\n    return $cursor;\n}\n/**\nIf the selection is empty and at the start of a textblock, try to\nreduce the distance between that block and the one before it—if\nthere's a block directly before it that can be joined, join them.\nIf not, try to move the selected block closer to the next one in\nthe document structure by lifting it out of its parent or moving it\ninto a parent of the previous block. Will use the view for accurate\n(bidi-aware) start-of-textblock detection if given.\n*/\nconst joinBackward = (state, dispatch, view) => {\n    let $cursor = atBlockStart(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutBefore($cursor);\n    // If there is no node before this, try to lift\n    if (!$cut) {\n        let range = $cursor.blockRange(), target = range && liftTarget(range);\n        if (target == null)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    let before = $cut.nodeBefore;\n    // Apply the joining algorithm\n    if (deleteBarrier(state, $cut, dispatch, -1))\n        return true;\n    // If the node below has no content and the node above is\n    // selectable, delete the node below and select the one above.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(before, \"end\") || NodeSelection.isSelectable(before))) {\n        for (let depth = $cursor.depth;; depth--) {\n            let delStep = replaceStep(state.doc, $cursor.before(depth), $cursor.after(depth), Slice.empty);\n            if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n                if (dispatch) {\n                    let tr = state.tr.step(delStep);\n                    tr.setSelection(textblockAt(before, \"end\")\n                        ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos, -1)), -1)\n                        : NodeSelection.create(tr.doc, $cut.pos - before.nodeSize));\n                    dispatch(tr.scrollIntoView());\n                }\n                return true;\n            }\n            if (depth == 1 || $cursor.node(depth - 1).childCount > 1)\n                break;\n        }\n    }\n    // If the node before is an atom, delete it\n    if (before.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos - before.nodeSize, $cut.pos).scrollIntoView());\n        return true;\n    }\n    return false;\n};\n/**\nA more limited form of [`joinBackward`](https://prosemirror.net/docs/ref/#commands.joinBackward)\nthat only tries to join the current textblock to the one before\nit, if the cursor is at the start of a textblock.\n*/\nconst joinTextblockBackward = (state, dispatch, view) => {\n    let $cursor = atBlockStart(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutBefore($cursor);\n    return $cut ? joinTextblocksAround(state, $cut, dispatch) : false;\n};\n/**\nA more limited form of [`joinForward`](https://prosemirror.net/docs/ref/#commands.joinForward)\nthat only tries to join the current textblock to the one after\nit, if the cursor is at the end of a textblock.\n*/\nconst joinTextblockForward = (state, dispatch, view) => {\n    let $cursor = atBlockEnd(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutAfter($cursor);\n    return $cut ? joinTextblocksAround(state, $cut, dispatch) : false;\n};\nfunction joinTextblocksAround(state, $cut, dispatch) {\n    let before = $cut.nodeBefore, beforeText = before, beforePos = $cut.pos - 1;\n    for (; !beforeText.isTextblock; beforePos--) {\n        if (beforeText.type.spec.isolating)\n            return false;\n        let child = beforeText.lastChild;\n        if (!child)\n            return false;\n        beforeText = child;\n    }\n    let after = $cut.nodeAfter, afterText = after, afterPos = $cut.pos + 1;\n    for (; !afterText.isTextblock; afterPos++) {\n        if (afterText.type.spec.isolating)\n            return false;\n        let child = afterText.firstChild;\n        if (!child)\n            return false;\n        afterText = child;\n    }\n    let step = replaceStep(state.doc, beforePos, afterPos, Slice.empty);\n    if (!step || step.from != beforePos ||\n        step instanceof ReplaceStep && step.slice.size >= afterPos - beforePos)\n        return false;\n    if (dispatch) {\n        let tr = state.tr.step(step);\n        tr.setSelection(TextSelection.create(tr.doc, beforePos));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n}\nfunction textblockAt(node, side, only = false) {\n    for (let scan = node; scan; scan = (side == \"start\" ? scan.firstChild : scan.lastChild)) {\n        if (scan.isTextblock)\n            return true;\n        if (only && scan.childCount != 1)\n            return false;\n    }\n    return false;\n}\n/**\nWhen the selection is empty and at the start of a textblock, select\nthe node before that textblock, if possible. This is intended to be\nbound to keys like backspace, after\n[`joinBackward`](https://prosemirror.net/docs/ref/#commands.joinBackward) or other deleting\ncommands, as a fall-back behavior when the schema doesn't allow\ndeletion at the selected point.\n*/\nconst selectNodeBackward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"backward\", state) : $head.parentOffset > 0)\n            return false;\n        $cut = findCutBefore($head);\n    }\n    let node = $cut && $cut.nodeBefore;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos - node.nodeSize)).scrollIntoView());\n    return true;\n};\nfunction findCutBefore($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            if ($pos.index(i) > 0)\n                return $pos.doc.resolve($pos.before(i + 1));\n            if ($pos.node(i).type.spec.isolating)\n                break;\n        }\n    return null;\n}\nfunction atBlockEnd(state, view) {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"forward\", state)\n        : $cursor.parentOffset < $cursor.parent.content.size))\n        return null;\n    return $cursor;\n}\n/**\nIf the selection is empty and the cursor is at the end of a\ntextblock, try to reduce or remove the boundary between that block\nand the one after it, either by joining them or by moving the other\nblock closer to this one in the tree structure. Will use the view\nfor accurate start-of-textblock detection if given.\n*/\nconst joinForward = (state, dispatch, view) => {\n    let $cursor = atBlockEnd(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutAfter($cursor);\n    // If there is no node after this, there's nothing to do\n    if (!$cut)\n        return false;\n    let after = $cut.nodeAfter;\n    // Try the joining algorithm\n    if (deleteBarrier(state, $cut, dispatch, 1))\n        return true;\n    // If the node above has no content and the node below is\n    // selectable, delete the node above and select the one below.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(after, \"start\") || NodeSelection.isSelectable(after))) {\n        let delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty);\n        if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n            if (dispatch) {\n                let tr = state.tr.step(delStep);\n                tr.setSelection(textblockAt(after, \"start\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos)), 1)\n                    : NodeSelection.create(tr.doc, tr.mapping.map($cut.pos)));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    // If the next node is an atom, delete it\n    if (after.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos, $cut.pos + after.nodeSize).scrollIntoView());\n        return true;\n    }\n    return false;\n};\n/**\nWhen the selection is empty and at the end of a textblock, select\nthe node coming after that textblock, if possible. This is intended\nto be bound to keys like delete, after\n[`joinForward`](https://prosemirror.net/docs/ref/#commands.joinForward) and similar deleting\ncommands, to provide a fall-back behavior when the schema doesn't\nallow deletion at the selected point.\n*/\nconst selectNodeForward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"forward\", state) : $head.parentOffset < $head.parent.content.size)\n            return false;\n        $cut = findCutAfter($head);\n    }\n    let node = $cut && $cut.nodeAfter;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos)).scrollIntoView());\n    return true;\n};\nfunction findCutAfter($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            let parent = $pos.node(i);\n            if ($pos.index(i) + 1 < parent.childCount)\n                return $pos.doc.resolve($pos.after(i + 1));\n            if (parent.type.spec.isolating)\n                break;\n        }\n    return null;\n}\n/**\nJoin the selected block or, if there is a text selection, the\nclosest ancestor block of the selection that can be joined, with\nthe sibling above it.\n*/\nconst joinUp = (state, dispatch) => {\n    let sel = state.selection, nodeSel = sel instanceof NodeSelection, point;\n    if (nodeSel) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.from))\n            return false;\n        point = sel.from;\n    }\n    else {\n        point = joinPoint(state.doc, sel.from, -1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch) {\n        let tr = state.tr.join(point);\n        if (nodeSel)\n            tr.setSelection(NodeSelection.create(tr.doc, point - state.doc.resolve(point).nodeBefore.nodeSize));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nJoin the selected block, or the closest ancestor of the selection\nthat can be joined, with the sibling after it.\n*/\nconst joinDown = (state, dispatch) => {\n    let sel = state.selection, point;\n    if (sel instanceof NodeSelection) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.to))\n            return false;\n        point = sel.to;\n    }\n    else {\n        point = joinPoint(state.doc, sel.to, 1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch)\n        dispatch(state.tr.join(point).scrollIntoView());\n    return true;\n};\n/**\nLift the selected block, or the closest ancestor block of the\nselection that can be lifted, out of its parent node.\n*/\nconst lift = (state, dispatch) => {\n    let { $from, $to } = state.selection;\n    let range = $from.blockRange($to), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nIf the selection is in a node whose type has a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, replace the\nselection with a newline character.\n*/\nconst newlineInCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.insertText(\"\\n\").scrollIntoView());\n    return true;\n};\nfunction defaultBlockAt(match) {\n    for (let i = 0; i < match.edgeCount; i++) {\n        let { type } = match.edge(i);\n        if (type.isTextblock && !type.hasRequiredAttrs())\n            return type;\n    }\n    return null;\n}\n/**\nWhen the selection is in a node with a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, create a\ndefault block after the code block, and move the cursor there.\n*/\nconst exitCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    let above = $head.node(-1), after = $head.indexAfter(-1), type = defaultBlockAt(above.contentMatchAt(after));\n    if (!type || !above.canReplaceWith(after, after, type))\n        return false;\n    if (dispatch) {\n        let pos = $head.after(), tr = state.tr.replaceWith(pos, pos, type.createAndFill());\n        tr.setSelection(Selection.near(tr.doc.resolve(pos), 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf a block node is selected, create an empty paragraph before (if\nit is its parent's first child) or after it.\n*/\nconst createParagraphNear = (state, dispatch) => {\n    let sel = state.selection, { $from, $to } = sel;\n    if (sel instanceof AllSelection || $from.parent.inlineContent || $to.parent.inlineContent)\n        return false;\n    let type = defaultBlockAt($to.parent.contentMatchAt($to.indexAfter()));\n    if (!type || !type.isTextblock)\n        return false;\n    if (dispatch) {\n        let side = (!$from.parentOffset && $to.index() < $to.parent.childCount ? $from : $to).pos;\n        let tr = state.tr.insert(side, type.createAndFill());\n        tr.setSelection(TextSelection.create(tr.doc, side + 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf the cursor is in an empty textblock that can be lifted, lift the\nblock.\n*/\nconst liftEmptyBlock = (state, dispatch) => {\n    let { $cursor } = state.selection;\n    if (!$cursor || $cursor.parent.content.size)\n        return false;\n    if ($cursor.depth > 1 && $cursor.after() != $cursor.end(-1)) {\n        let before = $cursor.before();\n        if (canSplit(state.doc, before)) {\n            if (dispatch)\n                dispatch(state.tr.split(before).scrollIntoView());\n            return true;\n        }\n    }\n    let range = $cursor.blockRange(), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nCreate a variant of [`splitBlock`](https://prosemirror.net/docs/ref/#commands.splitBlock) that uses\na custom function to determine the type of the newly split off block.\n*/\nfunction splitBlockAs(splitNode) {\n    return (state, dispatch) => {\n        let { $from, $to } = state.selection;\n        if (state.selection instanceof NodeSelection && state.selection.node.isBlock) {\n            if (!$from.parentOffset || !canSplit(state.doc, $from.pos))\n                return false;\n            if (dispatch)\n                dispatch(state.tr.split($from.pos).scrollIntoView());\n            return true;\n        }\n        if (!$from.depth)\n            return false;\n        let types = [];\n        let splitDepth, deflt, atEnd = false, atStart = false;\n        for (let d = $from.depth;; d--) {\n            let node = $from.node(d);\n            if (node.isBlock) {\n                atEnd = $from.end(d) == $from.pos + ($from.depth - d);\n                atStart = $from.start(d) == $from.pos - ($from.depth - d);\n                deflt = defaultBlockAt($from.node(d - 1).contentMatchAt($from.indexAfter(d - 1)));\n                let splitType = splitNode && splitNode($to.parent, atEnd, $from);\n                types.unshift(splitType || (atEnd && deflt ? { type: deflt } : null));\n                splitDepth = d;\n                break;\n            }\n            else {\n                if (d == 1)\n                    return false;\n                types.unshift(null);\n            }\n        }\n        let tr = state.tr;\n        if (state.selection instanceof TextSelection || state.selection instanceof AllSelection)\n            tr.deleteSelection();\n        let splitPos = tr.mapping.map($from.pos);\n        let can = canSplit(tr.doc, splitPos, types.length, types);\n        if (!can) {\n            types[0] = deflt ? { type: deflt } : null;\n            can = canSplit(tr.doc, splitPos, types.length, types);\n        }\n        if (!can)\n            return false;\n        tr.split(splitPos, types.length, types);\n        if (!atEnd && atStart && $from.node(splitDepth).type != deflt) {\n            let first = tr.mapping.map($from.before(splitDepth)), $first = tr.doc.resolve(first);\n            if (deflt && $from.node(splitDepth - 1).canReplaceWith($first.index(), $first.index() + 1, deflt))\n                tr.setNodeMarkup(tr.mapping.map($from.before(splitDepth)), deflt);\n        }\n        if (dispatch)\n            dispatch(tr.scrollIntoView());\n        return true;\n    };\n}\n/**\nSplit the parent block of the selection. If the selection is a text\nselection, also delete its content.\n*/\nconst splitBlock = splitBlockAs();\n/**\nActs like [`splitBlock`](https://prosemirror.net/docs/ref/#commands.splitBlock), but without\nresetting the set of active marks at the cursor.\n*/\nconst splitBlockKeepMarks = (state, dispatch) => {\n    return splitBlock(state, dispatch && (tr => {\n        let marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\n        if (marks)\n            tr.ensureMarks(marks);\n        dispatch(tr);\n    }));\n};\n/**\nMove the selection to the node wrapping the current selection, if\nany. (Will not select the document node.)\n*/\nconst selectParentNode = (state, dispatch) => {\n    let { $from, to } = state.selection, pos;\n    let same = $from.sharedDepth(to);\n    if (same == 0)\n        return false;\n    pos = $from.before(same);\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, pos)));\n    return true;\n};\n/**\nSelect the whole document.\n*/\nconst selectAll = (state, dispatch) => {\n    if (dispatch)\n        dispatch(state.tr.setSelection(new AllSelection(state.doc)));\n    return true;\n};\nfunction joinMaybeClear(state, $pos, dispatch) {\n    let before = $pos.nodeBefore, after = $pos.nodeAfter, index = $pos.index();\n    if (!before || !after || !before.type.compatibleContent(after.type))\n        return false;\n    if (!before.content.size && $pos.parent.canReplace(index - 1, index)) {\n        if (dispatch)\n            dispatch(state.tr.delete($pos.pos - before.nodeSize, $pos.pos).scrollIntoView());\n        return true;\n    }\n    if (!$pos.parent.canReplace(index, index + 1) || !(after.isTextblock || canJoin(state.doc, $pos.pos)))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.join($pos.pos).scrollIntoView());\n    return true;\n}\nfunction deleteBarrier(state, $cut, dispatch, dir) {\n    let before = $cut.nodeBefore, after = $cut.nodeAfter, conn, match;\n    let isolated = before.type.spec.isolating || after.type.spec.isolating;\n    if (!isolated && joinMaybeClear(state, $cut, dispatch))\n        return true;\n    let canDelAfter = !isolated && $cut.parent.canReplace($cut.index(), $cut.index() + 1);\n    if (canDelAfter &&\n        (conn = (match = before.contentMatchAt(before.childCount)).findWrapping(after.type)) &&\n        match.matchType(conn[0] || after.type).validEnd) {\n        if (dispatch) {\n            let end = $cut.pos + after.nodeSize, wrap = Fragment.empty;\n            for (let i = conn.length - 1; i >= 0; i--)\n                wrap = Fragment.from(conn[i].create(null, wrap));\n            wrap = Fragment.from(before.copy(wrap));\n            let tr = state.tr.step(new ReplaceAroundStep($cut.pos - 1, end, $cut.pos, end, new Slice(wrap, 1, 0), conn.length, true));\n            let $joinAt = tr.doc.resolve(end + 2 * conn.length);\n            if ($joinAt.nodeAfter && $joinAt.nodeAfter.type == before.type &&\n                canJoin(tr.doc, $joinAt.pos))\n                tr.join($joinAt.pos);\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    }\n    let selAfter = after.type.spec.isolating || (dir > 0 && isolated) ? null : Selection.findFrom($cut, 1);\n    let range = selAfter && selAfter.$from.blockRange(selAfter.$to), target = range && liftTarget(range);\n    if (target != null && target >= $cut.depth) {\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    if (canDelAfter && textblockAt(after, \"start\", true) && textblockAt(before, \"end\")) {\n        let at = before, wrap = [];\n        for (;;) {\n            wrap.push(at);\n            if (at.isTextblock)\n                break;\n            at = at.lastChild;\n        }\n        let afterText = after, afterDepth = 1;\n        for (; !afterText.isTextblock; afterText = afterText.firstChild)\n            afterDepth++;\n        if (at.canReplace(at.childCount, at.childCount, afterText.content)) {\n            if (dispatch) {\n                let end = Fragment.empty;\n                for (let i = wrap.length - 1; i >= 0; i--)\n                    end = Fragment.from(wrap[i].copy(end));\n                let tr = state.tr.step(new ReplaceAroundStep($cut.pos - wrap.length, $cut.pos + after.nodeSize, $cut.pos + afterDepth, $cut.pos + after.nodeSize - afterDepth, new Slice(end, wrap.length, 0), 0, true));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction selectTextblockSide(side) {\n    return function (state, dispatch) {\n        let sel = state.selection, $pos = side < 0 ? sel.$from : sel.$to;\n        let depth = $pos.depth;\n        while ($pos.node(depth).isInline) {\n            if (!depth)\n                return false;\n            depth--;\n        }\n        if (!$pos.node(depth).isTextblock)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.setSelection(TextSelection.create(state.doc, side < 0 ? $pos.start(depth) : $pos.end(depth))));\n        return true;\n    };\n}\n/**\nMoves the cursor to the start of current text block.\n*/\nconst selectTextblockStart = selectTextblockSide(-1);\n/**\nMoves the cursor to the end of current text block.\n*/\nconst selectTextblockEnd = selectTextblockSide(1);\n// Parameterized commands\n/**\nWrap the selection in a node of the given type with the given\nattributes.\n*/\nfunction wrapIn(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to), wrapping = range && findWrapping(range, nodeType, attrs);\n        if (!wrapping)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.wrap(range, wrapping).scrollIntoView());\n        return true;\n    };\n}\n/**\nReturns a command that tries to set the selected textblocks to the\ngiven node type with the given attributes.\n*/\nfunction setBlockType(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let applicable = false;\n        for (let i = 0; i < state.selection.ranges.length && !applicable; i++) {\n            let { $from: { pos: from }, $to: { pos: to } } = state.selection.ranges[i];\n            state.doc.nodesBetween(from, to, (node, pos) => {\n                if (applicable)\n                    return false;\n                if (!node.isTextblock || node.hasMarkup(nodeType, attrs))\n                    return;\n                if (node.type == nodeType) {\n                    applicable = true;\n                }\n                else {\n                    let $pos = state.doc.resolve(pos), index = $pos.index();\n                    applicable = $pos.parent.canReplaceWith(index, index + 1, nodeType);\n                }\n            });\n        }\n        if (!applicable)\n            return false;\n        if (dispatch) {\n            let tr = state.tr;\n            for (let i = 0; i < state.selection.ranges.length; i++) {\n                let { $from: { pos: from }, $to: { pos: to } } = state.selection.ranges[i];\n                tr.setBlockType(from, to, nodeType, attrs);\n            }\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    };\n}\nfunction markApplies(doc, ranges, type, enterAtoms) {\n    for (let i = 0; i < ranges.length; i++) {\n        let { $from, $to } = ranges[i];\n        let can = $from.depth == 0 ? doc.inlineContent && doc.type.allowsMarkType(type) : false;\n        doc.nodesBetween($from.pos, $to.pos, (node, pos) => {\n            if (can || !enterAtoms && node.isAtom && node.isInline && pos >= $from.pos && pos + node.nodeSize <= $to.pos)\n                return false;\n            can = node.inlineContent && node.type.allowsMarkType(type);\n        });\n        if (can)\n            return true;\n    }\n    return false;\n}\nfunction removeInlineAtoms(ranges) {\n    let result = [];\n    for (let i = 0; i < ranges.length; i++) {\n        let { $from, $to } = ranges[i];\n        $from.doc.nodesBetween($from.pos, $to.pos, (node, pos) => {\n            if (node.isAtom && node.content.size && node.isInline && pos >= $from.pos && pos + node.nodeSize <= $to.pos) {\n                if (pos + 1 > $from.pos)\n                    result.push(new SelectionRange($from, $from.doc.resolve(pos + 1)));\n                $from = $from.doc.resolve(pos + 1 + node.content.size);\n                return false;\n            }\n        });\n        if ($from.pos < $to.pos)\n            result.push(new SelectionRange($from, $to));\n    }\n    return result;\n}\n/**\nCreate a command function that toggles the given mark with the\ngiven attributes. Will return `false` when the current selection\ndoesn't support that mark. This will remove the mark if any marks\nof that type exist in the selection, or add it otherwise. If the\nselection is empty, this applies to the [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks) instead of a range of the\ndocument.\n*/\nfunction toggleMark(markType, attrs = null, options) {\n    let removeWhenPresent = (options && options.removeWhenPresent) !== false;\n    let enterAtoms = (options && options.enterInlineAtoms) !== false;\n    let dropSpace = !(options && options.includeWhitespace);\n    return function (state, dispatch) {\n        let { empty, $cursor, ranges } = state.selection;\n        if ((empty && !$cursor) || !markApplies(state.doc, ranges, markType, enterAtoms))\n            return false;\n        if (dispatch) {\n            if ($cursor) {\n                if (markType.isInSet(state.storedMarks || $cursor.marks()))\n                    dispatch(state.tr.removeStoredMark(markType));\n                else\n                    dispatch(state.tr.addStoredMark(markType.create(attrs)));\n            }\n            else {\n                let add, tr = state.tr;\n                if (!enterAtoms)\n                    ranges = removeInlineAtoms(ranges);\n                if (removeWhenPresent) {\n                    add = !ranges.some(r => state.doc.rangeHasMark(r.$from.pos, r.$to.pos, markType));\n                }\n                else {\n                    add = !ranges.every(r => {\n                        let missing = false;\n                        tr.doc.nodesBetween(r.$from.pos, r.$to.pos, (node, pos, parent) => {\n                            if (missing)\n                                return false;\n                            missing = !markType.isInSet(node.marks) && !!parent && parent.type.allowsMarkType(markType) &&\n                                !(node.isText && /^\\s*$/.test(node.textBetween(Math.max(0, r.$from.pos - pos), Math.min(node.nodeSize, r.$to.pos - pos))));\n                        });\n                        return !missing;\n                    });\n                }\n                for (let i = 0; i < ranges.length; i++) {\n                    let { $from, $to } = ranges[i];\n                    if (!add) {\n                        tr.removeMark($from.pos, $to.pos, markType);\n                    }\n                    else {\n                        let from = $from.pos, to = $to.pos, start = $from.nodeAfter, end = $to.nodeBefore;\n                        let spaceStart = dropSpace && start && start.isText ? /^\\s*/.exec(start.text)[0].length : 0;\n                        let spaceEnd = dropSpace && end && end.isText ? /\\s*$/.exec(end.text)[0].length : 0;\n                        if (from + spaceStart < to) {\n                            from += spaceStart;\n                            to -= spaceEnd;\n                        }\n                        tr.addMark(from, to, markType.create(attrs));\n                    }\n                }\n                dispatch(tr.scrollIntoView());\n            }\n        }\n        return true;\n    };\n}\nfunction wrapDispatchForJoin(dispatch, isJoinable) {\n    return (tr) => {\n        if (!tr.isGeneric)\n            return dispatch(tr);\n        let ranges = [];\n        for (let i = 0; i < tr.mapping.maps.length; i++) {\n            let map = tr.mapping.maps[i];\n            for (let j = 0; j < ranges.length; j++)\n                ranges[j] = map.map(ranges[j]);\n            map.forEach((_s, _e, from, to) => ranges.push(from, to));\n        }\n        // Figure out which joinable points exist inside those ranges,\n        // by checking all node boundaries in their parent nodes.\n        let joinable = [];\n        for (let i = 0; i < ranges.length; i += 2) {\n            let from = ranges[i], to = ranges[i + 1];\n            let $from = tr.doc.resolve(from), depth = $from.sharedDepth(to), parent = $from.node(depth);\n            for (let index = $from.indexAfter(depth), pos = $from.after(depth + 1); pos <= to; ++index) {\n                let after = parent.maybeChild(index);\n                if (!after)\n                    break;\n                if (index && joinable.indexOf(pos) == -1) {\n                    let before = parent.child(index - 1);\n                    if (before.type == after.type && isJoinable(before, after))\n                        joinable.push(pos);\n                }\n                pos += after.nodeSize;\n            }\n        }\n        // Join the joinable points\n        joinable.sort((a, b) => a - b);\n        for (let i = joinable.length - 1; i >= 0; i--) {\n            if (canJoin(tr.doc, joinable[i]))\n                tr.join(joinable[i]);\n        }\n        dispatch(tr);\n    };\n}\n/**\nWrap a command so that, when it produces a transform that causes\ntwo joinable nodes to end up next to each other, those are joined.\nNodes are considered joinable when they are of the same type and\nwhen the `isJoinable` predicate returns true for them or, if an\narray of strings was passed, if their node type name is in that\narray.\n*/\nfunction autoJoin(command, isJoinable) {\n    let canJoin = Array.isArray(isJoinable) ? (node) => isJoinable.indexOf(node.type.name) > -1\n        : isJoinable;\n    return (state, dispatch, view) => command(state, dispatch && wrapDispatchForJoin(dispatch, canJoin), view);\n}\n/**\nCombine a number of command functions into a single function (which\ncalls them one by one until one returns true).\n*/\nfunction chainCommands(...commands) {\n    return function (state, dispatch, view) {\n        for (let i = 0; i < commands.length; i++)\n            if (commands[i](state, dispatch, view))\n                return true;\n        return false;\n    };\n}\nlet backspace = chainCommands(deleteSelection, joinBackward, selectNodeBackward);\nlet del = chainCommands(deleteSelection, joinForward, selectNodeForward);\n/**\nA basic keymap containing bindings not specific to any schema.\nBinds the following keys (when multiple commands are listed, they\nare chained with [`chainCommands`](https://prosemirror.net/docs/ref/#commands.chainCommands)):\n\n* **Enter** to `newlineInCode`, `createParagraphNear`, `liftEmptyBlock`, `splitBlock`\n* **Mod-Enter** to `exitCode`\n* **Backspace** and **Mod-Backspace** to `deleteSelection`, `joinBackward`, `selectNodeBackward`\n* **Delete** and **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-a** to `selectAll`\n*/\nconst pcBaseKeymap = {\n    \"Enter\": chainCommands(newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock),\n    \"Mod-Enter\": exitCode,\n    \"Backspace\": backspace,\n    \"Mod-Backspace\": backspace,\n    \"Shift-Backspace\": backspace,\n    \"Delete\": del,\n    \"Mod-Delete\": del,\n    \"Mod-a\": selectAll\n};\n/**\nA copy of `pcBaseKeymap` that also binds **Ctrl-h** like Backspace,\n**Ctrl-d** like Delete, **Alt-Backspace** like Ctrl-Backspace, and\n**Ctrl-Alt-Backspace**, **Alt-Delete**, and **Alt-d** like\nCtrl-Delete.\n*/\nconst macBaseKeymap = {\n    \"Ctrl-h\": pcBaseKeymap[\"Backspace\"],\n    \"Alt-Backspace\": pcBaseKeymap[\"Mod-Backspace\"],\n    \"Ctrl-d\": pcBaseKeymap[\"Delete\"],\n    \"Ctrl-Alt-Backspace\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-Delete\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-d\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Ctrl-a\": selectTextblockStart,\n    \"Ctrl-e\": selectTextblockEnd\n};\nfor (let key in pcBaseKeymap)\n    macBaseKeymap[key] = pcBaseKeymap[key];\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform)\n    // @ts-ignore\n    : typeof os != \"undefined\" && os.platform ? os.platform() == \"darwin\" : false;\n/**\nDepending on the detected platform, this will hold\n[`pcBasekeymap`](https://prosemirror.net/docs/ref/#commands.pcBaseKeymap) or\n[`macBaseKeymap`](https://prosemirror.net/docs/ref/#commands.macBaseKeymap).\n*/\nconst baseKeymap = mac ? macBaseKeymap : pcBaseKeymap;\n\nexport { autoJoin, baseKeymap, chainCommands, createParagraphNear, deleteSelection, exitCode, joinBackward, joinDown, joinForward, joinTextblockBackward, joinTextblockForward, joinUp, lift, liftEmptyBlock, macBaseKeymap, newlineInCode, pcBaseKeymap, selectAll, selectNodeBackward, selectNodeForward, selectParentNode, selectTextblockEnd, selectTextblockStart, setBlockType, splitBlock, splitBlockAs, splitBlockKeepMarks, toggleMark, wrapIn };\n","import { Plugin } from 'prosemirror-state';\nimport { findWrapping, canJoin } from 'prosemirror-transform';\n\n/**\nInput rules are regular expressions describing a piece of text\nthat, when typed, causes something to happen. This might be\nchanging two dashes into an emdash, wrapping a paragraph starting\nwith `\"> \"` into a blockquote, or something entirely different.\n*/\nclass InputRule {\n    /**\n    Create an input rule. The rule applies when the user typed\n    something and the text directly in front of the cursor matches\n    `match`, which should end with `$`.\n    \n    The `handler` can be a string, in which case the matched text, or\n    the first matched group in the regexp, is replaced by that\n    string.\n    \n    Or a it can be a function, which will be called with the match\n    array produced by\n    [`RegExp.exec`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec),\n    as well as the start and end of the matched range, and which can\n    return a [transaction](https://prosemirror.net/docs/ref/#state.Transaction) that describes the\n    rule's effect, or null to indicate the input was not handled.\n    */\n    constructor(\n    /**\n    @internal\n    */\n    match, handler, options = {}) {\n        this.match = match;\n        this.match = match;\n        this.handler = typeof handler == \"string\" ? stringHandler(handler) : handler;\n        this.undoable = options.undoable !== false;\n        this.inCode = options.inCode || false;\n        this.inCodeMark = options.inCodeMark !== false;\n    }\n}\nfunction stringHandler(string) {\n    return function (state, match, start, end) {\n        let insert = string;\n        if (match[1]) {\n            let offset = match[0].lastIndexOf(match[1]);\n            insert += match[0].slice(offset + match[1].length);\n            start += offset;\n            let cutOff = start - end;\n            if (cutOff > 0) {\n                insert = match[0].slice(offset - cutOff, offset) + insert;\n                start = end;\n            }\n        }\n        return state.tr.insertText(insert, start, end);\n    };\n}\nconst MAX_MATCH = 500;\n/**\nCreate an input rules plugin. When enabled, it will cause text\ninput that matches any of the given rules to trigger the rule's\naction.\n*/\nfunction inputRules({ rules }) {\n    let plugin = new Plugin({\n        state: {\n            init() { return null; },\n            apply(tr, prev) {\n                let stored = tr.getMeta(this);\n                if (stored)\n                    return stored;\n                return tr.selectionSet || tr.docChanged ? null : prev;\n            }\n        },\n        props: {\n            handleTextInput(view, from, to, text) {\n                return run(view, from, to, text, rules, plugin);\n            },\n            handleDOMEvents: {\n                compositionend: (view) => {\n                    setTimeout(() => {\n                        let { $cursor } = view.state.selection;\n                        if ($cursor)\n                            run(view, $cursor.pos, $cursor.pos, \"\", rules, plugin);\n                    });\n                }\n            }\n        },\n        isInputRules: true\n    });\n    return plugin;\n}\nfunction run(view, from, to, text, rules, plugin) {\n    if (view.composing)\n        return false;\n    let state = view.state, $from = state.doc.resolve(from);\n    let textBefore = $from.parent.textBetween(Math.max(0, $from.parentOffset - MAX_MATCH), $from.parentOffset, null, \"\\ufffc\") + text;\n    for (let i = 0; i < rules.length; i++) {\n        let rule = rules[i];\n        if (!rule.inCodeMark && $from.marks().some(m => m.type.spec.code))\n            continue;\n        if ($from.parent.type.spec.code) {\n            if (!rule.inCode)\n                continue;\n        }\n        else if (rule.inCode === \"only\") {\n            continue;\n        }\n        let match = rule.match.exec(textBefore);\n        if (!match || match[0].length < text.length)\n            continue;\n        let startPos = from - (match[0].length - text.length);\n        if (!rule.inCodeMark) {\n            let hasMark = false;\n            state.doc.nodesBetween(startPos, $from.pos, node => {\n                if (node.isInline && node.marks.some(m => m.type.spec.code))\n                    hasMark = true;\n            });\n            if (hasMark)\n                continue;\n        }\n        let tr = rule.handler(state, match, startPos, to);\n        if (!tr)\n            continue;\n        if (rule.undoable)\n            tr.setMeta(plugin, { transform: tr, from, to, text });\n        view.dispatch(tr);\n        return true;\n    }\n    return false;\n}\n/**\nThis is a command that will undo an input rule, if applying such a\nrule was the last thing that the user did.\n*/\nconst undoInputRule = (state, dispatch) => {\n    let plugins = state.plugins;\n    for (let i = 0; i < plugins.length; i++) {\n        let plugin = plugins[i], undoable;\n        if (plugin.spec.isInputRules && (undoable = plugin.getState(state))) {\n            if (dispatch) {\n                let tr = state.tr, toUndo = undoable.transform;\n                for (let j = toUndo.steps.length - 1; j >= 0; j--)\n                    tr.step(toUndo.steps[j].invert(toUndo.docs[j]));\n                if (undoable.text) {\n                    let marks = tr.doc.resolve(undoable.from).marks();\n                    tr.replaceWith(undoable.from, undoable.to, state.schema.text(undoable.text, marks));\n                }\n                else {\n                    tr.delete(undoable.from, undoable.to);\n                }\n                dispatch(tr);\n            }\n            return true;\n        }\n    }\n    return false;\n};\n\n/**\nConverts double dashes to an emdash.\n*/\nconst emDash = new InputRule(/--$/, \"—\", { inCodeMark: false });\n/**\nConverts three dots to an ellipsis character.\n*/\nconst ellipsis = new InputRule(/\\.\\.\\.$/, \"…\", { inCodeMark: false });\n/**\n“Smart” opening double quotes.\n*/\nconst openDoubleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(\")$/, \"“\", { inCodeMark: false });\n/**\n“Smart” closing double quotes.\n*/\nconst closeDoubleQuote = new InputRule(/\"$/, \"”\", { inCodeMark: false });\n/**\n“Smart” opening single quotes.\n*/\nconst openSingleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(')$/, \"‘\", { inCodeMark: false });\n/**\n“Smart” closing single quotes.\n*/\nconst closeSingleQuote = new InputRule(/'$/, \"’\", { inCodeMark: false });\n/**\nSmart-quote related input rules.\n*/\nconst smartQuotes = [openDoubleQuote, closeDoubleQuote, openSingleQuote, closeSingleQuote];\n\n/**\nBuild an input rule for automatically wrapping a textblock when a\ngiven string is typed. The `regexp` argument is\ndirectly passed through to the `InputRule` constructor. You'll\nprobably want the regexp to start with `^`, so that the pattern can\nonly occur at the start of a textblock.\n\n`nodeType` is the type of node to wrap in. If it needs attributes,\nyou can either pass them directly, or pass a function that will\ncompute them from the regular expression match.\n\nBy default, if there's a node with the same type above the newly\nwrapped node, the rule will try to [join](https://prosemirror.net/docs/ref/#transform.Transform.join) those\ntwo nodes. You can pass a join predicate, which takes a regular\nexpression match and the node before the wrapped node, and can\nreturn a boolean to indicate whether a join should happen.\n*/\nfunction wrappingInputRule(regexp, nodeType, getAttrs = null, joinPredicate) {\n    return new InputRule(regexp, (state, match, start, end) => {\n        let attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs;\n        let tr = state.tr.delete(start, end);\n        let $start = tr.doc.resolve(start), range = $start.blockRange(), wrapping = range && findWrapping(range, nodeType, attrs);\n        if (!wrapping)\n            return null;\n        tr.wrap(range, wrapping);\n        let before = tr.doc.resolve(start - 1).nodeBefore;\n        if (before && before.type == nodeType && canJoin(tr.doc, start - 1) &&\n            (!joinPredicate || joinPredicate(match, before)))\n            tr.join(start - 1);\n        return tr;\n    });\n}\n/**\nBuild an input rule that changes the type of a textblock when the\nmatched text is typed into it. You'll usually want to start your\nregexp with `^` to that it is only matched at the start of a\ntextblock. The optional `getAttrs` parameter can be used to compute\nthe new node's attributes, and works the same as in the\n`wrappingInputRule` function.\n*/\nfunction textblockTypeInputRule(regexp, nodeType, getAttrs = null) {\n    return new InputRule(regexp, (state, match, start, end) => {\n        let $start = state.doc.resolve(start);\n        let attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs;\n        if (!$start.node(-1).canReplaceWith($start.index(-1), $start.indexAfter(-1), nodeType))\n            return null;\n        return state.tr\n            .delete(start, end)\n            .setBlockType(start, start, nodeType, attrs);\n    });\n}\n\nexport { InputRule, closeDoubleQuote, closeSingleQuote, ellipsis, emDash, inputRules, openDoubleQuote, openSingleQuote, smartQuotes, textblockTypeInputRule, undoInputRule, wrappingInputRule };\n","import { PluginKey, Plugin, NodeSelection } from 'prosemirror-state';\nimport { InputRule } from 'prosemirror-inputrules';\nimport { expectDomTypeError, missingRootElement, getAtomFromSchemaFail } from '@milkdown/exception';\n\nconst nav = typeof navigator != \"undefined\" ? navigator : null;\nconst doc = typeof document != \"undefined\" ? document : null;\nconst agent = nav && nav.userAgent || \"\";\nconst ie_edge = /Edge\\/(\\d+)/.exec(agent);\nconst ie_upto10 = /MSIE \\d/.exec(agent);\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(agent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst ie_version = ie_upto10 ? document.documentMode : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0;\nconst gecko = !ie && /gecko\\/(\\d+)/i.test(agent);\nconst gecko_version = gecko && +(/Firefox\\/(\\d+)/.exec(agent) || [0, 0])[1];\nconst _chrome = !ie && /Chrome\\/(\\d+)/.exec(agent);\nconst chrome = !!_chrome;\nconst chrome_version = _chrome ? +_chrome[1] : 0;\nconst safari = !ie && !!nav && /Apple Computer/.test(nav.vendor);\nconst ios = safari && (/Mobile\\/\\w+/.test(agent) || !!nav && nav.maxTouchPoints > 2);\nconst mac = ios || (nav ? /Mac/.test(nav.platform) : false);\nconst android = /Android \\d/.test(agent);\nconst webkit = !!doc && \"webkitFontSmoothing\" in doc.documentElement.style;\nconst webkit_version = webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0;\n\nvar browser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  android: android,\n  chrome: chrome,\n  chrome_version: chrome_version,\n  gecko: gecko,\n  gecko_version: gecko_version,\n  ie: ie,\n  ie_version: ie_version,\n  ios: ios,\n  mac: mac,\n  safari: safari,\n  webkit: webkit,\n  webkit_version: webkit_version\n});\n\nfunction run(view, from, to, text, rules, plugin) {\n  if (view.composing) return false;\n  const state = view.state;\n  const $from = state.doc.resolve(from);\n  if ($from.parent.type.spec.code) return false;\n  const textBefore = $from.parent.textBetween(\n    Math.max(0, $from.parentOffset - 500),\n    $from.parentOffset,\n    void 0,\n    \"\\uFFFC\"\n  ) + text;\n  for (let _matcher of rules) {\n    const matcher = _matcher;\n    const match = matcher.match.exec(textBefore);\n    const tr = match && match[0] && matcher.handler(state, match, from - (match[0].length - text.length), to);\n    if (!tr) continue;\n    if (matcher.undoable !== false)\n      tr.setMeta(plugin, { transform: tr, from, to, text });\n    view.dispatch(tr);\n    return true;\n  }\n  return false;\n}\nconst customInputRulesKey = new PluginKey(\"MILKDOWN_CUSTOM_INPUTRULES\");\nfunction customInputRules({ rules }) {\n  const plugin = new Plugin({\n    key: customInputRulesKey,\n    isInputRules: true,\n    state: {\n      init() {\n        return null;\n      },\n      apply(tr, prev) {\n        const stored = tr.getMeta(this);\n        if (stored) return stored;\n        return tr.selectionSet || tr.docChanged ? null : prev;\n      }\n    },\n    props: {\n      handleTextInput(view, from, to, text) {\n        return run(view, from, to, text, rules, plugin);\n      },\n      handleDOMEvents: {\n        compositionend: (view) => {\n          setTimeout(() => {\n            const { $cursor } = view.state.selection;\n            if ($cursor) run(view, $cursor.pos, $cursor.pos, \"\", rules, plugin);\n          });\n          return false;\n        }\n      },\n      handleKeyDown(view, event) {\n        if (event.key !== \"Enter\") return false;\n        const { $cursor } = view.state.selection;\n        if ($cursor)\n          return run(view, $cursor.pos, $cursor.pos, \"\\n\", rules, plugin);\n        return false;\n      }\n    }\n  });\n  return plugin;\n}\n\nfunction markRule(regexp, markType, options = {}) {\n  return new InputRule(regexp, (state, match, start, end) => {\n    var _a, _b, _c, _d;\n    const { tr } = state;\n    const matchLength = match.length;\n    let group = match[matchLength - 1];\n    let fullMatch = match[0];\n    let initialStoredMarks = [];\n    let markEnd = end;\n    const captured = {\n      group,\n      fullMatch,\n      start,\n      end\n    };\n    const result = (_a = options.updateCaptured) == null ? void 0 : _a.call(options, captured);\n    Object.assign(captured, result);\n    ({ group, fullMatch, start, end } = captured);\n    if (fullMatch === null) return null;\n    if ((group == null ? void 0 : group.trim()) === \"\") return null;\n    if (group) {\n      const startSpaces = fullMatch.search(/\\S/);\n      const textStart = start + fullMatch.indexOf(group);\n      const textEnd = textStart + group.length;\n      initialStoredMarks = (_b = tr.storedMarks) != null ? _b : [];\n      if (textEnd < end) tr.delete(textEnd, end);\n      if (textStart > start) tr.delete(start + startSpaces, textStart);\n      markEnd = start + startSpaces + group.length;\n      const attrs = (_c = options.getAttr) == null ? void 0 : _c.call(options, match);\n      tr.addMark(start, markEnd, markType.create(attrs));\n      tr.setStoredMarks(initialStoredMarks);\n      (_d = options.beforeDispatch) == null ? void 0 : _d.call(options, { match, start, end, tr });\n    }\n    return tr;\n  });\n}\n\nfunction nodeRule(regexp, nodeType, options = {}) {\n  return new InputRule(regexp, (state, match, start, end) => {\n    var _a, _b, _c;\n    const { tr } = state;\n    let group = match[1];\n    let fullMatch = match[0];\n    const captured = {\n      group,\n      fullMatch,\n      start,\n      end\n    };\n    const result = (_a = options.updateCaptured) == null ? void 0 : _a.call(options, captured);\n    Object.assign(captured, result);\n    ({ group, fullMatch, start, end } = captured);\n    if (fullMatch === null) return null;\n    if (!group || group.trim() === \"\") return null;\n    const attrs = (_b = options.getAttr) == null ? void 0 : _b.call(options, match);\n    const node = nodeType.createAndFill(attrs);\n    if (node) {\n      tr.replaceRangeWith(\n        nodeType.isBlock ? tr.doc.resolve(start).before() : start,\n        end,\n        node\n      );\n      (_c = options.beforeDispatch) == null ? void 0 : _c.call(options, {\n        match: [fullMatch, group != null ? group : \"\"],\n        start,\n        end,\n        tr\n      });\n    }\n    return tr;\n  });\n}\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nfunction calculateNodePosition(view, target, handler) {\n  const state = view.state;\n  const { from } = state.selection;\n  const { node } = view.domAtPos(from);\n  const element = node instanceof Text ? node.parentElement : node;\n  if (!(element instanceof HTMLElement)) throw expectDomTypeError(element);\n  const selectedNodeRect = element.getBoundingClientRect();\n  const targetNodeRect = target.getBoundingClientRect();\n  const parent = target.parentElement;\n  if (!parent) throw expectDomTypeError(parent);\n  const parentNodeRect = parent.getBoundingClientRect();\n  const [top, left] = handler(selectedNodeRect, targetNodeRect, parentNodeRect);\n  target.style.top = `${top}px`;\n  target.style.left = `${left}px`;\n}\nfunction calculateTextPosition(view, target, handler) {\n  const state = view.state;\n  const { from, to } = state.selection;\n  const start = view.coordsAtPos(from);\n  const end = view.coordsAtPos(to);\n  const targetNodeRect = target.getBoundingClientRect();\n  const parent = target.parentElement;\n  if (!parent) throw missingRootElement();\n  const parentNodeRect = parent.getBoundingClientRect();\n  const [top, left] = handler(start, end, targetNodeRect, parentNodeRect);\n  target.style.top = `${top}px`;\n  target.style.left = `${left}px`;\n}\nfunction minMax(value = 0, min = 0, max = 0) {\n  return Math.min(Math.max(value, min), max);\n}\nfunction posToDOMRect(view, from, to) {\n  const minPos = 0;\n  const maxPos = view.state.doc.content.size;\n  const resolvedFrom = minMax(from, minPos, maxPos);\n  const resolvedEnd = minMax(to, minPos, maxPos);\n  const start = view.coordsAtPos(resolvedFrom);\n  const end = view.coordsAtPos(resolvedEnd, -1);\n  const top = Math.min(start.top, end.top);\n  const bottom = Math.max(start.bottom, end.bottom);\n  const left = Math.min(start.left, end.left);\n  const right = Math.max(start.right, end.right);\n  const width = right - left;\n  const height = bottom - top;\n  const x = left;\n  const y = top;\n  const data = {\n    top,\n    bottom,\n    left,\n    right,\n    width,\n    height,\n    x,\n    y\n  };\n  return __spreadProps(__spreadValues({}, data), {\n    toJSON: () => data\n  });\n}\n\nfunction cloneTr(tr) {\n  return Object.assign(Object.create(tr), tr).setTime(Date.now());\n}\nfunction equalNodeType(nodeType, node) {\n  return Array.isArray(nodeType) && nodeType.includes(node.type) || node.type === nodeType;\n}\nfunction isTextOnlySlice(slice) {\n  if (slice.content.childCount === 1) {\n    const node = slice.content.firstChild;\n    if ((node == null ? void 0 : node.type.name) === \"text\" && node.marks.length === 0) return node;\n    if ((node == null ? void 0 : node.type.name) === \"paragraph\" && node.childCount === 1) {\n      const _node = node.firstChild;\n      if ((_node == null ? void 0 : _node.type.name) === \"text\" && _node.marks.length === 0) return _node;\n    }\n  }\n  return false;\n}\n\nfunction flatten(node, descend = true) {\n  const result = [];\n  node.descendants((child, pos) => {\n    result.push({ node: child, pos });\n    if (!descend) return false;\n    return void 0;\n  });\n  return result;\n}\nfunction findChildren(predicate) {\n  return (node, descend) => flatten(node, descend).filter((child) => predicate(child.node));\n}\nfunction findChildrenByMark(node, markType, descend) {\n  return findChildren((child) => Boolean(markType.isInSet(child.marks)))(\n    node,\n    descend\n  );\n}\nfunction findParent(predicate) {\n  return ($pos) => {\n    for (let depth = $pos.depth; depth > 0; depth -= 1) {\n      const node = $pos.node(depth);\n      if (predicate(node)) {\n        const from = $pos.before(depth);\n        const to = $pos.after(depth);\n        return {\n          from,\n          to,\n          node\n        };\n      }\n    }\n    return void 0;\n  };\n}\nfunction findParentNodeType($pos, nodeType) {\n  return findParent((node) => node.type === nodeType)($pos);\n}\n\nfunction getNodeFromSchema(type, schema) {\n  const target = schema.nodes[type];\n  if (!target) throw getAtomFromSchemaFail(\"node\", type);\n  return target;\n}\nfunction getMarkFromSchema(type, schema) {\n  const target = schema.marks[type];\n  if (!target) throw getAtomFromSchemaFail(\"mark\", type);\n  return target;\n}\n\nfunction findParentNodeClosestToPos(predicate) {\n  return ($pos) => {\n    for (let i = $pos.depth; i > 0; i--) {\n      const node = $pos.node(i);\n      if (predicate(node)) {\n        return {\n          pos: i > 0 ? $pos.before(i) : 0,\n          start: $pos.start(i),\n          depth: i,\n          node\n        };\n      }\n    }\n    return void 0;\n  };\n}\nfunction findParentNode(predicate) {\n  return (selection) => {\n    return findParentNodeClosestToPos(predicate)(selection.$from);\n  };\n}\nfunction findSelectedNodeOfType(selection, nodeType) {\n  if (!(selection instanceof NodeSelection)) return;\n  const { node, $from } = selection;\n  if (equalNodeType(nodeType, node))\n    return {\n      node,\n      pos: $from.pos,\n      start: $from.start($from.depth),\n      depth: $from.depth\n    };\n  return void 0;\n}\nconst findNodeInSelection = (state, node) => {\n  const { selection, doc } = state;\n  if (selection instanceof NodeSelection) {\n    return {\n      hasNode: selection.node.type === node,\n      pos: selection.from,\n      target: selection.node\n    };\n  }\n  const { from, to } = selection;\n  let hasNode = false;\n  let pos = -1;\n  let target = null;\n  doc.nodesBetween(from, to, (n, p) => {\n    if (target) return false;\n    if (n.type === node) {\n      hasNode = true;\n      pos = p;\n      target = n;\n      return false;\n    }\n    return true;\n  });\n  return {\n    hasNode,\n    pos,\n    target\n  };\n};\n\nexport { browser, calculateNodePosition, calculateTextPosition, cloneTr, customInputRules, customInputRulesKey, equalNodeType, findChildren, findChildrenByMark, findNodeInSelection, findParent, findParentNode, findParentNodeClosestToPos, findParentNodeType, findSelectedNodeOfType, flatten, getMarkFromSchema, getNodeFromSchema, isTextOnlySlice, markRule, nodeRule, posToDOMRect };\n//# sourceMappingURL=index.js.map\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\"\n}\n\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // On macOS, keys held with Shift and Cmd don't reflect the effect of Shift in `.key`.\n  // On IE, shift effect is never included in `.key`.\n  var ignoreKey = mac && event.metaKey && event.shiftKey && !event.ctrlKey && !event.altKey ||\n      ie && event.shiftKey && event.key && event.key.length == 1 ||\n      event.key == \"Unidentified\"\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","import { keyName, base } from 'w3c-keyname';\nimport { Plugin } from 'prosemirror-state';\n\nconst mac = typeof navigator != \"undefined\" && /Mac|iP(hone|[oa]d)/.test(navigator.platform);\nconst windows = typeof navigator != \"undefined\" && /Win/.test(navigator.platform);\nfunction normalizeKeyName(name) {\n    let parts = name.split(/-(?!$)/), result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; i++) {\n        let mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (mac)\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction normalize(map) {\n    let copy = Object.create(null);\n    for (let prop in map)\n        copy[normalizeKeyName(prop)] = map[prop];\n    return copy;\n}\nfunction modifiers(name, event, shift = true) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\n/**\nCreate a keymap plugin for the given set of bindings.\n\nBindings should map key names to [command](https://prosemirror.net/docs/ref/#commands)-style\nfunctions, which will be called with `(EditorState, dispatch,\nEditorView)` arguments, and should return true when they've handled\nthe key. Note that the view argument isn't part of the command\nprotocol, but can be used as an escape hatch if a binding needs to\ndirectly interact with the UI.\n\nKey names may be strings like `\"Shift-Ctrl-Enter\"`—a key\nidentifier prefixed with zero or more modifiers. Key identifiers\nare based on the strings that can appear in\n[`KeyEvent.key`](https:developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\nUse lowercase letters to refer to letter keys (or uppercase letters\nif you want shift to be held). You may use `\"Space\"` as an alias\nfor the `\" \"` name.\n\nModifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n`a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n`Meta-`) are recognized. For characters that are created by holding\nshift, the `Shift-` prefix is implied, and should not be added\nexplicitly.\n\nYou can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\nother platforms.\n\nYou can add multiple keymap plugins to an editor. The order in\nwhich they appear determines their precedence (the ones early in\nthe array get to dispatch first).\n*/\nfunction keymap(bindings) {\n    return new Plugin({ props: { handleKeyDown: keydownHandler(bindings) } });\n}\n/**\nGiven a set of bindings (using the same format as\n[`keymap`](https://prosemirror.net/docs/ref/#keymap.keymap)), return a [keydown\nhandler](https://prosemirror.net/docs/ref/#view.EditorProps.handleKeyDown) that handles them.\n*/\nfunction keydownHandler(bindings) {\n    let map = normalize(bindings);\n    return function (view, event) {\n        let name = keyName(event), baseName, direct = map[modifiers(name, event)];\n        if (direct && direct(view.state, view.dispatch, view))\n            return true;\n        // A character key\n        if (name.length == 1 && name != \" \") {\n            if (event.shiftKey) {\n                // In case the name was already modified by shift, try looking\n                // it up without its shift modifier\n                let noShift = map[modifiers(name, event, false)];\n                if (noShift && noShift(view.state, view.dispatch, view))\n                    return true;\n            }\n            if ((event.altKey || event.metaKey || event.ctrlKey) &&\n                // Ctrl-Alt may be used for AltGr on Windows\n                !(windows && event.ctrlKey && event.altKey) &&\n                (baseName = base[event.keyCode]) && baseName != name) {\n                // Try falling back to the keyCode when there's a modifier\n                // active or the character produced isn't ASCII, and our table\n                // produces a different name from the the keyCode. See #668,\n                // #1060, #1529.\n                let fromCode = map[modifiers(baseName, event)];\n                if (fromCode && fromCode(view.state, view.dispatch, view))\n                    return true;\n            }\n        }\n        return false;\n    };\n}\n\nexport { keydownHandler, keymap };\n","import { TextSelection, NodeSelection, AllSelection, Selection } from 'prosemirror-state';\nimport { DOMSerializer, Fragment, Mark, Slice, DOMParser } from 'prosemirror-model';\nimport { dropPoint } from 'prosemirror-transform';\n\nconst domIndex = function (node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n};\nconst parentNode = function (node) {\n    let parent = node.assignedSlot || node.parentNode;\n    return parent && parent.nodeType == 11 ? parent.host : parent;\n};\nlet reusedRange = null;\n// Note that this will always return the same range, because DOM range\n// objects are every expensive, and keep slowing down subsequent DOM\n// updates, for some reason.\nconst textRange = function (node, from, to) {\n    let range = reusedRange || (reusedRange = document.createRange());\n    range.setEnd(node, to == null ? node.nodeValue.length : to);\n    range.setStart(node, from || 0);\n    return range;\n};\nconst clearReusedRange = function () {\n    reusedRange = null;\n};\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nconst isEquivalentPosition = function (node, off, targetNode, targetOff) {\n    return targetNode && (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1));\n};\nconst atomElements = /^(img|br|input|textarea|hr)$/i;\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    var _a;\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : nodeSize(node))) {\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) ||\n                node.contentEditable == \"false\")\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            let child = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            if (child.nodeType == 1 && child.contentEditable == \"false\") {\n                if ((_a = child.pmViewDesc) === null || _a === void 0 ? void 0 : _a.ignoreForSelection)\n                    off += dir;\n                else\n                    return false;\n            }\n            else {\n                node = child;\n                off = dir < 0 ? nodeSize(node) : 0;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction nodeSize(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction textNodeBefore$1(node, offset) {\n    for (;;) {\n        if (node.nodeType == 3 && offset)\n            return node;\n        if (node.nodeType == 1 && offset > 0) {\n            if (node.contentEditable == \"false\")\n                return null;\n            node = node.childNodes[offset - 1];\n            offset = nodeSize(node);\n        }\n        else if (node.parentNode && !hasBlockDesc(node)) {\n            offset = domIndex(node);\n            node = node.parentNode;\n        }\n        else {\n            return null;\n        }\n    }\n}\nfunction textNodeAfter$1(node, offset) {\n    for (;;) {\n        if (node.nodeType == 3 && offset < node.nodeValue.length)\n            return node;\n        if (node.nodeType == 1 && offset < node.childNodes.length) {\n            if (node.contentEditable == \"false\")\n                return null;\n            node = node.childNodes[offset];\n            offset = 0;\n        }\n        else if (node.parentNode && !hasBlockDesc(node)) {\n            offset = domIndex(node) + 1;\n            node = node.parentNode;\n        }\n        else {\n            return null;\n        }\n    }\n}\nfunction isOnEdge(node, offset, parent) {\n    for (let atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n        if (node == parent)\n            return true;\n        let index = domIndex(node);\n        node = node.parentNode;\n        if (!node)\n            return false;\n        atStart = atStart && index == 0;\n        atEnd = atEnd && index == nodeSize(node);\n    }\n}\nfunction hasBlockDesc(dom) {\n    let desc;\n    for (let cur = dom; cur; cur = cur.parentNode)\n        if (desc = cur.pmViewDesc)\n            break;\n    return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom);\n}\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nconst selectionCollapsed = function (domSel) {\n    return domSel.focusNode && isEquivalentPosition(domSel.focusNode, domSel.focusOffset, domSel.anchorNode, domSel.anchorOffset);\n};\nfunction keyEvent(keyCode, key) {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"keydown\", true, true);\n    event.keyCode = keyCode;\n    event.key = event.code = key;\n    return event;\n}\nfunction deepActiveElement(doc) {\n    let elt = doc.activeElement;\n    while (elt && elt.shadowRoot)\n        elt = elt.shadowRoot.activeElement;\n    return elt;\n}\nfunction caretFromPoint(doc, x, y) {\n    if (doc.caretPositionFromPoint) {\n        try { // Firefox throws for this call in hard-to-predict circumstances (#994)\n            let pos = doc.caretPositionFromPoint(x, y);\n            // Clip the offset, because Chrome will return a text offset\n            // into <input> nodes, which can't be treated as a regular DOM\n            // offset\n            if (pos)\n                return { node: pos.offsetNode, offset: Math.min(nodeSize(pos.offsetNode), pos.offset) };\n        }\n        catch (_) { }\n    }\n    if (doc.caretRangeFromPoint) {\n        let range = doc.caretRangeFromPoint(x, y);\n        if (range)\n            return { node: range.startContainer, offset: Math.min(nodeSize(range.startContainer), range.startOffset) };\n    }\n}\n\nconst nav = typeof navigator != \"undefined\" ? navigator : null;\nconst doc = typeof document != \"undefined\" ? document : null;\nconst agent = (nav && nav.userAgent) || \"\";\nconst ie_edge = /Edge\\/(\\d+)/.exec(agent);\nconst ie_upto10 = /MSIE \\d/.exec(agent);\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(agent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst ie_version = ie_upto10 ? document.documentMode : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0;\nconst gecko = !ie && /gecko\\/(\\d+)/i.test(agent);\ngecko && +(/Firefox\\/(\\d+)/.exec(agent) || [0, 0])[1];\nconst _chrome = !ie && /Chrome\\/(\\d+)/.exec(agent);\nconst chrome = !!_chrome;\nconst chrome_version = _chrome ? +_chrome[1] : 0;\nconst safari = !ie && !!nav && /Apple Computer/.test(nav.vendor);\n// Is true for both iOS and iPadOS for convenience\nconst ios = safari && (/Mobile\\/\\w+/.test(agent) || !!nav && nav.maxTouchPoints > 2);\nconst mac = ios || (nav ? /Mac/.test(nav.platform) : false);\nconst windows = nav ? /Win/.test(nav.platform) : false;\nconst android = /Android \\d/.test(agent);\nconst webkit = !!doc && \"webkitFontSmoothing\" in doc.documentElement.style;\nconst webkit_version = webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0;\n\nfunction windowRect(doc) {\n    let vp = doc.defaultView && doc.defaultView.visualViewport;\n    if (vp)\n        return {\n            left: 0, right: vp.width,\n            top: 0, bottom: vp.height\n        };\n    return { left: 0, right: doc.documentElement.clientWidth,\n        top: 0, bottom: doc.documentElement.clientHeight };\n}\nfunction getSide(value, side) {\n    return typeof value == \"number\" ? value : value[side];\n}\nfunction clientRect(node) {\n    let rect = node.getBoundingClientRect();\n    // Adjust for elements with style \"transform: scale()\"\n    let scaleX = (rect.width / node.offsetWidth) || 1;\n    let scaleY = (rect.height / node.offsetHeight) || 1;\n    // Make sure scrollbar width isn't included in the rectangle\n    return { left: rect.left, right: rect.left + node.clientWidth * scaleX,\n        top: rect.top, bottom: rect.top + node.clientHeight * scaleY };\n}\nfunction scrollRectIntoView(view, rect, startDOM) {\n    let scrollThreshold = view.someProp(\"scrollThreshold\") || 0, scrollMargin = view.someProp(\"scrollMargin\") || 5;\n    let doc = view.dom.ownerDocument;\n    for (let parent = startDOM || view.dom;;) {\n        if (!parent)\n            break;\n        if (parent.nodeType != 1) {\n            parent = parentNode(parent);\n            continue;\n        }\n        let elt = parent;\n        let atTop = elt == doc.body;\n        let bounding = atTop ? windowRect(doc) : clientRect(elt);\n        let moveX = 0, moveY = 0;\n        if (rect.top < bounding.top + getSide(scrollThreshold, \"top\"))\n            moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\"));\n        else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\"))\n            moveY = rect.bottom - rect.top > bounding.bottom - bounding.top\n                ? rect.top + getSide(scrollMargin, \"top\") - bounding.top\n                : rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\");\n        if (rect.left < bounding.left + getSide(scrollThreshold, \"left\"))\n            moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\"));\n        else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\"))\n            moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\");\n        if (moveX || moveY) {\n            if (atTop) {\n                doc.defaultView.scrollBy(moveX, moveY);\n            }\n            else {\n                let startX = elt.scrollLeft, startY = elt.scrollTop;\n                if (moveY)\n                    elt.scrollTop += moveY;\n                if (moveX)\n                    elt.scrollLeft += moveX;\n                let dX = elt.scrollLeft - startX, dY = elt.scrollTop - startY;\n                rect = { left: rect.left - dX, top: rect.top - dY, right: rect.right - dX, bottom: rect.bottom - dY };\n            }\n        }\n        let pos = atTop ? \"fixed\" : getComputedStyle(parent).position;\n        if (/^(fixed|sticky)$/.test(pos))\n            break;\n        parent = pos == \"absolute\" ? parent.offsetParent : parentNode(parent);\n    }\n}\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nfunction storeScrollPos(view) {\n    let rect = view.dom.getBoundingClientRect(), startY = Math.max(0, rect.top);\n    let refDOM, refTop;\n    for (let x = (rect.left + rect.right) / 2, y = startY + 1; y < Math.min(innerHeight, rect.bottom); y += 5) {\n        let dom = view.root.elementFromPoint(x, y);\n        if (!dom || dom == view.dom || !view.dom.contains(dom))\n            continue;\n        let localRect = dom.getBoundingClientRect();\n        if (localRect.top >= startY - 20) {\n            refDOM = dom;\n            refTop = localRect.top;\n            break;\n        }\n    }\n    return { refDOM: refDOM, refTop: refTop, stack: scrollStack(view.dom) };\n}\nfunction scrollStack(dom) {\n    let stack = [], doc = dom.ownerDocument;\n    for (let cur = dom; cur; cur = parentNode(cur)) {\n        stack.push({ dom: cur, top: cur.scrollTop, left: cur.scrollLeft });\n        if (dom == doc)\n            break;\n    }\n    return stack;\n}\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nfunction resetScrollPos({ refDOM, refTop, stack }) {\n    let newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0;\n    restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop);\n}\nfunction restoreScrollStack(stack, dTop) {\n    for (let i = 0; i < stack.length; i++) {\n        let { dom, top, left } = stack[i];\n        if (dom.scrollTop != top + dTop)\n            dom.scrollTop = top + dTop;\n        if (dom.scrollLeft != left)\n            dom.scrollLeft = left;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stored = scrollStack(dom);\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        restoreScrollStack(stored, 0);\n    }\n}\nfunction findOffsetInNode(node, coords) {\n    let closest, dxClosest = 2e8, coordsClosest, offset = 0;\n    let rowBot = coords.top, rowTop = coords.top;\n    let firstBelow, coordsBelow;\n    for (let child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n        let rects;\n        if (child.nodeType == 1)\n            rects = child.getClientRects();\n        else if (child.nodeType == 3)\n            rects = textRange(child).getClientRects();\n        else\n            continue;\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (rect.top <= rowBot && rect.bottom >= rowTop) {\n                rowBot = Math.max(rect.bottom, rowBot);\n                rowTop = Math.min(rect.top, rowTop);\n                let dx = rect.left > coords.left ? rect.left - coords.left\n                    : rect.right < coords.left ? coords.left - rect.right : 0;\n                if (dx < dxClosest) {\n                    closest = child;\n                    dxClosest = dx;\n                    coordsClosest = dx && closest.nodeType == 3 ? {\n                        left: rect.right < coords.left ? rect.right : rect.left,\n                        top: coords.top\n                    } : coords;\n                    if (child.nodeType == 1 && dx)\n                        offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0);\n                    continue;\n                }\n            }\n            else if (rect.top > coords.top && !firstBelow && rect.left <= coords.left && rect.right >= coords.left) {\n                firstBelow = child;\n                coordsBelow = { left: Math.max(rect.left, Math.min(rect.right, coords.left)), top: rect.top };\n            }\n            if (!closest && (coords.left >= rect.right && coords.top >= rect.top ||\n                coords.left >= rect.left && coords.top >= rect.bottom))\n                offset = childIndex + 1;\n        }\n    }\n    if (!closest && firstBelow) {\n        closest = firstBelow;\n        coordsClosest = coordsBelow;\n        dxClosest = 0;\n    }\n    if (closest && closest.nodeType == 3)\n        return findOffsetInText(closest, coordsClosest);\n    if (!closest || (dxClosest && closest.nodeType == 1))\n        return { node, offset };\n    return findOffsetInNode(closest, coordsClosest);\n}\nfunction findOffsetInText(node, coords) {\n    let len = node.nodeValue.length;\n    let range = document.createRange();\n    for (let i = 0; i < len; i++) {\n        range.setEnd(node, i + 1);\n        range.setStart(node, i);\n        let rect = singleRect(range, 1);\n        if (rect.top == rect.bottom)\n            continue;\n        if (inRect(coords, rect))\n            return { node, offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0) };\n    }\n    return { node, offset: 0 };\n}\nfunction inRect(coords, rect) {\n    return coords.left >= rect.left - 1 && coords.left <= rect.right + 1 &&\n        coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1;\n}\nfunction targetKludge(dom, coords) {\n    let parent = dom.parentNode;\n    if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left)\n        return parent;\n    return dom;\n}\nfunction posFromElement(view, elt, coords) {\n    let { node, offset } = findOffsetInNode(elt, coords), bias = -1;\n    if (node.nodeType == 1 && !node.firstChild) {\n        let rect = node.getBoundingClientRect();\n        bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1;\n    }\n    return view.docView.posFromDOM(node, offset, bias);\n}\nfunction posFromCaret(view, node, offset, coords) {\n    // Browser (in caretPosition/RangeFromPoint) will agressively\n    // normalize towards nearby inline nodes. Since we are interested in\n    // positions between block nodes too, we first walk up the hierarchy\n    // of nodes to see if there are block nodes that the coordinates\n    // fall outside of. If so, we take the position before/after that\n    // block. If not, we call `posFromDOM` on the raw node/offset.\n    let outsideBlock = -1;\n    for (let cur = node, sawBlock = false;;) {\n        if (cur == view.dom)\n            break;\n        let desc = view.docView.nearestDesc(cur, true), rect;\n        if (!desc)\n            return null;\n        if (desc.dom.nodeType == 1 && (desc.node.isBlock && desc.parent || !desc.contentDOM) &&\n            // Ignore elements with zero-size bounding rectangles\n            ((rect = desc.dom.getBoundingClientRect()).width || rect.height)) {\n            if (desc.node.isBlock && desc.parent && !/^T(R|BODY|HEAD|FOOT)$/.test(desc.dom.nodeName)) {\n                // Only apply the horizontal test to the innermost block. Vertical for any parent.\n                if (!sawBlock && rect.left > coords.left || rect.top > coords.top)\n                    outsideBlock = desc.posBefore;\n                else if (!sawBlock && rect.right < coords.left || rect.bottom < coords.top)\n                    outsideBlock = desc.posAfter;\n                sawBlock = true;\n            }\n            if (!desc.contentDOM && outsideBlock < 0 && !desc.node.isText) {\n                // If we are inside a leaf, return the side of the leaf closer to the coords\n                let before = desc.node.isBlock ? coords.top < (rect.top + rect.bottom) / 2\n                    : coords.left < (rect.left + rect.right) / 2;\n                return before ? desc.posBefore : desc.posAfter;\n            }\n        }\n        cur = desc.dom.parentNode;\n    }\n    return outsideBlock > -1 ? outsideBlock : view.docView.posFromDOM(node, offset, -1);\n}\nfunction elementFromPoint(element, coords, box) {\n    let len = element.childNodes.length;\n    if (len && box.top < box.bottom) {\n        for (let startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n            let child = element.childNodes[i];\n            if (child.nodeType == 1) {\n                let rects = child.getClientRects();\n                for (let j = 0; j < rects.length; j++) {\n                    let rect = rects[j];\n                    if (inRect(coords, rect))\n                        return elementFromPoint(child, coords, rect);\n                }\n            }\n            if ((i = (i + 1) % len) == startI)\n                break;\n        }\n    }\n    return element;\n}\n// Given an x,y position on the editor, get the position in the document.\nfunction posAtCoords(view, coords) {\n    let doc = view.dom.ownerDocument, node, offset = 0;\n    let caret = caretFromPoint(doc, coords.left, coords.top);\n    if (caret)\n        ({ node, offset } = caret);\n    let elt = (view.root.elementFromPoint ? view.root : doc)\n        .elementFromPoint(coords.left, coords.top);\n    let pos;\n    if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n        let box = view.dom.getBoundingClientRect();\n        if (!inRect(coords, box))\n            return null;\n        elt = elementFromPoint(view.dom, coords, box);\n        if (!elt)\n            return null;\n    }\n    // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n    if (safari) {\n        for (let p = elt; node && p; p = parentNode(p))\n            if (p.draggable)\n                node = undefined;\n    }\n    elt = targetKludge(elt, coords);\n    if (node) {\n        if (gecko && node.nodeType == 1) {\n            // Firefox will sometimes return offsets into <input> nodes, which\n            // have no actual children, from caretPositionFromPoint (#953)\n            offset = Math.min(offset, node.childNodes.length);\n            // It'll also move the returned position before image nodes,\n            // even if those are behind it.\n            if (offset < node.childNodes.length) {\n                let next = node.childNodes[offset], box;\n                if (next.nodeName == \"IMG\" && (box = next.getBoundingClientRect()).right <= coords.left &&\n                    box.bottom > coords.top)\n                    offset++;\n            }\n        }\n        let prev;\n        // When clicking above the right side of an uneditable node, Chrome will report a cursor position after that node.\n        if (webkit && offset && node.nodeType == 1 && (prev = node.childNodes[offset - 1]).nodeType == 1 &&\n            prev.contentEditable == \"false\" && prev.getBoundingClientRect().top >= coords.top)\n            offset--;\n        // Suspiciously specific kludge to work around caret*FromPoint\n        // never returning a position at the end of the document\n        if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 &&\n            coords.top > node.lastChild.getBoundingClientRect().bottom)\n            pos = view.state.doc.content.size;\n        // Ignore positions directly after a BR, since caret*FromPoint\n        // 'round up' positions that would be more accurately placed\n        // before the BR node.\n        else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\")\n            pos = posFromCaret(view, node, offset, coords);\n    }\n    if (pos == null)\n        pos = posFromElement(view, elt, coords);\n    let desc = view.docView.nearestDesc(elt, true);\n    return { pos, inside: desc ? desc.posAtStart - desc.border : -1 };\n}\nfunction nonZero(rect) {\n    return rect.top < rect.bottom || rect.left < rect.right;\n}\nfunction singleRect(target, bias) {\n    let rects = target.getClientRects();\n    if (rects.length) {\n        let first = rects[bias < 0 ? 0 : rects.length - 1];\n        if (nonZero(first))\n            return first;\n    }\n    return Array.prototype.find.call(rects, nonZero) || target.getBoundingClientRect();\n}\nconst BIDI = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nfunction coordsAtPos(view, pos, side) {\n    let { node, offset, atom } = view.docView.domFromPos(pos, side < 0 ? -1 : 1);\n    let supportEmptyRange = webkit || gecko;\n    if (node.nodeType == 3) {\n        // These browsers support querying empty text ranges. Prefer that in\n        // bidi context or when at the end of a node.\n        if (supportEmptyRange && (BIDI.test(node.nodeValue) || (side < 0 ? !offset : offset == node.nodeValue.length))) {\n            let rect = singleRect(textRange(node, offset, offset), side);\n            // Firefox returns bad results (the position before the space)\n            // when querying a position directly after line-broken\n            // whitespace. Detect this situation and and kludge around it\n            if (gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n                let rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1);\n                if (rectBefore.top == rect.top) {\n                    let rectAfter = singleRect(textRange(node, offset, offset + 1), -1);\n                    if (rectAfter.top != rect.top)\n                        return flattenV(rectAfter, rectAfter.left < rectBefore.left);\n                }\n            }\n            return rect;\n        }\n        else {\n            let from = offset, to = offset, takeSide = side < 0 ? 1 : -1;\n            if (side < 0 && !offset) {\n                to++;\n                takeSide = -1;\n            }\n            else if (side >= 0 && offset == node.nodeValue.length) {\n                from--;\n                takeSide = 1;\n            }\n            else if (side < 0) {\n                from--;\n            }\n            else {\n                to++;\n            }\n            return flattenV(singleRect(textRange(node, from, to), takeSide), takeSide < 0);\n        }\n    }\n    let $dom = view.state.doc.resolve(pos - (atom || 0));\n    // Return a horizontal line in block context\n    if (!$dom.parent.inlineContent) {\n        if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n            let before = node.childNodes[offset - 1];\n            if (before.nodeType == 1)\n                return flattenH(before.getBoundingClientRect(), false);\n        }\n        if (atom == null && offset < nodeSize(node)) {\n            let after = node.childNodes[offset];\n            if (after.nodeType == 1)\n                return flattenH(after.getBoundingClientRect(), true);\n        }\n        return flattenH(node.getBoundingClientRect(), side >= 0);\n    }\n    // Inline, not in text node (this is not Bidi-safe)\n    if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n        let before = node.childNodes[offset - 1];\n        let target = before.nodeType == 3 ? textRange(before, nodeSize(before) - (supportEmptyRange ? 0 : 1))\n            // BR nodes tend to only return the rectangle before them.\n            // Only use them if they are the last element in their parent\n            : before.nodeType == 1 && (before.nodeName != \"BR\" || !before.nextSibling) ? before : null;\n        if (target)\n            return flattenV(singleRect(target, 1), false);\n    }\n    if (atom == null && offset < nodeSize(node)) {\n        let after = node.childNodes[offset];\n        while (after.pmViewDesc && after.pmViewDesc.ignoreForCoords)\n            after = after.nextSibling;\n        let target = !after ? null : after.nodeType == 3 ? textRange(after, 0, (supportEmptyRange ? 0 : 1))\n            : after.nodeType == 1 ? after : null;\n        if (target)\n            return flattenV(singleRect(target, -1), true);\n    }\n    // All else failed, just try to get a rectangle for the target node\n    return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, -side), side >= 0);\n}\nfunction flattenV(rect, left) {\n    if (rect.width == 0)\n        return rect;\n    let x = left ? rect.left : rect.right;\n    return { top: rect.top, bottom: rect.bottom, left: x, right: x };\n}\nfunction flattenH(rect, top) {\n    if (rect.height == 0)\n        return rect;\n    let y = top ? rect.top : rect.bottom;\n    return { top: y, bottom: y, left: rect.left, right: rect.right };\n}\nfunction withFlushedState(view, state, f) {\n    let viewState = view.state, active = view.root.activeElement;\n    if (viewState != state)\n        view.updateState(state);\n    if (active != view.dom)\n        view.focus();\n    try {\n        return f();\n    }\n    finally {\n        if (viewState != state)\n            view.updateState(viewState);\n        if (active != view.dom && active)\n            active.focus();\n    }\n}\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n    let sel = state.selection;\n    let $pos = dir == \"up\" ? sel.$from : sel.$to;\n    return withFlushedState(view, state, () => {\n        let { node: dom } = view.docView.domFromPos($pos.pos, dir == \"up\" ? -1 : 1);\n        for (;;) {\n            let nearest = view.docView.nearestDesc(dom, true);\n            if (!nearest)\n                break;\n            if (nearest.node.isBlock) {\n                dom = nearest.contentDOM || nearest.dom;\n                break;\n            }\n            dom = nearest.dom.parentNode;\n        }\n        let coords = coordsAtPos(view, $pos.pos, 1);\n        for (let child = dom.firstChild; child; child = child.nextSibling) {\n            let boxes;\n            if (child.nodeType == 1)\n                boxes = child.getClientRects();\n            else if (child.nodeType == 3)\n                boxes = textRange(child, 0, child.nodeValue.length).getClientRects();\n            else\n                continue;\n            for (let i = 0; i < boxes.length; i++) {\n                let box = boxes[i];\n                if (box.bottom > box.top + 1 &&\n                    (dir == \"up\" ? coords.top - box.top > (box.bottom - coords.top) * 2\n                        : box.bottom - coords.bottom > (coords.bottom - box.top) * 2))\n                    return false;\n            }\n        }\n        return true;\n    });\n}\nconst maybeRTL = /[\\u0590-\\u08ac]/;\nfunction endOfTextblockHorizontal(view, state, dir) {\n    let { $head } = state.selection;\n    if (!$head.parent.isTextblock)\n        return false;\n    let offset = $head.parentOffset, atStart = !offset, atEnd = offset == $head.parent.content.size;\n    let sel = view.domSelection();\n    if (!sel)\n        return $head.pos == $head.start() || $head.pos == $head.end();\n    // If the textblock is all LTR, or the browser doesn't support\n    // Selection.modify (Edge), fall back to a primitive approach\n    if (!maybeRTL.test($head.parent.textContent) || !sel.modify)\n        return dir == \"left\" || dir == \"backward\" ? atStart : atEnd;\n    return withFlushedState(view, state, () => {\n        // This is a huge hack, but appears to be the best we can\n        // currently do: use `Selection.modify` to move the selection by\n        // one character, and see if that moves the cursor out of the\n        // textblock (or doesn't move it at all, when at the start/end of\n        // the document).\n        let { focusNode: oldNode, focusOffset: oldOff, anchorNode, anchorOffset } = view.domSelectionRange();\n        let oldBidiLevel = sel.caretBidiLevel // Only for Firefox\n        ;\n        sel.modify(\"move\", dir, \"character\");\n        let parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom;\n        let { focusNode: newNode, focusOffset: newOff } = view.domSelectionRange();\n        let result = newNode && !parentDOM.contains(newNode.nodeType == 1 ? newNode : newNode.parentNode) ||\n            (oldNode == newNode && oldOff == newOff);\n        // Restore the previous selection\n        try {\n            sel.collapse(anchorNode, anchorOffset);\n            if (oldNode && (oldNode != anchorNode || oldOff != anchorOffset) && sel.extend)\n                sel.extend(oldNode, oldOff);\n        }\n        catch (_) { }\n        if (oldBidiLevel != null)\n            sel.caretBidiLevel = oldBidiLevel;\n        return result;\n    });\n}\nlet cachedState = null;\nlet cachedDir = null;\nlet cachedResult = false;\nfunction endOfTextblock(view, state, dir) {\n    if (cachedState == state && cachedDir == dir)\n        return cachedResult;\n    cachedState = state;\n    cachedDir = dir;\n    return cachedResult = dir == \"up\" || dir == \"down\"\n        ? endOfTextblockVertical(view, state, dir)\n        : endOfTextblockHorizontal(view, state, dir);\n}\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\nconst NOT_DIRTY = 0, CHILD_DIRTY = 1, CONTENT_DIRTY = 2, NODE_DIRTY = 3;\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nclass ViewDesc {\n    constructor(parent, children, dom, \n    // This is the node that holds the child views. It may be null for\n    // descs that don't have children.\n    contentDOM) {\n        this.parent = parent;\n        this.children = children;\n        this.dom = dom;\n        this.contentDOM = contentDOM;\n        this.dirty = NOT_DIRTY;\n        // An expando property on the DOM node provides a link back to its\n        // description.\n        dom.pmViewDesc = this;\n    }\n    // Used to check whether a given description corresponds to a\n    // widget/mark/node.\n    matchesWidget(widget) { return false; }\n    matchesMark(mark) { return false; }\n    matchesNode(node, outerDeco, innerDeco) { return false; }\n    matchesHack(nodeName) { return false; }\n    // When parsing in-editor content (in domchange.js), we allow\n    // descriptions to determine the parse rules that should be used to\n    // parse them.\n    parseRule() { return null; }\n    // Used by the editor's event handler to ignore events that come\n    // from certain descs.\n    stopEvent(event) { return false; }\n    // The size of the content represented by this desc.\n    get size() {\n        let size = 0;\n        for (let i = 0; i < this.children.length; i++)\n            size += this.children[i].size;\n        return size;\n    }\n    // For block nodes, this represents the space taken up by their\n    // start/end tokens.\n    get border() { return 0; }\n    destroy() {\n        this.parent = undefined;\n        if (this.dom.pmViewDesc == this)\n            this.dom.pmViewDesc = undefined;\n        for (let i = 0; i < this.children.length; i++)\n            this.children[i].destroy();\n    }\n    posBeforeChild(child) {\n        for (let i = 0, pos = this.posAtStart;; i++) {\n            let cur = this.children[i];\n            if (cur == child)\n                return pos;\n            pos += cur.size;\n        }\n    }\n    get posBefore() {\n        return this.parent.posBeforeChild(this);\n    }\n    get posAtStart() {\n        return this.parent ? this.parent.posBeforeChild(this) + this.border : 0;\n    }\n    get posAfter() {\n        return this.posBefore + this.size;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.size - 2 * this.border;\n    }\n    localPosFromDOM(dom, offset, bias) {\n        // If the DOM position is in the content, use the child desc after\n        // it to figure out a position.\n        if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n            if (bias < 0) {\n                let domBefore, desc;\n                if (dom == this.contentDOM) {\n                    domBefore = dom.childNodes[offset - 1];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domBefore = dom.previousSibling;\n                }\n                while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this))\n                    domBefore = domBefore.previousSibling;\n                return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart;\n            }\n            else {\n                let domAfter, desc;\n                if (dom == this.contentDOM) {\n                    domAfter = dom.childNodes[offset];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domAfter = dom.nextSibling;\n                }\n                while (domAfter && !((desc = domAfter.pmViewDesc) && desc.parent == this))\n                    domAfter = domAfter.nextSibling;\n                return domAfter ? this.posBeforeChild(desc) : this.posAtEnd;\n            }\n        }\n        // Otherwise, use various heuristics, falling back on the bias\n        // parameter, to determine whether to return the position at the\n        // start or at the end of this view desc.\n        let atEnd;\n        if (dom == this.dom && this.contentDOM) {\n            atEnd = offset > domIndex(this.contentDOM);\n        }\n        else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n            atEnd = dom.compareDocumentPosition(this.contentDOM) & 2;\n        }\n        else if (this.dom.firstChild) {\n            if (offset == 0)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = false;\n                        break;\n                    }\n                    if (search.previousSibling)\n                        break;\n                }\n            if (atEnd == null && offset == dom.childNodes.length)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = true;\n                        break;\n                    }\n                    if (search.nextSibling)\n                        break;\n                }\n        }\n        return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart;\n    }\n    nearestDesc(dom, onlyNodes = false) {\n        for (let first = true, cur = dom; cur; cur = cur.parentNode) {\n            let desc = this.getDesc(cur), nodeDOM;\n            if (desc && (!onlyNodes || desc.node)) {\n                // If dom is outside of this desc's nodeDOM, don't count it.\n                if (first && (nodeDOM = desc.nodeDOM) &&\n                    !(nodeDOM.nodeType == 1 ? nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : nodeDOM == dom))\n                    first = false;\n                else\n                    return desc;\n            }\n        }\n    }\n    getDesc(dom) {\n        let desc = dom.pmViewDesc;\n        for (let cur = desc; cur; cur = cur.parent)\n            if (cur == this)\n                return desc;\n    }\n    posFromDOM(dom, offset, bias) {\n        for (let scan = dom; scan; scan = scan.parentNode) {\n            let desc = this.getDesc(scan);\n            if (desc)\n                return desc.localPosFromDOM(dom, offset, bias);\n        }\n        return -1;\n    }\n    // Find the desc for the node after the given pos, if any. (When a\n    // parent node overrode rendering, there might not be one.)\n    descAt(pos) {\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == pos && end != offset) {\n                while (!child.border && child.children.length) {\n                    for (let i = 0; i < child.children.length; i++) {\n                        let inner = child.children[i];\n                        if (inner.size) {\n                            child = inner;\n                            break;\n                        }\n                    }\n                }\n                return child;\n            }\n            if (pos < end)\n                return child.descAt(pos - offset - child.border);\n            offset = end;\n        }\n    }\n    domFromPos(pos, side) {\n        if (!this.contentDOM)\n            return { node: this.dom, offset: 0, atom: pos + 1 };\n        // First find the position in the child array\n        let i = 0, offset = 0;\n        for (let curPos = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = curPos + child.size;\n            if (end > pos || child instanceof TrailingHackViewDesc) {\n                offset = pos - curPos;\n                break;\n            }\n            curPos = end;\n        }\n        // If this points into the middle of a child, call through\n        if (offset)\n            return this.children[i].domFromPos(offset - this.children[i].border, side);\n        // Go back if there were any zero-length widgets with side >= 0 before this point\n        for (let prev; i && !(prev = this.children[i - 1]).size && prev instanceof WidgetViewDesc && prev.side >= 0; i--) { }\n        // Scan towards the first useable node\n        if (side <= 0) {\n            let prev, enter = true;\n            for (;; i--, enter = false) {\n                prev = i ? this.children[i - 1] : null;\n                if (!prev || prev.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (prev && side && enter && !prev.border && !prev.domAtom)\n                return prev.domFromPos(prev.size, side);\n            return { node: this.contentDOM, offset: prev ? domIndex(prev.dom) + 1 : 0 };\n        }\n        else {\n            let next, enter = true;\n            for (;; i++, enter = false) {\n                next = i < this.children.length ? this.children[i] : null;\n                if (!next || next.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (next && enter && !next.border && !next.domAtom)\n                return next.domFromPos(0, side);\n            return { node: this.contentDOM, offset: next ? domIndex(next.dom) : this.contentDOM.childNodes.length };\n        }\n    }\n    // Used to find a DOM range in a single parent for a given changed\n    // range.\n    parseRange(from, to, base = 0) {\n        if (this.children.length == 0)\n            return { node: this.contentDOM, from, to, fromOffset: 0, toOffset: this.contentDOM.childNodes.length };\n        let fromOffset = -1, toOffset = -1;\n        for (let offset = base, i = 0;; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (fromOffset == -1 && from <= end) {\n                let childBase = offset + child.border;\n                // FIXME maybe descend mark views to parse a narrower range?\n                if (from >= childBase && to <= end - child.border && child.node &&\n                    child.contentDOM && this.contentDOM.contains(child.contentDOM))\n                    return child.parseRange(from, to, childBase);\n                from = offset;\n                for (let j = i; j > 0; j--) {\n                    let prev = this.children[j - 1];\n                    if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n                        fromOffset = domIndex(prev.dom) + 1;\n                        break;\n                    }\n                    from -= prev.size;\n                }\n                if (fromOffset == -1)\n                    fromOffset = 0;\n            }\n            if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n                to = end;\n                for (let j = i + 1; j < this.children.length; j++) {\n                    let next = this.children[j];\n                    if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n                        toOffset = domIndex(next.dom);\n                        break;\n                    }\n                    to += next.size;\n                }\n                if (toOffset == -1)\n                    toOffset = this.contentDOM.childNodes.length;\n                break;\n            }\n            offset = end;\n        }\n        return { node: this.contentDOM, from, to, fromOffset, toOffset };\n    }\n    emptyChildAt(side) {\n        if (this.border || !this.contentDOM || !this.children.length)\n            return false;\n        let child = this.children[side < 0 ? 0 : this.children.length - 1];\n        return child.size == 0 || child.emptyChildAt(side);\n    }\n    domAfterPos(pos) {\n        let { node, offset } = this.domFromPos(pos, 0);\n        if (node.nodeType != 1 || offset == node.childNodes.length)\n            throw new RangeError(\"No node after pos \" + pos);\n        return node.childNodes[offset];\n    }\n    // View descs are responsible for setting any selection that falls\n    // entirely inside of them, so that custom implementations can do\n    // custom things with the selection. Note that this falls apart when\n    // a selection starts in such a node and ends in another, in which\n    // case we just use whatever domFromPos produces as a best effort.\n    setSelection(anchor, head, view, force = false) {\n        // If the selection falls entirely in a child, give it to that child\n        let from = Math.min(anchor, head), to = Math.max(anchor, head);\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (from > offset && to < end)\n                return child.setSelection(anchor - offset - child.border, head - offset - child.border, view, force);\n            offset = end;\n        }\n        let anchorDOM = this.domFromPos(anchor, anchor ? -1 : 1);\n        let headDOM = head == anchor ? anchorDOM : this.domFromPos(head, head ? -1 : 1);\n        let domSel = view.root.getSelection();\n        let selRange = view.domSelectionRange();\n        let brKludge = false;\n        // On Firefox, using Selection.collapse to put the cursor after a\n        // BR node for some reason doesn't always work (#1073). On Safari,\n        // the cursor sometimes inexplicable visually lags behind its\n        // reported position in such situations (#1092).\n        if ((gecko || safari) && anchor == head) {\n            let { node, offset } = anchorDOM;\n            if (node.nodeType == 3) {\n                brKludge = !!(offset && node.nodeValue[offset - 1] == \"\\n\");\n                // Issue #1128\n                if (brKludge && offset == node.nodeValue.length) {\n                    for (let scan = node, after; scan; scan = scan.parentNode) {\n                        if (after = scan.nextSibling) {\n                            if (after.nodeName == \"BR\")\n                                anchorDOM = headDOM = { node: after.parentNode, offset: domIndex(after) + 1 };\n                            break;\n                        }\n                        let desc = scan.pmViewDesc;\n                        if (desc && desc.node && desc.node.isBlock)\n                            break;\n                    }\n                }\n            }\n            else {\n                let prev = node.childNodes[offset - 1];\n                brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\");\n            }\n        }\n        // Firefox can act strangely when the selection is in front of an\n        // uneditable node. See #1163 and https://bugzilla.mozilla.org/show_bug.cgi?id=1709536\n        if (gecko && selRange.focusNode && selRange.focusNode != headDOM.node && selRange.focusNode.nodeType == 1) {\n            let after = selRange.focusNode.childNodes[selRange.focusOffset];\n            if (after && after.contentEditable == \"false\")\n                force = true;\n        }\n        if (!(force || brKludge && safari) &&\n            isEquivalentPosition(anchorDOM.node, anchorDOM.offset, selRange.anchorNode, selRange.anchorOffset) &&\n            isEquivalentPosition(headDOM.node, headDOM.offset, selRange.focusNode, selRange.focusOffset))\n            return;\n        // Selection.extend can be used to create an 'inverted' selection\n        // (one where the focus is before the anchor), but not all\n        // browsers support it yet.\n        let domSelExtended = false;\n        if ((domSel.extend || anchor == head) && !(brKludge && gecko)) {\n            domSel.collapse(anchorDOM.node, anchorDOM.offset);\n            try {\n                if (anchor != head)\n                    domSel.extend(headDOM.node, headDOM.offset);\n                domSelExtended = true;\n            }\n            catch (_) {\n                // In some cases with Chrome the selection is empty after calling\n                // collapse, even when it should be valid. This appears to be a bug, but\n                // it is difficult to isolate. If this happens fallback to the old path\n                // without using extend.\n                // Similarly, this could crash on Safari if the editor is hidden, and\n                // there was no selection.\n            }\n        }\n        if (!domSelExtended) {\n            if (anchor > head) {\n                let tmp = anchorDOM;\n                anchorDOM = headDOM;\n                headDOM = tmp;\n            }\n            let range = document.createRange();\n            range.setEnd(headDOM.node, headDOM.offset);\n            range.setStart(anchorDOM.node, anchorDOM.offset);\n            domSel.removeAllRanges();\n            domSel.addRange(range);\n        }\n    }\n    ignoreMutation(mutation) {\n        return !this.contentDOM && mutation.type != \"selection\";\n    }\n    get contentLost() {\n        return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM);\n    }\n    // Remove a subtree of the element tree that has been touched\n    // by a DOM change, so that the next update will redraw it.\n    markDirty(from, to) {\n        for (let offset = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n                let startInside = offset + child.border, endInside = end - child.border;\n                if (from >= startInside && to <= endInside) {\n                    this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY;\n                    if (from == startInside && to == endInside &&\n                        (child.contentLost || child.dom.parentNode != this.contentDOM))\n                        child.dirty = NODE_DIRTY;\n                    else\n                        child.markDirty(from - startInside, to - startInside);\n                    return;\n                }\n                else {\n                    child.dirty = child.dom == child.contentDOM && child.dom.parentNode == this.contentDOM && !child.children.length\n                        ? CONTENT_DIRTY : NODE_DIRTY;\n                }\n            }\n            offset = end;\n        }\n        this.dirty = CONTENT_DIRTY;\n    }\n    markParentsDirty() {\n        let level = 1;\n        for (let node = this.parent; node; node = node.parent, level++) {\n            let dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY;\n            if (node.dirty < dirty)\n                node.dirty = dirty;\n        }\n    }\n    get domAtom() { return false; }\n    get ignoreForCoords() { return false; }\n    get ignoreForSelection() { return false; }\n    isText(text) { return false; }\n}\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nclass WidgetViewDesc extends ViewDesc {\n    constructor(parent, widget, view, pos) {\n        let self, dom = widget.type.toDOM;\n        if (typeof dom == \"function\")\n            dom = dom(view, () => {\n                if (!self)\n                    return pos;\n                if (self.parent)\n                    return self.parent.posBeforeChild(self);\n            });\n        if (!widget.type.spec.raw) {\n            if (dom.nodeType != 1) {\n                let wrap = document.createElement(\"span\");\n                wrap.appendChild(dom);\n                dom = wrap;\n            }\n            dom.contentEditable = \"false\";\n            dom.classList.add(\"ProseMirror-widget\");\n        }\n        super(parent, [], dom, null);\n        this.widget = widget;\n        this.widget = widget;\n        self = this;\n    }\n    matchesWidget(widget) {\n        return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type);\n    }\n    parseRule() { return { ignore: true }; }\n    stopEvent(event) {\n        let stop = this.widget.spec.stopEvent;\n        return stop ? stop(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"selection\" || this.widget.spec.ignoreSelection;\n    }\n    destroy() {\n        this.widget.type.destroy(this.dom);\n        super.destroy();\n    }\n    get domAtom() { return true; }\n    get ignoreForSelection() { return !!this.widget.type.spec.relaxedSide; }\n    get side() { return this.widget.type.side; }\n}\nclass CompositionViewDesc extends ViewDesc {\n    constructor(parent, dom, textDOM, text) {\n        super(parent, [], dom, null);\n        this.textDOM = textDOM;\n        this.text = text;\n    }\n    get size() { return this.text.length; }\n    localPosFromDOM(dom, offset) {\n        if (dom != this.textDOM)\n            return this.posAtStart + (offset ? this.size : 0);\n        return this.posAtStart + offset;\n    }\n    domFromPos(pos) {\n        return { node: this.textDOM, offset: pos };\n    }\n    ignoreMutation(mut) {\n        return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue;\n    }\n}\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nclass MarkViewDesc extends ViewDesc {\n    constructor(parent, mark, dom, contentDOM, spec) {\n        super(parent, [], dom, contentDOM);\n        this.mark = mark;\n        this.spec = spec;\n    }\n    static create(parent, mark, inline, view) {\n        let custom = view.nodeViews[mark.type.name];\n        let spec = custom && custom(mark, view, inline);\n        if (!spec || !spec.dom)\n            spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline), null, mark.attrs);\n        return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom, spec);\n    }\n    parseRule() {\n        if ((this.dirty & NODE_DIRTY) || this.mark.type.spec.reparseInView)\n            return null;\n        return { mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM };\n    }\n    matchesMark(mark) { return this.dirty != NODE_DIRTY && this.mark.eq(mark); }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        // Move dirty info to nearest node view\n        if (this.dirty != NOT_DIRTY) {\n            let parent = this.parent;\n            while (!parent.node)\n                parent = parent.parent;\n            if (parent.dirty < this.dirty)\n                parent.dirty = this.dirty;\n            this.dirty = NOT_DIRTY;\n        }\n    }\n    slice(from, to, view) {\n        let copy = MarkViewDesc.create(this.parent, this.mark, true, view);\n        let nodes = this.children, size = this.size;\n        if (to < size)\n            nodes = replaceNodes(nodes, to, size, view);\n        if (from > 0)\n            nodes = replaceNodes(nodes, 0, from, view);\n        for (let i = 0; i < nodes.length; i++)\n            nodes[i].parent = copy;\n        copy.children = nodes;\n        return copy;\n    }\n    ignoreMutation(mutation) {\n        return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation);\n    }\n    destroy() {\n        if (this.spec.destroy)\n            this.spec.destroy();\n        super.destroy();\n    }\n}\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nclass NodeViewDesc extends ViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n        super(parent, [], dom, contentDOM);\n        this.node = node;\n        this.outerDeco = outerDeco;\n        this.innerDeco = innerDeco;\n        this.nodeDOM = nodeDOM;\n    }\n    // By default, a node is rendered using the `toDOM` method from the\n    // node type spec. But client code can use the `nodeViews` spec to\n    // supply a custom node view, which can influence various aspects of\n    // the way the node works.\n    //\n    // (Using subclassing for this was intentionally decided against,\n    // since it'd require exposing a whole slew of finicky\n    // implementation details to the user code that they probably will\n    // never need.)\n    static create(parent, node, outerDeco, innerDeco, view, pos) {\n        let custom = view.nodeViews[node.type.name], descObj;\n        let spec = custom && custom(node, view, () => {\n            // (This is a function that allows the custom view to find its\n            // own position)\n            if (!descObj)\n                return pos;\n            if (descObj.parent)\n                return descObj.parent.posBeforeChild(descObj);\n        }, outerDeco, innerDeco);\n        let dom = spec && spec.dom, contentDOM = spec && spec.contentDOM;\n        if (node.isText) {\n            if (!dom)\n                dom = document.createTextNode(node.text);\n            else if (dom.nodeType != 3)\n                throw new RangeError(\"Text must be rendered as a DOM text node\");\n        }\n        else if (!dom) {\n            let spec = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node), null, node.attrs);\n            ({ dom, contentDOM } = spec);\n        }\n        if (!contentDOM && !node.isText && dom.nodeName != \"BR\") { // Chrome gets confused by <br contenteditable=false>\n            if (!dom.hasAttribute(\"contenteditable\"))\n                dom.contentEditable = \"false\";\n            if (node.type.spec.draggable)\n                dom.draggable = true;\n        }\n        let nodeDOM = dom;\n        dom = applyOuterDeco(dom, outerDeco, node);\n        if (spec)\n            return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, spec, view, pos + 1);\n        else if (node.isText)\n            return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view);\n        else\n            return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, view, pos + 1);\n    }\n    parseRule() {\n        // Experimental kludge to allow opt-in re-parsing of nodes\n        if (this.node.type.spec.reparseInView)\n            return null;\n        // FIXME the assumption that this can always return the current\n        // attrs means that if the user somehow manages to change the\n        // attrs in the dom, that won't be picked up. Not entirely sure\n        // whether this is a problem\n        let rule = { node: this.node.type.name, attrs: this.node.attrs };\n        if (this.node.type.whitespace == \"pre\")\n            rule.preserveWhitespace = \"full\";\n        if (!this.contentDOM) {\n            rule.getContent = () => this.node.content;\n        }\n        else if (!this.contentLost) {\n            rule.contentElement = this.contentDOM;\n        }\n        else {\n            // Chrome likes to randomly recreate parent nodes when\n            // backspacing things. When that happens, this tries to find the\n            // new parent.\n            for (let i = this.children.length - 1; i >= 0; i--) {\n                let child = this.children[i];\n                if (this.dom.contains(child.dom.parentNode)) {\n                    rule.contentElement = child.dom.parentNode;\n                    break;\n                }\n            }\n            if (!rule.contentElement)\n                rule.getContent = () => Fragment.empty;\n        }\n        return rule;\n    }\n    matchesNode(node, outerDeco, innerDeco) {\n        return this.dirty == NOT_DIRTY && node.eq(this.node) &&\n            sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco);\n    }\n    get size() { return this.node.nodeSize; }\n    get border() { return this.node.isLeaf ? 0 : 1; }\n    // Syncs `this.children` to match `this.node.content` and the local\n    // decorations, possibly introducing nesting for marks. Then, in a\n    // separate step, syncs the DOM inside `this.contentDOM` to\n    // `this.children`.\n    updateChildren(view, pos) {\n        let inline = this.node.inlineContent, off = pos;\n        let composition = view.composing ? this.localCompositionInfo(view, pos) : null;\n        let localComposition = composition && composition.pos > -1 ? composition : null;\n        let compositionInChild = composition && composition.pos < 0;\n        let updater = new ViewTreeUpdater(this, localComposition && localComposition.node, view);\n        iterDeco(this.node, this.innerDeco, (widget, i, insideNode) => {\n            if (widget.spec.marks)\n                updater.syncToMarks(widget.spec.marks, inline, view);\n            else if (widget.type.side >= 0 && !insideNode)\n                updater.syncToMarks(i == this.node.childCount ? Mark.none : this.node.child(i).marks, inline, view);\n            // If the next node is a desc matching this widget, reuse it,\n            // otherwise insert the widget as a new view desc.\n            updater.placeWidget(widget, view, off);\n        }, (child, outerDeco, innerDeco, i) => {\n            // Make sure the wrapping mark descs match the node's marks.\n            updater.syncToMarks(child.marks, inline, view);\n            // Try several strategies for drawing this node\n            let compIndex;\n            if (updater.findNodeMatch(child, outerDeco, innerDeco, i)) ;\n            else if (compositionInChild && view.state.selection.from > off &&\n                view.state.selection.to < off + child.nodeSize &&\n                (compIndex = updater.findIndexWithChild(composition.node)) > -1 &&\n                updater.updateNodeAt(child, outerDeco, innerDeco, compIndex, view)) ;\n            else if (updater.updateNextNode(child, outerDeco, innerDeco, view, i, off)) ;\n            else {\n                // Add it as a new view\n                updater.addNode(child, outerDeco, innerDeco, view, off);\n            }\n            off += child.nodeSize;\n        });\n        // Drop all remaining descs after the current position.\n        updater.syncToMarks([], inline, view);\n        if (this.node.isTextblock)\n            updater.addTextblockHacks();\n        updater.destroyRest();\n        // Sync the DOM if anything changed\n        if (updater.changed || this.dirty == CONTENT_DIRTY) {\n            // May have to protect focused DOM from being changed if a composition is active\n            if (localComposition)\n                this.protectLocalComposition(view, localComposition);\n            renderDescs(this.contentDOM, this.children, view);\n            if (ios)\n                iosHacks(this.dom);\n        }\n    }\n    localCompositionInfo(view, pos) {\n        // Only do something if both the selection and a focused text node\n        // are inside of this node\n        let { from, to } = view.state.selection;\n        if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size)\n            return null;\n        let textNode = view.input.compositionNode;\n        if (!textNode || !this.dom.contains(textNode.parentNode))\n            return null;\n        if (this.node.inlineContent) {\n            // Find the text in the focused node in the node, stop if it's not\n            // there (may have been modified through other means, in which\n            // case it should overwritten)\n            let text = textNode.nodeValue;\n            let textPos = findTextInFragment(this.node.content, text, from - pos, to - pos);\n            return textPos < 0 ? null : { node: textNode, pos: textPos, text };\n        }\n        else {\n            return { node: textNode, pos: -1, text: \"\" };\n        }\n    }\n    protectLocalComposition(view, { node, pos, text }) {\n        // The node is already part of a local view desc, leave it there\n        if (this.getDesc(node))\n            return;\n        // Create a composition view for the orphaned nodes\n        let topNode = node;\n        for (;; topNode = topNode.parentNode) {\n            if (topNode.parentNode == this.contentDOM)\n                break;\n            while (topNode.previousSibling)\n                topNode.parentNode.removeChild(topNode.previousSibling);\n            while (topNode.nextSibling)\n                topNode.parentNode.removeChild(topNode.nextSibling);\n            if (topNode.pmViewDesc)\n                topNode.pmViewDesc = undefined;\n        }\n        let desc = new CompositionViewDesc(this, topNode, node, text);\n        view.input.compositionNodes.push(desc);\n        // Patch up this.children to contain the composition view\n        this.children = replaceNodes(this.children, pos, pos + text.length, view, desc);\n    }\n    // If this desc must be updated to match the given node decoration,\n    // do so and return true.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateInner(node, outerDeco, innerDeco, view);\n        return true;\n    }\n    updateInner(node, outerDeco, innerDeco, view) {\n        this.updateOuterDeco(outerDeco);\n        this.node = node;\n        this.innerDeco = innerDeco;\n        if (this.contentDOM)\n            this.updateChildren(view, this.posAtStart);\n        this.dirty = NOT_DIRTY;\n    }\n    updateOuterDeco(outerDeco) {\n        if (sameOuterDeco(outerDeco, this.outerDeco))\n            return;\n        let needsWrap = this.nodeDOM.nodeType != 1;\n        let oldDOM = this.dom;\n        this.dom = patchOuterDeco(this.dom, this.nodeDOM, computeOuterDeco(this.outerDeco, this.node, needsWrap), computeOuterDeco(outerDeco, this.node, needsWrap));\n        if (this.dom != oldDOM) {\n            oldDOM.pmViewDesc = undefined;\n            this.dom.pmViewDesc = this;\n        }\n        this.outerDeco = outerDeco;\n    }\n    // Mark this node as being the selected node.\n    selectNode() {\n        if (this.nodeDOM.nodeType == 1) {\n            this.nodeDOM.classList.add(\"ProseMirror-selectednode\");\n            if (this.contentDOM || !this.node.type.spec.draggable)\n                this.nodeDOM.draggable = true;\n        }\n    }\n    // Remove selected node marking from this node.\n    deselectNode() {\n        if (this.nodeDOM.nodeType == 1) {\n            this.nodeDOM.classList.remove(\"ProseMirror-selectednode\");\n            if (this.contentDOM || !this.node.type.spec.draggable)\n                this.nodeDOM.removeAttribute(\"draggable\");\n        }\n    }\n    get domAtom() { return this.node.isAtom; }\n}\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nfunction docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n    applyOuterDeco(dom, outerDeco, doc);\n    let docView = new NodeViewDesc(undefined, doc, outerDeco, innerDeco, dom, dom, dom, view, 0);\n    if (docView.contentDOM)\n        docView.updateChildren(view, 0);\n    return docView;\n}\nclass TextViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n        super(parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view, 0);\n    }\n    parseRule() {\n        let skip = this.nodeDOM.parentNode;\n        while (skip && skip != this.dom && !skip.pmIsDeco)\n            skip = skip.parentNode;\n        return { skip: (skip || true) };\n    }\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY || (this.dirty != NOT_DIRTY && !this.inParent()) ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateOuterDeco(outerDeco);\n        if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n            this.nodeDOM.nodeValue = node.text;\n            if (view.trackWrites == this.nodeDOM)\n                view.trackWrites = null;\n        }\n        this.node = node;\n        this.dirty = NOT_DIRTY;\n        return true;\n    }\n    inParent() {\n        let parentDOM = this.parent.contentDOM;\n        for (let n = this.nodeDOM; n; n = n.parentNode)\n            if (n == parentDOM)\n                return true;\n        return false;\n    }\n    domFromPos(pos) {\n        return { node: this.nodeDOM, offset: pos };\n    }\n    localPosFromDOM(dom, offset, bias) {\n        if (dom == this.nodeDOM)\n            return this.posAtStart + Math.min(offset, this.node.text.length);\n        return super.localPosFromDOM(dom, offset, bias);\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"characterData\" && mutation.type != \"selection\";\n    }\n    slice(from, to, view) {\n        let node = this.node.cut(from, to), dom = document.createTextNode(node.text);\n        return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view);\n    }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        if (this.dom != this.nodeDOM && (from == 0 || to == this.nodeDOM.nodeValue.length))\n            this.dirty = NODE_DIRTY;\n    }\n    get domAtom() { return false; }\n    isText(text) { return this.node.text == text; }\n}\n// A dummy desc used to tag trailing BR or IMG nodes created to work\n// around contentEditable terribleness.\nclass TrailingHackViewDesc extends ViewDesc {\n    parseRule() { return { ignore: true }; }\n    matchesHack(nodeName) { return this.dirty == NOT_DIRTY && this.dom.nodeName == nodeName; }\n    get domAtom() { return true; }\n    get ignoreForCoords() { return this.dom.nodeName == \"IMG\"; }\n}\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nclass CustomNodeViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n        super(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos);\n        this.spec = spec;\n    }\n    // A custom `update` method gets to decide whether the update goes\n    // through. If it does, and there's a `contentDOM` node, our logic\n    // updates the children.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY)\n            return false;\n        if (this.spec.update && (this.node.type == node.type || this.spec.multiType)) {\n            let result = this.spec.update(node, outerDeco, innerDeco);\n            if (result)\n                this.updateInner(node, outerDeco, innerDeco, view);\n            return result;\n        }\n        else if (!this.contentDOM && !node.isLeaf) {\n            return false;\n        }\n        else {\n            return super.update(node, outerDeco, innerDeco, view);\n        }\n    }\n    selectNode() {\n        this.spec.selectNode ? this.spec.selectNode() : super.selectNode();\n    }\n    deselectNode() {\n        this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode();\n    }\n    setSelection(anchor, head, view, force) {\n        this.spec.setSelection ? this.spec.setSelection(anchor, head, view.root)\n            : super.setSelection(anchor, head, view, force);\n    }\n    destroy() {\n        if (this.spec.destroy)\n            this.spec.destroy();\n        super.destroy();\n    }\n    stopEvent(event) {\n        return this.spec.stopEvent ? this.spec.stopEvent(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation);\n    }\n}\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs, view) {\n    let dom = parentDOM.firstChild, written = false;\n    for (let i = 0; i < descs.length; i++) {\n        let desc = descs[i], childDOM = desc.dom;\n        if (childDOM.parentNode == parentDOM) {\n            while (childDOM != dom) {\n                dom = rm(dom);\n                written = true;\n            }\n            dom = dom.nextSibling;\n        }\n        else {\n            written = true;\n            parentDOM.insertBefore(childDOM, dom);\n        }\n        if (desc instanceof MarkViewDesc) {\n            let pos = dom ? dom.previousSibling : parentDOM.lastChild;\n            renderDescs(desc.contentDOM, desc.children, view);\n            dom = pos ? pos.nextSibling : parentDOM.firstChild;\n        }\n    }\n    while (dom) {\n        dom = rm(dom);\n        written = true;\n    }\n    if (written && view.trackWrites == parentDOM)\n        view.trackWrites = null;\n}\nconst OuterDecoLevel = function (nodeName) {\n    if (nodeName)\n        this.nodeName = nodeName;\n};\nOuterDecoLevel.prototype = Object.create(null);\nconst noDeco = [new OuterDecoLevel];\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n    if (outerDeco.length == 0)\n        return noDeco;\n    let top = needsWrap ? noDeco[0] : new OuterDecoLevel, result = [top];\n    for (let i = 0; i < outerDeco.length; i++) {\n        let attrs = outerDeco[i].type.attrs;\n        if (!attrs)\n            continue;\n        if (attrs.nodeName)\n            result.push(top = new OuterDecoLevel(attrs.nodeName));\n        for (let name in attrs) {\n            let val = attrs[name];\n            if (val == null)\n                continue;\n            if (needsWrap && result.length == 1)\n                result.push(top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\"));\n            if (name == \"class\")\n                top.class = (top.class ? top.class + \" \" : \"\") + val;\n            else if (name == \"style\")\n                top.style = (top.style ? top.style + \";\" : \"\") + val;\n            else if (name != \"nodeName\")\n                top[name] = val;\n        }\n    }\n    return result;\n}\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n    // Shortcut for trivial case\n    if (prevComputed == noDeco && curComputed == noDeco)\n        return nodeDOM;\n    let curDOM = nodeDOM;\n    for (let i = 0; i < curComputed.length; i++) {\n        let deco = curComputed[i], prev = prevComputed[i];\n        if (i) {\n            let parent;\n            if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM &&\n                (parent = curDOM.parentNode) && parent.nodeName.toLowerCase() == deco.nodeName) {\n                curDOM = parent;\n            }\n            else {\n                parent = document.createElement(deco.nodeName);\n                parent.pmIsDeco = true;\n                parent.appendChild(curDOM);\n                prev = noDeco[0];\n                curDOM = parent;\n            }\n        }\n        patchAttributes(curDOM, prev || noDeco[0], deco);\n    }\n    return curDOM;\n}\nfunction patchAttributes(dom, prev, cur) {\n    for (let name in prev)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur))\n            dom.removeAttribute(name);\n    for (let name in cur)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && cur[name] != prev[name])\n            dom.setAttribute(name, cur[name]);\n    if (prev.class != cur.class) {\n        let prevList = prev.class ? prev.class.split(\" \").filter(Boolean) : [];\n        let curList = cur.class ? cur.class.split(\" \").filter(Boolean) : [];\n        for (let i = 0; i < prevList.length; i++)\n            if (curList.indexOf(prevList[i]) == -1)\n                dom.classList.remove(prevList[i]);\n        for (let i = 0; i < curList.length; i++)\n            if (prevList.indexOf(curList[i]) == -1)\n                dom.classList.add(curList[i]);\n        if (dom.classList.length == 0)\n            dom.removeAttribute(\"class\");\n    }\n    if (prev.style != cur.style) {\n        if (prev.style) {\n            let prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g, m;\n            while (m = prop.exec(prev.style))\n                dom.style.removeProperty(m[1]);\n        }\n        if (cur.style)\n            dom.style.cssText += cur.style;\n    }\n}\nfunction applyOuterDeco(dom, deco, node) {\n    return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1));\n}\nfunction sameOuterDeco(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].type.eq(b[i].type))\n            return false;\n    return true;\n}\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nclass ViewTreeUpdater {\n    constructor(top, lock, view) {\n        this.lock = lock;\n        this.view = view;\n        // Index into `this.top`'s child array, represents the current\n        // update position.\n        this.index = 0;\n        // When entering a mark, the current top and index are pushed\n        // onto this.\n        this.stack = [];\n        // Tracks whether anything was changed\n        this.changed = false;\n        this.top = top;\n        this.preMatch = preMatch(top.node.content, top);\n    }\n    // Destroy and remove the children between the given indices in\n    // `this.top`.\n    destroyBetween(start, end) {\n        if (start == end)\n            return;\n        for (let i = start; i < end; i++)\n            this.top.children[i].destroy();\n        this.top.children.splice(start, end - start);\n        this.changed = true;\n    }\n    // Destroy all remaining children in `this.top`.\n    destroyRest() {\n        this.destroyBetween(this.index, this.top.children.length);\n    }\n    // Sync the current stack of mark descs with the given array of\n    // marks, reusing existing mark descs when possible.\n    syncToMarks(marks, inline, view) {\n        let keep = 0, depth = this.stack.length >> 1;\n        let maxKeep = Math.min(depth, marks.length);\n        while (keep < maxKeep &&\n            (keep == depth - 1 ? this.top : this.stack[(keep + 1) << 1])\n                .matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false)\n            keep++;\n        while (keep < depth) {\n            this.destroyRest();\n            this.top.dirty = NOT_DIRTY;\n            this.index = this.stack.pop();\n            this.top = this.stack.pop();\n            depth--;\n        }\n        while (depth < marks.length) {\n            this.stack.push(this.top, this.index + 1);\n            let found = -1;\n            for (let i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n                let next = this.top.children[i];\n                if (next.matchesMark(marks[depth]) && !this.isLocked(next.dom)) {\n                    found = i;\n                    break;\n                }\n            }\n            if (found > -1) {\n                if (found > this.index) {\n                    this.changed = true;\n                    this.destroyBetween(this.index, found);\n                }\n                this.top = this.top.children[this.index];\n            }\n            else {\n                let markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view);\n                this.top.children.splice(this.index, 0, markDesc);\n                this.top = markDesc;\n                this.changed = true;\n            }\n            this.index = 0;\n            depth++;\n        }\n    }\n    // Try to find a node desc matching the given data. Skip over it and\n    // return true when successful.\n    findNodeMatch(node, outerDeco, innerDeco, index) {\n        let found = -1, targetDesc;\n        if (index >= this.preMatch.index &&\n            (targetDesc = this.preMatch.matches[index - this.preMatch.index]).parent == this.top &&\n            targetDesc.matchesNode(node, outerDeco, innerDeco)) {\n            found = this.top.children.indexOf(targetDesc, this.index);\n        }\n        else {\n            for (let i = this.index, e = Math.min(this.top.children.length, i + 5); i < e; i++) {\n                let child = this.top.children[i];\n                if (child.matchesNode(node, outerDeco, innerDeco) && !this.preMatch.matched.has(child)) {\n                    found = i;\n                    break;\n                }\n            }\n        }\n        if (found < 0)\n            return false;\n        this.destroyBetween(this.index, found);\n        this.index++;\n        return true;\n    }\n    updateNodeAt(node, outerDeco, innerDeco, index, view) {\n        let child = this.top.children[index];\n        if (child.dirty == NODE_DIRTY && child.dom == child.contentDOM)\n            child.dirty = CONTENT_DIRTY;\n        if (!child.update(node, outerDeco, innerDeco, view))\n            return false;\n        this.destroyBetween(this.index, index);\n        this.index++;\n        return true;\n    }\n    findIndexWithChild(domNode) {\n        for (;;) {\n            let parent = domNode.parentNode;\n            if (!parent)\n                return -1;\n            if (parent == this.top.contentDOM) {\n                let desc = domNode.pmViewDesc;\n                if (desc)\n                    for (let i = this.index; i < this.top.children.length; i++) {\n                        if (this.top.children[i] == desc)\n                            return i;\n                    }\n                return -1;\n            }\n            domNode = parent;\n        }\n    }\n    // Try to update the next node, if any, to the given data. Checks\n    // pre-matches to avoid overwriting nodes that could still be used.\n    updateNextNode(node, outerDeco, innerDeco, view, index, pos) {\n        for (let i = this.index; i < this.top.children.length; i++) {\n            let next = this.top.children[i];\n            if (next instanceof NodeViewDesc) {\n                let preMatch = this.preMatch.matched.get(next);\n                if (preMatch != null && preMatch != index)\n                    return false;\n                let nextDOM = next.dom, updated;\n                // Can't update if nextDOM is or contains this.lock, except if\n                // it's a text node whose content already matches the new text\n                // and whose decorations match the new ones.\n                let locked = this.isLocked(nextDOM) &&\n                    !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text &&\n                        next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco));\n                if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n                    this.destroyBetween(this.index, i);\n                    if (next.dom != nextDOM)\n                        this.changed = true;\n                    this.index++;\n                    return true;\n                }\n                else if (!locked && (updated = this.recreateWrapper(next, node, outerDeco, innerDeco, view, pos))) {\n                    this.destroyBetween(this.index, i);\n                    this.top.children[this.index] = updated;\n                    if (updated.contentDOM) {\n                        updated.dirty = CONTENT_DIRTY;\n                        updated.updateChildren(view, pos + 1);\n                        updated.dirty = NOT_DIRTY;\n                    }\n                    this.changed = true;\n                    this.index++;\n                    return true;\n                }\n                break;\n            }\n        }\n        return false;\n    }\n    // When a node with content is replaced by a different node with\n    // identical content, move over its children.\n    recreateWrapper(next, node, outerDeco, innerDeco, view, pos) {\n        if (next.dirty || node.isAtom || !next.children.length ||\n            !next.node.content.eq(node.content) ||\n            !sameOuterDeco(outerDeco, next.outerDeco) || !innerDeco.eq(next.innerDeco))\n            return null;\n        let wrapper = NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos);\n        if (wrapper.contentDOM) {\n            wrapper.children = next.children;\n            next.children = [];\n            for (let ch of wrapper.children)\n                ch.parent = wrapper;\n        }\n        next.destroy();\n        return wrapper;\n    }\n    // Insert the node as a newly created node desc.\n    addNode(node, outerDeco, innerDeco, view, pos) {\n        let desc = NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos);\n        if (desc.contentDOM)\n            desc.updateChildren(view, pos + 1);\n        this.top.children.splice(this.index++, 0, desc);\n        this.changed = true;\n    }\n    placeWidget(widget, view, pos) {\n        let next = this.index < this.top.children.length ? this.top.children[this.index] : null;\n        if (next && next.matchesWidget(widget) &&\n            (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n            this.index++;\n        }\n        else {\n            let desc = new WidgetViewDesc(this.top, widget, view, pos);\n            this.top.children.splice(this.index++, 0, desc);\n            this.changed = true;\n        }\n    }\n    // Make sure a textblock looks and behaves correctly in\n    // contentEditable.\n    addTextblockHacks() {\n        let lastChild = this.top.children[this.index - 1], parent = this.top;\n        while (lastChild instanceof MarkViewDesc) {\n            parent = lastChild;\n            lastChild = parent.children[parent.children.length - 1];\n        }\n        if (!lastChild || // Empty textblock\n            !(lastChild instanceof TextViewDesc) ||\n            /\\n$/.test(lastChild.node.text) ||\n            (this.view.requiresGeckoHackNode && /\\s$/.test(lastChild.node.text))) {\n            // Avoid bugs in Safari's cursor drawing (#1165) and Chrome's mouse selection (#1152)\n            if ((safari || chrome) && lastChild && lastChild.dom.contentEditable == \"false\")\n                this.addHackNode(\"IMG\", parent);\n            this.addHackNode(\"BR\", this.top);\n        }\n    }\n    addHackNode(nodeName, parent) {\n        if (parent == this.top && this.index < parent.children.length && parent.children[this.index].matchesHack(nodeName)) {\n            this.index++;\n        }\n        else {\n            let dom = document.createElement(nodeName);\n            if (nodeName == \"IMG\") {\n                dom.className = \"ProseMirror-separator\";\n                dom.alt = \"\";\n            }\n            if (nodeName == \"BR\")\n                dom.className = \"ProseMirror-trailingBreak\";\n            let hack = new TrailingHackViewDesc(this.top, [], dom, null);\n            if (parent != this.top)\n                parent.children.push(hack);\n            else\n                parent.children.splice(this.index++, 0, hack);\n            this.changed = true;\n        }\n    }\n    isLocked(node) {\n        return this.lock && (node == this.lock || node.nodeType == 1 && node.contains(this.lock.parentNode));\n    }\n}\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing those\n// for other nodes. Returns the fragment index of the first node that\n// is part of the sequence of matched nodes at the end of the\n// fragment.\nfunction preMatch(frag, parentDesc) {\n    let curDesc = parentDesc, descI = curDesc.children.length;\n    let fI = frag.childCount, matched = new Map, matches = [];\n    outer: while (fI > 0) {\n        let desc;\n        for (;;) {\n            if (descI) {\n                let next = curDesc.children[descI - 1];\n                if (next instanceof MarkViewDesc) {\n                    curDesc = next;\n                    descI = next.children.length;\n                }\n                else {\n                    desc = next;\n                    descI--;\n                    break;\n                }\n            }\n            else if (curDesc == parentDesc) {\n                break outer;\n            }\n            else {\n                // FIXME\n                descI = curDesc.parent.children.indexOf(curDesc);\n                curDesc = curDesc.parent;\n            }\n        }\n        let node = desc.node;\n        if (!node)\n            continue;\n        if (node != frag.child(fI - 1))\n            break;\n        --fI;\n        matched.set(desc, fI);\n        matches.push(desc);\n    }\n    return { index: fI, matched, matches: matches.reverse() };\n}\nfunction compareSide(a, b) {\n    return a.type.side - b.type.side;\n}\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n    let locals = deco.locals(parent), offset = 0;\n    // Simple, cheap variant for when there are no local decorations\n    if (locals.length == 0) {\n        for (let i = 0; i < parent.childCount; i++) {\n            let child = parent.child(i);\n            onNode(child, locals, deco.forChild(offset, child), i);\n            offset += child.nodeSize;\n        }\n        return;\n    }\n    let decoIndex = 0, active = [], restNode = null;\n    for (let parentIndex = 0;;) {\n        let widget, widgets;\n        while (decoIndex < locals.length && locals[decoIndex].to == offset) {\n            let next = locals[decoIndex++];\n            if (next.widget) {\n                if (!widget)\n                    widget = next;\n                else\n                    (widgets || (widgets = [widget])).push(next);\n            }\n        }\n        if (widget) {\n            if (widgets) {\n                widgets.sort(compareSide);\n                for (let i = 0; i < widgets.length; i++)\n                    onWidget(widgets[i], parentIndex, !!restNode);\n            }\n            else {\n                onWidget(widget, parentIndex, !!restNode);\n            }\n        }\n        let child, index;\n        if (restNode) {\n            index = -1;\n            child = restNode;\n            restNode = null;\n        }\n        else if (parentIndex < parent.childCount) {\n            index = parentIndex;\n            child = parent.child(parentIndex++);\n        }\n        else {\n            break;\n        }\n        for (let i = 0; i < active.length; i++)\n            if (active[i].to <= offset)\n                active.splice(i--, 1);\n        while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset)\n            active.push(locals[decoIndex++]);\n        let end = offset + child.nodeSize;\n        if (child.isText) {\n            let cutAt = end;\n            if (decoIndex < locals.length && locals[decoIndex].from < cutAt)\n                cutAt = locals[decoIndex].from;\n            for (let i = 0; i < active.length; i++)\n                if (active[i].to < cutAt)\n                    cutAt = active[i].to;\n            if (cutAt < end) {\n                restNode = child.cut(cutAt - offset);\n                child = child.cut(0, cutAt - offset);\n                end = cutAt;\n                index = -1;\n            }\n        }\n        else {\n            while (decoIndex < locals.length && locals[decoIndex].to < end)\n                decoIndex++;\n        }\n        let outerDeco = child.isInline && !child.isLeaf ? active.filter(d => !d.inline) : active.slice();\n        onNode(child, outerDeco, deco.forChild(offset, child), index);\n        offset = end;\n    }\n}\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n    if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n        let oldCSS = dom.style.cssText;\n        dom.style.cssText = oldCSS + \"; list-style: square !important\";\n        window.getComputedStyle(dom).listStyle;\n        dom.style.cssText = oldCSS;\n    }\n}\n// Find a piece of text in an inline fragment, overlapping from-to\nfunction findTextInFragment(frag, text, from, to) {\n    for (let i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n        let child = frag.child(i++), childStart = pos;\n        pos += child.nodeSize;\n        if (!child.isText)\n            continue;\n        let str = child.text;\n        while (i < frag.childCount) {\n            let next = frag.child(i++);\n            pos += next.nodeSize;\n            if (!next.isText)\n                break;\n            str += next.text;\n        }\n        if (pos >= from) {\n            if (pos >= to && str.slice(to - text.length - childStart, to - childStart) == text)\n                return to - text.length;\n            let found = childStart < to ? str.lastIndexOf(text, to - childStart - 1) : -1;\n            if (found >= 0 && found + text.length + childStart >= from)\n                return childStart + found;\n            if (from == to && str.length >= (to + text.length) - childStart &&\n                str.slice(to - childStart, to - childStart + text.length) == text)\n                return to;\n        }\n    }\n    return -1;\n}\n// Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\nfunction replaceNodes(nodes, from, to, view, replacement) {\n    let result = [];\n    for (let i = 0, off = 0; i < nodes.length; i++) {\n        let child = nodes[i], start = off, end = off += child.size;\n        if (start >= to || end <= from) {\n            result.push(child);\n        }\n        else {\n            if (start < from)\n                result.push(child.slice(0, from - start, view));\n            if (replacement) {\n                result.push(replacement);\n                replacement = undefined;\n            }\n            if (end > to)\n                result.push(child.slice(to - start, child.size, view));\n        }\n    }\n    return result;\n}\n\nfunction selectionFromDOM(view, origin = null) {\n    let domSel = view.domSelectionRange(), doc = view.state.doc;\n    if (!domSel.focusNode)\n        return null;\n    let nearestDesc = view.docView.nearestDesc(domSel.focusNode), inWidget = nearestDesc && nearestDesc.size == 0;\n    let head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset, 1);\n    if (head < 0)\n        return null;\n    let $head = doc.resolve(head), anchor, selection;\n    if (selectionCollapsed(domSel)) {\n        anchor = head;\n        while (nearestDesc && !nearestDesc.node)\n            nearestDesc = nearestDesc.parent;\n        let nearestDescNode = nearestDesc.node;\n        if (nearestDesc && nearestDescNode.isAtom && NodeSelection.isSelectable(nearestDescNode) && nearestDesc.parent\n            && !(nearestDescNode.isInline && isOnEdge(domSel.focusNode, domSel.focusOffset, nearestDesc.dom))) {\n            let pos = nearestDesc.posBefore;\n            selection = new NodeSelection(head == pos ? $head : doc.resolve(pos));\n        }\n    }\n    else {\n        if (domSel instanceof view.dom.ownerDocument.defaultView.Selection && domSel.rangeCount > 1) {\n            let min = head, max = head;\n            for (let i = 0; i < domSel.rangeCount; i++) {\n                let range = domSel.getRangeAt(i);\n                min = Math.min(min, view.docView.posFromDOM(range.startContainer, range.startOffset, 1));\n                max = Math.max(max, view.docView.posFromDOM(range.endContainer, range.endOffset, -1));\n            }\n            if (min < 0)\n                return null;\n            [anchor, head] = max == view.state.selection.anchor ? [max, min] : [min, max];\n            $head = doc.resolve(head);\n        }\n        else {\n            anchor = view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset, 1);\n        }\n        if (anchor < 0)\n            return null;\n    }\n    let $anchor = doc.resolve(anchor);\n    if (!selection) {\n        let bias = origin == \"pointer\" || (view.state.selection.head < $head.pos && !inWidget) ? 1 : -1;\n        selection = selectionBetween(view, $anchor, $head, bias);\n    }\n    return selection;\n}\nfunction editorOwnsSelection(view) {\n    return view.editable ? view.hasFocus() :\n        hasSelection(view) && document.activeElement && document.activeElement.contains(view.dom);\n}\nfunction selectionToDOM(view, force = false) {\n    let sel = view.state.selection;\n    syncNodeSelection(view, sel);\n    if (!editorOwnsSelection(view))\n        return;\n    // The delayed drag selection causes issues with Cell Selections\n    // in Safari. And the drag selection delay is to workarond issues\n    // which only present in Chrome.\n    if (!force && view.input.mouseDown && view.input.mouseDown.allowDefault && chrome) {\n        let domSel = view.domSelectionRange(), curSel = view.domObserver.currentSelection;\n        if (domSel.anchorNode && curSel.anchorNode &&\n            isEquivalentPosition(domSel.anchorNode, domSel.anchorOffset, curSel.anchorNode, curSel.anchorOffset)) {\n            view.input.mouseDown.delayedSelectionSync = true;\n            view.domObserver.setCurSelection();\n            return;\n        }\n    }\n    view.domObserver.disconnectSelection();\n    if (view.cursorWrapper) {\n        selectCursorWrapper(view);\n    }\n    else {\n        let { anchor, head } = sel, resetEditableFrom, resetEditableTo;\n        if (brokenSelectBetweenUneditable && !(sel instanceof TextSelection)) {\n            if (!sel.$from.parent.inlineContent)\n                resetEditableFrom = temporarilyEditableNear(view, sel.from);\n            if (!sel.empty && !sel.$from.parent.inlineContent)\n                resetEditableTo = temporarilyEditableNear(view, sel.to);\n        }\n        view.docView.setSelection(anchor, head, view, force);\n        if (brokenSelectBetweenUneditable) {\n            if (resetEditableFrom)\n                resetEditable(resetEditableFrom);\n            if (resetEditableTo)\n                resetEditable(resetEditableTo);\n        }\n        if (sel.visible) {\n            view.dom.classList.remove(\"ProseMirror-hideselection\");\n        }\n        else {\n            view.dom.classList.add(\"ProseMirror-hideselection\");\n            if (\"onselectionchange\" in document)\n                removeClassOnSelectionChange(view);\n        }\n    }\n    view.domObserver.setCurSelection();\n    view.domObserver.connectSelection();\n}\n// Kludge to work around Webkit not allowing a selection to start/end\n// between non-editable block nodes. We briefly make something\n// editable, set the selection, then set it uneditable again.\nconst brokenSelectBetweenUneditable = safari || chrome && chrome_version < 63;\nfunction temporarilyEditableNear(view, pos) {\n    let { node, offset } = view.docView.domFromPos(pos, 0);\n    let after = offset < node.childNodes.length ? node.childNodes[offset] : null;\n    let before = offset ? node.childNodes[offset - 1] : null;\n    if (safari && after && after.contentEditable == \"false\")\n        return setEditable(after);\n    if ((!after || after.contentEditable == \"false\") &&\n        (!before || before.contentEditable == \"false\")) {\n        if (after)\n            return setEditable(after);\n        else if (before)\n            return setEditable(before);\n    }\n}\nfunction setEditable(element) {\n    element.contentEditable = \"true\";\n    if (safari && element.draggable) {\n        element.draggable = false;\n        element.wasDraggable = true;\n    }\n    return element;\n}\nfunction resetEditable(element) {\n    element.contentEditable = \"false\";\n    if (element.wasDraggable) {\n        element.draggable = true;\n        element.wasDraggable = null;\n    }\n}\nfunction removeClassOnSelectionChange(view) {\n    let doc = view.dom.ownerDocument;\n    doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n    let domSel = view.domSelectionRange();\n    let node = domSel.anchorNode, offset = domSel.anchorOffset;\n    doc.addEventListener(\"selectionchange\", view.input.hideSelectionGuard = () => {\n        if (domSel.anchorNode != node || domSel.anchorOffset != offset) {\n            doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n            setTimeout(() => {\n                if (!editorOwnsSelection(view) || view.state.selection.visible)\n                    view.dom.classList.remove(\"ProseMirror-hideselection\");\n            }, 20);\n        }\n    });\n}\nfunction selectCursorWrapper(view) {\n    let domSel = view.domSelection();\n    if (!domSel)\n        return;\n    let node = view.cursorWrapper.dom, img = node.nodeName == \"IMG\";\n    if (img)\n        domSel.collapse(node.parentNode, domIndex(node) + 1);\n    else\n        domSel.collapse(node, 0);\n    // Kludge to kill 'control selection' in IE11 when selecting an\n    // invisible cursor wrapper, since that would result in those weird\n    // resize handles and a selection that considers the absolutely\n    // positioned wrapper, rather than the root editable node, the\n    // focused element.\n    if (!img && !view.state.selection.visible && ie && ie_version <= 11) {\n        node.disabled = true;\n        node.disabled = false;\n    }\n}\nfunction syncNodeSelection(view, sel) {\n    if (sel instanceof NodeSelection) {\n        let desc = view.docView.descAt(sel.from);\n        if (desc != view.lastSelectedViewDesc) {\n            clearNodeSelection(view);\n            if (desc)\n                desc.selectNode();\n            view.lastSelectedViewDesc = desc;\n        }\n    }\n    else {\n        clearNodeSelection(view);\n    }\n}\n// Clear all DOM statefulness of the last node selection.\nfunction clearNodeSelection(view) {\n    if (view.lastSelectedViewDesc) {\n        if (view.lastSelectedViewDesc.parent)\n            view.lastSelectedViewDesc.deselectNode();\n        view.lastSelectedViewDesc = undefined;\n    }\n}\nfunction selectionBetween(view, $anchor, $head, bias) {\n    return view.someProp(\"createSelectionBetween\", f => f(view, $anchor, $head))\n        || TextSelection.between($anchor, $head, bias);\n}\nfunction hasFocusAndSelection(view) {\n    if (view.editable && !view.hasFocus())\n        return false;\n    return hasSelection(view);\n}\nfunction hasSelection(view) {\n    let sel = view.domSelectionRange();\n    if (!sel.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return view.dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode : sel.anchorNode) &&\n            (view.editable || view.dom.contains(sel.focusNode.nodeType == 3 ? sel.focusNode.parentNode : sel.focusNode));\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction anchorInRightPlace(view) {\n    let anchorDOM = view.docView.domFromPos(view.state.selection.anchor, 0);\n    let domSel = view.domSelectionRange();\n    return isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset);\n}\n\nfunction moveSelectionBlock(state, dir) {\n    let { $anchor, $head } = state.selection;\n    let $side = dir > 0 ? $anchor.max($head) : $anchor.min($head);\n    let $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null;\n    return $start && Selection.findFrom($start, dir);\n}\nfunction apply(view, sel) {\n    view.dispatch(view.state.tr.setSelection(sel).scrollIntoView());\n    return true;\n}\nfunction selectHorizontally(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection) {\n        if (mods.indexOf(\"s\") > -1) {\n            let { $head } = sel, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter;\n            if (!node || node.isText || !node.isLeaf)\n                return false;\n            let $newHead = view.state.doc.resolve($head.pos + node.nodeSize * (dir < 0 ? -1 : 1));\n            return apply(view, new TextSelection(sel.$anchor, $newHead));\n        }\n        else if (!sel.empty) {\n            return false;\n        }\n        else if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\")) {\n            let next = moveSelectionBlock(view.state, dir);\n            if (next && (next instanceof NodeSelection))\n                return apply(view, next);\n            return false;\n        }\n        else if (!(mac && mods.indexOf(\"m\") > -1)) {\n            let $head = sel.$head, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter, desc;\n            if (!node || node.isText)\n                return false;\n            let nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos;\n            if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM))\n                return false;\n            if (NodeSelection.isSelectable(node)) {\n                return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head));\n            }\n            else if (webkit) {\n                // Chrome and Safari will introduce extra pointless cursor\n                // positions around inline uneditable nodes, so we have to\n                // take over and move the cursor past them (#937)\n                return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)));\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    else if (sel instanceof NodeSelection && sel.node.isInline) {\n        return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from));\n    }\n    else {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next)\n            return apply(view, next);\n        return false;\n    }\n}\nfunction nodeLen(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction isIgnorable(dom, dir) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.size == 0 && (dir < 0 || dom.nextSibling || dom.nodeName != \"BR\");\n}\nfunction skipIgnoredNodes(view, dir) {\n    return dir < 0 ? skipIgnoredNodesBefore(view) : skipIgnoredNodesAfter(view);\n}\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesBefore(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let moveNode, moveOffset, force = false;\n    // Gecko will do odd things when the selection is directly in front\n    // of a non-editable node, so in that case, move it into the next\n    // node if possible. Issue prosemirror/prosemirror#832.\n    if (gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset], -1))\n        force = true;\n    for (;;) {\n        if (offset > 0) {\n            if (node.nodeType != 1) {\n                break;\n            }\n            else {\n                let before = node.childNodes[offset - 1];\n                if (isIgnorable(before, -1)) {\n                    moveNode = node;\n                    moveOffset = --offset;\n                }\n                else if (before.nodeType == 3) {\n                    node = before;\n                    offset = node.nodeValue.length;\n                }\n                else\n                    break;\n            }\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let prev = node.previousSibling;\n            while (prev && isIgnorable(prev, -1)) {\n                moveNode = node.parentNode;\n                moveOffset = domIndex(prev);\n                prev = prev.previousSibling;\n            }\n            if (!prev) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = 0;\n            }\n            else {\n                node = prev;\n                offset = nodeLen(node);\n            }\n        }\n    }\n    if (force)\n        setSelFocus(view, node, offset);\n    else if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesAfter(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let len = nodeLen(node);\n    let moveNode, moveOffset;\n    for (;;) {\n        if (offset < len) {\n            if (node.nodeType != 1)\n                break;\n            let after = node.childNodes[offset];\n            if (isIgnorable(after, 1)) {\n                moveNode = node;\n                moveOffset = ++offset;\n            }\n            else\n                break;\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let next = node.nextSibling;\n            while (next && isIgnorable(next, 1)) {\n                moveNode = next.parentNode;\n                moveOffset = domIndex(next) + 1;\n                next = next.nextSibling;\n            }\n            if (!next) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = len = 0;\n            }\n            else {\n                node = next;\n                offset = 0;\n                len = nodeLen(node);\n            }\n        }\n    }\n    if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\nfunction isBlockNode(dom) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.node && desc.node.isBlock;\n}\nfunction textNodeAfter(node, offset) {\n    while (node && offset == node.childNodes.length && !hasBlockDesc(node)) {\n        offset = domIndex(node) + 1;\n        node = node.parentNode;\n    }\n    while (node && offset < node.childNodes.length) {\n        let next = node.childNodes[offset];\n        if (next.nodeType == 3)\n            return next;\n        if (next.nodeType == 1 && next.contentEditable == \"false\")\n            break;\n        node = next;\n        offset = 0;\n    }\n}\nfunction textNodeBefore(node, offset) {\n    while (node && !offset && !hasBlockDesc(node)) {\n        offset = domIndex(node);\n        node = node.parentNode;\n    }\n    while (node && offset) {\n        let next = node.childNodes[offset - 1];\n        if (next.nodeType == 3)\n            return next;\n        if (next.nodeType == 1 && next.contentEditable == \"false\")\n            break;\n        node = next;\n        offset = node.childNodes.length;\n    }\n}\nfunction setSelFocus(view, node, offset) {\n    if (node.nodeType != 3) {\n        let before, after;\n        if (after = textNodeAfter(node, offset)) {\n            node = after;\n            offset = 0;\n        }\n        else if (before = textNodeBefore(node, offset)) {\n            node = before;\n            offset = before.nodeValue.length;\n        }\n    }\n    let sel = view.domSelection();\n    if (!sel)\n        return;\n    if (selectionCollapsed(sel)) {\n        let range = document.createRange();\n        range.setEnd(node, offset);\n        range.setStart(node, offset);\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n    else if (sel.extend) {\n        sel.extend(node, offset);\n    }\n    view.domObserver.setCurSelection();\n    let { state } = view;\n    // If no state update ends up happening, reset the selection.\n    setTimeout(() => {\n        if (view.state == state)\n            selectionToDOM(view);\n    }, 50);\n}\nfunction findDirection(view, pos) {\n    let $pos = view.state.doc.resolve(pos);\n    if (!(chrome || windows) && $pos.parent.inlineContent) {\n        let coords = view.coordsAtPos(pos);\n        if (pos > $pos.start()) {\n            let before = view.coordsAtPos(pos - 1);\n            let mid = (before.top + before.bottom) / 2;\n            if (mid > coords.top && mid < coords.bottom && Math.abs(before.left - coords.left) > 1)\n                return before.left < coords.left ? \"ltr\" : \"rtl\";\n        }\n        if (pos < $pos.end()) {\n            let after = view.coordsAtPos(pos + 1);\n            let mid = (after.top + after.bottom) / 2;\n            if (mid > coords.top && mid < coords.bottom && Math.abs(after.left - coords.left) > 1)\n                return after.left > coords.left ? \"ltr\" : \"rtl\";\n        }\n    }\n    let computed = getComputedStyle(view.dom).direction;\n    return computed == \"rtl\" ? \"rtl\" : \"ltr\";\n}\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1)\n        return false;\n    if (mac && mods.indexOf(\"m\") > -1)\n        return false;\n    let { $from, $to } = sel;\n    if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next && (next instanceof NodeSelection))\n            return apply(view, next);\n    }\n    if (!$from.parent.inlineContent) {\n        let side = dir < 0 ? $from : $to;\n        let beyond = sel instanceof AllSelection ? Selection.near(side, dir) : Selection.findFrom(side, dir);\n        return beyond ? apply(view, beyond) : false;\n    }\n    return false;\n}\nfunction stopNativeHorizontalDelete(view, dir) {\n    if (!(view.state.selection instanceof TextSelection))\n        return true;\n    let { $head, $anchor, empty } = view.state.selection;\n    if (!$head.sameParent($anchor))\n        return true;\n    if (!empty)\n        return false;\n    if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\"))\n        return true;\n    let nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter);\n    if (nextNode && !nextNode.isText) {\n        let tr = view.state.tr;\n        if (dir < 0)\n            tr.delete($head.pos - nextNode.nodeSize, $head.pos);\n        else\n            tr.delete($head.pos, $head.pos + nextNode.nodeSize);\n        view.dispatch(tr);\n        return true;\n    }\n    return false;\n}\nfunction switchEditable(view, node, state) {\n    view.domObserver.stop();\n    node.contentEditable = state;\n    view.domObserver.start();\n}\n// Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\nfunction safariDownArrowBug(view) {\n    if (!safari || view.state.selection.$head.parentOffset > 0)\n        return false;\n    let { focusNode, focusOffset } = view.domSelectionRange();\n    if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 &&\n        focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n        let child = focusNode.firstChild;\n        switchEditable(view, child, \"true\");\n        setTimeout(() => switchEditable(view, child, \"false\"), 20);\n    }\n    return false;\n}\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\nfunction getMods(event) {\n    let result = \"\";\n    if (event.ctrlKey)\n        result += \"c\";\n    if (event.metaKey)\n        result += \"m\";\n    if (event.altKey)\n        result += \"a\";\n    if (event.shiftKey)\n        result += \"s\";\n    return result;\n}\nfunction captureKeyDown(view, event) {\n    let code = event.keyCode, mods = getMods(event);\n    if (code == 8 || (mac && code == 72 && mods == \"c\")) { // Backspace, Ctrl-h on Mac\n        return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodes(view, -1);\n    }\n    else if ((code == 46 && !event.shiftKey) || (mac && code == 68 && mods == \"c\")) { // Delete, Ctrl-d on Mac\n        return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodes(view, 1);\n    }\n    else if (code == 13 || code == 27) { // Enter, Esc\n        return true;\n    }\n    else if (code == 37 || (mac && code == 66 && mods == \"c\")) { // Left arrow, Ctrl-b on Mac\n        let dir = code == 37 ? (findDirection(view, view.state.selection.from) == \"ltr\" ? -1 : 1) : -1;\n        return selectHorizontally(view, dir, mods) || skipIgnoredNodes(view, dir);\n    }\n    else if (code == 39 || (mac && code == 70 && mods == \"c\")) { // Right arrow, Ctrl-f on Mac\n        let dir = code == 39 ? (findDirection(view, view.state.selection.from) == \"ltr\" ? 1 : -1) : 1;\n        return selectHorizontally(view, dir, mods) || skipIgnoredNodes(view, dir);\n    }\n    else if (code == 38 || (mac && code == 80 && mods == \"c\")) { // Up arrow, Ctrl-p on Mac\n        return selectVertically(view, -1, mods) || skipIgnoredNodes(view, -1);\n    }\n    else if (code == 40 || (mac && code == 78 && mods == \"c\")) { // Down arrow, Ctrl-n on Mac\n        return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodes(view, 1);\n    }\n    else if (mods == (mac ? \"m\" : \"c\") &&\n        (code == 66 || code == 73 || code == 89 || code == 90)) { // Mod-[biyz]\n        return true;\n    }\n    return false;\n}\n\nfunction serializeForClipboard(view, slice) {\n    view.someProp(\"transformCopied\", f => { slice = f(slice, view); });\n    let context = [], { content, openStart, openEnd } = slice;\n    while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n        openStart--;\n        openEnd--;\n        let node = content.firstChild;\n        context.push(node.type.name, node.attrs != node.type.defaultAttrs ? node.attrs : null);\n        content = node.content;\n    }\n    let serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema);\n    let doc = detachedDoc(), wrap = doc.createElement(\"div\");\n    wrap.appendChild(serializer.serializeFragment(content, { document: doc }));\n    let firstChild = wrap.firstChild, needsWrap, wrappers = 0;\n    while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n        for (let i = needsWrap.length - 1; i >= 0; i--) {\n            let wrapper = doc.createElement(needsWrap[i]);\n            while (wrap.firstChild)\n                wrapper.appendChild(wrap.firstChild);\n            wrap.appendChild(wrapper);\n            wrappers++;\n        }\n        firstChild = wrap.firstChild;\n    }\n    if (firstChild && firstChild.nodeType == 1)\n        firstChild.setAttribute(\"data-pm-slice\", `${openStart} ${openEnd}${wrappers ? ` -${wrappers}` : \"\"} ${JSON.stringify(context)}`);\n    let text = view.someProp(\"clipboardTextSerializer\", f => f(slice, view)) ||\n        slice.content.textBetween(0, slice.content.size, \"\\n\\n\");\n    return { dom: wrap, text, slice };\n}\n// Read a slice of content from the clipboard (or drop data).\nfunction parseFromClipboard(view, text, html, plainText, $context) {\n    let inCode = $context.parent.type.spec.code;\n    let dom, slice;\n    if (!html && !text)\n        return null;\n    let asText = !!text && (plainText || inCode || !html);\n    if (asText) {\n        view.someProp(\"transformPastedText\", f => { text = f(text, inCode || plainText, view); });\n        if (inCode) {\n            slice = new Slice(Fragment.from(view.state.schema.text(text.replace(/\\r\\n?/g, \"\\n\"))), 0, 0);\n            view.someProp(\"transformPasted\", f => { slice = f(slice, view, true); });\n            return slice;\n        }\n        let parsed = view.someProp(\"clipboardTextParser\", f => f(text, $context, plainText, view));\n        if (parsed) {\n            slice = parsed;\n        }\n        else {\n            let marks = $context.marks();\n            let { schema } = view.state, serializer = DOMSerializer.fromSchema(schema);\n            dom = document.createElement(\"div\");\n            text.split(/(?:\\r\\n?|\\n)+/).forEach(block => {\n                let p = dom.appendChild(document.createElement(\"p\"));\n                if (block)\n                    p.appendChild(serializer.serializeNode(schema.text(block, marks)));\n            });\n        }\n    }\n    else {\n        view.someProp(\"transformPastedHTML\", f => { html = f(html, view); });\n        dom = readHTML(html);\n        if (webkit)\n            restoreReplacedSpaces(dom);\n    }\n    let contextNode = dom && dom.querySelector(\"[data-pm-slice]\");\n    let sliceData = contextNode && /^(\\d+) (\\d+)(?: -(\\d+))? (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\") || \"\");\n    if (sliceData && sliceData[3])\n        for (let i = +sliceData[3]; i > 0; i--) {\n            let child = dom.firstChild;\n            while (child && child.nodeType != 1)\n                child = child.nextSibling;\n            if (!child)\n                break;\n            dom = child;\n        }\n    if (!slice) {\n        let parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n        slice = parser.parseSlice(dom, {\n            preserveWhitespace: !!(asText || sliceData),\n            context: $context,\n            ruleFromNode(dom) {\n                if (dom.nodeName == \"BR\" && !dom.nextSibling &&\n                    dom.parentNode && !inlineParents.test(dom.parentNode.nodeName))\n                    return { ignore: true };\n                return null;\n            }\n        });\n    }\n    if (sliceData) {\n        slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[4]);\n    }\n    else { // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n        slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), true);\n        if (slice.openStart || slice.openEnd) {\n            let openStart = 0, openEnd = 0;\n            for (let node = slice.content.firstChild; openStart < slice.openStart && !node.type.spec.isolating; openStart++, node = node.firstChild) { }\n            for (let node = slice.content.lastChild; openEnd < slice.openEnd && !node.type.spec.isolating; openEnd++, node = node.lastChild) { }\n            slice = closeSlice(slice, openStart, openEnd);\n        }\n    }\n    view.someProp(\"transformPasted\", f => { slice = f(slice, view, asText); });\n    return slice;\n}\nconst inlineParents = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i;\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(fragment, $context) {\n    if (fragment.childCount < 2)\n        return fragment;\n    for (let d = $context.depth; d >= 0; d--) {\n        let parent = $context.node(d);\n        let match = parent.contentMatchAt($context.index(d));\n        let lastWrap, result = [];\n        fragment.forEach(node => {\n            if (!result)\n                return;\n            let wrap = match.findWrapping(node.type), inLast;\n            if (!wrap)\n                return result = null;\n            if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n                result[result.length - 1] = inLast;\n            }\n            else {\n                if (result.length)\n                    result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length);\n                let wrapped = withWrappers(node, wrap);\n                result.push(wrapped);\n                match = match.matchType(wrapped.type);\n                lastWrap = wrap;\n            }\n        });\n        if (result)\n            return Fragment.from(result);\n    }\n    return fragment;\n}\nfunction withWrappers(node, wrap, from = 0) {\n    for (let i = wrap.length - 1; i >= from; i--)\n        node = wrap[i].create(null, Fragment.from(node));\n    return node;\n}\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n    if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n        let inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1);\n        if (inner)\n            return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner));\n        let match = sibling.contentMatchAt(sibling.childCount);\n        if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1]))\n            return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1))));\n    }\n}\nfunction closeRight(node, depth) {\n    if (depth == 0)\n        return node;\n    let fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1));\n    let fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true);\n    return node.copy(fragment.append(fill));\n}\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n    let node = side < 0 ? fragment.firstChild : fragment.lastChild, inner = node.content;\n    if (fragment.childCount > 1)\n        openEnd = 0;\n    if (depth < to - 1)\n        inner = closeRange(inner, side, from, to, depth + 1, openEnd);\n    if (depth >= from)\n        inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, openEnd <= depth).append(inner)\n            : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true));\n    return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner));\n}\nfunction closeSlice(slice, openStart, openEnd) {\n    if (openStart < slice.openStart)\n        slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd);\n    if (openEnd < slice.openEnd)\n        slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd);\n    return slice;\n}\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nconst wrapMap = {\n    thead: [\"table\"],\n    tbody: [\"table\"],\n    tfoot: [\"table\"],\n    caption: [\"table\"],\n    colgroup: [\"table\"],\n    col: [\"table\", \"colgroup\"],\n    tr: [\"table\", \"tbody\"],\n    td: [\"table\", \"tbody\", \"tr\"],\n    th: [\"table\", \"tbody\", \"tr\"]\n};\nlet _detachedDoc = null;\nfunction detachedDoc() {\n    return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"));\n}\nlet _policy = null;\nfunction maybeWrapTrusted(html) {\n    let trustedTypes = window.trustedTypes;\n    if (!trustedTypes)\n        return html;\n    // With the require-trusted-types-for CSP, Chrome will block\n    // innerHTML, even on a detached document. This wraps the string in\n    // a way that makes the browser allow us to use its parser again.\n    if (!_policy)\n        _policy = trustedTypes.defaultPolicy || trustedTypes.createPolicy(\"ProseMirrorClipboard\", { createHTML: (s) => s });\n    return _policy.createHTML(html);\n}\nfunction readHTML(html) {\n    let metas = /^(\\s*<meta [^>]*>)*/.exec(html);\n    if (metas)\n        html = html.slice(metas[0].length);\n    let elt = detachedDoc().createElement(\"div\");\n    let firstTag = /<([a-z][^>\\s]+)/i.exec(html), wrap;\n    if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()])\n        html = wrap.map(n => \"<\" + n + \">\").join(\"\") + html + wrap.map(n => \"</\" + n + \">\").reverse().join(\"\");\n    elt.innerHTML = maybeWrapTrusted(html);\n    if (wrap)\n        for (let i = 0; i < wrap.length; i++)\n            elt = elt.querySelector(wrap[i]) || elt;\n    return elt;\n}\n// Webkit browsers do some hard-to-predict replacement of regular\n// spaces with non-breaking spaces when putting content on the\n// clipboard. This tries to convert such non-breaking spaces (which\n// will be wrapped in a plain span on Chrome, a span with class\n// Apple-converted-space on Safari) back to regular spaces.\nfunction restoreReplacedSpaces(dom) {\n    let nodes = dom.querySelectorAll(chrome ? \"span:not([class]):not([style])\" : \"span.Apple-converted-space\");\n    for (let i = 0; i < nodes.length; i++) {\n        let node = nodes[i];\n        if (node.childNodes.length == 1 && node.textContent == \"\\u00a0\" && node.parentNode)\n            node.parentNode.replaceChild(dom.ownerDocument.createTextNode(\" \"), node);\n    }\n}\nfunction addContext(slice, context) {\n    if (!slice.size)\n        return slice;\n    let schema = slice.content.firstChild.type.schema, array;\n    try {\n        array = JSON.parse(context);\n    }\n    catch (e) {\n        return slice;\n    }\n    let { content, openStart, openEnd } = slice;\n    for (let i = array.length - 2; i >= 0; i -= 2) {\n        let type = schema.nodes[array[i]];\n        if (!type || type.hasRequiredAttrs())\n            break;\n        content = Fragment.from(type.create(array[i + 1], content));\n        openStart++;\n        openEnd++;\n    }\n    return new Slice(content, openStart, openEnd);\n}\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nconst handlers = {};\nconst editHandlers = {};\nconst passiveHandlers = { touchstart: true, touchmove: true };\nclass InputState {\n    constructor() {\n        this.shiftKey = false;\n        this.mouseDown = null;\n        this.lastKeyCode = null;\n        this.lastKeyCodeTime = 0;\n        this.lastClick = { time: 0, x: 0, y: 0, type: \"\", button: 0 };\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.lastIOSEnter = 0;\n        this.lastIOSEnterFallbackTimeout = -1;\n        this.lastFocus = 0;\n        this.lastTouch = 0;\n        this.lastChromeDelete = 0;\n        this.composing = false;\n        this.compositionNode = null;\n        this.composingTimeout = -1;\n        this.compositionNodes = [];\n        this.compositionEndedAt = -2e8;\n        this.compositionID = 1;\n        // Set to a composition ID when there are pending changes at compositionend\n        this.compositionPendingChanges = 0;\n        this.domChangeCount = 0;\n        this.eventHandlers = Object.create(null);\n        this.hideSelectionGuard = null;\n    }\n}\nfunction initInput(view) {\n    for (let event in handlers) {\n        let handler = handlers[event];\n        view.dom.addEventListener(event, view.input.eventHandlers[event] = (event) => {\n            if (eventBelongsToView(view, event) && !runCustomHandler(view, event) &&\n                (view.editable || !(event.type in editHandlers)))\n                handler(view, event);\n        }, passiveHandlers[event] ? { passive: true } : undefined);\n    }\n    // On Safari, for reasons beyond my understanding, adding an input\n    // event handler makes an issue where the composition vanishes when\n    // you press enter go away.\n    if (safari)\n        view.dom.addEventListener(\"input\", () => null);\n    ensureListeners(view);\n}\nfunction setSelectionOrigin(view, origin) {\n    view.input.lastSelectionOrigin = origin;\n    view.input.lastSelectionTime = Date.now();\n}\nfunction destroyInput(view) {\n    view.domObserver.stop();\n    for (let type in view.input.eventHandlers)\n        view.dom.removeEventListener(type, view.input.eventHandlers[type]);\n    clearTimeout(view.input.composingTimeout);\n    clearTimeout(view.input.lastIOSEnterFallbackTimeout);\n}\nfunction ensureListeners(view) {\n    view.someProp(\"handleDOMEvents\", currentHandlers => {\n        for (let type in currentHandlers)\n            if (!view.input.eventHandlers[type])\n                view.dom.addEventListener(type, view.input.eventHandlers[type] = event => runCustomHandler(view, event));\n    });\n}\nfunction runCustomHandler(view, event) {\n    return view.someProp(\"handleDOMEvents\", handlers => {\n        let handler = handlers[event.type];\n        return handler ? handler(view, event) || event.defaultPrevented : false;\n    });\n}\nfunction eventBelongsToView(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target; node != view.dom; node = node.parentNode)\n        if (!node || node.nodeType == 11 ||\n            (node.pmViewDesc && node.pmViewDesc.stopEvent(event)))\n            return false;\n    return true;\n}\nfunction dispatchEvent(view, event) {\n    if (!runCustomHandler(view, event) && handlers[event.type] &&\n        (view.editable || !(event.type in editHandlers)))\n        handlers[event.type](view, event);\n}\neditHandlers.keydown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.keyCode == 16 || event.shiftKey;\n    if (inOrNearComposition(view, event))\n        return;\n    view.input.lastKeyCode = event.keyCode;\n    view.input.lastKeyCodeTime = Date.now();\n    // Suppress enter key events on Chrome Android, because those tend\n    // to be part of a confused sequence of composition events fired,\n    // and handling them eagerly tends to corrupt the input.\n    if (android && chrome && event.keyCode == 13)\n        return;\n    if (event.keyCode != 229)\n        view.domObserver.forceFlush();\n    // On iOS, if we preventDefault enter key presses, the virtual\n    // keyboard gets confused. So the hack here is to set a flag that\n    // makes the DOM change code recognize that what just happens should\n    // be replaced by whatever the Enter key handlers do.\n    if (ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n        let now = Date.now();\n        view.input.lastIOSEnter = now;\n        view.input.lastIOSEnterFallbackTimeout = setTimeout(() => {\n            if (view.input.lastIOSEnter == now) {\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")));\n                view.input.lastIOSEnter = 0;\n            }\n        }, 200);\n    }\n    else if (view.someProp(\"handleKeyDown\", f => f(view, event)) || captureKeyDown(view, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"key\");\n    }\n};\neditHandlers.keyup = (view, event) => {\n    if (event.keyCode == 16)\n        view.input.shiftKey = false;\n};\neditHandlers.keypress = (view, _event) => {\n    let event = _event;\n    if (inOrNearComposition(view, event) || !event.charCode ||\n        event.ctrlKey && !event.altKey || mac && event.metaKey)\n        return;\n    if (view.someProp(\"handleKeyPress\", f => f(view, event))) {\n        event.preventDefault();\n        return;\n    }\n    let sel = view.state.selection;\n    if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n        let text = String.fromCharCode(event.charCode);\n        let deflt = () => view.state.tr.insertText(text).scrollIntoView();\n        if (!/[\\r\\n]/.test(text) && !view.someProp(\"handleTextInput\", f => f(view, sel.$from.pos, sel.$to.pos, text, deflt)))\n            view.dispatch(deflt());\n        event.preventDefault();\n    }\n};\nfunction eventCoords(event) { return { left: event.clientX, top: event.clientY }; }\nfunction isNear(event, click) {\n    let dx = click.x - event.clientX, dy = click.y - event.clientY;\n    return dx * dx + dy * dy < 100;\n}\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        if (view.someProp(propName, f => i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true)\n            : f(view, pos, $pos.node(i), $pos.before(i), event, false)))\n            return true;\n    }\n    return false;\n}\nfunction updateSelection(view, selection, origin) {\n    if (!view.focused)\n        view.focus();\n    if (view.state.selection.eq(selection))\n        return;\n    let tr = view.state.tr.setSelection(selection);\n    if (origin == \"pointer\")\n        tr.setMeta(\"pointer\", true);\n    view.dispatch(tr);\n}\nfunction selectClickedLeaf(view, inside) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside), node = $pos.nodeAfter;\n    if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n        updateSelection(view, new NodeSelection($pos), \"pointer\");\n        return true;\n    }\n    return false;\n}\nfunction selectClickedNode(view, inside) {\n    if (inside == -1)\n        return false;\n    let sel = view.state.selection, selectedNode, selectAt;\n    if (sel instanceof NodeSelection)\n        selectedNode = sel.node;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        if (NodeSelection.isSelectable(node)) {\n            if (selectedNode && sel.$from.depth > 0 &&\n                i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos)\n                selectAt = $pos.before(sel.$from.depth);\n            else\n                selectAt = $pos.before(i);\n            break;\n        }\n    }\n    if (selectAt != null) {\n        updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\");\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n    return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleClick\", f => f(view, pos, event)) ||\n        (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside));\n}\nfunction handleDoubleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleDoubleClick\", f => f(view, pos, event));\n}\nfunction handleTripleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleTripleClick\", f => f(view, pos, event)) ||\n        defaultTripleClick(view, inside, event);\n}\nfunction defaultTripleClick(view, inside, event) {\n    if (event.button != 0)\n        return false;\n    let doc = view.state.doc;\n    if (inside == -1) {\n        if (doc.inlineContent) {\n            updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\");\n            return true;\n        }\n        return false;\n    }\n    let $pos = doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        let nodePos = $pos.before(i);\n        if (node.inlineContent)\n            updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\");\n        else if (NodeSelection.isSelectable(node))\n            updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\");\n        else\n            continue;\n        return true;\n    }\n}\nfunction forceDOMFlush(view) {\n    return endComposition(view);\n}\nconst selectNodeModifier = mac ? \"metaKey\" : \"ctrlKey\";\nhandlers.mousedown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.shiftKey;\n    let flushed = forceDOMFlush(view);\n    let now = Date.now(), type = \"singleClick\";\n    if (now - view.input.lastClick.time < 500 && isNear(event, view.input.lastClick) && !event[selectNodeModifier] &&\n        view.input.lastClick.button == event.button) {\n        if (view.input.lastClick.type == \"singleClick\")\n            type = \"doubleClick\";\n        else if (view.input.lastClick.type == \"doubleClick\")\n            type = \"tripleClick\";\n    }\n    view.input.lastClick = { time: now, x: event.clientX, y: event.clientY, type, button: event.button };\n    let pos = view.posAtCoords(eventCoords(event));\n    if (!pos)\n        return;\n    if (type == \"singleClick\") {\n        if (view.input.mouseDown)\n            view.input.mouseDown.done();\n        view.input.mouseDown = new MouseDown(view, pos, event, !!flushed);\n    }\n    else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"pointer\");\n    }\n};\nclass MouseDown {\n    constructor(view, pos, event, flushed) {\n        this.view = view;\n        this.pos = pos;\n        this.event = event;\n        this.flushed = flushed;\n        this.delayedSelectionSync = false;\n        this.mightDrag = null;\n        this.startDoc = view.state.doc;\n        this.selectNode = !!event[selectNodeModifier];\n        this.allowDefault = event.shiftKey;\n        let targetNode, targetPos;\n        if (pos.inside > -1) {\n            targetNode = view.state.doc.nodeAt(pos.inside);\n            targetPos = pos.inside;\n        }\n        else {\n            let $pos = view.state.doc.resolve(pos.pos);\n            targetNode = $pos.parent;\n            targetPos = $pos.depth ? $pos.before() : 0;\n        }\n        const target = flushed ? null : event.target;\n        const targetDesc = target ? view.docView.nearestDesc(target, true) : null;\n        this.target = targetDesc && targetDesc.nodeDOM.nodeType == 1 ? targetDesc.nodeDOM : null;\n        let { selection } = view.state;\n        if (event.button == 0 &&\n            targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false ||\n            selection instanceof NodeSelection && selection.from <= targetPos && selection.to > targetPos)\n            this.mightDrag = {\n                node: targetNode,\n                pos: targetPos,\n                addAttr: !!(this.target && !this.target.draggable),\n                setUneditable: !!(this.target && gecko && !this.target.hasAttribute(\"contentEditable\"))\n            };\n        if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.draggable = true;\n            if (this.mightDrag.setUneditable)\n                setTimeout(() => {\n                    if (this.view.input.mouseDown == this)\n                        this.target.setAttribute(\"contentEditable\", \"false\");\n                }, 20);\n            this.view.domObserver.start();\n        }\n        view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        setSelectionOrigin(view, \"pointer\");\n    }\n    done() {\n        this.view.root.removeEventListener(\"mouseup\", this.up);\n        this.view.root.removeEventListener(\"mousemove\", this.move);\n        if (this.mightDrag && this.target) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.removeAttribute(\"draggable\");\n            if (this.mightDrag.setUneditable)\n                this.target.removeAttribute(\"contentEditable\");\n            this.view.domObserver.start();\n        }\n        if (this.delayedSelectionSync)\n            setTimeout(() => selectionToDOM(this.view));\n        this.view.input.mouseDown = null;\n    }\n    up(event) {\n        this.done();\n        if (!this.view.dom.contains(event.target))\n            return;\n        let pos = this.pos;\n        if (this.view.state.doc != this.startDoc)\n            pos = this.view.posAtCoords(eventCoords(event));\n        this.updateAllowDefault(event);\n        if (this.allowDefault || !pos) {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n        else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n            event.preventDefault();\n        }\n        else if (event.button == 0 &&\n            (this.flushed ||\n                // Safari ignores clicks on draggable elements\n                (safari && this.mightDrag && !this.mightDrag.node.isAtom) ||\n                // Chrome will sometimes treat a node selection as a\n                // cursor, but still report that the node is selected\n                // when asked through getSelection. You'll then get a\n                // situation where clicking at the point where that\n                // (hidden) cursor is doesn't change the selection, and\n                // thus doesn't get a reaction from ProseMirror. This\n                // works around that.\n                (chrome && !this.view.state.selection.visible &&\n                    Math.min(Math.abs(pos.pos - this.view.state.selection.from), Math.abs(pos.pos - this.view.state.selection.to)) <= 2))) {\n            updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\");\n            event.preventDefault();\n        }\n        else {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n    }\n    move(event) {\n        this.updateAllowDefault(event);\n        setSelectionOrigin(this.view, \"pointer\");\n        if (event.buttons == 0)\n            this.done();\n    }\n    updateAllowDefault(event) {\n        if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 ||\n            Math.abs(this.event.y - event.clientY) > 4))\n            this.allowDefault = true;\n    }\n}\nhandlers.touchstart = view => {\n    view.input.lastTouch = Date.now();\n    forceDOMFlush(view);\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.touchmove = view => {\n    view.input.lastTouch = Date.now();\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.contextmenu = view => forceDOMFlush(view);\nfunction inOrNearComposition(view, event) {\n    if (view.composing)\n        return true;\n    // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n    // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n    // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n    // emitted. The keydown event triggers newline insertion, which we don't want.\n    // This method returns true if the keydown event should be ignored.\n    // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n    // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n    // This guards against the case where compositionend is triggered without the keyboard\n    // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n    // afterwards- we wouldn't want to ignore the keydown event in this case.\n    if (safari && Math.abs(event.timeStamp - view.input.compositionEndedAt) < 500) {\n        view.input.compositionEndedAt = -2e8;\n        return true;\n    }\n    return false;\n}\n// Drop active composition after 5 seconds of inactivity on Android\nconst timeoutComposition = android ? 5000 : -1;\neditHandlers.compositionstart = editHandlers.compositionupdate = view => {\n    if (!view.composing) {\n        view.domObserver.flush();\n        let { state } = view, $pos = state.selection.$to;\n        if (state.selection instanceof TextSelection &&\n            (state.storedMarks ||\n                (!$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(m => m.type.spec.inclusive === false)))) {\n            // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n            view.markCursor = view.state.storedMarks || $pos.marks();\n            endComposition(view, true);\n            view.markCursor = null;\n        }\n        else {\n            endComposition(view, !state.selection.empty);\n            // In firefox, if the cursor is after but outside a marked node,\n            // the inserted text won't inherit the marks. So this moves it\n            // inside if necessary.\n            if (gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n                let sel = view.domSelectionRange();\n                for (let node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n                    let before = offset < 0 ? node.lastChild : node.childNodes[offset - 1];\n                    if (!before)\n                        break;\n                    if (before.nodeType == 3) {\n                        let sel = view.domSelection();\n                        if (sel)\n                            sel.collapse(before, before.nodeValue.length);\n                        break;\n                    }\n                    else {\n                        node = before;\n                        offset = -1;\n                    }\n                }\n            }\n        }\n        view.input.composing = true;\n    }\n    scheduleComposeEnd(view, timeoutComposition);\n};\neditHandlers.compositionend = (view, event) => {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = event.timeStamp;\n        view.input.compositionPendingChanges = view.domObserver.pendingRecords().length ? view.input.compositionID : 0;\n        view.input.compositionNode = null;\n        if (view.input.compositionPendingChanges)\n            Promise.resolve().then(() => view.domObserver.flush());\n        view.input.compositionID++;\n        scheduleComposeEnd(view, 20);\n    }\n};\nfunction scheduleComposeEnd(view, delay) {\n    clearTimeout(view.input.composingTimeout);\n    if (delay > -1)\n        view.input.composingTimeout = setTimeout(() => endComposition(view), delay);\n}\nfunction clearComposition(view) {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = timestampFromCustomEvent();\n    }\n    while (view.input.compositionNodes.length > 0)\n        view.input.compositionNodes.pop().markParentsDirty();\n}\nfunction findCompositionNode(view) {\n    let sel = view.domSelectionRange();\n    if (!sel.focusNode)\n        return null;\n    let textBefore = textNodeBefore$1(sel.focusNode, sel.focusOffset);\n    let textAfter = textNodeAfter$1(sel.focusNode, sel.focusOffset);\n    if (textBefore && textAfter && textBefore != textAfter) {\n        let descAfter = textAfter.pmViewDesc, lastChanged = view.domObserver.lastChangedTextNode;\n        if (textBefore == lastChanged || textAfter == lastChanged)\n            return lastChanged;\n        if (!descAfter || !descAfter.isText(textAfter.nodeValue)) {\n            return textAfter;\n        }\n        else if (view.input.compositionNode == textAfter) {\n            let descBefore = textBefore.pmViewDesc;\n            if (!(!descBefore || !descBefore.isText(textBefore.nodeValue)))\n                return textAfter;\n        }\n    }\n    return textBefore || textAfter;\n}\nfunction timestampFromCustomEvent() {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"event\", true, true);\n    return event.timeStamp;\n}\n/**\n@internal\n*/\nfunction endComposition(view, restarting = false) {\n    if (android && view.domObserver.flushingSoon >= 0)\n        return;\n    view.domObserver.forceFlush();\n    clearComposition(view);\n    if (restarting || view.docView && view.docView.dirty) {\n        let sel = selectionFromDOM(view), cur = view.state.selection;\n        if (sel && !sel.eq(cur))\n            view.dispatch(view.state.tr.setSelection(sel));\n        else if ((view.markCursor || restarting) && !cur.$from.node(cur.$from.sharedDepth(cur.to)).inlineContent)\n            view.dispatch(view.state.tr.deleteSelection());\n        else\n            view.updateState(view.state);\n        return true;\n    }\n    return false;\n}\nfunction captureCopy(view, dom) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    if (!view.dom.parentNode)\n        return;\n    let wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"));\n    wrap.appendChild(dom);\n    wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    let sel = getSelection(), range = document.createRange();\n    range.selectNodeContents(dom);\n    // Done because IE will fire a selectionchange moving the selection\n    // to its start when removeAllRanges is called and the editor still\n    // has focus (which will mess up the editor's selection state).\n    view.dom.blur();\n    sel.removeAllRanges();\n    sel.addRange(range);\n    setTimeout(() => {\n        if (wrap.parentNode)\n            wrap.parentNode.removeChild(wrap);\n        view.focus();\n    }, 50);\n}\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (ie && ie_version < 15) ||\n    (ios && webkit_version < 604);\nhandlers.copy = editHandlers.cut = (view, _event) => {\n    let event = _event;\n    let sel = view.state.selection, cut = event.type == \"cut\";\n    if (sel.empty)\n        return;\n    // IE and Edge's clipboard interface is completely broken\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let slice = sel.content(), { dom, text } = serializeForClipboard(view, slice);\n    if (data) {\n        event.preventDefault();\n        data.clearData();\n        data.setData(\"text/html\", dom.innerHTML);\n        data.setData(\"text/plain\", text);\n    }\n    else {\n        captureCopy(view, dom);\n    }\n    if (cut)\n        view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\"));\n};\nfunction sliceSingleNode(slice) {\n    return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null;\n}\nfunction capturePaste(view, event) {\n    if (!view.dom.parentNode)\n        return;\n    let plainText = view.input.shiftKey || view.state.selection.$from.parent.type.spec.code;\n    let target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"));\n    if (!plainText)\n        target.contentEditable = \"true\";\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    let plain = view.input.shiftKey && view.input.lastKeyCode != 45;\n    setTimeout(() => {\n        view.focus();\n        if (target.parentNode)\n            target.parentNode.removeChild(target);\n        if (plainText)\n            doPaste(view, target.value, null, plain, event);\n        else\n            doPaste(view, target.textContent, target.innerHTML, plain, event);\n    }, 50);\n}\nfunction doPaste(view, text, html, preferPlain, event) {\n    let slice = parseFromClipboard(view, text, html, preferPlain, view.state.selection.$from);\n    if (view.someProp(\"handlePaste\", f => f(view, event, slice || Slice.empty)))\n        return true;\n    if (!slice)\n        return false;\n    let singleNode = sliceSingleNode(slice);\n    let tr = singleNode\n        ? view.state.tr.replaceSelectionWith(singleNode, preferPlain)\n        : view.state.tr.replaceSelection(slice);\n    view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"));\n    return true;\n}\nfunction getText(clipboardData) {\n    let text = clipboardData.getData(\"text/plain\") || clipboardData.getData(\"Text\");\n    if (text)\n        return text;\n    let uris = clipboardData.getData(\"text/uri-list\");\n    return uris ? uris.replace(/\\r?\\n/g, \" \") : \"\";\n}\neditHandlers.paste = (view, _event) => {\n    let event = _event;\n    // Handling paste from JavaScript during composition is very poorly\n    // handled by browsers, so as a dodgy but preferable kludge, we just\n    // let the browser do its native thing there, except on Android,\n    // where the editor is almost always composing.\n    if (view.composing && !android)\n        return;\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let plain = view.input.shiftKey && view.input.lastKeyCode != 45;\n    if (data && doPaste(view, getText(data), data.getData(\"text/html\"), plain, event))\n        event.preventDefault();\n    else\n        capturePaste(view, event);\n};\nclass Dragging {\n    constructor(slice, move, node) {\n        this.slice = slice;\n        this.move = move;\n        this.node = node;\n    }\n}\nconst dragCopyModifier = mac ? \"altKey\" : \"ctrlKey\";\nfunction dragMoves(view, event) {\n    let moves = view.someProp(\"dragCopies\", test => !test(event));\n    return moves != null ? moves : !event[dragCopyModifier];\n}\nhandlers.dragstart = (view, _event) => {\n    let event = _event;\n    let mouseDown = view.input.mouseDown;\n    if (mouseDown)\n        mouseDown.done();\n    if (!event.dataTransfer)\n        return;\n    let sel = view.state.selection;\n    let pos = sel.empty ? null : view.posAtCoords(eventCoords(event));\n    let node;\n    if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1 : sel.to)) ;\n    else if (mouseDown && mouseDown.mightDrag) {\n        node = NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos);\n    }\n    else if (event.target && event.target.nodeType == 1) {\n        let desc = view.docView.nearestDesc(event.target, true);\n        if (desc && desc.node.type.spec.draggable && desc != view.docView)\n            node = NodeSelection.create(view.state.doc, desc.posBefore);\n    }\n    let draggedSlice = (node || view.state.selection).content();\n    let { dom, text, slice } = serializeForClipboard(view, draggedSlice);\n    // Pre-120 Chrome versions clear files when calling `clearData` (#1472)\n    if (!event.dataTransfer.files.length || !chrome || chrome_version > 120)\n        event.dataTransfer.clearData();\n    event.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML);\n    // See https://github.com/ProseMirror/prosemirror/issues/1156\n    event.dataTransfer.effectAllowed = \"copyMove\";\n    if (!brokenClipboardAPI)\n        event.dataTransfer.setData(\"text/plain\", text);\n    view.dragging = new Dragging(slice, dragMoves(view, event), node);\n};\nhandlers.dragend = view => {\n    let dragging = view.dragging;\n    window.setTimeout(() => {\n        if (view.dragging == dragging)\n            view.dragging = null;\n    }, 50);\n};\neditHandlers.dragover = editHandlers.dragenter = (_, e) => e.preventDefault();\neditHandlers.drop = (view, _event) => {\n    let event = _event;\n    let dragging = view.dragging;\n    view.dragging = null;\n    if (!event.dataTransfer)\n        return;\n    let eventPos = view.posAtCoords(eventCoords(event));\n    if (!eventPos)\n        return;\n    let $mouse = view.state.doc.resolve(eventPos.pos);\n    let slice = dragging && dragging.slice;\n    if (slice) {\n        view.someProp(\"transformPasted\", f => { slice = f(slice, view, false); });\n    }\n    else {\n        slice = parseFromClipboard(view, getText(event.dataTransfer), brokenClipboardAPI ? null : event.dataTransfer.getData(\"text/html\"), false, $mouse);\n    }\n    let move = !!(dragging && dragMoves(view, event));\n    if (view.someProp(\"handleDrop\", f => f(view, event, slice || Slice.empty, move))) {\n        event.preventDefault();\n        return;\n    }\n    if (!slice)\n        return;\n    event.preventDefault();\n    let insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos;\n    if (insertPos == null)\n        insertPos = $mouse.pos;\n    let tr = view.state.tr;\n    if (move) {\n        let { node } = dragging;\n        if (node)\n            node.replace(tr);\n        else\n            tr.deleteSelection();\n    }\n    let pos = tr.mapping.map(insertPos);\n    let isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1;\n    let beforeInsert = tr.doc;\n    if (isNode)\n        tr.replaceRangeWith(pos, pos, slice.content.firstChild);\n    else\n        tr.replaceRange(pos, pos, slice);\n    if (tr.doc.eq(beforeInsert))\n        return;\n    let $pos = tr.doc.resolve(pos);\n    if (isNode && NodeSelection.isSelectable(slice.content.firstChild) &&\n        $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n        tr.setSelection(new NodeSelection($pos));\n    }\n    else {\n        let end = tr.mapping.map(insertPos);\n        tr.mapping.maps[tr.mapping.maps.length - 1].forEach((_from, _to, _newFrom, newTo) => end = newTo);\n        tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)));\n    }\n    view.focus();\n    view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"));\n};\nhandlers.focus = view => {\n    view.input.lastFocus = Date.now();\n    if (!view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.add(\"ProseMirror-focused\");\n        view.domObserver.start();\n        view.focused = true;\n        setTimeout(() => {\n            if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.domSelectionRange()))\n                selectionToDOM(view);\n        }, 20);\n    }\n};\nhandlers.blur = (view, _event) => {\n    let event = _event;\n    if (view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.remove(\"ProseMirror-focused\");\n        view.domObserver.start();\n        if (event.relatedTarget && view.dom.contains(event.relatedTarget))\n            view.domObserver.currentSelection.clear();\n        view.focused = false;\n    }\n};\nhandlers.beforeinput = (view, _event) => {\n    let event = _event;\n    // We should probably do more with beforeinput events, but support\n    // is so spotty that I'm still waiting to see where they are going.\n    // Very specific hack to deal with backspace sometimes failing on\n    // Chrome Android when after an uneditable node.\n    if (chrome && android && event.inputType == \"deleteContentBackward\") {\n        view.domObserver.flushSoon();\n        let { domChangeCount } = view.input;\n        setTimeout(() => {\n            if (view.input.domChangeCount != domChangeCount)\n                return; // Event already had some effect\n            // This bug tends to close the virtual keyboard, so we refocus\n            view.dom.blur();\n            view.focus();\n            if (view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\"))))\n                return;\n            let { $cursor } = view.state.selection;\n            // Crude approximation of backspace behavior when no command handled it\n            if ($cursor && $cursor.pos > 0)\n                view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView());\n        }, 50);\n    }\n};\n// Make sure all handlers get registered\nfor (let prop in editHandlers)\n    handlers[prop] = editHandlers[prop];\n\nfunction compareObjs(a, b) {\n    if (a == b)\n        return true;\n    for (let p in a)\n        if (a[p] !== b[p])\n            return false;\n    for (let p in b)\n        if (!(p in a))\n            return false;\n    return true;\n}\nclass WidgetType {\n    constructor(toDOM, spec) {\n        this.toDOM = toDOM;\n        this.spec = spec || noSpec;\n        this.side = this.spec.side || 0;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let { pos, deleted } = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1);\n        return deleted ? null : new Decoration(pos - offset, pos - offset, this);\n    }\n    valid() { return true; }\n    eq(other) {\n        return this == other ||\n            (other instanceof WidgetType &&\n                (this.spec.key && this.spec.key == other.spec.key ||\n                    this.toDOM == other.toDOM && compareObjs(this.spec, other.spec)));\n    }\n    destroy(node) {\n        if (this.spec.destroy)\n            this.spec.destroy(node);\n    }\n}\nclass InlineType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset;\n        let to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset;\n        return from >= to ? null : new Decoration(from, to, this);\n    }\n    valid(_, span) { return span.from < span.to; }\n    eq(other) {\n        return this == other ||\n            (other instanceof InlineType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    static is(span) { return span.type instanceof InlineType; }\n    destroy() { }\n}\nclass NodeType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.mapResult(span.from + oldOffset, 1);\n        if (from.deleted)\n            return null;\n        let to = mapping.mapResult(span.to + oldOffset, -1);\n        if (to.deleted || to.pos <= from.pos)\n            return null;\n        return new Decoration(from.pos - offset, to.pos - offset, this);\n    }\n    valid(node, span) {\n        let { index, offset } = node.content.findIndex(span.from), child;\n        return offset == span.from && !(child = node.child(index)).isText && offset + child.nodeSize == span.to;\n    }\n    eq(other) {\n        return this == other ||\n            (other instanceof NodeType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    destroy() { }\n}\n/**\nDecoration objects can be provided to the view through the\n[`decorations` prop](https://prosemirror.net/docs/ref/#view.EditorProps.decorations). They come in\nseveral variants—see the static members of this class for details.\n*/\nclass Decoration {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start position of the decoration.\n    */\n    from, \n    /**\n    The end position. Will be the same as `from` for [widget\n    decorations](https://prosemirror.net/docs/ref/#view.Decoration^widget).\n    */\n    to, \n    /**\n    @internal\n    */\n    type) {\n        this.from = from;\n        this.to = to;\n        this.type = type;\n    }\n    /**\n    @internal\n    */\n    copy(from, to) {\n        return new Decoration(from, to, this.type);\n    }\n    /**\n    @internal\n    */\n    eq(other, offset = 0) {\n        return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to;\n    }\n    /**\n    @internal\n    */\n    map(mapping, offset, oldOffset) {\n        return this.type.map(mapping, this, offset, oldOffset);\n    }\n    /**\n    Creates a widget decoration, which is a DOM node that's shown in\n    the document at the given position. It is recommended that you\n    delay rendering the widget by passing a function that will be\n    called when the widget is actually drawn in a view, but you can\n    also directly pass a DOM node. `getPos` can be used to find the\n    widget's current document position.\n    */\n    static widget(pos, toDOM, spec) {\n        return new Decoration(pos, pos, new WidgetType(toDOM, spec));\n    }\n    /**\n    Creates an inline decoration, which adds the given attributes to\n    each inline node between `from` and `to`.\n    */\n    static inline(from, to, attrs, spec) {\n        return new Decoration(from, to, new InlineType(attrs, spec));\n    }\n    /**\n    Creates a node decoration. `from` and `to` should point precisely\n    before and after a node in the document. That node, and only that\n    node, will receive the given attributes.\n    */\n    static node(from, to, attrs, spec) {\n        return new Decoration(from, to, new NodeType(attrs, spec));\n    }\n    /**\n    The spec provided when creating this decoration. Can be useful\n    if you've stored extra information in that object.\n    */\n    get spec() { return this.type.spec; }\n    /**\n    @internal\n    */\n    get inline() { return this.type instanceof InlineType; }\n    /**\n    @internal\n    */\n    get widget() { return this.type instanceof WidgetType; }\n}\nconst none = [], noSpec = {};\n/**\nA collection of [decorations](https://prosemirror.net/docs/ref/#view.Decoration), organized in such\na way that the drawing algorithm can efficiently use and compare\nthem. This is a persistent data structure—it is not modified,\nupdates create a new value.\n*/\nclass DecorationSet {\n    /**\n    @internal\n    */\n    constructor(local, children) {\n        this.local = local.length ? local : none;\n        this.children = children.length ? children : none;\n    }\n    /**\n    Create a set of decorations, using the structure of the given\n    document. This will consume (modify) the `decorations` array, so\n    you must make a copy if you want need to preserve that.\n    */\n    static create(doc, decorations) {\n        return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty;\n    }\n    /**\n    Find all decorations in this set which touch the given range\n    (including decorations that start or end directly at the\n    boundaries) and match the given predicate on their spec. When\n    `start` and `end` are omitted, all decorations in the set are\n    considered. When `predicate` isn't given, all decorations are\n    assumed to match.\n    */\n    find(start, end, predicate) {\n        let result = [];\n        this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate);\n        return result;\n    }\n    findInner(start, end, result, offset, predicate) {\n        for (let i = 0; i < this.local.length; i++) {\n            let span = this.local[i];\n            if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec)))\n                result.push(span.copy(span.from + offset, span.to + offset));\n        }\n        for (let i = 0; i < this.children.length; i += 3) {\n            if (this.children[i] < end && this.children[i + 1] > start) {\n                let childOff = this.children[i] + 1;\n                this.children[i + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate);\n            }\n        }\n    }\n    /**\n    Map the set of decorations in response to a change in the\n    document.\n    */\n    map(mapping, doc, options) {\n        if (this == empty || mapping.maps.length == 0)\n            return this;\n        return this.mapInner(mapping, doc, 0, 0, options || noSpec);\n    }\n    /**\n    @internal\n    */\n    mapInner(mapping, node, offset, oldOffset, options) {\n        let newLocal;\n        for (let i = 0; i < this.local.length; i++) {\n            let mapped = this.local[i].map(mapping, offset, oldOffset);\n            if (mapped && mapped.type.valid(node, mapped))\n                (newLocal || (newLocal = [])).push(mapped);\n            else if (options.onRemove)\n                options.onRemove(this.local[i].spec);\n        }\n        if (this.children.length)\n            return mapChildren(this.children, newLocal || [], mapping, node, offset, oldOffset, options);\n        else\n            return newLocal ? new DecorationSet(newLocal.sort(byPos), none) : empty;\n    }\n    /**\n    Add the given array of decorations to the ones in the set,\n    producing a new set. Consumes the `decorations` array. Needs\n    access to the current document to create the appropriate tree\n    structure.\n    */\n    add(doc, decorations) {\n        if (!decorations.length)\n            return this;\n        if (this == empty)\n            return DecorationSet.create(doc, decorations);\n        return this.addInner(doc, decorations, 0);\n    }\n    addInner(doc, decorations, offset) {\n        let children, childIndex = 0;\n        doc.forEach((childNode, childOffset) => {\n            let baseOffset = childOffset + offset, found;\n            if (!(found = takeSpansForNode(decorations, childNode, baseOffset)))\n                return;\n            if (!children)\n                children = this.children.slice();\n            while (childIndex < children.length && children[childIndex] < childOffset)\n                childIndex += 3;\n            if (children[childIndex] == childOffset)\n                children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1);\n            else\n                children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec));\n            childIndex += 3;\n        });\n        let local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset);\n        for (let i = 0; i < local.length; i++)\n            if (!local[i].type.valid(doc, local[i]))\n                local.splice(i--, 1);\n        return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local, children || this.children);\n    }\n    /**\n    Create a new set that contains the decorations in this set, minus\n    the ones in the given array.\n    */\n    remove(decorations) {\n        if (decorations.length == 0 || this == empty)\n            return this;\n        return this.removeInner(decorations, 0);\n    }\n    removeInner(decorations, offset) {\n        let children = this.children, local = this.local;\n        for (let i = 0; i < children.length; i += 3) {\n            let found;\n            let from = children[i] + offset, to = children[i + 1] + offset;\n            for (let j = 0, span; j < decorations.length; j++)\n                if (span = decorations[j]) {\n                    if (span.from > from && span.to < to) {\n                        decorations[j] = null;\n                        (found || (found = [])).push(span);\n                    }\n                }\n            if (!found)\n                continue;\n            if (children == this.children)\n                children = this.children.slice();\n            let removed = children[i + 2].removeInner(found, from + 1);\n            if (removed != empty) {\n                children[i + 2] = removed;\n            }\n            else {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        }\n        if (local.length)\n            for (let i = 0, span; i < decorations.length; i++)\n                if (span = decorations[i]) {\n                    for (let j = 0; j < local.length; j++)\n                        if (local[j].eq(span, offset)) {\n                            if (local == this.local)\n                                local = this.local.slice();\n                            local.splice(j--, 1);\n                        }\n                }\n        if (children == this.children && local == this.local)\n            return this;\n        return local.length || children.length ? new DecorationSet(local, children) : empty;\n    }\n    forChild(offset, node) {\n        if (this == empty)\n            return this;\n        if (node.isLeaf)\n            return DecorationSet.empty;\n        let child, local;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] >= offset) {\n                if (this.children[i] == offset)\n                    child = this.children[i + 2];\n                break;\n            }\n        let start = offset + 1, end = start + node.content.size;\n        for (let i = 0; i < this.local.length; i++) {\n            let dec = this.local[i];\n            if (dec.from < end && dec.to > start && (dec.type instanceof InlineType)) {\n                let from = Math.max(start, dec.from) - start, to = Math.min(end, dec.to) - start;\n                if (from < to)\n                    (local || (local = [])).push(dec.copy(from, to));\n            }\n        }\n        if (local) {\n            let localSet = new DecorationSet(local.sort(byPos), none);\n            return child ? new DecorationGroup([localSet, child]) : localSet;\n        }\n        return child || empty;\n    }\n    /**\n    @internal\n    */\n    eq(other) {\n        if (this == other)\n            return true;\n        if (!(other instanceof DecorationSet) ||\n            this.local.length != other.local.length ||\n            this.children.length != other.children.length)\n            return false;\n        for (let i = 0; i < this.local.length; i++)\n            if (!this.local[i].eq(other.local[i]))\n                return false;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] != other.children[i] ||\n                this.children[i + 1] != other.children[i + 1] ||\n                !this.children[i + 2].eq(other.children[i + 2]))\n                return false;\n        return true;\n    }\n    /**\n    @internal\n    */\n    locals(node) {\n        return removeOverlap(this.localsInner(node));\n    }\n    /**\n    @internal\n    */\n    localsInner(node) {\n        if (this == empty)\n            return none;\n        if (node.inlineContent || !this.local.some(InlineType.is))\n            return this.local;\n        let result = [];\n        for (let i = 0; i < this.local.length; i++) {\n            if (!(this.local[i].type instanceof InlineType))\n                result.push(this.local[i]);\n        }\n        return result;\n    }\n    forEachSet(f) { f(this); }\n}\n/**\nThe empty set of decorations.\n*/\nDecorationSet.empty = new DecorationSet([], []);\n/**\n@internal\n*/\nDecorationSet.removeOverlap = removeOverlap;\nconst empty = DecorationSet.empty;\n// An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nclass DecorationGroup {\n    constructor(members) {\n        this.members = members;\n    }\n    map(mapping, doc) {\n        const mappedDecos = this.members.map(member => member.map(mapping, doc, noSpec));\n        return DecorationGroup.from(mappedDecos);\n    }\n    forChild(offset, child) {\n        if (child.isLeaf)\n            return DecorationSet.empty;\n        let found = [];\n        for (let i = 0; i < this.members.length; i++) {\n            let result = this.members[i].forChild(offset, child);\n            if (result == empty)\n                continue;\n            if (result instanceof DecorationGroup)\n                found = found.concat(result.members);\n            else\n                found.push(result);\n        }\n        return DecorationGroup.from(found);\n    }\n    eq(other) {\n        if (!(other instanceof DecorationGroup) ||\n            other.members.length != this.members.length)\n            return false;\n        for (let i = 0; i < this.members.length; i++)\n            if (!this.members[i].eq(other.members[i]))\n                return false;\n        return true;\n    }\n    locals(node) {\n        let result, sorted = true;\n        for (let i = 0; i < this.members.length; i++) {\n            let locals = this.members[i].localsInner(node);\n            if (!locals.length)\n                continue;\n            if (!result) {\n                result = locals;\n            }\n            else {\n                if (sorted) {\n                    result = result.slice();\n                    sorted = false;\n                }\n                for (let j = 0; j < locals.length; j++)\n                    result.push(locals[j]);\n            }\n        }\n        return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none;\n    }\n    // Create a group for the given array of decoration sets, or return\n    // a single set when possible.\n    static from(members) {\n        switch (members.length) {\n            case 0: return empty;\n            case 1: return members[0];\n            default: return new DecorationGroup(members.every(m => m instanceof DecorationSet) ? members :\n                members.reduce((r, m) => r.concat(m instanceof DecorationSet ? m : m.members), []));\n        }\n    }\n    forEachSet(f) {\n        for (let i = 0; i < this.members.length; i++)\n            this.members[i].forEachSet(f);\n    }\n}\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n    let children = oldChildren.slice();\n    // Mark the children that are directly touched by changes, and\n    // move those that are after the changes.\n    for (let i = 0, baseOffset = oldOffset; i < mapping.maps.length; i++) {\n        let moved = 0;\n        mapping.maps[i].forEach((oldStart, oldEnd, newStart, newEnd) => {\n            let dSize = (newEnd - newStart) - (oldEnd - oldStart);\n            for (let i = 0; i < children.length; i += 3) {\n                let end = children[i + 1];\n                if (end < 0 || oldStart > end + baseOffset - moved)\n                    continue;\n                let start = children[i] + baseOffset - moved;\n                if (oldEnd >= start) {\n                    children[i + 1] = oldStart <= start ? -2 : -1;\n                }\n                else if (oldStart >= baseOffset && dSize) {\n                    children[i] += dSize;\n                    children[i + 1] += dSize;\n                }\n            }\n            moved += dSize;\n        });\n        baseOffset = mapping.maps[i].map(baseOffset, -1);\n    }\n    // Find the child nodes that still correspond to a single node,\n    // recursively call mapInner on them and update their positions.\n    let mustRebuild = false;\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] < 0) { // Touched nodes\n            if (children[i + 1] == -2) {\n                mustRebuild = true;\n                children[i + 1] = -1;\n                continue;\n            }\n            let from = mapping.map(oldChildren[i] + oldOffset), fromLocal = from - offset;\n            if (fromLocal < 0 || fromLocal >= node.content.size) {\n                mustRebuild = true;\n                continue;\n            }\n            // Must read oldChildren because children was tagged with -1\n            let to = mapping.map(oldChildren[i + 1] + oldOffset, -1), toLocal = to - offset;\n            let { index, offset: childOffset } = node.content.findIndex(fromLocal);\n            let childNode = node.maybeChild(index);\n            if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n                let mapped = children[i + 2]\n                    .mapInner(mapping, childNode, from + 1, oldChildren[i] + oldOffset + 1, options);\n                if (mapped != empty) {\n                    children[i] = fromLocal;\n                    children[i + 1] = toLocal;\n                    children[i + 2] = mapped;\n                }\n                else {\n                    children[i + 1] = -2;\n                    mustRebuild = true;\n                }\n            }\n            else {\n                mustRebuild = true;\n            }\n        }\n    // Remaining children must be collected and rebuilt into the appropriate structure\n    if (mustRebuild) {\n        let decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal, mapping, offset, oldOffset, options);\n        let built = buildTree(decorations, node, 0, options);\n        newLocal = built.local;\n        for (let i = 0; i < children.length; i += 3)\n            if (children[i + 1] < 0) {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        for (let i = 0, j = 0; i < built.children.length; i += 3) {\n            let from = built.children[i];\n            while (j < children.length && children[j] < from)\n                j += 3;\n            children.splice(j, 0, built.children[i], built.children[i + 1], built.children[i + 2]);\n        }\n    }\n    return new DecorationSet(newLocal.sort(byPos), children);\n}\nfunction moveSpans(spans, offset) {\n    if (!offset || !spans.length)\n        return spans;\n    let result = [];\n    for (let i = 0; i < spans.length; i++) {\n        let span = spans[i];\n        result.push(new Decoration(span.from + offset, span.to + offset, span.type));\n    }\n    return result;\n}\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n    // Gather all decorations from the remaining marked children\n    function gather(set, oldOffset) {\n        for (let i = 0; i < set.local.length; i++) {\n            let mapped = set.local[i].map(mapping, offset, oldOffset);\n            if (mapped)\n                decorations.push(mapped);\n            else if (options.onRemove)\n                options.onRemove(set.local[i].spec);\n        }\n        for (let i = 0; i < set.children.length; i += 3)\n            gather(set.children[i + 2], set.children[i] + oldOffset + 1);\n    }\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] == -1)\n            gather(children[i + 2], oldChildren[i] + oldOffset + 1);\n    return decorations;\n}\nfunction takeSpansForNode(spans, node, offset) {\n    if (node.isLeaf)\n        return null;\n    let end = offset + node.nodeSize, found = null;\n    for (let i = 0, span; i < spans.length; i++) {\n        if ((span = spans[i]) && span.from > offset && span.to < end) {\n            (found || (found = [])).push(span);\n            spans[i] = null;\n        }\n    }\n    return found;\n}\nfunction withoutNulls(array) {\n    let result = [];\n    for (let i = 0; i < array.length; i++)\n        if (array[i] != null)\n            result.push(array[i]);\n    return result;\n}\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtracted from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n    let children = [], hasNulls = false;\n    node.forEach((childNode, localStart) => {\n        let found = takeSpansForNode(spans, childNode, localStart + offset);\n        if (found) {\n            hasNulls = true;\n            let subtree = buildTree(found, childNode, offset + localStart + 1, options);\n            if (subtree != empty)\n                children.push(localStart, localStart + childNode.nodeSize, subtree);\n        }\n    });\n    let locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos);\n    for (let i = 0; i < locals.length; i++)\n        if (!locals[i].type.valid(node, locals[i])) {\n            if (options.onRemove)\n                options.onRemove(locals[i].spec);\n            locals.splice(i--, 1);\n        }\n    return locals.length || children.length ? new DecorationSet(locals, children) : empty;\n}\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n    return a.from - b.from || a.to - b.to;\n}\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n    let working = spans;\n    for (let i = 0; i < working.length - 1; i++) {\n        let span = working[i];\n        if (span.from != span.to)\n            for (let j = i + 1; j < working.length; j++) {\n                let next = working[j];\n                if (next.from == span.from) {\n                    if (next.to != span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // Followed by a partially overlapping larger span. Split that\n                        // span.\n                        working[j] = next.copy(next.from, span.to);\n                        insertAhead(working, j + 1, next.copy(span.to, next.to));\n                    }\n                    continue;\n                }\n                else {\n                    if (next.from < span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // The end of this one overlaps with a subsequent span. Split\n                        // this one.\n                        working[i] = span.copy(span.from, next.from);\n                        insertAhead(working, j, span.copy(next.from, span.to));\n                    }\n                    break;\n                }\n            }\n    }\n    return working;\n}\nfunction insertAhead(array, i, deco) {\n    while (i < array.length && byPos(deco, array[i]) > 0)\n        i++;\n    array.splice(i, 0, deco);\n}\n// Get the decorations associated with the current props of a view.\nfunction viewDecorations(view) {\n    let found = [];\n    view.someProp(\"decorations\", f => {\n        let result = f(view.state);\n        if (result && result != empty)\n            found.push(result);\n    });\n    if (view.cursorWrapper)\n        found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco]));\n    return DecorationGroup.from(found);\n}\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    characterDataOldValue: true,\n    attributes: true,\n    attributeOldValue: true,\n    subtree: true\n};\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nconst useCharData = ie && ie_version <= 11;\nclass SelectionState {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    set(sel) {\n        this.anchorNode = sel.anchorNode;\n        this.anchorOffset = sel.anchorOffset;\n        this.focusNode = sel.focusNode;\n        this.focusOffset = sel.focusOffset;\n    }\n    clear() {\n        this.anchorNode = this.focusNode = null;\n    }\n    eq(sel) {\n        return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset &&\n            sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset;\n    }\n}\nclass DOMObserver {\n    constructor(view, handleDOMChange) {\n        this.view = view;\n        this.handleDOMChange = handleDOMChange;\n        this.queue = [];\n        this.flushingSoon = -1;\n        this.observer = null;\n        this.currentSelection = new SelectionState;\n        this.onCharData = null;\n        this.suppressingSelectionUpdates = false;\n        this.lastChangedTextNode = null;\n        this.observer = window.MutationObserver &&\n            new window.MutationObserver(mutations => {\n                for (let i = 0; i < mutations.length; i++)\n                    this.queue.push(mutations[i]);\n                // IE11 will sometimes (on backspacing out a single character\n                // text node after a BR node) call the observer callback\n                // before actually updating the DOM, which will cause\n                // ProseMirror to miss the change (see #930)\n                if (ie && ie_version <= 11 && mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                    this.flushSoon();\n                else\n                    this.flush();\n            });\n        if (useCharData) {\n            this.onCharData = e => {\n                this.queue.push({ target: e.target, type: \"characterData\", oldValue: e.prevValue });\n                this.flushSoon();\n            };\n        }\n        this.onSelectionChange = this.onSelectionChange.bind(this);\n    }\n    flushSoon() {\n        if (this.flushingSoon < 0)\n            this.flushingSoon = window.setTimeout(() => { this.flushingSoon = -1; this.flush(); }, 20);\n    }\n    forceFlush() {\n        if (this.flushingSoon > -1) {\n            window.clearTimeout(this.flushingSoon);\n            this.flushingSoon = -1;\n            this.flush();\n        }\n    }\n    start() {\n        if (this.observer) {\n            this.observer.takeRecords();\n            this.observer.observe(this.view.dom, observeOptions);\n        }\n        if (this.onCharData)\n            this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.connectSelection();\n    }\n    stop() {\n        if (this.observer) {\n            let take = this.observer.takeRecords();\n            if (take.length) {\n                for (let i = 0; i < take.length; i++)\n                    this.queue.push(take[i]);\n                window.setTimeout(() => this.flush(), 20);\n            }\n            this.observer.disconnect();\n        }\n        if (this.onCharData)\n            this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.disconnectSelection();\n    }\n    connectSelection() {\n        this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    disconnectSelection() {\n        this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    suppressSelectionUpdates() {\n        this.suppressingSelectionUpdates = true;\n        setTimeout(() => this.suppressingSelectionUpdates = false, 50);\n    }\n    onSelectionChange() {\n        if (!hasFocusAndSelection(this.view))\n            return;\n        if (this.suppressingSelectionUpdates)\n            return selectionToDOM(this.view);\n        // Deletions on IE11 fire their events in the wrong order, giving\n        // us a selection change event before the DOM changes are\n        // reported.\n        if (ie && ie_version <= 11 && !this.view.state.selection.empty) {\n            let sel = this.view.domSelectionRange();\n            // Selection.isCollapsed isn't reliable on IE\n            if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n                return this.flushSoon();\n        }\n        this.flush();\n    }\n    setCurSelection() {\n        this.currentSelection.set(this.view.domSelectionRange());\n    }\n    ignoreSelectionChange(sel) {\n        if (!sel.focusNode)\n            return true;\n        let ancestors = new Set, container;\n        for (let scan = sel.focusNode; scan; scan = parentNode(scan))\n            ancestors.add(scan);\n        for (let scan = sel.anchorNode; scan; scan = parentNode(scan))\n            if (ancestors.has(scan)) {\n                container = scan;\n                break;\n            }\n        let desc = container && this.view.docView.nearestDesc(container);\n        if (desc && desc.ignoreMutation({\n            type: \"selection\",\n            target: container.nodeType == 3 ? container.parentNode : container\n        })) {\n            this.setCurSelection();\n            return true;\n        }\n    }\n    pendingRecords() {\n        if (this.observer)\n            for (let mut of this.observer.takeRecords())\n                this.queue.push(mut);\n        return this.queue;\n    }\n    flush() {\n        let { view } = this;\n        if (!view.docView || this.flushingSoon > -1)\n            return;\n        let mutations = this.pendingRecords();\n        if (mutations.length)\n            this.queue = [];\n        let sel = view.domSelectionRange();\n        let newSel = !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasFocusAndSelection(view) && !this.ignoreSelectionChange(sel);\n        let from = -1, to = -1, typeOver = false, added = [];\n        if (view.editable) {\n            for (let i = 0; i < mutations.length; i++) {\n                let result = this.registerMutation(mutations[i], added);\n                if (result) {\n                    from = from < 0 ? result.from : Math.min(result.from, from);\n                    to = to < 0 ? result.to : Math.max(result.to, to);\n                    if (result.typeOver)\n                        typeOver = true;\n                }\n            }\n        }\n        if (gecko && added.length) {\n            let brs = added.filter(n => n.nodeName == \"BR\");\n            if (brs.length == 2) {\n                let [a, b] = brs;\n                if (a.parentNode && a.parentNode.parentNode == b.parentNode)\n                    b.remove();\n                else\n                    a.remove();\n            }\n            else {\n                let { focusNode } = this.currentSelection;\n                for (let br of brs) {\n                    let parent = br.parentNode;\n                    if (parent && parent.nodeName == \"LI\" && (!focusNode || blockParent(view, focusNode) != parent))\n                        br.remove();\n                }\n            }\n        }\n        let readSel = null;\n        // If it looks like the browser has reset the selection to the\n        // start of the document after focus, restore the selection from\n        // the state\n        if (from < 0 && newSel && view.input.lastFocus > Date.now() - 200 &&\n            Math.max(view.input.lastTouch, view.input.lastClick.time) < Date.now() - 300 &&\n            selectionCollapsed(sel) && (readSel = selectionFromDOM(view)) &&\n            readSel.eq(Selection.near(view.state.doc.resolve(0), 1))) {\n            view.input.lastFocus = 0;\n            selectionToDOM(view);\n            this.currentSelection.set(sel);\n            view.scrollToSelection();\n        }\n        else if (from > -1 || newSel) {\n            if (from > -1) {\n                view.docView.markDirty(from, to);\n                checkCSS(view);\n            }\n            this.handleDOMChange(from, to, typeOver, added);\n            if (view.docView && view.docView.dirty)\n                view.updateState(view.state);\n            else if (!this.currentSelection.eq(sel))\n                selectionToDOM(view);\n            this.currentSelection.set(sel);\n        }\n    }\n    registerMutation(mut, added) {\n        // Ignore mutations inside nodes that were already noted as inserted\n        if (added.indexOf(mut.target) > -1)\n            return null;\n        let desc = this.view.docView.nearestDesc(mut.target);\n        if (mut.type == \"attributes\" &&\n            (desc == this.view.docView || mut.attributeName == \"contenteditable\" ||\n                // Firefox sometimes fires spurious events for null/empty styles\n                (mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))))\n            return null;\n        if (!desc || desc.ignoreMutation(mut))\n            return null;\n        if (mut.type == \"childList\") {\n            for (let i = 0; i < mut.addedNodes.length; i++) {\n                let node = mut.addedNodes[i];\n                added.push(node);\n                if (node.nodeType == 3)\n                    this.lastChangedTextNode = node;\n            }\n            if (desc.contentDOM && desc.contentDOM != desc.dom && !desc.contentDOM.contains(mut.target))\n                return { from: desc.posBefore, to: desc.posAfter };\n            let prev = mut.previousSibling, next = mut.nextSibling;\n            if (ie && ie_version <= 11 && mut.addedNodes.length) {\n                // IE11 gives us incorrect next/prev siblings for some\n                // insertions, so if there are added nodes, recompute those\n                for (let i = 0; i < mut.addedNodes.length; i++) {\n                    let { previousSibling, nextSibling } = mut.addedNodes[i];\n                    if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0)\n                        prev = previousSibling;\n                    if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0)\n                        next = nextSibling;\n                }\n            }\n            let fromOffset = prev && prev.parentNode == mut.target\n                ? domIndex(prev) + 1 : 0;\n            let from = desc.localPosFromDOM(mut.target, fromOffset, -1);\n            let toOffset = next && next.parentNode == mut.target\n                ? domIndex(next) : mut.target.childNodes.length;\n            let to = desc.localPosFromDOM(mut.target, toOffset, 1);\n            return { from, to };\n        }\n        else if (mut.type == \"attributes\") {\n            return { from: desc.posAtStart - desc.border, to: desc.posAtEnd + desc.border };\n        }\n        else { // \"characterData\"\n            this.lastChangedTextNode = mut.target;\n            return {\n                from: desc.posAtStart,\n                to: desc.posAtEnd,\n                // An event was generated for a text change that didn't change\n                // any text. Mark the dom change to fall back to assuming the\n                // selection was typed over with an identical value if it can't\n                // find another change.\n                typeOver: mut.target.nodeValue == mut.oldValue\n            };\n        }\n    }\n}\nlet cssChecked = new WeakMap();\nlet cssCheckWarned = false;\nfunction checkCSS(view) {\n    if (cssChecked.has(view))\n        return;\n    cssChecked.set(view, null);\n    if (['normal', 'nowrap', 'pre-line'].indexOf(getComputedStyle(view.dom).whiteSpace) !== -1) {\n        view.requiresGeckoHackNode = gecko;\n        if (cssCheckWarned)\n            return;\n        console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\");\n        cssCheckWarned = true;\n    }\n}\nfunction rangeToSelectionRange(view, range) {\n    let anchorNode = range.startContainer, anchorOffset = range.startOffset;\n    let focusNode = range.endContainer, focusOffset = range.endOffset;\n    let currentAnchor = view.domAtPos(view.state.selection.anchor);\n    // Since such a range doesn't distinguish between anchor and head,\n    // use a heuristic that flips it around if its end matches the\n    // current anchor.\n    if (isEquivalentPosition(currentAnchor.node, currentAnchor.offset, focusNode, focusOffset))\n        [anchorNode, anchorOffset, focusNode, focusOffset] = [focusNode, focusOffset, anchorNode, anchorOffset];\n    return { anchorNode, anchorOffset, focusNode, focusOffset };\n}\n// Used to work around a Safari Selection/shadow DOM bug\n// Based on https://github.com/codemirror/dev/issues/414 fix\nfunction safariShadowSelectionRange(view, selection) {\n    if (selection.getComposedRanges) {\n        let range = selection.getComposedRanges(view.root)[0];\n        if (range)\n            return rangeToSelectionRange(view, range);\n    }\n    let found;\n    function read(event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        found = event.getTargetRanges()[0];\n    }\n    // Because Safari (at least in 2018-2022) doesn't provide regular\n    // access to the selection inside a shadowRoot, we have to perform a\n    // ridiculous hack to get at it—using `execCommand` to trigger a\n    // `beforeInput` event so that we can read the target range from the\n    // event.\n    view.dom.addEventListener(\"beforeinput\", read, true);\n    document.execCommand(\"indent\");\n    view.dom.removeEventListener(\"beforeinput\", read, true);\n    return found ? rangeToSelectionRange(view, found) : null;\n}\nfunction blockParent(view, node) {\n    for (let p = node.parentNode; p && p != view.dom; p = p.parentNode) {\n        let desc = view.docView.nearestDesc(p, true);\n        if (desc && desc.node.isBlock)\n            return p;\n    }\n    return null;\n}\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\nfunction parseBetween(view, from_, to_) {\n    let { node: parent, fromOffset, toOffset, from, to } = view.docView.parseRange(from_, to_);\n    let domSel = view.domSelectionRange();\n    let find;\n    let anchor = domSel.anchorNode;\n    if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n        find = [{ node: anchor, offset: domSel.anchorOffset }];\n        if (!selectionCollapsed(domSel))\n            find.push({ node: domSel.focusNode, offset: domSel.focusOffset });\n    }\n    // Work around issue in Chrome where backspacing sometimes replaces\n    // the deleted content with a random BR node (issues #799, #831)\n    if (chrome && view.input.lastKeyCode === 8) {\n        for (let off = toOffset; off > fromOffset; off--) {\n            let node = parent.childNodes[off - 1], desc = node.pmViewDesc;\n            if (node.nodeName == \"BR\" && !desc) {\n                toOffset = off;\n                break;\n            }\n            if (!desc || desc.size)\n                break;\n        }\n    }\n    let startDoc = view.state.doc;\n    let parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n    let $from = startDoc.resolve(from);\n    let sel = null, doc = parser.parse(parent, {\n        topNode: $from.parent,\n        topMatch: $from.parent.contentMatchAt($from.index()),\n        topOpen: true,\n        from: fromOffset,\n        to: toOffset,\n        preserveWhitespace: $from.parent.type.whitespace == \"pre\" ? \"full\" : true,\n        findPositions: find,\n        ruleFromNode,\n        context: $from\n    });\n    if (find && find[0].pos != null) {\n        let anchor = find[0].pos, head = find[1] && find[1].pos;\n        if (head == null)\n            head = anchor;\n        sel = { anchor: anchor + from, head: head + from };\n    }\n    return { doc, sel, from, to };\n}\nfunction ruleFromNode(dom) {\n    let desc = dom.pmViewDesc;\n    if (desc) {\n        return desc.parseRule();\n    }\n    else if (dom.nodeName == \"BR\" && dom.parentNode) {\n        // Safari replaces the list item or table cell with a BR\n        // directly in the list node (?!) if you delete the last\n        // character in a list item or table cell (#708, #862)\n        if (safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n            let skip = document.createElement(\"div\");\n            skip.appendChild(document.createElement(\"li\"));\n            return { skip };\n        }\n        else if (dom.parentNode.lastChild == dom || safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n            return { ignore: true };\n        }\n    }\n    else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n        return { ignore: true };\n    }\n    return null;\n}\nconst isInline = /^(a|abbr|acronym|b|bd[io]|big|br|button|cite|code|data(list)?|del|dfn|em|i|img|ins|kbd|label|map|mark|meter|output|q|ruby|s|samp|small|span|strong|su[bp]|time|u|tt|var)$/i;\nfunction readDOMChange(view, from, to, typeOver, addedNodes) {\n    let compositionID = view.input.compositionPendingChanges || (view.composing ? view.input.compositionID : 0);\n    view.input.compositionPendingChanges = 0;\n    if (from < 0) {\n        let origin = view.input.lastSelectionTime > Date.now() - 50 ? view.input.lastSelectionOrigin : null;\n        let newSel = selectionFromDOM(view, origin);\n        if (newSel && !view.state.selection.eq(newSel)) {\n            if (chrome && android &&\n                view.input.lastKeyCode === 13 && Date.now() - 100 < view.input.lastKeyCodeTime &&\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\"))))\n                return;\n            let tr = view.state.tr.setSelection(newSel);\n            if (origin == \"pointer\")\n                tr.setMeta(\"pointer\", true);\n            else if (origin == \"key\")\n                tr.scrollIntoView();\n            if (compositionID)\n                tr.setMeta(\"composition\", compositionID);\n            view.dispatch(tr);\n        }\n        return;\n    }\n    let $before = view.state.doc.resolve(from);\n    let shared = $before.sharedDepth(to);\n    from = $before.before(shared + 1);\n    to = view.state.doc.resolve(to).after(shared + 1);\n    let sel = view.state.selection;\n    let parse = parseBetween(view, from, to);\n    let doc = view.state.doc, compare = doc.slice(parse.from, parse.to);\n    let preferredPos, preferredSide;\n    // Prefer anchoring to end when Backspace is pressed\n    if (view.input.lastKeyCode === 8 && Date.now() - 100 < view.input.lastKeyCodeTime) {\n        preferredPos = view.state.selection.to;\n        preferredSide = \"end\";\n    }\n    else {\n        preferredPos = view.state.selection.from;\n        preferredSide = \"start\";\n    }\n    view.input.lastKeyCode = null;\n    let change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide);\n    if (change)\n        view.input.domChangeCount++;\n    if ((ios && view.input.lastIOSEnter > Date.now() - 225 || android) &&\n        addedNodes.some(n => n.nodeType == 1 && !isInline.test(n.nodeName)) &&\n        (!change || change.endA >= change.endB) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    if (!change) {\n        if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) &&\n            !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n            change = { start: sel.from, endA: sel.to, endB: sel.to };\n        }\n        else {\n            if (parse.sel) {\n                let sel = resolveSelection(view, view.state.doc, parse.sel);\n                if (sel && !sel.eq(view.state.selection)) {\n                    let tr = view.state.tr.setSelection(sel);\n                    if (compositionID)\n                        tr.setMeta(\"composition\", compositionID);\n                    view.dispatch(tr);\n                }\n            }\n            return;\n        }\n    }\n    // Handle the case where overwriting a selection by typing matches\n    // the start or end of the selected content, creating a change\n    // that's smaller than what was actually overwritten.\n    if (view.state.selection.from < view.state.selection.to &&\n        change.start == change.endB &&\n        view.state.selection instanceof TextSelection) {\n        if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2 &&\n            view.state.selection.from >= parse.from) {\n            change.start = view.state.selection.from;\n        }\n        else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2 &&\n            view.state.selection.to <= parse.to) {\n            change.endB += (view.state.selection.to - change.endA);\n            change.endA = view.state.selection.to;\n        }\n    }\n    // IE11 will insert a non-breaking space _ahead_ of the space after\n    // the cursor space when adding a space before another space. When\n    // that happened, adjust the change to cover the space instead.\n    if (ie && ie_version <= 11 && change.endB == change.start + 1 &&\n        change.endA == change.start && change.start > parse.from &&\n        parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n        change.start--;\n        change.endA--;\n        change.endB--;\n    }\n    let $from = parse.doc.resolveNoCache(change.start - parse.from);\n    let $to = parse.doc.resolveNoCache(change.endB - parse.from);\n    let $fromA = doc.resolve(change.start);\n    let inlineChange = $from.sameParent($to) && $from.parent.inlineContent && $fromA.end() >= change.endA;\n    // If this looks like the effect of pressing Enter (or was recorded\n    // as being an iOS enter press), just dispatch an Enter key instead.\n    if (((ios && view.input.lastIOSEnter > Date.now() - 225 &&\n        (!inlineChange || addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\"))) ||\n        (!inlineChange && $from.pos < parse.doc.content.size &&\n            (!$from.sameParent($to) || !$from.parent.inlineContent) &&\n            $from.pos < $to.pos && !/\\S/.test(parse.doc.textBetween($from.pos, $to.pos, \"\", \"\")))) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    // Same for backspace\n    if (view.state.selection.anchor > change.start &&\n        looksLikeBackspace(doc, change.start, change.endA, $from, $to) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) {\n        if (android && chrome)\n            view.domObserver.suppressSelectionUpdates(); // #820\n        return;\n    }\n    // Chrome will occasionally, during composition, delete the\n    // entire composition and then immediately insert it again. This is\n    // used to detect that situation.\n    if (chrome && change.endB == change.start)\n        view.input.lastChromeDelete = Date.now();\n    // This tries to detect Android virtual keyboard\n    // enter-and-pick-suggestion action. That sometimes (see issue\n    // #1059) first fires a DOM mutation, before moving the selection to\n    // the newly created block. And then, because ProseMirror cleans up\n    // the DOM selection, it gives up moving the selection entirely,\n    // leaving the cursor in the wrong place. When that happens, we drop\n    // the new paragraph from the initial change, and fire a simulated\n    // enter key afterwards.\n    if (android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth &&\n        parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n        change.endB -= 2;\n        $to = parse.doc.resolveNoCache(change.endB - parse.from);\n        setTimeout(() => {\n            view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); });\n        }, 20);\n    }\n    let chFrom = change.start, chTo = change.endA;\n    let mkTr = (base) => {\n        let tr = base || view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from));\n        if (parse.sel) {\n            let sel = resolveSelection(view, tr.doc, parse.sel);\n            // Chrome will sometimes, during composition, report the\n            // selection in the wrong place. If it looks like that is\n            // happening, don't update the selection.\n            // Edge just doesn't move the cursor forward when you start typing\n            // in an empty block or between br nodes.\n            if (sel && !(chrome && view.composing && sel.empty &&\n                (change.start != change.endB || view.input.lastChromeDelete < Date.now() - 100) &&\n                (sel.head == chFrom || sel.head == tr.mapping.map(chTo) - 1) ||\n                ie && sel.empty && sel.head == chFrom))\n                tr.setSelection(sel);\n        }\n        if (compositionID)\n            tr.setMeta(\"composition\", compositionID);\n        return tr.scrollIntoView();\n    };\n    let markChange;\n    if (inlineChange) {\n        if ($from.pos == $to.pos) { // Deletion\n            // IE11 sometimes weirdly moves the DOM selection around after\n            // backspacing out the first element in a textblock\n            if (ie && ie_version <= 11 && $from.parentOffset == 0) {\n                view.domObserver.suppressSelectionUpdates();\n                setTimeout(() => selectionToDOM(view), 20);\n            }\n            let tr = mkTr(view.state.tr.delete(chFrom, chTo));\n            let marks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA));\n            if (marks)\n                tr.ensureMarks(marks);\n            view.dispatch(tr);\n        }\n        else if ( // Adding or removing a mark\n        change.endA == change.endB &&\n            (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset), $fromA.parent.content.cut($fromA.parentOffset, change.endA - $fromA.start())))) {\n            let tr = mkTr(view.state.tr);\n            if (markChange.type == \"add\")\n                tr.addMark(chFrom, chTo, markChange.mark);\n            else\n                tr.removeMark(chFrom, chTo, markChange.mark);\n            view.dispatch(tr);\n        }\n        else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n            // Both positions in the same text node -- simply insert text\n            let text = $from.parent.textBetween($from.parentOffset, $to.parentOffset);\n            let deflt = () => mkTr(view.state.tr.insertText(text, chFrom, chTo));\n            if (!view.someProp(\"handleTextInput\", f => f(view, chFrom, chTo, text, deflt)))\n                view.dispatch(deflt());\n        }\n        else {\n            view.dispatch(mkTr());\n        }\n    }\n    else {\n        view.dispatch(mkTr());\n    }\n}\nfunction resolveSelection(view, doc, parsedSel) {\n    if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size)\n        return null;\n    return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head));\n}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n    let curMarks = cur.firstChild.marks, prevMarks = prev.firstChild.marks;\n    let added = curMarks, removed = prevMarks, type, mark, update;\n    for (let i = 0; i < prevMarks.length; i++)\n        added = prevMarks[i].removeFromSet(added);\n    for (let i = 0; i < curMarks.length; i++)\n        removed = curMarks[i].removeFromSet(removed);\n    if (added.length == 1 && removed.length == 0) {\n        mark = added[0];\n        type = \"add\";\n        update = (node) => node.mark(mark.addToSet(node.marks));\n    }\n    else if (added.length == 0 && removed.length == 1) {\n        mark = removed[0];\n        type = \"remove\";\n        update = (node) => node.mark(mark.removeFromSet(node.marks));\n    }\n    else {\n        return null;\n    }\n    let updated = [];\n    for (let i = 0; i < prev.childCount; i++)\n        updated.push(update(prev.child(i)));\n    if (Fragment.from(updated).eq(cur))\n        return { mark, type };\n}\nfunction looksLikeBackspace(old, start, end, $newStart, $newEnd) {\n    if ( // The content must have shrunk\n    end - start <= $newEnd.pos - $newStart.pos ||\n        // newEnd must point directly at or after the end of the block that newStart points into\n        skipClosingAndOpening($newStart, true, false) < $newEnd.pos)\n        return false;\n    let $start = old.resolve(start);\n    // Handle the case where, rather than joining blocks, the change just removed an entire block\n    if (!$newStart.parent.isTextblock) {\n        let after = $start.nodeAfter;\n        return after != null && end == start + after.nodeSize;\n    }\n    // Start must be at the end of a block\n    if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock)\n        return false;\n    let $next = old.resolve(skipClosingAndOpening($start, true, true));\n    // The next textblock must start before end and end near it\n    if (!$next.parent.isTextblock || $next.pos > end ||\n        skipClosingAndOpening($next, true, false) < end)\n        return false;\n    // The fragments after the join point must match\n    return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content);\n}\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n    let depth = $pos.depth, end = fromEnd ? $pos.end() : $pos.pos;\n    while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n        depth--;\n        end++;\n        fromEnd = false;\n    }\n    if (mayOpen) {\n        let next = $pos.node(depth).maybeChild($pos.indexAfter(depth));\n        while (next && !next.isLeaf) {\n            next = next.firstChild;\n            end++;\n        }\n    }\n    return end;\n}\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n    let start = a.findDiffStart(b, pos);\n    if (start == null)\n        return null;\n    let { a: endA, b: endB } = a.findDiffEnd(b, pos + a.size, pos + b.size);\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, start - Math.min(endA, endB));\n        preferredPos -= endA + adjust - start;\n    }\n    if (endA < start && a.size < b.size) {\n        let move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0;\n        start -= move;\n        if (start && start < b.size && isSurrogatePair(b.textBetween(start - 1, start + 1)))\n            start += move ? 1 : -1;\n        endB = start + (endB - endA);\n        endA = start;\n    }\n    else if (endB < start) {\n        let move = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0;\n        start -= move;\n        if (start && start < a.size && isSurrogatePair(a.textBetween(start - 1, start + 1)))\n            start += move ? 1 : -1;\n        endA = start + (endA - endB);\n        endB = start;\n    }\n    return { start, endA, endB };\n}\nfunction isSurrogatePair(str) {\n    if (str.length != 2)\n        return false;\n    let a = str.charCodeAt(0), b = str.charCodeAt(1);\n    return a >= 0xDC00 && a <= 0xDFFF && b >= 0xD800 && b <= 0xDBFF;\n}\n\n/**\n@internal\n*/\nconst __parseFromClipboard = parseFromClipboard;\n/**\n@internal\n*/\nconst __endComposition = endComposition;\n/**\nAn editor view manages the DOM structure that represents an\neditable document. Its state and behavior are determined by its\n[props](https://prosemirror.net/docs/ref/#view.DirectEditorProps).\n*/\nclass EditorView {\n    /**\n    Create a view. `place` may be a DOM node that the editor should\n    be appended to, a function that will place it into the document,\n    or an object whose `mount` property holds the node to use as the\n    document container. If it is `null`, the editor will not be\n    added to the document.\n    */\n    constructor(place, props) {\n        this._root = null;\n        /**\n        @internal\n        */\n        this.focused = false;\n        /**\n        Kludge used to work around a Chrome bug @internal\n        */\n        this.trackWrites = null;\n        this.mounted = false;\n        /**\n        @internal\n        */\n        this.markCursor = null;\n        /**\n        @internal\n        */\n        this.cursorWrapper = null;\n        /**\n        @internal\n        */\n        this.lastSelectedViewDesc = undefined;\n        /**\n        @internal\n        */\n        this.input = new InputState;\n        this.prevDirectPlugins = [];\n        this.pluginViews = [];\n        /**\n        Holds `true` when a hack node is needed in Firefox to prevent the\n        [space is eaten issue](https://github.com/ProseMirror/prosemirror/issues/651)\n        @internal\n        */\n        this.requiresGeckoHackNode = false;\n        /**\n        When editor content is being dragged, this object contains\n        information about the dragged slice and whether it is being\n        copied or moved. At any other time, it is null.\n        */\n        this.dragging = null;\n        this._props = props;\n        this.state = props.state;\n        this.directPlugins = props.plugins || [];\n        this.directPlugins.forEach(checkStateComponent);\n        this.dispatch = this.dispatch.bind(this);\n        this.dom = (place && place.mount) || document.createElement(\"div\");\n        if (place) {\n            if (place.appendChild)\n                place.appendChild(this.dom);\n            else if (typeof place == \"function\")\n                place(this.dom);\n            else if (place.mount)\n                this.mounted = true;\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        this.nodeViews = buildNodeViews(this);\n        this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this);\n        this.domObserver = new DOMObserver(this, (from, to, typeOver, added) => readDOMChange(this, from, to, typeOver, added));\n        this.domObserver.start();\n        initInput(this);\n        this.updatePluginViews();\n    }\n    /**\n    Holds `true` when a\n    [composition](https://w3c.github.io/uievents/#events-compositionevents)\n    is active.\n    */\n    get composing() { return this.input.composing; }\n    /**\n    The view's current [props](https://prosemirror.net/docs/ref/#view.EditorProps).\n    */\n    get props() {\n        if (this._props.state != this.state) {\n            let prev = this._props;\n            this._props = {};\n            for (let name in prev)\n                this._props[name] = prev[name];\n            this._props.state = this.state;\n        }\n        return this._props;\n    }\n    /**\n    Update the view's props. Will immediately cause an update to\n    the DOM.\n    */\n    update(props) {\n        if (props.handleDOMEvents != this._props.handleDOMEvents)\n            ensureListeners(this);\n        let prevProps = this._props;\n        this._props = props;\n        if (props.plugins) {\n            props.plugins.forEach(checkStateComponent);\n            this.directPlugins = props.plugins;\n        }\n        this.updateStateInner(props.state, prevProps);\n    }\n    /**\n    Update the view by updating existing props object with the object\n    given as argument. Equivalent to `view.update(Object.assign({},\n    view.props, props))`.\n    */\n    setProps(props) {\n        let updated = {};\n        for (let name in this._props)\n            updated[name] = this._props[name];\n        updated.state = this.state;\n        for (let name in props)\n            updated[name] = props[name];\n        this.update(updated);\n    }\n    /**\n    Update the editor's `state` prop, without touching any of the\n    other props.\n    */\n    updateState(state) {\n        this.updateStateInner(state, this._props);\n    }\n    updateStateInner(state, prevProps) {\n        var _a;\n        let prev = this.state, redraw = false, updateSel = false;\n        // When stored marks are added, stop composition, so that they can\n        // be displayed.\n        if (state.storedMarks && this.composing) {\n            clearComposition(this);\n            updateSel = true;\n        }\n        this.state = state;\n        let pluginsChanged = prev.plugins != state.plugins || this._props.plugins != prevProps.plugins;\n        if (pluginsChanged || this._props.plugins != prevProps.plugins || this._props.nodeViews != prevProps.nodeViews) {\n            let nodeViews = buildNodeViews(this);\n            if (changedNodeViews(nodeViews, this.nodeViews)) {\n                this.nodeViews = nodeViews;\n                redraw = true;\n            }\n        }\n        if (pluginsChanged || prevProps.handleDOMEvents != this._props.handleDOMEvents) {\n            ensureListeners(this);\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        let innerDeco = viewDecorations(this), outerDeco = computeDocDeco(this);\n        let scroll = prev.plugins != state.plugins && !prev.doc.eq(state.doc) ? \"reset\"\n            : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\";\n        let updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco);\n        if (updateDoc || !state.selection.eq(prev.selection))\n            updateSel = true;\n        let oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this);\n        if (updateSel) {\n            this.domObserver.stop();\n            // Work around an issue in Chrome, IE, and Edge where changing\n            // the DOM around an active selection puts it into a broken\n            // state where the thing the user sees differs from the\n            // selection reported by the Selection object (#710, #973,\n            // #1011, #1013, #1035).\n            let forceSelUpdate = updateDoc && (ie || chrome) && !this.composing &&\n                !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection);\n            if (updateDoc) {\n                // If the node that the selection points into is written to,\n                // Chrome sometimes starts misreporting the selection, so this\n                // tracks that and forces a selection reset when our update\n                // did write to the node.\n                let chromeKludge = chrome ? (this.trackWrites = this.domSelectionRange().focusNode) : null;\n                if (this.composing)\n                    this.input.compositionNode = findCompositionNode(this);\n                if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n                    this.docView.updateOuterDeco(outerDeco);\n                    this.docView.destroy();\n                    this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this);\n                }\n                if (chromeKludge && !this.trackWrites)\n                    forceSelUpdate = true;\n            }\n            // Work around for an issue where an update arriving right between\n            // a DOM selection change and the \"selectionchange\" event for it\n            // can cause a spurious DOM selection update, disrupting mouse\n            // drag selection.\n            if (forceSelUpdate ||\n                !(this.input.mouseDown && this.domObserver.currentSelection.eq(this.domSelectionRange()) &&\n                    anchorInRightPlace(this))) {\n                selectionToDOM(this, forceSelUpdate);\n            }\n            else {\n                syncNodeSelection(this, state.selection);\n                this.domObserver.setCurSelection();\n            }\n            this.domObserver.start();\n        }\n        this.updatePluginViews(prev);\n        if (((_a = this.dragging) === null || _a === void 0 ? void 0 : _a.node) && !prev.doc.eq(state.doc))\n            this.updateDraggedNode(this.dragging, prev);\n        if (scroll == \"reset\") {\n            this.dom.scrollTop = 0;\n        }\n        else if (scroll == \"to selection\") {\n            this.scrollToSelection();\n        }\n        else if (oldScrollPos) {\n            resetScrollPos(oldScrollPos);\n        }\n    }\n    /**\n    @internal\n    */\n    scrollToSelection() {\n        let startDOM = this.domSelectionRange().focusNode;\n        if (!startDOM || !this.dom.contains(startDOM.nodeType == 1 ? startDOM : startDOM.parentNode)) ;\n        else if (this.someProp(\"handleScrollToSelection\", f => f(this))) ;\n        else if (this.state.selection instanceof NodeSelection) {\n            let target = this.docView.domAfterPos(this.state.selection.from);\n            if (target.nodeType == 1)\n                scrollRectIntoView(this, target.getBoundingClientRect(), startDOM);\n        }\n        else {\n            scrollRectIntoView(this, this.coordsAtPos(this.state.selection.head, 1), startDOM);\n        }\n    }\n    destroyPluginViews() {\n        let view;\n        while (view = this.pluginViews.pop())\n            if (view.destroy)\n                view.destroy();\n    }\n    updatePluginViews(prevState) {\n        if (!prevState || prevState.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {\n            this.prevDirectPlugins = this.directPlugins;\n            this.destroyPluginViews();\n            for (let i = 0; i < this.directPlugins.length; i++) {\n                let plugin = this.directPlugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n            for (let i = 0; i < this.state.plugins.length; i++) {\n                let plugin = this.state.plugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n        }\n        else {\n            for (let i = 0; i < this.pluginViews.length; i++) {\n                let pluginView = this.pluginViews[i];\n                if (pluginView.update)\n                    pluginView.update(this, prevState);\n            }\n        }\n    }\n    updateDraggedNode(dragging, prev) {\n        let sel = dragging.node, found = -1;\n        if (this.state.doc.nodeAt(sel.from) == sel.node) {\n            found = sel.from;\n        }\n        else {\n            let movedPos = sel.from + (this.state.doc.content.size - prev.doc.content.size);\n            let moved = movedPos > 0 && this.state.doc.nodeAt(movedPos);\n            if (moved == sel.node)\n                found = movedPos;\n        }\n        this.dragging = new Dragging(dragging.slice, dragging.move, found < 0 ? undefined : NodeSelection.create(this.state.doc, found));\n    }\n    someProp(propName, f) {\n        let prop = this._props && this._props[propName], value;\n        if (prop != null && (value = f ? f(prop) : prop))\n            return value;\n        for (let i = 0; i < this.directPlugins.length; i++) {\n            let prop = this.directPlugins[i].props[propName];\n            if (prop != null && (value = f ? f(prop) : prop))\n                return value;\n        }\n        let plugins = this.state.plugins;\n        if (plugins)\n            for (let i = 0; i < plugins.length; i++) {\n                let prop = plugins[i].props[propName];\n                if (prop != null && (value = f ? f(prop) : prop))\n                    return value;\n            }\n    }\n    /**\n    Query whether the view has focus.\n    */\n    hasFocus() {\n        // Work around IE not handling focus correctly if resize handles are shown.\n        // If the cursor is inside an element with resize handles, activeElement\n        // will be that element instead of this.dom.\n        if (ie) {\n            // If activeElement is within this.dom, and there are no other elements\n            // setting `contenteditable` to false in between, treat it as focused.\n            let node = this.root.activeElement;\n            if (node == this.dom)\n                return true;\n            if (!node || !this.dom.contains(node))\n                return false;\n            while (node && this.dom != node && this.dom.contains(node)) {\n                if (node.contentEditable == 'false')\n                    return false;\n                node = node.parentElement;\n            }\n            return true;\n        }\n        return this.root.activeElement == this.dom;\n    }\n    /**\n    Focus the editor.\n    */\n    focus() {\n        this.domObserver.stop();\n        if (this.editable)\n            focusPreventScroll(this.dom);\n        selectionToDOM(this);\n        this.domObserver.start();\n    }\n    /**\n    Get the document root in which the editor exists. This will\n    usually be the top-level `document`, but might be a [shadow\n    DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n    root if the editor is inside one.\n    */\n    get root() {\n        let cached = this._root;\n        if (cached == null)\n            for (let search = this.dom.parentNode; search; search = search.parentNode) {\n                if (search.nodeType == 9 || (search.nodeType == 11 && search.host)) {\n                    if (!search.getSelection)\n                        Object.getPrototypeOf(search).getSelection = () => search.ownerDocument.getSelection();\n                    return this._root = search;\n                }\n            }\n        return cached || document;\n    }\n    /**\n    When an existing editor view is moved to a new document or\n    shadow tree, call this to make it recompute its root.\n    */\n    updateRoot() {\n        this._root = null;\n    }\n    /**\n    Given a pair of viewport coordinates, return the document\n    position that corresponds to them. May return null if the given\n    coordinates aren't inside of the editor. When an object is\n    returned, its `pos` property is the position nearest to the\n    coordinates, and its `inside` property holds the position of the\n    inner node that the position falls inside of, or -1 if it is at\n    the top level, not in any node.\n    */\n    posAtCoords(coords) {\n        return posAtCoords(this, coords);\n    }\n    /**\n    Returns the viewport rectangle at a given document position.\n    `left` and `right` will be the same number, as this returns a\n    flat cursor-ish rectangle. If the position is between two things\n    that aren't directly adjacent, `side` determines which element\n    is used. When < 0, the element before the position is used,\n    otherwise the element after.\n    */\n    coordsAtPos(pos, side = 1) {\n        return coordsAtPos(this, pos, side);\n    }\n    /**\n    Find the DOM position that corresponds to the given document\n    position. When `side` is negative, find the position as close as\n    possible to the content before the position. When positive,\n    prefer positions close to the content after the position. When\n    zero, prefer as shallow a position as possible.\n    \n    Note that you should **not** mutate the editor's internal DOM,\n    only inspect it (and even that is usually not necessary).\n    */\n    domAtPos(pos, side = 0) {\n        return this.docView.domFromPos(pos, side);\n    }\n    /**\n    Find the DOM node that represents the document node after the\n    given position. May return `null` when the position doesn't point\n    in front of a node or if the node is inside an opaque node view.\n    \n    This is intended to be able to call things like\n    `getBoundingClientRect` on that DOM node. Do **not** mutate the\n    editor DOM directly, or add styling this way, since that will be\n    immediately overriden by the editor as it redraws the node.\n    */\n    nodeDOM(pos) {\n        let desc = this.docView.descAt(pos);\n        return desc ? desc.nodeDOM : null;\n    }\n    /**\n    Find the document position that corresponds to a given DOM\n    position. (Whenever possible, it is preferable to inspect the\n    document structure directly, rather than poking around in the\n    DOM, but sometimes—for example when interpreting an event\n    target—you don't have a choice.)\n    \n    The `bias` parameter can be used to influence which side of a DOM\n    node to use when the position is inside a leaf node.\n    */\n    posAtDOM(node, offset, bias = -1) {\n        let pos = this.docView.posFromDOM(node, offset, bias);\n        if (pos == null)\n            throw new RangeError(\"DOM position not inside the editor\");\n        return pos;\n    }\n    /**\n    Find out whether the selection is at the end of a textblock when\n    moving in a given direction. When, for example, given `\"left\"`,\n    it will return true if moving left from the current cursor\n    position would leave that position's parent textblock. Will apply\n    to the view's current state by default, but it is possible to\n    pass a different state.\n    */\n    endOfTextblock(dir, state) {\n        return endOfTextblock(this, state || this.state, dir);\n    }\n    /**\n    Run the editor's paste logic with the given HTML string. The\n    `event`, if given, will be passed to the\n    [`handlePaste`](https://prosemirror.net/docs/ref/#view.EditorProps.handlePaste) hook.\n    */\n    pasteHTML(html, event) {\n        return doPaste(this, \"\", html, false, event || new ClipboardEvent(\"paste\"));\n    }\n    /**\n    Run the editor's paste logic with the given plain-text input.\n    */\n    pasteText(text, event) {\n        return doPaste(this, text, null, true, event || new ClipboardEvent(\"paste\"));\n    }\n    /**\n    Serialize the given slice as it would be if it was copied from\n    this editor. Returns a DOM element that contains a\n    representation of the slice as its children, a textual\n    representation, and the transformed slice (which can be\n    different from the given input due to hooks like\n    [`transformCopied`](https://prosemirror.net/docs/ref/#view.EditorProps.transformCopied)).\n    */\n    serializeForClipboard(slice) {\n        return serializeForClipboard(this, slice);\n    }\n    /**\n    Removes the editor from the DOM and destroys all [node\n    views](https://prosemirror.net/docs/ref/#view.NodeView).\n    */\n    destroy() {\n        if (!this.docView)\n            return;\n        destroyInput(this);\n        this.destroyPluginViews();\n        if (this.mounted) {\n            this.docView.update(this.state.doc, [], viewDecorations(this), this);\n            this.dom.textContent = \"\";\n        }\n        else if (this.dom.parentNode) {\n            this.dom.parentNode.removeChild(this.dom);\n        }\n        this.docView.destroy();\n        this.docView = null;\n        clearReusedRange();\n    }\n    /**\n    This is true when the view has been\n    [destroyed](https://prosemirror.net/docs/ref/#view.EditorView.destroy) (and thus should not be\n    used anymore).\n    */\n    get isDestroyed() {\n        return this.docView == null;\n    }\n    /**\n    Used for testing.\n    */\n    dispatchEvent(event) {\n        return dispatchEvent(this, event);\n    }\n    /**\n    @internal\n    */\n    domSelectionRange() {\n        let sel = this.domSelection();\n        if (!sel)\n            return { focusNode: null, focusOffset: 0, anchorNode: null, anchorOffset: 0 };\n        return safari && this.root.nodeType === 11 &&\n            deepActiveElement(this.dom.ownerDocument) == this.dom && safariShadowSelectionRange(this, sel) || sel;\n    }\n    /**\n    @internal\n    */\n    domSelection() {\n        return this.root.getSelection();\n    }\n}\nEditorView.prototype.dispatch = function (tr) {\n    let dispatchTransaction = this._props.dispatchTransaction;\n    if (dispatchTransaction)\n        dispatchTransaction.call(this, tr);\n    else\n        this.updateState(this.state.apply(tr));\n};\nfunction computeDocDeco(view) {\n    let attrs = Object.create(null);\n    attrs.class = \"ProseMirror\";\n    attrs.contenteditable = String(view.editable);\n    view.someProp(\"attributes\", value => {\n        if (typeof value == \"function\")\n            value = value(view.state);\n        if (value)\n            for (let attr in value) {\n                if (attr == \"class\")\n                    attrs.class += \" \" + value[attr];\n                else if (attr == \"style\")\n                    attrs.style = (attrs.style ? attrs.style + \";\" : \"\") + value[attr];\n                else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\")\n                    attrs[attr] = String(value[attr]);\n            }\n    });\n    if (!attrs.translate)\n        attrs.translate = \"no\";\n    return [Decoration.node(0, view.state.doc.content.size, attrs)];\n}\nfunction updateCursorWrapper(view) {\n    if (view.markCursor) {\n        let dom = document.createElement(\"img\");\n        dom.className = \"ProseMirror-separator\";\n        dom.setAttribute(\"mark-placeholder\", \"true\");\n        dom.setAttribute(\"alt\", \"\");\n        view.cursorWrapper = { dom, deco: Decoration.widget(view.state.selection.from, dom, { raw: true, marks: view.markCursor }) };\n    }\n    else {\n        view.cursorWrapper = null;\n    }\n}\nfunction getEditable(view) {\n    return !view.someProp(\"editable\", value => value(view.state) === false);\n}\nfunction selectionContextChanged(sel1, sel2) {\n    let depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head));\n    return sel1.$anchor.start(depth) != sel2.$anchor.start(depth);\n}\nfunction buildNodeViews(view) {\n    let result = Object.create(null);\n    function add(obj) {\n        for (let prop in obj)\n            if (!Object.prototype.hasOwnProperty.call(result, prop))\n                result[prop] = obj[prop];\n    }\n    view.someProp(\"nodeViews\", add);\n    view.someProp(\"markViews\", add);\n    return result;\n}\nfunction changedNodeViews(a, b) {\n    let nA = 0, nB = 0;\n    for (let prop in a) {\n        if (a[prop] != b[prop])\n            return true;\n        nA++;\n    }\n    for (let _ in b)\n        nB++;\n    return nA != nB;\n}\nfunction checkStateComponent(plugin) {\n    if (plugin.spec.state || plugin.spec.filterTransaction || plugin.spec.appendTransaction)\n        throw new RangeError(\"Plugins passed directly to the view must not have a state component\");\n}\n\nexport { Decoration, DecorationSet, EditorView, __endComposition, __parseFromClipboard };\n","import { createSlice, createTimer, Container, Clock, Ctx } from \"@milkdown/ctx\";\nimport { Schema, DOMParser, Node } from \"@milkdown/prose/model\";\nimport remarkParse from \"remark-parse\";\nimport remarkStringify from \"remark-stringify\";\nimport { unified } from \"unified\";\nimport { callCommandBeforeEditorView, ctxCallOutOfScope, docTypeError } from \"@milkdown/exception\";\nimport { ParserState, SerializerState } from \"@milkdown/transformer\";\nimport { chainCommands, deleteSelection, joinTextblockBackward, selectNodeBackward, baseKeymap } from \"@milkdown/prose/commands\";\nimport { undoInputRule } from \"@milkdown/prose/inputrules\";\nimport { customInputRules } from \"@milkdown/prose\";\nimport { keymap as keymap$1 } from \"@milkdown/prose/keymap\";\nimport { Plugin, PluginKey, EditorState } from \"@milkdown/prose/state\";\nimport { EditorView } from \"@milkdown/prose/view\";\nfunction withMeta(plugin, meta) {\n  plugin.meta = {\n    package: \"@milkdown/core\",\n    group: \"System\",\n    ...meta\n  };\n  return plugin;\n}\nconst remarkHandlers = {\n  text: (node, _, state, info) => {\n    const value = node.value;\n    if (/^[^*_\\\\]*\\s+$/.test(value)) {\n      return value;\n    }\n    return state.safe(value, { ...info, encode: [] });\n  },\n  strong: (node, _, state, info) => {\n    const marker = node.marker || state.options.strong || \"*\";\n    const exit = state.enter(\"strong\");\n    const tracker = state.createTracker(info);\n    let value = tracker.move(marker + marker);\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: marker,\n        ...tracker.current()\n      })\n    );\n    value += tracker.move(marker + marker);\n    exit();\n    return value;\n  },\n  emphasis: (node, _, state, info) => {\n    const marker = node.marker || state.options.emphasis || \"*\";\n    const exit = state.enter(\"emphasis\");\n    const tracker = state.createTracker(info);\n    let value = tracker.move(marker);\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: marker,\n        ...tracker.current()\n      })\n    );\n    value += tracker.move(marker);\n    exit();\n    return value;\n  }\n};\nconst editorViewCtx = createSlice({}, \"editorView\");\nconst editorStateCtx = createSlice({}, \"editorState\");\nconst initTimerCtx = createSlice([], \"initTimer\");\nconst editorCtx = createSlice({}, \"editor\");\nconst inputRulesCtx = createSlice([], \"inputRules\");\nconst prosePluginsCtx = createSlice([], \"prosePlugins\");\nconst remarkPluginsCtx = createSlice(\n  [],\n  \"remarkPlugins\"\n);\nconst nodeViewCtx = createSlice([], \"nodeView\");\nconst markViewCtx = createSlice([], \"markView\");\nconst remarkCtx = createSlice(\n  unified().use(remarkParse).use(remarkStringify),\n  \"remark\"\n);\nconst remarkStringifyOptionsCtx = createSlice(\n  {\n    handlers: remarkHandlers,\n    encode: []\n  },\n  \"remarkStringifyOptions\"\n);\nconst ConfigReady = createTimer(\"ConfigReady\");\nfunction config(configure) {\n  const plugin = (ctx) => {\n    ctx.record(ConfigReady);\n    return async () => {\n      await configure(ctx);\n      ctx.done(ConfigReady);\n      return () => {\n        ctx.clearTimer(ConfigReady);\n      };\n    };\n  };\n  withMeta(plugin, {\n    displayName: \"Config\"\n  });\n  return plugin;\n}\nconst InitReady = createTimer(\"InitReady\");\nfunction init(editor) {\n  const plugin = (ctx) => {\n    ctx.inject(editorCtx, editor).inject(prosePluginsCtx, []).inject(remarkPluginsCtx, []).inject(inputRulesCtx, []).inject(nodeViewCtx, []).inject(markViewCtx, []).inject(remarkStringifyOptionsCtx, {\n      handlers: remarkHandlers,\n      encode: []\n    }).inject(remarkCtx, unified().use(remarkParse).use(remarkStringify)).inject(initTimerCtx, [ConfigReady]).record(InitReady);\n    return async () => {\n      await ctx.waitTimers(initTimerCtx);\n      const options = ctx.get(remarkStringifyOptionsCtx);\n      ctx.set(\n        remarkCtx,\n        unified().use(remarkParse).use(remarkStringify, options)\n      );\n      ctx.done(InitReady);\n      return () => {\n        ctx.remove(editorCtx).remove(prosePluginsCtx).remove(remarkPluginsCtx).remove(inputRulesCtx).remove(nodeViewCtx).remove(markViewCtx).remove(remarkStringifyOptionsCtx).remove(remarkCtx).remove(initTimerCtx).clearTimer(InitReady);\n      };\n    };\n  };\n  withMeta(plugin, {\n    displayName: \"Init\"\n  });\n  return plugin;\n}\nconst SchemaReady = createTimer(\"SchemaReady\");\nconst schemaTimerCtx = createSlice([], \"schemaTimer\");\nconst schemaCtx = createSlice({}, \"schema\");\nconst nodesCtx = createSlice([], \"nodes\");\nconst marksCtx = createSlice([], \"marks\");\nfunction extendPriority(x) {\n  return {\n    ...x,\n    parseDOM: x.parseDOM?.map((rule) => ({ priority: x.priority, ...rule }))\n  };\n}\nconst schema = (ctx) => {\n  ctx.inject(schemaCtx, {}).inject(nodesCtx, []).inject(marksCtx, []).inject(schemaTimerCtx, [InitReady]).record(SchemaReady);\n  return async () => {\n    await ctx.waitTimers(schemaTimerCtx);\n    const remark = ctx.get(remarkCtx);\n    const remarkPlugins = ctx.get(remarkPluginsCtx);\n    const processor = remarkPlugins.reduce(\n      (acc, plug) => acc.use(plug.plugin, plug.options),\n      remark\n    );\n    ctx.set(remarkCtx, processor);\n    const nodes = Object.fromEntries(\n      ctx.get(nodesCtx).map(([key2, x]) => [key2, extendPriority(x)])\n    );\n    const marks = Object.fromEntries(\n      ctx.get(marksCtx).map(([key2, x]) => [key2, extendPriority(x)])\n    );\n    const schema2 = new Schema({ nodes, marks });\n    ctx.set(schemaCtx, schema2);\n    ctx.done(SchemaReady);\n    return () => {\n      ctx.remove(schemaCtx).remove(nodesCtx).remove(marksCtx).remove(schemaTimerCtx).clearTimer(SchemaReady);\n    };\n  };\n};\nwithMeta(schema, {\n  displayName: \"Schema\"\n});\nclass CommandManager {\n  constructor() {\n    this.#container = new Container();\n    this.#ctx = null;\n    this.setCtx = (ctx) => {\n      this.#ctx = ctx;\n    };\n    this.chain = () => {\n      if (this.#ctx == null) throw callCommandBeforeEditorView();\n      const ctx = this.#ctx;\n      const commands2 = [];\n      const get = this.get.bind(this);\n      const chains = {\n        run: () => {\n          const chained = chainCommands(...commands2);\n          const view = ctx.get(editorViewCtx);\n          return chained(view.state, view.dispatch, view);\n        },\n        inline: (command) => {\n          commands2.push(command);\n          return chains;\n        },\n        pipe: pipe.bind(this)\n      };\n      function pipe(slice, payload) {\n        const cmd = get(slice);\n        commands2.push(cmd(payload));\n        return chains;\n      }\n      return chains;\n    };\n  }\n  #container;\n  #ctx;\n  get ctx() {\n    return this.#ctx;\n  }\n  /// Register a command into the manager.\n  create(meta, value) {\n    const slice = meta.create(this.#container.sliceMap);\n    slice.set(value);\n    return slice;\n  }\n  get(slice) {\n    return this.#container.get(slice).get();\n  }\n  remove(slice) {\n    return this.#container.remove(slice);\n  }\n  call(slice, payload) {\n    if (this.#ctx == null) throw callCommandBeforeEditorView();\n    const cmd = this.get(slice);\n    const command = cmd(payload);\n    const view = this.#ctx.get(editorViewCtx);\n    return command(view.state, view.dispatch, view);\n  }\n  /// Call an inline command.\n  inline(command) {\n    if (this.#ctx == null) throw callCommandBeforeEditorView();\n    const view = this.#ctx.get(editorViewCtx);\n    return command(view.state, view.dispatch, view);\n  }\n}\nfunction createCmdKey(key2 = \"cmdKey\") {\n  return createSlice((() => () => false), key2);\n}\nconst commandsCtx = createSlice(new CommandManager(), \"commands\");\nconst commandsTimerCtx = createSlice([SchemaReady], \"commandsTimer\");\nconst CommandsReady = createTimer(\"CommandsReady\");\nconst commands = (ctx) => {\n  const cmd = new CommandManager();\n  cmd.setCtx(ctx);\n  ctx.inject(commandsCtx, cmd).inject(commandsTimerCtx, [SchemaReady]).record(CommandsReady);\n  return async () => {\n    await ctx.waitTimers(commandsTimerCtx);\n    ctx.done(CommandsReady);\n    return () => {\n      ctx.remove(commandsCtx).remove(commandsTimerCtx).clearTimer(CommandsReady);\n    };\n  };\n};\nwithMeta(commands, {\n  displayName: \"Commands\"\n});\nfunction overrideBaseKeymap(keymap2) {\n  const handleBackspace = chainCommands(\n    undoInputRule,\n    deleteSelection,\n    joinTextblockBackward,\n    selectNodeBackward\n  );\n  keymap2.Backspace = handleBackspace;\n  return keymap2;\n}\nclass KeymapManager {\n  constructor() {\n    this.#ctx = null;\n    this.#keymap = [];\n    this.setCtx = (ctx) => {\n      this.#ctx = ctx;\n    };\n    this.add = (keymap2) => {\n      this.#keymap.push(keymap2);\n      return () => {\n        this.#keymap = this.#keymap.filter((item) => item !== keymap2);\n      };\n    };\n    this.addObjectKeymap = (keymaps) => {\n      const remove = [];\n      Object.entries(keymaps).forEach(([key2, command]) => {\n        if (typeof command === \"function\") {\n          const keymapItem = {\n            key: key2,\n            onRun: () => command\n          };\n          this.#keymap.push(keymapItem);\n          remove.push(() => {\n            this.#keymap = this.#keymap.filter((item) => item !== keymapItem);\n          });\n        } else {\n          this.#keymap.push(command);\n          remove.push(() => {\n            this.#keymap = this.#keymap.filter((item) => item !== command);\n          });\n        }\n      });\n      return () => {\n        remove.forEach((fn) => fn());\n      };\n    };\n    this.addBaseKeymap = () => {\n      const base = overrideBaseKeymap(baseKeymap);\n      return this.addObjectKeymap(base);\n    };\n    this.build = () => {\n      const keymap2 = {};\n      this.#keymap.forEach((item) => {\n        keymap2[item.key] = [...keymap2[item.key] || [], item];\n      });\n      const output = Object.fromEntries(\n        Object.entries(keymap2).map(([key2, items]) => {\n          const sortedItems = items.sort(\n            (a, b) => (b.priority ?? 50) - (a.priority ?? 50)\n          );\n          const command = (state, dispatch, view) => {\n            const ctx = this.#ctx;\n            if (ctx == null) throw ctxCallOutOfScope();\n            const commands2 = sortedItems.map((item) => item.onRun(ctx));\n            const chained = chainCommands(...commands2);\n            return chained(state, dispatch, view);\n          };\n          return [key2, command];\n        })\n      );\n      return output;\n    };\n  }\n  #ctx;\n  #keymap;\n  get ctx() {\n    return this.#ctx;\n  }\n}\nconst keymapCtx = createSlice(new KeymapManager(), \"keymap\");\nconst keymapTimerCtx = createSlice([SchemaReady], \"keymapTimer\");\nconst KeymapReady = createTimer(\"KeymapReady\");\nconst keymap = (ctx) => {\n  const km = new KeymapManager();\n  km.setCtx(ctx);\n  ctx.inject(keymapCtx, km).inject(keymapTimerCtx, [SchemaReady]).record(KeymapReady);\n  return async () => {\n    await ctx.waitTimers(keymapTimerCtx);\n    ctx.done(KeymapReady);\n    return () => {\n      ctx.remove(keymapCtx).remove(keymapTimerCtx).clearTimer(KeymapReady);\n    };\n  };\n};\nconst ParserReady = createTimer(\"ParserReady\");\nconst outOfScope$1 = (() => {\n  throw ctxCallOutOfScope();\n});\nconst parserCtx = createSlice(outOfScope$1, \"parser\");\nconst parserTimerCtx = createSlice([], \"parserTimer\");\nconst parser = (ctx) => {\n  ctx.inject(parserCtx, outOfScope$1).inject(parserTimerCtx, [SchemaReady]).record(ParserReady);\n  return async () => {\n    await ctx.waitTimers(parserTimerCtx);\n    const remark = ctx.get(remarkCtx);\n    const schema2 = ctx.get(schemaCtx);\n    ctx.set(parserCtx, ParserState.create(schema2, remark));\n    ctx.done(ParserReady);\n    return () => {\n      ctx.remove(parserCtx).remove(parserTimerCtx).clearTimer(ParserReady);\n    };\n  };\n};\nwithMeta(parser, {\n  displayName: \"Parser\"\n});\nconst SerializerReady = createTimer(\"SerializerReady\");\nconst serializerTimerCtx = createSlice(\n  [],\n  \"serializerTimer\"\n);\nconst outOfScope = (() => {\n  throw ctxCallOutOfScope();\n});\nconst serializerCtx = createSlice(\n  outOfScope,\n  \"serializer\"\n);\nconst serializer = (ctx) => {\n  ctx.inject(serializerCtx, outOfScope).inject(serializerTimerCtx, [SchemaReady]).record(SerializerReady);\n  return async () => {\n    await ctx.waitTimers(serializerTimerCtx);\n    const remark = ctx.get(remarkCtx);\n    const schema2 = ctx.get(schemaCtx);\n    ctx.set(serializerCtx, SerializerState.create(schema2, remark));\n    ctx.done(SerializerReady);\n    return () => {\n      ctx.remove(serializerCtx).remove(serializerTimerCtx).clearTimer(SerializerReady);\n    };\n  };\n};\nwithMeta(serializer, {\n  displayName: \"Serializer\"\n});\nconst defaultValueCtx = createSlice(\"\", \"defaultValue\");\nconst editorStateOptionsCtx = createSlice(\n  (x) => x,\n  \"stateOptions\"\n);\nconst editorStateTimerCtx = createSlice(\n  [],\n  \"editorStateTimer\"\n);\nconst EditorStateReady = createTimer(\"EditorStateReady\");\nfunction getDoc(defaultValue, parser2, schema2) {\n  if (typeof defaultValue === \"string\") return parser2(defaultValue);\n  if (defaultValue.type === \"html\")\n    return DOMParser.fromSchema(schema2).parse(defaultValue.dom);\n  if (defaultValue.type === \"json\")\n    return Node.fromJSON(schema2, defaultValue.value);\n  throw docTypeError(defaultValue);\n}\nconst key$1 = new PluginKey(\"MILKDOWN_STATE_TRACKER\");\nconst editorState = (ctx) => {\n  ctx.inject(defaultValueCtx, \"\").inject(editorStateCtx, {}).inject(editorStateOptionsCtx, (x) => x).inject(editorStateTimerCtx, [\n    ParserReady,\n    SerializerReady,\n    CommandsReady,\n    KeymapReady\n  ]).record(EditorStateReady);\n  return async () => {\n    await ctx.waitTimers(editorStateTimerCtx);\n    const schema2 = ctx.get(schemaCtx);\n    const parser2 = ctx.get(parserCtx);\n    const rules = ctx.get(inputRulesCtx);\n    const optionsOverride = ctx.get(editorStateOptionsCtx);\n    const prosePlugins = ctx.get(prosePluginsCtx);\n    const defaultValue = ctx.get(defaultValueCtx);\n    const doc = getDoc(defaultValue, parser2, schema2);\n    const km = ctx.get(keymapCtx);\n    const disposeBaseKeymap = km.addBaseKeymap();\n    const plugins = [\n      ...prosePlugins,\n      new Plugin({\n        key: key$1,\n        state: {\n          init: () => {\n          },\n          apply: (_tr, _value, _oldState, newState) => {\n            ctx.set(editorStateCtx, newState);\n          }\n        }\n      }),\n      customInputRules({ rules }),\n      keymap$1(km.build())\n    ];\n    ctx.set(prosePluginsCtx, plugins);\n    const options = optionsOverride({\n      schema: schema2,\n      doc,\n      plugins\n    });\n    const state = EditorState.create(options);\n    ctx.set(editorStateCtx, state);\n    ctx.done(EditorStateReady);\n    return () => {\n      disposeBaseKeymap();\n      ctx.remove(defaultValueCtx).remove(editorStateCtx).remove(editorStateOptionsCtx).remove(editorStateTimerCtx).clearTimer(EditorStateReady);\n    };\n  };\n};\nwithMeta(editorState, {\n  displayName: \"EditorState\"\n});\nconst pasteRulesCtx = createSlice([], \"pasteRule\");\nconst pasteRulesTimerCtx = createSlice([SchemaReady], \"pasteRuleTimer\");\nconst PasteRulesReady = createTimer(\"PasteRuleReady\");\nconst pasteRule = (ctx) => {\n  ctx.inject(pasteRulesCtx, []).inject(pasteRulesTimerCtx, [SchemaReady]).record(PasteRulesReady);\n  return async () => {\n    await ctx.waitTimers(pasteRulesTimerCtx);\n    ctx.done(PasteRulesReady);\n    return () => {\n      ctx.remove(pasteRulesCtx).remove(pasteRulesTimerCtx).clearTimer(PasteRulesReady);\n    };\n  };\n};\nwithMeta(pasteRule, {\n  displayName: \"PasteRule\"\n});\nconst EditorViewReady = createTimer(\"EditorViewReady\");\nconst editorViewTimerCtx = createSlice(\n  [],\n  \"editorViewTimer\"\n);\nconst editorViewOptionsCtx = createSlice(\n  {},\n  \"editorViewOptions\"\n);\nconst rootCtx = createSlice(null, \"root\");\nconst rootDOMCtx = createSlice(null, \"rootDOM\");\nconst rootAttrsCtx = createSlice(\n  {},\n  \"rootAttrs\"\n);\nfunction createViewContainer(root, ctx) {\n  const container = document.createElement(\"div\");\n  container.className = \"milkdown\";\n  root.appendChild(container);\n  ctx.set(rootDOMCtx, container);\n  const attrs = ctx.get(rootAttrsCtx);\n  Object.entries(attrs).forEach(\n    ([key2, value]) => container.setAttribute(key2, value)\n  );\n  return container;\n}\nfunction prepareViewDom(dom) {\n  dom.classList.add(\"editor\");\n  dom.setAttribute(\"role\", \"textbox\");\n}\nconst key = new PluginKey(\"MILKDOWN_VIEW_CLEAR\");\nconst editorView = (ctx) => {\n  ctx.inject(rootCtx, document.body).inject(editorViewCtx, {}).inject(editorViewOptionsCtx, {}).inject(rootDOMCtx, null).inject(rootAttrsCtx, {}).inject(editorViewTimerCtx, [EditorStateReady, PasteRulesReady]).record(EditorViewReady);\n  return async () => {\n    await ctx.wait(InitReady);\n    const root = ctx.get(rootCtx) || document.body;\n    const el = typeof root === \"string\" ? document.querySelector(root) : root;\n    ctx.update(prosePluginsCtx, (xs) => [\n      new Plugin({\n        key,\n        view: (editorView2) => {\n          const container = el ? createViewContainer(el, ctx) : void 0;\n          const handleDOM = () => {\n            if (container && el) {\n              const editor = editorView2.dom;\n              el.replaceChild(container, editor);\n              container.appendChild(editor);\n            }\n          };\n          handleDOM();\n          return {\n            destroy: () => {\n              if (container?.parentNode)\n                container?.parentNode.replaceChild(editorView2.dom, container);\n              container?.remove();\n            }\n          };\n        }\n      }),\n      ...xs\n    ]);\n    await ctx.waitTimers(editorViewTimerCtx);\n    const state = ctx.get(editorStateCtx);\n    const options = ctx.get(editorViewOptionsCtx);\n    const nodeViews = Object.fromEntries(ctx.get(nodeViewCtx));\n    const markViews = Object.fromEntries(ctx.get(markViewCtx));\n    const view = new EditorView(el, {\n      state,\n      nodeViews,\n      markViews,\n      transformPasted: (slice, view2, isPlainText) => {\n        ctx.get(pasteRulesCtx).sort((a, b) => (b.priority ?? 50) - (a.priority ?? 50)).map((rule) => rule.run).forEach((runner) => {\n          slice = runner(slice, view2, isPlainText);\n        });\n        return slice;\n      },\n      ...options\n    });\n    prepareViewDom(view.dom);\n    ctx.set(editorViewCtx, view);\n    ctx.done(EditorViewReady);\n    return () => {\n      view?.destroy();\n      ctx.remove(rootCtx).remove(editorViewCtx).remove(editorViewOptionsCtx).remove(rootDOMCtx).remove(rootAttrsCtx).remove(editorViewTimerCtx).clearTimer(EditorViewReady);\n    };\n  };\n};\nwithMeta(editorView, {\n  displayName: \"EditorView\"\n});\nvar EditorStatus = /* @__PURE__ */ ((EditorStatus2) => {\n  EditorStatus2[\"Idle\"] = \"Idle\";\n  EditorStatus2[\"OnCreate\"] = \"OnCreate\";\n  EditorStatus2[\"Created\"] = \"Created\";\n  EditorStatus2[\"OnDestroy\"] = \"OnDestroy\";\n  EditorStatus2[\"Destroyed\"] = \"Destroyed\";\n  return EditorStatus2;\n})(EditorStatus || {});\nclass Editor {\n  constructor() {\n    this.#enableInspector = false;\n    this.#status = \"Idle\";\n    this.#configureList = [];\n    this.#onStatusChange = () => void 0;\n    this.#container = new Container();\n    this.#clock = new Clock();\n    this.#usrPluginStore = /* @__PURE__ */ new Map();\n    this.#sysPluginStore = /* @__PURE__ */ new Map();\n    this.#ctx = new Ctx(this.#container, this.#clock);\n    this.#loadInternal = () => {\n      const configPlugin = config(async (ctx) => {\n        await Promise.all(\n          this.#configureList.map((fn) => Promise.resolve(fn(ctx)))\n        );\n      });\n      const internalPlugins = [\n        schema,\n        parser,\n        serializer,\n        commands,\n        keymap,\n        pasteRule,\n        editorState,\n        editorView,\n        init(this),\n        configPlugin\n      ];\n      this.#prepare(internalPlugins, this.#sysPluginStore);\n    };\n    this.#prepare = (plugins, store) => {\n      plugins.forEach((plugin) => {\n        const ctx = this.#ctx.produce(\n          this.#enableInspector ? plugin.meta : void 0\n        );\n        const handler = plugin(ctx);\n        store.set(plugin, { ctx, handler, cleanup: void 0 });\n      });\n    };\n    this.#cleanup = (plugins, remove = false) => {\n      return Promise.all(\n        [plugins].flat().map(async (plugin) => {\n          const loader = this.#usrPluginStore.get(plugin);\n          const cleanup = loader?.cleanup;\n          if (remove) this.#usrPluginStore.delete(plugin);\n          else\n            this.#usrPluginStore.set(plugin, {\n              ctx: void 0,\n              handler: void 0,\n              cleanup: void 0\n            });\n          if (typeof cleanup === \"function\") return cleanup();\n          return cleanup;\n        })\n      );\n    };\n    this.#cleanupInternal = async () => {\n      await Promise.all(\n        [...this.#sysPluginStore.entries()].map(async ([_, { cleanup }]) => {\n          if (typeof cleanup === \"function\") return cleanup();\n          return cleanup;\n        })\n      );\n      this.#sysPluginStore.clear();\n    };\n    this.#setStatus = (status) => {\n      this.#status = status;\n      this.#onStatusChange(status);\n    };\n    this.#loadPluginInStore = (store) => {\n      return [...store.entries()].map(async ([key2, loader]) => {\n        const { ctx, handler } = loader;\n        if (!handler) return;\n        const cleanup = await handler();\n        store.set(key2, { ctx, handler, cleanup });\n      });\n    };\n    this.enableInspector = (enable = true) => {\n      this.#enableInspector = enable;\n      return this;\n    };\n    this.onStatusChange = (onChange) => {\n      this.#onStatusChange = onChange;\n      return this;\n    };\n    this.config = (configure) => {\n      this.#configureList.push(configure);\n      return this;\n    };\n    this.removeConfig = (configure) => {\n      this.#configureList = this.#configureList.filter((x) => x !== configure);\n      return this;\n    };\n    this.use = (plugins) => {\n      const _plugins = [plugins].flat();\n      _plugins.flat().forEach((plugin) => {\n        this.#usrPluginStore.set(plugin, {\n          ctx: void 0,\n          handler: void 0,\n          cleanup: void 0\n        });\n      });\n      if (this.#status === \"Created\")\n        this.#prepare(_plugins, this.#usrPluginStore);\n      return this;\n    };\n    this.remove = async (plugins) => {\n      if (this.#status === \"OnCreate\") {\n        console.warn(\n          \"[Milkdown]: You are trying to remove plugins when the editor is creating, this is not recommended, please check your code.\"\n        );\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            resolve(this.remove(plugins));\n          }, 50);\n        });\n      }\n      await this.#cleanup([plugins].flat(), true);\n      return this;\n    };\n    this.create = async () => {\n      if (this.#status === \"OnCreate\") return this;\n      if (this.#status === \"Created\") await this.destroy();\n      this.#setStatus(\n        \"OnCreate\"\n        /* OnCreate */\n      );\n      this.#loadInternal();\n      this.#prepare([...this.#usrPluginStore.keys()], this.#usrPluginStore);\n      await Promise.all(\n        [\n          this.#loadPluginInStore(this.#sysPluginStore),\n          this.#loadPluginInStore(this.#usrPluginStore)\n        ].flat()\n      );\n      this.#setStatus(\n        \"Created\"\n        /* Created */\n      );\n      return this;\n    };\n    this.destroy = async (clearPlugins = false) => {\n      if (this.#status === \"Destroyed\" || this.#status === \"OnDestroy\")\n        return this;\n      if (this.#status === \"OnCreate\") {\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            resolve(this.destroy(clearPlugins));\n          }, 50);\n        });\n      }\n      if (clearPlugins) this.#configureList = [];\n      this.#setStatus(\n        \"OnDestroy\"\n        /* OnDestroy */\n      );\n      await this.#cleanup([...this.#usrPluginStore.keys()], clearPlugins);\n      await this.#cleanupInternal();\n      this.#setStatus(\n        \"Destroyed\"\n        /* Destroyed */\n      );\n      return this;\n    };\n    this.action = (action) => action(this.#ctx);\n    this.inspect = () => {\n      if (!this.#enableInspector) {\n        console.warn(\n          \"[Milkdown]: You are trying to collect inspection when inspector is disabled, please enable inspector by `editor.enableInspector()` first.\"\n        );\n        return [];\n      }\n      return [...this.#sysPluginStore.values(), ...this.#usrPluginStore.values()].map(({ ctx }) => ctx?.inspector?.read()).filter((x) => Boolean(x));\n    };\n  }\n  /// Create a new editor instance.\n  static make() {\n    return new Editor();\n  }\n  #enableInspector;\n  #status;\n  #configureList;\n  #onStatusChange;\n  #container;\n  #clock;\n  #usrPluginStore;\n  #sysPluginStore;\n  #ctx;\n  #loadInternal;\n  #prepare;\n  #cleanup;\n  #cleanupInternal;\n  #setStatus;\n  #loadPluginInStore;\n  /// Get the ctx of the editor.\n  get ctx() {\n    return this.#ctx;\n  }\n  /// Get the status of the editor.\n  get status() {\n    return this.#status;\n  }\n}\nexport {\n  CommandManager,\n  CommandsReady,\n  ConfigReady,\n  Editor,\n  EditorStateReady,\n  EditorStatus,\n  EditorViewReady,\n  InitReady,\n  KeymapManager,\n  KeymapReady,\n  ParserReady,\n  PasteRulesReady,\n  SchemaReady,\n  SerializerReady,\n  commands,\n  commandsCtx,\n  commandsTimerCtx,\n  config,\n  createCmdKey,\n  defaultValueCtx,\n  editorCtx,\n  editorState,\n  editorStateCtx,\n  editorStateOptionsCtx,\n  editorStateTimerCtx,\n  editorView,\n  editorViewCtx,\n  editorViewOptionsCtx,\n  editorViewTimerCtx,\n  getDoc,\n  init,\n  initTimerCtx,\n  inputRulesCtx,\n  keymap,\n  keymapCtx,\n  keymapTimerCtx,\n  markViewCtx,\n  marksCtx,\n  nodeViewCtx,\n  nodesCtx,\n  parser,\n  parserCtx,\n  parserTimerCtx,\n  pasteRule,\n  pasteRulesCtx,\n  pasteRulesTimerCtx,\n  prosePluginsCtx,\n  remarkCtx,\n  remarkPluginsCtx,\n  remarkStringifyOptionsCtx,\n  rootAttrsCtx,\n  rootCtx,\n  rootDOMCtx,\n  schema,\n  schemaCtx,\n  schemaTimerCtx,\n  serializer,\n  serializerCtx,\n  serializerTimerCtx\n};\n//# sourceMappingURL=index.js.map\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { editorViewOptionsCtx } from \"@milkdown/core\";\nimport clsx from \"clsx\";\nfunction nord(ctx) {\n  ctx.update(editorViewOptionsCtx, (prev) => {\n    const prevClass = prev.attributes;\n    return {\n      ...prev,\n      attributes: (state) => {\n        const attrs = typeof prevClass === \"function\" ? prevClass(state) : prevClass;\n        return {\n          ...attrs,\n          class: clsx(\n            \"prose dark:prose-invert\",\n            attrs?.class || \"\",\n            \"milkdown-theme-nord\"\n          )\n        };\n      }\n    };\n  });\n}\nexport {\n  nord\n};\n//# sourceMappingURL=index.js.map\n","import { createCmdKey, commandsTimerCtx, CommandsReady, commandsCtx, editorStateTimerCtx, SchemaReady, inputRulesCtx, pasteRulesTimerCtx, pasteRulesCtx, schemaCtx, schemaTimerCtx, marksCtx, nodesCtx, prosePluginsCtx, KeymapReady, keymapCtx, editorViewTimerCtx, nodeViewCtx, markViewCtx, InitReady, remarkPluginsCtx, editorViewCtx, serializerCtx, parserCtx, editorStateOptionsCtx } from \"@milkdown/core\";\nimport { createTimer, createSlice } from \"@milkdown/ctx\";\nimport { customAlphabet } from \"nanoid\";\nimport { missingMarkInSchema, missingNodeInSchema } from \"@milkdown/exception\";\nimport { NodeType, DOMSerializer, Slice, DOMParser } from \"@milkdown/prose/model\";\nimport { isTextOnlySlice } from \"@milkdown/prose\";\nimport { EditorState } from \"@milkdown/prose/state\";\nconst nanoid = customAlphabet(\"abcedfghicklmn\", 10);\nfunction addTimer(runner, injectTo, timerName) {\n  const timer = createTimer(timerName || nanoid());\n  let doneCalled = false;\n  const plugin = (ctx) => {\n    ctx.record(timer);\n    ctx.update(injectTo, (x) => x.concat(timer));\n    return async () => {\n      const done = () => {\n        ctx.done(timer);\n        doneCalled = true;\n      };\n      const cleanup = await runner(ctx, plugin, done);\n      if (!doneCalled) ctx.done(timer);\n      return () => {\n        ctx.update(injectTo, (x) => x.filter((y) => y !== timer));\n        ctx.clearTimer(timer);\n        if (cleanup) {\n          const result = cleanup();\n          if (result && \"then\" in result) {\n            result.catch(console.error);\n          }\n        }\n      };\n    };\n  };\n  plugin.timer = timer;\n  return plugin;\n}\nfunction $command(key, cmd) {\n  const cmdKey = createCmdKey(key);\n  const plugin = (ctx) => async () => {\n    plugin.key = cmdKey;\n    await ctx.wait(CommandsReady);\n    const command = cmd(ctx);\n    ctx.get(commandsCtx).create(cmdKey, command);\n    plugin.run = (payload) => ctx.get(commandsCtx).call(key, payload);\n    return () => {\n      ctx.get(commandsCtx).remove(cmdKey);\n    };\n  };\n  return plugin;\n}\nfunction $commandAsync(key, cmd, timerName) {\n  const cmdKey = createCmdKey(key);\n  return addTimer(\n    async (ctx, plugin) => {\n      await ctx.wait(CommandsReady);\n      const command = await cmd(ctx);\n      ctx.get(commandsCtx).create(cmdKey, command);\n      plugin.run = (payload) => ctx.get(commandsCtx).call(key, payload);\n      plugin.key = cmdKey;\n      return () => {\n        ctx.get(commandsCtx).remove(cmdKey);\n      };\n    },\n    commandsTimerCtx,\n    timerName\n  );\n}\nfunction $inputRule(inputRule) {\n  const plugin = (ctx) => async () => {\n    await ctx.wait(SchemaReady);\n    const ir = inputRule(ctx);\n    ctx.update(inputRulesCtx, (irs) => [...irs, ir]);\n    plugin.inputRule = ir;\n    return () => {\n      ctx.update(inputRulesCtx, (irs) => irs.filter((x) => x !== ir));\n    };\n  };\n  return plugin;\n}\nfunction $inputRuleAsync(inputRule, timerName) {\n  return addTimer(\n    async (ctx, plugin) => {\n      await ctx.wait(SchemaReady);\n      const ir = await inputRule(ctx);\n      ctx.update(inputRulesCtx, (irs) => [...irs, ir]);\n      plugin.inputRule = ir;\n      return () => {\n        ctx.update(inputRulesCtx, (irs) => irs.filter((x) => x !== ir));\n      };\n    },\n    editorStateTimerCtx,\n    timerName\n  );\n}\nfunction $pasteRule(pasteRule) {\n  const plugin = (ctx) => async () => {\n    await ctx.wait(SchemaReady);\n    const pr = pasteRule(ctx);\n    ctx.update(pasteRulesCtx, (prs) => [...prs, pr]);\n    plugin.pasteRule = pr;\n    return () => {\n      ctx.update(pasteRulesCtx, (prs) => prs.filter((x) => x !== pr));\n    };\n  };\n  return plugin;\n}\nfunction $pasteRuleAsync(pasteRule, timerName) {\n  return addTimer(\n    async (ctx, plugin) => {\n      await ctx.wait(SchemaReady);\n      const pr = await pasteRule(ctx);\n      ctx.update(pasteRulesCtx, (prs) => [...prs, pr]);\n      plugin.pasteRule = pr;\n      return () => {\n        ctx.update(pasteRulesCtx, (prs) => prs.filter((x) => x !== pr));\n      };\n    },\n    pasteRulesTimerCtx,\n    timerName\n  );\n}\nfunction $mark(id, schema) {\n  const plugin = (ctx) => async () => {\n    const markSchema = schema(ctx);\n    ctx.update(marksCtx, (ns) => [\n      ...ns.filter((n) => n[0] !== id),\n      [id, markSchema]\n    ]);\n    plugin.id = id;\n    plugin.schema = markSchema;\n    return () => {\n      ctx.update(marksCtx, (ns) => ns.filter(([x]) => x !== id));\n    };\n  };\n  plugin.type = (ctx) => {\n    const markType = ctx.get(schemaCtx).marks[id];\n    if (!markType) throw missingMarkInSchema(id);\n    return markType;\n  };\n  return plugin;\n}\nfunction $markAsync(id, schema, timerName) {\n  const plugin = addTimer(\n    async (ctx, plugin2, done) => {\n      const markSchema = await schema(ctx);\n      ctx.update(marksCtx, (ns) => [\n        ...ns.filter((n) => n[0] !== id),\n        [id, markSchema]\n      ]);\n      plugin2.id = id;\n      plugin2.schema = markSchema;\n      done();\n      return () => {\n        ctx.update(marksCtx, (ns) => ns.filter(([x]) => x !== id));\n      };\n    },\n    schemaTimerCtx,\n    timerName\n  );\n  plugin.type = (ctx) => {\n    const markType = ctx.get(schemaCtx).marks[id];\n    if (!markType) throw missingMarkInSchema(id);\n    return markType;\n  };\n  return plugin;\n}\nfunction $node(id, schema) {\n  const plugin = (ctx) => async () => {\n    const nodeSchema = schema(ctx);\n    ctx.update(nodesCtx, (ns) => [\n      ...ns.filter((n) => n[0] !== id),\n      [id, nodeSchema]\n    ]);\n    plugin.id = id;\n    plugin.schema = nodeSchema;\n    return () => {\n      ctx.update(nodesCtx, (ns) => ns.filter(([x]) => x !== id));\n    };\n  };\n  plugin.type = (ctx) => {\n    const nodeType = ctx.get(schemaCtx).nodes[id];\n    if (!nodeType) throw missingNodeInSchema(id);\n    return nodeType;\n  };\n  return plugin;\n}\nfunction $nodeAsync(id, schema, timerName) {\n  const plugin = addTimer(\n    async (ctx, plugin2, done) => {\n      const nodeSchema = await schema(ctx);\n      ctx.update(nodesCtx, (ns) => [\n        ...ns.filter((n) => n[0] !== id),\n        [id, nodeSchema]\n      ]);\n      plugin2.id = id;\n      plugin2.schema = nodeSchema;\n      done();\n      return () => {\n        ctx.update(nodesCtx, (ns) => ns.filter(([x]) => x !== id));\n      };\n    },\n    schemaTimerCtx,\n    timerName\n  );\n  plugin.type = (ctx) => {\n    const nodeType = ctx.get(schemaCtx).nodes[id];\n    if (!nodeType) throw missingNodeInSchema(id);\n    return nodeType;\n  };\n  return plugin;\n}\nfunction $prose(prose) {\n  let prosePlugin;\n  const plugin = (ctx) => async () => {\n    await ctx.wait(SchemaReady);\n    prosePlugin = prose(ctx);\n    ctx.update(prosePluginsCtx, (ps) => [...ps, prosePlugin]);\n    return () => {\n      ctx.update(prosePluginsCtx, (ps) => ps.filter((x) => x !== prosePlugin));\n    };\n  };\n  plugin.plugin = () => prosePlugin;\n  plugin.key = () => prosePlugin.spec.key;\n  return plugin;\n}\nfunction $proseAsync(prose, timerName) {\n  let prosePlugin;\n  const plugin = addTimer(\n    async (ctx) => {\n      await ctx.wait(SchemaReady);\n      prosePlugin = await prose(ctx);\n      ctx.update(prosePluginsCtx, (ps) => [...ps, prosePlugin]);\n      return () => {\n        ctx.update(prosePluginsCtx, (ps) => ps.filter((x) => x !== prosePlugin));\n      };\n    },\n    editorStateTimerCtx,\n    timerName\n  );\n  plugin.plugin = () => prosePlugin;\n  plugin.key = () => prosePlugin.spec.key;\n  return plugin;\n}\nfunction $shortcut(shortcut) {\n  const plugin = (ctx) => async () => {\n    await ctx.wait(KeymapReady);\n    const km = ctx.get(keymapCtx);\n    const keymap = shortcut(ctx);\n    const dispose = km.addObjectKeymap(keymap);\n    plugin.keymap = keymap;\n    return () => {\n      dispose();\n    };\n  };\n  return plugin;\n}\nfunction $shortcutAsync(shortcut, timerName) {\n  return addTimer(\n    async (ctx, plugin) => {\n      await ctx.wait(KeymapReady);\n      const km = ctx.get(keymapCtx);\n      const keymap = await shortcut(ctx);\n      const dispose = km.addObjectKeymap(keymap);\n      plugin.keymap = keymap;\n      return () => {\n        dispose();\n      };\n    },\n    editorStateTimerCtx,\n    timerName\n  );\n}\nfunction $view(type, view) {\n  const plugin = (ctx) => async () => {\n    await ctx.wait(SchemaReady);\n    const v = view(ctx);\n    if (type.type(ctx) instanceof NodeType)\n      ctx.update(nodeViewCtx, (ps) => [\n        ...ps,\n        [type.id, v]\n      ]);\n    else\n      ctx.update(markViewCtx, (ps) => [\n        ...ps,\n        [type.id, v]\n      ]);\n    plugin.view = v;\n    plugin.type = type;\n    return () => {\n      if (type.type(ctx) instanceof NodeType)\n        ctx.update(nodeViewCtx, (ps) => ps.filter((x) => x[0] !== type.id));\n      else ctx.update(markViewCtx, (ps) => ps.filter((x) => x[0] !== type.id));\n    };\n  };\n  return plugin;\n}\nfunction $viewAsync(type, view, timerName) {\n  return addTimer(\n    async (ctx, plugin) => {\n      await ctx.wait(SchemaReady);\n      const v = await view(ctx);\n      if (type.type(ctx) instanceof NodeType)\n        ctx.update(nodeViewCtx, (ps) => [\n          ...ps,\n          [type.id, v]\n        ]);\n      else\n        ctx.update(markViewCtx, (ps) => [\n          ...ps,\n          [type.id, v]\n        ]);\n      plugin.view = v;\n      plugin.type = type;\n      return () => {\n        if (type.type(ctx) instanceof NodeType)\n          ctx.update(nodeViewCtx, (ps) => ps.filter((x) => x[0] !== type.id));\n        else ctx.update(markViewCtx, (ps) => ps.filter((x) => x[0] !== type.id));\n      };\n    },\n    editorViewTimerCtx,\n    timerName\n  );\n}\nfunction $ctx(value, name) {\n  const slice = createSlice(value, name);\n  const plugin = (ctx) => {\n    ctx.inject(slice);\n    return () => {\n      return () => {\n        ctx.remove(slice);\n      };\n    };\n  };\n  plugin.key = slice;\n  return plugin;\n}\nfunction $nodeSchema(id, schema) {\n  const schemaCtx2 = $ctx(schema, id);\n  const nodeSchema = $node(id, (ctx) => {\n    const userSchema = ctx.get(schemaCtx2.key);\n    return userSchema(ctx);\n  });\n  const result = [schemaCtx2, nodeSchema];\n  result.id = nodeSchema.id;\n  result.node = nodeSchema;\n  result.type = (ctx) => nodeSchema.type(ctx);\n  result.ctx = schemaCtx2;\n  result.key = schemaCtx2.key;\n  result.extendSchema = (handler) => {\n    const nextSchema = handler(schema);\n    return $nodeSchema(id, nextSchema);\n  };\n  return result;\n}\nfunction $markSchema(id, schema) {\n  const schemaCtx2 = $ctx(schema, id);\n  const markSchema = $mark(id, (ctx) => {\n    const userSchema = ctx.get(schemaCtx2.key);\n    return userSchema(ctx);\n  });\n  const result = [schemaCtx2, markSchema];\n  result.id = markSchema.id;\n  result.mark = markSchema;\n  result.type = (ctx) => markSchema.type(ctx);\n  result.ctx = schemaCtx2;\n  result.key = schemaCtx2.key;\n  result.extendSchema = (handler) => {\n    const nextSchema = handler(schema);\n    return $markSchema(id, nextSchema);\n  };\n  return result;\n}\nfunction $useKeymap(name, userKeymap) {\n  const key = Object.fromEntries(\n    Object.entries(userKeymap).map(\n      ([key2, { shortcuts: shortcuts2, priority }]) => {\n        return [key2, { shortcuts: shortcuts2, priority }];\n      }\n    )\n  );\n  const keymapDef = $ctx(key, `${name}Keymap`);\n  const shortcuts = $shortcut((ctx) => {\n    const keys = ctx.get(keymapDef.key);\n    const keymapTuple = Object.entries(userKeymap).flatMap(\n      ([key2, { command }]) => {\n        const target = keys[key2];\n        const targetKeys = [target.shortcuts].flat();\n        const priority = target.priority;\n        return targetKeys.map(\n          (targetKey) => [\n            targetKey,\n            {\n              key: targetKey,\n              onRun: command,\n              priority\n            }\n          ]\n        );\n      }\n    );\n    return Object.fromEntries(keymapTuple);\n  });\n  const result = [keymapDef, shortcuts];\n  result.ctx = keymapDef;\n  result.shortcuts = shortcuts;\n  result.key = keymapDef.key;\n  result.keymap = shortcuts.keymap;\n  return result;\n}\nconst $nodeAttr = (name, value = () => ({})) => $ctx(value, `${name}Attr`);\nconst $markAttr = (name, value = () => ({})) => $ctx(value, `${name}Attr`);\nfunction $remark(id, remark, initialOptions) {\n  const options = $ctx(initialOptions ?? {}, id);\n  const plugin = (ctx) => async () => {\n    await ctx.wait(InitReady);\n    const re = remark(ctx);\n    const remarkPlugin = {\n      plugin: re,\n      options: ctx.get(options.key)\n    };\n    ctx.update(remarkPluginsCtx, (rp) => [...rp, remarkPlugin]);\n    return () => {\n      ctx.update(remarkPluginsCtx, (rp) => rp.filter((x) => x !== remarkPlugin));\n    };\n  };\n  const result = [options, plugin];\n  result.id = id;\n  result.plugin = plugin;\n  result.options = options;\n  return result;\n}\nfunction callCommand(slice, payload) {\n  return (ctx) => {\n    return ctx.get(commandsCtx).call(slice, payload);\n  };\n}\nfunction forceUpdate() {\n  return (ctx) => {\n    const view = ctx.get(editorViewCtx);\n    const { tr } = view.state;\n    const nextTr = Object.assign(Object.create(tr), tr).setTime(Date.now());\n    return view.dispatch(nextTr);\n  };\n}\nfunction getHTML() {\n  return (ctx) => {\n    const div = document.createElement(\"div\");\n    const schema = ctx.get(schemaCtx);\n    const view = ctx.get(editorViewCtx);\n    const fragment = DOMSerializer.fromSchema(schema).serializeFragment(\n      view.state.doc.content\n    );\n    div.appendChild(fragment);\n    return div.innerHTML;\n  };\n}\nfunction getMarkdown(range) {\n  return (ctx) => {\n    const view = ctx.get(editorViewCtx);\n    const schema = ctx.get(schemaCtx);\n    const serializer = ctx.get(serializerCtx);\n    if (!range) {\n      return serializer(view.state.doc);\n    }\n    const state = view.state;\n    const slice = state.doc.slice(range.from, range.to, true);\n    const doc = schema.topNodeType.createAndFill(null, slice.content);\n    if (!doc) {\n      console.error(\"No document found\");\n      return \"\";\n    }\n    return serializer(doc);\n  };\n}\nfunction insert(markdown, inline = false) {\n  return (ctx) => {\n    const view = ctx.get(editorViewCtx);\n    const parser = ctx.get(parserCtx);\n    const doc = parser(markdown);\n    if (!doc) return;\n    if (!inline) {\n      const contentSlice = view.state.selection.content();\n      return view.dispatch(\n        view.state.tr.replaceSelection(\n          new Slice(doc.content, contentSlice.openStart, contentSlice.openEnd)\n        ).scrollIntoView()\n      );\n    }\n    const schema = ctx.get(schemaCtx);\n    const dom = DOMSerializer.fromSchema(schema).serializeFragment(doc.content);\n    const domParser = DOMParser.fromSchema(schema);\n    const slice = domParser.parseSlice(dom);\n    const node = isTextOnlySlice(slice);\n    if (node) {\n      view.dispatch(view.state.tr.replaceSelectionWith(node, true));\n      return;\n    }\n    view.dispatch(view.state.tr.replaceSelection(slice));\n  };\n}\nfunction outline() {\n  return (ctx) => {\n    const view = ctx.get(editorViewCtx);\n    const data = [];\n    const doc = view.state.doc;\n    doc.descendants((node) => {\n      if (node.type.name === \"heading\" && node.attrs.level)\n        data.push({\n          text: node.textContent,\n          level: node.attrs.level,\n          id: node.attrs.id\n        });\n    });\n    return data;\n  };\n}\nfunction replaceAll(markdown, flush = false) {\n  return (ctx) => {\n    const view = ctx.get(editorViewCtx);\n    const parser = ctx.get(parserCtx);\n    const doc = parser(markdown);\n    if (!doc) return;\n    if (!flush) {\n      const { state: state2 } = view;\n      return view.dispatch(\n        state2.tr.replace(\n          0,\n          state2.doc.content.size,\n          new Slice(doc.content, 0, 0)\n        )\n      );\n    }\n    const schema = ctx.get(schemaCtx);\n    const options = ctx.get(editorStateOptionsCtx);\n    const plugins = ctx.get(prosePluginsCtx);\n    const state = EditorState.create({\n      schema,\n      doc,\n      plugins,\n      ...options\n    });\n    view.updateState(state);\n  };\n}\nfunction setAttr(pos, update) {\n  return (ctx) => {\n    const view = ctx.get(editorViewCtx);\n    const { tr } = view.state;\n    const node = tr.doc.nodeAt(pos);\n    if (!node) return;\n    const nextAttr = update(node.attrs);\n    return view.dispatch(tr.setNodeMarkup(pos, void 0, nextAttr));\n  };\n}\nfunction markdownToSlice(markdown) {\n  return (ctx) => {\n    const parser = ctx.get(parserCtx);\n    const doc = parser(markdown);\n    const schema = ctx.get(schemaCtx);\n    const dom = DOMSerializer.fromSchema(schema).serializeFragment(doc.content);\n    const domParser = DOMParser.fromSchema(schema);\n    const slice = domParser.parseSlice(dom);\n    return slice;\n  };\n}\nfunction insertPos(markdown, pos, inline = false) {\n  return (ctx) => {\n    const slice = markdownToSlice(markdown)(ctx);\n    const view = ctx.get(editorViewCtx);\n    const toPos = view.state.doc.resolve(pos);\n    const min = 0;\n    const max = view.state.doc.content.size;\n    const resolved = inline ? toPos.pos : toPos.after(toPos.depth - 1);\n    const to = Math.min(Math.max(resolved, min), max);\n    view.dispatch(view.state.tr.replace(resolved, to, slice));\n  };\n}\nfunction replaceRange(markdown, range) {\n  return (ctx) => {\n    const view = ctx.get(editorViewCtx);\n    const slice = markdownToSlice(markdown)(ctx);\n    view.dispatch(view.state.tr.replace(range.from, range.to, slice));\n  };\n}\nconst pipe = (...funcs) => {\n  const length = funcs.length;\n  let index = length;\n  while (index--) {\n    if (typeof funcs[index] !== \"function\")\n      throw new TypeError(\"Expected a function\");\n  }\n  return (...args) => {\n    let index2 = 0;\n    let result = length ? funcs[index2](...args) : args[0];\n    while (++index2 < length) result = funcs[index2](result);\n    return result;\n  };\n};\nexport {\n  $command,\n  $commandAsync,\n  $ctx,\n  $inputRule,\n  $inputRuleAsync,\n  $mark,\n  $markAsync,\n  $markAttr,\n  $markSchema,\n  $node,\n  $nodeAsync,\n  $nodeAttr,\n  $nodeSchema,\n  $pasteRule,\n  $pasteRuleAsync,\n  $prose,\n  $proseAsync,\n  $remark,\n  $shortcut,\n  $shortcutAsync,\n  $useKeymap,\n  $view,\n  $viewAsync,\n  addTimer,\n  callCommand,\n  forceUpdate,\n  getHTML,\n  getMarkdown,\n  insert,\n  insertPos,\n  markdownToSlice,\n  nanoid,\n  outline,\n  pipe,\n  replaceAll,\n  replaceRange,\n  setAttr\n};\n//# sourceMappingURL=index.js.map\n","import { findWrapping, ReplaceAroundStep, canSplit, liftTarget, canJoin } from 'prosemirror-transform';\nimport { NodeRange, Fragment, Slice } from 'prosemirror-model';\nimport { Selection } from 'prosemirror-state';\n\nconst olDOM = [\"ol\", 0], ulDOM = [\"ul\", 0], liDOM = [\"li\", 0];\n/**\nAn ordered list [node spec](https://prosemirror.net/docs/ref/#model.NodeSpec). Has a single\nattribute, `order`, which determines the number at which the list\nstarts counting, and defaults to 1. Represented as an `<ol>`\nelement.\n*/\nconst orderedList = {\n    attrs: { order: { default: 1, validate: \"number\" } },\n    parseDOM: [{ tag: \"ol\", getAttrs(dom) {\n                return { order: dom.hasAttribute(\"start\") ? +dom.getAttribute(\"start\") : 1 };\n            } }],\n    toDOM(node) {\n        return node.attrs.order == 1 ? olDOM : [\"ol\", { start: node.attrs.order }, 0];\n    }\n};\n/**\nA bullet list node spec, represented in the DOM as `<ul>`.\n*/\nconst bulletList = {\n    parseDOM: [{ tag: \"ul\" }],\n    toDOM() { return ulDOM; }\n};\n/**\nA list item (`<li>`) spec.\n*/\nconst listItem = {\n    parseDOM: [{ tag: \"li\" }],\n    toDOM() { return liDOM; },\n    defining: true\n};\nfunction add(obj, props) {\n    let copy = {};\n    for (let prop in obj)\n        copy[prop] = obj[prop];\n    for (let prop in props)\n        copy[prop] = props[prop];\n    return copy;\n}\n/**\nConvenience function for adding list-related node types to a map\nspecifying the nodes for a schema. Adds\n[`orderedList`](https://prosemirror.net/docs/ref/#schema-list.orderedList) as `\"ordered_list\"`,\n[`bulletList`](https://prosemirror.net/docs/ref/#schema-list.bulletList) as `\"bullet_list\"`, and\n[`listItem`](https://prosemirror.net/docs/ref/#schema-list.listItem) as `\"list_item\"`.\n\n`itemContent` determines the content expression for the list items.\nIf you want the commands defined in this module to apply to your\nlist structure, it should have a shape like `\"paragraph block*\"` or\n`\"paragraph (ordered_list | bullet_list)*\"`. `listGroup` can be\ngiven to assign a group name to the list node types, for example\n`\"block\"`.\n*/\nfunction addListNodes(nodes, itemContent, listGroup) {\n    return nodes.append({\n        ordered_list: add(orderedList, { content: \"list_item+\", group: listGroup }),\n        bullet_list: add(bulletList, { content: \"list_item+\", group: listGroup }),\n        list_item: add(listItem, { content: itemContent })\n    });\n}\n/**\nReturns a command function that wraps the selection in a list with\nthe given type an attributes. If `dispatch` is null, only return a\nvalue to indicate whether this is possible, but don't actually\nperform the change.\n*/\nfunction wrapInList(listType, attrs = null) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to);\n        if (!range)\n            return false;\n        let tr = dispatch ? state.tr : null;\n        if (!wrapRangeInList(tr, range, listType, attrs))\n            return false;\n        if (dispatch)\n            dispatch(tr.scrollIntoView());\n        return true;\n    };\n}\n/**\nTry to wrap the given node range in a list of the given type.\nReturn `true` when this is possible, `false` otherwise. When `tr`\nis non-null, the wrapping is added to that transaction. When it is\n`null`, the function only queries whether the wrapping is\npossible.\n*/\nfunction wrapRangeInList(tr, range, listType, attrs = null) {\n    let doJoin = false, outerRange = range, doc = range.$from.doc;\n    // This is at the top of an existing list item\n    if (range.depth >= 2 && range.$from.node(range.depth - 1).type.compatibleContent(listType) && range.startIndex == 0) {\n        // Don't do anything if this is the top of the list\n        if (range.$from.index(range.depth - 1) == 0)\n            return false;\n        let $insert = doc.resolve(range.start - 2);\n        outerRange = new NodeRange($insert, $insert, range.depth);\n        if (range.endIndex < range.parent.childCount)\n            range = new NodeRange(range.$from, doc.resolve(range.$to.end(range.depth)), range.depth);\n        doJoin = true;\n    }\n    let wrap = findWrapping(outerRange, listType, attrs, range);\n    if (!wrap)\n        return false;\n    if (tr)\n        doWrapInList(tr, range, wrap, doJoin, listType);\n    return true;\n}\nfunction doWrapInList(tr, range, wrappers, joinBefore, listType) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--)\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    tr.step(new ReplaceAroundStep(range.start - (joinBefore ? 2 : 0), range.end, range.start, range.end, new Slice(content, 0, 0), wrappers.length, true));\n    let found = 0;\n    for (let i = 0; i < wrappers.length; i++)\n        if (wrappers[i].type == listType)\n            found = i + 1;\n    let splitDepth = wrappers.length - found;\n    let splitPos = range.start + wrappers.length - (joinBefore ? 2 : 0), parent = range.parent;\n    for (let i = range.startIndex, e = range.endIndex, first = true; i < e; i++, first = false) {\n        if (!first && canSplit(tr.doc, splitPos, splitDepth)) {\n            tr.split(splitPos, splitDepth);\n            splitPos += 2 * splitDepth;\n        }\n        splitPos += parent.child(i).nodeSize;\n    }\n    return tr;\n}\n/**\nBuild a command that splits a non-empty textblock at the top level\nof a list item by also splitting that list item.\n*/\nfunction splitListItem(itemType, itemAttrs) {\n    return function (state, dispatch) {\n        let { $from, $to, node } = state.selection;\n        if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to))\n            return false;\n        let grandParent = $from.node(-1);\n        if (grandParent.type != itemType)\n            return false;\n        if ($from.parent.content.size == 0 && $from.node(-1).childCount == $from.indexAfter(-1)) {\n            // In an empty block. If this is a nested list, the wrapping\n            // list item should be split. Otherwise, bail out and let next\n            // command handle lifting.\n            if ($from.depth == 3 || $from.node(-3).type != itemType ||\n                $from.index(-2) != $from.node(-2).childCount - 1)\n                return false;\n            if (dispatch) {\n                let wrap = Fragment.empty;\n                let depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3;\n                // Build a fragment containing empty versions of the structure\n                // from the outer list item to the parent node of the cursor\n                for (let d = $from.depth - depthBefore; d >= $from.depth - 3; d--)\n                    wrap = Fragment.from($from.node(d).copy(wrap));\n                let depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1\n                    : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3;\n                // Add a second list item with an empty default start node\n                wrap = wrap.append(Fragment.from(itemType.createAndFill()));\n                let start = $from.before($from.depth - (depthBefore - 1));\n                let tr = state.tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0));\n                let sel = -1;\n                tr.doc.nodesBetween(start, tr.doc.content.size, (node, pos) => {\n                    if (sel > -1)\n                        return false;\n                    if (node.isTextblock && node.content.size == 0)\n                        sel = pos + 1;\n                });\n                if (sel > -1)\n                    tr.setSelection(Selection.near(tr.doc.resolve(sel)));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n        let nextType = $to.pos == $from.end() ? grandParent.contentMatchAt(0).defaultType : null;\n        let tr = state.tr.delete($from.pos, $to.pos);\n        let types = nextType ? [itemAttrs ? { type: itemType, attrs: itemAttrs } : null, { type: nextType }] : undefined;\n        if (!canSplit(tr.doc, $from.pos, 2, types))\n            return false;\n        if (dispatch)\n            dispatch(tr.split($from.pos, 2, types).scrollIntoView());\n        return true;\n    };\n}\n/**\nActs like [`splitListItem`](https://prosemirror.net/docs/ref/#schema-list.splitListItem), but\nwithout resetting the set of active marks at the cursor.\n*/\nfunction splitListItemKeepMarks(itemType, itemAttrs) {\n    let split = splitListItem(itemType, itemAttrs);\n    return (state, dispatch) => {\n        return split(state, dispatch && (tr => {\n            let marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\n            if (marks)\n                tr.ensureMarks(marks);\n            dispatch(tr);\n        }));\n    };\n}\n/**\nCreate a command to lift the list item around the selection up into\na wrapping list.\n*/\nfunction liftListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to, node => node.childCount > 0 && node.firstChild.type == itemType);\n        if (!range)\n            return false;\n        if (!dispatch)\n            return true;\n        if ($from.node(range.depth - 1).type == itemType) // Inside a parent list\n            return liftToOuterList(state, dispatch, itemType, range);\n        else // Outer list node\n            return liftOutOfList(state, dispatch, range);\n    };\n}\nfunction liftToOuterList(state, dispatch, itemType, range) {\n    let tr = state.tr, end = range.end, endOfList = range.$to.end(range.depth);\n    if (end < endOfList) {\n        // There are siblings after the lifted items, which must become\n        // children of the last item\n        tr.step(new ReplaceAroundStep(end - 1, endOfList, end, endOfList, new Slice(Fragment.from(itemType.create(null, range.parent.copy())), 1, 0), 1, true));\n        range = new NodeRange(tr.doc.resolve(range.$from.pos), tr.doc.resolve(endOfList), range.depth);\n    }\n    const target = liftTarget(range);\n    if (target == null)\n        return false;\n    tr.lift(range, target);\n    let $after = tr.doc.resolve(tr.mapping.map(end, -1) - 1);\n    if (canJoin(tr.doc, $after.pos) && $after.nodeBefore.type == $after.nodeAfter.type)\n        tr.join($after.pos);\n    dispatch(tr.scrollIntoView());\n    return true;\n}\nfunction liftOutOfList(state, dispatch, range) {\n    let tr = state.tr, list = range.parent;\n    // Merge the list items into a single big item\n    for (let pos = range.end, i = range.endIndex - 1, e = range.startIndex; i > e; i--) {\n        pos -= list.child(i).nodeSize;\n        tr.delete(pos - 1, pos + 1);\n    }\n    let $start = tr.doc.resolve(range.start), item = $start.nodeAfter;\n    if (tr.mapping.map(range.end) != range.start + $start.nodeAfter.nodeSize)\n        return false;\n    let atStart = range.startIndex == 0, atEnd = range.endIndex == list.childCount;\n    let parent = $start.node(-1), indexBefore = $start.index(-1);\n    if (!parent.canReplace(indexBefore + (atStart ? 0 : 1), indexBefore + 1, item.content.append(atEnd ? Fragment.empty : Fragment.from(list))))\n        return false;\n    let start = $start.pos, end = start + item.nodeSize;\n    // Strip off the surrounding list. At the sides where we're not at\n    // the end of the list, the existing list is closed. At sides where\n    // this is the end, it is overwritten to its end.\n    tr.step(new ReplaceAroundStep(start - (atStart ? 1 : 0), end + (atEnd ? 1 : 0), start + 1, end - 1, new Slice((atStart ? Fragment.empty : Fragment.from(list.copy(Fragment.empty)))\n        .append(atEnd ? Fragment.empty : Fragment.from(list.copy(Fragment.empty))), atStart ? 0 : 1, atEnd ? 0 : 1), atStart ? 0 : 1));\n    dispatch(tr.scrollIntoView());\n    return true;\n}\n/**\nCreate a command to sink the list item around the selection down\ninto an inner list.\n*/\nfunction sinkListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to, node => node.childCount > 0 && node.firstChild.type == itemType);\n        if (!range)\n            return false;\n        let startIndex = range.startIndex;\n        if (startIndex == 0)\n            return false;\n        let parent = range.parent, nodeBefore = parent.child(startIndex - 1);\n        if (nodeBefore.type != itemType)\n            return false;\n        if (dispatch) {\n            let nestedBefore = nodeBefore.lastChild && nodeBefore.lastChild.type == parent.type;\n            let inner = Fragment.from(nestedBefore ? itemType.create() : null);\n            let slice = new Slice(Fragment.from(itemType.create(null, Fragment.from(parent.type.create(null, inner)))), nestedBefore ? 3 : 1, 0);\n            let before = range.start, after = range.end;\n            dispatch(state.tr.step(new ReplaceAroundStep(before - (nestedBefore ? 3 : 1), after, before, after, slice, 1, true))\n                .scrollIntoView());\n        }\n        return true;\n    };\n}\n\nexport { addListNodes, bulletList, liftListItem, listItem, orderedList, sinkListItem, splitListItem, splitListItemKeepMarks, wrapInList, wrapRangeInList };\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Nodes} Nodes\n */\n\n/**\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition (optional).\n * @returns {Definition | undefined}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Nodes} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Map<string, Definition>} */\n  const cache = new Map()\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', function (definition) {\n    const id = clean(definition.identifier)\n    if (id && !cache.get(id)) {\n      cache.set(id, definition)\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return cache.get(id)\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root} Root\n */\n\nimport {definitions} from 'mdast-util-definitions'\nimport {SKIP, visit} from 'unist-util-visit'\n\n/**\n * Turn references and definitions into normal links and images.\n *\n * @returns\n *   Transform.\n */\nexport default function remarkInlineLinks() {\n  /**\n   * Transform.\n   *\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    const definition = definitions(tree)\n\n    visit(tree, function (node, index, parent) {\n      if (\n        node.type === 'definition' &&\n        parent !== undefined &&\n        typeof index === 'number'\n      ) {\n        parent.children.splice(index, 1)\n        return [SKIP, index]\n      }\n\n      if (node.type === 'imageReference' || node.type === 'linkReference') {\n        const def = definition(node.identifier)\n\n        if (def && parent && typeof index === 'number') {\n          parent.children[index] =\n            node.type === 'imageReference'\n              ? {type: 'image', url: def.url, title: def.title, alt: node.alt}\n              : {\n                  type: 'link',\n                  url: def.url,\n                  title: def.title,\n                  children: node.children\n                }\n          return [SKIP, index]\n        }\n      }\n    })\n  }\n}\n","import { markRule, findSelectedNodeOfType, findNodeInSelection } from \"@milkdown/prose\";\nimport { Fragment, Node } from \"@milkdown/prose/model\";\nimport { TextSelection, Selection, PluginKey, Plugin } from \"@milkdown/prose/state\";\nimport { findWrapping, ReplaceStep, AddMarkStep } from \"@milkdown/prose/transform\";\nimport { $markAttr, $markSchema, $inputRule, $command, $useKeymap, $node, $remark, $nodeAttr, $nodeSchema, $ctx, $prose } from \"@milkdown/utils\";\nimport { remarkStringifyOptionsCtx, commandsCtx, editorViewCtx } from \"@milkdown/core\";\nimport { toggleMark, setBlockType, wrapIn, joinBackward } from \"@milkdown/prose/commands\";\nimport { visitParents } from \"unist-util-visit-parents\";\nimport { expectDomTypeError } from \"@milkdown/exception\";\nimport { textblockTypeInputRule, wrappingInputRule, InputRule } from \"@milkdown/prose/inputrules\";\nimport { sinkListItem, splitListItem, liftListItem } from \"@milkdown/prose/schema-list\";\nimport { Decoration, DecorationSet } from \"@milkdown/prose/view\";\nimport { visit } from \"unist-util-visit\";\nimport remarkInlineLinks from \"remark-inline-links\";\nfunction serializeText(state, node) {\n  const lastIsHardBreak = node.childCount >= 1 && node.lastChild?.type.name === \"hardbreak\";\n  if (!lastIsHardBreak) {\n    state.next(node.content);\n    return;\n  }\n  const contentArr = [];\n  node.content.forEach((n, _, i) => {\n    if (i === node.childCount - 1) return;\n    contentArr.push(n);\n  });\n  state.next(Fragment.fromArray(contentArr));\n}\nfunction withMeta(plugin, meta) {\n  Object.assign(plugin, {\n    meta: {\n      package: \"@milkdown/preset-commonmark\",\n      ...meta\n    }\n  });\n  return plugin;\n}\nconst emphasisAttr = $markAttr(\"emphasis\");\nwithMeta(emphasisAttr, {\n  displayName: \"Attr<emphasis>\",\n  group: \"Emphasis\"\n});\nconst emphasisSchema = $markSchema(\"emphasis\", (ctx) => ({\n  attrs: {\n    marker: {\n      default: ctx.get(remarkStringifyOptionsCtx).emphasis || \"*\",\n      validate: \"string\"\n    }\n  },\n  parseDOM: [\n    { tag: \"i\" },\n    { tag: \"em\" },\n    { style: \"font-style\", getAttrs: (value) => value === \"italic\" }\n  ],\n  toDOM: (mark) => [\"em\", ctx.get(emphasisAttr.key)(mark)],\n  parseMarkdown: {\n    match: (node) => node.type === \"emphasis\",\n    runner: (state, node, markType) => {\n      state.openMark(markType, { marker: node.marker });\n      state.next(node.children);\n      state.closeMark(markType);\n    }\n  },\n  toMarkdown: {\n    match: (mark) => mark.type.name === \"emphasis\",\n    runner: (state, mark) => {\n      state.withMark(mark, \"emphasis\", void 0, {\n        marker: mark.attrs.marker\n      });\n    }\n  }\n}));\nwithMeta(emphasisSchema.mark, {\n  displayName: \"MarkSchema<emphasis>\",\n  group: \"Emphasis\"\n});\nwithMeta(emphasisSchema.ctx, {\n  displayName: \"MarkSchemaCtx<emphasis>\",\n  group: \"Emphasis\"\n});\nconst toggleEmphasisCommand = $command(\"ToggleEmphasis\", (ctx) => () => {\n  return toggleMark(emphasisSchema.type(ctx));\n});\nwithMeta(toggleEmphasisCommand, {\n  displayName: \"Command<toggleEmphasisCommand>\",\n  group: \"Emphasis\"\n});\nconst emphasisStarInputRule = $inputRule((ctx) => {\n  return markRule(/(?:^|[^*])\\*([^*]+)\\*$/, emphasisSchema.type(ctx), {\n    getAttr: () => ({\n      marker: \"*\"\n    }),\n    updateCaptured: ({ fullMatch, start }) => !fullMatch.startsWith(\"*\") ? { fullMatch: fullMatch.slice(1), start: start + 1 } : {}\n  });\n});\nwithMeta(emphasisStarInputRule, {\n  displayName: \"InputRule<emphasis>|Star\",\n  group: \"Emphasis\"\n});\nconst emphasisUnderscoreInputRule = $inputRule((ctx) => {\n  return markRule(/\\b_(?![_\\s])(.*?[^_\\s])_\\b/, emphasisSchema.type(ctx), {\n    getAttr: () => ({\n      marker: \"_\"\n    }),\n    updateCaptured: ({ fullMatch, start }) => !fullMatch.startsWith(\"_\") ? { fullMatch: fullMatch.slice(1), start: start + 1 } : {}\n  });\n});\nwithMeta(emphasisUnderscoreInputRule, {\n  displayName: \"InputRule<emphasis>|Underscore\",\n  group: \"Emphasis\"\n});\nconst emphasisKeymap = $useKeymap(\"emphasisKeymap\", {\n  ToggleEmphasis: {\n    shortcuts: \"Mod-i\",\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(toggleEmphasisCommand.key);\n    }\n  }\n});\nwithMeta(emphasisKeymap.ctx, {\n  displayName: \"KeymapCtx<emphasis>\",\n  group: \"Emphasis\"\n});\nwithMeta(emphasisKeymap.shortcuts, {\n  displayName: \"Keymap<emphasis>\",\n  group: \"Emphasis\"\n});\nconst strongAttr = $markAttr(\"strong\");\nwithMeta(strongAttr, {\n  displayName: \"Attr<strong>\",\n  group: \"Strong\"\n});\nconst strongSchema = $markSchema(\"strong\", (ctx) => ({\n  attrs: {\n    marker: {\n      default: ctx.get(remarkStringifyOptionsCtx).strong || \"*\",\n      validate: \"string\"\n    }\n  },\n  parseDOM: [\n    // This works around a Google Docs misbehavior where\n    // pasted content will be inexplicably wrapped in `<b>`\n    // tags with a font-weight normal.\n    {\n      tag: \"b\",\n      getAttrs: (node) => node.style.fontWeight != \"normal\" && null\n    },\n    { tag: \"strong\" },\n    { style: \"font-style\", getAttrs: (value) => value === \"bold\" },\n    { style: \"font-weight=400\", clearMark: (m) => m.type.name == \"strong\" },\n    {\n      style: \"font-weight\",\n      getAttrs: (value) => /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null\n    }\n  ],\n  toDOM: (mark) => [\"strong\", ctx.get(strongAttr.key)(mark)],\n  parseMarkdown: {\n    match: (node) => node.type === \"strong\",\n    runner: (state, node, markType) => {\n      state.openMark(markType, { marker: node.marker });\n      state.next(node.children);\n      state.closeMark(markType);\n    }\n  },\n  toMarkdown: {\n    match: (mark) => mark.type.name === \"strong\",\n    runner: (state, mark) => {\n      state.withMark(mark, \"strong\", void 0, {\n        marker: mark.attrs.marker\n      });\n    }\n  }\n}));\nwithMeta(strongSchema.mark, {\n  displayName: \"MarkSchema<strong>\",\n  group: \"Strong\"\n});\nwithMeta(strongSchema.ctx, {\n  displayName: \"MarkSchemaCtx<strong>\",\n  group: \"Strong\"\n});\nconst toggleStrongCommand = $command(\"ToggleStrong\", (ctx) => () => {\n  return toggleMark(strongSchema.type(ctx));\n});\nwithMeta(toggleStrongCommand, {\n  displayName: \"Command<toggleStrongCommand>\",\n  group: \"Strong\"\n});\nconst strongInputRule = $inputRule((ctx) => {\n  return markRule(\n    new RegExp(\"(?<![\\\\w:/])(?:\\\\*\\\\*|__)([^*_]+?)(?:\\\\*\\\\*|__)(?![\\\\w/])$\"),\n    strongSchema.type(ctx),\n    {\n      getAttr: (match) => {\n        return {\n          marker: match[0].startsWith(\"*\") ? \"*\" : \"_\"\n        };\n      }\n    }\n  );\n});\nwithMeta(strongInputRule, {\n  displayName: \"InputRule<strong>\",\n  group: \"Strong\"\n});\nconst strongKeymap = $useKeymap(\"strongKeymap\", {\n  ToggleBold: {\n    shortcuts: [\"Mod-b\"],\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(toggleStrongCommand.key);\n    }\n  }\n});\nwithMeta(strongKeymap.ctx, {\n  displayName: \"KeymapCtx<strong>\",\n  group: \"Strong\"\n});\nwithMeta(strongKeymap.shortcuts, {\n  displayName: \"Keymap<strong>\",\n  group: \"Strong\"\n});\nconst inlineCodeAttr = $markAttr(\"inlineCode\");\nwithMeta(inlineCodeAttr, {\n  displayName: \"Attr<inlineCode>\",\n  group: \"InlineCode\"\n});\nconst inlineCodeSchema = $markSchema(\"inlineCode\", (ctx) => ({\n  priority: 100,\n  code: true,\n  parseDOM: [{ tag: \"code\" }],\n  toDOM: (mark) => [\"code\", ctx.get(inlineCodeAttr.key)(mark)],\n  parseMarkdown: {\n    match: (node) => node.type === \"inlineCode\",\n    runner: (state, node, markType) => {\n      state.openMark(markType);\n      state.addText(node.value);\n      state.closeMark(markType);\n    }\n  },\n  toMarkdown: {\n    match: (mark) => mark.type.name === \"inlineCode\",\n    runner: (state, mark, node) => {\n      state.withMark(mark, \"inlineCode\", node.text || \"\");\n    }\n  }\n}));\nwithMeta(inlineCodeSchema.mark, {\n  displayName: \"MarkSchema<inlineCode>\",\n  group: \"InlineCode\"\n});\nwithMeta(inlineCodeSchema.ctx, {\n  displayName: \"MarkSchemaCtx<inlineCode>\",\n  group: \"InlineCode\"\n});\nconst toggleInlineCodeCommand = $command(\n  \"ToggleInlineCode\",\n  (ctx) => () => (state, dispatch) => {\n    const { selection, tr } = state;\n    if (selection.empty) return false;\n    const { from, to } = selection;\n    const has = state.doc.rangeHasMark(from, to, inlineCodeSchema.type(ctx));\n    if (has) {\n      dispatch?.(tr.removeMark(from, to, inlineCodeSchema.type(ctx)));\n      return true;\n    }\n    const restMarksName = Object.keys(state.schema.marks).filter(\n      (x) => x !== inlineCodeSchema.type.name\n    );\n    restMarksName.map((name) => state.schema.marks[name]).forEach((t) => {\n      tr.removeMark(from, to, t);\n    });\n    dispatch?.(tr.addMark(from, to, inlineCodeSchema.type(ctx).create()));\n    return true;\n  }\n);\nwithMeta(toggleInlineCodeCommand, {\n  displayName: \"Command<toggleInlineCodeCommand>\",\n  group: \"InlineCode\"\n});\nconst inlineCodeInputRule = $inputRule((ctx) => {\n  return markRule(/(?:`)([^`]+)(?:`)$/, inlineCodeSchema.type(ctx));\n});\nwithMeta(inlineCodeInputRule, {\n  displayName: \"InputRule<inlineCodeInputRule>\",\n  group: \"InlineCode\"\n});\nconst inlineCodeKeymap = $useKeymap(\"inlineCodeKeymap\", {\n  ToggleInlineCode: {\n    shortcuts: \"Mod-e\",\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(toggleInlineCodeCommand.key);\n    }\n  }\n});\nwithMeta(inlineCodeKeymap.ctx, {\n  displayName: \"KeymapCtx<inlineCode>\",\n  group: \"InlineCode\"\n});\nwithMeta(inlineCodeKeymap.shortcuts, {\n  displayName: \"Keymap<inlineCode>\",\n  group: \"InlineCode\"\n});\nconst linkAttr = $markAttr(\"link\");\nwithMeta(linkAttr, {\n  displayName: \"Attr<link>\",\n  group: \"Link\"\n});\nconst linkSchema = $markSchema(\"link\", (ctx) => ({\n  attrs: {\n    href: { validate: \"string\" },\n    title: { default: null, validate: \"string|null\" }\n  },\n  parseDOM: [\n    {\n      tag: \"a[href]\",\n      getAttrs: (dom) => {\n        if (!(dom instanceof HTMLElement)) throw expectDomTypeError(dom);\n        return {\n          href: dom.getAttribute(\"href\"),\n          title: dom.getAttribute(\"title\")\n        };\n      }\n    }\n  ],\n  toDOM: (mark) => [\"a\", { ...ctx.get(linkAttr.key)(mark), ...mark.attrs }],\n  parseMarkdown: {\n    match: (node) => node.type === \"link\",\n    runner: (state, node, markType) => {\n      const url = node.url;\n      const title = node.title;\n      state.openMark(markType, { href: url, title });\n      state.next(node.children);\n      state.closeMark(markType);\n    }\n  },\n  toMarkdown: {\n    match: (mark) => mark.type.name === \"link\",\n    runner: (state, mark) => {\n      state.withMark(mark, \"link\", void 0, {\n        title: mark.attrs.title,\n        url: mark.attrs.href\n      });\n    }\n  }\n}));\nwithMeta(linkSchema.mark, {\n  displayName: \"MarkSchema<link>\",\n  group: \"Link\"\n});\nconst toggleLinkCommand = $command(\n  \"ToggleLink\",\n  (ctx) => (payload = {}) => toggleMark(linkSchema.type(ctx), payload)\n);\nwithMeta(toggleLinkCommand, {\n  displayName: \"Command<toggleLinkCommand>\",\n  group: \"Link\"\n});\nconst updateLinkCommand = $command(\n  \"UpdateLink\",\n  (ctx) => (payload = {}) => (state, dispatch) => {\n    if (!dispatch) return false;\n    let node;\n    let pos = -1;\n    const { selection } = state;\n    const { from, to } = selection;\n    state.doc.nodesBetween(from, from === to ? to + 1 : to, (n, p) => {\n      if (linkSchema.type(ctx).isInSet(n.marks)) {\n        node = n;\n        pos = p;\n        return false;\n      }\n      return void 0;\n    });\n    if (!node) return false;\n    const mark = node.marks.find(({ type }) => type === linkSchema.type(ctx));\n    if (!mark) return false;\n    const start = pos;\n    const end = pos + node.nodeSize;\n    const { tr } = state;\n    const linkMark = linkSchema.type(ctx).create({ ...mark.attrs, ...payload });\n    if (!linkMark) return false;\n    dispatch(\n      tr.removeMark(start, end, mark).addMark(start, end, linkMark).setSelection(new TextSelection(tr.selection.$anchor)).scrollIntoView()\n    );\n    return true;\n  }\n);\nwithMeta(updateLinkCommand, {\n  displayName: \"Command<updateLinkCommand>\",\n  group: \"Link\"\n});\nconst docSchema = $node(\"doc\", () => ({\n  content: \"block+\",\n  parseMarkdown: {\n    match: ({ type }) => type === \"root\",\n    runner: (state, node, type) => {\n      state.injectRoot(node, type);\n    }\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === \"doc\",\n    runner: (state, node) => {\n      state.openNode(\"root\");\n      state.next(node.content);\n    }\n  }\n}));\nwithMeta(docSchema, {\n  displayName: \"NodeSchema<doc>\",\n  group: \"Doc\"\n});\nfunction visitEmptyLine(ast) {\n  return visitParents(\n    ast,\n    (node) => node.type === \"html\" && [\"<br />\", \"<br>\", \"<br >\", \"<br/>\"].includes(\n      node.value?.trim()\n    ),\n    (node, parents) => {\n      if (!parents.length) return;\n      const parent = parents[parents.length - 1];\n      if (!parent) return;\n      const index = parent.children.indexOf(node);\n      if (index === -1) return;\n      parent.children.splice(index, 1);\n    },\n    true\n  );\n}\nconst remarkPreserveEmptyLinePlugin = $remark(\n  \"remark-preserve-empty-line\",\n  () => () => visitEmptyLine\n);\nwithMeta(remarkPreserveEmptyLinePlugin.plugin, {\n  displayName: \"Remark<remarkPreserveEmptyLine>\",\n  group: \"Remark\"\n});\nwithMeta(remarkPreserveEmptyLinePlugin.options, {\n  displayName: \"RemarkConfig<remarkPreserveEmptyLine>\",\n  group: \"Remark\"\n});\nconst paragraphAttr = $nodeAttr(\"paragraph\");\nwithMeta(paragraphAttr, {\n  displayName: \"Attr<paragraph>\",\n  group: \"Paragraph\"\n});\nconst paragraphSchema = $nodeSchema(\"paragraph\", (ctx) => ({\n  content: \"inline*\",\n  group: \"block\",\n  parseDOM: [{ tag: \"p\" }],\n  toDOM: (node) => [\"p\", ctx.get(paragraphAttr.key)(node), 0],\n  parseMarkdown: {\n    match: (node) => node.type === \"paragraph\",\n    runner: (state, node, type) => {\n      state.openNode(type);\n      if (node.children) state.next(node.children);\n      else state.addText(node.value || \"\");\n      state.closeNode();\n    }\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === \"paragraph\",\n    runner: (state, node) => {\n      const view = ctx.get(editorViewCtx);\n      const lastNode = view.state?.doc.lastChild;\n      state.openNode(\"paragraph\");\n      if ((!node.content || node.content.size === 0) && node !== lastNode && shouldPreserveEmptyLine(ctx)) {\n        state.addNode(\"html\", void 0, \"<br />\");\n      } else {\n        serializeText(state, node);\n      }\n      state.closeNode();\n    }\n  }\n}));\nfunction shouldPreserveEmptyLine(ctx) {\n  let shouldPreserveEmptyLine2 = false;\n  try {\n    ctx.get(remarkPreserveEmptyLinePlugin.id);\n    shouldPreserveEmptyLine2 = true;\n  } catch {\n    shouldPreserveEmptyLine2 = false;\n  }\n  return shouldPreserveEmptyLine2;\n}\nwithMeta(paragraphSchema.node, {\n  displayName: \"NodeSchema<paragraph>\",\n  group: \"Paragraph\"\n});\nwithMeta(paragraphSchema.ctx, {\n  displayName: \"NodeSchemaCtx<paragraph>\",\n  group: \"Paragraph\"\n});\nconst turnIntoTextCommand = $command(\n  \"TurnIntoText\",\n  (ctx) => () => setBlockType(paragraphSchema.type(ctx))\n);\nwithMeta(turnIntoTextCommand, {\n  displayName: \"Command<turnIntoTextCommand>\",\n  group: \"Paragraph\"\n});\nconst paragraphKeymap = $useKeymap(\"paragraphKeymap\", {\n  TurnIntoText: {\n    shortcuts: \"Mod-Alt-0\",\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(turnIntoTextCommand.key);\n    }\n  }\n});\nwithMeta(paragraphKeymap.ctx, {\n  displayName: \"KeymapCtx<paragraph>\",\n  group: \"Paragraph\"\n});\nwithMeta(paragraphKeymap.shortcuts, {\n  displayName: \"Keymap<paragraph>\",\n  group: \"Paragraph\"\n});\nconst headingIndex = Array(6).fill(0).map((_, i) => i + 1);\nfunction defaultHeadingIdGenerator(node) {\n  return node.textContent.toLowerCase().trim().replace(/\\s+/g, \"-\");\n}\nconst headingIdGenerator = $ctx(\n  defaultHeadingIdGenerator,\n  \"headingIdGenerator\"\n);\nwithMeta(headingIdGenerator, {\n  displayName: \"Ctx<HeadingIdGenerator>\",\n  group: \"Heading\"\n});\nconst headingAttr = $nodeAttr(\"heading\");\nwithMeta(headingAttr, {\n  displayName: \"Attr<heading>\",\n  group: \"Heading\"\n});\nconst headingSchema = $nodeSchema(\"heading\", (ctx) => {\n  const getId = ctx.get(headingIdGenerator.key);\n  return {\n    content: \"inline*\",\n    group: \"block\",\n    defining: true,\n    attrs: {\n      id: {\n        default: \"\",\n        validate: \"string\"\n      },\n      level: {\n        default: 1,\n        validate: \"number\"\n      }\n    },\n    parseDOM: headingIndex.map((x) => ({\n      tag: `h${x}`,\n      getAttrs: (node) => {\n        if (!(node instanceof HTMLElement)) throw expectDomTypeError(node);\n        return { level: x, id: node.id };\n      }\n    })),\n    toDOM: (node) => {\n      return [\n        `h${node.attrs.level}`,\n        {\n          ...ctx.get(headingAttr.key)(node),\n          id: node.attrs.id || getId(node)\n        },\n        0\n      ];\n    },\n    parseMarkdown: {\n      match: ({ type }) => type === \"heading\",\n      runner: (state, node, type) => {\n        const depth = node.depth;\n        state.openNode(type, { level: depth });\n        state.next(node.children);\n        state.closeNode();\n      }\n    },\n    toMarkdown: {\n      match: (node) => node.type.name === \"heading\",\n      runner: (state, node) => {\n        state.openNode(\"heading\", void 0, { depth: node.attrs.level });\n        serializeText(state, node);\n        state.closeNode();\n      }\n    }\n  };\n});\nwithMeta(headingSchema.node, {\n  displayName: \"NodeSchema<heading>\",\n  group: \"Heading\"\n});\nwithMeta(headingSchema.ctx, {\n  displayName: \"NodeSchemaCtx<heading>\",\n  group: \"Heading\"\n});\nconst wrapInHeadingInputRule = $inputRule((ctx) => {\n  return textblockTypeInputRule(\n    /^(?<hashes>#+)\\s$/,\n    headingSchema.type(ctx),\n    (match) => {\n      const x = match.groups?.hashes?.length || 0;\n      const view = ctx.get(editorViewCtx);\n      const { $from } = view.state.selection;\n      const node = $from.node();\n      if (node.type.name === \"heading\") {\n        let level = Number(node.attrs.level) + Number(x);\n        if (level > 6) level = 6;\n        return { level };\n      }\n      return { level: x };\n    }\n  );\n});\nwithMeta(wrapInHeadingInputRule, {\n  displayName: \"InputRule<wrapInHeadingInputRule>\",\n  group: \"Heading\"\n});\nconst wrapInHeadingCommand = $command(\"WrapInHeading\", (ctx) => {\n  return (level) => {\n    level ??= 1;\n    if (level < 1) return setBlockType(paragraphSchema.type(ctx));\n    return setBlockType(headingSchema.type(ctx), { level });\n  };\n});\nwithMeta(wrapInHeadingCommand, {\n  displayName: \"Command<wrapInHeadingCommand>\",\n  group: \"Heading\"\n});\nconst downgradeHeadingCommand = $command(\n  \"DowngradeHeading\",\n  (ctx) => () => (state, dispatch, view) => {\n    const { $from } = state.selection;\n    const node = $from.node();\n    if (node.type !== headingSchema.type(ctx) || !state.selection.empty || $from.parentOffset !== 0)\n      return false;\n    const level = node.attrs.level - 1;\n    if (!level)\n      return setBlockType(paragraphSchema.type(ctx))(state, dispatch, view);\n    dispatch?.(\n      state.tr.setNodeMarkup(state.selection.$from.before(), void 0, {\n        ...node.attrs,\n        level\n      })\n    );\n    return true;\n  }\n);\nwithMeta(downgradeHeadingCommand, {\n  displayName: \"Command<downgradeHeadingCommand>\",\n  group: \"Heading\"\n});\nconst headingKeymap = $useKeymap(\"headingKeymap\", {\n  TurnIntoH1: {\n    shortcuts: \"Mod-Alt-1\",\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(wrapInHeadingCommand.key, 1);\n    }\n  },\n  TurnIntoH2: {\n    shortcuts: \"Mod-Alt-2\",\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(wrapInHeadingCommand.key, 2);\n    }\n  },\n  TurnIntoH3: {\n    shortcuts: \"Mod-Alt-3\",\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(wrapInHeadingCommand.key, 3);\n    }\n  },\n  TurnIntoH4: {\n    shortcuts: \"Mod-Alt-4\",\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(wrapInHeadingCommand.key, 4);\n    }\n  },\n  TurnIntoH5: {\n    shortcuts: \"Mod-Alt-5\",\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(wrapInHeadingCommand.key, 5);\n    }\n  },\n  TurnIntoH6: {\n    shortcuts: \"Mod-Alt-6\",\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(wrapInHeadingCommand.key, 6);\n    }\n  },\n  DowngradeHeading: {\n    shortcuts: [\"Delete\", \"Backspace\"],\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(downgradeHeadingCommand.key);\n    }\n  }\n});\nwithMeta(headingKeymap.ctx, {\n  displayName: \"KeymapCtx<heading>\",\n  group: \"Heading\"\n});\nwithMeta(headingKeymap.shortcuts, {\n  displayName: \"Keymap<heading>\",\n  group: \"Heading\"\n});\nconst blockquoteAttr = $nodeAttr(\"blockquote\");\nwithMeta(blockquoteAttr, {\n  displayName: \"Attr<blockquote>\",\n  group: \"Blockquote\"\n});\nconst blockquoteSchema = $nodeSchema(\n  \"blockquote\",\n  (ctx) => ({\n    content: \"block+\",\n    group: \"block\",\n    defining: true,\n    parseDOM: [{ tag: \"blockquote\" }],\n    toDOM: (node) => [\"blockquote\", ctx.get(blockquoteAttr.key)(node), 0],\n    parseMarkdown: {\n      match: ({ type }) => type === \"blockquote\",\n      runner: (state, node, type) => {\n        state.openNode(type).next(node.children).closeNode();\n      }\n    },\n    toMarkdown: {\n      match: (node) => node.type.name === \"blockquote\",\n      runner: (state, node) => {\n        state.openNode(\"blockquote\").next(node.content).closeNode();\n      }\n    }\n  })\n);\nwithMeta(blockquoteSchema.node, {\n  displayName: \"NodeSchema<blockquote>\",\n  group: \"Blockquote\"\n});\nwithMeta(blockquoteSchema.ctx, {\n  displayName: \"NodeSchemaCtx<blockquote>\",\n  group: \"Blockquote\"\n});\nconst wrapInBlockquoteInputRule = $inputRule(\n  (ctx) => wrappingInputRule(/^\\s*>\\s$/, blockquoteSchema.type(ctx))\n);\nwithMeta(wrapInBlockquoteInputRule, {\n  displayName: \"InputRule<wrapInBlockquoteInputRule>\",\n  group: \"Blockquote\"\n});\nconst wrapInBlockquoteCommand = $command(\n  \"WrapInBlockquote\",\n  (ctx) => () => wrapIn(blockquoteSchema.type(ctx))\n);\nwithMeta(wrapInBlockquoteCommand, {\n  displayName: \"Command<wrapInBlockquoteCommand>\",\n  group: \"Blockquote\"\n});\nconst blockquoteKeymap = $useKeymap(\"blockquoteKeymap\", {\n  WrapInBlockquote: {\n    shortcuts: \"Mod-Shift-b\",\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(wrapInBlockquoteCommand.key);\n    }\n  }\n});\nwithMeta(blockquoteKeymap.ctx, {\n  displayName: \"KeymapCtx<blockquote>\",\n  group: \"Blockquote\"\n});\nwithMeta(blockquoteKeymap.shortcuts, {\n  displayName: \"Keymap<blockquote>\",\n  group: \"Blockquote\"\n});\nconst codeBlockAttr = $nodeAttr(\"codeBlock\", () => ({\n  pre: {},\n  code: {}\n}));\nwithMeta(codeBlockAttr, {\n  displayName: \"Attr<codeBlock>\",\n  group: \"CodeBlock\"\n});\nconst codeBlockSchema = $nodeSchema(\"code_block\", (ctx) => {\n  return {\n    content: \"text*\",\n    group: \"block\",\n    marks: \"\",\n    defining: true,\n    code: true,\n    attrs: {\n      language: {\n        default: \"\",\n        validate: \"string\"\n      }\n    },\n    parseDOM: [\n      {\n        tag: \"pre\",\n        preserveWhitespace: \"full\",\n        getAttrs: (dom) => {\n          if (!(dom instanceof HTMLElement)) throw expectDomTypeError(dom);\n          return { language: dom.dataset.language };\n        }\n      }\n    ],\n    toDOM: (node) => {\n      const attr = ctx.get(codeBlockAttr.key)(node);\n      const language = node.attrs.language;\n      const languageAttrs = language && language.length > 0 ? { \"data-language\": language } : void 0;\n      return [\n        \"pre\",\n        {\n          ...attr.pre,\n          ...languageAttrs\n        },\n        [\"code\", attr.code, 0]\n      ];\n    },\n    parseMarkdown: {\n      match: ({ type }) => type === \"code\",\n      runner: (state, node, type) => {\n        const language = node.lang ?? \"\";\n        const value = node.value;\n        state.openNode(type, { language });\n        if (value) state.addText(value);\n        state.closeNode();\n      }\n    },\n    toMarkdown: {\n      match: (node) => node.type.name === \"code_block\",\n      runner: (state, node) => {\n        state.addNode(\"code\", void 0, node.content.firstChild?.text || \"\", {\n          lang: node.attrs.language\n        });\n      }\n    }\n  };\n});\nwithMeta(codeBlockSchema.node, {\n  displayName: \"NodeSchema<codeBlock>\",\n  group: \"CodeBlock\"\n});\nwithMeta(codeBlockSchema.ctx, {\n  displayName: \"NodeSchemaCtx<codeBlock>\",\n  group: \"CodeBlock\"\n});\nconst createCodeBlockInputRule = $inputRule(\n  (ctx) => textblockTypeInputRule(\n    /^```(?<language>[a-z]*)?[\\s\\n]$/,\n    codeBlockSchema.type(ctx),\n    (match) => ({\n      language: match.groups?.language ?? \"\"\n    })\n  )\n);\nwithMeta(createCodeBlockInputRule, {\n  displayName: \"InputRule<createCodeBlockInputRule>\",\n  group: \"CodeBlock\"\n});\nconst createCodeBlockCommand = $command(\n  \"CreateCodeBlock\",\n  (ctx) => (language = \"\") => setBlockType(codeBlockSchema.type(ctx), { language })\n);\nwithMeta(createCodeBlockCommand, {\n  displayName: \"Command<createCodeBlockCommand>\",\n  group: \"CodeBlock\"\n});\nconst updateCodeBlockLanguageCommand = $command(\n  \"UpdateCodeBlockLanguage\",\n  () => ({ pos, language } = {\n    pos: -1,\n    language: \"\"\n  }) => (state, dispatch) => {\n    if (pos >= 0) {\n      dispatch?.(state.tr.setNodeAttribute(pos, \"language\", language));\n      return true;\n    }\n    return false;\n  }\n);\nwithMeta(updateCodeBlockLanguageCommand, {\n  displayName: \"Command<updateCodeBlockLanguageCommand>\",\n  group: \"CodeBlock\"\n});\nconst codeBlockKeymap = $useKeymap(\"codeBlockKeymap\", {\n  CreateCodeBlock: {\n    shortcuts: \"Mod-Alt-c\",\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(createCodeBlockCommand.key);\n    }\n  }\n});\nwithMeta(codeBlockKeymap.ctx, {\n  displayName: \"KeymapCtx<codeBlock>\",\n  group: \"CodeBlock\"\n});\nwithMeta(codeBlockKeymap.shortcuts, {\n  displayName: \"Keymap<codeBlock>\",\n  group: \"CodeBlock\"\n});\nconst imageAttr = $nodeAttr(\"image\");\nwithMeta(imageAttr, {\n  displayName: \"Attr<image>\",\n  group: \"Image\"\n});\nconst imageSchema = $nodeSchema(\"image\", (ctx) => {\n  return {\n    inline: true,\n    group: \"inline\",\n    selectable: true,\n    draggable: true,\n    marks: \"\",\n    atom: true,\n    defining: true,\n    isolating: true,\n    attrs: {\n      src: { default: \"\", validate: \"string\" },\n      alt: { default: \"\", validate: \"string\" },\n      title: { default: \"\", validate: \"string\" }\n    },\n    parseDOM: [\n      {\n        tag: \"img[src]\",\n        getAttrs: (dom) => {\n          if (!(dom instanceof HTMLElement)) throw expectDomTypeError(dom);\n          return {\n            src: dom.getAttribute(\"src\") || \"\",\n            alt: dom.getAttribute(\"alt\") || \"\",\n            title: dom.getAttribute(\"title\") || dom.getAttribute(\"alt\") || \"\"\n          };\n        }\n      }\n    ],\n    toDOM: (node) => {\n      return [\"img\", { ...ctx.get(imageAttr.key)(node), ...node.attrs }];\n    },\n    parseMarkdown: {\n      match: ({ type }) => type === \"image\",\n      runner: (state, node, type) => {\n        const url = node.url;\n        const alt = node.alt;\n        const title = node.title;\n        state.addNode(type, {\n          src: url,\n          alt,\n          title\n        });\n      }\n    },\n    toMarkdown: {\n      match: (node) => node.type.name === \"image\",\n      runner: (state, node) => {\n        state.addNode(\"image\", void 0, void 0, {\n          title: node.attrs.title,\n          url: node.attrs.src,\n          alt: node.attrs.alt\n        });\n      }\n    }\n  };\n});\nwithMeta(imageSchema.node, {\n  displayName: \"NodeSchema<image>\",\n  group: \"Image\"\n});\nwithMeta(imageSchema.ctx, {\n  displayName: \"NodeSchemaCtx<image>\",\n  group: \"Image\"\n});\nconst insertImageCommand = $command(\n  \"InsertImage\",\n  (ctx) => (payload = {}) => (state, dispatch) => {\n    if (!dispatch) return true;\n    const { src = \"\", alt = \"\", title = \"\" } = payload;\n    const node = imageSchema.type(ctx).create({ src, alt, title });\n    if (!node) return true;\n    dispatch(state.tr.replaceSelectionWith(node).scrollIntoView());\n    return true;\n  }\n);\nwithMeta(insertImageCommand, {\n  displayName: \"Command<insertImageCommand>\",\n  group: \"Image\"\n});\nconst updateImageCommand = $command(\n  \"UpdateImage\",\n  (ctx) => (payload = {}) => (state, dispatch) => {\n    const nodeWithPos = findSelectedNodeOfType(\n      state.selection,\n      imageSchema.type(ctx)\n    );\n    if (!nodeWithPos) return false;\n    const { node, pos } = nodeWithPos;\n    const newAttrs = { ...node.attrs };\n    const { src, alt, title } = payload;\n    if (src !== void 0) newAttrs.src = src;\n    if (alt !== void 0) newAttrs.alt = alt;\n    if (title !== void 0) newAttrs.title = title;\n    dispatch?.(\n      state.tr.setNodeMarkup(pos, void 0, newAttrs).scrollIntoView()\n    );\n    return true;\n  }\n);\nwithMeta(updateImageCommand, {\n  displayName: \"Command<updateImageCommand>\",\n  group: \"Image\"\n});\nconst insertImageInputRule = $inputRule(\n  (ctx) => new InputRule(\n    /!\\[(?<alt>.*?)]\\((?<filename>.*?)\\s*(?=\"|\\))\"?(?<title>[^\"]+)?\"?\\)/,\n    (state, match, start, end) => {\n      const [matched, alt, src = \"\", title] = match;\n      if (matched)\n        return state.tr.replaceWith(\n          start,\n          end,\n          imageSchema.type(ctx).create({ src, alt, title })\n        );\n      return null;\n    }\n  )\n);\nwithMeta(insertImageInputRule, {\n  displayName: \"InputRule<insertImageInputRule>\",\n  group: \"Image\"\n});\nconst hardbreakAttr = $nodeAttr(\"hardbreak\", (node) => {\n  return {\n    \"data-type\": \"hardbreak\",\n    \"data-is-inline\": node.attrs.isInline\n  };\n});\nwithMeta(hardbreakAttr, {\n  displayName: \"Attr<hardbreak>\",\n  group: \"Hardbreak\"\n});\nconst hardbreakSchema = $nodeSchema(\"hardbreak\", (ctx) => ({\n  inline: true,\n  group: \"inline\",\n  attrs: {\n    isInline: {\n      default: false,\n      validate: \"boolean\"\n    }\n  },\n  selectable: false,\n  parseDOM: [\n    { tag: \"br\" },\n    {\n      tag: 'span[data-type=\"hardbreak\"]',\n      getAttrs: () => ({ isInline: true })\n    }\n  ],\n  toDOM: (node) => node.attrs.isInline ? [\"span\", ctx.get(hardbreakAttr.key)(node), \" \"] : [\"br\", ctx.get(hardbreakAttr.key)(node)],\n  parseMarkdown: {\n    match: ({ type }) => type === \"break\",\n    runner: (state, node, type) => {\n      state.addNode(type, {\n        isInline: Boolean(\n          node.data?.isInline\n        )\n      });\n    }\n  },\n  leafText: () => \"\\n\",\n  toMarkdown: {\n    match: (node) => node.type.name === \"hardbreak\",\n    runner: (state, node) => {\n      if (node.attrs.isInline) state.addNode(\"text\", void 0, \"\\n\");\n      else state.addNode(\"break\");\n    }\n  }\n}));\nwithMeta(hardbreakSchema.node, {\n  displayName: \"NodeSchema<hardbreak>\",\n  group: \"Hardbreak\"\n});\nwithMeta(hardbreakSchema.ctx, {\n  displayName: \"NodeSchemaCtx<hardbreak>\",\n  group: \"Hardbreak\"\n});\nconst insertHardbreakCommand = $command(\n  \"InsertHardbreak\",\n  (ctx) => () => (state, dispatch) => {\n    const { selection, tr } = state;\n    if (!(selection instanceof TextSelection)) return false;\n    if (selection.empty) {\n      const node = selection.$from.node();\n      if (node.childCount > 0 && node.lastChild?.type.name === \"hardbreak\") {\n        dispatch?.(\n          tr.replaceRangeWith(\n            selection.to - 1,\n            selection.to,\n            state.schema.node(\"paragraph\")\n          ).setSelection(Selection.near(tr.doc.resolve(selection.to))).scrollIntoView()\n        );\n        return true;\n      }\n    }\n    dispatch?.(\n      tr.setMeta(\"hardbreak\", true).replaceSelectionWith(hardbreakSchema.type(ctx).create()).scrollIntoView()\n    );\n    return true;\n  }\n);\nwithMeta(insertHardbreakCommand, {\n  displayName: \"Command<insertHardbreakCommand>\",\n  group: \"Hardbreak\"\n});\nconst hardbreakKeymap = $useKeymap(\"hardbreakKeymap\", {\n  InsertHardbreak: {\n    shortcuts: \"Shift-Enter\",\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(insertHardbreakCommand.key);\n    }\n  }\n});\nwithMeta(hardbreakKeymap.ctx, {\n  displayName: \"KeymapCtx<hardbreak>\",\n  group: \"Hardbreak\"\n});\nwithMeta(hardbreakKeymap.shortcuts, {\n  displayName: \"Keymap<hardbreak>\",\n  group: \"Hardbreak\"\n});\nconst hrAttr = $nodeAttr(\"hr\");\nwithMeta(hrAttr, {\n  displayName: \"Attr<hr>\",\n  group: \"Hr\"\n});\nconst hrSchema = $nodeSchema(\"hr\", (ctx) => ({\n  group: \"block\",\n  parseDOM: [{ tag: \"hr\" }],\n  toDOM: (node) => [\"hr\", ctx.get(hrAttr.key)(node)],\n  parseMarkdown: {\n    match: ({ type }) => type === \"thematicBreak\",\n    runner: (state, _, type) => {\n      state.addNode(type);\n    }\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === \"hr\",\n    runner: (state) => {\n      state.addNode(\"thematicBreak\");\n    }\n  }\n}));\nwithMeta(hrSchema.node, {\n  displayName: \"NodeSchema<hr>\",\n  group: \"Hr\"\n});\nwithMeta(hrSchema.ctx, {\n  displayName: \"NodeSchemaCtx<hr>\",\n  group: \"Hr\"\n});\nconst insertHrInputRule = $inputRule(\n  (ctx) => new InputRule(/^(?:---|___\\s|\\*\\*\\*\\s)$/, (state, match, start, end) => {\n    const { tr } = state;\n    if (match[0]) tr.replaceWith(start - 1, end, hrSchema.type(ctx).create());\n    return tr;\n  })\n);\nwithMeta(insertHrInputRule, {\n  displayName: \"InputRule<insertHrInputRule>\",\n  group: \"Hr\"\n});\nconst insertHrCommand = $command(\n  \"InsertHr\",\n  (ctx) => () => (state, dispatch) => {\n    if (!dispatch) return true;\n    const paragraph = paragraphSchema.node.type(ctx).create();\n    const { tr, selection } = state;\n    const { from } = selection;\n    const node = hrSchema.type(ctx).create();\n    if (!node) return true;\n    const _tr = tr.replaceSelectionWith(node).insert(from, paragraph);\n    const sel = Selection.findFrom(_tr.doc.resolve(from), 1, true);\n    if (!sel) return true;\n    dispatch(_tr.setSelection(sel).scrollIntoView());\n    return true;\n  }\n);\nwithMeta(insertHrCommand, {\n  displayName: \"Command<insertHrCommand>\",\n  group: \"Hr\"\n});\nconst bulletListAttr = $nodeAttr(\"bulletList\");\nwithMeta(bulletListAttr, {\n  displayName: \"Attr<bulletList>\",\n  group: \"BulletList\"\n});\nconst bulletListSchema = $nodeSchema(\"bullet_list\", (ctx) => {\n  return {\n    content: \"listItem+\",\n    group: \"block\",\n    attrs: {\n      spread: {\n        default: false,\n        validate: \"boolean\"\n      }\n    },\n    parseDOM: [\n      {\n        tag: \"ul\",\n        getAttrs: (dom) => {\n          if (!(dom instanceof HTMLElement)) throw expectDomTypeError(dom);\n          return {\n            spread: dom.dataset.spread === \"true\"\n          };\n        }\n      }\n    ],\n    toDOM: (node) => {\n      return [\n        \"ul\",\n        {\n          ...ctx.get(bulletListAttr.key)(node),\n          \"data-spread\": node.attrs.spread\n        },\n        0\n      ];\n    },\n    parseMarkdown: {\n      match: ({ type, ordered }) => type === \"list\" && !ordered,\n      runner: (state, node, type) => {\n        const spread = node.spread != null ? `${node.spread}` : \"false\";\n        state.openNode(type, { spread }).next(node.children).closeNode();\n      }\n    },\n    toMarkdown: {\n      match: (node) => node.type.name === \"bullet_list\",\n      runner: (state, node) => {\n        state.openNode(\"list\", void 0, {\n          ordered: false,\n          spread: node.attrs.spread\n        }).next(node.content).closeNode();\n      }\n    }\n  };\n});\nwithMeta(bulletListSchema.node, {\n  displayName: \"NodeSchema<bulletList>\",\n  group: \"BulletList\"\n});\nwithMeta(bulletListSchema.ctx, {\n  displayName: \"NodeSchemaCtx<bulletList>\",\n  group: \"BulletList\"\n});\nconst wrapInBulletListInputRule = $inputRule(\n  (ctx) => wrappingInputRule(/^\\s*([-+*])\\s$/, bulletListSchema.type(ctx))\n);\nwithMeta(wrapInBulletListInputRule, {\n  displayName: \"InputRule<wrapInBulletListInputRule>\",\n  group: \"BulletList\"\n});\nconst wrapInBulletListCommand = $command(\n  \"WrapInBulletList\",\n  (ctx) => () => wrapIn(bulletListSchema.type(ctx))\n);\nwithMeta(wrapInBulletListCommand, {\n  displayName: \"Command<wrapInBulletListCommand>\",\n  group: \"BulletList\"\n});\nconst bulletListKeymap = $useKeymap(\"bulletListKeymap\", {\n  WrapInBulletList: {\n    shortcuts: \"Mod-Alt-8\",\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(wrapInBulletListCommand.key);\n    }\n  }\n});\nwithMeta(bulletListKeymap.ctx, {\n  displayName: \"KeymapCtx<bulletListKeymap>\",\n  group: \"BulletList\"\n});\nwithMeta(bulletListKeymap.shortcuts, {\n  displayName: \"Keymap<bulletListKeymap>\",\n  group: \"BulletList\"\n});\nconst orderedListAttr = $nodeAttr(\"orderedList\");\nwithMeta(orderedListAttr, {\n  displayName: \"Attr<orderedList>\",\n  group: \"OrderedList\"\n});\nconst orderedListSchema = $nodeSchema(\"ordered_list\", (ctx) => ({\n  content: \"listItem+\",\n  group: \"block\",\n  attrs: {\n    order: {\n      default: 1,\n      validate: \"number\"\n    },\n    spread: {\n      default: false,\n      validate: \"boolean\"\n    }\n  },\n  parseDOM: [\n    {\n      tag: \"ol\",\n      getAttrs: (dom) => {\n        if (!(dom instanceof HTMLElement)) throw expectDomTypeError(dom);\n        return {\n          spread: dom.dataset.spread,\n          order: dom.hasAttribute(\"start\") ? Number(dom.getAttribute(\"start\")) : 1\n        };\n      }\n    }\n  ],\n  toDOM: (node) => [\n    \"ol\",\n    {\n      ...ctx.get(orderedListAttr.key)(node),\n      ...node.attrs.order === 1 ? {} : node.attrs.order,\n      \"data-spread\": node.attrs.spread\n    },\n    0\n  ],\n  parseMarkdown: {\n    match: ({ type, ordered }) => type === \"list\" && !!ordered,\n    runner: (state, node, type) => {\n      const spread = node.spread != null ? `${node.spread}` : \"true\";\n      state.openNode(type, { spread }).next(node.children).closeNode();\n    }\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === \"ordered_list\",\n    runner: (state, node) => {\n      state.openNode(\"list\", void 0, {\n        ordered: true,\n        start: 1,\n        spread: node.attrs.spread === \"true\"\n      });\n      state.next(node.content);\n      state.closeNode();\n    }\n  }\n}));\nwithMeta(orderedListSchema.node, {\n  displayName: \"NodeSchema<orderedList>\",\n  group: \"OrderedList\"\n});\nwithMeta(orderedListSchema.ctx, {\n  displayName: \"NodeSchemaCtx<orderedList>\",\n  group: \"OrderedList\"\n});\nconst wrapInOrderedListInputRule = $inputRule(\n  (ctx) => wrappingInputRule(\n    /^\\s*(\\d+)\\.\\s$/,\n    orderedListSchema.type(ctx),\n    (match) => ({ order: Number(match[1]) }),\n    (match, node) => node.childCount + node.attrs.order === Number(match[1])\n  )\n);\nwithMeta(wrapInOrderedListInputRule, {\n  displayName: \"InputRule<wrapInOrderedListInputRule>\",\n  group: \"OrderedList\"\n});\nconst wrapInOrderedListCommand = $command(\n  \"WrapInOrderedList\",\n  (ctx) => () => wrapIn(orderedListSchema.type(ctx))\n);\nwithMeta(wrapInOrderedListCommand, {\n  displayName: \"Command<wrapInOrderedListCommand>\",\n  group: \"OrderedList\"\n});\nconst orderedListKeymap = $useKeymap(\"orderedListKeymap\", {\n  WrapInOrderedList: {\n    shortcuts: \"Mod-Alt-7\",\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(wrapInOrderedListCommand.key);\n    }\n  }\n});\nwithMeta(orderedListKeymap.ctx, {\n  displayName: \"KeymapCtx<orderedList>\",\n  group: \"OrderedList\"\n});\nwithMeta(orderedListKeymap.shortcuts, {\n  displayName: \"Keymap<orderedList>\",\n  group: \"OrderedList\"\n});\nconst listItemAttr = $nodeAttr(\"listItem\");\nwithMeta(listItemAttr, {\n  displayName: \"Attr<listItem>\",\n  group: \"ListItem\"\n});\nconst listItemSchema = $nodeSchema(\"list_item\", (ctx) => ({\n  group: \"listItem\",\n  content: \"paragraph block*\",\n  attrs: {\n    label: {\n      default: \"•\",\n      validate: \"string\"\n    },\n    listType: {\n      default: \"bullet\",\n      validate: \"string\"\n    },\n    spread: {\n      default: true,\n      validate: \"boolean\"\n    }\n  },\n  defining: true,\n  parseDOM: [\n    {\n      tag: \"li\",\n      getAttrs: (dom) => {\n        if (!(dom instanceof HTMLElement)) throw expectDomTypeError(dom);\n        return {\n          label: dom.dataset.label,\n          listType: dom.dataset.listType,\n          spread: dom.dataset.spread === \"true\"\n        };\n      }\n    }\n  ],\n  toDOM: (node) => [\n    \"li\",\n    {\n      ...ctx.get(listItemAttr.key)(node),\n      \"data-label\": node.attrs.label,\n      \"data-list-type\": node.attrs.listType,\n      \"data-spread\": node.attrs.spread\n    },\n    0\n  ],\n  parseMarkdown: {\n    match: ({ type }) => type === \"listItem\",\n    runner: (state, node, type) => {\n      const label = node.label != null ? `${node.label}.` : \"•\";\n      const listType = node.label != null ? \"ordered\" : \"bullet\";\n      const spread = node.spread != null ? `${node.spread}` : \"true\";\n      state.openNode(type, { label, listType, spread });\n      state.next(node.children);\n      state.closeNode();\n    }\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === \"list_item\",\n    runner: (state, node) => {\n      state.openNode(\"listItem\", void 0, {\n        spread: node.attrs.spread\n      });\n      state.next(node.content);\n      state.closeNode();\n    }\n  }\n}));\nwithMeta(listItemSchema.node, {\n  displayName: \"NodeSchema<listItem>\",\n  group: \"ListItem\"\n});\nwithMeta(listItemSchema.ctx, {\n  displayName: \"NodeSchemaCtx<listItem>\",\n  group: \"ListItem\"\n});\nconst sinkListItemCommand = $command(\n  \"SinkListItem\",\n  (ctx) => () => sinkListItem(listItemSchema.type(ctx))\n);\nwithMeta(sinkListItemCommand, {\n  displayName: \"Command<sinkListItemCommand>\",\n  group: \"ListItem\"\n});\nconst liftListItemCommand = $command(\n  \"LiftListItem\",\n  (ctx) => () => liftListItem(listItemSchema.type(ctx))\n);\nwithMeta(liftListItemCommand, {\n  displayName: \"Command<liftListItemCommand>\",\n  group: \"ListItem\"\n});\nconst splitListItemCommand = $command(\n  \"SplitListItem\",\n  (ctx) => () => splitListItem(listItemSchema.type(ctx))\n);\nwithMeta(splitListItemCommand, {\n  displayName: \"Command<splitListItemCommand>\",\n  group: \"ListItem\"\n});\nfunction liftFirstListItem(ctx) {\n  return (state, dispatch, view) => {\n    const { selection } = state;\n    if (!(selection instanceof TextSelection)) return false;\n    const { empty, $from } = selection;\n    if (!empty || $from.parentOffset !== 0) return false;\n    const parentItem = $from.node(-1);\n    if (parentItem.type !== listItemSchema.type(ctx)) return false;\n    return joinBackward(state, dispatch, view);\n  };\n}\nconst liftFirstListItemCommand = $command(\n  \"LiftFirstListItem\",\n  (ctx) => () => liftFirstListItem(ctx)\n);\nwithMeta(liftFirstListItemCommand, {\n  displayName: \"Command<liftFirstListItemCommand>\",\n  group: \"ListItem\"\n});\nconst listItemKeymap = $useKeymap(\"listItemKeymap\", {\n  NextListItem: {\n    shortcuts: \"Enter\",\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(splitListItemCommand.key);\n    }\n  },\n  SinkListItem: {\n    shortcuts: [\"Tab\", \"Mod-]\"],\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(sinkListItemCommand.key);\n    }\n  },\n  LiftListItem: {\n    shortcuts: [\"Shift-Tab\", \"Mod-[\"],\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(liftListItemCommand.key);\n    }\n  },\n  LiftFirstListItem: {\n    shortcuts: [\"Backspace\", \"Delete\"],\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(liftFirstListItemCommand.key);\n    }\n  }\n});\nwithMeta(listItemKeymap.ctx, {\n  displayName: \"KeymapCtx<listItem>\",\n  group: \"ListItem\"\n});\nwithMeta(listItemKeymap.shortcuts, {\n  displayName: \"Keymap<listItem>\",\n  group: \"ListItem\"\n});\nconst textSchema = $node(\"text\", () => ({\n  group: \"inline\",\n  parseMarkdown: {\n    match: ({ type }) => type === \"text\",\n    runner: (state, node) => {\n      state.addText(node.value);\n    }\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === \"text\",\n    runner: (state, node) => {\n      state.addNode(\"text\", void 0, node.text);\n    }\n  }\n}));\nwithMeta(textSchema, {\n  displayName: \"NodeSchema<text>\",\n  group: \"Text\"\n});\nconst htmlAttr = $nodeAttr(\"html\");\nwithMeta(htmlAttr, {\n  displayName: \"Attr<html>\",\n  group: \"Html\"\n});\nconst htmlSchema = $nodeSchema(\"html\", (ctx) => {\n  return {\n    atom: true,\n    group: \"inline\",\n    inline: true,\n    attrs: {\n      value: {\n        default: \"\",\n        validate: \"string\"\n      }\n    },\n    toDOM: (node) => {\n      const span = document.createElement(\"span\");\n      const attr = {\n        ...ctx.get(htmlAttr.key)(node),\n        \"data-value\": node.attrs.value,\n        \"data-type\": \"html\"\n      };\n      span.textContent = node.attrs.value;\n      return [\"span\", attr, node.attrs.value];\n    },\n    parseDOM: [\n      {\n        tag: 'span[data-type=\"html\"]',\n        getAttrs: (dom) => {\n          return {\n            value: dom.dataset.value ?? \"\"\n          };\n        }\n      }\n    ],\n    parseMarkdown: {\n      match: ({ type }) => Boolean(type === \"html\"),\n      runner: (state, node, type) => {\n        state.addNode(type, { value: node.value });\n      }\n    },\n    toMarkdown: {\n      match: (node) => node.type.name === \"html\",\n      runner: (state, node) => {\n        state.addNode(\"html\", void 0, node.attrs.value);\n      }\n    }\n  };\n});\nwithMeta(htmlSchema.node, {\n  displayName: \"NodeSchema<html>\",\n  group: \"Html\"\n});\nwithMeta(htmlSchema.ctx, {\n  displayName: \"NodeSchemaCtx<html>\",\n  group: \"Html\"\n});\nconst schema = [\n  docSchema,\n  paragraphAttr,\n  paragraphSchema,\n  headingIdGenerator,\n  headingAttr,\n  headingSchema,\n  hardbreakAttr,\n  hardbreakSchema,\n  blockquoteAttr,\n  blockquoteSchema,\n  codeBlockAttr,\n  codeBlockSchema,\n  hrAttr,\n  hrSchema,\n  imageAttr,\n  imageSchema,\n  bulletListAttr,\n  bulletListSchema,\n  orderedListAttr,\n  orderedListSchema,\n  listItemAttr,\n  listItemSchema,\n  emphasisAttr,\n  emphasisSchema,\n  strongAttr,\n  strongSchema,\n  inlineCodeAttr,\n  inlineCodeSchema,\n  linkAttr,\n  linkSchema,\n  htmlAttr,\n  htmlSchema,\n  textSchema\n].flat();\nconst inputRules = [\n  wrapInBlockquoteInputRule,\n  wrapInBulletListInputRule,\n  wrapInOrderedListInputRule,\n  createCodeBlockInputRule,\n  insertHrInputRule,\n  wrapInHeadingInputRule\n].flat();\nconst markInputRules = [\n  emphasisStarInputRule,\n  emphasisUnderscoreInputRule,\n  inlineCodeInputRule,\n  strongInputRule\n];\nconst isMarkSelectedCommand = $command(\n  \"IsMarkSelected\",\n  () => (markType) => (state) => {\n    if (!markType) return false;\n    const { doc, selection } = state;\n    const hasLink = doc.rangeHasMark(selection.from, selection.to, markType);\n    return hasLink;\n  }\n);\nconst isNodeSelectedCommand = $command(\n  \"IsNoteSelected\",\n  () => (nodeType) => (state) => {\n    if (!nodeType) return false;\n    const result = findNodeInSelection(state, nodeType);\n    return result.hasNode;\n  }\n);\nconst clearTextInCurrentBlockCommand = $command(\n  \"ClearTextInCurrentBlock\",\n  () => () => (state, dispatch) => {\n    let tr = state.tr;\n    const { $from, $to } = tr.selection;\n    const { pos: from } = $from;\n    const { pos: right } = $to;\n    const left = from - $from.node().content.size;\n    if (left < 0) return false;\n    tr = tr.deleteRange(left, right);\n    dispatch?.(tr);\n    return true;\n  }\n);\nconst setBlockTypeCommand = $command(\n  \"SetBlockType\",\n  () => (payload) => (state, dispatch) => {\n    const { nodeType, attrs = null } = payload ?? {};\n    if (!nodeType) return false;\n    const tr = state.tr;\n    const { from, to } = tr.selection;\n    try {\n      tr.setBlockType(from, to, nodeType, attrs);\n    } catch {\n      return false;\n    }\n    dispatch?.(tr);\n    return true;\n  }\n);\nconst wrapInBlockTypeCommand = $command(\n  \"WrapInBlockType\",\n  () => (payload) => (state, dispatch) => {\n    const { nodeType, attrs = null } = payload ?? {};\n    if (!nodeType) return false;\n    let tr = state.tr;\n    try {\n      const { $from, $to } = tr.selection;\n      const blockRange = $from.blockRange($to);\n      const wrapping = blockRange && findWrapping(blockRange, nodeType, attrs);\n      if (!wrapping) return false;\n      tr = tr.wrap(blockRange, wrapping);\n    } catch {\n      return false;\n    }\n    dispatch?.(tr);\n    return true;\n  }\n);\nconst addBlockTypeCommand = $command(\n  \"AddBlockType\",\n  () => (payload) => (state, dispatch) => {\n    const { nodeType, attrs = null } = payload ?? {};\n    if (!nodeType) return false;\n    const tr = state.tr;\n    try {\n      const node = nodeType instanceof Node ? nodeType : nodeType.createAndFill(attrs);\n      if (!node) return false;\n      tr.replaceSelectionWith(node);\n    } catch {\n      return false;\n    }\n    dispatch?.(tr);\n    return true;\n  }\n);\nconst selectTextNearPosCommand = $command(\n  \"SelectTextNearPos\",\n  () => (payload) => (state, dispatch) => {\n    const { pos } = payload ?? {};\n    if (pos == null) return false;\n    const clamp = (value, min, max) => Math.min(Math.max(value, min), max);\n    const tr = state.tr;\n    try {\n      const $pos = state.doc.resolve(clamp(pos, 0, state.doc.content.size));\n      tr.setSelection(TextSelection.near($pos));\n    } catch {\n      return false;\n    }\n    dispatch?.(tr.scrollIntoView());\n    return true;\n  }\n);\nconst commands = [\n  turnIntoTextCommand,\n  wrapInBlockquoteCommand,\n  wrapInHeadingCommand,\n  downgradeHeadingCommand,\n  createCodeBlockCommand,\n  insertHardbreakCommand,\n  insertHrCommand,\n  insertImageCommand,\n  updateImageCommand,\n  wrapInOrderedListCommand,\n  wrapInBulletListCommand,\n  sinkListItemCommand,\n  splitListItemCommand,\n  liftListItemCommand,\n  liftFirstListItemCommand,\n  toggleEmphasisCommand,\n  toggleInlineCodeCommand,\n  toggleStrongCommand,\n  toggleLinkCommand,\n  updateLinkCommand,\n  isMarkSelectedCommand,\n  isNodeSelectedCommand,\n  clearTextInCurrentBlockCommand,\n  setBlockTypeCommand,\n  wrapInBlockTypeCommand,\n  addBlockTypeCommand,\n  selectTextNearPosCommand\n];\nconst keymap = [\n  blockquoteKeymap,\n  codeBlockKeymap,\n  hardbreakKeymap,\n  headingKeymap,\n  listItemKeymap,\n  orderedListKeymap,\n  bulletListKeymap,\n  paragraphKeymap,\n  emphasisKeymap,\n  inlineCodeKeymap,\n  strongKeymap\n].flat();\nconst remarkAddOrderInListPlugin = $remark(\n  \"remarkAddOrderInList\",\n  () => () => (tree) => {\n    visit(tree, \"list\", (node) => {\n      if (node.ordered) {\n        const start = node.start ?? 1;\n        node.children.forEach((child, index) => {\n          child.label = index + start;\n        });\n      }\n    });\n  }\n);\nwithMeta(remarkAddOrderInListPlugin.plugin, {\n  displayName: \"Remark<remarkAddOrderInListPlugin>\",\n  group: \"Remark\"\n});\nwithMeta(remarkAddOrderInListPlugin.options, {\n  displayName: \"RemarkConfig<remarkAddOrderInListPlugin>\",\n  group: \"Remark\"\n});\nconst remarkLineBreak = $remark(\n  \"remarkLineBreak\",\n  () => () => (tree) => {\n    const find = /[\\t ]*(?:\\r?\\n|\\r)/g;\n    visit(\n      tree,\n      \"text\",\n      (node, index, parent) => {\n        if (!node.value || typeof node.value !== \"string\") return;\n        const result = [];\n        let start = 0;\n        find.lastIndex = 0;\n        let match = find.exec(node.value);\n        while (match) {\n          const position = match.index;\n          if (start !== position)\n            result.push({\n              type: \"text\",\n              value: node.value.slice(start, position)\n            });\n          result.push({ type: \"break\", data: { isInline: true } });\n          start = position + match[0].length;\n          match = find.exec(node.value);\n        }\n        const hasResultAndIndex = result.length > 0 && parent && typeof index === \"number\";\n        if (!hasResultAndIndex) return;\n        if (start < node.value.length)\n          result.push({ type: \"text\", value: node.value.slice(start) });\n        parent.children.splice(index, 1, ...result);\n        return index + result.length;\n      }\n    );\n  }\n);\nwithMeta(remarkLineBreak.plugin, {\n  displayName: \"Remark<remarkLineBreak>\",\n  group: \"Remark\"\n});\nwithMeta(remarkLineBreak.options, {\n  displayName: \"RemarkConfig<remarkLineBreak>\",\n  group: \"Remark\"\n});\nconst remarkInlineLinkPlugin = $remark(\n  \"remarkInlineLink\",\n  () => remarkInlineLinks\n);\nwithMeta(remarkInlineLinkPlugin.plugin, {\n  displayName: \"Remark<remarkInlineLinkPlugin>\",\n  group: \"Remark\"\n});\nwithMeta(remarkInlineLinkPlugin.options, {\n  displayName: \"RemarkConfig<remarkInlineLinkPlugin>\",\n  group: \"Remark\"\n});\nconst isParent = (node) => !!node.children;\nconst isHTML = (node) => node.type === \"html\";\nfunction flatMapWithDepth(ast, fn) {\n  return transform(ast, 0, null)[0];\n  function transform(node, index, parent) {\n    if (isParent(node)) {\n      const out = [];\n      for (let i = 0, n = node.children.length; i < n; i++) {\n        const nthChild = node.children[i];\n        if (nthChild) {\n          const xs = transform(nthChild, i, node);\n          if (xs) {\n            for (let j = 0, m = xs.length; j < m; j++) {\n              const item = xs[j];\n              if (item) out.push(item);\n            }\n          }\n        }\n      }\n      node.children = out;\n    }\n    return fn(node, index, parent);\n  }\n}\nconst BLOCK_CONTAINER_TYPES = [\"root\", \"blockquote\", \"listItem\"];\nconst remarkHtmlTransformer = $remark(\n  \"remarkHTMLTransformer\",\n  () => () => (tree) => {\n    flatMapWithDepth(tree, (node, _index, parent) => {\n      if (!isHTML(node)) return [node];\n      if (parent && BLOCK_CONTAINER_TYPES.includes(parent.type)) {\n        node.children = [{ ...node }];\n        delete node.value;\n        node.type = \"paragraph\";\n      }\n      return [node];\n    });\n  }\n);\nwithMeta(remarkHtmlTransformer.plugin, {\n  displayName: \"Remark<remarkHtmlTransformer>\",\n  group: \"Remark\"\n});\nwithMeta(remarkHtmlTransformer.options, {\n  displayName: \"RemarkConfig<remarkHtmlTransformer>\",\n  group: \"Remark\"\n});\nconst remarkMarker = $remark(\n  \"remarkMarker\",\n  () => () => (tree, file) => {\n    const getMarker = (node) => {\n      return file.value.charAt(node.position.start.offset);\n    };\n    visit(\n      tree,\n      (node) => [\"strong\", \"emphasis\"].includes(node.type),\n      (node) => {\n        node.marker = getMarker(node);\n      }\n    );\n  }\n);\nwithMeta(remarkMarker.plugin, {\n  displayName: \"Remark<remarkMarker>\",\n  group: \"Remark\"\n});\nwithMeta(remarkMarker.options, {\n  displayName: \"RemarkConfig<remarkMarker>\",\n  group: \"Remark\"\n});\nconst inlineNodesCursorPlugin = $prose(() => {\n  let lock = false;\n  const inlineNodesCursorPluginKey = new PluginKey(\n    \"MILKDOWN_INLINE_NODES_CURSOR\"\n  );\n  const inlineNodesCursorPlugin2 = new Plugin({\n    key: inlineNodesCursorPluginKey,\n    state: {\n      init() {\n        return false;\n      },\n      apply(tr) {\n        if (!tr.selection.empty) return false;\n        const pos = tr.selection.$from;\n        const left = pos.nodeBefore;\n        const right = pos.nodeAfter;\n        if (left && right && left.isInline && !left.isText && right.isInline && !right.isText)\n          return true;\n        return false;\n      }\n    },\n    props: {\n      handleDOMEvents: {\n        compositionend: (view, e) => {\n          if (lock) {\n            lock = false;\n            requestAnimationFrame(() => {\n              const active = inlineNodesCursorPlugin2.getState(view.state);\n              if (active) {\n                const from = view.state.selection.from;\n                e.preventDefault();\n                view.dispatch(view.state.tr.insertText(e.data || \"\", from));\n              }\n            });\n            return true;\n          }\n          return false;\n        },\n        compositionstart: (view) => {\n          const active = inlineNodesCursorPlugin2.getState(view.state);\n          if (active) lock = true;\n          return false;\n        },\n        beforeinput: (view, e) => {\n          const active = inlineNodesCursorPlugin2.getState(view.state);\n          if (active && e instanceof InputEvent && e.data && !lock) {\n            const from = view.state.selection.from;\n            e.preventDefault();\n            view.dispatch(view.state.tr.insertText(e.data || \"\", from));\n            return true;\n          }\n          return false;\n        }\n      },\n      decorations(state) {\n        const active = inlineNodesCursorPlugin2.getState(state);\n        if (active) {\n          const pos = state.selection.$from;\n          const position = pos.pos;\n          const left = document.createElement(\"span\");\n          const leftDec = Decoration.widget(position, left, {\n            side: -1\n          });\n          const right = document.createElement(\"span\");\n          const rightDec = Decoration.widget(position, right);\n          setTimeout(() => {\n            left.contentEditable = \"true\";\n            right.contentEditable = \"true\";\n          });\n          return DecorationSet.create(state.doc, [leftDec, rightDec]);\n        }\n        return DecorationSet.empty;\n      }\n    }\n  });\n  return inlineNodesCursorPlugin2;\n});\nwithMeta(inlineNodesCursorPlugin, {\n  displayName: \"Prose<inlineNodesCursorPlugin>\",\n  group: \"Prose\"\n});\nconst hardbreakClearMarkPlugin = $prose((ctx) => {\n  return new Plugin({\n    key: new PluginKey(\"MILKDOWN_HARDBREAK_MARKS\"),\n    appendTransaction: (trs, _oldState, newState) => {\n      if (!trs.length) return;\n      const [tr] = trs;\n      if (!tr) return;\n      const [step] = tr.steps;\n      const isInsertHr = tr.getMeta(\"hardbreak\");\n      if (isInsertHr) {\n        if (!(step instanceof ReplaceStep)) return;\n        const { from } = step;\n        return newState.tr.setNodeMarkup(\n          from,\n          hardbreakSchema.type(ctx),\n          void 0,\n          []\n        );\n      }\n      const isAddMarkStep = step instanceof AddMarkStep;\n      if (isAddMarkStep) {\n        let _tr = newState.tr;\n        const { from, to } = step;\n        newState.doc.nodesBetween(from, to, (node, pos) => {\n          if (node.type === hardbreakSchema.type(ctx))\n            _tr = _tr.setNodeMarkup(\n              pos,\n              hardbreakSchema.type(ctx),\n              void 0,\n              []\n            );\n        });\n        return _tr;\n      }\n      return void 0;\n    }\n  });\n});\nwithMeta(hardbreakClearMarkPlugin, {\n  displayName: \"Prose<hardbreakClearMarkPlugin>\",\n  group: \"Prose\"\n});\nconst hardbreakFilterNodes = $ctx(\n  [\"table\", \"code_block\"],\n  \"hardbreakFilterNodes\"\n);\nwithMeta(hardbreakFilterNodes, {\n  displayName: \"Ctx<hardbreakFilterNodes>\",\n  group: \"Prose\"\n});\nconst hardbreakFilterPlugin = $prose((ctx) => {\n  const notIn = ctx.get(hardbreakFilterNodes.key);\n  return new Plugin({\n    key: new PluginKey(\"MILKDOWN_HARDBREAK_FILTER\"),\n    filterTransaction: (tr, state) => {\n      const isInsertHr = tr.getMeta(\"hardbreak\");\n      const [step] = tr.steps;\n      if (isInsertHr && step) {\n        const { from } = step;\n        const $from = state.doc.resolve(from);\n        let curDepth = $from.depth;\n        let canApply = true;\n        while (curDepth > 0) {\n          if (notIn.includes($from.node(curDepth).type.name)) canApply = false;\n          curDepth--;\n        }\n        return canApply;\n      }\n      return true;\n    }\n  });\n});\nwithMeta(hardbreakFilterPlugin, {\n  displayName: \"Prose<hardbreakFilterPlugin>\",\n  group: \"Prose\"\n});\nconst syncHeadingIdPlugin = $prose((ctx) => {\n  const headingIdPluginKey = new PluginKey(\"MILKDOWN_HEADING_ID\");\n  const updateId = (view) => {\n    if (view.composing) return;\n    const getId = ctx.get(headingIdGenerator.key);\n    const tr = view.state.tr.setMeta(\"addToHistory\", false);\n    let found = false;\n    const idMap = {};\n    view.state.doc.descendants((node, pos) => {\n      if (node.type === headingSchema.type(ctx)) {\n        if (node.textContent.trim().length === 0) return;\n        const attrs = node.attrs;\n        let id = getId(node);\n        if (idMap[id]) {\n          idMap[id] += 1;\n          id += `-#${idMap[id]}`;\n        } else {\n          idMap[id] = 1;\n        }\n        if (attrs.id !== id) {\n          found = true;\n          tr.setMeta(headingIdPluginKey, true).setNodeMarkup(pos, void 0, {\n            ...attrs,\n            id\n          });\n        }\n      }\n    });\n    if (found) view.dispatch(tr);\n  };\n  return new Plugin({\n    key: headingIdPluginKey,\n    view: (view) => {\n      updateId(view);\n      return {\n        update: (view2, prevState) => {\n          if (view2.state.doc.eq(prevState.doc)) return;\n          updateId(view2);\n        }\n      };\n    }\n  });\n});\nwithMeta(syncHeadingIdPlugin, {\n  displayName: \"Prose<syncHeadingIdPlugin>\",\n  group: \"Prose\"\n});\nconst syncListOrderPlugin = $prose((ctx) => {\n  const syncOrderLabel = (transactions, _oldState, newState) => {\n    if (!newState.selection || transactions.some(\n      (tr2) => tr2.getMeta(\"addToHistory\") === false || !tr2.isGeneric\n    ))\n      return null;\n    const orderedListType = orderedListSchema.type(ctx);\n    const bulletListType = bulletListSchema.type(ctx);\n    const listItemType = listItemSchema.type(ctx);\n    const handleNodeItem = (attrs, index) => {\n      let changed = false;\n      const expectedLabel = `${index + 1}.`;\n      if (attrs.label !== expectedLabel) {\n        attrs.label = expectedLabel;\n        changed = true;\n      }\n      return changed;\n    };\n    let tr = newState.tr;\n    let needDispatch = false;\n    newState.doc.descendants(\n      (node, pos, parent, index) => {\n        if (node.type === bulletListType) {\n          const base = node.maybeChild(0);\n          if (base?.type === listItemType && base.attrs.listType === \"ordered\") {\n            needDispatch = true;\n            tr.setNodeMarkup(pos, orderedListType, { spread: \"true\" });\n            node.descendants(\n              (child, pos2, _parent, index2) => {\n                if (child.type === listItemType) {\n                  const attrs = { ...child.attrs };\n                  const changed = handleNodeItem(attrs, index2);\n                  if (changed) tr = tr.setNodeMarkup(pos2, void 0, attrs);\n                }\n                return false;\n              }\n            );\n          }\n        } else if (node.type === listItemType && parent?.type === orderedListType) {\n          const attrs = { ...node.attrs };\n          let changed = false;\n          if (attrs.listType !== \"ordered\") {\n            attrs.listType = \"ordered\";\n            changed = true;\n          }\n          const base = parent?.maybeChild(0);\n          if (base) changed = handleNodeItem(attrs, index);\n          if (changed) {\n            tr = tr.setNodeMarkup(pos, void 0, attrs);\n            needDispatch = true;\n          }\n        }\n      }\n    );\n    return needDispatch ? tr.setMeta(\"addToHistory\", false) : null;\n  };\n  return new Plugin({\n    key: new PluginKey(\"MILKDOWN_KEEP_LIST_ORDER\"),\n    appendTransaction: syncOrderLabel\n  });\n});\nwithMeta(syncListOrderPlugin, {\n  displayName: \"Prose<syncListOrderPlugin>\",\n  group: \"Prose\"\n});\nconst plugins = [\n  hardbreakClearMarkPlugin,\n  hardbreakFilterNodes,\n  hardbreakFilterPlugin,\n  inlineNodesCursorPlugin,\n  remarkAddOrderInListPlugin,\n  remarkInlineLinkPlugin,\n  remarkLineBreak,\n  remarkHtmlTransformer,\n  remarkMarker,\n  remarkPreserveEmptyLinePlugin,\n  syncHeadingIdPlugin,\n  syncListOrderPlugin\n].flat();\nconst commonmark = [\n  schema,\n  inputRules,\n  markInputRules,\n  commands,\n  keymap,\n  plugins\n].flat();\nexport {\n  addBlockTypeCommand,\n  blockquoteAttr,\n  blockquoteKeymap,\n  blockquoteSchema,\n  bulletListAttr,\n  bulletListKeymap,\n  bulletListSchema,\n  clearTextInCurrentBlockCommand,\n  codeBlockAttr,\n  codeBlockKeymap,\n  codeBlockSchema,\n  commands,\n  commonmark,\n  createCodeBlockCommand,\n  createCodeBlockInputRule,\n  docSchema,\n  downgradeHeadingCommand,\n  emphasisAttr,\n  emphasisKeymap,\n  emphasisSchema,\n  emphasisStarInputRule,\n  emphasisUnderscoreInputRule,\n  hardbreakAttr,\n  hardbreakClearMarkPlugin,\n  hardbreakFilterNodes,\n  hardbreakFilterPlugin,\n  hardbreakKeymap,\n  hardbreakSchema,\n  headingAttr,\n  headingIdGenerator,\n  headingKeymap,\n  headingSchema,\n  hrAttr,\n  hrSchema,\n  htmlAttr,\n  htmlSchema,\n  imageAttr,\n  imageSchema,\n  inlineCodeAttr,\n  inlineCodeInputRule,\n  inlineCodeKeymap,\n  inlineCodeSchema,\n  inlineNodesCursorPlugin,\n  inputRules,\n  insertHardbreakCommand,\n  insertHrCommand,\n  insertHrInputRule,\n  insertImageCommand,\n  insertImageInputRule,\n  isMarkSelectedCommand,\n  isNodeSelectedCommand,\n  keymap,\n  liftFirstListItemCommand,\n  liftListItemCommand,\n  linkAttr,\n  linkSchema,\n  listItemAttr,\n  listItemKeymap,\n  listItemSchema,\n  markInputRules,\n  orderedListAttr,\n  orderedListKeymap,\n  orderedListSchema,\n  paragraphAttr,\n  paragraphKeymap,\n  paragraphSchema,\n  plugins,\n  remarkAddOrderInListPlugin,\n  remarkHtmlTransformer,\n  remarkInlineLinkPlugin,\n  remarkLineBreak,\n  remarkMarker,\n  remarkPreserveEmptyLinePlugin,\n  schema,\n  selectTextNearPosCommand,\n  setBlockTypeCommand,\n  sinkListItemCommand,\n  splitListItemCommand,\n  strongAttr,\n  strongInputRule,\n  strongKeymap,\n  strongSchema,\n  syncHeadingIdPlugin,\n  syncListOrderPlugin,\n  textSchema,\n  toggleEmphasisCommand,\n  toggleInlineCodeCommand,\n  toggleLinkCommand,\n  toggleStrongCommand,\n  turnIntoTextCommand,\n  updateCodeBlockLanguageCommand,\n  updateImageCommand,\n  updateLinkCommand,\n  wrapInBlockTypeCommand,\n  wrapInBlockquoteCommand,\n  wrapInBlockquoteInputRule,\n  wrapInBulletListCommand,\n  wrapInBulletListInputRule,\n  wrapInHeadingCommand,\n  wrapInHeadingInputRule,\n  wrapInOrderedListCommand,\n  wrapInOrderedListInputRule\n};\n//# sourceMappingURL=index.js.map\n","// src/index.ts\nimport { Plugin as Plugin2 } from \"prosemirror-state\";\n\n// src/cellselection.ts\nimport { Fragment, Slice } from \"prosemirror-model\";\nimport {\n  NodeSelection as NodeSelection2,\n  Selection,\n  SelectionRange,\n  TextSelection\n} from \"prosemirror-state\";\nimport { Decoration, DecorationSet } from \"prosemirror-view\";\n\n// src/tablemap.ts\nvar readFromCache;\nvar addToCache;\nif (typeof WeakMap != \"undefined\") {\n  let cache = /* @__PURE__ */ new WeakMap();\n  readFromCache = (key) => cache.get(key);\n  addToCache = (key, value) => {\n    cache.set(key, value);\n    return value;\n  };\n} else {\n  const cache = [];\n  const cacheSize = 10;\n  let cachePos = 0;\n  readFromCache = (key) => {\n    for (let i = 0; i < cache.length; i += 2)\n      if (cache[i] == key) return cache[i + 1];\n  };\n  addToCache = (key, value) => {\n    if (cachePos == cacheSize) cachePos = 0;\n    cache[cachePos++] = key;\n    return cache[cachePos++] = value;\n  };\n}\nvar TableMap = class {\n  constructor(width, height, map, problems) {\n    this.width = width;\n    this.height = height;\n    this.map = map;\n    this.problems = problems;\n  }\n  // Find the dimensions of the cell at the given position.\n  findCell(pos) {\n    for (let i = 0; i < this.map.length; i++) {\n      const curPos = this.map[i];\n      if (curPos != pos) continue;\n      const left = i % this.width;\n      const top = i / this.width | 0;\n      let right = left + 1;\n      let bottom = top + 1;\n      for (let j = 1; right < this.width && this.map[i + j] == curPos; j++) {\n        right++;\n      }\n      for (let j = 1; bottom < this.height && this.map[i + this.width * j] == curPos; j++) {\n        bottom++;\n      }\n      return { left, top, right, bottom };\n    }\n    throw new RangeError(`No cell with offset ${pos} found`);\n  }\n  // Find the left side of the cell at the given position.\n  colCount(pos) {\n    for (let i = 0; i < this.map.length; i++) {\n      if (this.map[i] == pos) {\n        return i % this.width;\n      }\n    }\n    throw new RangeError(`No cell with offset ${pos} found`);\n  }\n  // Find the next cell in the given direction, starting from the cell\n  // at `pos`, if any.\n  nextCell(pos, axis, dir) {\n    const { left, right, top, bottom } = this.findCell(pos);\n    if (axis == \"horiz\") {\n      if (dir < 0 ? left == 0 : right == this.width) return null;\n      return this.map[top * this.width + (dir < 0 ? left - 1 : right)];\n    } else {\n      if (dir < 0 ? top == 0 : bottom == this.height) return null;\n      return this.map[left + this.width * (dir < 0 ? top - 1 : bottom)];\n    }\n  }\n  // Get the rectangle spanning the two given cells.\n  rectBetween(a, b) {\n    const {\n      left: leftA,\n      right: rightA,\n      top: topA,\n      bottom: bottomA\n    } = this.findCell(a);\n    const {\n      left: leftB,\n      right: rightB,\n      top: topB,\n      bottom: bottomB\n    } = this.findCell(b);\n    return {\n      left: Math.min(leftA, leftB),\n      top: Math.min(topA, topB),\n      right: Math.max(rightA, rightB),\n      bottom: Math.max(bottomA, bottomB)\n    };\n  }\n  // Return the position of all cells that have the top left corner in\n  // the given rectangle.\n  cellsInRect(rect) {\n    const result = [];\n    const seen = {};\n    for (let row = rect.top; row < rect.bottom; row++) {\n      for (let col = rect.left; col < rect.right; col++) {\n        const index = row * this.width + col;\n        const pos = this.map[index];\n        if (seen[pos]) continue;\n        seen[pos] = true;\n        if (col == rect.left && col && this.map[index - 1] == pos || row == rect.top && row && this.map[index - this.width] == pos) {\n          continue;\n        }\n        result.push(pos);\n      }\n    }\n    return result;\n  }\n  // Return the position at which the cell at the given row and column\n  // starts, or would start, if a cell started there.\n  positionAt(row, col, table) {\n    for (let i = 0, rowStart = 0; ; i++) {\n      const rowEnd = rowStart + table.child(i).nodeSize;\n      if (i == row) {\n        let index = col + row * this.width;\n        const rowEndIndex = (row + 1) * this.width;\n        while (index < rowEndIndex && this.map[index] < rowStart) index++;\n        return index == rowEndIndex ? rowEnd - 1 : this.map[index];\n      }\n      rowStart = rowEnd;\n    }\n  }\n  // Find the table map for the given table node.\n  static get(table) {\n    return readFromCache(table) || addToCache(table, computeMap(table));\n  }\n};\nfunction computeMap(table) {\n  if (table.type.spec.tableRole != \"table\")\n    throw new RangeError(\"Not a table node: \" + table.type.name);\n  const width = findWidth(table), height = table.childCount;\n  const map = [];\n  let mapPos = 0;\n  let problems = null;\n  const colWidths = [];\n  for (let i = 0, e = width * height; i < e; i++) map[i] = 0;\n  for (let row = 0, pos = 0; row < height; row++) {\n    const rowNode = table.child(row);\n    pos++;\n    for (let i = 0; ; i++) {\n      while (mapPos < map.length && map[mapPos] != 0) mapPos++;\n      if (i == rowNode.childCount) break;\n      const cellNode = rowNode.child(i);\n      const { colspan, rowspan, colwidth } = cellNode.attrs;\n      for (let h = 0; h < rowspan; h++) {\n        if (h + row >= height) {\n          (problems || (problems = [])).push({\n            type: \"overlong_rowspan\",\n            pos,\n            n: rowspan - h\n          });\n          break;\n        }\n        const start = mapPos + h * width;\n        for (let w = 0; w < colspan; w++) {\n          if (map[start + w] == 0) map[start + w] = pos;\n          else\n            (problems || (problems = [])).push({\n              type: \"collision\",\n              row,\n              pos,\n              n: colspan - w\n            });\n          const colW = colwidth && colwidth[w];\n          if (colW) {\n            const widthIndex = (start + w) % width * 2, prev = colWidths[widthIndex];\n            if (prev == null || prev != colW && colWidths[widthIndex + 1] == 1) {\n              colWidths[widthIndex] = colW;\n              colWidths[widthIndex + 1] = 1;\n            } else if (prev == colW) {\n              colWidths[widthIndex + 1]++;\n            }\n          }\n        }\n      }\n      mapPos += colspan;\n      pos += cellNode.nodeSize;\n    }\n    const expectedPos = (row + 1) * width;\n    let missing = 0;\n    while (mapPos < expectedPos) if (map[mapPos++] == 0) missing++;\n    if (missing)\n      (problems || (problems = [])).push({ type: \"missing\", row, n: missing });\n    pos++;\n  }\n  if (width === 0 || height === 0)\n    (problems || (problems = [])).push({ type: \"zero_sized\" });\n  const tableMap = new TableMap(width, height, map, problems);\n  let badWidths = false;\n  for (let i = 0; !badWidths && i < colWidths.length; i += 2)\n    if (colWidths[i] != null && colWidths[i + 1] < height) badWidths = true;\n  if (badWidths) findBadColWidths(tableMap, colWidths, table);\n  return tableMap;\n}\nfunction findWidth(table) {\n  let width = -1;\n  let hasRowSpan = false;\n  for (let row = 0; row < table.childCount; row++) {\n    const rowNode = table.child(row);\n    let rowWidth = 0;\n    if (hasRowSpan)\n      for (let j = 0; j < row; j++) {\n        const prevRow = table.child(j);\n        for (let i = 0; i < prevRow.childCount; i++) {\n          const cell = prevRow.child(i);\n          if (j + cell.attrs.rowspan > row) rowWidth += cell.attrs.colspan;\n        }\n      }\n    for (let i = 0; i < rowNode.childCount; i++) {\n      const cell = rowNode.child(i);\n      rowWidth += cell.attrs.colspan;\n      if (cell.attrs.rowspan > 1) hasRowSpan = true;\n    }\n    if (width == -1) width = rowWidth;\n    else if (width != rowWidth) width = Math.max(width, rowWidth);\n  }\n  return width;\n}\nfunction findBadColWidths(map, colWidths, table) {\n  if (!map.problems) map.problems = [];\n  const seen = {};\n  for (let i = 0; i < map.map.length; i++) {\n    const pos = map.map[i];\n    if (seen[pos]) continue;\n    seen[pos] = true;\n    const node = table.nodeAt(pos);\n    if (!node) {\n      throw new RangeError(`No cell with offset ${pos} found`);\n    }\n    let updated = null;\n    const attrs = node.attrs;\n    for (let j = 0; j < attrs.colspan; j++) {\n      const col = (i + j) % map.width;\n      const colWidth = colWidths[col * 2];\n      if (colWidth != null && (!attrs.colwidth || attrs.colwidth[j] != colWidth))\n        (updated || (updated = freshColWidth(attrs)))[j] = colWidth;\n    }\n    if (updated)\n      map.problems.unshift({\n        type: \"colwidth mismatch\",\n        pos,\n        colwidth: updated\n      });\n  }\n}\nfunction freshColWidth(attrs) {\n  if (attrs.colwidth) return attrs.colwidth.slice();\n  const result = [];\n  for (let i = 0; i < attrs.colspan; i++) result.push(0);\n  return result;\n}\n\n// src/util.ts\nimport { PluginKey } from \"prosemirror-state\";\n\n// src/schema.ts\nfunction getCellAttrs(dom, extraAttrs) {\n  if (typeof dom === \"string\") {\n    return {};\n  }\n  const widthAttr = dom.getAttribute(\"data-colwidth\");\n  const widths = widthAttr && /^\\d+(,\\d+)*$/.test(widthAttr) ? widthAttr.split(\",\").map((s) => Number(s)) : null;\n  const colspan = Number(dom.getAttribute(\"colspan\") || 1);\n  const result = {\n    colspan,\n    rowspan: Number(dom.getAttribute(\"rowspan\") || 1),\n    colwidth: widths && widths.length == colspan ? widths : null\n  };\n  for (const prop in extraAttrs) {\n    const getter = extraAttrs[prop].getFromDOM;\n    const value = getter && getter(dom);\n    if (value != null) {\n      result[prop] = value;\n    }\n  }\n  return result;\n}\nfunction setCellAttrs(node, extraAttrs) {\n  const attrs = {};\n  if (node.attrs.colspan != 1) attrs.colspan = node.attrs.colspan;\n  if (node.attrs.rowspan != 1) attrs.rowspan = node.attrs.rowspan;\n  if (node.attrs.colwidth)\n    attrs[\"data-colwidth\"] = node.attrs.colwidth.join(\",\");\n  for (const prop in extraAttrs) {\n    const setter = extraAttrs[prop].setDOMAttr;\n    if (setter) setter(node.attrs[prop], attrs);\n  }\n  return attrs;\n}\nfunction validateColwidth(value) {\n  if (value === null) {\n    return;\n  }\n  if (!Array.isArray(value)) {\n    throw new TypeError(\"colwidth must be null or an array\");\n  }\n  for (const item of value) {\n    if (typeof item !== \"number\") {\n      throw new TypeError(\"colwidth must be null or an array of numbers\");\n    }\n  }\n}\nfunction tableNodes(options) {\n  const extraAttrs = options.cellAttributes || {};\n  const cellAttrs = {\n    colspan: { default: 1, validate: \"number\" },\n    rowspan: { default: 1, validate: \"number\" },\n    colwidth: { default: null, validate: validateColwidth }\n  };\n  for (const prop in extraAttrs)\n    cellAttrs[prop] = {\n      default: extraAttrs[prop].default,\n      validate: extraAttrs[prop].validate\n    };\n  return {\n    table: {\n      content: \"table_row+\",\n      tableRole: \"table\",\n      isolating: true,\n      group: options.tableGroup,\n      parseDOM: [{ tag: \"table\" }],\n      toDOM() {\n        return [\"table\", [\"tbody\", 0]];\n      }\n    },\n    table_row: {\n      content: \"(table_cell | table_header)*\",\n      tableRole: \"row\",\n      parseDOM: [{ tag: \"tr\" }],\n      toDOM() {\n        return [\"tr\", 0];\n      }\n    },\n    table_cell: {\n      content: options.cellContent,\n      attrs: cellAttrs,\n      tableRole: \"cell\",\n      isolating: true,\n      parseDOM: [\n        { tag: \"td\", getAttrs: (dom) => getCellAttrs(dom, extraAttrs) }\n      ],\n      toDOM(node) {\n        return [\"td\", setCellAttrs(node, extraAttrs), 0];\n      }\n    },\n    table_header: {\n      content: options.cellContent,\n      attrs: cellAttrs,\n      tableRole: \"header_cell\",\n      isolating: true,\n      parseDOM: [\n        { tag: \"th\", getAttrs: (dom) => getCellAttrs(dom, extraAttrs) }\n      ],\n      toDOM(node) {\n        return [\"th\", setCellAttrs(node, extraAttrs), 0];\n      }\n    }\n  };\n}\nfunction tableNodeTypes(schema) {\n  let result = schema.cached.tableNodeTypes;\n  if (!result) {\n    result = schema.cached.tableNodeTypes = {};\n    for (const name in schema.nodes) {\n      const type = schema.nodes[name], role = type.spec.tableRole;\n      if (role) result[role] = type;\n    }\n  }\n  return result;\n}\n\n// src/util.ts\nvar tableEditingKey = new PluginKey(\"selectingCells\");\nfunction cellAround($pos) {\n  for (let d = $pos.depth - 1; d > 0; d--)\n    if ($pos.node(d).type.spec.tableRole == \"row\")\n      return $pos.node(0).resolve($pos.before(d + 1));\n  return null;\n}\nfunction cellWrapping($pos) {\n  for (let d = $pos.depth; d > 0; d--) {\n    const role = $pos.node(d).type.spec.tableRole;\n    if (role === \"cell\" || role === \"header_cell\") return $pos.node(d);\n  }\n  return null;\n}\nfunction isInTable(state) {\n  const $head = state.selection.$head;\n  for (let d = $head.depth; d > 0; d--)\n    if ($head.node(d).type.spec.tableRole == \"row\") return true;\n  return false;\n}\nfunction selectionCell(state) {\n  const sel = state.selection;\n  if (\"$anchorCell\" in sel && sel.$anchorCell) {\n    return sel.$anchorCell.pos > sel.$headCell.pos ? sel.$anchorCell : sel.$headCell;\n  } else if (\"node\" in sel && sel.node && sel.node.type.spec.tableRole == \"cell\") {\n    return sel.$anchor;\n  }\n  const $cell = cellAround(sel.$head) || cellNear(sel.$head);\n  if ($cell) {\n    return $cell;\n  }\n  throw new RangeError(`No cell found around position ${sel.head}`);\n}\nfunction cellNear($pos) {\n  for (let after = $pos.nodeAfter, pos = $pos.pos; after; after = after.firstChild, pos++) {\n    const role = after.type.spec.tableRole;\n    if (role == \"cell\" || role == \"header_cell\") return $pos.doc.resolve(pos);\n  }\n  for (let before = $pos.nodeBefore, pos = $pos.pos; before; before = before.lastChild, pos--) {\n    const role = before.type.spec.tableRole;\n    if (role == \"cell\" || role == \"header_cell\")\n      return $pos.doc.resolve(pos - before.nodeSize);\n  }\n}\nfunction pointsAtCell($pos) {\n  return $pos.parent.type.spec.tableRole == \"row\" && !!$pos.nodeAfter;\n}\nfunction moveCellForward($pos) {\n  return $pos.node(0).resolve($pos.pos + $pos.nodeAfter.nodeSize);\n}\nfunction inSameTable($cellA, $cellB) {\n  return $cellA.depth == $cellB.depth && $cellA.pos >= $cellB.start(-1) && $cellA.pos <= $cellB.end(-1);\n}\nfunction findCell($pos) {\n  return TableMap.get($pos.node(-1)).findCell($pos.pos - $pos.start(-1));\n}\nfunction colCount($pos) {\n  return TableMap.get($pos.node(-1)).colCount($pos.pos - $pos.start(-1));\n}\nfunction nextCell($pos, axis, dir) {\n  const table = $pos.node(-1);\n  const map = TableMap.get(table);\n  const tableStart = $pos.start(-1);\n  const moved = map.nextCell($pos.pos - tableStart, axis, dir);\n  return moved == null ? null : $pos.node(0).resolve(tableStart + moved);\n}\nfunction removeColSpan(attrs, pos, n = 1) {\n  const result = { ...attrs, colspan: attrs.colspan - n };\n  if (result.colwidth) {\n    result.colwidth = result.colwidth.slice();\n    result.colwidth.splice(pos, n);\n    if (!result.colwidth.some((w) => w > 0)) result.colwidth = null;\n  }\n  return result;\n}\nfunction addColSpan(attrs, pos, n = 1) {\n  const result = { ...attrs, colspan: attrs.colspan + n };\n  if (result.colwidth) {\n    result.colwidth = result.colwidth.slice();\n    for (let i = 0; i < n; i++) result.colwidth.splice(pos, 0, 0);\n  }\n  return result;\n}\nfunction columnIsHeader(map, table, col) {\n  const headerCell = tableNodeTypes(table.type.schema).header_cell;\n  for (let row = 0; row < map.height; row++)\n    if (table.nodeAt(map.map[col + row * map.width]).type != headerCell)\n      return false;\n  return true;\n}\n\n// src/cellselection.ts\nvar CellSelection = class _CellSelection extends Selection {\n  // A table selection is identified by its anchor and head cells. The\n  // positions given to this constructor should point _before_ two\n  // cells in the same table. They may be the same, to select a single\n  // cell.\n  constructor($anchorCell, $headCell = $anchorCell) {\n    const table = $anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = $anchorCell.start(-1);\n    const rect = map.rectBetween(\n      $anchorCell.pos - tableStart,\n      $headCell.pos - tableStart\n    );\n    const doc = $anchorCell.node(0);\n    const cells = map.cellsInRect(rect).filter((p) => p != $headCell.pos - tableStart);\n    cells.unshift($headCell.pos - tableStart);\n    const ranges = cells.map((pos) => {\n      const cell = table.nodeAt(pos);\n      if (!cell) {\n        throw RangeError(`No cell with offset ${pos} found`);\n      }\n      const from = tableStart + pos + 1;\n      return new SelectionRange(\n        doc.resolve(from),\n        doc.resolve(from + cell.content.size)\n      );\n    });\n    super(ranges[0].$from, ranges[0].$to, ranges);\n    this.$anchorCell = $anchorCell;\n    this.$headCell = $headCell;\n  }\n  map(doc, mapping) {\n    const $anchorCell = doc.resolve(mapping.map(this.$anchorCell.pos));\n    const $headCell = doc.resolve(mapping.map(this.$headCell.pos));\n    if (pointsAtCell($anchorCell) && pointsAtCell($headCell) && inSameTable($anchorCell, $headCell)) {\n      const tableChanged = this.$anchorCell.node(-1) != $anchorCell.node(-1);\n      if (tableChanged && this.isRowSelection())\n        return _CellSelection.rowSelection($anchorCell, $headCell);\n      else if (tableChanged && this.isColSelection())\n        return _CellSelection.colSelection($anchorCell, $headCell);\n      else return new _CellSelection($anchorCell, $headCell);\n    }\n    return TextSelection.between($anchorCell, $headCell);\n  }\n  // Returns a rectangular slice of table rows containing the selected\n  // cells.\n  content() {\n    const table = this.$anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = this.$anchorCell.start(-1);\n    const rect = map.rectBetween(\n      this.$anchorCell.pos - tableStart,\n      this.$headCell.pos - tableStart\n    );\n    const seen = {};\n    const rows = [];\n    for (let row = rect.top; row < rect.bottom; row++) {\n      const rowContent = [];\n      for (let index = row * map.width + rect.left, col = rect.left; col < rect.right; col++, index++) {\n        const pos = map.map[index];\n        if (seen[pos]) continue;\n        seen[pos] = true;\n        const cellRect = map.findCell(pos);\n        let cell = table.nodeAt(pos);\n        if (!cell) {\n          throw RangeError(`No cell with offset ${pos} found`);\n        }\n        const extraLeft = rect.left - cellRect.left;\n        const extraRight = cellRect.right - rect.right;\n        if (extraLeft > 0 || extraRight > 0) {\n          let attrs = cell.attrs;\n          if (extraLeft > 0) {\n            attrs = removeColSpan(attrs, 0, extraLeft);\n          }\n          if (extraRight > 0) {\n            attrs = removeColSpan(\n              attrs,\n              attrs.colspan - extraRight,\n              extraRight\n            );\n          }\n          if (cellRect.left < rect.left) {\n            cell = cell.type.createAndFill(attrs);\n            if (!cell) {\n              throw RangeError(\n                `Could not create cell with attrs ${JSON.stringify(attrs)}`\n              );\n            }\n          } else {\n            cell = cell.type.create(attrs, cell.content);\n          }\n        }\n        if (cellRect.top < rect.top || cellRect.bottom > rect.bottom) {\n          const attrs = {\n            ...cell.attrs,\n            rowspan: Math.min(cellRect.bottom, rect.bottom) - Math.max(cellRect.top, rect.top)\n          };\n          if (cellRect.top < rect.top) {\n            cell = cell.type.createAndFill(attrs);\n          } else {\n            cell = cell.type.create(attrs, cell.content);\n          }\n        }\n        rowContent.push(cell);\n      }\n      rows.push(table.child(row).copy(Fragment.from(rowContent)));\n    }\n    const fragment = this.isColSelection() && this.isRowSelection() ? table : rows;\n    return new Slice(Fragment.from(fragment), 1, 1);\n  }\n  replace(tr, content = Slice.empty) {\n    const mapFrom = tr.steps.length, ranges = this.ranges;\n    for (let i = 0; i < ranges.length; i++) {\n      const { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n      tr.replace(\n        mapping.map($from.pos),\n        mapping.map($to.pos),\n        i ? Slice.empty : content\n      );\n    }\n    const sel = Selection.findFrom(\n      tr.doc.resolve(tr.mapping.slice(mapFrom).map(this.to)),\n      -1\n    );\n    if (sel) tr.setSelection(sel);\n  }\n  replaceWith(tr, node) {\n    this.replace(tr, new Slice(Fragment.from(node), 0, 0));\n  }\n  forEachCell(f) {\n    const table = this.$anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = this.$anchorCell.start(-1);\n    const cells = map.cellsInRect(\n      map.rectBetween(\n        this.$anchorCell.pos - tableStart,\n        this.$headCell.pos - tableStart\n      )\n    );\n    for (let i = 0; i < cells.length; i++) {\n      f(table.nodeAt(cells[i]), tableStart + cells[i]);\n    }\n  }\n  // True if this selection goes all the way from the top to the\n  // bottom of the table.\n  isColSelection() {\n    const anchorTop = this.$anchorCell.index(-1);\n    const headTop = this.$headCell.index(-1);\n    if (Math.min(anchorTop, headTop) > 0) return false;\n    const anchorBottom = anchorTop + this.$anchorCell.nodeAfter.attrs.rowspan;\n    const headBottom = headTop + this.$headCell.nodeAfter.attrs.rowspan;\n    return Math.max(anchorBottom, headBottom) == this.$headCell.node(-1).childCount;\n  }\n  // Returns the smallest column selection that covers the given anchor\n  // and head cell.\n  static colSelection($anchorCell, $headCell = $anchorCell) {\n    const table = $anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = $anchorCell.start(-1);\n    const anchorRect = map.findCell($anchorCell.pos - tableStart);\n    const headRect = map.findCell($headCell.pos - tableStart);\n    const doc = $anchorCell.node(0);\n    if (anchorRect.top <= headRect.top) {\n      if (anchorRect.top > 0)\n        $anchorCell = doc.resolve(tableStart + map.map[anchorRect.left]);\n      if (headRect.bottom < map.height)\n        $headCell = doc.resolve(\n          tableStart + map.map[map.width * (map.height - 1) + headRect.right - 1]\n        );\n    } else {\n      if (headRect.top > 0)\n        $headCell = doc.resolve(tableStart + map.map[headRect.left]);\n      if (anchorRect.bottom < map.height)\n        $anchorCell = doc.resolve(\n          tableStart + map.map[map.width * (map.height - 1) + anchorRect.right - 1]\n        );\n    }\n    return new _CellSelection($anchorCell, $headCell);\n  }\n  // True if this selection goes all the way from the left to the\n  // right of the table.\n  isRowSelection() {\n    const table = this.$anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = this.$anchorCell.start(-1);\n    const anchorLeft = map.colCount(this.$anchorCell.pos - tableStart);\n    const headLeft = map.colCount(this.$headCell.pos - tableStart);\n    if (Math.min(anchorLeft, headLeft) > 0) return false;\n    const anchorRight = anchorLeft + this.$anchorCell.nodeAfter.attrs.colspan;\n    const headRight = headLeft + this.$headCell.nodeAfter.attrs.colspan;\n    return Math.max(anchorRight, headRight) == map.width;\n  }\n  eq(other) {\n    return other instanceof _CellSelection && other.$anchorCell.pos == this.$anchorCell.pos && other.$headCell.pos == this.$headCell.pos;\n  }\n  // Returns the smallest row selection that covers the given anchor\n  // and head cell.\n  static rowSelection($anchorCell, $headCell = $anchorCell) {\n    const table = $anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = $anchorCell.start(-1);\n    const anchorRect = map.findCell($anchorCell.pos - tableStart);\n    const headRect = map.findCell($headCell.pos - tableStart);\n    const doc = $anchorCell.node(0);\n    if (anchorRect.left <= headRect.left) {\n      if (anchorRect.left > 0)\n        $anchorCell = doc.resolve(\n          tableStart + map.map[anchorRect.top * map.width]\n        );\n      if (headRect.right < map.width)\n        $headCell = doc.resolve(\n          tableStart + map.map[map.width * (headRect.top + 1) - 1]\n        );\n    } else {\n      if (headRect.left > 0)\n        $headCell = doc.resolve(tableStart + map.map[headRect.top * map.width]);\n      if (anchorRect.right < map.width)\n        $anchorCell = doc.resolve(\n          tableStart + map.map[map.width * (anchorRect.top + 1) - 1]\n        );\n    }\n    return new _CellSelection($anchorCell, $headCell);\n  }\n  toJSON() {\n    return {\n      type: \"cell\",\n      anchor: this.$anchorCell.pos,\n      head: this.$headCell.pos\n    };\n  }\n  static fromJSON(doc, json) {\n    return new _CellSelection(doc.resolve(json.anchor), doc.resolve(json.head));\n  }\n  static create(doc, anchorCell, headCell = anchorCell) {\n    return new _CellSelection(doc.resolve(anchorCell), doc.resolve(headCell));\n  }\n  getBookmark() {\n    return new CellBookmark(this.$anchorCell.pos, this.$headCell.pos);\n  }\n};\nCellSelection.prototype.visible = false;\nSelection.jsonID(\"cell\", CellSelection);\nvar CellBookmark = class _CellBookmark {\n  constructor(anchor, head) {\n    this.anchor = anchor;\n    this.head = head;\n  }\n  map(mapping) {\n    return new _CellBookmark(mapping.map(this.anchor), mapping.map(this.head));\n  }\n  resolve(doc) {\n    const $anchorCell = doc.resolve(this.anchor), $headCell = doc.resolve(this.head);\n    if ($anchorCell.parent.type.spec.tableRole == \"row\" && $headCell.parent.type.spec.tableRole == \"row\" && $anchorCell.index() < $anchorCell.parent.childCount && $headCell.index() < $headCell.parent.childCount && inSameTable($anchorCell, $headCell))\n      return new CellSelection($anchorCell, $headCell);\n    else return Selection.near($headCell, 1);\n  }\n};\nfunction drawCellSelection(state) {\n  if (!(state.selection instanceof CellSelection)) return null;\n  const cells = [];\n  state.selection.forEachCell((node, pos) => {\n    cells.push(\n      Decoration.node(pos, pos + node.nodeSize, { class: \"selectedCell\" })\n    );\n  });\n  return DecorationSet.create(state.doc, cells);\n}\nfunction isCellBoundarySelection({ $from, $to }) {\n  if ($from.pos == $to.pos || $from.pos < $to.pos - 6) return false;\n  let afterFrom = $from.pos;\n  let beforeTo = $to.pos;\n  let depth = $from.depth;\n  for (; depth >= 0; depth--, afterFrom++)\n    if ($from.after(depth + 1) < $from.end(depth)) break;\n  for (let d = $to.depth; d >= 0; d--, beforeTo--)\n    if ($to.before(d + 1) > $to.start(d)) break;\n  return afterFrom == beforeTo && /row|table/.test($from.node(depth).type.spec.tableRole);\n}\nfunction isTextSelectionAcrossCells({ $from, $to }) {\n  let fromCellBoundaryNode;\n  let toCellBoundaryNode;\n  for (let i = $from.depth; i > 0; i--) {\n    const node = $from.node(i);\n    if (node.type.spec.tableRole === \"cell\" || node.type.spec.tableRole === \"header_cell\") {\n      fromCellBoundaryNode = node;\n      break;\n    }\n  }\n  for (let i = $to.depth; i > 0; i--) {\n    const node = $to.node(i);\n    if (node.type.spec.tableRole === \"cell\" || node.type.spec.tableRole === \"header_cell\") {\n      toCellBoundaryNode = node;\n      break;\n    }\n  }\n  return fromCellBoundaryNode !== toCellBoundaryNode && $to.parentOffset === 0;\n}\nfunction normalizeSelection(state, tr, allowTableNodeSelection) {\n  const sel = (tr || state).selection;\n  const doc = (tr || state).doc;\n  let normalize;\n  let role;\n  if (sel instanceof NodeSelection2 && (role = sel.node.type.spec.tableRole)) {\n    if (role == \"cell\" || role == \"header_cell\") {\n      normalize = CellSelection.create(doc, sel.from);\n    } else if (role == \"row\") {\n      const $cell = doc.resolve(sel.from + 1);\n      normalize = CellSelection.rowSelection($cell, $cell);\n    } else if (!allowTableNodeSelection) {\n      const map = TableMap.get(sel.node);\n      const start = sel.from + 1;\n      const lastCell = start + map.map[map.width * map.height - 1];\n      normalize = CellSelection.create(doc, start + 1, lastCell);\n    }\n  } else if (sel instanceof TextSelection && isCellBoundarySelection(sel)) {\n    normalize = TextSelection.create(doc, sel.from);\n  } else if (sel instanceof TextSelection && isTextSelectionAcrossCells(sel)) {\n    normalize = TextSelection.create(doc, sel.$from.start(), sel.$from.end());\n  }\n  if (normalize) (tr || (tr = state.tr)).setSelection(normalize);\n  return tr;\n}\n\n// src/fixtables.ts\nimport { PluginKey as PluginKey2 } from \"prosemirror-state\";\nvar fixTablesKey = new PluginKey2(\"fix-tables\");\nfunction changedDescendants(old, cur, offset, f) {\n  const oldSize = old.childCount, curSize = cur.childCount;\n  outer: for (let i = 0, j = 0; i < curSize; i++) {\n    const child = cur.child(i);\n    for (let scan = j, e = Math.min(oldSize, i + 3); scan < e; scan++) {\n      if (old.child(scan) == child) {\n        j = scan + 1;\n        offset += child.nodeSize;\n        continue outer;\n      }\n    }\n    f(child, offset);\n    if (j < oldSize && old.child(j).sameMarkup(child))\n      changedDescendants(old.child(j), child, offset + 1, f);\n    else child.nodesBetween(0, child.content.size, f, offset + 1);\n    offset += child.nodeSize;\n  }\n}\nfunction fixTables(state, oldState) {\n  let tr;\n  const check = (node, pos) => {\n    if (node.type.spec.tableRole == \"table\")\n      tr = fixTable(state, node, pos, tr);\n  };\n  if (!oldState) state.doc.descendants(check);\n  else if (oldState.doc != state.doc)\n    changedDescendants(oldState.doc, state.doc, 0, check);\n  return tr;\n}\nfunction fixTable(state, table, tablePos, tr) {\n  const map = TableMap.get(table);\n  if (!map.problems) return tr;\n  if (!tr) tr = state.tr;\n  const mustAdd = [];\n  for (let i = 0; i < map.height; i++) mustAdd.push(0);\n  for (let i = 0; i < map.problems.length; i++) {\n    const prob = map.problems[i];\n    if (prob.type == \"collision\") {\n      const cell = table.nodeAt(prob.pos);\n      if (!cell) continue;\n      const attrs = cell.attrs;\n      for (let j = 0; j < attrs.rowspan; j++) mustAdd[prob.row + j] += prob.n;\n      tr.setNodeMarkup(\n        tr.mapping.map(tablePos + 1 + prob.pos),\n        null,\n        removeColSpan(attrs, attrs.colspan - prob.n, prob.n)\n      );\n    } else if (prob.type == \"missing\") {\n      mustAdd[prob.row] += prob.n;\n    } else if (prob.type == \"overlong_rowspan\") {\n      const cell = table.nodeAt(prob.pos);\n      if (!cell) continue;\n      tr.setNodeMarkup(tr.mapping.map(tablePos + 1 + prob.pos), null, {\n        ...cell.attrs,\n        rowspan: cell.attrs.rowspan - prob.n\n      });\n    } else if (prob.type == \"colwidth mismatch\") {\n      const cell = table.nodeAt(prob.pos);\n      if (!cell) continue;\n      tr.setNodeMarkup(tr.mapping.map(tablePos + 1 + prob.pos), null, {\n        ...cell.attrs,\n        colwidth: prob.colwidth\n      });\n    } else if (prob.type == \"zero_sized\") {\n      const pos = tr.mapping.map(tablePos);\n      tr.delete(pos, pos + table.nodeSize);\n    }\n  }\n  let first, last;\n  for (let i = 0; i < mustAdd.length; i++)\n    if (mustAdd[i]) {\n      if (first == null) first = i;\n      last = i;\n    }\n  for (let i = 0, pos = tablePos + 1; i < map.height; i++) {\n    const row = table.child(i);\n    const end = pos + row.nodeSize;\n    const add = mustAdd[i];\n    if (add > 0) {\n      let role = \"cell\";\n      if (row.firstChild) {\n        role = row.firstChild.type.spec.tableRole;\n      }\n      const nodes = [];\n      for (let j = 0; j < add; j++) {\n        const node = tableNodeTypes(state.schema)[role].createAndFill();\n        if (node) nodes.push(node);\n      }\n      const side = (i == 0 || first == i - 1) && last == i ? pos + 1 : end - 1;\n      tr.insert(tr.mapping.map(side), nodes);\n    }\n    pos = end;\n  }\n  return tr.setMeta(fixTablesKey, { fixTables: true });\n}\n\n// src/input.ts\nimport { keydownHandler } from \"prosemirror-keymap\";\nimport { Fragment as Fragment4 } from \"prosemirror-model\";\nimport {\n  Selection as Selection2,\n  TextSelection as TextSelection3\n} from \"prosemirror-state\";\n\n// src/commands.ts\nimport {\n  Fragment as Fragment2,\n  Slice as Slice2\n} from \"prosemirror-model\";\nimport {\n  TextSelection as TextSelection2\n} from \"prosemirror-state\";\n\n// src/utils/convert.ts\nfunction convertTableNodeToArrayOfRows(tableNode) {\n  const map = TableMap.get(tableNode);\n  const rows = [];\n  const rowCount = map.height;\n  const colCount2 = map.width;\n  for (let rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n    const row = [];\n    for (let colIndex = 0; colIndex < colCount2; colIndex++) {\n      const cellIndex = rowIndex * colCount2 + colIndex;\n      const cellPos = map.map[cellIndex];\n      if (rowIndex > 0) {\n        const topCellIndex = cellIndex - colCount2;\n        const topCellPos = map.map[topCellIndex];\n        if (cellPos === topCellPos) {\n          row.push(null);\n          continue;\n        }\n      }\n      if (colIndex > 0) {\n        const leftCellIndex = cellIndex - 1;\n        const leftCellPos = map.map[leftCellIndex];\n        if (cellPos === leftCellPos) {\n          row.push(null);\n          continue;\n        }\n      }\n      row.push(tableNode.nodeAt(cellPos));\n    }\n    rows.push(row);\n  }\n  return rows;\n}\nfunction convertArrayOfRowsToTableNode(tableNode, arrayOfNodes) {\n  const newRows = [];\n  const map = TableMap.get(tableNode);\n  const rowCount = map.height;\n  const colCount2 = map.width;\n  for (let rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n    const oldRow = tableNode.child(rowIndex);\n    const newCells = [];\n    for (let colIndex = 0; colIndex < colCount2; colIndex++) {\n      const cell = arrayOfNodes[rowIndex][colIndex];\n      if (!cell) {\n        continue;\n      }\n      const cellPos = map.map[rowIndex * map.width + colIndex];\n      const oldCell = tableNode.nodeAt(cellPos);\n      if (!oldCell) {\n        continue;\n      }\n      const newCell = oldCell.type.createChecked(\n        cell.attrs,\n        cell.content,\n        cell.marks\n      );\n      newCells.push(newCell);\n    }\n    const newRow = oldRow.type.createChecked(\n      oldRow.attrs,\n      newCells,\n      oldRow.marks\n    );\n    newRows.push(newRow);\n  }\n  const newTable = tableNode.type.createChecked(\n    tableNode.attrs,\n    newRows,\n    tableNode.marks\n  );\n  return newTable;\n}\n\n// src/utils/query.ts\nfunction isCellSelection(value) {\n  return value instanceof CellSelection;\n}\nfunction findTable($pos) {\n  return findParentNode((node) => node.type.spec.tableRole === \"table\", $pos);\n}\nfunction findCellRange(selection, anchorHit, headHit) {\n  var _a, _b;\n  if (anchorHit == null && headHit == null && isCellSelection(selection)) {\n    return [selection.$anchorCell, selection.$headCell];\n  }\n  const anchor = (_a = anchorHit != null ? anchorHit : headHit) != null ? _a : selection.anchor;\n  const head = (_b = headHit != null ? headHit : anchorHit) != null ? _b : selection.head;\n  const doc = selection.$head.doc;\n  const $anchorCell = findCellPos(doc, anchor);\n  const $headCell = findCellPos(doc, head);\n  if ($anchorCell && $headCell && inSameTable($anchorCell, $headCell)) {\n    return [$anchorCell, $headCell];\n  }\n  return null;\n}\nfunction findCellPos(doc, pos) {\n  const $pos = doc.resolve(pos);\n  return cellAround($pos) || cellNear($pos);\n}\nfunction findParentNode(predicate, $pos) {\n  for (let depth = $pos.depth; depth >= 0; depth -= 1) {\n    const node = $pos.node(depth);\n    if (predicate(node)) {\n      const pos = depth === 0 ? 0 : $pos.before(depth);\n      const start = $pos.start(depth);\n      return { node, pos, start, depth };\n    }\n  }\n  return null;\n}\n\n// src/utils/get-cells.ts\nfunction getCellsInColumn(columnIndex, selection) {\n  const table = findTable(selection.$from);\n  if (!table) {\n    return;\n  }\n  const map = TableMap.get(table.node);\n  if (columnIndex < 0 || columnIndex > map.width - 1) {\n    return;\n  }\n  const cells = map.cellsInRect({\n    left: columnIndex,\n    right: columnIndex + 1,\n    top: 0,\n    bottom: map.height\n  });\n  return cells.map((nodePos) => {\n    const node = table.node.nodeAt(nodePos);\n    const pos = nodePos + table.start;\n    return { pos, start: pos + 1, node, depth: table.depth + 2 };\n  });\n}\nfunction getCellsInRow(rowIndex, selection) {\n  const table = findTable(selection.$from);\n  if (!table) {\n    return;\n  }\n  const map = TableMap.get(table.node);\n  if (rowIndex < 0 || rowIndex > map.height - 1) {\n    return;\n  }\n  const cells = map.cellsInRect({\n    left: 0,\n    right: map.width,\n    top: rowIndex,\n    bottom: rowIndex + 1\n  });\n  return cells.map((nodePos) => {\n    const node = table.node.nodeAt(nodePos);\n    const pos = nodePos + table.start;\n    return { pos, start: pos + 1, node, depth: table.depth + 2 };\n  });\n}\n\n// src/utils/selection-range.ts\nfunction getSelectionRangeInColumn(tr, startColIndex, endColIndex = startColIndex) {\n  let startIndex = startColIndex;\n  let endIndex = endColIndex;\n  for (let i = startColIndex; i >= 0; i--) {\n    const cells = getCellsInColumn(i, tr.selection);\n    if (cells) {\n      cells.forEach((cell) => {\n        const maybeEndIndex = cell.node.attrs.colspan + i - 1;\n        if (maybeEndIndex >= startIndex) {\n          startIndex = i;\n        }\n        if (maybeEndIndex > endIndex) {\n          endIndex = maybeEndIndex;\n        }\n      });\n    }\n  }\n  for (let i = startColIndex; i <= endIndex; i++) {\n    const cells = getCellsInColumn(i, tr.selection);\n    if (cells) {\n      cells.forEach((cell) => {\n        const maybeEndIndex = cell.node.attrs.colspan + i - 1;\n        if (cell.node.attrs.colspan > 1 && maybeEndIndex > endIndex) {\n          endIndex = maybeEndIndex;\n        }\n      });\n    }\n  }\n  const indexes = [];\n  for (let i = startIndex; i <= endIndex; i++) {\n    const maybeCells = getCellsInColumn(i, tr.selection);\n    if (maybeCells && maybeCells.length > 0) {\n      indexes.push(i);\n    }\n  }\n  startIndex = indexes[0];\n  endIndex = indexes[indexes.length - 1];\n  const firstSelectedColumnCells = getCellsInColumn(startIndex, tr.selection);\n  const firstRowCells = getCellsInRow(0, tr.selection);\n  if (!firstSelectedColumnCells || !firstRowCells) {\n    return;\n  }\n  const $anchor = tr.doc.resolve(\n    firstSelectedColumnCells[firstSelectedColumnCells.length - 1].pos\n  );\n  let headCell;\n  for (let i = endIndex; i >= startIndex; i--) {\n    const columnCells = getCellsInColumn(i, tr.selection);\n    if (columnCells && columnCells.length > 0) {\n      for (let j = firstRowCells.length - 1; j >= 0; j--) {\n        if (firstRowCells[j].pos === columnCells[0].pos) {\n          headCell = columnCells[0];\n          break;\n        }\n      }\n      if (headCell) {\n        break;\n      }\n    }\n  }\n  if (!headCell) {\n    return;\n  }\n  const $head = tr.doc.resolve(headCell.pos);\n  return { $anchor, $head, indexes };\n}\nfunction getSelectionRangeInRow(tr, startRowIndex, endRowIndex = startRowIndex) {\n  let startIndex = startRowIndex;\n  let endIndex = endRowIndex;\n  for (let i = startRowIndex; i >= 0; i--) {\n    const cells = getCellsInRow(i, tr.selection);\n    if (cells) {\n      cells.forEach((cell) => {\n        const maybeEndIndex = cell.node.attrs.rowspan + i - 1;\n        if (maybeEndIndex >= startIndex) {\n          startIndex = i;\n        }\n        if (maybeEndIndex > endIndex) {\n          endIndex = maybeEndIndex;\n        }\n      });\n    }\n  }\n  for (let i = startRowIndex; i <= endIndex; i++) {\n    const cells = getCellsInRow(i, tr.selection);\n    if (cells) {\n      cells.forEach((cell) => {\n        const maybeEndIndex = cell.node.attrs.rowspan + i - 1;\n        if (cell.node.attrs.rowspan > 1 && maybeEndIndex > endIndex) {\n          endIndex = maybeEndIndex;\n        }\n      });\n    }\n  }\n  const indexes = [];\n  for (let i = startIndex; i <= endIndex; i++) {\n    const maybeCells = getCellsInRow(i, tr.selection);\n    if (maybeCells && maybeCells.length > 0) {\n      indexes.push(i);\n    }\n  }\n  startIndex = indexes[0];\n  endIndex = indexes[indexes.length - 1];\n  const firstSelectedRowCells = getCellsInRow(startIndex, tr.selection);\n  const firstColumnCells = getCellsInColumn(0, tr.selection);\n  if (!firstSelectedRowCells || !firstColumnCells) {\n    return;\n  }\n  const $anchor = tr.doc.resolve(\n    firstSelectedRowCells[firstSelectedRowCells.length - 1].pos\n  );\n  let headCell;\n  for (let i = endIndex; i >= startIndex; i--) {\n    const rowCells = getCellsInRow(i, tr.selection);\n    if (rowCells && rowCells.length > 0) {\n      for (let j = firstColumnCells.length - 1; j >= 0; j--) {\n        if (firstColumnCells[j].pos === rowCells[0].pos) {\n          headCell = rowCells[0];\n          break;\n        }\n      }\n      if (headCell) {\n        break;\n      }\n    }\n  }\n  if (!headCell) {\n    return;\n  }\n  const $head = tr.doc.resolve(headCell.pos);\n  return { $anchor, $head, indexes };\n}\n\n// src/utils/move-row-in-array-of-rows.ts\nfunction moveRowInArrayOfRows(rows, indexesOrigin, indexesTarget, directionOverride) {\n  const direction = indexesOrigin[0] > indexesTarget[0] ? -1 : 1;\n  const rowsExtracted = rows.splice(indexesOrigin[0], indexesOrigin.length);\n  const positionOffset = rowsExtracted.length % 2 === 0 ? 1 : 0;\n  let target;\n  if (directionOverride === -1 && direction === 1) {\n    target = indexesTarget[0] - 1;\n  } else if (directionOverride === 1 && direction === -1) {\n    target = indexesTarget[indexesTarget.length - 1] - positionOffset + 1;\n  } else {\n    target = direction === -1 ? indexesTarget[0] : indexesTarget[indexesTarget.length - 1] - positionOffset;\n  }\n  rows.splice(target, 0, ...rowsExtracted);\n  return rows;\n}\n\n// src/utils/transpose.ts\nfunction transpose(array) {\n  return array[0].map((_, i) => {\n    return array.map((column) => column[i]);\n  });\n}\n\n// src/utils/move-column.ts\nfunction moveColumn(moveColParams) {\n  var _a, _b;\n  const { tr, originIndex, targetIndex, select, pos } = moveColParams;\n  const $pos = tr.doc.resolve(pos);\n  const table = findTable($pos);\n  if (!table) return false;\n  const indexesOriginColumn = (_a = getSelectionRangeInColumn(\n    tr,\n    originIndex\n  )) == null ? void 0 : _a.indexes;\n  const indexesTargetColumn = (_b = getSelectionRangeInColumn(\n    tr,\n    targetIndex\n  )) == null ? void 0 : _b.indexes;\n  if (!indexesOriginColumn || !indexesTargetColumn) return false;\n  if (indexesOriginColumn.includes(targetIndex)) return false;\n  const newTable = moveTableColumn(\n    table.node,\n    indexesOriginColumn,\n    indexesTargetColumn,\n    0\n  );\n  tr.replaceWith(table.pos, table.pos + table.node.nodeSize, newTable);\n  if (!select) return true;\n  const map = TableMap.get(newTable);\n  const start = table.start;\n  const index = targetIndex;\n  const lastCell = map.positionAt(map.height - 1, index, newTable);\n  const $lastCell = tr.doc.resolve(start + lastCell);\n  const firstCell = map.positionAt(0, index, newTable);\n  const $firstCell = tr.doc.resolve(start + firstCell);\n  tr.setSelection(CellSelection.colSelection($lastCell, $firstCell));\n  return true;\n}\nfunction moveTableColumn(table, indexesOrigin, indexesTarget, direction) {\n  let rows = transpose(convertTableNodeToArrayOfRows(table));\n  rows = moveRowInArrayOfRows(rows, indexesOrigin, indexesTarget, direction);\n  rows = transpose(rows);\n  return convertArrayOfRowsToTableNode(table, rows);\n}\n\n// src/utils/move-row.ts\nfunction moveRow(moveRowParams) {\n  var _a, _b;\n  const { tr, originIndex, targetIndex, select, pos } = moveRowParams;\n  const $pos = tr.doc.resolve(pos);\n  const table = findTable($pos);\n  if (!table) return false;\n  const indexesOriginRow = (_a = getSelectionRangeInRow(tr, originIndex)) == null ? void 0 : _a.indexes;\n  const indexesTargetRow = (_b = getSelectionRangeInRow(tr, targetIndex)) == null ? void 0 : _b.indexes;\n  if (!indexesOriginRow || !indexesTargetRow) return false;\n  if (indexesOriginRow.includes(targetIndex)) return false;\n  const newTable = moveTableRow(\n    table.node,\n    indexesOriginRow,\n    indexesTargetRow,\n    0\n  );\n  tr.replaceWith(table.pos, table.pos + table.node.nodeSize, newTable);\n  if (!select) return true;\n  const map = TableMap.get(newTable);\n  const start = table.start;\n  const index = targetIndex;\n  const lastCell = map.positionAt(index, map.width - 1, newTable);\n  const $lastCell = tr.doc.resolve(start + lastCell);\n  const firstCell = map.positionAt(index, 0, newTable);\n  const $firstCell = tr.doc.resolve(start + firstCell);\n  tr.setSelection(CellSelection.rowSelection($lastCell, $firstCell));\n  return true;\n}\nfunction moveTableRow(table, indexesOrigin, indexesTarget, direction) {\n  let rows = convertTableNodeToArrayOfRows(table);\n  rows = moveRowInArrayOfRows(rows, indexesOrigin, indexesTarget, direction);\n  return convertArrayOfRowsToTableNode(table, rows);\n}\n\n// src/commands.ts\nfunction selectedRect(state) {\n  const sel = state.selection;\n  const $pos = selectionCell(state);\n  const table = $pos.node(-1);\n  const tableStart = $pos.start(-1);\n  const map = TableMap.get(table);\n  const rect = sel instanceof CellSelection ? map.rectBetween(\n    sel.$anchorCell.pos - tableStart,\n    sel.$headCell.pos - tableStart\n  ) : map.findCell($pos.pos - tableStart);\n  return { ...rect, tableStart, map, table };\n}\nfunction addColumn(tr, { map, tableStart, table }, col) {\n  let refColumn = col > 0 ? -1 : 0;\n  if (columnIsHeader(map, table, col + refColumn)) {\n    refColumn = col == 0 || col == map.width ? null : 0;\n  }\n  for (let row = 0; row < map.height; row++) {\n    const index = row * map.width + col;\n    if (col > 0 && col < map.width && map.map[index - 1] == map.map[index]) {\n      const pos = map.map[index];\n      const cell = table.nodeAt(pos);\n      tr.setNodeMarkup(\n        tr.mapping.map(tableStart + pos),\n        null,\n        addColSpan(cell.attrs, col - map.colCount(pos))\n      );\n      row += cell.attrs.rowspan - 1;\n    } else {\n      const type = refColumn == null ? tableNodeTypes(table.type.schema).cell : table.nodeAt(map.map[index + refColumn]).type;\n      const pos = map.positionAt(row, col, table);\n      tr.insert(tr.mapping.map(tableStart + pos), type.createAndFill());\n    }\n  }\n  return tr;\n}\nfunction addColumnBefore(state, dispatch) {\n  if (!isInTable(state)) return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addColumn(state.tr, rect, rect.left));\n  }\n  return true;\n}\nfunction addColumnAfter(state, dispatch) {\n  if (!isInTable(state)) return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addColumn(state.tr, rect, rect.right));\n  }\n  return true;\n}\nfunction removeColumn(tr, { map, table, tableStart }, col) {\n  const mapStart = tr.mapping.maps.length;\n  for (let row = 0; row < map.height; ) {\n    const index = row * map.width + col;\n    const pos = map.map[index];\n    const cell = table.nodeAt(pos);\n    const attrs = cell.attrs;\n    if (col > 0 && map.map[index - 1] == pos || col < map.width - 1 && map.map[index + 1] == pos) {\n      tr.setNodeMarkup(\n        tr.mapping.slice(mapStart).map(tableStart + pos),\n        null,\n        removeColSpan(attrs, col - map.colCount(pos))\n      );\n    } else {\n      const start = tr.mapping.slice(mapStart).map(tableStart + pos);\n      tr.delete(start, start + cell.nodeSize);\n    }\n    row += attrs.rowspan;\n  }\n}\nfunction deleteColumn(state, dispatch) {\n  if (!isInTable(state)) return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    const tr = state.tr;\n    if (rect.left == 0 && rect.right == rect.map.width) return false;\n    for (let i = rect.right - 1; ; i--) {\n      removeColumn(tr, rect, i);\n      if (i == rect.left) break;\n      const table = rect.tableStart ? tr.doc.nodeAt(rect.tableStart - 1) : tr.doc;\n      if (!table) {\n        throw RangeError(\"No table found\");\n      }\n      rect.table = table;\n      rect.map = TableMap.get(table);\n    }\n    dispatch(tr);\n  }\n  return true;\n}\nfunction rowIsHeader(map, table, row) {\n  var _a;\n  const headerCell = tableNodeTypes(table.type.schema).header_cell;\n  for (let col = 0; col < map.width; col++)\n    if (((_a = table.nodeAt(map.map[col + row * map.width])) == null ? void 0 : _a.type) != headerCell)\n      return false;\n  return true;\n}\nfunction addRow(tr, { map, tableStart, table }, row) {\n  var _a;\n  let rowPos = tableStart;\n  for (let i = 0; i < row; i++) rowPos += table.child(i).nodeSize;\n  const cells = [];\n  let refRow = row > 0 ? -1 : 0;\n  if (rowIsHeader(map, table, row + refRow))\n    refRow = row == 0 || row == map.height ? null : 0;\n  for (let col = 0, index = map.width * row; col < map.width; col++, index++) {\n    if (row > 0 && row < map.height && map.map[index] == map.map[index - map.width]) {\n      const pos = map.map[index];\n      const attrs = table.nodeAt(pos).attrs;\n      tr.setNodeMarkup(tableStart + pos, null, {\n        ...attrs,\n        rowspan: attrs.rowspan + 1\n      });\n      col += attrs.colspan - 1;\n    } else {\n      const type = refRow == null ? tableNodeTypes(table.type.schema).cell : (_a = table.nodeAt(map.map[index + refRow * map.width])) == null ? void 0 : _a.type;\n      const node = type == null ? void 0 : type.createAndFill();\n      if (node) cells.push(node);\n    }\n  }\n  tr.insert(rowPos, tableNodeTypes(table.type.schema).row.create(null, cells));\n  return tr;\n}\nfunction addRowBefore(state, dispatch) {\n  if (!isInTable(state)) return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addRow(state.tr, rect, rect.top));\n  }\n  return true;\n}\nfunction addRowAfter(state, dispatch) {\n  if (!isInTable(state)) return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addRow(state.tr, rect, rect.bottom));\n  }\n  return true;\n}\nfunction removeRow(tr, { map, table, tableStart }, row) {\n  let rowPos = 0;\n  for (let i = 0; i < row; i++) rowPos += table.child(i).nodeSize;\n  const nextRow = rowPos + table.child(row).nodeSize;\n  const mapFrom = tr.mapping.maps.length;\n  tr.delete(rowPos + tableStart, nextRow + tableStart);\n  const seen = /* @__PURE__ */ new Set();\n  for (let col = 0, index = row * map.width; col < map.width; col++, index++) {\n    const pos = map.map[index];\n    if (seen.has(pos)) continue;\n    seen.add(pos);\n    if (row > 0 && pos == map.map[index - map.width]) {\n      const attrs = table.nodeAt(pos).attrs;\n      tr.setNodeMarkup(tr.mapping.slice(mapFrom).map(pos + tableStart), null, {\n        ...attrs,\n        rowspan: attrs.rowspan - 1\n      });\n      col += attrs.colspan - 1;\n    } else if (row < map.height && pos == map.map[index + map.width]) {\n      const cell = table.nodeAt(pos);\n      const attrs = cell.attrs;\n      const copy = cell.type.create(\n        { ...attrs, rowspan: cell.attrs.rowspan - 1 },\n        cell.content\n      );\n      const newPos = map.positionAt(row + 1, col, table);\n      tr.insert(tr.mapping.slice(mapFrom).map(tableStart + newPos), copy);\n      col += attrs.colspan - 1;\n    }\n  }\n}\nfunction deleteRow(state, dispatch) {\n  if (!isInTable(state)) return false;\n  if (dispatch) {\n    const rect = selectedRect(state), tr = state.tr;\n    if (rect.top == 0 && rect.bottom == rect.map.height) return false;\n    for (let i = rect.bottom - 1; ; i--) {\n      removeRow(tr, rect, i);\n      if (i == rect.top) break;\n      const table = rect.tableStart ? tr.doc.nodeAt(rect.tableStart - 1) : tr.doc;\n      if (!table) {\n        throw RangeError(\"No table found\");\n      }\n      rect.table = table;\n      rect.map = TableMap.get(rect.table);\n    }\n    dispatch(tr);\n  }\n  return true;\n}\nfunction isEmpty(cell) {\n  const c = cell.content;\n  return c.childCount == 1 && c.child(0).isTextblock && c.child(0).childCount == 0;\n}\nfunction cellsOverlapRectangle({ width, height, map }, rect) {\n  let indexTop = rect.top * width + rect.left, indexLeft = indexTop;\n  let indexBottom = (rect.bottom - 1) * width + rect.left, indexRight = indexTop + (rect.right - rect.left - 1);\n  for (let i = rect.top; i < rect.bottom; i++) {\n    if (rect.left > 0 && map[indexLeft] == map[indexLeft - 1] || rect.right < width && map[indexRight] == map[indexRight + 1])\n      return true;\n    indexLeft += width;\n    indexRight += width;\n  }\n  for (let i = rect.left; i < rect.right; i++) {\n    if (rect.top > 0 && map[indexTop] == map[indexTop - width] || rect.bottom < height && map[indexBottom] == map[indexBottom + width])\n      return true;\n    indexTop++;\n    indexBottom++;\n  }\n  return false;\n}\nfunction mergeCells(state, dispatch) {\n  const sel = state.selection;\n  if (!(sel instanceof CellSelection) || sel.$anchorCell.pos == sel.$headCell.pos)\n    return false;\n  const rect = selectedRect(state), { map } = rect;\n  if (cellsOverlapRectangle(map, rect)) return false;\n  if (dispatch) {\n    const tr = state.tr;\n    const seen = {};\n    let content = Fragment2.empty;\n    let mergedPos;\n    let mergedCell;\n    for (let row = rect.top; row < rect.bottom; row++) {\n      for (let col = rect.left; col < rect.right; col++) {\n        const cellPos = map.map[row * map.width + col];\n        const cell = rect.table.nodeAt(cellPos);\n        if (seen[cellPos] || !cell) continue;\n        seen[cellPos] = true;\n        if (mergedPos == null) {\n          mergedPos = cellPos;\n          mergedCell = cell;\n        } else {\n          if (!isEmpty(cell)) content = content.append(cell.content);\n          const mapped = tr.mapping.map(cellPos + rect.tableStart);\n          tr.delete(mapped, mapped + cell.nodeSize);\n        }\n      }\n    }\n    if (mergedPos == null || mergedCell == null) {\n      return true;\n    }\n    tr.setNodeMarkup(mergedPos + rect.tableStart, null, {\n      ...addColSpan(\n        mergedCell.attrs,\n        mergedCell.attrs.colspan,\n        rect.right - rect.left - mergedCell.attrs.colspan\n      ),\n      rowspan: rect.bottom - rect.top\n    });\n    if (content.size) {\n      const end = mergedPos + 1 + mergedCell.content.size;\n      const start = isEmpty(mergedCell) ? mergedPos + 1 : end;\n      tr.replaceWith(start + rect.tableStart, end + rect.tableStart, content);\n    }\n    tr.setSelection(\n      new CellSelection(tr.doc.resolve(mergedPos + rect.tableStart))\n    );\n    dispatch(tr);\n  }\n  return true;\n}\nfunction splitCell(state, dispatch) {\n  const nodeTypes = tableNodeTypes(state.schema);\n  return splitCellWithType(({ node }) => {\n    return nodeTypes[node.type.spec.tableRole];\n  })(state, dispatch);\n}\nfunction splitCellWithType(getCellType) {\n  return (state, dispatch) => {\n    var _a;\n    const sel = state.selection;\n    let cellNode;\n    let cellPos;\n    if (!(sel instanceof CellSelection)) {\n      cellNode = cellWrapping(sel.$from);\n      if (!cellNode) return false;\n      cellPos = (_a = cellAround(sel.$from)) == null ? void 0 : _a.pos;\n    } else {\n      if (sel.$anchorCell.pos != sel.$headCell.pos) return false;\n      cellNode = sel.$anchorCell.nodeAfter;\n      cellPos = sel.$anchorCell.pos;\n    }\n    if (cellNode == null || cellPos == null) {\n      return false;\n    }\n    if (cellNode.attrs.colspan == 1 && cellNode.attrs.rowspan == 1) {\n      return false;\n    }\n    if (dispatch) {\n      let baseAttrs = cellNode.attrs;\n      const attrs = [];\n      const colwidth = baseAttrs.colwidth;\n      if (baseAttrs.rowspan > 1) baseAttrs = { ...baseAttrs, rowspan: 1 };\n      if (baseAttrs.colspan > 1) baseAttrs = { ...baseAttrs, colspan: 1 };\n      const rect = selectedRect(state), tr = state.tr;\n      for (let i = 0; i < rect.right - rect.left; i++)\n        attrs.push(\n          colwidth ? {\n            ...baseAttrs,\n            colwidth: colwidth && colwidth[i] ? [colwidth[i]] : null\n          } : baseAttrs\n        );\n      let lastCell;\n      for (let row = rect.top; row < rect.bottom; row++) {\n        let pos = rect.map.positionAt(row, rect.left, rect.table);\n        if (row == rect.top) pos += cellNode.nodeSize;\n        for (let col = rect.left, i = 0; col < rect.right; col++, i++) {\n          if (col == rect.left && row == rect.top) continue;\n          tr.insert(\n            lastCell = tr.mapping.map(pos + rect.tableStart, 1),\n            getCellType({ node: cellNode, row, col }).createAndFill(attrs[i])\n          );\n        }\n      }\n      tr.setNodeMarkup(\n        cellPos,\n        getCellType({ node: cellNode, row: rect.top, col: rect.left }),\n        attrs[0]\n      );\n      if (sel instanceof CellSelection)\n        tr.setSelection(\n          new CellSelection(\n            tr.doc.resolve(sel.$anchorCell.pos),\n            lastCell ? tr.doc.resolve(lastCell) : void 0\n          )\n        );\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nfunction setCellAttr(name, value) {\n  return function(state, dispatch) {\n    if (!isInTable(state)) return false;\n    const $cell = selectionCell(state);\n    if ($cell.nodeAfter.attrs[name] === value) return false;\n    if (dispatch) {\n      const tr = state.tr;\n      if (state.selection instanceof CellSelection)\n        state.selection.forEachCell((node, pos) => {\n          if (node.attrs[name] !== value)\n            tr.setNodeMarkup(pos, null, {\n              ...node.attrs,\n              [name]: value\n            });\n        });\n      else\n        tr.setNodeMarkup($cell.pos, null, {\n          ...$cell.nodeAfter.attrs,\n          [name]: value\n        });\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nfunction deprecated_toggleHeader(type) {\n  return function(state, dispatch) {\n    if (!isInTable(state)) return false;\n    if (dispatch) {\n      const types = tableNodeTypes(state.schema);\n      const rect = selectedRect(state), tr = state.tr;\n      const cells = rect.map.cellsInRect(\n        type == \"column\" ? {\n          left: rect.left,\n          top: 0,\n          right: rect.right,\n          bottom: rect.map.height\n        } : type == \"row\" ? {\n          left: 0,\n          top: rect.top,\n          right: rect.map.width,\n          bottom: rect.bottom\n        } : rect\n      );\n      const nodes = cells.map((pos) => rect.table.nodeAt(pos));\n      for (let i = 0; i < cells.length; i++)\n        if (nodes[i].type == types.header_cell)\n          tr.setNodeMarkup(\n            rect.tableStart + cells[i],\n            types.cell,\n            nodes[i].attrs\n          );\n      if (tr.steps.length == 0)\n        for (let i = 0; i < cells.length; i++)\n          tr.setNodeMarkup(\n            rect.tableStart + cells[i],\n            types.header_cell,\n            nodes[i].attrs\n          );\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nfunction isHeaderEnabledByType(type, rect, types) {\n  const cellPositions = rect.map.cellsInRect({\n    left: 0,\n    top: 0,\n    right: type == \"row\" ? rect.map.width : 1,\n    bottom: type == \"column\" ? rect.map.height : 1\n  });\n  for (let i = 0; i < cellPositions.length; i++) {\n    const cell = rect.table.nodeAt(cellPositions[i]);\n    if (cell && cell.type !== types.header_cell) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction toggleHeader(type, options) {\n  options = options || { useDeprecatedLogic: false };\n  if (options.useDeprecatedLogic) return deprecated_toggleHeader(type);\n  return function(state, dispatch) {\n    if (!isInTable(state)) return false;\n    if (dispatch) {\n      const types = tableNodeTypes(state.schema);\n      const rect = selectedRect(state), tr = state.tr;\n      const isHeaderRowEnabled = isHeaderEnabledByType(\"row\", rect, types);\n      const isHeaderColumnEnabled = isHeaderEnabledByType(\n        \"column\",\n        rect,\n        types\n      );\n      const isHeaderEnabled = type === \"column\" ? isHeaderRowEnabled : type === \"row\" ? isHeaderColumnEnabled : false;\n      const selectionStartsAt = isHeaderEnabled ? 1 : 0;\n      const cellsRect = type == \"column\" ? {\n        left: 0,\n        top: selectionStartsAt,\n        right: 1,\n        bottom: rect.map.height\n      } : type == \"row\" ? {\n        left: selectionStartsAt,\n        top: 0,\n        right: rect.map.width,\n        bottom: 1\n      } : rect;\n      const newType = type == \"column\" ? isHeaderColumnEnabled ? types.cell : types.header_cell : type == \"row\" ? isHeaderRowEnabled ? types.cell : types.header_cell : types.cell;\n      rect.map.cellsInRect(cellsRect).forEach((relativeCellPos) => {\n        const cellPos = relativeCellPos + rect.tableStart;\n        const cell = tr.doc.nodeAt(cellPos);\n        if (cell) {\n          tr.setNodeMarkup(cellPos, newType, cell.attrs);\n        }\n      });\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nvar toggleHeaderRow = toggleHeader(\"row\", {\n  useDeprecatedLogic: true\n});\nvar toggleHeaderColumn = toggleHeader(\"column\", {\n  useDeprecatedLogic: true\n});\nvar toggleHeaderCell = toggleHeader(\"cell\", {\n  useDeprecatedLogic: true\n});\nfunction findNextCell($cell, dir) {\n  if (dir < 0) {\n    const before = $cell.nodeBefore;\n    if (before) return $cell.pos - before.nodeSize;\n    for (let row = $cell.index(-1) - 1, rowEnd = $cell.before(); row >= 0; row--) {\n      const rowNode = $cell.node(-1).child(row);\n      const lastChild = rowNode.lastChild;\n      if (lastChild) {\n        return rowEnd - 1 - lastChild.nodeSize;\n      }\n      rowEnd -= rowNode.nodeSize;\n    }\n  } else {\n    if ($cell.index() < $cell.parent.childCount - 1) {\n      return $cell.pos + $cell.nodeAfter.nodeSize;\n    }\n    const table = $cell.node(-1);\n    for (let row = $cell.indexAfter(-1), rowStart = $cell.after(); row < table.childCount; row++) {\n      const rowNode = table.child(row);\n      if (rowNode.childCount) return rowStart + 1;\n      rowStart += rowNode.nodeSize;\n    }\n  }\n  return null;\n}\nfunction goToNextCell(direction) {\n  return function(state, dispatch) {\n    if (!isInTable(state)) return false;\n    const cell = findNextCell(selectionCell(state), direction);\n    if (cell == null) return false;\n    if (dispatch) {\n      const $cell = state.doc.resolve(cell);\n      dispatch(\n        state.tr.setSelection(TextSelection2.between($cell, moveCellForward($cell))).scrollIntoView()\n      );\n    }\n    return true;\n  };\n}\nfunction deleteTable(state, dispatch) {\n  const $pos = state.selection.$anchor;\n  for (let d = $pos.depth; d > 0; d--) {\n    const node = $pos.node(d);\n    if (node.type.spec.tableRole == \"table\") {\n      if (dispatch)\n        dispatch(\n          state.tr.delete($pos.before(d), $pos.after(d)).scrollIntoView()\n        );\n      return true;\n    }\n  }\n  return false;\n}\nfunction deleteCellSelection(state, dispatch) {\n  const sel = state.selection;\n  if (!(sel instanceof CellSelection)) return false;\n  if (dispatch) {\n    const tr = state.tr;\n    const baseContent = tableNodeTypes(state.schema).cell.createAndFill().content;\n    sel.forEachCell((cell, pos) => {\n      if (!cell.content.eq(baseContent))\n        tr.replace(\n          tr.mapping.map(pos + 1),\n          tr.mapping.map(pos + cell.nodeSize - 1),\n          new Slice2(baseContent, 0, 0)\n        );\n    });\n    if (tr.docChanged) dispatch(tr);\n  }\n  return true;\n}\nfunction moveTableRow2(options) {\n  return (state, dispatch) => {\n    const {\n      from: originIndex,\n      to: targetIndex,\n      select = true,\n      pos = state.selection.from\n    } = options;\n    const tr = state.tr;\n    if (moveRow({ tr, originIndex, targetIndex, select, pos })) {\n      dispatch == null ? void 0 : dispatch(tr);\n      return true;\n    }\n    return false;\n  };\n}\nfunction moveTableColumn2(options) {\n  return (state, dispatch) => {\n    const {\n      from: originIndex,\n      to: targetIndex,\n      select = true,\n      pos = state.selection.from\n    } = options;\n    const tr = state.tr;\n    if (moveColumn({ tr, originIndex, targetIndex, select, pos })) {\n      dispatch == null ? void 0 : dispatch(tr);\n      return true;\n    }\n    return false;\n  };\n}\n\n// src/copypaste.ts\nimport { Fragment as Fragment3, Slice as Slice3 } from \"prosemirror-model\";\nimport { Transform } from \"prosemirror-transform\";\nfunction pastedCells(slice) {\n  if (!slice.size) return null;\n  let { content, openStart, openEnd } = slice;\n  while (content.childCount == 1 && (openStart > 0 && openEnd > 0 || content.child(0).type.spec.tableRole == \"table\")) {\n    openStart--;\n    openEnd--;\n    content = content.child(0).content;\n  }\n  const first = content.child(0);\n  const role = first.type.spec.tableRole;\n  const schema = first.type.schema, rows = [];\n  if (role == \"row\") {\n    for (let i = 0; i < content.childCount; i++) {\n      let cells = content.child(i).content;\n      const left = i ? 0 : Math.max(0, openStart - 1);\n      const right = i < content.childCount - 1 ? 0 : Math.max(0, openEnd - 1);\n      if (left || right)\n        cells = fitSlice(\n          tableNodeTypes(schema).row,\n          new Slice3(cells, left, right)\n        ).content;\n      rows.push(cells);\n    }\n  } else if (role == \"cell\" || role == \"header_cell\") {\n    rows.push(\n      openStart || openEnd ? fitSlice(\n        tableNodeTypes(schema).row,\n        new Slice3(content, openStart, openEnd)\n      ).content : content\n    );\n  } else {\n    return null;\n  }\n  return ensureRectangular(schema, rows);\n}\nfunction ensureRectangular(schema, rows) {\n  const widths = [];\n  for (let i = 0; i < rows.length; i++) {\n    const row = rows[i];\n    for (let j = row.childCount - 1; j >= 0; j--) {\n      const { rowspan, colspan } = row.child(j).attrs;\n      for (let r = i; r < i + rowspan; r++)\n        widths[r] = (widths[r] || 0) + colspan;\n    }\n  }\n  let width = 0;\n  for (let r = 0; r < widths.length; r++) width = Math.max(width, widths[r]);\n  for (let r = 0; r < widths.length; r++) {\n    if (r >= rows.length) rows.push(Fragment3.empty);\n    if (widths[r] < width) {\n      const empty = tableNodeTypes(schema).cell.createAndFill();\n      const cells = [];\n      for (let i = widths[r]; i < width; i++) {\n        cells.push(empty);\n      }\n      rows[r] = rows[r].append(Fragment3.from(cells));\n    }\n  }\n  return { height: rows.length, width, rows };\n}\nfunction fitSlice(nodeType, slice) {\n  const node = nodeType.createAndFill();\n  const tr = new Transform(node).replace(0, node.content.size, slice);\n  return tr.doc;\n}\nfunction clipCells({ width, height, rows }, newWidth, newHeight) {\n  if (width != newWidth) {\n    const added = [];\n    const newRows = [];\n    for (let row = 0; row < rows.length; row++) {\n      const frag = rows[row], cells = [];\n      for (let col = added[row] || 0, i = 0; col < newWidth; i++) {\n        let cell = frag.child(i % frag.childCount);\n        if (col + cell.attrs.colspan > newWidth)\n          cell = cell.type.createChecked(\n            removeColSpan(\n              cell.attrs,\n              cell.attrs.colspan,\n              col + cell.attrs.colspan - newWidth\n            ),\n            cell.content\n          );\n        cells.push(cell);\n        col += cell.attrs.colspan;\n        for (let j = 1; j < cell.attrs.rowspan; j++)\n          added[row + j] = (added[row + j] || 0) + cell.attrs.colspan;\n      }\n      newRows.push(Fragment3.from(cells));\n    }\n    rows = newRows;\n    width = newWidth;\n  }\n  if (height != newHeight) {\n    const newRows = [];\n    for (let row = 0, i = 0; row < newHeight; row++, i++) {\n      const cells = [], source = rows[i % height];\n      for (let j = 0; j < source.childCount; j++) {\n        let cell = source.child(j);\n        if (row + cell.attrs.rowspan > newHeight)\n          cell = cell.type.create(\n            {\n              ...cell.attrs,\n              rowspan: Math.max(1, newHeight - cell.attrs.rowspan)\n            },\n            cell.content\n          );\n        cells.push(cell);\n      }\n      newRows.push(Fragment3.from(cells));\n    }\n    rows = newRows;\n    height = newHeight;\n  }\n  return { width, height, rows };\n}\nfunction growTable(tr, map, table, start, width, height, mapFrom) {\n  const schema = tr.doc.type.schema;\n  const types = tableNodeTypes(schema);\n  let empty;\n  let emptyHead;\n  if (width > map.width) {\n    for (let row = 0, rowEnd = 0; row < map.height; row++) {\n      const rowNode = table.child(row);\n      rowEnd += rowNode.nodeSize;\n      const cells = [];\n      let add;\n      if (rowNode.lastChild == null || rowNode.lastChild.type == types.cell)\n        add = empty || (empty = types.cell.createAndFill());\n      else add = emptyHead || (emptyHead = types.header_cell.createAndFill());\n      for (let i = map.width; i < width; i++) cells.push(add);\n      tr.insert(tr.mapping.slice(mapFrom).map(rowEnd - 1 + start), cells);\n    }\n  }\n  if (height > map.height) {\n    const cells = [];\n    for (let i = 0, start2 = (map.height - 1) * map.width; i < Math.max(map.width, width); i++) {\n      const header = i >= map.width ? false : table.nodeAt(map.map[start2 + i]).type == types.header_cell;\n      cells.push(\n        header ? emptyHead || (emptyHead = types.header_cell.createAndFill()) : empty || (empty = types.cell.createAndFill())\n      );\n    }\n    const emptyRow = types.row.create(null, Fragment3.from(cells)), rows = [];\n    for (let i = map.height; i < height; i++) rows.push(emptyRow);\n    tr.insert(tr.mapping.slice(mapFrom).map(start + table.nodeSize - 2), rows);\n  }\n  return !!(empty || emptyHead);\n}\nfunction isolateHorizontal(tr, map, table, start, left, right, top, mapFrom) {\n  if (top == 0 || top == map.height) return false;\n  let found = false;\n  for (let col = left; col < right; col++) {\n    const index = top * map.width + col, pos = map.map[index];\n    if (map.map[index - map.width] == pos) {\n      found = true;\n      const cell = table.nodeAt(pos);\n      const { top: cellTop, left: cellLeft } = map.findCell(pos);\n      tr.setNodeMarkup(tr.mapping.slice(mapFrom).map(pos + start), null, {\n        ...cell.attrs,\n        rowspan: top - cellTop\n      });\n      tr.insert(\n        tr.mapping.slice(mapFrom).map(map.positionAt(top, cellLeft, table)),\n        cell.type.createAndFill({\n          ...cell.attrs,\n          rowspan: cellTop + cell.attrs.rowspan - top\n        })\n      );\n      col += cell.attrs.colspan - 1;\n    }\n  }\n  return found;\n}\nfunction isolateVertical(tr, map, table, start, top, bottom, left, mapFrom) {\n  if (left == 0 || left == map.width) return false;\n  let found = false;\n  for (let row = top; row < bottom; row++) {\n    const index = row * map.width + left, pos = map.map[index];\n    if (map.map[index - 1] == pos) {\n      found = true;\n      const cell = table.nodeAt(pos);\n      const cellLeft = map.colCount(pos);\n      const updatePos = tr.mapping.slice(mapFrom).map(pos + start);\n      tr.setNodeMarkup(\n        updatePos,\n        null,\n        removeColSpan(\n          cell.attrs,\n          left - cellLeft,\n          cell.attrs.colspan - (left - cellLeft)\n        )\n      );\n      tr.insert(\n        updatePos + cell.nodeSize,\n        cell.type.createAndFill(\n          removeColSpan(cell.attrs, 0, left - cellLeft)\n        )\n      );\n      row += cell.attrs.rowspan - 1;\n    }\n  }\n  return found;\n}\nfunction insertCells(state, dispatch, tableStart, rect, cells) {\n  let table = tableStart ? state.doc.nodeAt(tableStart - 1) : state.doc;\n  if (!table) {\n    throw new Error(\"No table found\");\n  }\n  let map = TableMap.get(table);\n  const { top, left } = rect;\n  const right = left + cells.width, bottom = top + cells.height;\n  const tr = state.tr;\n  let mapFrom = 0;\n  function recomp() {\n    table = tableStart ? tr.doc.nodeAt(tableStart - 1) : tr.doc;\n    if (!table) {\n      throw new Error(\"No table found\");\n    }\n    map = TableMap.get(table);\n    mapFrom = tr.mapping.maps.length;\n  }\n  if (growTable(tr, map, table, tableStart, right, bottom, mapFrom)) recomp();\n  if (isolateHorizontal(tr, map, table, tableStart, left, right, top, mapFrom))\n    recomp();\n  if (isolateHorizontal(tr, map, table, tableStart, left, right, bottom, mapFrom))\n    recomp();\n  if (isolateVertical(tr, map, table, tableStart, top, bottom, left, mapFrom))\n    recomp();\n  if (isolateVertical(tr, map, table, tableStart, top, bottom, right, mapFrom))\n    recomp();\n  for (let row = top; row < bottom; row++) {\n    const from = map.positionAt(row, left, table), to = map.positionAt(row, right, table);\n    tr.replace(\n      tr.mapping.slice(mapFrom).map(from + tableStart),\n      tr.mapping.slice(mapFrom).map(to + tableStart),\n      new Slice3(cells.rows[row - top], 0, 0)\n    );\n  }\n  recomp();\n  tr.setSelection(\n    new CellSelection(\n      tr.doc.resolve(tableStart + map.positionAt(top, left, table)),\n      tr.doc.resolve(tableStart + map.positionAt(bottom - 1, right - 1, table))\n    )\n  );\n  dispatch(tr);\n}\n\n// src/input.ts\nvar handleKeyDown = keydownHandler({\n  ArrowLeft: arrow(\"horiz\", -1),\n  ArrowRight: arrow(\"horiz\", 1),\n  ArrowUp: arrow(\"vert\", -1),\n  ArrowDown: arrow(\"vert\", 1),\n  \"Shift-ArrowLeft\": shiftArrow(\"horiz\", -1),\n  \"Shift-ArrowRight\": shiftArrow(\"horiz\", 1),\n  \"Shift-ArrowUp\": shiftArrow(\"vert\", -1),\n  \"Shift-ArrowDown\": shiftArrow(\"vert\", 1),\n  Backspace: deleteCellSelection,\n  \"Mod-Backspace\": deleteCellSelection,\n  Delete: deleteCellSelection,\n  \"Mod-Delete\": deleteCellSelection\n});\nfunction maybeSetSelection(state, dispatch, selection) {\n  if (selection.eq(state.selection)) return false;\n  if (dispatch) dispatch(state.tr.setSelection(selection).scrollIntoView());\n  return true;\n}\nfunction arrow(axis, dir) {\n  return (state, dispatch, view) => {\n    if (!view) return false;\n    const sel = state.selection;\n    if (sel instanceof CellSelection) {\n      return maybeSetSelection(\n        state,\n        dispatch,\n        Selection2.near(sel.$headCell, dir)\n      );\n    }\n    if (axis != \"horiz\" && !sel.empty) return false;\n    const end = atEndOfCell(view, axis, dir);\n    if (end == null) return false;\n    if (axis == \"horiz\") {\n      return maybeSetSelection(\n        state,\n        dispatch,\n        Selection2.near(state.doc.resolve(sel.head + dir), dir)\n      );\n    } else {\n      const $cell = state.doc.resolve(end);\n      const $next = nextCell($cell, axis, dir);\n      let newSel;\n      if ($next) newSel = Selection2.near($next, 1);\n      else if (dir < 0)\n        newSel = Selection2.near(state.doc.resolve($cell.before(-1)), -1);\n      else newSel = Selection2.near(state.doc.resolve($cell.after(-1)), 1);\n      return maybeSetSelection(state, dispatch, newSel);\n    }\n  };\n}\nfunction shiftArrow(axis, dir) {\n  return (state, dispatch, view) => {\n    if (!view) return false;\n    const sel = state.selection;\n    let cellSel;\n    if (sel instanceof CellSelection) {\n      cellSel = sel;\n    } else {\n      const end = atEndOfCell(view, axis, dir);\n      if (end == null) return false;\n      cellSel = new CellSelection(state.doc.resolve(end));\n    }\n    const $head = nextCell(cellSel.$headCell, axis, dir);\n    if (!$head) return false;\n    return maybeSetSelection(\n      state,\n      dispatch,\n      new CellSelection(cellSel.$anchorCell, $head)\n    );\n  };\n}\nfunction handleTripleClick(view, pos) {\n  const doc = view.state.doc, $cell = cellAround(doc.resolve(pos));\n  if (!$cell) return false;\n  view.dispatch(view.state.tr.setSelection(new CellSelection($cell)));\n  return true;\n}\nfunction handlePaste(view, _, slice) {\n  if (!isInTable(view.state)) return false;\n  let cells = pastedCells(slice);\n  const sel = view.state.selection;\n  if (sel instanceof CellSelection) {\n    if (!cells)\n      cells = {\n        width: 1,\n        height: 1,\n        rows: [\n          Fragment4.from(\n            fitSlice(tableNodeTypes(view.state.schema).cell, slice)\n          )\n        ]\n      };\n    const table = sel.$anchorCell.node(-1);\n    const start = sel.$anchorCell.start(-1);\n    const rect = TableMap.get(table).rectBetween(\n      sel.$anchorCell.pos - start,\n      sel.$headCell.pos - start\n    );\n    cells = clipCells(cells, rect.right - rect.left, rect.bottom - rect.top);\n    insertCells(view.state, view.dispatch, start, rect, cells);\n    return true;\n  } else if (cells) {\n    const $cell = selectionCell(view.state);\n    const start = $cell.start(-1);\n    insertCells(\n      view.state,\n      view.dispatch,\n      start,\n      TableMap.get($cell.node(-1)).findCell($cell.pos - start),\n      cells\n    );\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction handleMouseDown(view, startEvent) {\n  var _a;\n  if (startEvent.ctrlKey || startEvent.metaKey) return;\n  const startDOMCell = domInCell(view, startEvent.target);\n  let $anchor;\n  if (startEvent.shiftKey && view.state.selection instanceof CellSelection) {\n    setCellSelection(view.state.selection.$anchorCell, startEvent);\n    startEvent.preventDefault();\n  } else if (startEvent.shiftKey && startDOMCell && ($anchor = cellAround(view.state.selection.$anchor)) != null && ((_a = cellUnderMouse(view, startEvent)) == null ? void 0 : _a.pos) != $anchor.pos) {\n    setCellSelection($anchor, startEvent);\n    startEvent.preventDefault();\n  } else if (!startDOMCell) {\n    return;\n  }\n  function setCellSelection($anchor2, event) {\n    let $head = cellUnderMouse(view, event);\n    const starting = tableEditingKey.getState(view.state) == null;\n    if (!$head || !inSameTable($anchor2, $head)) {\n      if (starting) $head = $anchor2;\n      else return;\n    }\n    const selection = new CellSelection($anchor2, $head);\n    if (starting || !view.state.selection.eq(selection)) {\n      const tr = view.state.tr.setSelection(selection);\n      if (starting) tr.setMeta(tableEditingKey, $anchor2.pos);\n      view.dispatch(tr);\n    }\n  }\n  function stop() {\n    view.root.removeEventListener(\"mouseup\", stop);\n    view.root.removeEventListener(\"dragstart\", stop);\n    view.root.removeEventListener(\"mousemove\", move);\n    if (tableEditingKey.getState(view.state) != null)\n      view.dispatch(view.state.tr.setMeta(tableEditingKey, -1));\n  }\n  function move(_event) {\n    const event = _event;\n    const anchor = tableEditingKey.getState(view.state);\n    let $anchor2;\n    if (anchor != null) {\n      $anchor2 = view.state.doc.resolve(anchor);\n    } else if (domInCell(view, event.target) != startDOMCell) {\n      $anchor2 = cellUnderMouse(view, startEvent);\n      if (!$anchor2) return stop();\n    }\n    if ($anchor2) setCellSelection($anchor2, event);\n  }\n  view.root.addEventListener(\"mouseup\", stop);\n  view.root.addEventListener(\"dragstart\", stop);\n  view.root.addEventListener(\"mousemove\", move);\n}\nfunction atEndOfCell(view, axis, dir) {\n  if (!(view.state.selection instanceof TextSelection3)) return null;\n  const { $head } = view.state.selection;\n  for (let d = $head.depth - 1; d >= 0; d--) {\n    const parent = $head.node(d), index = dir < 0 ? $head.index(d) : $head.indexAfter(d);\n    if (index != (dir < 0 ? 0 : parent.childCount)) return null;\n    if (parent.type.spec.tableRole == \"cell\" || parent.type.spec.tableRole == \"header_cell\") {\n      const cellPos = $head.before(d);\n      const dirStr = axis == \"vert\" ? dir > 0 ? \"down\" : \"up\" : dir > 0 ? \"right\" : \"left\";\n      return view.endOfTextblock(dirStr) ? cellPos : null;\n    }\n  }\n  return null;\n}\nfunction domInCell(view, dom) {\n  for (; dom && dom != view.dom; dom = dom.parentNode) {\n    if (dom.nodeName == \"TD\" || dom.nodeName == \"TH\") {\n      return dom;\n    }\n  }\n  return null;\n}\nfunction cellUnderMouse(view, event) {\n  const mousePos = view.posAtCoords({\n    left: event.clientX,\n    top: event.clientY\n  });\n  if (!mousePos) return null;\n  return mousePos ? cellAround(view.state.doc.resolve(mousePos.pos)) : null;\n}\n\n// src/columnresizing.ts\nimport { Plugin, PluginKey as PluginKey3 } from \"prosemirror-state\";\nimport {\n  Decoration as Decoration2,\n  DecorationSet as DecorationSet2\n} from \"prosemirror-view\";\n\n// src/tableview.ts\nvar TableView = class {\n  constructor(node, defaultCellMinWidth) {\n    this.node = node;\n    this.defaultCellMinWidth = defaultCellMinWidth;\n    this.dom = document.createElement(\"div\");\n    this.dom.className = \"tableWrapper\";\n    this.table = this.dom.appendChild(document.createElement(\"table\"));\n    this.table.style.setProperty(\n      \"--default-cell-min-width\",\n      `${defaultCellMinWidth}px`\n    );\n    this.colgroup = this.table.appendChild(document.createElement(\"colgroup\"));\n    updateColumnsOnResize(node, this.colgroup, this.table, defaultCellMinWidth);\n    this.contentDOM = this.table.appendChild(document.createElement(\"tbody\"));\n  }\n  update(node) {\n    if (node.type != this.node.type) return false;\n    this.node = node;\n    updateColumnsOnResize(\n      node,\n      this.colgroup,\n      this.table,\n      this.defaultCellMinWidth\n    );\n    return true;\n  }\n  ignoreMutation(record) {\n    return record.type == \"attributes\" && (record.target == this.table || this.colgroup.contains(record.target));\n  }\n};\nfunction updateColumnsOnResize(node, colgroup, table, defaultCellMinWidth, overrideCol, overrideValue) {\n  var _a;\n  let totalWidth = 0;\n  let fixedWidth = true;\n  let nextDOM = colgroup.firstChild;\n  const row = node.firstChild;\n  if (!row) return;\n  for (let i = 0, col = 0; i < row.childCount; i++) {\n    const { colspan, colwidth } = row.child(i).attrs;\n    for (let j = 0; j < colspan; j++, col++) {\n      const hasWidth = overrideCol == col ? overrideValue : colwidth && colwidth[j];\n      const cssWidth = hasWidth ? hasWidth + \"px\" : \"\";\n      totalWidth += hasWidth || defaultCellMinWidth;\n      if (!hasWidth) fixedWidth = false;\n      if (!nextDOM) {\n        const col2 = document.createElement(\"col\");\n        col2.style.width = cssWidth;\n        colgroup.appendChild(col2);\n      } else {\n        if (nextDOM.style.width != cssWidth) {\n          nextDOM.style.width = cssWidth;\n        }\n        nextDOM = nextDOM.nextSibling;\n      }\n    }\n  }\n  while (nextDOM) {\n    const after = nextDOM.nextSibling;\n    (_a = nextDOM.parentNode) == null ? void 0 : _a.removeChild(nextDOM);\n    nextDOM = after;\n  }\n  if (fixedWidth) {\n    table.style.width = totalWidth + \"px\";\n    table.style.minWidth = \"\";\n  } else {\n    table.style.width = \"\";\n    table.style.minWidth = totalWidth + \"px\";\n  }\n}\n\n// src/columnresizing.ts\nvar columnResizingPluginKey = new PluginKey3(\n  \"tableColumnResizing\"\n);\nfunction columnResizing({\n  handleWidth = 5,\n  cellMinWidth = 25,\n  defaultCellMinWidth = 100,\n  View = TableView,\n  lastColumnResizable = true\n} = {}) {\n  const plugin = new Plugin({\n    key: columnResizingPluginKey,\n    state: {\n      init(_, state) {\n        var _a, _b;\n        const nodeViews = (_b = (_a = plugin.spec) == null ? void 0 : _a.props) == null ? void 0 : _b.nodeViews;\n        const tableName = tableNodeTypes(state.schema).table.name;\n        if (View && nodeViews) {\n          nodeViews[tableName] = (node, view) => {\n            return new View(node, defaultCellMinWidth, view);\n          };\n        }\n        return new ResizeState(-1, false);\n      },\n      apply(tr, prev) {\n        return prev.apply(tr);\n      }\n    },\n    props: {\n      attributes: (state) => {\n        const pluginState = columnResizingPluginKey.getState(state);\n        return pluginState && pluginState.activeHandle > -1 ? { class: \"resize-cursor\" } : {};\n      },\n      handleDOMEvents: {\n        mousemove: (view, event) => {\n          handleMouseMove(view, event, handleWidth, lastColumnResizable);\n        },\n        mouseleave: (view) => {\n          handleMouseLeave(view);\n        },\n        mousedown: (view, event) => {\n          handleMouseDown2(view, event, cellMinWidth, defaultCellMinWidth);\n        }\n      },\n      decorations: (state) => {\n        const pluginState = columnResizingPluginKey.getState(state);\n        if (pluginState && pluginState.activeHandle > -1) {\n          return handleDecorations(state, pluginState.activeHandle);\n        }\n      },\n      nodeViews: {}\n    }\n  });\n  return plugin;\n}\nvar ResizeState = class _ResizeState {\n  constructor(activeHandle, dragging) {\n    this.activeHandle = activeHandle;\n    this.dragging = dragging;\n  }\n  apply(tr) {\n    const state = this;\n    const action = tr.getMeta(columnResizingPluginKey);\n    if (action && action.setHandle != null)\n      return new _ResizeState(action.setHandle, false);\n    if (action && action.setDragging !== void 0)\n      return new _ResizeState(state.activeHandle, action.setDragging);\n    if (state.activeHandle > -1 && tr.docChanged) {\n      let handle = tr.mapping.map(state.activeHandle, -1);\n      if (!pointsAtCell(tr.doc.resolve(handle))) {\n        handle = -1;\n      }\n      return new _ResizeState(handle, state.dragging);\n    }\n    return state;\n  }\n};\nfunction handleMouseMove(view, event, handleWidth, lastColumnResizable) {\n  if (!view.editable) return;\n  const pluginState = columnResizingPluginKey.getState(view.state);\n  if (!pluginState) return;\n  if (!pluginState.dragging) {\n    const target = domCellAround(event.target);\n    let cell = -1;\n    if (target) {\n      const { left, right } = target.getBoundingClientRect();\n      if (event.clientX - left <= handleWidth)\n        cell = edgeCell(view, event, \"left\", handleWidth);\n      else if (right - event.clientX <= handleWidth)\n        cell = edgeCell(view, event, \"right\", handleWidth);\n    }\n    if (cell != pluginState.activeHandle) {\n      if (!lastColumnResizable && cell !== -1) {\n        const $cell = view.state.doc.resolve(cell);\n        const table = $cell.node(-1);\n        const map = TableMap.get(table);\n        const tableStart = $cell.start(-1);\n        const col = map.colCount($cell.pos - tableStart) + $cell.nodeAfter.attrs.colspan - 1;\n        if (col == map.width - 1) {\n          return;\n        }\n      }\n      updateHandle(view, cell);\n    }\n  }\n}\nfunction handleMouseLeave(view) {\n  if (!view.editable) return;\n  const pluginState = columnResizingPluginKey.getState(view.state);\n  if (pluginState && pluginState.activeHandle > -1 && !pluginState.dragging)\n    updateHandle(view, -1);\n}\nfunction handleMouseDown2(view, event, cellMinWidth, defaultCellMinWidth) {\n  var _a;\n  if (!view.editable) return false;\n  const win = (_a = view.dom.ownerDocument.defaultView) != null ? _a : window;\n  const pluginState = columnResizingPluginKey.getState(view.state);\n  if (!pluginState || pluginState.activeHandle == -1 || pluginState.dragging)\n    return false;\n  const cell = view.state.doc.nodeAt(pluginState.activeHandle);\n  const width = currentColWidth(view, pluginState.activeHandle, cell.attrs);\n  view.dispatch(\n    view.state.tr.setMeta(columnResizingPluginKey, {\n      setDragging: { startX: event.clientX, startWidth: width }\n    })\n  );\n  function finish(event2) {\n    win.removeEventListener(\"mouseup\", finish);\n    win.removeEventListener(\"mousemove\", move);\n    const pluginState2 = columnResizingPluginKey.getState(view.state);\n    if (pluginState2 == null ? void 0 : pluginState2.dragging) {\n      updateColumnWidth(\n        view,\n        pluginState2.activeHandle,\n        draggedWidth(pluginState2.dragging, event2, cellMinWidth)\n      );\n      view.dispatch(\n        view.state.tr.setMeta(columnResizingPluginKey, { setDragging: null })\n      );\n    }\n  }\n  function move(event2) {\n    if (!event2.which) return finish(event2);\n    const pluginState2 = columnResizingPluginKey.getState(view.state);\n    if (!pluginState2) return;\n    if (pluginState2.dragging) {\n      const dragged = draggedWidth(pluginState2.dragging, event2, cellMinWidth);\n      displayColumnWidth(\n        view,\n        pluginState2.activeHandle,\n        dragged,\n        defaultCellMinWidth\n      );\n    }\n  }\n  displayColumnWidth(\n    view,\n    pluginState.activeHandle,\n    width,\n    defaultCellMinWidth\n  );\n  win.addEventListener(\"mouseup\", finish);\n  win.addEventListener(\"mousemove\", move);\n  event.preventDefault();\n  return true;\n}\nfunction currentColWidth(view, cellPos, { colspan, colwidth }) {\n  const width = colwidth && colwidth[colwidth.length - 1];\n  if (width) return width;\n  const dom = view.domAtPos(cellPos);\n  const node = dom.node.childNodes[dom.offset];\n  let domWidth = node.offsetWidth, parts = colspan;\n  if (colwidth) {\n    for (let i = 0; i < colspan; i++)\n      if (colwidth[i]) {\n        domWidth -= colwidth[i];\n        parts--;\n      }\n  }\n  return domWidth / parts;\n}\nfunction domCellAround(target) {\n  while (target && target.nodeName != \"TD\" && target.nodeName != \"TH\")\n    target = target.classList && target.classList.contains(\"ProseMirror\") ? null : target.parentNode;\n  return target;\n}\nfunction edgeCell(view, event, side, handleWidth) {\n  const offset = side == \"right\" ? -handleWidth : handleWidth;\n  const found = view.posAtCoords({\n    left: event.clientX + offset,\n    top: event.clientY\n  });\n  if (!found) return -1;\n  const { pos } = found;\n  const $cell = cellAround(view.state.doc.resolve(pos));\n  if (!$cell) return -1;\n  if (side == \"right\") return $cell.pos;\n  const map = TableMap.get($cell.node(-1)), start = $cell.start(-1);\n  const index = map.map.indexOf($cell.pos - start);\n  return index % map.width == 0 ? -1 : start + map.map[index - 1];\n}\nfunction draggedWidth(dragging, event, resizeMinWidth) {\n  const offset = event.clientX - dragging.startX;\n  return Math.max(resizeMinWidth, dragging.startWidth + offset);\n}\nfunction updateHandle(view, value) {\n  view.dispatch(\n    view.state.tr.setMeta(columnResizingPluginKey, { setHandle: value })\n  );\n}\nfunction updateColumnWidth(view, cell, width) {\n  const $cell = view.state.doc.resolve(cell);\n  const table = $cell.node(-1), map = TableMap.get(table), start = $cell.start(-1);\n  const col = map.colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1;\n  const tr = view.state.tr;\n  for (let row = 0; row < map.height; row++) {\n    const mapIndex = row * map.width + col;\n    if (row && map.map[mapIndex] == map.map[mapIndex - map.width]) continue;\n    const pos = map.map[mapIndex];\n    const attrs = table.nodeAt(pos).attrs;\n    const index = attrs.colspan == 1 ? 0 : col - map.colCount(pos);\n    if (attrs.colwidth && attrs.colwidth[index] == width) continue;\n    const colwidth = attrs.colwidth ? attrs.colwidth.slice() : zeroes(attrs.colspan);\n    colwidth[index] = width;\n    tr.setNodeMarkup(start + pos, null, { ...attrs, colwidth });\n  }\n  if (tr.docChanged) view.dispatch(tr);\n}\nfunction displayColumnWidth(view, cell, width, defaultCellMinWidth) {\n  const $cell = view.state.doc.resolve(cell);\n  const table = $cell.node(-1), start = $cell.start(-1);\n  const col = TableMap.get(table).colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1;\n  let dom = view.domAtPos($cell.start(-1)).node;\n  while (dom && dom.nodeName != \"TABLE\") {\n    dom = dom.parentNode;\n  }\n  if (!dom) return;\n  updateColumnsOnResize(\n    table,\n    dom.firstChild,\n    dom,\n    defaultCellMinWidth,\n    col,\n    width\n  );\n}\nfunction zeroes(n) {\n  return Array(n).fill(0);\n}\nfunction handleDecorations(state, cell) {\n  var _a;\n  const decorations = [];\n  const $cell = state.doc.resolve(cell);\n  const table = $cell.node(-1);\n  if (!table) {\n    return DecorationSet2.empty;\n  }\n  const map = TableMap.get(table);\n  const start = $cell.start(-1);\n  const col = map.colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1;\n  for (let row = 0; row < map.height; row++) {\n    const index = col + row * map.width;\n    if ((col == map.width - 1 || map.map[index] != map.map[index + 1]) && (row == 0 || map.map[index] != map.map[index - map.width])) {\n      const cellPos = map.map[index];\n      const pos = start + cellPos + table.nodeAt(cellPos).nodeSize - 1;\n      const dom = document.createElement(\"div\");\n      dom.className = \"column-resize-handle\";\n      if ((_a = columnResizingPluginKey.getState(state)) == null ? void 0 : _a.dragging) {\n        decorations.push(\n          Decoration2.node(\n            start + cellPos,\n            start + cellPos + table.nodeAt(cellPos).nodeSize,\n            {\n              class: \"column-resize-dragging\"\n            }\n          )\n        );\n      }\n      decorations.push(Decoration2.widget(pos, dom));\n    }\n  }\n  return DecorationSet2.create(state.doc, decorations);\n}\n\n// src/index.ts\nfunction tableEditing({\n  allowTableNodeSelection = false\n} = {}) {\n  return new Plugin2({\n    key: tableEditingKey,\n    // This piece of state is used to remember when a mouse-drag\n    // cell-selection is happening, so that it can continue even as\n    // transactions (which might move its anchor cell) come in.\n    state: {\n      init() {\n        return null;\n      },\n      apply(tr, cur) {\n        const set = tr.getMeta(tableEditingKey);\n        if (set != null) return set == -1 ? null : set;\n        if (cur == null || !tr.docChanged) return cur;\n        const { deleted, pos } = tr.mapping.mapResult(cur);\n        return deleted ? null : pos;\n      }\n    },\n    props: {\n      decorations: drawCellSelection,\n      handleDOMEvents: {\n        mousedown: handleMouseDown\n      },\n      createSelectionBetween(view) {\n        return tableEditingKey.getState(view.state) != null ? view.state.selection : null;\n      },\n      handleTripleClick,\n      handleKeyDown,\n      handlePaste\n    },\n    appendTransaction(_, oldState, state) {\n      return normalizeSelection(\n        state,\n        fixTables(state, oldState),\n        allowTableNodeSelection\n      );\n    }\n  });\n}\nexport {\n  CellBookmark,\n  CellSelection,\n  ResizeState,\n  TableMap,\n  TableView,\n  clipCells as __clipCells,\n  insertCells as __insertCells,\n  pastedCells as __pastedCells,\n  addColSpan,\n  addColumn,\n  addColumnAfter,\n  addColumnBefore,\n  addRow,\n  addRowAfter,\n  addRowBefore,\n  cellAround,\n  cellNear,\n  colCount,\n  columnIsHeader,\n  columnResizing,\n  columnResizingPluginKey,\n  deleteCellSelection,\n  deleteColumn,\n  deleteRow,\n  deleteTable,\n  findCell,\n  findCellPos,\n  findCellRange,\n  findTable,\n  fixTables,\n  fixTablesKey,\n  goToNextCell,\n  handlePaste,\n  inSameTable,\n  isInTable,\n  mergeCells,\n  moveCellForward,\n  moveTableColumn2 as moveTableColumn,\n  moveTableRow2 as moveTableRow,\n  nextCell,\n  pointsAtCell,\n  removeColSpan,\n  removeColumn,\n  removeRow,\n  rowIsHeader,\n  selectedRect,\n  selectionCell,\n  setCellAttr,\n  splitCell,\n  splitCellWithType,\n  tableEditing,\n  tableEditingKey,\n  tableNodeTypes,\n  tableNodes,\n  toggleHeader,\n  toggleHeaderCell,\n  toggleHeaderColumn,\n  toggleHeaderRow,\n  updateColumnsOnResize\n};\n","// src/index.ts\nimport {\n  Plugin,\n  PluginKey\n} from \"prosemirror-state\";\nimport { Decoration, DecorationSet } from \"prosemirror-view\";\n\n// src/browser.ts\nvar nav = typeof navigator != \"undefined\" ? navigator : null;\nvar agent = nav && nav.userAgent || \"\";\nvar ie_edge = /Edge\\/(\\d+)/.exec(agent);\nvar ie_upto10 = /MSIE \\d/.exec(agent);\nvar ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(agent);\nvar ie = !!(ie_upto10 || ie_11up || ie_edge);\nvar safari = !ie && !!nav && /Apple Computer/.test(nav.vendor);\n\n// src/index.ts\nvar key = new PluginKey(\"safari-ime-span\");\nvar isComposing = false;\nvar spec = {\n  key,\n  props: {\n    decorations: createDecorations,\n    handleDOMEvents: {\n      compositionstart: () => {\n        isComposing = true;\n      },\n      compositionend: () => {\n        isComposing = false;\n      }\n    }\n  }\n};\nfunction createDecorations(state) {\n  const { $from, $to, to } = state.selection;\n  if (isComposing && $from.sameParent($to)) {\n    const deco = Decoration.widget(to, createSpan, {\n      ignoreSelection: true,\n      key: \"safari-ime-span\"\n    });\n    return DecorationSet.create(state.doc, [deco]);\n  }\n}\nfunction createSpan(view) {\n  const span = view.dom.ownerDocument.createElement(\"span\");\n  span.className = \"ProseMirror-safari-ime-span\";\n  return span;\n}\nvar imeSpan = new Plugin(safari ? spec : { key });\nexport {\n  imeSpan\n};\n","import { expectDomTypeError } from \"@milkdown/exception\";\nimport { paragraphSchema, listItemSchema } from \"@milkdown/preset-commonmark\";\nimport { InputRule } from \"@milkdown/prose/inputrules\";\nimport { $markAttr, $markSchema, $inputRule, $useKeymap, $command, $nodeSchema, $pasteRule, $prose, $remark } from \"@milkdown/utils\";\nimport { tableNodes, findTable, TableMap, CellSelection, goToNextCell, isInTable, moveTableRow, moveTableColumn, deleteTable, deleteColumn, deleteRow, selectedRect, addColumnBefore, addColumnAfter, setCellAttr, columnResizing, tableEditing } from \"@milkdown/prose/tables\";\nimport { commandsCtx } from \"@milkdown/core\";\nimport { markRule, findParentNodeClosestToPos, cloneTr, findParentNodeType } from \"@milkdown/prose\";\nimport { toggleMark } from \"@milkdown/prose/commands\";\nimport { Slice, Fragment } from \"@milkdown/prose/model\";\nimport { Selection, TextSelection, Plugin, PluginKey } from \"@milkdown/prose/state\";\nimport { imeSpan } from \"prosemirror-safari-ime-span\";\nimport remarkGFM from \"remark-gfm\";\nfunction withMeta(plugin, meta) {\n  Object.assign(plugin, {\n    meta: {\n      package: \"@milkdown/preset-gfm\",\n      ...meta\n    }\n  });\n  return plugin;\n}\nconst strikethroughAttr = $markAttr(\"strike_through\");\nwithMeta(strikethroughAttr, {\n  displayName: \"Attr<strikethrough>\",\n  group: \"Strikethrough\"\n});\nconst strikethroughSchema = $markSchema(\"strike_through\", (ctx) => ({\n  parseDOM: [\n    { tag: \"del\" },\n    {\n      style: \"text-decoration\",\n      getAttrs: (value) => value === \"line-through\"\n    }\n  ],\n  toDOM: (mark) => [\"del\", ctx.get(strikethroughAttr.key)(mark)],\n  parseMarkdown: {\n    match: (node) => node.type === \"delete\",\n    runner: (state, node, markType) => {\n      state.openMark(markType);\n      state.next(node.children);\n      state.closeMark(markType);\n    }\n  },\n  toMarkdown: {\n    match: (mark) => mark.type.name === \"strike_through\",\n    runner: (state, mark) => {\n      state.withMark(mark, \"delete\");\n    }\n  }\n}));\nwithMeta(strikethroughSchema.mark, {\n  displayName: \"MarkSchema<strikethrough>\",\n  group: \"Strikethrough\"\n});\nwithMeta(strikethroughSchema.ctx, {\n  displayName: \"MarkSchemaCtx<strikethrough>\",\n  group: \"Strikethrough\"\n});\nconst toggleStrikethroughCommand = $command(\n  \"ToggleStrikeThrough\",\n  (ctx) => () => {\n    return toggleMark(strikethroughSchema.type(ctx));\n  }\n);\nwithMeta(toggleStrikethroughCommand, {\n  displayName: \"Command<ToggleStrikethrough>\",\n  group: \"Strikethrough\"\n});\nconst strikethroughInputRule = $inputRule((ctx) => {\n  return markRule(\n    new RegExp(\"(?<![\\\\w:/])(~{1,2})(.+?)\\\\1(?!\\\\w|\\\\/)\"),\n    strikethroughSchema.type(ctx)\n  );\n});\nwithMeta(strikethroughInputRule, {\n  displayName: \"InputRule<strikethrough>\",\n  group: \"Strikethrough\"\n});\nconst strikethroughKeymap = $useKeymap(\"strikeThroughKeymap\", {\n  ToggleStrikethrough: {\n    shortcuts: \"Mod-Alt-x\",\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(toggleStrikethroughCommand.key);\n    }\n  }\n});\nwithMeta(strikethroughKeymap.ctx, {\n  displayName: \"KeymapCtx<strikethrough>\",\n  group: \"Strikethrough\"\n});\nwithMeta(strikethroughKeymap.shortcuts, {\n  displayName: \"Keymap<strikethrough>\",\n  group: \"Strikethrough\"\n});\nconst originalSchema = tableNodes({\n  tableGroup: \"block\",\n  cellContent: \"paragraph\",\n  cellAttributes: {\n    alignment: {\n      default: \"left\",\n      getFromDOM: (dom) => dom.style.textAlign || \"left\",\n      setDOMAttr: (value, attrs) => {\n        attrs.style = `text-align: ${value || \"left\"}`;\n      }\n    }\n  }\n});\nconst tableSchema = $nodeSchema(\"table\", () => ({\n  ...originalSchema.table,\n  content: \"table_header_row table_row+\",\n  disableDropCursor: true,\n  parseMarkdown: {\n    match: (node) => node.type === \"table\",\n    runner: (state, node, type) => {\n      const align = node.align;\n      const children = node.children.map((x, i) => ({\n        ...x,\n        align,\n        isHeader: i === 0\n      }));\n      state.openNode(type);\n      state.next(children);\n      state.closeNode();\n    }\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === \"table\",\n    runner: (state, node) => {\n      const firstLine = node.content.firstChild?.content;\n      if (!firstLine) return;\n      const align = [];\n      firstLine.forEach((cell) => {\n        align.push(cell.attrs.alignment);\n      });\n      state.openNode(\"table\", void 0, { align });\n      state.next(node.content);\n      state.closeNode();\n    }\n  }\n}));\nwithMeta(tableSchema.node, {\n  displayName: \"NodeSchema<table>\",\n  group: \"Table\"\n});\nwithMeta(tableSchema.ctx, {\n  displayName: \"NodeSchemaCtx<table>\",\n  group: \"Table\"\n});\nconst tableHeaderRowSchema = $nodeSchema(\"table_header_row\", () => ({\n  ...originalSchema.table_row,\n  disableDropCursor: true,\n  content: \"(table_header)*\",\n  parseDOM: [{ tag: \"tr[data-is-header]\" }],\n  toDOM() {\n    return [\"tr\", { \"data-is-header\": true }, 0];\n  },\n  parseMarkdown: {\n    match: (node) => Boolean(node.type === \"tableRow\" && node.isHeader),\n    runner: (state, node, type) => {\n      const align = node.align;\n      const children = node.children.map((x, i) => ({\n        ...x,\n        align: align[i],\n        isHeader: node.isHeader\n      }));\n      state.openNode(type);\n      state.next(children);\n      state.closeNode();\n    }\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === \"table_header_row\",\n    runner: (state, node) => {\n      state.openNode(\"tableRow\", void 0, { isHeader: true });\n      state.next(node.content);\n      state.closeNode();\n    }\n  }\n}));\nwithMeta(tableHeaderRowSchema.node, {\n  displayName: \"NodeSchema<tableHeaderRow>\",\n  group: \"Table\"\n});\nwithMeta(tableHeaderRowSchema.ctx, {\n  displayName: \"NodeSchemaCtx<tableHeaderRow>\",\n  group: \"Table\"\n});\nconst tableRowSchema = $nodeSchema(\"table_row\", () => ({\n  ...originalSchema.table_row,\n  disableDropCursor: true,\n  content: \"(table_cell)*\",\n  parseMarkdown: {\n    match: (node) => node.type === \"tableRow\",\n    runner: (state, node, type) => {\n      const align = node.align;\n      const children = node.children.map((x, i) => ({\n        ...x,\n        align: align[i]\n      }));\n      state.openNode(type);\n      state.next(children);\n      state.closeNode();\n    }\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === \"table_row\",\n    runner: (state, node) => {\n      if (node.content.size === 0) {\n        return;\n      }\n      state.openNode(\"tableRow\");\n      state.next(node.content);\n      state.closeNode();\n    }\n  }\n}));\nwithMeta(tableRowSchema.node, {\n  displayName: \"NodeSchema<tableRow>\",\n  group: \"Table\"\n});\nwithMeta(tableRowSchema.ctx, {\n  displayName: \"NodeSchemaCtx<tableRow>\",\n  group: \"Table\"\n});\nconst tableCellSchema = $nodeSchema(\"table_cell\", () => ({\n  ...originalSchema.table_cell,\n  disableDropCursor: true,\n  parseMarkdown: {\n    match: (node) => node.type === \"tableCell\" && !node.isHeader,\n    runner: (state, node, type) => {\n      const align = node.align;\n      state.openNode(type, { alignment: align }).openNode(state.schema.nodes.paragraph).next(node.children).closeNode().closeNode();\n    }\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === \"table_cell\",\n    runner: (state, node) => {\n      state.openNode(\"tableCell\").next(node.content).closeNode();\n    }\n  }\n}));\nwithMeta(tableCellSchema.node, {\n  displayName: \"NodeSchema<tableCell>\",\n  group: \"Table\"\n});\nwithMeta(tableCellSchema.ctx, {\n  displayName: \"NodeSchemaCtx<tableCell>\",\n  group: \"Table\"\n});\nconst tableHeaderSchema = $nodeSchema(\"table_header\", () => ({\n  ...originalSchema.table_header,\n  disableDropCursor: true,\n  parseMarkdown: {\n    match: (node) => node.type === \"tableCell\" && !!node.isHeader,\n    runner: (state, node, type) => {\n      const align = node.align;\n      state.openNode(type, { alignment: align });\n      state.openNode(state.schema.nodes.paragraph);\n      state.next(node.children);\n      state.closeNode();\n      state.closeNode();\n    }\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === \"table_header\",\n    runner: (state, node) => {\n      state.openNode(\"tableCell\");\n      state.next(node.content);\n      state.closeNode();\n    }\n  }\n}));\nwithMeta(tableHeaderSchema.node, {\n  displayName: \"NodeSchema<tableHeader>\",\n  group: \"Table\"\n});\nwithMeta(tableHeaderSchema.ctx, {\n  displayName: \"NodeSchemaCtx<tableHeader>\",\n  group: \"Table\"\n});\nfunction createTable(ctx, rowsCount = 3, colsCount = 3) {\n  const cells = Array(colsCount).fill(0).map(() => tableCellSchema.type(ctx).createAndFill());\n  const headerCells = Array(colsCount).fill(0).map(() => tableHeaderSchema.type(ctx).createAndFill());\n  const rows = Array(rowsCount).fill(0).map(\n    (_, i) => i === 0 ? tableHeaderRowSchema.type(ctx).create(null, headerCells) : tableRowSchema.type(ctx).create(null, cells)\n  );\n  return tableSchema.type(ctx).create(null, rows);\n}\nfunction getCellsInCol(columnIndexes, selection) {\n  const table = findTable(selection.$from);\n  if (!table) return void 0;\n  const map = TableMap.get(table.node);\n  const indexes = Array.isArray(columnIndexes) ? columnIndexes : [columnIndexes];\n  return indexes.filter((index) => index >= 0 && index <= map.width - 1).flatMap((index) => {\n    const cells = map.cellsInRect({\n      left: index,\n      right: index + 1,\n      top: 0,\n      bottom: map.height\n    });\n    return cells.map((nodePos) => {\n      const node = table.node.nodeAt(nodePos);\n      const pos = nodePos + table.start;\n      return { pos, start: pos + 1, node, depth: table.depth + 2 };\n    });\n  });\n}\nfunction getCellsInRow(rowIndex, selection) {\n  const table = findTable(selection.$from);\n  if (!table) {\n    return;\n  }\n  const map = TableMap.get(table.node);\n  const indexes = Array.isArray(rowIndex) ? rowIndex : [rowIndex];\n  return indexes.filter((index) => index >= 0 && index <= map.height - 1).flatMap((index) => {\n    const cells = map.cellsInRect({\n      left: 0,\n      right: map.width,\n      top: index,\n      bottom: index + 1\n    });\n    return cells.map((nodePos) => {\n      const node = table.node.nodeAt(nodePos);\n      const pos = nodePos + table.start;\n      return { pos, start: pos + 1, node, depth: table.depth + 2 };\n    });\n  });\n}\nfunction selectLine(type) {\n  return (index, pos) => (tr) => {\n    pos = pos ?? tr.selection.from;\n    const $pos = tr.doc.resolve(pos);\n    const $node = findParentNodeClosestToPos(\n      (node) => node.type.name === \"table\"\n    )($pos);\n    const table = $node ? {\n      node: $node.node,\n      from: $node.start\n    } : void 0;\n    const isRowSelection = type === \"row\";\n    if (table) {\n      const map = TableMap.get(table.node);\n      if (index >= 0 && index < (isRowSelection ? map.height : map.width)) {\n        const lastCell = map.positionAt(\n          isRowSelection ? index : map.height - 1,\n          isRowSelection ? map.width - 1 : index,\n          table.node\n        );\n        const $lastCell = tr.doc.resolve(table.from + lastCell);\n        const createCellSelection = isRowSelection ? CellSelection.rowSelection : CellSelection.colSelection;\n        const firstCell = map.positionAt(\n          isRowSelection ? index : 0,\n          isRowSelection ? 0 : index,\n          table.node\n        );\n        const $firstCell = tr.doc.resolve(table.from + firstCell);\n        return cloneTr(\n          tr.setSelection(\n            createCellSelection($lastCell, $firstCell)\n          )\n        );\n      }\n    }\n    return tr;\n  };\n}\nconst selectRow = selectLine(\"row\");\nconst selectCol = selectLine(\"col\");\nfunction addRowWithAlignment(ctx, tr, { map, tableStart, table }, row) {\n  const rowPos = Array(row).fill(0).reduce((acc, _, i) => {\n    return acc + table.child(i).nodeSize;\n  }, tableStart);\n  const cells = Array(map.width).fill(0).map((_, col) => {\n    const headerCol = table.nodeAt(map.map[col]);\n    return tableCellSchema.type(ctx).createAndFill({ alignment: headerCol?.attrs.alignment });\n  });\n  tr.insert(rowPos, tableRowSchema.type(ctx).create(null, cells));\n  return tr;\n}\nfunction getAllCellsInTable(selection) {\n  const table = findTable(selection.$from);\n  if (!table) return;\n  const map = TableMap.get(table.node);\n  const cells = map.cellsInRect({\n    left: 0,\n    right: map.width,\n    top: 0,\n    bottom: map.height\n  });\n  return cells.map((nodePos) => {\n    const node = table.node.nodeAt(nodePos);\n    const pos = nodePos + table.start;\n    return { pos, start: pos + 1, node };\n  });\n}\nfunction selectTable(tr) {\n  const cells = getAllCellsInTable(tr.selection);\n  if (cells && cells[0]) {\n    const $firstCell = tr.doc.resolve(cells[0].pos);\n    const last = cells[cells.length - 1];\n    if (last) {\n      const $lastCell = tr.doc.resolve(last.pos);\n      return cloneTr(tr.setSelection(new CellSelection($lastCell, $firstCell)));\n    }\n  }\n  return tr;\n}\nconst goToPrevTableCellCommand = $command(\n  \"GoToPrevTableCell\",\n  () => () => goToNextCell(-1)\n);\nwithMeta(goToPrevTableCellCommand, {\n  displayName: \"Command<goToPrevTableCellCommand>\",\n  group: \"Table\"\n});\nconst goToNextTableCellCommand = $command(\n  \"GoToNextTableCell\",\n  () => () => goToNextCell(1)\n);\nwithMeta(goToNextTableCellCommand, {\n  displayName: \"Command<goToNextTableCellCommand>\",\n  group: \"Table\"\n});\nconst exitTable = $command(\n  \"ExitTable\",\n  (ctx) => () => (state, dispatch) => {\n    if (!isInTable(state)) return false;\n    const { $head } = state.selection;\n    const table = findParentNodeType($head, tableSchema.type(ctx));\n    if (!table) return false;\n    const { to } = table;\n    const tr = state.tr.replaceWith(\n      to,\n      to,\n      paragraphSchema.type(ctx).createAndFill()\n    );\n    tr.setSelection(Selection.near(tr.doc.resolve(to), 1)).scrollIntoView();\n    dispatch?.(tr);\n    return true;\n  }\n);\nwithMeta(exitTable, {\n  displayName: \"Command<breakTableCommand>\",\n  group: \"Table\"\n});\nconst insertTableCommand = $command(\n  \"InsertTable\",\n  (ctx) => ({ row, col } = {}) => (state, dispatch) => {\n    const { selection, tr } = state;\n    const { from } = selection;\n    const table = createTable(ctx, row, col);\n    const _tr = tr.replaceSelectionWith(table);\n    const sel = Selection.findFrom(_tr.doc.resolve(from), 1, true);\n    if (sel) _tr.setSelection(sel);\n    dispatch?.(_tr);\n    return true;\n  }\n);\nwithMeta(insertTableCommand, {\n  displayName: \"Command<insertTableCommand>\",\n  group: \"Table\"\n});\nconst moveRowCommand = $command(\n  \"MoveRow\",\n  () => ({ from, to, pos } = {}) => moveTableRow({\n    from: from ?? 0,\n    to: to ?? 0,\n    pos\n  })\n);\nwithMeta(moveRowCommand, {\n  displayName: \"Command<moveRowCommand>\",\n  group: \"Table\"\n});\nconst moveColCommand = $command(\n  \"MoveCol\",\n  () => ({ from, to, pos } = {}) => moveTableColumn({\n    from: from ?? 0,\n    to: to ?? 0,\n    pos\n  })\n);\nwithMeta(moveColCommand, {\n  displayName: \"Command<moveColCommand>\",\n  group: \"Table\"\n});\nconst selectRowCommand = $command(\n  \"SelectRow\",\n  () => (payload = { index: 0 }) => (state, dispatch) => {\n    const { tr } = state;\n    const result = dispatch?.(selectRow(payload.index, payload.pos)(tr));\n    return Boolean(result);\n  }\n);\nwithMeta(selectRowCommand, {\n  displayName: \"Command<selectRowCommand>\",\n  group: \"Table\"\n});\nconst selectColCommand = $command(\n  \"SelectCol\",\n  () => (payload = { index: 0 }) => (state, dispatch) => {\n    const { tr } = state;\n    const result = dispatch?.(selectCol(payload.index, payload.pos)(tr));\n    return Boolean(result);\n  }\n);\nwithMeta(selectColCommand, {\n  displayName: \"Command<selectColCommand>\",\n  group: \"Table\"\n});\nconst selectTableCommand = $command(\n  \"SelectTable\",\n  () => () => (state, dispatch) => {\n    const { tr } = state;\n    const result = dispatch?.(selectTable(tr));\n    return Boolean(result);\n  }\n);\nwithMeta(selectTableCommand, {\n  displayName: \"Command<selectTableCommand>\",\n  group: \"Table\"\n});\nconst deleteSelectedCellsCommand = $command(\n  \"DeleteSelectedCells\",\n  () => () => (state, dispatch) => {\n    const { selection } = state;\n    if (!(selection instanceof CellSelection)) return false;\n    const isRow = selection.isRowSelection();\n    const isCol = selection.isColSelection();\n    if (isRow && isCol) return deleteTable(state, dispatch);\n    if (isCol) return deleteColumn(state, dispatch);\n    else return deleteRow(state, dispatch);\n  }\n);\nwithMeta(deleteSelectedCellsCommand, {\n  displayName: \"Command<deleteSelectedCellsCommand>\",\n  group: \"Table\"\n});\nconst addColBeforeCommand = $command(\n  \"AddColBefore\",\n  () => () => addColumnBefore\n);\nwithMeta(addColBeforeCommand, {\n  displayName: \"Command<addColBeforeCommand>\",\n  group: \"Table\"\n});\nconst addColAfterCommand = $command(\n  \"AddColAfter\",\n  () => () => addColumnAfter\n);\nwithMeta(addColAfterCommand, {\n  displayName: \"Command<addColAfterCommand>\",\n  group: \"Table\"\n});\nconst addRowBeforeCommand = $command(\n  \"AddRowBefore\",\n  (ctx) => () => (state, dispatch) => {\n    if (!isInTable(state)) return false;\n    if (dispatch) {\n      const rect = selectedRect(state);\n      dispatch(addRowWithAlignment(ctx, state.tr, rect, rect.top));\n    }\n    return true;\n  }\n);\nwithMeta(addRowBeforeCommand, {\n  displayName: \"Command<addRowBeforeCommand>\",\n  group: \"Table\"\n});\nconst addRowAfterCommand = $command(\n  \"AddRowAfter\",\n  (ctx) => () => (state, dispatch) => {\n    if (!isInTable(state)) return false;\n    if (dispatch) {\n      const rect = selectedRect(state);\n      dispatch(addRowWithAlignment(ctx, state.tr, rect, rect.bottom));\n    }\n    return true;\n  }\n);\nwithMeta(addRowAfterCommand, {\n  displayName: \"Command<addRowAfterCommand>\",\n  group: \"Table\"\n});\nconst setAlignCommand = $command(\n  \"SetAlign\",\n  () => (alignment = \"left\") => setCellAttr(\"alignment\", alignment)\n);\nwithMeta(setAlignCommand, {\n  displayName: \"Command<setAlignCommand>\",\n  group: \"Table\"\n});\nconst insertTableInputRule = $inputRule(\n  (ctx) => new InputRule(\n    /^\\|(?<col>\\d+)[xX](?<row>\\d+)\\|\\s$/,\n    (state, match, start, end) => {\n      const $start = state.doc.resolve(start);\n      if (!$start.node(-1).canReplaceWith(\n        $start.index(-1),\n        $start.indexAfter(-1),\n        tableSchema.type(ctx)\n      ))\n        return null;\n      const row = Math.max(Number(match.groups?.row ?? 0), 2);\n      const tableNode = createTable(ctx, row, Number(match.groups?.col));\n      const tr = state.tr.replaceRangeWith(start, end, tableNode);\n      return tr.setSelection(TextSelection.create(tr.doc, start + 3)).scrollIntoView();\n    }\n  )\n);\nwithMeta(insertTableInputRule, {\n  displayName: \"InputRule<insertTableInputRule>\",\n  group: \"Table\"\n});\nconst tablePasteRule = $pasteRule((ctx) => ({\n  run: (slice, _view, isPlainText) => {\n    if (isPlainText) {\n      return slice;\n    }\n    let fragment = slice.content;\n    slice.content.forEach((node, _offset, index) => {\n      if (node?.type !== tableSchema.type(ctx)) {\n        return;\n      }\n      const rowsCount = node.childCount;\n      const colsCount = node.lastChild?.childCount ?? 0;\n      if (rowsCount === 0 || colsCount === 0) {\n        fragment = fragment.replaceChild(\n          index,\n          paragraphSchema.type(ctx).create()\n        );\n        return;\n      }\n      const headerRow = node.firstChild;\n      const needToFixHeaderRow = colsCount > 0 && headerRow && headerRow.childCount === 0;\n      if (!needToFixHeaderRow) {\n        return;\n      }\n      const headerCells = Array(colsCount).fill(0).map(() => tableHeaderSchema.type(ctx).createAndFill());\n      const tableCells = new Slice(Fragment.from(headerCells), 0, 0);\n      const newHeaderRow = headerRow.replace(0, 0, tableCells);\n      const newTable = node.replace(\n        0,\n        headerRow.nodeSize,\n        new Slice(Fragment.from(newHeaderRow), 0, 0)\n      );\n      fragment = fragment.replaceChild(index, newTable);\n    });\n    return new Slice(Fragment.from(fragment), slice.openStart, slice.openEnd);\n  }\n}));\nwithMeta(tablePasteRule, {\n  displayName: \"PasteRule<table>\",\n  group: \"Table\"\n});\nconst tableKeymap = $useKeymap(\"tableKeymap\", {\n  NextCell: {\n    priority: 100,\n    shortcuts: [\"Mod-]\", \"Tab\"],\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(goToNextTableCellCommand.key);\n    }\n  },\n  PrevCell: {\n    shortcuts: [\"Mod-[\", \"Shift-Tab\"],\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(goToPrevTableCellCommand.key);\n    }\n  },\n  ExitTable: {\n    shortcuts: [\"Mod-Enter\", \"Enter\"],\n    command: (ctx) => {\n      const commands2 = ctx.get(commandsCtx);\n      return () => commands2.call(exitTable.key);\n    }\n  }\n});\nwithMeta(tableKeymap.ctx, {\n  displayName: \"KeymapCtx<table>\",\n  group: \"Table\"\n});\nwithMeta(tableKeymap.shortcuts, {\n  displayName: \"Keymap<table>\",\n  group: \"Table\"\n});\nconst id$1 = \"footnote_definition\";\nconst markdownId = \"footnoteDefinition\";\nconst footnoteDefinitionSchema = $nodeSchema(\n  \"footnote_definition\",\n  () => ({\n    group: \"block\",\n    content: \"block+\",\n    defining: true,\n    attrs: {\n      label: {\n        default: \"\",\n        validate: \"string\"\n      }\n    },\n    parseDOM: [\n      {\n        tag: `dl[data-type=\"${id$1}\"]`,\n        getAttrs: (dom) => {\n          if (!(dom instanceof HTMLElement)) throw expectDomTypeError(dom);\n          return {\n            label: dom.dataset.label\n          };\n        },\n        contentElement: \"dd\"\n      }\n    ],\n    toDOM: (node) => {\n      const label = node.attrs.label;\n      return [\n        \"dl\",\n        {\n          // TODO: add a prosemirror plugin to sync label on change\n          \"data-label\": label,\n          \"data-type\": id$1\n        },\n        [\"dt\", label],\n        [\"dd\", 0]\n      ];\n    },\n    parseMarkdown: {\n      match: ({ type }) => type === markdownId,\n      runner: (state, node, type) => {\n        state.openNode(type, {\n          label: node.label\n        }).next(node.children).closeNode();\n      }\n    },\n    toMarkdown: {\n      match: (node) => node.type.name === id$1,\n      runner: (state, node) => {\n        state.openNode(markdownId, void 0, {\n          label: node.attrs.label,\n          identifier: node.attrs.label\n        }).next(node.content).closeNode();\n      }\n    }\n  })\n);\nwithMeta(footnoteDefinitionSchema.ctx, {\n  displayName: \"NodeSchemaCtx<footnodeDef>\",\n  group: \"footnote\"\n});\nwithMeta(footnoteDefinitionSchema.node, {\n  displayName: \"NodeSchema<footnodeDef>\",\n  group: \"footnote\"\n});\nconst id = \"footnote_reference\";\nconst footnoteReferenceSchema = $nodeSchema(\n  \"footnote_reference\",\n  () => ({\n    group: \"inline\",\n    inline: true,\n    atom: true,\n    attrs: {\n      label: {\n        default: \"\",\n        validate: \"string\"\n      }\n    },\n    parseDOM: [\n      {\n        tag: `sup[data-type=\"${id}\"]`,\n        getAttrs: (dom) => {\n          if (!(dom instanceof HTMLElement)) throw expectDomTypeError(dom);\n          return {\n            label: dom.dataset.label\n          };\n        }\n      }\n    ],\n    toDOM: (node) => {\n      const label = node.attrs.label;\n      return [\n        \"sup\",\n        {\n          // TODO: add a prosemirror plugin to sync label on change\n          \"data-label\": label,\n          \"data-type\": id\n        },\n        label\n      ];\n    },\n    parseMarkdown: {\n      match: ({ type }) => type === \"footnoteReference\",\n      runner: (state, node, type) => {\n        state.addNode(type, {\n          label: node.label\n        });\n      }\n    },\n    toMarkdown: {\n      match: (node) => node.type.name === id,\n      runner: (state, node) => {\n        state.addNode(\"footnoteReference\", void 0, void 0, {\n          label: node.attrs.label,\n          identifier: node.attrs.label\n        });\n      }\n    }\n  })\n);\nwithMeta(footnoteReferenceSchema.ctx, {\n  displayName: \"NodeSchemaCtx<footnodeRef>\",\n  group: \"footnote\"\n});\nwithMeta(footnoteReferenceSchema.node, {\n  displayName: \"NodeSchema<footnodeRef>\",\n  group: \"footnote\"\n});\nconst extendListItemSchemaForTask = listItemSchema.extendSchema(\n  (prev) => {\n    return (ctx) => {\n      const baseSchema = prev(ctx);\n      return {\n        ...baseSchema,\n        attrs: {\n          ...baseSchema.attrs,\n          checked: {\n            default: null,\n            validate: \"boolean|null\"\n          }\n        },\n        parseDOM: [\n          {\n            tag: 'li[data-item-type=\"task\"]',\n            getAttrs: (dom) => {\n              if (!(dom instanceof HTMLElement)) throw expectDomTypeError(dom);\n              return {\n                label: dom.dataset.label,\n                listType: dom.dataset.listType,\n                spread: dom.dataset.spread,\n                checked: dom.dataset.checked ? dom.dataset.checked === \"true\" : null\n              };\n            }\n          },\n          ...baseSchema?.parseDOM || []\n        ],\n        toDOM: (node) => {\n          if (baseSchema.toDOM && node.attrs.checked == null)\n            return baseSchema.toDOM(node);\n          return [\n            \"li\",\n            {\n              \"data-item-type\": \"task\",\n              \"data-label\": node.attrs.label,\n              \"data-list-type\": node.attrs.listType,\n              \"data-spread\": node.attrs.spread,\n              \"data-checked\": node.attrs.checked\n            },\n            0\n          ];\n        },\n        parseMarkdown: {\n          match: ({ type }) => type === \"listItem\",\n          runner: (state, node, type) => {\n            if (node.checked == null) {\n              baseSchema.parseMarkdown.runner(state, node, type);\n              return;\n            }\n            const label = node.label != null ? `${node.label}.` : \"•\";\n            const checked = node.checked != null ? Boolean(node.checked) : null;\n            const listType = node.label != null ? \"ordered\" : \"bullet\";\n            const spread = node.spread != null ? `${node.spread}` : \"true\";\n            state.openNode(type, { label, listType, spread, checked });\n            state.next(node.children);\n            state.closeNode();\n          }\n        },\n        toMarkdown: {\n          match: (node) => node.type.name === \"list_item\",\n          runner: (state, node) => {\n            if (node.attrs.checked == null) {\n              baseSchema.toMarkdown.runner(state, node);\n              return;\n            }\n            const label = node.attrs.label;\n            const listType = node.attrs.listType;\n            const spread = node.attrs.spread === \"true\";\n            const checked = node.attrs.checked;\n            state.openNode(\"listItem\", void 0, {\n              label,\n              listType,\n              spread,\n              checked\n            });\n            state.next(node.content);\n            state.closeNode();\n          }\n        }\n      };\n    };\n  }\n);\nwithMeta(extendListItemSchemaForTask.node, {\n  displayName: \"NodeSchema<taskListItem>\",\n  group: \"ListItem\"\n});\nwithMeta(extendListItemSchemaForTask.ctx, {\n  displayName: \"NodeSchemaCtx<taskListItem>\",\n  group: \"ListItem\"\n});\nconst wrapInTaskListInputRule = $inputRule(() => {\n  return new InputRule(\n    /^\\[(?<checked>\\s|x)\\]\\s$/,\n    (state, match, start, end) => {\n      const pos = state.doc.resolve(start);\n      let depth = 0;\n      let node = pos.node(depth);\n      while (node && node.type.name !== \"list_item\") {\n        depth--;\n        node = pos.node(depth);\n      }\n      if (!node || node.attrs.checked != null) return null;\n      const checked = Boolean(match.groups?.checked === \"x\");\n      const finPos = pos.before(depth);\n      const tr = state.tr;\n      tr.deleteRange(start, end).setNodeMarkup(finPos, void 0, {\n        ...node.attrs,\n        checked\n      });\n      return tr;\n    }\n  );\n});\nwithMeta(wrapInTaskListInputRule, {\n  displayName: \"InputRule<wrapInTaskListInputRule>\",\n  group: \"ListItem\"\n});\nconst keymap = [\n  strikethroughKeymap,\n  tableKeymap\n].flat();\nconst inputRules = [\n  insertTableInputRule,\n  wrapInTaskListInputRule\n];\nconst markInputRules = [strikethroughInputRule];\nconst pasteRules = [tablePasteRule];\nconst autoInsertSpanPlugin = $prose(() => imeSpan);\nwithMeta(autoInsertSpanPlugin, {\n  displayName: \"Prose<autoInsertSpanPlugin>\",\n  group: \"Prose\"\n});\nconst columnResizingPlugin = $prose(() => columnResizing({}));\nwithMeta(columnResizingPlugin, {\n  displayName: \"Prose<columnResizingPlugin>\",\n  group: \"Prose\"\n});\nconst tableEditingPlugin = $prose(\n  () => tableEditing({ allowTableNodeSelection: true })\n);\nwithMeta(tableEditingPlugin, {\n  displayName: \"Prose<tableEditingPlugin>\",\n  group: \"Prose\"\n});\nconst remarkGFMPlugin = $remark(\"remarkGFM\", () => remarkGFM);\nwithMeta(remarkGFMPlugin.plugin, {\n  displayName: \"Remark<remarkGFMPlugin>\",\n  group: \"Remark\"\n});\nwithMeta(remarkGFMPlugin.options, {\n  displayName: \"RemarkConfig<remarkGFMPlugin>\",\n  group: \"Remark\"\n});\nconst pluginKey = new PluginKey(\"MILKDOWN_KEEP_TABLE_ALIGN_PLUGIN\");\nfunction getChildIndex(node, parent) {\n  let index = 0;\n  parent.forEach((child, _offset, i) => {\n    if (child === node) index = i;\n  });\n  return index;\n}\nconst keepTableAlignPlugin = $prose(() => {\n  return new Plugin({\n    key: pluginKey,\n    appendTransaction: (_tr, oldState, state) => {\n      let tr;\n      const check = (node, pos) => {\n        if (!tr) tr = state.tr;\n        if (node.type.name !== \"table_cell\") return;\n        const $pos = state.doc.resolve(pos);\n        const tableRow = $pos.node($pos.depth);\n        const table = $pos.node($pos.depth - 1);\n        const tableHeaderRow = table.firstChild;\n        if (!tableHeaderRow) return;\n        const index = getChildIndex(node, tableRow);\n        const headerCell = tableHeaderRow.maybeChild(index);\n        if (!headerCell) return;\n        const align = headerCell.attrs.alignment;\n        const currentAlign = node.attrs.alignment;\n        if (align === currentAlign) return;\n        tr.setNodeMarkup(pos, void 0, { ...node.attrs, alignment: align });\n      };\n      if (oldState.doc !== state.doc) state.doc.descendants(check);\n      return tr;\n    }\n  });\n});\nwithMeta(keepTableAlignPlugin, {\n  displayName: \"Prose<keepTableAlignPlugin>\",\n  group: \"Prose\"\n});\nconst plugins = [\n  keepTableAlignPlugin,\n  autoInsertSpanPlugin,\n  remarkGFMPlugin,\n  tableEditingPlugin\n].flat();\nconst schema = [\n  extendListItemSchemaForTask,\n  tableSchema,\n  tableHeaderRowSchema,\n  tableRowSchema,\n  tableHeaderSchema,\n  tableCellSchema,\n  footnoteDefinitionSchema,\n  footnoteReferenceSchema,\n  strikethroughAttr,\n  strikethroughSchema\n].flat();\nconst commands = [\n  goToNextTableCellCommand,\n  goToPrevTableCellCommand,\n  exitTable,\n  insertTableCommand,\n  moveRowCommand,\n  moveColCommand,\n  selectRowCommand,\n  selectColCommand,\n  selectTableCommand,\n  deleteSelectedCellsCommand,\n  addRowBeforeCommand,\n  addRowAfterCommand,\n  addColBeforeCommand,\n  addColAfterCommand,\n  setAlignCommand,\n  toggleStrikethroughCommand\n];\nconst gfm = [\n  schema,\n  inputRules,\n  pasteRules,\n  markInputRules,\n  keymap,\n  commands,\n  plugins\n].flat();\nexport {\n  addColAfterCommand,\n  addColBeforeCommand,\n  addRowAfterCommand,\n  addRowBeforeCommand,\n  addRowWithAlignment,\n  autoInsertSpanPlugin,\n  columnResizingPlugin,\n  commands,\n  createTable,\n  deleteSelectedCellsCommand,\n  exitTable,\n  extendListItemSchemaForTask,\n  footnoteDefinitionSchema,\n  footnoteReferenceSchema,\n  getAllCellsInTable,\n  getCellsInCol,\n  getCellsInRow,\n  gfm,\n  goToNextTableCellCommand,\n  goToPrevTableCellCommand,\n  inputRules,\n  insertTableCommand,\n  insertTableInputRule,\n  keepTableAlignPlugin,\n  keymap,\n  markInputRules,\n  moveColCommand,\n  moveRowCommand,\n  pasteRules,\n  plugins,\n  remarkGFMPlugin,\n  schema,\n  selectCol,\n  selectColCommand,\n  selectLine,\n  selectRow,\n  selectRowCommand,\n  selectTable,\n  selectTableCommand,\n  setAlignCommand,\n  strikethroughAttr,\n  strikethroughInputRule,\n  strikethroughKeymap,\n  strikethroughSchema,\n  tableCellSchema,\n  tableEditingPlugin,\n  tableHeaderRowSchema,\n  tableHeaderSchema,\n  tableKeymap,\n  tablePasteRule,\n  tableRowSchema,\n  tableSchema,\n  toggleStrikethroughCommand,\n  wrapInTaskListInputRule\n};\n//# sourceMappingURL=index.js.map\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","import { InitReady, SerializerReady, serializerCtx, prosePluginsCtx, EditorViewReady } from \"@milkdown/core\";\nimport { createSlice } from \"@milkdown/ctx\";\nimport { PluginKey, Plugin } from \"@milkdown/prose/state\";\nimport { debounce } from \"lodash-es\";\nclass ListenerManager {\n  constructor() {\n    this.beforeMountedListeners = [];\n    this.mountedListeners = [];\n    this.updatedListeners = [];\n    this.selectionUpdatedListeners = [];\n    this.markdownUpdatedListeners = [];\n    this.blurListeners = [];\n    this.focusListeners = [];\n    this.destroyListeners = [];\n    this.beforeMount = (fn) => {\n      this.beforeMountedListeners.push(fn);\n      return this;\n    };\n    this.mounted = (fn) => {\n      this.mountedListeners.push(fn);\n      return this;\n    };\n    this.updated = (fn) => {\n      this.updatedListeners.push(fn);\n      return this;\n    };\n  }\n  /// A getter to get all [subscribers](#interface-subscribers). You should not use this method directly.\n  get listeners() {\n    return {\n      beforeMount: this.beforeMountedListeners,\n      mounted: this.mountedListeners,\n      updated: this.updatedListeners,\n      markdownUpdated: this.markdownUpdatedListeners,\n      blur: this.blurListeners,\n      focus: this.focusListeners,\n      destroy: this.destroyListeners,\n      selectionUpdated: this.selectionUpdatedListeners\n    };\n  }\n  /// Subscribe to the markdownUpdated event.\n  /// This event will be triggered after the editor state is updated and **the document is changed**.\n  /// The second parameter is the current markdown and the third parameter is the previous markdown.\n  markdownUpdated(fn) {\n    this.markdownUpdatedListeners.push(fn);\n    return this;\n  }\n  /// Subscribe to the blur event.\n  /// This event will be triggered when the editor is blurred.\n  blur(fn) {\n    this.blurListeners.push(fn);\n    return this;\n  }\n  /// Subscribe to the focus event.\n  /// This event will be triggered when the editor is focused.\n  focus(fn) {\n    this.focusListeners.push(fn);\n    return this;\n  }\n  /// Subscribe to the destroy event.\n  /// This event will be triggered before the editor is destroyed.\n  destroy(fn) {\n    this.destroyListeners.push(fn);\n    return this;\n  }\n  /// Subscribe to the selectionUpdated event.\n  /// This event will be triggered when the editor selection is updated.\n  selectionUpdated(fn) {\n    this.selectionUpdatedListeners.push(fn);\n    return this;\n  }\n}\nconst listenerCtx = createSlice(\n  new ListenerManager(),\n  \"listener\"\n);\nconst key = new PluginKey(\"MILKDOWN_LISTENER\");\nconst listener = (ctx) => {\n  ctx.inject(listenerCtx, new ListenerManager());\n  return async () => {\n    await ctx.wait(InitReady);\n    const listener2 = ctx.get(listenerCtx);\n    const { listeners } = listener2;\n    listeners.beforeMount.forEach((fn) => fn(ctx));\n    await ctx.wait(SerializerReady);\n    const serializer = ctx.get(serializerCtx);\n    let prevDoc = null;\n    let prevMarkdown = null;\n    let prevSelection = null;\n    const plugin = new Plugin({\n      key,\n      view: () => {\n        return {\n          destroy: () => {\n            listeners.destroy.forEach((fn) => fn(ctx));\n          }\n        };\n      },\n      props: {\n        handleDOMEvents: {\n          focus: () => {\n            listeners.focus.forEach((fn) => fn(ctx));\n            return false;\n          },\n          blur: () => {\n            listeners.blur.forEach((fn) => fn(ctx));\n            return false;\n          }\n        }\n      },\n      state: {\n        init: (_, instance) => {\n          prevDoc = instance.doc;\n          prevMarkdown = serializer(instance.doc);\n        },\n        apply: (tr) => {\n          const currentSelection = tr.selection;\n          if (!prevSelection && currentSelection || prevSelection && !currentSelection.eq(prevSelection)) {\n            listeners.selectionUpdated.forEach((fn) => {\n              fn(ctx, currentSelection, prevSelection);\n            });\n            prevSelection = currentSelection;\n          }\n          if (!tr.docChanged || tr.getMeta(\"addToHistory\") === false) return;\n          const handler = debounce(() => {\n            const { doc } = tr;\n            if (listeners.updated.length > 0 && prevDoc && !prevDoc.eq(doc)) {\n              listeners.updated.forEach((fn) => {\n                fn(ctx, doc, prevDoc);\n              });\n            }\n            if (listeners.markdownUpdated.length > 0 && prevDoc && !prevDoc.eq(doc)) {\n              const markdown = serializer(doc);\n              listeners.markdownUpdated.forEach((fn) => {\n                fn(ctx, markdown, prevMarkdown);\n              });\n              prevMarkdown = markdown;\n            }\n            prevDoc = doc;\n          }, 200);\n          return handler();\n        }\n      }\n    });\n    ctx.update(prosePluginsCtx, (x) => x.concat(plugin));\n    await ctx.wait(EditorViewReady);\n    listeners.mounted.forEach((fn) => fn(ctx));\n  };\n};\nlistener.meta = {\n  package: \"@milkdown/plugin-listener\",\n  displayName: \"Listener\"\n};\nexport {\n  ListenerManager,\n  key,\n  listener,\n  listenerCtx\n};\n//# sourceMappingURL=index.js.map\n","var GOOD_LEAF_SIZE = 200;\n\n// :: class<T> A rope sequence is a persistent sequence data structure\n// that supports appending, prepending, and slicing without doing a\n// full copy. It is represented as a mostly-balanced tree.\nvar RopeSequence = function RopeSequence () {};\n\nRopeSequence.prototype.append = function append (other) {\n  if (!other.length) { return this }\n  other = RopeSequence.from(other);\n\n  return (!this.length && other) ||\n    (other.length < GOOD_LEAF_SIZE && this.leafAppend(other)) ||\n    (this.length < GOOD_LEAF_SIZE && other.leafPrepend(this)) ||\n    this.appendInner(other)\n};\n\n// :: (union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Prepend an array or other rope to this one, returning a new rope.\nRopeSequence.prototype.prepend = function prepend (other) {\n  if (!other.length) { return this }\n  return RopeSequence.from(other).append(this)\n};\n\nRopeSequence.prototype.appendInner = function appendInner (other) {\n  return new Append(this, other)\n};\n\n// :: (?number, ?number) → RopeSequence<T>\n// Create a rope repesenting a sub-sequence of this rope.\nRopeSequence.prototype.slice = function slice (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from >= to) { return RopeSequence.empty }\n  return this.sliceInner(Math.max(0, from), Math.min(this.length, to))\n};\n\n// :: (number) → T\n// Retrieve the element at the given position from this rope.\nRopeSequence.prototype.get = function get (i) {\n  if (i < 0 || i >= this.length) { return undefined }\n  return this.getInner(i)\n};\n\n// :: ((element: T, index: number) → ?bool, ?number, ?number)\n// Call the given function for each element between the given\n// indices. This tends to be more efficient than looping over the\n// indices and calling `get`, because it doesn't have to descend the\n// tree for every element.\nRopeSequence.prototype.forEach = function forEach (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from <= to)\n    { this.forEachInner(f, from, to, 0); }\n  else\n    { this.forEachInvertedInner(f, from, to, 0); }\n};\n\n// :: ((element: T, index: number) → U, ?number, ?number) → [U]\n// Map the given functions over the elements of the rope, producing\n// a flat array.\nRopeSequence.prototype.map = function map (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  var result = [];\n  this.forEach(function (elt, i) { return result.push(f(elt, i)); }, from, to);\n  return result\n};\n\n// :: (?union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Create a rope representing the given array, or return the rope\n// itself if a rope was given.\nRopeSequence.from = function from (values) {\n  if (values instanceof RopeSequence) { return values }\n  return values && values.length ? new Leaf(values) : RopeSequence.empty\n};\n\nvar Leaf = /*@__PURE__*/(function (RopeSequence) {\n  function Leaf(values) {\n    RopeSequence.call(this);\n    this.values = values;\n  }\n\n  if ( RopeSequence ) Leaf.__proto__ = RopeSequence;\n  Leaf.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Leaf.prototype.constructor = Leaf;\n\n  var prototypeAccessors = { length: { configurable: true },depth: { configurable: true } };\n\n  Leaf.prototype.flatten = function flatten () {\n    return this.values\n  };\n\n  Leaf.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    return new Leaf(this.values.slice(from, to))\n  };\n\n  Leaf.prototype.getInner = function getInner (i) {\n    return this.values[i]\n  };\n\n  Leaf.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    for (var i = from; i < to; i++)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    for (var i = from - 1; i >= to; i--)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.leafAppend = function leafAppend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(this.values.concat(other.flatten())) }\n  };\n\n  Leaf.prototype.leafPrepend = function leafPrepend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(other.flatten().concat(this.values)) }\n  };\n\n  prototypeAccessors.length.get = function () { return this.values.length };\n\n  prototypeAccessors.depth.get = function () { return 0 };\n\n  Object.defineProperties( Leaf.prototype, prototypeAccessors );\n\n  return Leaf;\n}(RopeSequence));\n\n// :: RopeSequence\n// The empty rope sequence.\nRopeSequence.empty = new Leaf([]);\n\nvar Append = /*@__PURE__*/(function (RopeSequence) {\n  function Append(left, right) {\n    RopeSequence.call(this);\n    this.left = left;\n    this.right = right;\n    this.length = left.length + right.length;\n    this.depth = Math.max(left.depth, right.depth) + 1;\n  }\n\n  if ( RopeSequence ) Append.__proto__ = RopeSequence;\n  Append.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Append.prototype.constructor = Append;\n\n  Append.prototype.flatten = function flatten () {\n    return this.left.flatten().concat(this.right.flatten())\n  };\n\n  Append.prototype.getInner = function getInner (i) {\n    return i < this.left.length ? this.left.get(i) : this.right.get(i - this.left.length)\n  };\n\n  Append.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from < leftLen &&\n        this.left.forEachInner(f, from, Math.min(to, leftLen), start) === false)\n      { return false }\n    if (to > leftLen &&\n        this.right.forEachInner(f, Math.max(from - leftLen, 0), Math.min(this.length, to) - leftLen, start + leftLen) === false)\n      { return false }\n  };\n\n  Append.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from > leftLen &&\n        this.right.forEachInvertedInner(f, from - leftLen, Math.max(to, leftLen) - leftLen, start + leftLen) === false)\n      { return false }\n    if (to < leftLen &&\n        this.left.forEachInvertedInner(f, Math.min(from, leftLen), to, start) === false)\n      { return false }\n  };\n\n  Append.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    var leftLen = this.left.length;\n    if (to <= leftLen) { return this.left.slice(from, to) }\n    if (from >= leftLen) { return this.right.slice(from - leftLen, to - leftLen) }\n    return this.left.slice(from, leftLen).append(this.right.slice(0, to - leftLen))\n  };\n\n  Append.prototype.leafAppend = function leafAppend (other) {\n    var inner = this.right.leafAppend(other);\n    if (inner) { return new Append(this.left, inner) }\n  };\n\n  Append.prototype.leafPrepend = function leafPrepend (other) {\n    var inner = this.left.leafPrepend(other);\n    if (inner) { return new Append(inner, this.right) }\n  };\n\n  Append.prototype.appendInner = function appendInner (other) {\n    if (this.left.depth >= Math.max(this.right.depth, other.depth) + 1)\n      { return new Append(this.left, new Append(this.right, other)) }\n    return new Append(this, other)\n  };\n\n  return Append;\n}(RopeSequence));\n\nexport default RopeSequence;\n","import RopeSequence from 'rope-sequence';\nimport { Mapping } from 'prosemirror-transform';\nimport { PluginKey, Plugin } from 'prosemirror-state';\n\n// ProseMirror's history isn't simply a way to roll back to a previous\n// state, because ProseMirror supports applying changes without adding\n// them to the history (for example during collaboration).\n//\n// To this end, each 'Branch' (one for the undo history and one for\n// the redo history) keeps an array of 'Items', which can optionally\n// hold a step (an actual undoable change), and always hold a position\n// map (which is needed to move changes below them to apply to the\n// current document).\n//\n// An item that has both a step and a selection bookmark is the start\n// of an 'event' — a group of changes that will be undone or redone at\n// once. (It stores only the bookmark, since that way we don't have to\n// provide a document until the selection is actually applied, which\n// is useful when compressing.)\n// Used to schedule history compression\nconst max_empty_items = 500;\nclass Branch {\n    constructor(items, eventCount) {\n        this.items = items;\n        this.eventCount = eventCount;\n    }\n    // Pop the latest event off the branch's history and apply it\n    // to a document transform.\n    popEvent(state, preserveItems) {\n        if (this.eventCount == 0)\n            return null;\n        let end = this.items.length;\n        for (;; end--) {\n            let next = this.items.get(end - 1);\n            if (next.selection) {\n                --end;\n                break;\n            }\n        }\n        let remap, mapFrom;\n        if (preserveItems) {\n            remap = this.remapping(end, this.items.length);\n            mapFrom = remap.maps.length;\n        }\n        let transform = state.tr;\n        let selection, remaining;\n        let addAfter = [], addBefore = [];\n        this.items.forEach((item, i) => {\n            if (!item.step) {\n                if (!remap) {\n                    remap = this.remapping(end, i + 1);\n                    mapFrom = remap.maps.length;\n                }\n                mapFrom--;\n                addBefore.push(item);\n                return;\n            }\n            if (remap) {\n                addBefore.push(new Item(item.map));\n                let step = item.step.map(remap.slice(mapFrom)), map;\n                if (step && transform.maybeStep(step).doc) {\n                    map = transform.mapping.maps[transform.mapping.maps.length - 1];\n                    addAfter.push(new Item(map, undefined, undefined, addAfter.length + addBefore.length));\n                }\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n            }\n            else {\n                transform.maybeStep(item.step);\n            }\n            if (item.selection) {\n                selection = remap ? item.selection.map(remap.slice(mapFrom)) : item.selection;\n                remaining = new Branch(this.items.slice(0, end).append(addBefore.reverse().concat(addAfter)), this.eventCount - 1);\n                return false;\n            }\n        }, this.items.length, 0);\n        return { remaining: remaining, transform, selection: selection };\n    }\n    // Create a new branch with the given transform added.\n    addTransform(transform, selection, histOptions, preserveItems) {\n        let newItems = [], eventCount = this.eventCount;\n        let oldItems = this.items, lastItem = !preserveItems && oldItems.length ? oldItems.get(oldItems.length - 1) : null;\n        for (let i = 0; i < transform.steps.length; i++) {\n            let step = transform.steps[i].invert(transform.docs[i]);\n            let item = new Item(transform.mapping.maps[i], step, selection), merged;\n            if (merged = lastItem && lastItem.merge(item)) {\n                item = merged;\n                if (i)\n                    newItems.pop();\n                else\n                    oldItems = oldItems.slice(0, oldItems.length - 1);\n            }\n            newItems.push(item);\n            if (selection) {\n                eventCount++;\n                selection = undefined;\n            }\n            if (!preserveItems)\n                lastItem = item;\n        }\n        let overflow = eventCount - histOptions.depth;\n        if (overflow > DEPTH_OVERFLOW) {\n            oldItems = cutOffEvents(oldItems, overflow);\n            eventCount -= overflow;\n        }\n        return new Branch(oldItems.append(newItems), eventCount);\n    }\n    remapping(from, to) {\n        let maps = new Mapping;\n        this.items.forEach((item, i) => {\n            let mirrorPos = item.mirrorOffset != null && i - item.mirrorOffset >= from\n                ? maps.maps.length - item.mirrorOffset : undefined;\n            maps.appendMap(item.map, mirrorPos);\n        }, from, to);\n        return maps;\n    }\n    addMaps(array) {\n        if (this.eventCount == 0)\n            return this;\n        return new Branch(this.items.append(array.map(map => new Item(map))), this.eventCount);\n    }\n    // When the collab module receives remote changes, the history has\n    // to know about those, so that it can adjust the steps that were\n    // rebased on top of the remote changes, and include the position\n    // maps for the remote changes in its array of items.\n    rebased(rebasedTransform, rebasedCount) {\n        if (!this.eventCount)\n            return this;\n        let rebasedItems = [], start = Math.max(0, this.items.length - rebasedCount);\n        let mapping = rebasedTransform.mapping;\n        let newUntil = rebasedTransform.steps.length;\n        let eventCount = this.eventCount;\n        this.items.forEach(item => { if (item.selection)\n            eventCount--; }, start);\n        let iRebased = rebasedCount;\n        this.items.forEach(item => {\n            let pos = mapping.getMirror(--iRebased);\n            if (pos == null)\n                return;\n            newUntil = Math.min(newUntil, pos);\n            let map = mapping.maps[pos];\n            if (item.step) {\n                let step = rebasedTransform.steps[pos].invert(rebasedTransform.docs[pos]);\n                let selection = item.selection && item.selection.map(mapping.slice(iRebased + 1, pos));\n                if (selection)\n                    eventCount++;\n                rebasedItems.push(new Item(map, step, selection));\n            }\n            else {\n                rebasedItems.push(new Item(map));\n            }\n        }, start);\n        let newMaps = [];\n        for (let i = rebasedCount; i < newUntil; i++)\n            newMaps.push(new Item(mapping.maps[i]));\n        let items = this.items.slice(0, start).append(newMaps).append(rebasedItems);\n        let branch = new Branch(items, eventCount);\n        if (branch.emptyItemCount() > max_empty_items)\n            branch = branch.compress(this.items.length - rebasedItems.length);\n        return branch;\n    }\n    emptyItemCount() {\n        let count = 0;\n        this.items.forEach(item => { if (!item.step)\n            count++; });\n        return count;\n    }\n    // Compressing a branch means rewriting it to push the air (map-only\n    // items) out. During collaboration, these naturally accumulate\n    // because each remote change adds one. The `upto` argument is used\n    // to ensure that only the items below a given level are compressed,\n    // because `rebased` relies on a clean, untouched set of items in\n    // order to associate old items with rebased steps.\n    compress(upto = this.items.length) {\n        let remap = this.remapping(0, upto), mapFrom = remap.maps.length;\n        let items = [], events = 0;\n        this.items.forEach((item, i) => {\n            if (i >= upto) {\n                items.push(item);\n                if (item.selection)\n                    events++;\n            }\n            else if (item.step) {\n                let step = item.step.map(remap.slice(mapFrom)), map = step && step.getMap();\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n                if (step) {\n                    let selection = item.selection && item.selection.map(remap.slice(mapFrom));\n                    if (selection)\n                        events++;\n                    let newItem = new Item(map.invert(), step, selection), merged, last = items.length - 1;\n                    if (merged = items.length && items[last].merge(newItem))\n                        items[last] = merged;\n                    else\n                        items.push(newItem);\n                }\n            }\n            else if (item.map) {\n                mapFrom--;\n            }\n        }, this.items.length, 0);\n        return new Branch(RopeSequence.from(items.reverse()), events);\n    }\n}\nBranch.empty = new Branch(RopeSequence.empty, 0);\nfunction cutOffEvents(items, n) {\n    let cutPoint;\n    items.forEach((item, i) => {\n        if (item.selection && (n-- == 0)) {\n            cutPoint = i;\n            return false;\n        }\n    });\n    return items.slice(cutPoint);\n}\nclass Item {\n    constructor(\n    // The (forward) step map for this item.\n    map, \n    // The inverted step\n    step, \n    // If this is non-null, this item is the start of a group, and\n    // this selection is the starting selection for the group (the one\n    // that was active before the first step was applied)\n    selection, \n    // If this item is the inverse of a previous mapping on the stack,\n    // this points at the inverse's offset\n    mirrorOffset) {\n        this.map = map;\n        this.step = step;\n        this.selection = selection;\n        this.mirrorOffset = mirrorOffset;\n    }\n    merge(other) {\n        if (this.step && other.step && !other.selection) {\n            let step = other.step.merge(this.step);\n            if (step)\n                return new Item(step.getMap().invert(), step, this.selection);\n        }\n    }\n}\n// The value of the state field that tracks undo/redo history for that\n// state. Will be stored in the plugin state when the history plugin\n// is active.\nclass HistoryState {\n    constructor(done, undone, prevRanges, prevTime, prevComposition) {\n        this.done = done;\n        this.undone = undone;\n        this.prevRanges = prevRanges;\n        this.prevTime = prevTime;\n        this.prevComposition = prevComposition;\n    }\n}\nconst DEPTH_OVERFLOW = 20;\n// Record a transformation in undo history.\nfunction applyTransaction(history, state, tr, options) {\n    let historyTr = tr.getMeta(historyKey), rebased;\n    if (historyTr)\n        return historyTr.historyState;\n    if (tr.getMeta(closeHistoryKey))\n        history = new HistoryState(history.done, history.undone, null, 0, -1);\n    let appended = tr.getMeta(\"appendedTransaction\");\n    if (tr.steps.length == 0) {\n        return history;\n    }\n    else if (appended && appended.getMeta(historyKey)) {\n        if (appended.getMeta(historyKey).redo)\n            return new HistoryState(history.done.addTransform(tr, undefined, options, mustPreserveItems(state)), history.undone, rangesFor(tr.mapping.maps), history.prevTime, history.prevComposition);\n        else\n            return new HistoryState(history.done, history.undone.addTransform(tr, undefined, options, mustPreserveItems(state)), null, history.prevTime, history.prevComposition);\n    }\n    else if (tr.getMeta(\"addToHistory\") !== false && !(appended && appended.getMeta(\"addToHistory\") === false)) {\n        // Group transforms that occur in quick succession into one event.\n        let composition = tr.getMeta(\"composition\");\n        let newGroup = history.prevTime == 0 ||\n            (!appended && history.prevComposition != composition &&\n                (history.prevTime < (tr.time || 0) - options.newGroupDelay || !isAdjacentTo(tr, history.prevRanges)));\n        let prevRanges = appended ? mapRanges(history.prevRanges, tr.mapping) : rangesFor(tr.mapping.maps);\n        return new HistoryState(history.done.addTransform(tr, newGroup ? state.selection.getBookmark() : undefined, options, mustPreserveItems(state)), Branch.empty, prevRanges, tr.time, composition == null ? history.prevComposition : composition);\n    }\n    else if (rebased = tr.getMeta(\"rebased\")) {\n        // Used by the collab module to tell the history that some of its\n        // content has been rebased.\n        return new HistoryState(history.done.rebased(tr, rebased), history.undone.rebased(tr, rebased), mapRanges(history.prevRanges, tr.mapping), history.prevTime, history.prevComposition);\n    }\n    else {\n        return new HistoryState(history.done.addMaps(tr.mapping.maps), history.undone.addMaps(tr.mapping.maps), mapRanges(history.prevRanges, tr.mapping), history.prevTime, history.prevComposition);\n    }\n}\nfunction isAdjacentTo(transform, prevRanges) {\n    if (!prevRanges)\n        return false;\n    if (!transform.docChanged)\n        return true;\n    let adjacent = false;\n    transform.mapping.maps[0].forEach((start, end) => {\n        for (let i = 0; i < prevRanges.length; i += 2)\n            if (start <= prevRanges[i + 1] && end >= prevRanges[i])\n                adjacent = true;\n    });\n    return adjacent;\n}\nfunction rangesFor(maps) {\n    let result = [];\n    for (let i = maps.length - 1; i >= 0 && result.length == 0; i--)\n        maps[i].forEach((_from, _to, from, to) => result.push(from, to));\n    return result;\n}\nfunction mapRanges(ranges, mapping) {\n    if (!ranges)\n        return null;\n    let result = [];\n    for (let i = 0; i < ranges.length; i += 2) {\n        let from = mapping.map(ranges[i], 1), to = mapping.map(ranges[i + 1], -1);\n        if (from <= to)\n            result.push(from, to);\n    }\n    return result;\n}\n// Apply the latest event from one branch to the document and shift the event\n// onto the other branch.\nfunction histTransaction(history, state, redo) {\n    let preserveItems = mustPreserveItems(state);\n    let histOptions = historyKey.get(state).spec.config;\n    let pop = (redo ? history.undone : history.done).popEvent(state, preserveItems);\n    if (!pop)\n        return null;\n    let selection = pop.selection.resolve(pop.transform.doc);\n    let added = (redo ? history.done : history.undone).addTransform(pop.transform, state.selection.getBookmark(), histOptions, preserveItems);\n    let newHist = new HistoryState(redo ? added : pop.remaining, redo ? pop.remaining : added, null, 0, -1);\n    return pop.transform.setSelection(selection).setMeta(historyKey, { redo, historyState: newHist });\n}\nlet cachedPreserveItems = false, cachedPreserveItemsPlugins = null;\n// Check whether any plugin in the given state has a\n// `historyPreserveItems` property in its spec, in which case we must\n// preserve steps exactly as they came in, so that they can be\n// rebased.\nfunction mustPreserveItems(state) {\n    let plugins = state.plugins;\n    if (cachedPreserveItemsPlugins != plugins) {\n        cachedPreserveItems = false;\n        cachedPreserveItemsPlugins = plugins;\n        for (let i = 0; i < plugins.length; i++)\n            if (plugins[i].spec.historyPreserveItems) {\n                cachedPreserveItems = true;\n                break;\n            }\n    }\n    return cachedPreserveItems;\n}\n/**\nSet a flag on the given transaction that will prevent further steps\nfrom being appended to an existing history event (so that they\nrequire a separate undo command to undo).\n*/\nfunction closeHistory(tr) {\n    return tr.setMeta(closeHistoryKey, true);\n}\nconst historyKey = new PluginKey(\"history\");\nconst closeHistoryKey = new PluginKey(\"closeHistory\");\n/**\nReturns a plugin that enables the undo history for an editor. The\nplugin will track undo and redo stacks, which can be used with the\n[`undo`](https://prosemirror.net/docs/ref/#history.undo) and [`redo`](https://prosemirror.net/docs/ref/#history.redo) commands.\n\nYou can set an `\"addToHistory\"` [metadata\nproperty](https://prosemirror.net/docs/ref/#state.Transaction.setMeta) of `false` on a transaction\nto prevent it from being rolled back by undo.\n*/\nfunction history(config = {}) {\n    config = { depth: config.depth || 100,\n        newGroupDelay: config.newGroupDelay || 500 };\n    return new Plugin({\n        key: historyKey,\n        state: {\n            init() {\n                return new HistoryState(Branch.empty, Branch.empty, null, 0, -1);\n            },\n            apply(tr, hist, state) {\n                return applyTransaction(hist, state, tr, config);\n            }\n        },\n        config,\n        props: {\n            handleDOMEvents: {\n                beforeinput(view, e) {\n                    let inputType = e.inputType;\n                    let command = inputType == \"historyUndo\" ? undo : inputType == \"historyRedo\" ? redo : null;\n                    if (!command)\n                        return false;\n                    e.preventDefault();\n                    return command(view.state, view.dispatch);\n                }\n            }\n        }\n    });\n}\nfunction buildCommand(redo, scroll) {\n    return (state, dispatch) => {\n        let hist = historyKey.getState(state);\n        if (!hist || (redo ? hist.undone : hist.done).eventCount == 0)\n            return false;\n        if (dispatch) {\n            let tr = histTransaction(hist, state, redo);\n            if (tr)\n                dispatch(scroll ? tr.scrollIntoView() : tr);\n        }\n        return true;\n    };\n}\n/**\nA command function that undoes the last change, if any.\n*/\nconst undo = buildCommand(false, true);\n/**\nA command function that redoes the last undone change, if any.\n*/\nconst redo = buildCommand(true, true);\n/**\nA command function that undoes the last change. Don't scroll the\nselection into view.\n*/\nconst undoNoScroll = buildCommand(false, false);\n/**\nA command function that redoes the last undone change. Don't\nscroll the selection into view.\n*/\nconst redoNoScroll = buildCommand(true, false);\n/**\nThe amount of undoable events available in a given state.\n*/\nfunction undoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.done.eventCount : 0;\n}\n/**\nThe amount of redoable events available in a given editor state.\n*/\nfunction redoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.undone.eventCount : 0;\n}\n\nexport { closeHistory, history, redo, redoDepth, redoNoScroll, undo, undoDepth, undoNoScroll };\n","import { commandsCtx } from \"@milkdown/core\";\nimport { undo, redo, history as history$1 } from \"@milkdown/prose/history\";\nimport { $command, $ctx, $prose, $useKeymap } from \"@milkdown/utils\";\nfunction withMeta(plugin, meta) {\n  Object.assign(plugin, {\n    meta: {\n      package: \"@milkdown/plugin-history\",\n      ...meta\n    }\n  });\n  return plugin;\n}\nconst undoCommand = $command(\"Undo\", () => () => undo);\nwithMeta(undoCommand, {\n  displayName: \"Command<undo>\"\n});\nconst redoCommand = $command(\"Redo\", () => () => redo);\nwithMeta(redoCommand, {\n  displayName: \"Command<redo>\"\n});\nconst historyProviderConfig = $ctx({}, \"historyProviderConfig\");\nwithMeta(historyProviderConfig, {\n  displayName: \"Ctx<historyProviderConfig>\"\n});\nconst historyProviderPlugin = $prose(\n  (ctx) => history$1(ctx.get(historyProviderConfig.key))\n);\nwithMeta(historyProviderPlugin, {\n  displayName: \"Ctx<historyProviderPlugin>\"\n});\nconst historyKeymap = $useKeymap(\"historyKeymap\", {\n  Undo: {\n    shortcuts: \"Mod-z\",\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx);\n      return () => commands.call(undoCommand.key);\n    }\n  },\n  Redo: {\n    shortcuts: [\"Mod-y\", \"Shift-Mod-z\"],\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx);\n      return () => commands.call(redoCommand.key);\n    }\n  }\n});\nwithMeta(historyKeymap.ctx, {\n  displayName: \"KeymapCtx<history>\"\n});\nwithMeta(historyKeymap.shortcuts, {\n  displayName: \"Keymap<history>\"\n});\nconst history = [\n  historyProviderConfig,\n  historyProviderPlugin,\n  historyKeymap,\n  undoCommand,\n  redoCommand\n].flat();\nexport {\n  history,\n  historyKeymap,\n  historyProviderConfig,\n  historyProviderPlugin,\n  redoCommand,\n  undoCommand\n};\n//# sourceMappingURL=index.js.map\n","/**\n * Debug Logging Module for Quarto Review Extension\n * Provides structured logging with levels, module filtering, and verbosity control\n */\n\nexport type LogLevel = 'error' | 'warn' | 'info' | 'debug' | 'trace';\n\nexport interface DebugConfig {\n  enabled: boolean;\n  level: LogLevel;\n  modules?: string[];\n  excludeModules?: string[];\n  formatTimestamp: boolean;\n}\n\nconst LOG_LEVEL_VALUES: Record<LogLevel, number> = {\n  error: 0,\n  warn: 1,\n  info: 2,\n  debug: 3,\n  trace: 4,\n};\n\nconst LOG_STYLES: Record<LogLevel, string> = {\n  error:\n    'background-color: #ff6b6b; color: white; font-weight: bold; padding: 2px 6px; border-radius: 3px;',\n  warn: 'background-color: #ffa500; color: white; font-weight: bold; padding: 2px 6px; border-radius: 3px;',\n  info: 'background-color: #4a90e2; color: white; font-weight: bold; padding: 2px 6px; border-radius: 3px;',\n  debug:\n    'background-color: #50e3c2; color: black; font-weight: bold; padding: 2px 6px; border-radius: 3px;',\n  trace:\n    'background-color: #b8e986; color: black; font-weight: bold; padding: 2px 6px; border-radius: 3px;',\n};\n\nclass DebugLogger {\n  private config: DebugConfig;\n\n  constructor(config?: Partial<DebugConfig>) {\n    // Check for debug mode in URL or environment\n    const urlParams = new URLSearchParams(\n      typeof window !== 'undefined' ? window.location.search : ''\n    );\n    const debugFromUrl = urlParams.get('debug');\n\n    const env =\n      typeof process !== 'undefined' && process.env ? process.env : {};\n    const debugEnv = env['DEBUG'];\n    const debugLevelEnv = env['DEBUG_LEVEL'];\n    const debugModulesEnv = env['DEBUG_MODULES'];\n    const debugExcludeEnv = env['DEBUG_EXCLUDE'];\n\n    const normalizeList = (\n      value?: string | string[] | null\n    ): string[] | undefined => {\n      if (!value) return undefined;\n      if (Array.isArray(value)) {\n        return value\n          .map((entry) => entry?.toString().trim())\n          .filter((entry): entry is string => Boolean(entry));\n      }\n      return value\n        .split(',')\n        .map((entry) => entry.trim())\n        .filter((entry) => entry.length > 0);\n    };\n\n    this.config = {\n      enabled: debugFromUrl !== null || debugEnv === 'true',\n      level:\n        (debugFromUrl as LogLevel) || (debugLevelEnv as LogLevel) || 'info',\n      modules: normalizeList(debugModulesEnv),\n      excludeModules: normalizeList(debugExcludeEnv),\n      formatTimestamp: true,\n      ...config,\n    };\n\n    this.config.modules = normalizeList(this.config.modules);\n    this.config.excludeModules = normalizeList(this.config.excludeModules);\n  }\n\n  /**\n   * Update debug configuration\n   */\n  setConfig(config: Partial<DebugConfig>): void {\n    const normalizeList = (\n      value?: string | string[] | null\n    ): string[] | undefined => {\n      if (!value) return undefined;\n      if (Array.isArray(value)) {\n        return value\n          .map((entry) => entry?.toString().trim())\n          .filter((entry): entry is string => Boolean(entry));\n      }\n      return value\n        .split(',')\n        .map((entry) => entry.trim())\n        .filter((entry) => entry.length > 0);\n    };\n\n    const next: DebugConfig = {\n      ...this.config,\n      ...config,\n    };\n\n    next.modules = normalizeList(config.modules ?? this.config.modules);\n    next.excludeModules = normalizeList(\n      config.excludeModules ?? this.config.excludeModules\n    );\n\n    this.config = next;\n  }\n\n  /**\n   * Get current configuration\n   */\n  getConfig(): DebugConfig {\n    return { ...this.config };\n  }\n\n  /**\n   * Enable debug mode\n   */\n  enable(level: LogLevel = 'info'): void {\n    this.config.enabled = true;\n    this.config.level = level;\n  }\n\n  /**\n   * Disable debug mode\n   */\n  disable(): void {\n    this.config.enabled = false;\n  }\n\n  /**\n   * Check if a module should be logged\n   */\n  private shouldLog(module: string, level: LogLevel): boolean {\n    if (!this.config.enabled) {\n      return false;\n    }\n\n    // Check if log level meets threshold\n    if (LOG_LEVEL_VALUES[level] > LOG_LEVEL_VALUES[this.config.level]) {\n      return false;\n    }\n\n    // Check module include list\n    if (this.config.modules && this.config.modules.length > 0) {\n      if (!this.config.modules.some((m) => module.includes(m))) {\n        return false;\n      }\n    }\n\n    // Check module exclude list\n    if (this.config.excludeModules && this.config.excludeModules.length > 0) {\n      if (this.config.excludeModules.some((m) => module.includes(m))) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Format timestamp\n   */\n  private formatTime(): string {\n    if (!this.config.formatTimestamp) {\n      return '';\n    }\n    const now = new Date();\n    return `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}:${now.getSeconds().toString().padStart(2, '0')}.${now.getMilliseconds().toString().padStart(3, '0')}`;\n  }\n\n  /**\n   * Core logging method\n   */\n  private log(\n    module: string,\n    level: LogLevel,\n    message: string,\n    data?: unknown\n  ): void {\n    if (!this.shouldLog(module, level)) {\n      return;\n    }\n\n    const timestamp = this.formatTime();\n    const consoleMethod = level === 'warn' || level === 'error' ? level : 'log';\n\n    if (typeof window !== 'undefined' && window.console) {\n      const parts = [\n        `%c[${level.toUpperCase()}]`,\n        LOG_STYLES[level],\n        timestamp ? `[${timestamp}]` : '',\n        `[${module}]`,\n        message,\n      ].filter((p) => p !== '');\n\n      if (data !== undefined) {\n        console[consoleMethod as 'log' | 'warn' | 'error'](...parts, data);\n      } else {\n        console[consoleMethod as 'log' | 'warn' | 'error'](...parts);\n      }\n    }\n  }\n\n  /**\n   * Log error message\n   */\n  error(module: string, message: string, error?: unknown): void {\n    this.log(module, 'error', message, error);\n  }\n\n  /**\n   * Log warning message\n   */\n  warn(module: string, message: string, data?: unknown): void {\n    this.log(module, 'warn', message, data);\n  }\n\n  /**\n   * Log info message\n   */\n  info(module: string, message: string, data?: unknown): void {\n    this.log(module, 'info', message, data);\n  }\n\n  /**\n   * Log debug message\n   */\n  debug(module: string, message: string, data?: unknown): void {\n    this.log(module, 'debug', message, data);\n  }\n\n  /**\n   * Log trace message (most verbose)\n   */\n  trace(module: string, message: string, data?: unknown): void {\n    this.log(module, 'trace', message, data);\n  }\n}\n\n// Create singleton instance\nexport const debugLogger = new DebugLogger();\n\n/**\n * Create a debug logger for a specific module\n */\nexport function createModuleLogger(moduleName: string) {\n  return {\n    error: (message: string, error?: unknown) =>\n      debugLogger.error(moduleName, message, error),\n    warn: (message: string, data?: unknown) =>\n      debugLogger.warn(moduleName, message, data),\n    info: (message: string, data?: unknown) =>\n      debugLogger.info(moduleName, message, data),\n    debug: (message: string, data?: unknown) =>\n      debugLogger.debug(moduleName, message, data),\n    trace: (message: string, data?: unknown) =>\n      debugLogger.trace(moduleName, message, data),\n  };\n}\n\n/**\n * Print debug configuration and usage guide\n */\nexport function printDebugHelp(): void {\n  console.log(\n    `\n%c╔══════════════════════════════════════════════════════════╗\n║  Quarto Review Extension - Debug Mode Help               ║\n╚══════════════════════════════════════════════════════════╝%c\n\n%cURL Parameters:%c\n  ?debug=error|warn|info|debug|trace\n    Set debug level (default: info)\n\n%cEnvironment Variables:%c\n  DEBUG=true                    Enable debug mode\n  DEBUG_LEVEL=level             Set verbosity level\n  DEBUG_MODULES=ui,changes      Only log specified modules\n  DEBUG_EXCLUDE=git             Exclude modules from logging\n\n%cProgrammatic Usage:%c\n  debugLogger.enable('debug')   Enable debug mode\n  debugLogger.disable()         Disable debug mode\n  debugLogger.setConfig({...})  Update configuration\n\n%cExample:%c\n  ?debug=debug&module=ui        Enable debug mode for UI module only\n  debugLogger.setConfig({ modules: ['changes', 'ui'] })\n\n%cLog Levels (lowest to highest verbosity):%c\n  error  - Errors only\n  warn   - Errors and warnings\n  info   - General information (default)\n  debug  - Detailed debugging info\n  trace  - Most verbose, includes tracing\n`,\n    'font-weight: bold; color: #4a90e2; font-size: 12px;',\n    'color: inherit; font-weight: normal;',\n    'font-weight: bold; color: #4a90e2;',\n    'color: inherit; font-weight: normal;',\n    'font-weight: bold; color: #4a90e2;',\n    'color: inherit; font-weight: normal;',\n    'font-weight: bold; color: #4a90e2;',\n    'color: inherit; font-weight: normal;',\n    'font-weight: bold; color: #4a90e2;',\n    'color: inherit; font-weight: normal;',\n    'font-weight: bold; color: #4a90e2;',\n    'color: inherit; font-weight: normal;'\n  );\n}\n\n// Expose globally for development\nif (typeof window !== 'undefined') {\n  (window as any).debugLogger = debugLogger;\n  (window as any).printDebugHelp = printDebugHelp;\n}\n\nexport default debugLogger;\n","/**\n * Remark plugin for CriticMarkup syntax - Milkdown compatible\n * This plugin creates tokens that Milkdown's mark parser can understand\n *\n * IMPORTANT: This plugin does NOT use unist-util-visit to avoid circular references.\n * Instead, it manually walks the tree without adding parent references.\n */\n\nimport type { Root, Text, Parent, Node } from 'mdast';\nimport type { Plugin } from 'unified';\nimport type {\n  Handle as ToMarkdownHandle,\n  Options as ToMarkdownExtension,\n} from 'mdast-util-to-markdown';\n\n/**\n * CriticMarkup patterns\n * Using [\\s\\S] instead of . to match newlines\n */\nconst PATTERNS = {\n  addition: /\\{\\+\\+([\\s\\S]+?)\\+\\+\\}/g,\n  deletion: /\\{--([\\s\\S]+?)--\\}/g,\n  substitution: /\\{~~([\\s\\S]+?)~>([\\s\\S]+?)~~\\}/g,\n  comment: /\\{>>([\\s\\S]+?)<<\\}/g,\n  highlight: /\\{==([\\s\\S]+?)==\\}(?:\\{>>([\\s\\S]+?)<<\\})?/g,\n};\n\n/**\n * Check if text contains CriticMarkup syntax\n */\nfunction hasCriticMarkup(text: string): boolean {\n  return Object.values(PATTERNS).some((pattern) => {\n    pattern.lastIndex = 0;\n    return pattern.test(text);\n  });\n}\n\n// Create text nodes with only essential properties - NO parent references\nconst createText = (value: string): Text => ({\n  type: 'text',\n  value,\n});\n\n// Create criticMarkup nodes - NO parent references\nconst createMarkup = (markup: string, value: string) => ({\n  type: 'criticMarkup' as const,\n  markup,\n  children: [createText(value)],\n});\n\n/**\n * Parse CriticMarkup syntax into tokens with children\n * Returns completely clean nodes without ANY circular references\n */\nfunction parseCriticMarkup(text: string): any[] {\n  const nodes: any[] = [];\n  let lastIndex = 0;\n\n  // Create a combined regex to find all CriticMarkup in order\n  const combinedPattern =\n    /(\\{\\+\\+([\\s\\S]+?)\\+\\+\\})|(\\{--([\\s\\S]+?)--\\})|(\\{~~([\\s\\S]+?)~>([\\s\\S]+?)~~\\})|(\\{>>([\\s\\S]+?)<<\\})|(\\{==([\\s\\S]+?)==\\}(?:\\{>>([\\s\\S]+?)<<\\})?)/g;\n\n  let match;\n  while ((match = combinedPattern.exec(text)) !== null) {\n    const fullMatch = match?.[0] ?? '';\n    const matchIndex = match?.index ?? 0;\n    // Add text before the match\n    if (matchIndex > lastIndex) {\n      nodes.push(createText(text.substring(lastIndex, matchIndex)));\n    }\n\n    // Determine which pattern matched\n    if (match?.[1]) {\n      // Addition: {++text++}\n      nodes.push(createMarkup('addition', match?.[2] ?? ''));\n    } else if (match?.[3]) {\n      // Deletion: {--text--}\n      nodes.push(createMarkup('deletion', match?.[4] ?? ''));\n    } else if (match?.[5]) {\n      // Substitution: {~~old~>new~~}\n      nodes.push(createMarkup('deletion', match?.[6] ?? ''));\n      nodes.push(createMarkup('addition', match?.[7] ?? ''));\n    } else if (match?.[8]) {\n      // Comment: {>>text<<}\n      nodes.push(createMarkup('comment', match?.[9] ?? ''));\n    } else if (match?.[10]) {\n      // Highlight: {==text==}{>>comment<<}?\n      nodes.push(createMarkup('highlight', match?.[11] ?? ''));\n      if (match?.[12]) {\n        nodes.push(createMarkup('comment', match[12] ?? ''));\n      }\n    }\n\n    lastIndex = matchIndex + fullMatch.length;\n  }\n\n  // Add remaining text\n  if (lastIndex < text.length) {\n    nodes.push(createText(text.substring(lastIndex)));\n  }\n\n  return nodes;\n}\n\n/**\n * Create a clean copy of a node without parent/position references\n * Recursively cleans all nested objects\n */\nfunction cleanCopyNode(node: any): any {\n  if (node === null || node === undefined) return node;\n\n  // Handle primitives\n  if (typeof node !== 'object') return node;\n\n  // Handle arrays\n  if (Array.isArray(node)) {\n    return node.map((item) => cleanCopyNode(item));\n  }\n\n  // Create clean object\n  const cleaned: any = {};\n\n  // Only copy type first if it exists\n  if ('type' in node) {\n    cleaned.type = node.type;\n  }\n\n  // Copy all other safe properties recursively\n  for (const key in node) {\n    if (key === 'parent' || key === 'position') continue;\n    if (!node.hasOwnProperty(key)) continue;\n    if (key === 'type') continue; // Already handled\n    if (key === 'children') continue; // Will be handled separately\n\n    // Recursively clean the property value\n    cleaned[key] = cleanCopyNode(node[key]);\n  }\n\n  return cleaned;\n}\n\n/**\n * Process a node's children to parse CriticMarkup\n * Returns NEW children array, does not modify original\n */\nfunction processNodeChildren(node: Parent): any[] {\n  if (!node.children) return [];\n\n  const nextChildren: any[] = [];\n\n  for (const child of node.children) {\n    if (child.type !== 'text') {\n      // Recursively process children if they have children\n      if ('children' in child && Array.isArray((child as any).children)) {\n        const processedGrandchildren = processNodeChildren(child as Parent);\n        // Create a clean copy without parent/position\n        const newChild = cleanCopyNode(child);\n        newChild.children = processedGrandchildren;\n        nextChildren.push(newChild);\n      } else {\n        // Create a clean copy without parent/position\n        nextChildren.push(cleanCopyNode(child));\n      }\n      continue;\n    }\n\n    const textChild = child as Text;\n    if (!hasCriticMarkup(textChild.value)) {\n      // Create a clean copy of the text node\n      nextChildren.push(createText(textChild.value));\n      continue;\n    }\n\n    const parsed = parseCriticMarkup(textChild.value);\n    nextChildren.push(...parsed);\n  }\n\n  return nextChildren;\n}\n\n/**\n * Manually walk the tree and return a new tree without parent references\n * Does NOT modify the original tree\n */\nfunction walkTree(node: Node): Node {\n  if (!('children' in node) || !Array.isArray((node as any).children)) {\n    // Leaf node - return a clean copy\n    return cleanCopyNode(node);\n  }\n\n  const parent = node as Parent;\n\n  // ALWAYS process children to extract CriticMarkup at any level\n  // This ensures CriticMarkup is processed even when nested inside strong, emphasis, link, etc.\n  const newChildren = processNodeChildren(parent);\n\n  // Return a clean copy of the node with new children\n  const cleanNode = cleanCopyNode(node);\n  cleanNode.children = newChildren;\n  return cleanNode as Node;\n}\n\n/**\n * Deep clean a node to remove all parent references and position data that could contain cycles\n */\nfunction deepCleanNode(node: any): any {\n  if (node === null || typeof node !== 'object') {\n    return node;\n  }\n\n  if (Array.isArray(node)) {\n    return node.map(deepCleanNode);\n  }\n\n  // Create a new object with only safe properties\n  const cleaned: any = {};\n\n  for (const key in node) {\n    // Skip parent and position to avoid any circular references\n    if (key === 'parent' || key === 'position') {\n      continue;\n    }\n\n    if (node.hasOwnProperty(key)) {\n      cleaned[key] = deepCleanNode(node[key]);\n    }\n  }\n\n  return cleaned;\n}\n\ninterface CriticMarkupNode extends Parent {\n  type: 'criticMarkup';\n  markup: string;\n}\n\nconst CRITIC_DELIMITERS: Record<string, [string, string]> = {\n  addition: ['{++', '++}'],\n  deletion: ['{--', '--}'],\n  highlight: ['{==', '==}'],\n  comment: ['{>>', '<<}'],\n  substitution: ['{~~', '~~}'],\n};\n\nconst criticMarkupToMarkdown: ToMarkdownExtension = {\n  unsafe: [\n    { character: '{', inConstruct: 'phrasing' },\n    { character: '}', inConstruct: 'phrasing' },\n  ],\n  handlers: {\n    criticMarkup: ((node, _parent, state, info) => {\n      const { markup } = node as CriticMarkupNode;\n      const [open, close] = CRITIC_DELIMITERS[markup] ?? ['', ''];\n\n      const tracker = state.createTracker(info);\n      const exit = state.enter('criticMarkup' as any);\n\n      let value = tracker.move(open);\n\n      value += state.containerPhrasing(node as any, {\n        ...tracker.current(),\n        before: value,\n        after: close ? close.charAt(0) : '',\n      });\n\n      value += tracker.move(close);\n      exit();\n      return value;\n    }) as ToMarkdownHandle,\n  } as any,\n};\n\n/**\n * Remark plugin to transform CriticMarkup syntax into Milkdown-compatible tokens\n * Uses manual tree walking instead of unist-util-visit to avoid circular references\n */\nexport const remarkCriticMarkupMilkdown: Plugin<[], Root> = function () {\n  // Register custom toMarkdown handler so CriticMarkup serializes correctly\n  const data = this.data();\n  const toMarkdown =\n    (data.toMarkdownExtensions as ToMarkdownExtension[] | undefined) ??\n    (data.toMarkdownExtensions = []);\n\n  toMarkdown.push(criticMarkupToMarkdown);\n\n  return (tree: Root) => {\n    // Walk the tree and get a completely new tree without parent references\n    const newTree = walkTree(tree) as Root;\n    // Deep clean to be absolutely sure no circular refs remain\n    return deepCleanNode(newTree) as Root;\n  };\n};\n\nexport default remarkCriticMarkupMilkdown;\n","import {\n  $mark,\n  $inputRule,\n  $prose,\n  $useKeymap,\n  $remark,\n} from '@milkdown/utils';\nimport { Plugin, PluginKey } from '@milkdown/prose/state';\nimport type { MarkSchema } from '@milkdown/transformer';\nimport { toggleMark } from '@milkdown/prose/commands';\nimport { schemaCtx } from '@milkdown/core';\nimport { remarkCriticMarkupMilkdown } from './remark-parser';\n\n// ---- MARK HELPERS ---- //\n\nfunction createCriticMark(\n  schemaName: string,\n  markupName: string,\n  className: string\n): MarkSchema {\n  return {\n    // Prevent invalid mark nesting in lists or other blocks\n    excludes: '',\n\n    parseDOM: [\n      { tag: `span[data-critic=\"${markupName}\"]` },\n      ...(markupName === 'addition' ? [{ tag: 'ins' }] : []),\n      ...(markupName === 'deletion' ? [{ tag: 'del' }] : []),\n      ...(markupName === 'highlight' ? [{ tag: 'mark' }] : []),\n    ],\n\n    toDOM: (): [string, Record<string, string>, 0] => {\n      if (markupName === 'addition')\n        return ['ins', { 'data-critic': markupName, class: className }, 0];\n      if (markupName === 'deletion')\n        return ['del', { 'data-critic': markupName, class: className }, 0];\n      if (markupName === 'highlight')\n        return ['mark', { 'data-critic': markupName, class: className }, 0];\n      return ['span', { 'data-critic': markupName, class: className }, 0];\n    },\n\n    parseMarkdown: {\n      match: (node: any) =>\n        node.type === 'criticMarkup' && node.markup === markupName,\n      runner: (state: any, node: any, markType: any) => {\n        state.openMark(markType);\n\n        // Extract text values and create completely new objects\n        // This ensures NO references to original nodes remain\n        const textValues: string[] = [];\n\n        if (node.children && Array.isArray(node.children)) {\n          for (const child of node.children) {\n            if (child && child.type === 'text' && child.value) {\n              textValues.push(String(child.value));\n            }\n          }\n        }\n\n        // Create brand new text nodes from scratch\n        const textNodes = textValues.map((value) => ({\n          type: 'text',\n          value: value,\n        }));\n\n        state.next(textNodes);\n        state.closeMark(markType);\n      },\n    },\n\n    toMarkdown: {\n      match: (mark: any) => mark.type.name === schemaName,\n      runner: (state: any, mark: any) => {\n        state.withMark(mark, 'criticMarkup', undefined, {\n          markup: markupName,\n        });\n      },\n    },\n  };\n}\n\n// ---- MARK DEFINITIONS ---- //\n// NOTE: These are factory functions that create new plugin instances\n// This ensures fresh instances on each editor initialization and prevents\n// \"o is not a function\" errors from plugin state corruption\n\nexport const criticAddition = $mark('criticAddition', () =>\n  createCriticMark('criticAddition', 'addition', 'critic-addition')\n);\nexport const criticDeletion = $mark('criticDeletion', () =>\n  createCriticMark('criticDeletion', 'deletion', 'critic-deletion')\n);\nexport const criticHighlight = $mark('criticHighlight', () =>\n  createCriticMark('criticHighlight', 'highlight', 'critic-highlight')\n);\nexport const criticComment = $mark('criticComment', () =>\n  createCriticMark('criticComment', 'comment', 'critic-comment')\n);\nexport const criticSubstitution = $mark('criticSubstitution', () =>\n  createCriticMark('criticSubstitution', 'substitution', 'critic-substitution')\n);\n\n// ---- INPUT RULES ---- //\n\nfunction makeCriticRule(regex: RegExp) {\n  return $inputRule(() => ({\n    match: regex,\n    inCode: false, // <--- required by InputRule\n    inCodeMark: false, // <--- required by InputRule\n    handler: ({\n      state,\n      range,\n      match,\n    }: {\n      state: any;\n      range: any;\n      match: any;\n    }) => {\n      const tr = state.tr.insertText(match[1], range.from, range.to);\n      return tr;\n    },\n  }));\n}\n\n// Example (optional, placeholder)\nexport const criticAdditionRule = makeCriticRule(/\\{([+]{2})([^}]+)\\1}/);\n\n// ---- KEYMAP ---- //\n\nexport const criticKeymap = $useKeymap(\n  'criticKeymap',\n  (ctx: { get: (arg0: any) => any }) => {\n    const schema = ctx.get(schemaCtx); // ✅ get schema correctly\n\n    return {\n      'Mod-Shift-A': toggleMark(schema.marks.criticAddition),\n      'Mod-Shift-D': toggleMark(schema.marks.criticDeletion),\n      'Mod-Shift-H': toggleMark(schema.marks.criticHighlight),\n      'Mod-Shift-C': toggleMark(schema.marks.criticComment),\n      'Mod-Shift-S': toggleMark(schema.marks.criticSubstitution),\n    };\n  }\n);\n\n// ---- OPTIONAL: DECORATION PLUGIN (empty placeholder, safe stub) ---- //\n\nexport const criticDecorationPlugin = $prose(() => {\n  return new Plugin({\n    key: new PluginKey('criticDecoration'),\n    props: {\n      decorations() {\n        return null; // no decorations yet\n      },\n    },\n  });\n});\n\nexport const criticMarkupPlugin = $prose(() => {\n  return new Plugin({\n    key: new PluginKey('criticMarkup'),\n  });\n});\n\n// ---- REMARK PLUGIN ---- //\n\nexport const criticMarkupRemarkPlugin = $remark(\n  'criticMarkupRemark',\n  () => remarkCriticMarkupMilkdown\n);\n","/**\n * Command Registry\n *\n * Centralized registry for editor commands.\n * Decouples command logic from the toolbar by providing a registration-based pattern.\n * Enables runtime command registration, composition, and extensibility.\n */\n\nimport type { Editor } from '@milkdown/kit/core';\nimport { commandsCtx, editorViewCtx } from '@milkdown/kit/core';\nimport {\n  toggleStrongCommand,\n  toggleEmphasisCommand,\n  toggleInlineCodeCommand,\n  wrapInHeadingCommand,\n  turnIntoTextCommand,\n  wrapInBlockquoteCommand,\n  liftListItemCommand,\n  wrapInBulletListCommand,\n  wrapInOrderedListCommand,\n  createCodeBlockCommand,\n} from '@milkdown/kit/preset/commonmark';\nimport { toggleStrikethroughCommand } from '@milkdown/kit/preset/gfm';\nimport { undoCommand, redoCommand } from '@milkdown/kit/plugin/history';\nimport type { EditorState } from '@milkdown/prose/state';\nimport type { EditorView } from '@milkdown/prose/view';\n\nimport { createModuleLogger } from '@utils/debug';\n\nconst logger = createModuleLogger('CommandRegistry');\n\n/**\n * Command execution context passed to command handlers\n */\nexport interface CommandContext {\n  editor: Editor;\n  commands: any; // Milkdown commands context\n  view: EditorView;\n  state: EditorState;\n}\n\n/**\n * Command handler function signature\n */\nexport type CommandHandler = (context: CommandContext) => boolean;\n\n/**\n * Command definition with metadata\n */\nexport interface CommandDefinition {\n  id: string;\n  label: string;\n  handler: CommandHandler;\n  isActive?: (state: EditorState) => boolean;\n}\n\n/**\n * CommandRegistry manages command registration and execution\n */\nexport class CommandRegistry {\n  private commands: Map<string, CommandDefinition> = new Map();\n  private editor: Editor | null = null;\n\n  /**\n   * Initialize the registry with an editor instance\n   */\n  setEditor(editor: Editor): void {\n    this.editor = editor;\n  }\n\n  /**\n   * Register a command\n   */\n  register(definition: CommandDefinition): void {\n    if (this.commands.has(definition.id)) {\n      logger.warn(\n        `Command '${definition.id}' is already registered, overwriting`\n      );\n    }\n    this.commands.set(definition.id, definition);\n    logger.debug(`Registered command: ${definition.id}`);\n  }\n\n  /**\n   * Register multiple commands at once\n   */\n  registerBatch(definitions: CommandDefinition[]): void {\n    definitions.forEach((def) => this.register(def));\n  }\n\n  /**\n   * Execute a command by ID\n   */\n  execute(commandId: string): boolean {\n    if (!this.editor) {\n      logger.error('Editor not initialized');\n      return false;\n    }\n\n    const command = this.commands.get(commandId);\n    if (!command) {\n      logger.warn(`Command '${commandId}' not found`);\n      return false;\n    }\n\n    try {\n      let result = false;\n      this.editor.action((ctx: any) => {\n        const context: CommandContext = {\n          editor: this.editor!,\n          commands: ctx.get(commandsCtx),\n          view: ctx.get(editorViewCtx),\n          state: ctx.get(editorViewCtx).state,\n        };\n        result = command.handler(context);\n      });\n      return result;\n    } catch (error) {\n      logger.error(`Error executing command '${commandId}':`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Get command definition\n   */\n  getCommand(commandId: string): CommandDefinition | undefined {\n    return this.commands.get(commandId);\n  }\n\n  /**\n   * Get all registered commands\n   */\n  getAllCommands(): CommandDefinition[] {\n    return Array.from(this.commands.values());\n  }\n\n  /**\n   * Check if a command is registered\n   */\n  hasCommand(commandId: string): boolean {\n    return this.commands.has(commandId);\n  }\n\n  /**\n   * Get active state of a command\n   */\n  getActiveState(commandId: string): boolean {\n    if (!this.editor) {\n      return false;\n    }\n\n    const command = this.commands.get(commandId);\n    if (!command || !command.isActive) {\n      return false;\n    }\n\n    let activeState = false;\n    this.editor.action((ctx: any) => {\n      const view = ctx.get(editorViewCtx);\n      activeState = command.isActive!(view.state);\n    });\n\n    return activeState;\n  }\n\n  /**\n   * Helper: Check if a mark is active at cursor position\n   */\n  static isMarkActive(state: EditorState, typeName: string): boolean {\n    const { from, to } = state.selection;\n    const { marks } = state.schema;\n    const targetMark = marks[typeName];\n\n    if (!targetMark) return false;\n\n    let hasMarkInRange = false;\n\n    state.doc.nodesBetween(from, to, (node) => {\n      if (node.isText) {\n        const marks = node.marks || [];\n        const hasMark = marks.some((mark) => mark.type.name === typeName);\n        if (hasMark) {\n          hasMarkInRange = true;\n          return false; // Stop early\n        }\n      }\n      return true;\n    });\n\n    return hasMarkInRange;\n  }\n\n  /**\n   * Helper: Check if a node type is active at cursor position\n   */\n  static isNodeActive(\n    state: EditorState,\n    typeName: string,\n    attrs?: Record<string, any>\n  ): boolean {\n    const { $from } = state.selection;\n    let depth = $from.depth;\n\n    while (depth > 0) {\n      const node = $from.node(depth);\n      if (node.type.name === typeName) {\n        if (!attrs) return true;\n\n        const nodeAttrs = node.attrs || {};\n        return Object.keys(attrs).every((key) => nodeAttrs[key] === attrs[key]);\n      }\n      depth--;\n    }\n\n    return false;\n  }\n\n  /**\n   * Helper: Lift a blockquote (remove blockquote wrapper)\n   */\n  static liftBlockquote(view: EditorView): boolean {\n    const { state, dispatch } = view;\n    const { $from } = state.selection;\n\n    // Find blockquote ancestor\n    let depth = $from.depth;\n    while (depth > 0) {\n      if ($from.node(depth).type.name === 'blockquote') {\n        break;\n      }\n      depth--;\n    }\n\n    if (depth === 0) return false;\n\n    const blockquoteNode = $from.node(depth);\n    const blockquoteStart = $from.before(depth);\n    const blockquoteEnd = blockquoteStart + blockquoteNode.nodeSize;\n\n    const tr = state.tr;\n    const content = blockquoteNode.content;\n\n    tr.replaceWith(blockquoteStart, blockquoteEnd, content);\n    dispatch(tr);\n\n    return true;\n  }\n}\n\n/**\n * Create and return the standard editor commands\n */\nexport function createStandardCommands(): CommandDefinition[] {\n  return [\n    // Undo/Redo\n    {\n      id: 'undo',\n      label: 'Undo',\n      handler: (ctx) => ctx.commands.call(undoCommand.key),\n      isActive: () => false, // Undo/Redo don't have active state\n    },\n    {\n      id: 'redo',\n      label: 'Redo',\n      handler: (ctx) => ctx.commands.call(redoCommand.key),\n      isActive: () => false,\n    },\n    // Inline formatting\n    {\n      id: 'bold',\n      label: 'Bold',\n      handler: (ctx) => ctx.commands.call(toggleStrongCommand.key),\n      isActive: (state) => CommandRegistry.isMarkActive(state, 'strong'),\n    },\n    {\n      id: 'italic',\n      label: 'Italic',\n      handler: (ctx) => ctx.commands.call(toggleEmphasisCommand.key),\n      isActive: (state) => CommandRegistry.isMarkActive(state, 'emphasis'),\n    },\n    {\n      id: 'strike',\n      label: 'Strike',\n      handler: (ctx) => ctx.commands.call(toggleStrikethroughCommand.key),\n      isActive: (state) =>\n        CommandRegistry.isMarkActive(state, 'strike_through'),\n    },\n    {\n      id: 'code',\n      label: 'Code',\n      handler: (ctx) => ctx.commands.call(toggleInlineCodeCommand.key),\n      isActive: (state) => CommandRegistry.isMarkActive(state, 'inlineCode'),\n    },\n    // Block formatting\n    {\n      id: 'heading-2',\n      label: 'Heading 2',\n      handler: (ctx) => {\n        if (CommandRegistry.isNodeActive(ctx.state, 'heading', { level: 2 })) {\n          return ctx.commands.call(turnIntoTextCommand.key);\n        }\n        return ctx.commands.call(wrapInHeadingCommand.key, 2);\n      },\n      isActive: (state) =>\n        CommandRegistry.isNodeActive(state, 'heading', { level: 2 }),\n    },\n    {\n      id: 'heading-3',\n      label: 'Heading 3',\n      handler: (ctx) => {\n        if (CommandRegistry.isNodeActive(ctx.state, 'heading', { level: 3 })) {\n          return ctx.commands.call(turnIntoTextCommand.key);\n        }\n        return ctx.commands.call(wrapInHeadingCommand.key, 3);\n      },\n      isActive: (state) =>\n        CommandRegistry.isNodeActive(state, 'heading', { level: 3 }),\n    },\n    {\n      id: 'blockquote',\n      label: 'Blockquote',\n      handler: (ctx) => {\n        if (CommandRegistry.isNodeActive(ctx.state, 'blockquote')) {\n          return CommandRegistry.liftBlockquote(ctx.view);\n        }\n        return ctx.commands.call(wrapInBlockquoteCommand.key);\n      },\n      isActive: (state) => CommandRegistry.isNodeActive(state, 'blockquote'),\n    },\n    {\n      id: 'code-block',\n      label: 'Code Block',\n      handler: (ctx) => {\n        if (CommandRegistry.isNodeActive(ctx.state, 'code_block')) {\n          return ctx.commands.call(turnIntoTextCommand.key);\n        }\n        return ctx.commands.call(createCodeBlockCommand.key);\n      },\n      isActive: (state) => CommandRegistry.isNodeActive(state, 'code_block'),\n    },\n    // Lists\n    {\n      id: 'bullet-list',\n      label: 'Bullet List',\n      handler: (ctx) => {\n        if (CommandRegistry.isNodeActive(ctx.state, 'bullet_list')) {\n          return ctx.commands.call(liftListItemCommand.key);\n        }\n        return ctx.commands.call(wrapInBulletListCommand.key);\n      },\n      isActive: (state) => CommandRegistry.isNodeActive(state, 'bullet_list'),\n    },\n    {\n      id: 'ordered-list',\n      label: 'Ordered List',\n      handler: (ctx) => {\n        if (CommandRegistry.isNodeActive(ctx.state, 'ordered_list')) {\n          return ctx.commands.call(liftListItemCommand.key);\n        }\n        return ctx.commands.call(wrapInOrderedListCommand.key);\n      },\n      isActive: (state) => CommandRegistry.isNodeActive(state, 'ordered_list'),\n    },\n  ];\n}\n","/**\n * EditorToolbar Manager\n *\n * Handles creation and management of the editor's formatting toolbar,\n * including button rendering, event handling, and state management.\n *\n * Consolidates toolbar functionality from both editor-toolbar.ts and index.ts\n * to eliminate code duplication.\n */\n\nimport type { Editor } from '@milkdown/kit/core';\nimport { editorViewCtx } from '@milkdown/kit/core';\n\nimport { CommandRegistry, createStandardCommands } from './CommandRegistry';\n\n/**\n * Editor toolbar action types\n */\nexport type EditorToolbarAction =\n  | 'undo'\n  | 'redo'\n  | 'heading-2'\n  | 'heading-3'\n  | 'blockquote'\n  | 'code-block'\n  | 'bold'\n  | 'italic'\n  | 'strike'\n  | 'code'\n  | 'bullet-list'\n  | 'ordered-list';\n\n/**\n * Button configuration interface\n */\nexport interface EditorToolbarButton {\n  action: EditorToolbarAction;\n  label: string;\n  title: string;\n  modifierClass?: string;\n}\n\n/**\n * Toolbar button groups - organized by functionality (default/full view)\n */\nexport const TOOLBAR_BUTTON_GROUPS: EditorToolbarButton[][] = [\n  // Blocks\n  [\n    {\n      action: 'heading-2',\n      label: 'H2',\n      title: 'Heading 2 (Ctrl+Alt+2)',\n    },\n    {\n      action: 'heading-3',\n      label: 'H3',\n      title: 'Heading 3 (Ctrl+Alt+3)',\n    },\n    {\n      action: 'blockquote',\n      label: '>',\n      title: 'Blockquote (Ctrl+Shift+B)',\n    },\n    {\n      action: 'code-block',\n      label: '{}',\n      title: 'Code block (Ctrl+Alt+C)',\n    },\n  ],\n  // Inline formatting\n  [\n    {\n      action: 'bold',\n      label: 'B',\n      title: 'Bold (Ctrl+B)',\n    },\n    {\n      action: 'italic',\n      label: 'I',\n      title: 'Italic (Ctrl+I)',\n    },\n    {\n      action: 'strike',\n      label: 'S',\n      title: 'Strikethrough (Ctrl+Alt+X)',\n      modifierClass: 'review-editor-toolbar-btn-strike',\n    },\n    {\n      action: 'code',\n      label: '`',\n      title: 'Inline code (Ctrl+E)',\n    },\n  ],\n  // Lists\n  [\n    {\n      action: 'bullet-list',\n      label: '•',\n      title: 'Bullet list (Ctrl+Alt+8)',\n    },\n    {\n      action: 'ordered-list',\n      label: '1.',\n      title: 'Ordered list (Ctrl+Alt+9)',\n    },\n  ],\n];\n\n/**\n * Context-aware toolbar configurations based on element type\n * Maps element types to their most relevant button groups\n */\nexport const CONTEXT_TOOLBAR_CONFIGS: Record<string, EditorToolbarButton[][]> =\n  {\n    // For headers - focus on heading levels and basic formatting\n    heading: [\n      [\n        {\n          action: 'heading-2',\n          label: 'H2',\n          title: 'Heading 2 (Ctrl+Alt+2)',\n        },\n        {\n          action: 'heading-3',\n          label: 'H3',\n          title: 'Heading 3 (Ctrl+Alt+3)',\n        },\n        {\n          action: 'blockquote',\n          label: '>',\n          title: 'Blockquote (Ctrl+Shift+B)',\n        },\n      ],\n      [\n        {\n          action: 'bold',\n          label: 'B',\n          title: 'Bold (Ctrl+B)',\n        },\n        {\n          action: 'italic',\n          label: 'I',\n          title: 'Italic (Ctrl+I)',\n        },\n        {\n          action: 'code',\n          label: '`',\n          title: 'Inline code (Ctrl+E)',\n        },\n      ],\n    ],\n\n    // For paragraphs - focus on text formatting and lists\n    paragraph: [\n      [\n        {\n          action: 'bold',\n          label: 'B',\n          title: 'Bold (Ctrl+B)',\n        },\n        {\n          action: 'italic',\n          label: 'I',\n          title: 'Italic (Ctrl+I)',\n        },\n        {\n          action: 'strike',\n          label: 'S',\n          title: 'Strikethrough (Ctrl+Alt+X)',\n          modifierClass: 'review-editor-toolbar-btn-strike',\n        },\n        {\n          action: 'code',\n          label: '`',\n          title: 'Inline code (Ctrl+E)',\n        },\n      ],\n      [\n        {\n          action: 'bullet-list',\n          label: '•',\n          title: 'Bullet list (Ctrl+Alt+8)',\n        },\n        {\n          action: 'ordered-list',\n          label: '1.',\n          title: 'Ordered list (Ctrl+Alt+9)',\n        },\n      ],\n    ],\n\n    // For code blocks - only escape option\n    code_block: [\n      [\n        {\n          action: 'code-block',\n          label: '{}',\n          title: 'Exit code block (Ctrl+Alt+C)',\n        },\n      ],\n    ],\n\n    // For lists - list type switching and light formatting\n    bullet_list: [\n      [\n        {\n          action: 'bullet-list',\n          label: '•',\n          title: 'Bullet list (Ctrl+Alt+8)',\n        },\n        {\n          action: 'ordered-list',\n          label: '1.',\n          title: 'Ordered list (Ctrl+Alt+9)',\n        },\n      ],\n      [\n        {\n          action: 'bold',\n          label: 'B',\n          title: 'Bold (Ctrl+B)',\n        },\n        {\n          action: 'italic',\n          label: 'I',\n          title: 'Italic (Ctrl+I)',\n        },\n        {\n          action: 'code',\n          label: '`',\n          title: 'Inline code (Ctrl+E)',\n        },\n      ],\n    ],\n\n    ordered_list: [\n      [\n        {\n          action: 'bullet-list',\n          label: '•',\n          title: 'Bullet list (Ctrl+Alt+8)',\n        },\n        {\n          action: 'ordered-list',\n          label: '1.',\n          title: 'Ordered list (Ctrl+Alt+9)',\n        },\n      ],\n      [\n        {\n          action: 'bold',\n          label: 'B',\n          title: 'Bold (Ctrl+B)',\n        },\n        {\n          action: 'italic',\n          label: 'I',\n          title: 'Italic (Ctrl+I)',\n        },\n        {\n          action: 'code',\n          label: '`',\n          title: 'Inline code (Ctrl+E)',\n        },\n      ],\n    ],\n\n    // For blockquotes - similar to paragraphs\n    blockquote: [\n      [\n        {\n          action: 'blockquote',\n          label: '>',\n          title: 'Blockquote (Ctrl+Shift+B)',\n        },\n      ],\n      [\n        {\n          action: 'bold',\n          label: 'B',\n          title: 'Bold (Ctrl+B)',\n        },\n        {\n          action: 'italic',\n          label: 'I',\n          title: 'Italic (Ctrl+I)',\n        },\n        {\n          action: 'code',\n          label: '`',\n          title: 'Inline code (Ctrl+E)',\n        },\n      ],\n    ],\n  };\n\n/**\n * EditorToolbar class manages the editor's formatting toolbar with context awareness\n */\nexport class EditorToolbar {\n  private element: HTMLElement | null = null;\n  private handlersAttached = false;\n  private milkdownEditor: Editor | null = null;\n  private commandRegistry: CommandRegistry;\n  private isCollapsed = true; // Start collapsed to show only core buttons\n  private elementType: string = 'default'; // Current element type being edited\n  private useContextMode = true; // Use context-aware button sets by default\n\n  constructor(milkdownEditor?: Editor) {\n    this.milkdownEditor = milkdownEditor || null;\n    this.commandRegistry = new CommandRegistry();\n\n    // Initialize with standard commands\n    if (milkdownEditor) {\n      this.commandRegistry.setEditor(milkdownEditor);\n      this.commandRegistry.registerBatch(createStandardCommands());\n    }\n\n    // Load user preference for context mode\n    this.useContextMode = this.loadContextModePreference();\n  }\n\n  /**\n   * Set the element type being edited (for context-aware toolbar)\n   */\n  setElementType(type: string): void {\n    this.elementType = type || 'default';\n  }\n\n  /**\n   * Get the current element type being edited\n   */\n  getElementType(): string {\n    return this.elementType;\n  }\n\n  /**\n   * Toggle context mode (context-aware vs. full toolbar)\n   */\n  toggleContextMode(): void {\n    this.useContextMode = !this.useContextMode;\n    this.saveContextModePreference();\n    this.refresh();\n  }\n\n  /**\n   * Load context mode preference from localStorage\n   */\n  private loadContextModePreference(): boolean {\n    try {\n      const saved = localStorage.getItem('review-toolbar-context-mode');\n      return saved ? JSON.parse(saved) : true;\n    } catch {\n      return true; // Default to context mode on error\n    }\n  }\n\n  /**\n   * Save context mode preference to localStorage\n   */\n  private saveContextModePreference(): void {\n    try {\n      localStorage.setItem(\n        'review-toolbar-context-mode',\n        JSON.stringify(this.useContextMode)\n      );\n    } catch {\n      // Silently fail if localStorage unavailable\n    }\n  }\n\n  /**\n   * Get button groups for current context\n   */\n  private getButtonGroups(): EditorToolbarButton[][] {\n    if (!this.useContextMode) {\n      return TOOLBAR_BUTTON_GROUPS; // Use full toolbar\n    }\n\n    // Try to get context-specific config\n    const config = CONTEXT_TOOLBAR_CONFIGS[this.elementType];\n    if (config) {\n      return config;\n    }\n\n    // Fall back to default config\n    return TOOLBAR_BUTTON_GROUPS;\n  }\n\n  /**\n   * Refresh toolbar to reflect context changes\n   */\n  private refresh(): void {\n    if (!this.element) return;\n\n    // Remove existing buttons\n    const oldGroups = this.element.querySelectorAll(\n      '.review-editor-toolbar-group'\n    );\n    oldGroups.forEach((group) => group.remove());\n\n    // Recreate buttons with new configuration\n    const buttonGroups = this.getButtonGroups();\n    let buttonCount = 0;\n    const CORE_BUTTON_COUNT = 3;\n\n    buttonGroups.forEach((group, groupIndex) => {\n      const groupElem = document.createElement('div');\n      groupElem.className = 'review-editor-toolbar-group';\n      groupElem.setAttribute('role', 'group');\n      groupElem.setAttribute(\n        'aria-label',\n        `Formatting controls group ${groupIndex + 1}`\n      );\n\n      group.forEach((buttonConfig) => {\n        const button = document.createElement('button');\n        button.type = 'button';\n        button.className = 'review-editor-toolbar-btn';\n        if (buttonConfig.modifierClass) {\n          button.classList.add(buttonConfig.modifierClass);\n        }\n        // Mark first N buttons as core buttons (visible in collapsed state)\n        if (buttonCount < CORE_BUTTON_COUNT) {\n          button.classList.add('review-editor-toolbar-btn-core');\n        }\n        button.dataset.command = buttonConfig.action;\n        button.textContent = buttonConfig.label;\n        button.setAttribute('title', buttonConfig.title);\n        button.setAttribute('aria-label', buttonConfig.title);\n        button.setAttribute('aria-pressed', 'false');\n\n        groupElem.appendChild(button);\n        buttonCount++;\n      });\n\n      // Insert before the toggle buttons\n      const toggleBtn = this.element!.querySelector(\n        '.review-editor-toolbar-toggle'\n      );\n      if (toggleBtn) {\n        this.element!.insertBefore(groupElem, toggleBtn);\n      } else {\n        this.element!.appendChild(groupElem);\n      }\n    });\n\n    // Ensure handlers are reattached after rebuild\n    if (this.handlersAttached) {\n      this.attachHandlers();\n    }\n  }\n\n  /**\n   * Set the Milkdown editor instance\n   */\n  setEditor(editor: Editor): void {\n    this.milkdownEditor = editor;\n    this.commandRegistry.setEditor(editor);\n    // Register standard commands if not already done\n    if (this.commandRegistry.getAllCommands().length === 0) {\n      this.commandRegistry.registerBatch(createStandardCommands());\n    }\n  }\n\n  /**\n   * Create the toolbar DOM element\n   */\n  create(): HTMLElement {\n    const toolbar = document.createElement('div');\n    toolbar.className = 'review-editor-toolbar review-editor-toolbar-collapsed';\n    toolbar.setAttribute('role', 'toolbar');\n    toolbar.setAttribute('aria-label', 'Formatting toolbar');\n\n    // Add undo button in top-left corner\n    const undoBtn = document.createElement('button');\n    undoBtn.type = 'button';\n    undoBtn.className =\n      'review-editor-toolbar-undo-redo review-editor-toolbar-undo';\n    undoBtn.setAttribute('aria-label', 'Undo (Ctrl+Z)');\n    undoBtn.setAttribute('title', 'Undo (Ctrl+Z)');\n    undoBtn.textContent = '↶';\n    undoBtn.dataset.command = 'undo';\n    undoBtn.disabled = true;\n    toolbar.appendChild(undoBtn);\n\n    // Add redo button in top-right corner\n    const redoBtn = document.createElement('button');\n    redoBtn.type = 'button';\n    redoBtn.className =\n      'review-editor-toolbar-undo-redo review-editor-toolbar-redo';\n    redoBtn.setAttribute('aria-label', 'Redo (Ctrl+Y)');\n    redoBtn.setAttribute('title', 'Redo (Ctrl+Y)');\n    redoBtn.textContent = '↷';\n    redoBtn.dataset.command = 'redo';\n    redoBtn.disabled = true;\n    toolbar.appendChild(redoBtn);\n\n    let buttonCount = 0;\n    const CORE_BUTTON_COUNT = 3; // Show 3 core buttons in collapsed state\n\n    // Use context-aware button groups\n    const buttonGroups = this.getButtonGroups();\n\n    buttonGroups.forEach((group, groupIndex) => {\n      const groupElem = document.createElement('div');\n      groupElem.className = 'review-editor-toolbar-group';\n      groupElem.setAttribute('role', 'group');\n      groupElem.setAttribute(\n        'aria-label',\n        `Formatting controls group ${groupIndex + 1}`\n      );\n\n      group.forEach((buttonConfig) => {\n        const button = document.createElement('button');\n        button.type = 'button';\n        button.className = 'review-editor-toolbar-btn';\n        if (buttonConfig.modifierClass) {\n          button.classList.add(buttonConfig.modifierClass);\n        }\n        // Mark first N buttons as core buttons (visible in collapsed state)\n        if (buttonCount < CORE_BUTTON_COUNT) {\n          button.classList.add('review-editor-toolbar-btn-core');\n        }\n        button.dataset.command = buttonConfig.action;\n        button.textContent = buttonConfig.label;\n        button.setAttribute('title', buttonConfig.title);\n        button.setAttribute('aria-label', buttonConfig.title);\n        button.setAttribute('aria-pressed', 'false');\n\n        groupElem.appendChild(button);\n        buttonCount++;\n      });\n\n      toolbar.appendChild(groupElem);\n    });\n\n    // Add context mode toggle button (shows/hides depending on current mode)\n    const contextToggleBtn = document.createElement('button');\n    contextToggleBtn.type = 'button';\n    contextToggleBtn.className = 'review-editor-toolbar-context-toggle';\n    contextToggleBtn.setAttribute(\n      'aria-label',\n      this.useContextMode ? 'Show all buttons' : 'Show smart buttons'\n    );\n    contextToggleBtn.setAttribute(\n      'title',\n      this.useContextMode ? 'Show all buttons (⇄)' : 'Show smart buttons (⇄)'\n    );\n    contextToggleBtn.textContent = '⇄';\n    toolbar.appendChild(contextToggleBtn);\n\n    // Add expand/collapse toggle button\n    const toggleBtn = document.createElement('button');\n    toggleBtn.type = 'button';\n    toggleBtn.className = 'review-editor-toolbar-toggle';\n    toggleBtn.setAttribute('aria-label', 'Expand toolbar');\n    toggleBtn.textContent = '⋯';\n    toolbar.appendChild(toggleBtn);\n\n    this.element = toolbar;\n    return toolbar;\n  }\n\n  /**\n   * Toggle toolbar collapsed/expanded state\n   */\n  private toggleCollapsed(): void {\n    if (!this.element) return;\n\n    this.isCollapsed = !this.isCollapsed;\n    this.element.classList.toggle(\n      'review-editor-toolbar-collapsed',\n      this.isCollapsed\n    );\n\n    // Update button label\n    const toggleBtn = this.element.querySelector(\n      '.review-editor-toolbar-toggle'\n    ) as HTMLButtonElement;\n    if (toggleBtn) {\n      toggleBtn.setAttribute(\n        'aria-label',\n        this.isCollapsed ? 'Expand toolbar' : 'Collapse toolbar'\n      );\n    }\n  }\n\n  /**\n   * Attach event handlers to the toolbar\n   */\n  attachHandlers(): void {\n    if (!this.element || this.handlersAttached) {\n      return;\n    }\n\n    this.element.addEventListener('mousedown', (event) => {\n      const target = (event.target as HTMLElement).closest<HTMLButtonElement>(\n        'button[data-command]'\n      );\n      if (target) {\n        event.preventDefault();\n      }\n    });\n\n    this.element.addEventListener('click', (event) => {\n      const target = (event.target as HTMLElement).closest<HTMLButtonElement>(\n        'button[data-command]'\n      );\n      if (!target || target.disabled) {\n        return;\n      }\n      event.preventDefault();\n      const command = target.dataset.command as EditorToolbarAction | undefined;\n      if (!command) {\n        return;\n      }\n      this.executeCommand(command);\n    });\n\n    // Handle context mode toggle button\n    const contextToggleBtn = this.element.querySelector(\n      '.review-editor-toolbar-context-toggle'\n    ) as HTMLButtonElement;\n    if (contextToggleBtn) {\n      contextToggleBtn.addEventListener('click', (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        this.toggleContextMode();\n      });\n    }\n\n    // Handle expand/collapse toggle button\n    const toggleBtn = this.element.querySelector(\n      '.review-editor-toolbar-toggle'\n    ) as HTMLButtonElement;\n    if (toggleBtn) {\n      toggleBtn.addEventListener('click', (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        this.toggleCollapsed();\n      });\n    }\n\n    this.handlersAttached = true;\n  }\n\n  /**\n   * Execute a toolbar command using the command registry\n   */\n  private executeCommand(action: EditorToolbarAction): void {\n    if (!this.milkdownEditor) return;\n\n    // Focus the editor first\n    this.milkdownEditor.action((ctx: any) => {\n      const view = ctx.get(editorViewCtx);\n      view.focus();\n    });\n\n    // Execute the command through the registry\n    const handled = this.commandRegistry.execute(action);\n\n    if (handled) {\n      requestAnimationFrame(() => {\n        this.updateState();\n      });\n    }\n  }\n\n  /**\n   * Update button states based on current editor state\n   */\n  updateState(): void {\n    if (!this.element || !this.milkdownEditor) {\n      return;\n    }\n\n    const buttons = Array.from(\n      this.element.querySelectorAll<HTMLButtonElement>('button[data-command]')\n    );\n\n    buttons.forEach((button) => {\n      const action = button.dataset.command as EditorToolbarAction;\n\n      // Special handling for undo/redo buttons - check if they're enabled\n      if (action === 'undo' || action === 'redo') {\n        const canExecute = this.canExecuteCommand(action);\n        button.disabled = !canExecute;\n        button.classList.toggle(\n          'review-editor-toolbar-undo-redo-disabled',\n          !canExecute\n        );\n      } else {\n        // For other buttons, track active state\n        const isActive = this.commandRegistry.getActiveState(action);\n        button.classList.toggle('review-editor-toolbar-btn-active', isActive);\n        button.setAttribute('aria-pressed', isActive ? 'true' : 'false');\n      }\n    });\n  }\n\n  /**\n   * Check if a command can be executed (for undo/redo state)\n   */\n  private canExecuteCommand(action: EditorToolbarAction): boolean {\n    if (!this.milkdownEditor) {\n      return false;\n    }\n\n    // For undo/redo, we check the editor state\n    if (action === 'undo' || action === 'redo') {\n      let canExecute = false;\n      this.milkdownEditor.action((ctx: any) => {\n        const state = ctx.get(editorViewCtx).state;\n        if (action === 'undo') {\n          // Check if there's any history to undo\n          canExecute =\n            state.history &&\n            state.history.done &&\n            state.history.done.length > 0;\n        } else if (action === 'redo') {\n          // Check if there's any history to redo\n          canExecute =\n            state.history &&\n            state.history.undone &&\n            state.history.undone.length > 0;\n        }\n      });\n      return canExecute;\n    }\n\n    return false;\n  }\n\n  /**\n   * Get the toolbar element\n   */\n  getElement(): HTMLElement | null {\n    return this.element;\n  }\n\n  /**\n   * Get command registry for external access\n   */\n  getCommandRegistry(): CommandRegistry {\n    return this.commandRegistry;\n  }\n\n  /**\n   * Destroy the toolbar and clean up\n   */\n  destroy(): void {\n    this.element = null;\n    this.handlersAttached = false;\n  }\n}\n","/**\n * Milkdown Editor Manager\n *\n * Encapsulates all Milkdown editor initialization, setup, and lifecycle management.\n * Handles both modal and inline editor modes with proper configuration and plugin setup.\n * Uses event-driven architecture for decoupled communication.\n *\n * Extracted from UIModule index.ts to reduce monolithic complexity.\n */\n\nimport { Editor, rootCtx, defaultValueCtx } from '@milkdown/kit/core';\nimport { nord } from '@milkdown/theme-nord';\nimport { commonmark } from '@milkdown/kit/preset/commonmark';\nimport { gfm } from '@milkdown/kit/preset/gfm';\nimport { listener, listenerCtx } from '@milkdown/plugin-listener';\nimport { history, historyProviderConfig } from '@milkdown/kit/plugin/history';\nimport { Decoration, DecorationSet } from '@milkdown/prose/view';\nimport { Plugin, PluginKey } from '@milkdown/prose/state';\nimport type { Node as ProseNode } from '@milkdown/prose/model';\n\nimport { createModuleLogger } from '@utils/debug';\nimport {\n  MODULE_EVENTS,\n  ModuleEventEmitter,\n  normalizeListMarkers,\n} from '../shared';\nimport {\n  criticMarkupRemarkPlugin,\n  criticAddition,\n  criticDeletion,\n  criticHighlight,\n  criticComment,\n  criticSubstitution,\n  criticKeymap,\n  criticMarkupPlugin,\n} from '../criticmarkup';\nimport { $prose } from '@milkdown/utils';\nimport { EditorToolbar } from './EditorToolbar';\n\nconst logger = createModuleLogger('MilkdownEditor');\n\n/**\n * Diff highlight range for tracked changes visualization\n */\nexport interface DiffHighlightRange {\n  start: number;\n  end: number;\n  type: 'addition' | 'deletion' | 'modification';\n}\n\n/**\n * MilkdownEditor manages editor initialization and lifecycle\n * Now extends event emitter for event-driven communication\n */\nexport class MilkdownEditor extends ModuleEventEmitter {\n  private instance: Editor | null = null;\n  private toolbar: EditorToolbar | null = null;\n  private currentContent: string = '';\n  private contentUpdateCallback: ((content: string) => void) | null = null;\n\n  /**\n   * Set callback for content updates\n   */\n  setContentUpdateCallback(callback: (content: string) => void): void {\n    this.contentUpdateCallback = callback;\n  }\n\n  /**\n   * Get the current Milkdown instance\n   */\n  getInstance(): Editor | null {\n    return this.instance;\n  }\n\n  /**\n   * Get the toolbar instance\n   */\n  getToolbar(): EditorToolbar | null {\n    return this.toolbar;\n  }\n\n  /**\n   * Get current editor content\n   */\n  getContent(): string {\n    return this.currentContent;\n  }\n\n  /**\n   * Initialize Milkdown editor in a container\n   * @param container - The HTML container element for the editor\n   * @param content - Initial markdown content\n   * @param diffHighlights - Optional diff highlights for tracked changes\n   * @param elementType - The type of element being edited (header, paragraph, etc.)\n   */\n  async initialize(\n    container: HTMLElement,\n    content: string,\n    diffHighlights: DiffHighlightRange[] = [],\n    elementType: string = 'default'\n  ): Promise<void> {\n    // Find the editor body - works for both modal and inline\n    const editorContainer =\n      (container.querySelector('.review-editor-body') as HTMLElement | null) ||\n      (container.querySelector(\n        '.review-inline-editor-body'\n      ) as HTMLElement | null);\n    if (!editorContainer) {\n      throw new Error('Editor container not found');\n    }\n\n    const { mount, toolbarElement } = this.prepareLayout(editorContainer);\n\n    try {\n      // Initialize current content\n      const initialContent = normalizeListMarkers(content);\n      this.currentContent = initialContent;\n\n      const editorBuilder = Editor.make()\n        .config((ctx) => {\n          ctx.set(rootCtx, mount);\n          ctx.set(defaultValueCtx, initialContent);\n          // Configure history plugin with a reasonable depth\n          ctx.set(historyProviderConfig.key, {\n            depth: 100,\n            newGroupDelay: 500,\n          });\n\n          const listenerManager = ctx.get(listenerCtx);\n          // Listen for markdown changes\n          listenerManager\n            .markdownUpdated((_ctx, markdown) => {\n              const normalized = normalizeListMarkers(markdown);\n              this.currentContent = normalized;\n              if (this.contentUpdateCallback) {\n                this.contentUpdateCallback(normalized);\n              }\n              // Emit event for content change\n              this.emit(MODULE_EVENTS.EDITOR_CONTENT_CHANGED, {\n                markdown: normalized,\n              });\n              logger.trace('Markdown updated:', normalized);\n            })\n            .selectionUpdated(() => {\n              if (this.toolbar) {\n                this.toolbar.updateState();\n              }\n              // Emit event for selection change\n              this.emit(MODULE_EVENTS.EDITOR_SELECTION_CHANGED, {\n                from: 0,\n                to: 0,\n              });\n            })\n            .focus(() => {\n              if (this.toolbar) {\n                this.toolbar.updateState();\n              }\n              // Emit event for focus\n              this.emit(MODULE_EVENTS.EDITOR_FOCUSED, {});\n            })\n            .blur(() => {\n              if (this.toolbar) {\n                this.toolbar.updateState();\n              }\n              // Emit event for blur\n              this.emit(MODULE_EVENTS.EDITOR_BLURRED, {});\n            });\n        })\n        .config(nord)\n        .use(commonmark)\n        .use(gfm)\n        .use(listener)\n        .use(history)\n        // CriticMarkup support - plugins are properly exported from milkdown-marks.ts\n        // They are all proper MilkdownPlugin descriptors created with Milkdown helpers\n        .use(criticMarkupRemarkPlugin)\n        .use(criticAddition)\n        .use(criticDeletion)\n        .use(criticHighlight)\n        .use(criticComment)\n        .use(criticSubstitution)\n        .use(criticKeymap)\n        .use(criticMarkupPlugin);\n\n      if (diffHighlights.length > 0) {\n        editorBuilder.use(this.createTrackedHighlightPlugin(diffHighlights));\n      }\n\n      // Create Milkdown editor\n      this.instance = await editorBuilder.create();\n\n      // Initialize toolbar AFTER editor is created (so editorViewCtx exists)\n      this.toolbar = new EditorToolbar();\n      this.toolbar.setEditor(this.instance);\n      this.toolbar.setElementType(elementType);\n      const toolbarInstance = this.toolbar.create();\n      toolbarElement.appendChild(toolbarInstance);\n      this.toolbar.attachHandlers();\n      this.toolbar.updateState();\n\n      // Emit event for editor ready\n      this.emit(MODULE_EVENTS.EDITOR_READY, {\n        editor: this.instance,\n      } as any);\n\n      logger.debug('Milkdown editor initialized successfully');\n    } catch (error) {\n      logger.error('Failed to initialize Milkdown:', error);\n      const errorMessage =\n        error instanceof Error ? error.message : String(error);\n      editorContainer.innerHTML = `\n        <div style=\"padding:20px; color:red;\">\n          Failed to initialize editor. Please try again.\n          <pre>${errorMessage}</pre>\n        </div>\n      `;\n      throw error;\n    }\n  }\n\n  /**\n   * Prepare editor layout with toolbar and mount point\n   */\n  private prepareLayout(container: HTMLElement): {\n    mount: HTMLElement;\n    toolbarElement: HTMLElement;\n  } {\n    let layout = container.querySelector(\n      '.review-editor-layout'\n    ) as HTMLElement | null;\n    let mount = layout?.querySelector(\n      '.review-editor-surface'\n    ) as HTMLElement | null;\n    let toolbarElement = layout?.querySelector(\n      '.review-editor-toolbar-container'\n    ) as HTMLElement | null;\n\n    if (!layout || !mount || !toolbarElement) {\n      container.innerHTML = '';\n\n      layout = document.createElement('div');\n      layout.className = 'review-editor-layout';\n\n      const contentWrapper = document.createElement('div');\n      contentWrapper.className = 'review-editor-content';\n\n      mount = document.createElement('div');\n      mount.className = 'review-editor-surface';\n      contentWrapper.appendChild(mount);\n\n      toolbarElement = document.createElement('div');\n      toolbarElement.className = 'review-editor-toolbar-container';\n      contentWrapper.appendChild(toolbarElement);\n\n      layout.appendChild(contentWrapper);\n      container.appendChild(layout);\n    }\n\n    if (!mount || !toolbarElement) {\n      throw new Error('Failed to prepare editor layout');\n    }\n\n    return { mount, toolbarElement };\n  }\n\n  /**\n   * Create tracked highlight plugin for diff visualization\n   */\n  private createTrackedHighlightPlugin(ranges: DiffHighlightRange[]) {\n    const trackedHighlightPluginKey = new PluginKey('reviewTrackedHighlight');\n\n    // Wrap the plugin with $prose to create a proper MilkdownPlugin descriptor\n    return $prose(() => {\n      return new Plugin({\n        key: trackedHighlightPluginKey,\n        state: {\n          init: (_config: any, { doc }: any): DecorationSet => {\n            if (ranges.length === 0) {\n              return DecorationSet.empty;\n            }\n            return DecorationSet.create(\n              doc,\n              this.buildTrackedHighlightDecorations(doc, ranges)\n            );\n          },\n          apply(tr: any, old: DecorationSet): DecorationSet {\n            if (ranges.length === 0 || old === DecorationSet.empty) {\n              return old;\n            }\n            if (!tr.docChanged) {\n              return old;\n            }\n            return old.map(tr.mapping, tr.doc);\n          },\n        },\n        props: {\n          decorations(state: any): DecorationSet | null {\n            const decorations = trackedHighlightPluginKey.getState(state) as\n              | DecorationSet\n              | undefined;\n            return decorations ?? null;\n          },\n        },\n      });\n    });\n  }\n\n  /**\n   * Build decorations for tracked changes\n   */\n  private buildTrackedHighlightDecorations(\n    doc: ProseNode,\n    ranges: DiffHighlightRange[]\n  ): Decoration[] {\n    if (ranges.length === 0) {\n      return [];\n    }\n\n    const decorations: Decoration[] = [];\n\n    ranges.forEach((range) => {\n      if (range.end <= range.start) {\n        return;\n      }\n\n      const from = this.offsetToDocPosition(doc, range.start);\n      const to = this.offsetToDocPosition(doc, range.end);\n\n      if (from === -1 || to === -1) {\n        return;\n      }\n\n      const className =\n        range.type === 'addition'\n          ? 'review-tracked-addition'\n          : range.type === 'deletion'\n            ? 'review-tracked-deletion'\n            : 'review-tracked-modification';\n\n      decorations.push(Decoration.inline(from, to, { class: className }));\n    });\n\n    return decorations;\n  }\n\n  /**\n   * Convert character offset to ProseMirror document position\n   */\n  private offsetToDocPosition(doc: ProseNode, offset: number): number {\n    let currentOffset = 0;\n    let foundPos = -1;\n\n    doc.descendants((node: any, pos: number) => {\n      if (foundPos !== -1) return false; // Stop iteration\n\n      if (node.isText) {\n        const nodeLength = node.text.length;\n        if (currentOffset + nodeLength >= offset) {\n          foundPos = pos + (offset - currentOffset);\n          return false;\n        }\n        currentOffset += nodeLength;\n      } else if (node.isBlock && node !== doc) {\n        currentOffset += 2; // Account for block boundaries\n      }\n\n      return true;\n    });\n\n    return foundPos !== -1 ? foundPos : -1;\n  }\n\n  /**\n   * Destroy the editor and clean up\n   */\n  destroy(): void {\n    if (this.instance) {\n      this.instance.destroy();\n      this.instance = null;\n    }\n    if (this.toolbar) {\n      this.toolbar.destroy();\n      this.toolbar = null;\n    }\n    this.currentContent = '';\n    this.contentUpdateCallback = null;\n    this.clearListeners();\n  }\n}\n","import type { Editor } from '@milkdown/kit/core';\n\nimport { MODULE_EVENTS } from '../shared';\nimport type { DiffHighlightRange } from './MilkdownEditor';\nimport { MilkdownEditor } from './MilkdownEditor';\n\ninterface InitializeOptions {\n  container: HTMLElement;\n  content: string;\n  diffHighlights?: DiffHighlightRange[];\n  elementType: string;\n  onContentChange?: (markdown: string) => void;\n}\n\n/**\n * Coordinates creation and teardown of Milkdown editor instances.\n * Ensures we never leak listeners or reuse corrupted plugin state between sessions.\n */\nexport class EditorLifecycle {\n  private readonly createModule: () => MilkdownEditor;\n  private module: MilkdownEditor | null = null;\n  private editor: Editor | null = null;\n\n  constructor(factory: () => MilkdownEditor = () => new MilkdownEditor()) {\n    this.createModule = factory;\n  }\n\n  /**\n   * Initialize a new Milkdown editor session. Previous sessions are torn down first.\n   */\n  async initialize(options: InitializeOptions): Promise<Editor> {\n    this.destroy();\n\n    const module = this.createModule();\n    this.module = module;\n\n    if (options.onContentChange) {\n      module.on(\n        MODULE_EVENTS.EDITOR_CONTENT_CHANGED,\n        (detail: { markdown: string }) => {\n          options.onContentChange?.(detail.markdown);\n        }\n      );\n    }\n\n    await module.initialize(\n      options.container,\n      options.content,\n      options.diffHighlights ?? [],\n      options.elementType\n    );\n\n    this.editor = module.getInstance();\n    if (!this.editor) {\n      throw new Error(\n        'Milkdown editor failed to provide instance after initialization'\n      );\n    }\n\n    return this.editor;\n  }\n\n  /**\n   * Get the current Milkdown Editor instance (if any).\n   */\n  getEditor(): Editor | null {\n    return this.editor;\n  }\n\n  /**\n   * Destroy any active Milkdown editor instance and clear references.\n   */\n  destroy(): void {\n    if (this.module) {\n      this.module.destroy();\n      this.module = null;\n    }\n    this.editor = null;\n  }\n}\n","import { createModuleLogger } from '@utils/debug';\nimport type { CriticMarkupMatch } from '@modules/comments';\nimport type { SectionCommentSnapshot } from './CommentController';\n\nconst logger = createModuleLogger('CommentsSidebar');\n\nexport interface CommentsSidebarCallbacks {\n  onNavigate: (elementId: string, commentKey: string) => void;\n  onRemove: (elementId: string, match: CriticMarkupMatch) => void;\n  onEdit: (elementId: string, match: CriticMarkupMatch) => void;\n  onHover: (elementId: string, commentKey: string) => void;\n  onLeave: () => void;\n}\n\n/**\n * CommentsSidebar manages the sidebar UI for viewing and managing comments.\n */\nexport class CommentsSidebar {\n  private element: HTMLElement | null = null;\n  private isVisible = false;\n  private sections: SectionCommentSnapshot[] = [];\n  private callbacks: CommentsSidebarCallbacks | null = null;\n\n  constructor() {\n    this.ensureElementCreated();\n  }\n\n  create(): HTMLElement {\n    this.ensureElementCreated();\n    return this.element!;\n  }\n\n  getElement(): HTMLElement | null {\n    return this.element;\n  }\n\n  show(): void {\n    this.ensureElementCreated();\n    if (!this.element) return;\n\n    if (!this.element.parentNode) {\n      document.body.appendChild(this.element);\n    }\n\n    this.element.classList.add('review-sidebar-open');\n    this.isVisible = true;\n    this.element.setAttribute('aria-hidden', 'false');\n    logger.debug('Comments sidebar shown');\n  }\n\n  hide(): void {\n    if (!this.element) return;\n\n    this.element.classList.remove('review-sidebar-open');\n    this.isVisible = false;\n    this.element.setAttribute('aria-hidden', 'true');\n    logger.debug('Comments sidebar hidden');\n  }\n\n  toggle(): void {\n    if (this.isVisible) {\n      this.hide();\n    } else {\n      this.show();\n      this.refresh();\n    }\n  }\n\n  getIsVisible(): boolean {\n    return this.isVisible;\n  }\n\n  updateSections(\n    sections: SectionCommentSnapshot[],\n    callbacks: CommentsSidebarCallbacks\n  ): void {\n    this.sections = sections;\n    this.callbacks = callbacks;\n    this.refresh();\n    logger.debug('Comments updated', { count: sections.length });\n  }\n\n  refresh(): void {\n    if (!this.element) return;\n\n    const content = this.element.querySelector(\n      '.review-comments-sidebar-content'\n    );\n    if (!content) return;\n\n    content.innerHTML = '';\n\n    if (this.sections.length === 0) {\n      const emptyMsg = document.createElement('div');\n      emptyMsg.className = 'review-comments-empty';\n      emptyMsg.textContent = 'No comments yet';\n      content.appendChild(emptyMsg);\n      return;\n    }\n\n    this.sections.forEach((snapshot) => {\n      const section = document.createElement('div');\n      section.className = 'review-comments-section';\n      section.dataset.sectionId = snapshot.element.id;\n\n      const header = document.createElement('div');\n      header.className = 'review-comments-section-header';\n      header.textContent = this.getSectionLabel(snapshot);\n      section.appendChild(header);\n\n      const list = document.createElement('div');\n      list.className = 'review-comments-list';\n\n      snapshot.matches.forEach((match, index) => {\n        const item = this.renderComment(snapshot, match, index);\n        list.appendChild(item);\n      });\n\n      section.appendChild(list);\n      content.appendChild(section);\n    });\n\n    logger.debug('Comments sidebar refreshed');\n  }\n\n  destroy(): void {\n    if (this.element) {\n      this.element.remove();\n      this.element = null;\n    }\n    this.sections = [];\n    this.callbacks = null;\n    this.isVisible = false;\n  }\n\n  private ensureElementCreated(): void {\n    if (this.element) return;\n\n    const sidebar = document.createElement('div');\n    sidebar.className = 'review-comments-sidebar';\n    sidebar.setAttribute('role', 'region');\n    sidebar.setAttribute('aria-label', 'Comments');\n\n    const header = document.createElement('div');\n    header.className = 'review-comments-sidebar-header';\n\n    const title = document.createElement('h2');\n    title.textContent = 'Comments';\n    header.appendChild(title);\n\n    const closeBtn = document.createElement('button');\n    closeBtn.className = 'review-comments-sidebar-close';\n    closeBtn.setAttribute('aria-label', 'Close comments');\n    closeBtn.textContent = '×';\n    closeBtn.addEventListener('click', () => this.hide());\n    header.appendChild(closeBtn);\n\n    sidebar.appendChild(header);\n\n    const content = document.createElement('div');\n    content.className = 'review-comments-sidebar-content';\n    sidebar.appendChild(content);\n\n    this.element = sidebar;\n  }\n\n  private renderComment(\n    snapshot: SectionCommentSnapshot,\n    match: CriticMarkupMatch,\n    index: number\n  ): HTMLElement {\n    const elementId = snapshot.element.id;\n    const commentKey = `${elementId}:${match.start}`;\n\n    const container = document.createElement('div');\n    container.className = 'review-comment-item';\n    container.dataset.commentKey = commentKey;\n    container.dataset.elementId = elementId;\n    container.dataset.commentStart = String(match.start);\n    container.setAttribute('role', 'article');\n\n    const header = document.createElement('div');\n    header.className = 'review-comment-item-header';\n    header.innerHTML = `\n      <span class=\"review-comment-position\">${index + 1}/${snapshot.matches.length}</span>\n      <span class=\"review-comment-link\" aria-hidden=\"true\">⟶</span>\n    `;\n    container.appendChild(header);\n\n    const body = document.createElement('div');\n    body.className = 'review-comment-item-body';\n    body.innerHTML = `<div class=\"review-comment-text\">${this.escapeHtml(\n      this.extractPlainText(match.content)\n    )}</div>`;\n    container.appendChild(body);\n\n    const actions = document.createElement('div');\n    actions.className = 'review-comment-item-actions';\n    actions.innerHTML = `\n      <button class=\"review-comment-action-btn\" data-action=\"goto\">View</button>\n      <button class=\"review-comment-action-btn\" data-action=\"remove\">Remove</button>\n    `;\n    container.appendChild(actions);\n\n    if (this.callbacks) {\n      container\n        .querySelector('[data-action=\"goto\"]')\n        ?.addEventListener('click', () => {\n          this.callbacks?.onNavigate(elementId, commentKey);\n        });\n\n      container\n        .querySelector('[data-action=\"remove\"]')\n        ?.addEventListener('click', () => {\n          this.callbacks?.onRemove(elementId, match);\n        });\n\n      container.addEventListener('mouseenter', () => {\n        this.callbacks?.onHover(elementId, commentKey);\n      });\n\n      container.addEventListener('mouseleave', () => {\n        this.callbacks?.onLeave();\n      });\n\n      container.addEventListener('dblclick', () => {\n        this.callbacks?.onEdit(elementId, match);\n      });\n    }\n\n    return container;\n  }\n\n  private getSectionLabel(snapshot: SectionCommentSnapshot): string {\n    const plain = this.extractPlainText(snapshot.element.content);\n    const type = snapshot.element.metadata.type;\n    return plain ? `${type}: ${plain}` : type;\n  }\n\n  private extractPlainText(value: string): string {\n    return value.replace(/\\s+/g, ' ').trim();\n  }\n\n  private escapeHtml(value: string): string {\n    return value\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&#39;');\n  }\n}\n","/**\n * Comment Composer\n *\n * Manages the comment composition UI for creating and editing comments.\n * Provides a text editor interface with submission handling.\n * Uses event-driven architecture for decoupled communication.\n *\n * Extracted from UIModule index.ts to reduce monolithic complexity.\n */\n\nimport { createModuleLogger } from '@utils/debug';\nimport {\n  MODULE_EVENTS,\n  ModuleEventEmitter,\n  type CommentSubmittedDetail,\n  escapeHtml,\n} from '../shared';\n\nconst logger = createModuleLogger('CommentComposer');\n\nexport interface ComposerContext {\n  sectionId: string;\n  elementId: string;\n  existingComment?: string;\n  elementLabel?: string;\n}\n\n/**\n * CommentComposer manages comment creation and editing\n * Now extends event emitter for event-driven communication\n */\nexport class CommentComposer extends ModuleEventEmitter {\n  private element: HTMLElement | null = null;\n  private isOpen = false;\n  private currentContext: ComposerContext | null = null;\n  private insertionAnchor: HTMLElement | null = null;\n  private originalItem: HTMLElement | null = null;\n  private onSubmitCallback:\n    | ((content: string, context: ComposerContext) => void)\n    | null = null;\n  private onCancelCallback: (() => void) | null = null;\n\n  /**\n   * Create the composer element\n   */\n  create(): HTMLElement {\n    const composer = document.createElement('div');\n    composer.className = 'review-comment-composer';\n    composer.setAttribute('role', 'dialog');\n    composer.setAttribute('aria-label', 'Comment composer');\n\n    // Header\n    const header = document.createElement('div');\n    header.className = 'review-comment-composer-header';\n\n    const title = document.createElement('h3');\n    title.textContent = 'Add Comment';\n    header.appendChild(title);\n\n    const closeBtn = document.createElement('button');\n    closeBtn.className = 'review-comment-composer-close';\n    closeBtn.setAttribute('aria-label', 'Close composer');\n    closeBtn.textContent = '×';\n    closeBtn.addEventListener('click', () => this.cancel());\n    header.appendChild(closeBtn);\n\n    composer.appendChild(header);\n\n    // Textarea\n    const textareaContainer = document.createElement('div');\n    textareaContainer.className = 'review-comment-composer-body';\n\n    const textarea = document.createElement('textarea');\n    textarea.className = 'review-comment-composer-textarea';\n    textarea.placeholder = 'Enter your comment...';\n    textarea.setAttribute('rows', '4');\n    textarea.setAttribute('aria-label', 'Comment text');\n    textareaContainer.appendChild(textarea);\n\n    composer.appendChild(textareaContainer);\n\n    // Footer with buttons\n    const footer = document.createElement('div');\n    footer.className = 'review-comment-composer-footer';\n\n    const cancelBtn = document.createElement('button');\n    cancelBtn.className = 'review-comment-composer-cancel-btn';\n    cancelBtn.textContent = 'Cancel';\n    cancelBtn.addEventListener('click', () => this.cancel());\n    footer.appendChild(cancelBtn);\n\n    const submitBtn = document.createElement('button');\n    submitBtn.className = 'review-comment-composer-submit-btn';\n    submitBtn.textContent = 'Post Comment';\n    submitBtn.addEventListener('click', () => this.submit());\n    footer.appendChild(submitBtn);\n\n    composer.appendChild(footer);\n\n    this.element = composer;\n    return composer;\n  }\n\n  /**\n   * Get the composer element\n   */\n  getElement(): HTMLElement | null {\n    return this.element;\n  }\n\n  /**\n   * Open the composer for a specific context\n   * Handles DOM insertion and state management\n   */\n  open(\n    context: ComposerContext,\n    sidebarBody: HTMLElement,\n    onSubmit?: (content: string, ctx: ComposerContext) => void\n  ): void {\n    // Clear previous composer if any\n    this.close();\n\n    if (!this.element) {\n      this.create();\n    }\n\n    this.currentContext = context;\n\n    if (onSubmit) {\n      this.onSubmitCallback = onSubmit;\n    }\n\n    // Find insertion point if editing existing comment\n    let insertionAnchor: HTMLElement | null = null;\n    if (context.existingComment) {\n      insertionAnchor = sidebarBody.querySelector(\n        `.review-comment-item[data-element-id=\"${context.elementId}\"][data-comment-key=\"${context.elementId}:${context.existingComment}\"]`\n      ) as HTMLElement | null;\n    }\n\n    this.insertionAnchor = insertionAnchor;\n    if (insertionAnchor) {\n      insertionAnchor.classList.add('review-comment-item-hidden');\n      this.originalItem = insertionAnchor;\n    }\n\n    // Update HTML based on context\n    const isEditing = Boolean(context.existingComment);\n    const elementLabel = context.elementLabel || 'Document section';\n\n    this.element!.innerHTML = `\n      <div class=\"review-comment-composer-header\">\n        <span>${isEditing ? 'Edit comment' : 'Add comment'}</span>\n        <button class=\"review-btn review-btn-secondary review-btn-sm\" data-action=\"close\">✕</button>\n      </div>\n      <p class=\"review-comment-composer-context\">${escapeHtml(elementLabel)}</p>\n      <textarea class=\"review-comment-composer-input\" rows=\"4\" placeholder=\"Enter your comment...\"></textarea>\n      <div class=\"review-comment-composer-actions\">\n        <button class=\"review-btn review-btn-secondary review-btn-sm\" data-action=\"cancel\">Cancel</button>\n        <button class=\"review-btn review-btn-primary review-btn-sm\" data-action=\"save\">${isEditing ? 'Update' : 'Add'} comment</button>\n      </div>\n    `;\n\n    // Insert into DOM\n    if (this.insertionAnchor) {\n      this.insertionAnchor.insertAdjacentElement('beforebegin', this.element!);\n    } else {\n      sidebarBody.prepend(this.element!);\n    }\n\n    // Remove empty state if present\n    const emptyState = sidebarBody.querySelector('.review-comments-empty');\n    emptyState?.remove();\n\n    // Scroll to composer\n    sidebarBody.scrollTop = 0;\n\n    // Set up event handlers\n    this.element!.querySelector('[data-action=\"close\"]')?.addEventListener(\n      'click',\n      () => this.cancel()\n    );\n    this.element!.querySelector('[data-action=\"cancel\"]')?.addEventListener(\n      'click',\n      () => this.cancel()\n    );\n    this.element!.querySelector('[data-action=\"save\"]')?.addEventListener(\n      'click',\n      () => this.submit()\n    );\n\n    // Focus and populate textarea\n    const textarea = this.element!.querySelector(\n      'textarea'\n    ) as HTMLTextAreaElement;\n    if (textarea) {\n      if (context.existingComment) {\n        textarea.value = context.existingComment;\n        textarea.select();\n      }\n      textarea.focus();\n    }\n\n    // Update state\n    this.isOpen = true;\n    this.element!.style.display = 'block';\n    this.element!.setAttribute('aria-hidden', 'false');\n\n    // Emit event\n    this.emit(MODULE_EVENTS.COMMENT_COMPOSER_OPENED, {\n      elementId: context.elementId,\n      existingComment: context.existingComment\n        ? { content: context.existingComment }\n        : undefined,\n    } as any);\n\n    logger.debug('Comment composer opened', { context });\n  }\n\n  /**\n   * Close the composer\n   */\n  close(): void {\n    if (this.element) {\n      this.element.style.display = 'none';\n      this.element.setAttribute('aria-hidden', 'true');\n    }\n\n    // Restore original item visibility if hiding\n    if (this.originalItem) {\n      this.originalItem.classList.remove('review-comment-item-hidden');\n      this.originalItem = null;\n    }\n\n    this.insertionAnchor = null;\n    this.isOpen = false;\n    this.clearForm();\n  }\n\n  /**\n   * Check if composer is open\n   */\n  getIsOpen(): boolean {\n    return this.isOpen;\n  }\n\n  /**\n   * Get the current comment content\n   */\n  getContent(): string {\n    if (!this.element) return '';\n    const textarea = this.element.querySelector(\n      'textarea'\n    ) as HTMLTextAreaElement;\n    return textarea ? textarea.value.trim() : '';\n  }\n\n  /**\n   * Submit the comment\n   */\n  private submit(): void {\n    const content = this.getContent();\n\n    if (!content) {\n      logger.warn('Empty comment submitted');\n      return;\n    }\n\n    if (!this.currentContext) {\n      logger.error('No context for comment submission');\n      return;\n    }\n\n    // Emit event for UIModule to handle submission\n    const isEdit = Boolean(this.currentContext.existingComment);\n    this.emit(MODULE_EVENTS.COMMENT_SUBMITTED, {\n      elementId: this.currentContext.elementId,\n      content,\n      isEdit,\n    } as CommentSubmittedDetail);\n\n    // Also call callback if provided\n    if (this.onSubmitCallback) {\n      this.onSubmitCallback(content, this.currentContext);\n    }\n\n    this.close();\n    logger.debug('Comment submitted', {\n      context: this.currentContext,\n      content,\n    });\n  }\n\n  /**\n   * Cancel the composer\n   */\n  private cancel(): void {\n    if (this.currentContext) {\n      // Emit cancel event\n      this.emit(MODULE_EVENTS.COMMENT_CANCELLED, {\n        elementId: this.currentContext.elementId,\n      });\n    }\n\n    this.close();\n    if (this.onCancelCallback) {\n      this.onCancelCallback();\n    }\n    logger.debug('Comment composer cancelled');\n  }\n\n  /**\n   * Clear the form\n   */\n  private clearForm(): void {\n    if (!this.element) return;\n    const textarea = this.element.querySelector(\n      'textarea'\n    ) as HTMLTextAreaElement;\n    if (textarea) {\n      textarea.value = '';\n    }\n    this.currentContext = null;\n  }\n\n  /**\n   * Register submit handler\n   */\n  onSubmit(\n    callback: (content: string, context: ComposerContext) => void\n  ): void {\n    this.onSubmitCallback = callback;\n  }\n\n  /**\n   * Register cancel handler\n   */\n  onCancel(callback: () => void): void {\n    this.onCancelCallback = callback;\n  }\n\n  /**\n   * Destroy the composer\n   */\n  destroy(): void {\n    this.close();\n    if (this.element) {\n      this.element.remove();\n    }\n    this.element = null;\n    this.currentContext = null;\n    this.insertionAnchor = null;\n    this.originalItem = null;\n    this.onSubmitCallback = null;\n    this.onCancelCallback = null;\n    this.clearListeners();\n  }\n}\n","import type { CriticMarkupMatch } from '@modules/comments';\nimport type { SectionCommentSnapshot } from './CommentController';\n\nexport interface CommentBadgeCallbacks {\n  onShowComments: (elementId: string, commentKey: string) => void;\n  onOpenComposer: (elementId: string, match: CriticMarkupMatch | null) => void;\n  onHover: (elementId: string) => void;\n  onLeave: () => void;\n}\n\n/**\n * Manages comment indicators rendered on document sections.\n */\nexport class CommentBadges {\n  private indicators = new Map<string, HTMLButtonElement>();\n  private latestMatch = new Map<string, CriticMarkupMatch | null>();\n\n  syncIndicators(\n    sections: SectionCommentSnapshot[],\n    callbacks: CommentBadgeCallbacks\n  ): void {\n    const activeIds = new Set(sections.map((section) => section.element.id));\n\n    for (const [sectionId, indicator] of this.indicators) {\n      if (!activeIds.has(sectionId)) {\n        indicator.remove();\n        this.indicators.delete(sectionId);\n        this.latestMatch.delete(sectionId);\n      }\n    }\n\n    sections.forEach((snapshot) => {\n      const domElement = document.querySelector(\n        `[data-review-id=\"${snapshot.element.id}\"]`\n      ) as HTMLElement | null;\n      if (\n        !domElement ||\n        domElement.classList.contains('review-editable-editing')\n      ) {\n        return;\n      }\n\n      const indicator = this.ensureIndicator(\n        snapshot.element.id,\n        domElement,\n        callbacks\n      );\n      this.updateIndicator(indicator, domElement, snapshot);\n    });\n  }\n\n  clearAll(): void {\n    for (const indicator of this.indicators.values()) {\n      indicator.remove();\n    }\n    this.indicators.clear();\n    this.latestMatch.clear();\n  }\n\n  private ensureIndicator(\n    sectionId: string,\n    domElement: HTMLElement,\n    callbacks: CommentBadgeCallbacks\n  ): HTMLButtonElement {\n    let indicator = this.indicators.get(sectionId);\n\n    if (!indicator || !indicator.isConnected) {\n      indicator?.remove();\n      indicator = this.createIndicator(sectionId, callbacks);\n      this.indicators.set(sectionId, indicator);\n    }\n\n    if (!domElement.contains(indicator)) {\n      domElement.appendChild(indicator);\n    }\n\n    return indicator;\n  }\n\n  private createIndicator(\n    sectionId: string,\n    callbacks: CommentBadgeCallbacks\n  ): HTMLButtonElement {\n    const indicator = document.createElement('button');\n    indicator.type = 'button';\n    indicator.className =\n      'review-section-comment-indicator review-badge-positioned';\n\n    const icon = document.createElement('span');\n    icon.className = 'review-badge-icon';\n    icon.textContent = '💬';\n    indicator.appendChild(icon);\n\n    const countSpan = document.createElement('span');\n    countSpan.className = 'review-badge-count is-hidden';\n    countSpan.textContent = '1';\n    indicator.appendChild(countSpan);\n\n    const stop = (event: Event) => {\n      event.stopPropagation();\n      if (event instanceof MouseEvent) {\n        event.preventDefault();\n      }\n    };\n\n    indicator.addEventListener('mousedown', stop);\n    indicator.addEventListener('mouseup', stop);\n    indicator.addEventListener('click', (event) => {\n      stop(event);\n      const commentKey = indicator.dataset.commentKey ?? '';\n      callbacks.onShowComments(sectionId, commentKey);\n    });\n\n    indicator.addEventListener('dblclick', (event) => {\n      stop(event);\n      const match = this.latestMatch.get(sectionId) ?? null;\n      callbacks.onOpenComposer(sectionId, match);\n    });\n\n    indicator.addEventListener('mouseenter', () => {\n      callbacks.onHover(sectionId);\n    });\n\n    indicator.addEventListener('mouseleave', () => {\n      callbacks.onLeave();\n    });\n\n    return indicator;\n  }\n\n  private updateIndicator(\n    indicator: HTMLButtonElement,\n    domElement: HTMLElement,\n    snapshot: SectionCommentSnapshot\n  ): void {\n    const { element, matches } = snapshot;\n    const firstMatch = matches[0] ?? null;\n    this.latestMatch.set(element.id, firstMatch);\n\n    const count = matches.length;\n    const countSpan = indicator.querySelector('.review-badge-count');\n    if (countSpan) {\n      countSpan.textContent = count > 1 ? String(count) : '1';\n      countSpan.classList.toggle('is-hidden', count <= 1);\n    }\n\n    const commentKey = firstMatch\n      ? `${element.id}:${firstMatch.start}`\n      : element.id;\n    indicator.dataset.commentKey = commentKey;\n    indicator.dataset.commentStart = firstMatch ? String(firstMatch.start) : '';\n\n    const preview = (firstMatch?.comment || firstMatch?.content || '')\n      .replace(/\\s+/g, ' ')\n      .trim();\n    const tooltip =\n      count > 1\n        ? `${count} comments${preview ? ` • \"${preview}\"` : ''}`\n        : `Comment${preview ? ` • \"${preview}\"` : ''}`;\n\n    indicator.setAttribute('title', tooltip);\n    indicator.setAttribute('aria-label', tooltip);\n\n    if (getComputedStyle(domElement).position === 'static') {\n      domElement.style.position = 'relative';\n    }\n\n    domElement\n      .querySelectorAll('.review-section-comment-indicator')\n      .forEach((existing) => {\n        if (existing !== indicator) {\n          existing.parentElement?.removeChild(existing);\n        }\n      });\n  }\n\n  destroy(): void {\n    this.clearAll();\n  }\n}\n","/**\n * UI Module Constants\n * Centralized configuration for magic numbers and constants used throughout the UI module\n */\n\n/**\n * History and State Management\n */\nexport const UI_CONSTANTS = {\n  // Editor history storage\n  EDITOR_HISTORY_STORAGE_PREFIX: 'review-editor-history-',\n  MAX_HISTORY_SIZE_BYTES: 500000, // 500KB per element history\n  MAX_HISTORY_STATES: 50, // Max number of states per element\n\n  // Milkdown editor configuration\n  MILKDOWN_HISTORY_DEPTH: 100, // Number of undo/redo steps\n  MILKDOWN_NEW_GROUP_DELAY: 500, // Delay (ms) before grouping undo/redo steps\n\n  /**\n   * Animation and Transition Timings\n   */\n  ANIMATION_DURATION_MS: {\n    FAST: 150, // Search debounce, editor input\n    MEDIUM: 200, // Palette closing, search panel closing\n    SLOW: 300, // Sidebar animation, notification removal\n    FLASH_HIGHLIGHT: 1500, // Flash highlight on elements\n    LONG_HIGHLIGHT: 2000, // Flash highlight (longer variant)\n    NOTIFICATION_DISPLAY: 3000, // How long notifications display\n  },\n\n  /**\n   * Search and Navigation\n   */\n  SEARCH_DEBOUNCE_DELAY_MS: 150,\n  SEARCH_HIGHLIGHT_DURATION_MS: 1500,\n\n  /**\n   * Comments and Notifications\n   */\n  COMMENT_BADGE_ANIMATION_DELAY_MS: 1000,\n  NOTIFICATION_DISPLAY_DURATION_MS: 3000,\n\n  /**\n   * UI Element IDs and Classes\n   */\n  TOOLBAR_CLASS: 'review-toolbar',\n  SIDEBAR_CLASS: 'review-sidebar',\n  MODIFIED_ELEMENT_SELECTOR: '[data-review-modified=\"true\"]',\n  ELEMENT_DATA_ATTRIBUTE: '[data-review-id]',\n\n  /**\n   * Focus and Keyboard Navigation\n   */\n  FOCUS_TRAP_ENABLED: true,\n  ARROW_NAVIGATION_ENABLED: true,\n};\n\n/**\n * Get animation duration by name\n */\nexport function getAnimationDuration(\n  key: keyof typeof UI_CONSTANTS.ANIMATION_DURATION_MS\n): number {\n  return UI_CONSTANTS.ANIMATION_DURATION_MS[key];\n}\n","import type { CommentState } from '../shared';\nimport { MODULE_EVENTS } from '../shared';\nimport type { CommentsModule } from '@modules/comments';\nimport type { ChangesModule } from '@modules/changes';\nimport type { MarkdownModule } from '@modules/markdown';\nimport type { CommentComposer } from './CommentComposer';\nimport type { CommentsSidebar } from './CommentsSidebar';\nimport type { CommentBadges, CommentBadgeCallbacks } from './CommentBadges';\nimport type { Element as ReviewElement } from '@/types';\nimport { getAnimationDuration } from '../constants';\n\nexport interface CommentControllerConfig {\n  changes: ChangesModule;\n  comments: CommentsModule;\n  markdown: MarkdownModule;\n}\n\nexport interface CommentControllerCallbacks {\n  requestRefresh: () => void;\n  ensureSidebarVisible?: () => void;\n  showNotification: (\n    message: string,\n    type?: 'info' | 'success' | 'error'\n  ) => void;\n  onComposerClosed?: () => void;\n}\n\ninterface CommentComposerContext {\n  elementId: string;\n  existingComment?: ReturnType<CommentsModule['parse']>[0];\n  commentKey?: string;\n}\n\nexport class CommentController {\n  private config: CommentControllerConfig;\n  private commentState: CommentState;\n  private sidebar: CommentsSidebar | null;\n  private composer: CommentComposer | null;\n  private badges: CommentBadges | null;\n  private callbacks: CommentControllerCallbacks;\n  private sectionCommentCache = new Map<string, string>();\n\n  constructor(options: {\n    config: CommentControllerConfig;\n    commentState: CommentState;\n    sidebar: CommentsSidebar | null;\n    composer: CommentComposer | null;\n    badges: CommentBadges | null;\n    callbacks: CommentControllerCallbacks;\n  }) {\n    this.config = options.config;\n    this.commentState = options.commentState;\n    this.sidebar = options.sidebar;\n    this.composer = options.composer;\n    this.badges = options.badges;\n    this.callbacks = options.callbacks;\n\n    this.composer?.on(MODULE_EVENTS.COMMENT_SUBMITTED, (detail: any) => {\n      this.handleSubmission(detail);\n    });\n    this.composer?.on(MODULE_EVENTS.COMMENT_CANCELLED, () => {\n      this.closeComposer();\n    });\n  }\n\n  public openComposer(context: CommentComposerContext): void {\n    if (!this.composer || !this.sidebar) return;\n\n    const sidebarElement = this.sidebar.getElement();\n    if (!sidebarElement) {\n      return;\n    }\n\n    const body = sidebarElement.querySelector(\n      '.review-comments-sidebar-content'\n    ) as HTMLElement | null;\n    if (!body) {\n      return;\n    }\n\n    this.closeComposer();\n\n    const element = this.config.changes.getElementById(context.elementId);\n    const elementLabel = element\n      ? this.getElementLabel(element.content, element.metadata.type)\n      : 'Document section';\n\n    const existingCommentContent = context.existingComment?.content;\n\n    this.composer.open(\n      {\n        sectionId: context.elementId,\n        elementId: context.elementId,\n        existingComment: existingCommentContent,\n        elementLabel,\n      },\n      body\n    );\n\n    const composerElement = body.querySelector(\n      '.review-comment-composer'\n    ) as HTMLElement | null;\n    if (composerElement) {\n      composerElement.dataset.elementId = context.elementId;\n      composerElement.dataset.commentKey = context.commentKey ?? '';\n      if (context.existingComment) {\n        composerElement.dataset.commentStart = String(\n          context.existingComment.start\n        );\n      }\n      this.commentState.activeCommentComposer = composerElement;\n      this.commentState.activeComposerInsertionAnchor =\n        composerElement.previousElementSibling as HTMLElement | null;\n    }\n\n    // Hide original comment item while editing\n    if (context.commentKey) {\n      const originalItem = body.querySelector<HTMLElement>(\n        `.review-comment-item[data-comment-key=\"${context.commentKey}\"]`\n      );\n      if (originalItem) {\n        originalItem.classList.add('review-comment-item-hidden');\n        this.commentState.activeComposerOriginalItem = originalItem;\n      }\n    }\n\n    const textarea = body.querySelector(\n      '.review-comment-composer-input'\n    ) as HTMLTextAreaElement | null;\n    textarea?.focus();\n  }\n\n  public closeComposer(): void {\n    this.composer?.close();\n\n    if (this.commentState.activeCommentComposer) {\n      this.commentState.activeCommentComposer.remove();\n      this.commentState.activeCommentComposer = null;\n    }\n\n    this.commentState.activeComposerInsertionAnchor = null;\n\n    if (this.commentState.activeComposerOriginalItem) {\n      this.commentState.activeComposerOriginalItem.classList.remove(\n        'review-comment-item-hidden'\n      );\n      this.commentState.activeComposerOriginalItem = null;\n    }\n\n    this.callbacks.onComposerClosed?.();\n    this.clearHighlight('composer');\n  }\n\n  public handleSubmission(detail: any): void {\n    const { elementId, content, isEdit, start } = detail ?? {};\n    if (!elementId || typeof content !== 'string') {\n      return;\n    }\n\n    if (isEdit && typeof start === 'number') {\n      this.updateSectionComment(elementId, start, content);\n    } else {\n      this.addSectionComment(elementId, content);\n    }\n\n    this.closeComposer();\n  }\n\n  public removeComment(\n    elementId: string,\n    match: ReturnType<CommentsModule['parse']>[0]\n  ): void {\n    try {\n      const currentContent = this.config.changes.getElementContent(elementId);\n      const newContent = this.config.comments.accept(currentContent, match);\n      this.config.changes.edit(elementId, newContent);\n      const extracted = this.extractSectionComments(newContent);\n      this.cacheSectionCommentMarkup(elementId, extracted.commentMarkup);\n      this.callbacks.requestRefresh();\n      this.callbacks.ensureSidebarVisible?.();\n      this.callbacks.showNotification('Comment removed', 'success');\n    } catch (error) {\n      console.error('Failed to remove comment:', error);\n      this.callbacks.showNotification('Failed to remove comment', 'error');\n    }\n  }\n\n  private addSectionComment(elementId: string, comment: string): void {\n    try {\n      const currentContent = this.config.changes.getElementContent(elementId);\n\n      const existingComments = this.config.comments\n        .parse(currentContent)\n        .filter((m) => m.type === 'comment');\n\n      const lastCommentIndex = existingComments.length - 1;\n      const lastComment =\n        lastCommentIndex >= 0 ? existingComments[lastCommentIndex] : undefined;\n      const newContent = lastComment\n        ? currentContent.substring(0, lastComment.start) +\n          this.config.comments.createComment(comment) +\n          currentContent.substring(lastComment.end)\n        : currentContent + this.config.comments.createComment(comment);\n\n      this.config.changes.edit(elementId, newContent);\n      const extracted = this.extractSectionComments(newContent);\n      this.cacheSectionCommentMarkup(elementId, extracted.commentMarkup);\n      this.callbacks.requestRefresh();\n      this.callbacks.ensureSidebarVisible?.();\n      window.getSelection()?.removeAllRanges();\n      this.callbacks.showNotification('Comment added successfully', 'success');\n    } catch (error) {\n      console.error('Failed to add section comment:', error);\n      this.callbacks.showNotification('Failed to add comment', 'error');\n    }\n  }\n\n  private updateSectionComment(\n    elementId: string,\n    start: number,\n    comment: string\n  ): void {\n    try {\n      const currentContent = this.config.changes.getElementContent(elementId);\n      const comments = this.config.comments\n        .parse(currentContent)\n        .filter((m) => m.type === 'comment');\n      const target = comments.find((match) => match.start === start);\n      if (!target) {\n        this.addSectionComment(elementId, comment);\n        return;\n      }\n\n      const newContent =\n        currentContent.substring(0, target.start) +\n        this.config.comments.createComment(comment) +\n        currentContent.substring(target.end);\n\n      this.config.changes.edit(elementId, newContent);\n      const extracted = this.extractSectionComments(newContent);\n      this.cacheSectionCommentMarkup(elementId, extracted.commentMarkup);\n      this.callbacks.requestRefresh();\n      this.callbacks.ensureSidebarVisible?.();\n      this.callbacks.showNotification('Comment updated', 'success');\n    } catch (error) {\n      console.error('Failed to update comment:', error);\n      this.callbacks.showNotification('Failed to update comment', 'error');\n    }\n  }\n\n  private getElementLabel(content: string, type: string): string {\n    const plain = this.config.markdown\n      .toPlainText(content)\n      .replace(/\\s+/g, ' ')\n      .trim();\n    return plain ? `${type}: ${plain}` : type;\n  }\n\n  public getSectionComments(): SectionCommentSnapshot[] {\n    const rawState = this.config.changes.getCurrentState?.() ?? [];\n    if (!Array.isArray(rawState)) {\n      return [];\n    }\n    const parse =\n      typeof this.config.comments.parse === 'function'\n        ? this.config.comments.parse.bind(this.config.comments)\n        : () => [];\n    const snapshots: SectionCommentSnapshot[] = [];\n\n    rawState.forEach((element) => {\n      const matches = parse(element.content).filter(\n        (m) => m.type === 'comment'\n      );\n\n      if (matches.length > 0) {\n        snapshots.push({ element, matches });\n      }\n    });\n\n    return snapshots;\n  }\n\n  public getCommentCounts(): Map<string, number> {\n    const counts = new Map<string, number>();\n    this.getSectionComments().forEach(({ element, matches }) => {\n      counts.set(element.id, matches.length);\n    });\n    return counts;\n  }\n\n  public refreshUI(options: { showSidebar?: boolean }): void {\n    const sections = this.getSectionComments();\n\n    if (options.showSidebar) {\n      this.sidebar?.show();\n    }\n\n    this.sidebar?.updateSections(sections, {\n      onNavigate: (elementId, commentKey) => {\n        this.focusCommentAnchor(elementId, commentKey);\n      },\n      onRemove: (elementId, match) => {\n        this.removeComment(elementId, match);\n        this.clearHighlight();\n      },\n      onEdit: (elementId, match) => {\n        this.openComposer({\n          elementId,\n          existingComment: match,\n          commentKey: match ? `${elementId}:${match.start}` : undefined,\n        });\n      },\n      onHover: (elementId, commentKey) => {\n        this.highlightSection(elementId, 'hover', commentKey);\n      },\n      onLeave: () => {\n        this.clearHighlight('hover');\n      },\n    });\n\n    this.badges?.syncIndicators(sections, {\n      onShowComments: (elementId, commentKey) => {\n        this.sidebar?.show();\n        if (commentKey) {\n          this.focusCommentAnchor(elementId, commentKey);\n        } else {\n          this.highlightSection(elementId, 'hover');\n        }\n      },\n      onOpenComposer: (elementId, match) => {\n        this.openComposer({\n          elementId,\n          existingComment: match ?? undefined,\n          commentKey: match ? `${elementId}:${match.start}` : undefined,\n        });\n      },\n      onHover: (_elementId) => {\n        this.highlightSection(_elementId, 'hover');\n      },\n      onLeave: () => {\n        this.clearHighlight('hover');\n      },\n    });\n  }\n\n  public cacheSectionCommentMarkup(\n    elementId: string,\n    markup: string | null\n  ): void {\n    if (markup && markup.trim()) {\n      this.sectionCommentCache.set(elementId, markup);\n    } else {\n      this.sectionCommentCache.delete(elementId);\n    }\n  }\n\n  public consumeSectionCommentMarkup(elementId: string): string | undefined {\n    const markup = this.sectionCommentCache.get(elementId);\n    if (markup !== undefined) {\n      this.sectionCommentCache.delete(elementId);\n    }\n    return markup;\n  }\n\n  public clearSectionCommentMarkup(elementId: string): void {\n    this.sectionCommentCache.delete(elementId);\n  }\n\n  public clearSectionCommentMarkupFor(ids: string[]): void {\n    ids.forEach((id) => this.sectionCommentCache.delete(id));\n  }\n\n  public extractSectionComments(content: string): {\n    content: string;\n    commentMarkup: string | null;\n  } {\n    let working = content;\n    const captured: string[] = [];\n    const pattern = /\\s*\\{>>[\\s\\S]*?<<\\}\\s*$/;\n\n    while (true) {\n      const match = working.match(pattern);\n      if (!match || match.index === undefined) {\n        break;\n      }\n      captured.unshift(match[0]);\n      working = working.slice(0, match.index);\n    }\n\n    return {\n      content: working.replace(/\\s+$/u, ''),\n      commentMarkup: captured.length > 0 ? captured.join('') : null,\n    };\n  }\n\n  public appendSectionComments(content: string, commentMarkup: string): string {\n    const base = content.replace(/\\s+$/u, '');\n    return `${base}${commentMarkup}`;\n  }\n\n  public highlightSection(\n    elementId: string,\n    source: 'hover' | 'composer',\n    commentKey?: string\n  ): void {\n    const element = document.querySelector(\n      `[data-review-id=\"${elementId}\"]`\n    ) as HTMLElement | null;\n    if (!element) {\n      return;\n    }\n\n    if (\n      this.commentState.activeHighlightedSection &&\n      this.commentState.activeHighlightedSection !== element\n    ) {\n      this.commentState.activeHighlightedSection.classList.remove(\n        'review-comment-section-highlight'\n      );\n    }\n\n    this.commentState.activeHighlightedSection = element;\n    this.commentState.highlightedBy = source;\n    element.classList.add('review-comment-section-highlight');\n\n    this.updateCommentHighlights(elementId, commentKey, source);\n\n    if (this.commentState.activeCommentComposer) {\n      const isComposerElement =\n        this.commentState.activeCommentComposer.dataset.elementId === elementId;\n      if (source === 'composer' && isComposerElement) {\n        this.commentState.activeCommentComposer.classList.add(\n          'review-comment-composer-active'\n        );\n      } else if (source === 'hover') {\n        this.commentState.activeCommentComposer.classList.remove(\n          'review-comment-composer-active'\n        );\n      }\n    }\n\n    this.sanitizeInlineCommentArtifacts(element);\n  }\n\n  public clearHighlight(source?: 'hover' | 'composer'): void {\n    if (\n      source &&\n      this.commentState.highlightedBy &&\n      this.commentState.highlightedBy !== source\n    ) {\n      return;\n    }\n\n    if (this.commentState.activeHighlightedSection) {\n      this.commentState.activeHighlightedSection.classList.remove(\n        'review-comment-section-highlight'\n      );\n    }\n    this.commentState.activeHighlightedSection = null;\n    this.commentState.highlightedBy = null;\n\n    this.updateCommentHighlights(null, undefined, source ?? 'hover');\n\n    if (\n      source !== 'hover' &&\n      this.commentState.activeCommentComposer &&\n      source === 'composer'\n    ) {\n      this.commentState.activeCommentComposer.classList.remove(\n        'review-comment-composer-active'\n      );\n    }\n\n    if (source === 'hover' && this.commentState.activeCommentComposer) {\n      const composerElementId =\n        this.commentState.activeCommentComposer.dataset.elementId;\n      const commentStart =\n        this.commentState.activeCommentComposer.dataset.commentStart;\n      if (composerElementId) {\n        this.highlightSection(\n          composerElementId,\n          'composer',\n          commentStart ? `${composerElementId}:${commentStart}` : undefined\n        );\n      }\n    }\n  }\n\n  public focusCommentAnchor(elementId: string, commentKey: string): void {\n    const element = document.querySelector(\n      `[data-review-id=\"${elementId}\"]`\n    ) as HTMLElement | null;\n    if (!element) {\n      return;\n    }\n\n    const anchor = element.querySelector(\n      `[data-comment-anchor=\"${commentKey}\"]`\n    ) as HTMLElement | null;\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n      anchor.classList.add('review-comment-anchor-highlight');\n      setTimeout(() => {\n        anchor.classList.remove('review-comment-anchor-highlight');\n      }, getAnimationDuration('LONG_HIGHLIGHT'));\n      anchor.focus({ preventScroll: true });\n    } else {\n      element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n      element.classList.add('review-highlight-flash');\n      setTimeout(() => {\n        element.classList.remove('review-highlight-flash');\n      }, getAnimationDuration('LONG_HIGHLIGHT'));\n    }\n  }\n\n  private updateCommentHighlights(\n    elementId: string | null,\n    commentKey: string | undefined,\n    source: 'hover' | 'composer'\n  ): void {\n    document\n      .querySelectorAll<HTMLElement>('.review-comment-item')\n      .forEach((item) =>\n        item.classList.remove('review-comment-item-highlight')\n      );\n\n    if (!elementId) {\n      return;\n    }\n\n    const items = document.querySelectorAll<HTMLElement>(\n      `.review-comment-item[data-element-id=\"${elementId}\"]`\n    );\n\n    if (commentKey) {\n      items.forEach((item) => {\n        if (item.dataset.commentKey === commentKey) {\n          item.classList.add('review-comment-item-highlight');\n        }\n      });\n    } else if (source === 'hover') {\n      items.forEach((item) =>\n        item.classList.add('review-comment-item-highlight')\n      );\n    }\n  }\n\n  public syncBadges(\n    sections: SectionCommentSnapshot[],\n    callbacks: CommentBadgeCallbacks\n  ): void {\n    this.badges?.syncIndicators(sections, callbacks);\n  }\n\n  public clearBadges(): void {\n    this.badges?.clearAll();\n  }\n\n  public sanitizeInlineCommentArtifacts(element: HTMLElement): void {\n    element\n      .querySelectorAll<HTMLElement>('[data-critic-type=\"comment\"]')\n      .forEach((node) => {\n        node.style.display = 'none';\n        node.setAttribute('aria-hidden', 'true');\n      });\n\n    element\n      .querySelectorAll<HTMLElement>('[data-critic-type=\"highlight\"]')\n      .forEach((node) => {\n        node.classList.remove('review-comment-anchor');\n        node.removeAttribute('data-comment-anchor');\n        node.removeAttribute('tabindex');\n        node.removeAttribute('role');\n        node.style.backgroundColor = '';\n      });\n  }\n}\n\nexport interface SectionCommentSnapshot {\n  element: ReviewElement;\n  matches: ReturnType<CommentsModule['parse']>;\n}\n","import { createModuleLogger } from '@utils/debug';\n\nconst logger = createModuleLogger('MainSidebar');\n\n/**\n * MainSidebar manages the persistent main toolbar displayed beside the document.\n * It renders the undo/redo controls, tracked changes toggle, comment entry point,\n * and communicates user intent back to the orchestrating UIModule.\n */\nexport class MainSidebar {\n  private element: HTMLElement | null = null;\n  private undoBtn: HTMLButtonElement | null = null;\n  private redoBtn: HTMLButtonElement | null = null;\n  private trackedChangesToggle: HTMLInputElement | null = null;\n  private commentsBtn: HTMLButtonElement | null = null;\n  private toggleBtn: HTMLButtonElement | null = null;\n  private unsavedIndicator: HTMLElement | null = null;\n\n  private onUndoCallback: (() => void) | null = null;\n  private onRedoCallback: (() => void) | null = null;\n  private onTrackedChangesCallback: ((enabled: boolean) => void) | null = null;\n  private onShowCommentsCallback: (() => void) | null = null;\n  private onToggleSidebarCallback: (() => void) | null = null;\n\n  /**\n   * Lazily create (or return) the sidebar element.\n   */\n  create(): HTMLElement {\n    if (this.element) {\n      return this.element;\n    }\n\n    const container = document.createElement('div');\n    container.className = 'review-toolbar review-persistent-sidebar';\n    container.setAttribute('role', 'toolbar');\n    container.setAttribute('aria-label', 'Review tools');\n\n    const header = document.createElement('div');\n    header.className = 'review-sidebar-header';\n\n    const title = document.createElement('h3');\n    title.textContent = 'Review Tools';\n    header.appendChild(title);\n\n    this.toggleBtn = document.createElement('button');\n    this.toggleBtn.className = 'review-btn review-btn-icon';\n    this.toggleBtn.setAttribute('data-action', 'toggle-sidebar');\n    this.toggleBtn.setAttribute('title', 'Collapse sidebar');\n    this.toggleBtn.setAttribute('aria-label', 'Collapse sidebar');\n    this.toggleBtn.setAttribute('aria-expanded', 'true');\n    this.toggleBtn.setAttribute('aria-label', 'Toggle sidebar visibility');\n\n    const chevron = document.createElement('span');\n    chevron.className = 'review-icon-chevron';\n    chevron.textContent = '‹';\n    this.toggleBtn.appendChild(chevron);\n\n    this.toggleBtn.addEventListener('click', () => {\n      this.onToggleSidebarCallback?.();\n    });\n    header.appendChild(this.toggleBtn);\n\n    container.appendChild(header);\n\n    const body = document.createElement('div');\n    body.className = 'review-sidebar-body';\n\n    // Actions section (undo/redo)\n    const actionsSection = document.createElement('div');\n    actionsSection.className = 'review-sidebar-section';\n\n    const actionsTitle = document.createElement('h4');\n    actionsTitle.textContent = 'Actions';\n    actionsSection.appendChild(actionsTitle);\n\n    this.undoBtn = document.createElement('button');\n    this.undoBtn.className = 'review-btn review-btn-secondary review-btn-block';\n    this.undoBtn.setAttribute('data-action', 'undo');\n    this.undoBtn.setAttribute('title', 'Undo (Ctrl+Z)');\n    this.undoBtn.setAttribute('aria-label', 'Undo (Ctrl+Z)');\n    this.undoBtn.textContent = '↶ Undo';\n    this.undoBtn.disabled = true;\n    this.undoBtn.addEventListener('click', () => {\n      this.onUndoCallback?.();\n    });\n    actionsSection.appendChild(this.undoBtn);\n\n    this.redoBtn = document.createElement('button');\n    this.redoBtn.className = 'review-btn review-btn-secondary review-btn-block';\n    this.redoBtn.setAttribute('data-action', 'redo');\n    this.redoBtn.setAttribute('title', 'Redo (Ctrl+Y)');\n    this.redoBtn.setAttribute('aria-label', 'Redo (Ctrl+Y)');\n    this.redoBtn.textContent = '↷ Redo';\n    this.redoBtn.disabled = true;\n    this.redoBtn.addEventListener('click', () => {\n      this.onRedoCallback?.();\n    });\n    actionsSection.appendChild(this.redoBtn);\n\n    body.appendChild(actionsSection);\n\n    // View section (tracked changes)\n    const viewSection = document.createElement('div');\n    viewSection.className = 'review-sidebar-section';\n\n    const viewTitle = document.createElement('h4');\n    viewTitle.textContent = 'View';\n    viewSection.appendChild(viewTitle);\n\n    const trackedLabel = document.createElement('label');\n    trackedLabel.className = 'review-checkbox-label';\n\n    this.trackedChangesToggle = document.createElement('input');\n    this.trackedChangesToggle.type = 'checkbox';\n    this.trackedChangesToggle.setAttribute(\n      'data-action',\n      'toggle-tracked-changes'\n    );\n    this.trackedChangesToggle.setAttribute(\n      'aria-label',\n      'Show tracked changes'\n    );\n    this.trackedChangesToggle.className = 'review-sidebar-checkbox';\n    this.trackedChangesToggle.addEventListener('change', (event) => {\n      const target = event.target as HTMLInputElement;\n      this.onTrackedChangesCallback?.(target.checked);\n    });\n    trackedLabel.appendChild(this.trackedChangesToggle);\n\n    const trackedText = document.createElement('span');\n    trackedText.className = 'review-sidebar-label-text';\n    trackedText.textContent = 'Show tracked changes';\n    trackedLabel.appendChild(trackedText);\n\n    viewSection.appendChild(trackedLabel);\n    body.appendChild(viewSection);\n\n    // Comments section\n    const commentsSection = document.createElement('div');\n    commentsSection.className = 'review-sidebar-section';\n\n    const commentsTitle = document.createElement('h4');\n    commentsTitle.textContent = 'Comments';\n    commentsSection.appendChild(commentsTitle);\n\n    this.commentsBtn = document.createElement('button');\n    this.commentsBtn.className =\n      'review-btn review-btn-primary review-btn-block';\n    this.commentsBtn.setAttribute('data-action', 'show-comments');\n    this.commentsBtn.textContent = '💬 View Comments';\n    this.commentsBtn.addEventListener('click', () => {\n      this.onShowCommentsCallback?.();\n    });\n    commentsSection.appendChild(this.commentsBtn);\n\n    body.appendChild(commentsSection);\n\n    // Help section (static guidance)\n    const helpSection = document.createElement('div');\n    helpSection.className = 'review-sidebar-section review-sidebar-help';\n    helpSection.innerHTML = `\n      <h4>Help</h4>\n      <p class=\"review-help-text\">\n        <strong>Click</strong> a section for quick actions<br>\n        <strong>Double-click</strong> to edit text<br>\n        <strong>💬 badge</strong> to review comments\n      </p>\n    `;\n    body.appendChild(helpSection);\n\n    container.appendChild(body);\n\n    this.element = container;\n    logger.debug('Main sidebar created');\n    return container;\n  }\n\n  getElement(): HTMLElement | null {\n    return this.element;\n  }\n\n  updateUndoRedoState(canUndo: boolean, canRedo: boolean): void {\n    if (this.undoBtn) {\n      this.undoBtn.disabled = !canUndo;\n      this.undoBtn.classList.toggle('review-btn-disabled', !canUndo);\n    }\n    if (this.redoBtn) {\n      this.redoBtn.disabled = !canRedo;\n      this.redoBtn.classList.toggle('review-btn-disabled', !canRedo);\n    }\n    logger.debug('Undo/redo state updated', { canUndo, canRedo });\n  }\n\n  setTrackedChangesVisible(visible: boolean): void {\n    if (this.trackedChangesToggle) {\n      this.trackedChangesToggle.checked = visible;\n      const label = this.trackedChangesToggle.closest('.review-checkbox-label');\n      label?.classList.toggle('review-checkbox-active', visible);\n    }\n    logger.debug('Tracked changes visibility set', { visible });\n  }\n\n  getTrackedChangesEnabled(): boolean {\n    return this.trackedChangesToggle?.checked ?? false;\n  }\n\n  onUndo(callback: () => void): void {\n    this.onUndoCallback = callback;\n  }\n\n  onRedo(callback: () => void): void {\n    this.onRedoCallback = callback;\n  }\n\n  onTrackedChangesToggle(callback: (enabled: boolean) => void): void {\n    this.onTrackedChangesCallback = callback;\n  }\n\n  onShowComments(callback: () => void): void {\n    this.onShowCommentsCallback = callback;\n  }\n\n  onToggleSidebar(callback: () => void): void {\n    this.onToggleSidebarCallback = callback;\n  }\n\n  /**\n   * Update the toggle button to reflect the collapsed state managed by UIModule.\n   */\n  setCollapsed(collapsed: boolean): void {\n    if (!this.toggleBtn) return;\n    const chevron = this.toggleBtn.querySelector('.review-icon-chevron');\n    if (chevron) {\n      chevron.textContent = collapsed ? '›' : '‹';\n    }\n    this.toggleBtn.setAttribute(\n      'title',\n      collapsed ? 'Expand sidebar' : 'Collapse sidebar'\n    );\n    this.toggleBtn.setAttribute(\n      'aria-label',\n      collapsed ? 'Expand sidebar' : 'Collapse sidebar'\n    );\n    this.toggleBtn.setAttribute('aria-expanded', collapsed ? 'false' : 'true');\n  }\n\n  setHasUnsavedChanges(hasUnsaved: boolean): void {\n    if (!this.element) {\n      return;\n    }\n    if (hasUnsaved) {\n      if (!this.unsavedIndicator) {\n        const indicator = document.createElement('div');\n        indicator.className = 'review-unsaved-indicator';\n        indicator.setAttribute('title', 'Unsaved changes');\n        this.element.appendChild(indicator);\n        this.unsavedIndicator = indicator;\n      }\n    } else {\n      this.unsavedIndicator?.remove();\n      this.unsavedIndicator = null;\n    }\n  }\n\n  destroy(): void {\n    this.element?.remove();\n    this.element = null;\n    this.undoBtn = null;\n    this.redoBtn = null;\n    this.trackedChangesToggle = null;\n    this.commentsBtn = null;\n    this.toggleBtn = null;\n    this.unsavedIndicator = null;\n    this.onUndoCallback = null;\n    this.onRedoCallback = null;\n    this.onTrackedChangesCallback = null;\n    this.onShowCommentsCallback = null;\n    this.onToggleSidebarCallback = null;\n  }\n}\n","/**\n * Context Menu\n *\n * Manages the right-click context menu for quick actions on document sections.\n * Provides actions like edit section and add comment.\n *\n * Extracted from UIModule index.ts to reduce monolithic complexity.\n */\n\nimport { createModuleLogger } from '@utils/debug';\n\nconst logger = createModuleLogger('ContextMenu');\n\nexport interface MenuPosition {\n  x: number;\n  y: number;\n}\n\n/**\n * ContextMenu manages right-click context menu\n */\nexport class ContextMenu {\n  private element: HTMLElement | null = null;\n  private isOpen = false;\n  private currentSectionId: string | null = null;\n  private onEditCallback: ((sectionId: string) => void) | null = null;\n  private onCommentCallback: ((sectionId: string) => void) | null = null;\n  private clickListener: ((e: Event) => void) | null = null;\n  private keydownListener: ((e: KeyboardEvent) => void) | null = null;\n\n  /**\n   * Create the context menu element\n   */\n  create(): HTMLElement {\n    const menu = document.createElement('div');\n    menu.className = 'review-context-menu';\n    menu.setAttribute('role', 'menu');\n    menu.style.display = 'none';\n\n    // Edit action\n    const editItem = document.createElement('button');\n    editItem.className = 'review-context-menu-item review-context-menu-edit';\n    editItem.setAttribute('role', 'menuitem');\n    editItem.textContent = 'Edit';\n    editItem.addEventListener('click', () => {\n      if (this.currentSectionId && this.onEditCallback) {\n        this.onEditCallback(this.currentSectionId);\n      }\n      this.close();\n    });\n    menu.appendChild(editItem);\n\n    // Comment action\n    const commentItem = document.createElement('button');\n    commentItem.className =\n      'review-context-menu-item review-context-menu-comment';\n    commentItem.setAttribute('role', 'menuitem');\n    commentItem.textContent = 'Add Comment';\n    commentItem.addEventListener('click', () => {\n      if (this.currentSectionId && this.onCommentCallback) {\n        this.onCommentCallback(this.currentSectionId);\n      }\n      this.close();\n    });\n    menu.appendChild(commentItem);\n\n    // Close on click outside\n    this.clickListener = () => {\n      if (this.isOpen) this.close();\n    };\n    document.addEventListener('click', this.clickListener);\n\n    // Close on escape\n    this.keydownListener = (e: KeyboardEvent) => {\n      if (e.key === 'Escape' && this.isOpen) {\n        this.close();\n      }\n    };\n    document.addEventListener('keydown', this.keydownListener);\n\n    this.element = menu;\n    document.body.appendChild(menu);\n    return menu;\n  }\n\n  /**\n   * Get the context menu element\n   */\n  getElement(): HTMLElement | null {\n    return this.element;\n  }\n\n  /**\n   * Open the context menu at a position\n   */\n  open(sectionId: string, position: MenuPosition): void {\n    if (!this.element) {\n      this.create();\n    }\n\n    this.currentSectionId = sectionId;\n\n    // Position the menu\n    this.element!.style.left = `${position.x}px`;\n    this.element!.style.top = `${position.y}px`;\n\n    // Show the menu\n    this.element!.style.display = 'block';\n    this.isOpen = true;\n\n    // Focus first item for accessibility\n    const firstItem = this.element!.querySelector(\n      'button'\n    ) as HTMLButtonElement;\n    if (firstItem) {\n      firstItem.focus();\n    }\n\n    logger.debug('Context menu opened', { sectionId, position });\n  }\n\n  /**\n   * Close the context menu\n   */\n  close(): void {\n    if (!this.element) return;\n    this.element.style.display = 'none';\n    this.isOpen = false;\n    this.currentSectionId = null;\n    logger.debug('Context menu closed');\n  }\n\n  /**\n   * Check if menu is open\n   */\n  getIsOpen(): boolean {\n    return this.isOpen;\n  }\n\n  /**\n   * Register edit handler\n   */\n  onEdit(callback: (sectionId: string) => void): void {\n    this.onEditCallback = callback;\n  }\n\n  /**\n   * Register comment handler\n   */\n  onComment(callback: (sectionId: string) => void): void {\n    this.onCommentCallback = callback;\n  }\n\n  /**\n   * Destroy the context menu\n   */\n  destroy(): void {\n    if (this.element) {\n      this.element.remove();\n    }\n    // Remove document event listeners to prevent leaks\n    if (this.clickListener) {\n      document.removeEventListener('click', this.clickListener);\n      this.clickListener = null;\n    }\n    if (this.keydownListener) {\n      document.removeEventListener('keydown', this.keydownListener);\n      this.keydownListener = null;\n    }\n    this.element = null;\n    this.onEditCallback = null;\n    this.onCommentCallback = null;\n  }\n}\n","import { ContextMenu, type MenuPosition } from './ContextMenu';\n\nexport interface ContextMenuCoordinatorHandlers {\n  onEdit(sectionId: string): void;\n  onComment(sectionId: string): void;\n}\n\nexport class ContextMenuCoordinator {\n  private readonly menu: ContextMenu;\n\n  constructor(handlers: ContextMenuCoordinatorHandlers) {\n    this.menu = new ContextMenu();\n    this.menu.onEdit(handlers.onEdit);\n    this.menu.onComment(handlers.onComment);\n  }\n\n  openFromEvent(target: HTMLElement, event: MouseEvent): void {\n    const sectionId = target.getAttribute('data-review-id');\n    if (!sectionId) {\n      return;\n    }\n\n    const position: MenuPosition = {\n      x: event.clientX,\n      y: event.clientY,\n    };\n\n    this.menu.open(sectionId, position);\n  }\n\n  close(): void {\n    this.menu.close();\n  }\n\n  destroy(): void {\n    this.menu.destroy();\n  }\n}\n","import type { ElementMetadata } from '@/types';\nimport { normalizeListMarkers } from './utils';\n\nexport type AppendSectionComments = (\n  content: string,\n  commentMarkup: string\n) => string;\n\nexport function mergeSectionCommentIntoSegments(\n  segments: { content: string; metadata: ElementMetadata | undefined }[],\n  commentMarkup: string | null,\n  fallbackMetadata: ElementMetadata,\n  appendSectionComments: AppendSectionComments\n): void {\n  if (!commentMarkup || segments.length === 0) {\n    return;\n  }\n\n  const lastIndex = segments.length - 1;\n  const lastSegment = segments[lastIndex];\n  if (!lastSegment) {\n    return;\n  }\n\n  segments[lastIndex] = {\n    ...lastSegment,\n    content: appendSectionComments(lastSegment.content, commentMarkup),\n    metadata: lastSegment.metadata ?? fallbackMetadata,\n  };\n}\n\nexport function normalizeContentForComparison(str: string): string {\n  return normalizeListMarkers(str.replace(/\\r\\n/g, '\\n'))\n    .replace(/[ \\t]+$/gm, '')\n    .trim();\n}\n","import { createModuleLogger } from '@utils/debug';\n\ninterface HistoryState {\n  content: string;\n  timestamp: number;\n}\n\ninterface HistoryData {\n  elementId: string;\n  states: HistoryState[];\n  lastUpdated: number;\n}\n\nexport interface EditorHistoryStorageOptions {\n  prefix: string;\n  maxStates: number;\n  maxSize: number;\n}\n\nexport class EditorHistoryStorage {\n  private readonly logger = createModuleLogger('EditorHistoryStorage');\n\n  constructor(private readonly options: EditorHistoryStorageOptions) {}\n\n  save(elementId: string, content: string): void {\n    if (!elementId) return;\n\n    const history = this.get(elementId);\n    history.states.push({ content, timestamp: Date.now() });\n\n    if (history.states.length > this.options.maxStates) {\n      history.states.shift();\n    }\n\n    history.lastUpdated = Date.now();\n\n    this.persist(elementId, history);\n  }\n\n  get(elementId: string): HistoryData {\n    try {\n      const stored = localStorage.getItem(this.storageKey(elementId));\n      if (stored) {\n        const parsed = JSON.parse(stored) as HistoryData;\n        return {\n          elementId,\n          states: parsed.states ?? [],\n          lastUpdated: parsed.lastUpdated ?? Date.now(),\n        };\n      }\n    } catch (error) {\n      this.logger.warn('Failed to retrieve editor history:', error);\n    }\n\n    return {\n      elementId,\n      states: [],\n      lastUpdated: Date.now(),\n    };\n  }\n\n  list(): Array<{\n    elementId: string;\n    stateCount: number;\n    lastUpdated: string;\n    size: number;\n  }> {\n    const results: Array<{\n      elementId: string;\n      stateCount: number;\n      lastUpdated: string;\n      size: number;\n    }> = [];\n\n    try {\n      for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (!key || !key.startsWith(this.options.prefix)) {\n          continue;\n        }\n        const stored = localStorage.getItem(key);\n        if (!stored) {\n          continue;\n        }\n        try {\n          const data = JSON.parse(stored) as HistoryData;\n          results.push({\n            elementId: data.elementId,\n            stateCount: data.states?.length ?? 0,\n            lastUpdated: data.lastUpdated\n              ? new Date(data.lastUpdated).toLocaleString()\n              : 'Unknown',\n            size: stored.length,\n          });\n        } catch (parseError) {\n          this.logger.warn('Failed to parse stored history', {\n            key,\n            error: parseError,\n          });\n        }\n      }\n    } catch (error) {\n      this.logger.warn('Failed to enumerate editor histories:', error);\n    }\n\n    return results;\n  }\n\n  clear(elementId: string): void {\n    try {\n      localStorage.removeItem(this.storageKey(elementId));\n      this.logger.debug('Editor history cleared', { elementId });\n    } catch (error) {\n      this.logger.warn('Failed to clear editor history:', error);\n    }\n  }\n\n  clearAll(): void {\n    try {\n      const keysToRemove: string[] = [];\n      for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (key?.startsWith(this.options.prefix)) {\n          keysToRemove.push(key);\n        }\n      }\n      keysToRemove.forEach((key) => localStorage.removeItem(key));\n      this.logger.debug('Cleared editor histories', {\n        count: keysToRemove.length,\n      });\n    } catch (error) {\n      this.logger.warn('Failed to clear editor histories:', error);\n    }\n  }\n\n  private persist(elementId: string, history: HistoryData): void {\n    try {\n      this.store(elementId, history);\n    } catch (error) {\n      if (error instanceof Error && error.name === 'QuotaExceededError') {\n        this.logger.warn('localStorage quota exceeded, pruning histories', {\n          elementId,\n        });\n        this.pruneOldHistories();\n        this.store(elementId, history);\n      } else {\n        this.logger.warn('Failed to save editor history:', error);\n      }\n    }\n  }\n\n  private store(elementId: string, history: HistoryData): void {\n    // Enforce max size by pruning oldest half if necessary\n    let serialized = JSON.stringify(history);\n    if (serialized.length > this.options.maxSize) {\n      history.states = history.states.slice(\n        Math.floor(history.states.length / 2)\n      );\n      serialized = JSON.stringify(history);\n    }\n\n    localStorage.setItem(this.storageKey(elementId), serialized);\n    this.logger.debug('Editor history saved', {\n      elementId,\n      stateCount: history.states.length,\n    });\n  }\n\n  private pruneOldHistories(): void {\n    try {\n      const histories: Array<{ key: string; timestamp: number }> = [];\n\n      for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (!key || !key.startsWith(this.options.prefix)) continue;\n\n        const stored = localStorage.getItem(key);\n        if (!stored) continue;\n\n        try {\n          const data = JSON.parse(stored) as HistoryData;\n          histories.push({\n            key,\n            timestamp: data.lastUpdated || 0,\n          });\n        } catch {\n          histories.push({ key, timestamp: 0 });\n        }\n      }\n\n      histories.sort((a, b) => a.timestamp - b.timestamp);\n      const toRemove = Math.ceil(histories.length / 2);\n\n      for (let i = 0; i < toRemove; i++) {\n        const entry = histories[i];\n        if (entry) {\n          localStorage.removeItem(entry.key);\n        }\n      }\n\n      this.logger.debug('Pruned editor histories', {\n        removed: toRemove,\n        remaining: histories.length - toRemove,\n      });\n    } catch (error) {\n      this.logger.warn('Failed to prune editor histories:', error);\n    }\n  }\n\n  private storageKey(elementId: string): string {\n    return `${this.options.prefix}${elementId}`;\n  }\n}\n","/**\n * Change Summary Dashboard Module\n * Displays comprehensive statistics about document changes\n */\n\nimport type { ChangeSummaryConfig } from '@/types';\nimport { escapeHtml } from './shared/utils';\nimport { UI_CONSTANTS, getAnimationDuration } from './constants';\nimport { createModuleLogger } from '@utils/debug';\n\nconst logger = createModuleLogger('ChangeSummary');\n\nexport interface ChangeSummary {\n  totalChanges: number;\n  additions: number;\n  deletions: number;\n  substitutions: number;\n  changesByElementType: Map<string, number>;\n  charactersAdded: number;\n  charactersRemoved: number;\n  elementsModified: number;\n  comments: number;\n}\n\nexport interface ChangeLocation {\n  elementId: string;\n  elementType: string;\n  position: number;\n  preview: string;\n  type: 'addition' | 'deletion' | 'substitution';\n}\n\nexport class ChangeSummaryDashboard {\n  private config: ChangeSummaryConfig;\n  private summaryElement: HTMLElement | null = null;\n  private summary: ChangeSummary | null = null;\n\n  constructor(config: ChangeSummaryConfig) {\n    this.config = config;\n  }\n\n  /**\n   * Calculate comprehensive change summary from operations\n   */\n  calculateSummary(): ChangeSummary {\n    const operations = this.config.changes.getOperations();\n    const currentState = this.config.changes.getCurrentState();\n\n    const summary: ChangeSummary = {\n      totalChanges: operations.filter((op: any) => op.type === 'edit').length,\n      additions: 0,\n      deletions: 0,\n      substitutions: 0,\n      changesByElementType: new Map(),\n      charactersAdded: 0,\n      charactersRemoved: 0,\n      elementsModified: 0,\n      comments: 0,\n    };\n\n    // Track which elements have been modified\n    const modifiedElements = new Set<string>();\n\n    // Analyze each operation\n    operations.forEach((op: any) => {\n      if (op.type !== 'edit') return;\n\n      modifiedElements.add(op.elementId);\n\n      // Count change types by analyzing CriticMarkup\n      const content = this.config.changes.getElementContentWithTrackedChanges(\n        op.elementId\n      );\n\n      const additionMatches = content.match(/\\{\\+\\+([\\s\\S]*?)\\+\\+\\}/g) || [];\n      const deletionMatches = content.match(/\\{--([\\s\\S]*?)--\\}/g) || [];\n      const substitutionMatches =\n        content.match(/\\{~~([\\s\\S]*?)~>([\\s\\S]*?)~~\\}/g) || [];\n\n      summary.additions += additionMatches.length;\n      summary.deletions += deletionMatches.length;\n      summary.substitutions += substitutionMatches.length;\n\n      // Count characters\n      additionMatches.forEach((match: string) => {\n        const text = match.replace(/\\{\\+\\+|\\+\\+\\}/g, '');\n        summary.charactersAdded += text.length;\n      });\n\n      deletionMatches.forEach((match: string) => {\n        const text = match.replace(/\\{--|--\\}/g, '');\n        summary.charactersRemoved += text.length;\n      });\n\n      // Track changes by element type\n      const element = this.config.changes.getElementById(op.elementId);\n      if (element) {\n        const type = element.metadata.type;\n        summary.changesByElementType.set(\n          type,\n          (summary.changesByElementType.get(type) || 0) + 1\n        );\n      }\n    });\n\n    summary.elementsModified = modifiedElements.size;\n\n    // Count comments\n    currentState.forEach((element: any) => {\n      const commentMatches = this.config.comments.parse(element.content);\n      summary.comments += commentMatches.length;\n    });\n\n    this.summary = summary;\n    return summary;\n  }\n\n  /**\n   * Get list of all changes with their locations\n   */\n  getChangesList(): ChangeLocation[] {\n    const operations = this.config.changes.getOperations();\n    const changes: ChangeLocation[] = [];\n    let position = 0;\n\n    operations.forEach((op: any) => {\n      if (op.type !== 'edit') return;\n\n      const element = this.config.changes.getElementById(op.elementId);\n      if (!element) return;\n\n      const plainText = this.config.markdown.toPlainText(element.content) || '';\n      const preview = plainText.substring(0, 100).replace(/\\s+/g, ' ').trim();\n\n      // Determine change type\n      let changeType: 'addition' | 'deletion' | 'substitution' = 'substitution';\n      const content = this.config.changes.getElementContentWithTrackedChanges(\n        op.elementId\n      );\n\n      if (content.includes('{++') && !content.includes('{--')) {\n        changeType = 'addition';\n      } else if (content.includes('{--') && !content.includes('{++')) {\n        changeType = 'deletion';\n      }\n\n      changes.push({\n        elementId: op.elementId,\n        elementType: element.metadata.type,\n        position: position++,\n        preview,\n        type: changeType,\n      });\n    });\n\n    return changes;\n  }\n\n  /**\n   * Render the change summary dashboard\n   */\n  renderDashboard(): HTMLElement {\n    try {\n      const summary = this.calculateSummary();\n      const dashboard = document.createElement('div');\n      dashboard.className = 'review-change-summary-dashboard';\n      dashboard.setAttribute('role', 'region');\n      dashboard.setAttribute('aria-label', 'Change summary statistics');\n\n      const additionPercent =\n        summary.totalChanges > 0\n          ? Math.round((summary.additions / summary.totalChanges) * 100)\n          : 0;\n      const deletionPercent =\n        summary.totalChanges > 0\n          ? Math.round((summary.deletions / summary.totalChanges) * 100)\n          : 0;\n      const substitutionPercent =\n        summary.totalChanges > 0\n          ? Math.round((summary.substitutions / summary.totalChanges) * 100)\n          : 0;\n\n      dashboard.innerHTML = `\n      <div class=\"review-summary-section\">\n        <div class=\"review-summary-header\">\n          <h3>📊 Change Summary</h3>\n          <span class=\"review-summary-refresh\" data-action=\"refresh\" title=\"Recalculate\">🔄</span>\n        </div>\n\n        <div class=\"review-summary-stats\">\n          <div class=\"review-stat-card review-stat-primary\">\n            <div class=\"review-stat-value\">${summary.totalChanges}</div>\n            <div class=\"review-stat-label\">Total Changes</div>\n          </div>\n\n          <div class=\"review-stat-card review-stat-modified\">\n            <div class=\"review-stat-value\">${summary.elementsModified}</div>\n            <div class=\"review-stat-label\">Elements Modified</div>\n          </div>\n\n          <div class=\"review-stat-card review-stat-comments\">\n            <div class=\"review-stat-value\">${summary.comments}</div>\n            <div class=\"review-stat-label\">Comments</div>\n          </div>\n        </div>\n\n        <div class=\"review-summary-breakdown\">\n          <h4>Change Types</h4>\n\n          <div class=\"review-change-type\">\n            <div class=\"review-change-type-header\">\n              <span class=\"review-change-icon review-change-add\">➕</span>\n              <span class=\"review-change-label\">Additions</span>\n              <span class=\"review-change-count\">${summary.additions}</span>\n            </div>\n            <div class=\"review-change-bar\">\n              <div\n                class=\"review-change-bar-fill review-change-bar-add\"\n                style=\"width: ${additionPercent}%\"\n              ></div>\n            </div>\n            <div class=\"review-change-chars\">${summary.charactersAdded} characters added</div>\n          </div>\n\n          <div class=\"review-change-type\">\n            <div class=\"review-change-type-header\">\n              <span class=\"review-change-icon review-change-remove\">➖</span>\n              <span class=\"review-change-label\">Deletions</span>\n              <span class=\"review-change-count\">${summary.deletions}</span>\n            </div>\n            <div class=\"review-change-bar\">\n              <div\n                class=\"review-change-bar-fill review-change-bar-remove\"\n                style=\"width: ${deletionPercent}%\"\n              ></div>\n            </div>\n            <div class=\"review-change-chars\">${summary.charactersRemoved} characters removed</div>\n          </div>\n\n          <div class=\"review-change-type\">\n            <div class=\"review-change-type-header\">\n              <span class=\"review-change-icon review-change-sub\">🔄</span>\n              <span class=\"review-change-label\">Substitutions</span>\n              <span class=\"review-change-count\">${summary.substitutions}</span>\n            </div>\n            <div class=\"review-change-bar\">\n              <div\n                class=\"review-change-bar-fill review-change-bar-sub\"\n                style=\"width: ${substitutionPercent}%\"\n              ></div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"review-summary-by-type\">\n          <h4>Changes by Element Type</h4>\n          <div class=\"review-element-types\">\n            ${Array.from(summary.changesByElementType.entries())\n              .map(\n                ([type, count]) => `\n                <div class=\"review-element-type-item\">\n                  <span class=\"review-element-type-name\">${this.getElementTypeIcon(type)} ${type}</span>\n                  <span class=\"review-element-type-count\">${count}</span>\n                </div>\n              `\n              )\n              .join('')}\n          </div>\n        </div>\n\n        <div class=\"review-summary-actions\" role=\"group\" aria-label=\"Change summary actions\">\n          <button\n            class=\"review-btn review-btn-secondary review-btn-block\"\n            data-action=\"jump-to-first\"\n            title=\"Jump to first change\"\n            aria-label=\"Jump to first change\"\n          >\n            ⬆️ First Change\n          </button>\n          <button\n            class=\"review-btn review-btn-secondary review-btn-block\"\n            data-action=\"jump-to-last\"\n            title=\"Jump to last change\"\n            aria-label=\"Jump to last change\"\n          >\n            ⬇️ Last Change\n          </button>\n          <button\n            class=\"review-btn review-btn-secondary review-btn-block\"\n            data-action=\"export-summary\"\n            title=\"Export summary as markdown\"\n            aria-label=\"Export summary as markdown\"\n          >\n            📋 Export Summary\n          </button>\n        </div>\n      </div>\n\n      <div class=\"review-summary-details\">\n        <div class=\"review-details-header\">\n          <h4>Changes List</h4>\n          <span class=\"review-details-count\">${this.getChangesList().length} changes</span>\n        </div>\n        <div class=\"review-changes-list\">\n          ${this.renderChangesList()}\n        </div>\n      </div>\n    `;\n\n      this.summaryElement = dashboard;\n      this.attachDashboardHandlers(dashboard);\n\n      return dashboard;\n    } catch (error) {\n      logger.error('Failed to render change summary dashboard:', error);\n      // Return a fallback error dashboard\n      const errorDashboard = document.createElement('div');\n      errorDashboard.className = 'review-change-summary-dashboard review-error';\n      errorDashboard.innerHTML = `\n        <div class=\"review-summary-section\">\n          <div class=\"review-summary-header\">\n            <h3>📊 Change Summary</h3>\n          </div>\n          <div class=\"review-error-message\">\n            <p>Error loading change summary. Please refresh the page.</p>\n          </div>\n        </div>\n      `;\n      return errorDashboard;\n    }\n  }\n\n  /**\n   * Render the list of individual changes\n   */\n  private renderChangesList(): string {\n    const changes = this.getChangesList();\n\n    if (changes.length === 0) {\n      return `\n        <div class=\"review-changes-empty\">\n          <p>No changes yet. Start editing to see changes here.</p>\n        </div>\n      `;\n    }\n\n    return changes\n      .map(\n        (change, index) => `\n          <div class=\"review-change-item\" data-element-id=\"${change.elementId}\">\n            <div class=\"review-change-item-number\">${index + 1}</div>\n            <div class=\"review-change-item-content\">\n              <div class=\"review-change-item-header\">\n                <span class=\"review-change-item-type review-change-type-${change.type}\">\n                  ${this.getChangeTypeIcon(change.type)}\n                </span>\n                <span class=\"review-change-item-element\">${change.elementType}</span>\n              </div>\n              <div class=\"review-change-item-preview\">${escapeHtml(change.preview)}</div>\n            </div>\n            <button\n              class=\"review-change-item-jump\"\n              data-action=\"jump-to-change\"\n              data-element-id=\"${change.elementId}\"\n              title=\"Jump to this change\"\n              aria-label=\"Jump to this change\"\n            >\n              →\n            </button>\n          </div>\n        `\n      )\n      .join('');\n  }\n\n  /**\n   * Attach event handlers to dashboard\n   */\n  private attachDashboardHandlers(dashboard: HTMLElement): void {\n    // Refresh button\n    dashboard\n      .querySelector('[data-action=\"refresh\"]')\n      ?.addEventListener('click', () => {\n        const refreshed = this.renderDashboard();\n        this.summaryElement?.replaceWith(refreshed);\n      });\n\n    // Jump buttons\n    dashboard\n      .querySelector('[data-action=\"jump-to-first\"]')\n      ?.addEventListener('click', () => {\n        this.jumpToChange('first');\n      });\n\n    dashboard\n      .querySelector('[data-action=\"jump-to-last\"]')\n      ?.addEventListener('click', () => {\n        this.jumpToChange('last');\n      });\n\n    // Export summary\n    dashboard\n      .querySelector('[data-action=\"export-summary\"]')\n      ?.addEventListener('click', () => {\n        this.exportSummary();\n      });\n\n    // Jump to individual changes\n    dashboard\n      .querySelectorAll('[data-action=\"jump-to-change\"]')\n      .forEach((btn) => {\n        btn.addEventListener('click', (e) => {\n          const elementId = (e.currentTarget as HTMLElement).getAttribute(\n            'data-element-id'\n          );\n          if (elementId) {\n            this.jumpToElement(elementId);\n          }\n        });\n      });\n\n    // Click on change item to jump\n    dashboard.querySelectorAll('.review-change-item').forEach((item) => {\n      item.addEventListener('click', (e) => {\n        if ((e.target as HTMLElement).closest('[data-action=\"jump-to-change\"]'))\n          return;\n        const elementId = (item as HTMLElement).getAttribute('data-element-id');\n        if (elementId) {\n          this.jumpToElement(elementId);\n        }\n      });\n    });\n  }\n\n  /**\n   * Jump to first or last change\n   */\n  private jumpToChange(direction: 'first' | 'last'): void {\n    const changes = this.getChangesList();\n    if (changes.length === 0) return;\n\n    const targetIndex = direction === 'first' ? 0 : changes.length - 1;\n    const target = changes[targetIndex];\n    if (!target) {\n      return;\n    }\n    this.jumpToElement(target.elementId);\n  }\n\n  /**\n   * Jump to element and highlight it\n   */\n  private jumpToElement(elementId: string): void {\n    const element = document.querySelector(\n      `[data-review-id=\"${elementId}\"]`\n    ) as HTMLElement;\n    if (!element) return;\n\n    // Scroll into view\n    element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n\n    // Flash highlight\n    element.classList.add('review-highlight-flash');\n    setTimeout(() => {\n      element.classList.remove('review-highlight-flash');\n    }, getAnimationDuration('LONG_HIGHLIGHT'));\n\n    // Show temporary focus indicator\n    element.classList.add('review-jump-target');\n    setTimeout(() => {\n      element.classList.remove('review-jump-target');\n    }, getAnimationDuration('FLASH_HIGHLIGHT'));\n  }\n\n  /**\n   * Export summary as markdown\n   */\n  private exportSummary(): void {\n    const summary = this.summary || this.calculateSummary();\n    const changes = this.getChangesList();\n\n    let markdown = `# Document Change Summary\\n\\n`;\n    markdown += `**Generated:** ${new Date().toLocaleString()}\\n\\n`;\n\n    markdown += `## Statistics\\n\\n`;\n    markdown += `- **Total Changes:** ${summary.totalChanges}\\n`;\n    markdown += `- **Elements Modified:** ${summary.elementsModified}\\n`;\n    markdown += `- **Comments:** ${summary.comments}\\n`;\n    markdown += `- **Characters Added:** ${summary.charactersAdded}\\n`;\n    markdown += `- **Characters Removed:** ${summary.charactersRemoved}\\n\\n`;\n\n    markdown += `## Change Breakdown\\n\\n`;\n    markdown += `- **Additions:** ${summary.additions}\\n`;\n    markdown += `- **Deletions:** ${summary.deletions}\\n`;\n    markdown += `- **Substitutions:** ${summary.substitutions}\\n\\n`;\n\n    markdown += `## By Element Type\\n\\n`;\n    for (const [type, count] of summary.changesByElementType) {\n      markdown += `- ${type}: ${count}\\n`;\n    }\n\n    markdown += `\\n## All Changes\\n\\n`;\n    changes.forEach((change, index) => {\n      markdown += `${index + 1}. [${change.type.toUpperCase()}] ${change.elementType}\\n`;\n      markdown += `   > ${change.preview}\\n\\n`;\n    });\n\n    // Copy to clipboard\n    navigator.clipboard.writeText(markdown).then(() => {\n      this.showNotification('Summary copied to clipboard', 'success');\n    });\n  }\n\n  /**\n   * Get icon for element type\n   */\n  private getElementTypeIcon(type: string): string {\n    const icons: Record<string, string> = {\n      Header: '📝',\n      Para: '¶',\n      BulletList: '•',\n      OrderedList: '1️⃣',\n      CodeBlock: '💻',\n      BlockQuote: '❝',\n      Div: '📦',\n    };\n    return icons[type] || '▪️';\n  }\n\n  /**\n   * Get icon for change type\n   */\n  private getChangeTypeIcon(type: string): string {\n    const icons: Record<string, string> = {\n      addition: '➕',\n      deletion: '➖',\n      substitution: '🔄',\n    };\n    return icons[type] || '•';\n  }\n\n  /**\n   * Show notification\n   */\n  private showNotification(\n    message: string,\n    type: 'info' | 'success' | 'error'\n  ): void {\n    const notification = document.createElement('div');\n    notification.className = `review-notification review-notification-${type}`;\n    notification.textContent = message;\n    notification.setAttribute('role', 'alert');\n    notification.setAttribute('aria-live', 'assertive');\n    notification.setAttribute('aria-atomic', 'true');\n    document.body.appendChild(notification);\n\n    setTimeout(() => {\n      notification.classList.add('review-notification-show');\n    }, 10);\n\n    setTimeout(() => {\n      notification.classList.remove('review-notification-show');\n      setTimeout(() => notification.remove(), getAnimationDuration('SLOW'));\n    }, UI_CONSTANTS.NOTIFICATION_DISPLAY_DURATION_MS);\n  }\n\n  /**\n   * Destroy the dashboard and clean up event listeners\n   */\n  destroy(): void {\n    if (this.summaryElement) {\n      this.summaryElement.remove();\n      this.summaryElement = null;\n    }\n    this.summary = null;\n  }\n}\n","import { createModuleLogger, debugLogger } from './debug';\nimport type { ChangesModule } from '@modules/changes';\nimport type { Operation } from '@/types';\n\ntype InstrumentedChangesModule = ChangesModule & {\n  __debugInstrumented?: boolean;\n};\n\ninterface DebugToolsOptions {\n  changes: ChangesModule;\n}\n\ninterface ReviewDebugHelpers {\n  operations: () => Readonly<Operation[]>;\n  inspectElement: (elementId: string) => {\n    elementId: string;\n    markdown?: string;\n    html?: string | null;\n  } | null;\n  printElement: (elementId: string) => void;\n}\n\nexport class DebugTools {\n  private readonly logger = createModuleLogger('DebugTools');\n  private readonly changes: InstrumentedChangesModule;\n  private helpersRegistered = false;\n\n  constructor(options: DebugToolsOptions) {\n    this.changes = options.changes as InstrumentedChangesModule;\n  }\n\n  enable(): void {\n    if (!debugLogger.getConfig().enabled) {\n      return;\n    }\n    this.instrumentChangesModule();\n    this.registerGlobalHelpers();\n  }\n\n  private instrumentChangesModule(): void {\n    if (this.changes.__debugInstrumented) {\n      return;\n    }\n    const originalAddOperation = this.changes.addOperation.bind(this.changes);\n    this.changes.addOperation = ((type, elementId, data, userId) => {\n      this.logger.debug('Operation recorded', {\n        type,\n        elementId,\n        data,\n        userId,\n      });\n      return originalAddOperation(type, elementId, data, userId);\n    }) as ChangesModule['addOperation'];\n\n    const originalReplace = this.changes.replaceElementWithSegments?.bind(\n      this.changes\n    );\n    if (originalReplace) {\n      this.changes.replaceElementWithSegments = ((elementId, segments) => {\n        this.logger.debug('replaceElementWithSegments invoked', {\n          elementId,\n          segmentCount: segments.length,\n        });\n        return originalReplace(elementId, segments);\n      }) as ChangesModule['replaceElementWithSegments'];\n    }\n\n    this.changes.__debugInstrumented = true;\n  }\n\n  private registerGlobalHelpers(): void {\n    if (this.helpersRegistered) {\n      return;\n    }\n\n    const helpers: ReviewDebugHelpers = {\n      operations: () =>\n        Array.isArray(this.changes.getOperations?.())\n          ? this.changes.getOperations()\n          : [],\n      inspectElement: (elementId: string) => {\n        if (!elementId) {\n          this.logger.warn('inspectElement called without an elementId');\n          return null;\n        }\n\n        const markdownContent = this.safeInvoke(() =>\n          this.changes.getElementContent?.(elementId)\n        );\n        const element = document.querySelector(\n          `[data-review-id=\"${elementId}\"]`\n        ) as HTMLElement | null;\n        const html = element?.innerHTML ?? null;\n\n        this.logger.info('Inspect element', {\n          elementId,\n          markdown: markdownContent,\n          html,\n        });\n\n        return {\n          elementId,\n          markdown: markdownContent ?? undefined,\n          html,\n        };\n      },\n      printElement: (elementId: string) => {\n        const inspection = helpers.inspectElement(elementId);\n        if (!inspection) return;\n        console.groupCollapsed(`[reviewDebug] ${elementId}`);\n        console.info('Markdown:\\n', inspection.markdown ?? '(none)');\n        console.info(\n          'Rendered HTML:\\n',\n          inspection.html ?? '(element missing)'\n        );\n        console.groupEnd();\n      },\n    };\n\n    const existing = (window as any).reviewDebug ?? {};\n    (window as any).reviewDebug = {\n      ...existing,\n      ...helpers,\n    };\n\n    this.logger.info('reviewDebug helpers registered', {\n      helpers: Object.keys(helpers),\n    });\n    this.helpersRegistered = true;\n  }\n\n  private safeInvoke<T>(fn: () => T): T | undefined {\n    try {\n      return fn();\n    } catch (error) {\n      this.logger.warn('Debug helper invocation failed', error);\n      return undefined;\n    }\n  }\n}\n\nexport function initializeDebugTools(options: DebugToolsOptions): DebugTools {\n  const tools = new DebugTools(options);\n  tools.enable();\n  return tools;\n}\n","// UIModule.ts\n\n// import { utils } from '@milkdown/kit';\nimport type {\n  Root,\n  Content,\n  Heading as MdHeading,\n  List as MdList,\n} from 'mdast';\nimport type { Position, Point } from 'unist';\n// Import from extracted modules\nimport type { DiffHighlightRange } from './editor/MilkdownEditor';\nimport { EditorLifecycle } from './editor/EditorLifecycle';\nimport { EditorToolbar } from './editor/EditorToolbar';\nimport { CommentsSidebar } from './comments/CommentsSidebar';\nimport { CommentComposer } from './comments/CommentComposer';\nimport { CommentBadges } from './comments/CommentBadges';\nimport { CommentController } from './comments/CommentController';\nimport { MainSidebar } from './sidebars/MainSidebar';\nimport { ContextMenuCoordinator } from './sidebars/ContextMenuCoordinator';\nimport {\n  normalizeListMarkers,\n  trimLineStart,\n  trimLineEnd,\n  isSetextUnderline,\n  isWhitespaceChar,\n  createInitialEditorState,\n  createInitialUIState,\n  createInitialCommentState,\n  type EditorState,\n  type UIState,\n  type CommentState,\n} from './shared';\nimport {\n  mergeSectionCommentIntoSegments,\n  normalizeContentForComparison,\n} from './shared/editor-content';\nimport { EditorHistoryStorage } from './editor/EditorHistoryStorage';\n\n// CriticMarkup components are now handled by MilkdownEditor module\nimport { ChangeSummaryDashboard } from './change-summary';\nimport { createModuleLogger } from '@utils/debug';\nimport { initializeDebugTools } from '@utils/debug-tools';\nimport type { ChangesModule } from '@modules/changes';\nimport type { MarkdownModule } from '@modules/markdown';\nimport type { CommentsModule } from '@modules/comments';\nimport type { Element as ReviewElement, ElementMetadata } from '@/types';\nimport { UI_CONSTANTS, getAnimationDuration } from './constants';\n\nconst logger = createModuleLogger('UIModule');\n\nexport interface UIConfig {\n  changes: ChangesModule;\n  markdown: MarkdownModule;\n  comments: CommentsModule;\n  inlineEditing?: boolean; // Use inline editing instead of modal\n}\n\ninterface HeadingReferenceInfo {\n  reference: string;\n  prefix: string;\n  style: 'atx' | 'setext';\n}\n\nexport class UIModule {\n  private config: UIConfig;\n\n  // Consolidated state objects (Phase 5)\n  private editorState: EditorState = createInitialEditorState();\n  private uiState: UIState = createInitialUIState();\n  private commentState: CommentState = createInitialCommentState();\n\n  // Cache and utility maps\n  private headingReferenceLookup = new Map<string, HeadingReferenceInfo>();\n  private activeHeadingReferenceCache = new Map<string, HeadingReferenceInfo>();\n\n  // Configuration\n  private changeSummaryDashboard: ChangeSummaryDashboard | null = null;\n\n  // Module instances (for Phase 3 integration - will be used when code replacement completes)\n  private editorLifecycle: EditorLifecycle;\n  private editorToolbarModule: EditorToolbar | null = null;\n  private mainSidebarModule: MainSidebar;\n  private commentsSidebarModule: CommentsSidebar | null = null;\n  private commentComposerModule: CommentComposer | null = null;\n  private commentBadgesModule: CommentBadges | null = null;\n  private contextMenuCoordinator: ContextMenuCoordinator | null = null;\n  private commentController: CommentController;\n  private historyStorage: EditorHistoryStorage;\n  private globalShortcutsBound = false;\n\n  constructor(config: UIConfig) {\n    this.config = config;\n    logger.debug(\n      'Initialized with tracked changes:',\n      this.editorState.showTrackedChanges\n    );\n\n    // Initialize module instances\n    // NOTE: EditorLifecycle initializes Milkdown on-demand to prevent plugin state corruption\n    this.editorLifecycle = new EditorLifecycle();\n    this.editorToolbarModule = new EditorToolbar();\n    this.mainSidebarModule = new MainSidebar();\n    this.commentsSidebarModule = new CommentsSidebar();\n    this.commentComposerModule = new CommentComposer();\n    this.commentBadgesModule = new CommentBadges();\n    this.commentController = new CommentController({\n      config: {\n        changes: this.config.changes,\n        comments: this.config.comments,\n        markdown: this.config.markdown,\n      },\n      commentState: this.commentState,\n      sidebar: this.commentsSidebarModule,\n      composer: this.commentComposerModule,\n      badges: this.commentBadgesModule,\n      callbacks: {\n        requestRefresh: () => this.refresh(),\n        ensureSidebarVisible: () =>\n          this.refreshCommentUI({ showSidebar: true }),\n        showNotification: (message, type) =>\n          this.showNotification(message, type),\n        onComposerClosed: () =>\n          this.commentController.clearHighlight('composer'),\n      },\n    });\n    this.contextMenuCoordinator = new ContextMenuCoordinator({\n      onEdit: (sectionId) => {\n        this.openEditor(sectionId);\n      },\n      onComment: (sectionId) => {\n        const element = this.config.changes.getElementById(sectionId);\n        if (element) {\n          this.openCommentComposer({ elementId: sectionId });\n        }\n      },\n    });\n    this.historyStorage = new EditorHistoryStorage({\n      prefix: UI_CONSTANTS.EDITOR_HISTORY_STORAGE_PREFIX,\n      maxSize: UI_CONSTANTS.MAX_HISTORY_SIZE_BYTES,\n      maxStates: UI_CONSTANTS.MAX_HISTORY_STATES,\n    });\n\n    this.mainSidebarModule.onUndo(() => {\n      if (this.config.changes.undo()) {\n        this.refresh();\n      }\n    });\n    initializeDebugTools({\n      changes: this.config.changes,\n    });\n    this.mainSidebarModule.onRedo(() => {\n      if (this.config.changes.redo()) {\n        this.refresh();\n      }\n    });\n    this.mainSidebarModule.onTrackedChangesToggle((enabled) => {\n      this.toggleTrackedChanges(enabled);\n    });\n    this.mainSidebarModule.onShowComments(() => {\n      const isVisible = this.commentsSidebarModule?.getIsVisible();\n      if (!isVisible) {\n        this.refreshCommentUI({ showSidebar: true });\n      } else {\n        this.commentsSidebarModule?.toggle();\n      }\n    });\n    this.mainSidebarModule.onToggleSidebar(() => {\n      this.toggleSidebarCollapsed();\n    });\n\n    this.cacheInitialHeadingReferences();\n    // Initialize sidebar immediately so it's always visible\n    this.initializeSidebar();\n    requestAnimationFrame(() => {\n      this.refreshCommentUI();\n    });\n  }\n\n  /**\n   * Initialize the persistent sidebar on page load\n   */\n  private initializeSidebar(): void {\n    // Create sidebar immediately after DOM is ready\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', () => {\n        this.getOrCreateToolbar();\n      });\n    } else {\n      this.getOrCreateToolbar();\n    }\n  }\n\n  public toggleSidebarCollapsed(force?: boolean): void {\n    const sidebar = this.getOrCreateToolbar();\n    const nextState =\n      typeof force === 'boolean'\n        ? force\n        : !sidebar.classList.contains('review-sidebar-collapsed');\n    this.applySidebarCollapsedState(nextState, sidebar);\n  }\n\n  private applySidebarCollapsedState(\n    collapsed: boolean,\n    sidebar?: HTMLElement\n  ): void {\n    const toolbar = sidebar ?? this.getOrCreateToolbar();\n    this.uiState.isSidebarCollapsed = collapsed;\n\n    toolbar.classList.toggle('review-sidebar-collapsed', collapsed);\n    if (document.body) {\n      document.body.classList.toggle(\n        'review-sidebar-collapsed-mode',\n        collapsed\n      );\n    }\n\n    this.mainSidebarModule.setCollapsed(collapsed);\n  }\n\n  /**\n   * Toggle visibility of tracked changes\n   */\n  public toggleTrackedChanges(force?: boolean): void {\n    const nextState =\n      typeof force === 'boolean' ? force : !this.editorState.showTrackedChanges;\n\n    if (this.editorState.showTrackedChanges === nextState) {\n      this.mainSidebarModule.setTrackedChangesVisible(nextState);\n      return;\n    }\n\n    this.editorState.showTrackedChanges = nextState;\n    this.mainSidebarModule.setTrackedChangesVisible(nextState);\n    this.refresh();\n  }\n\n  /**\n   * Get current tracked changes mode\n   */\n  public isShowingTrackedChanges(): boolean {\n    return this.editorState.showTrackedChanges;\n  }\n\n  public attachEventListeners(): void {\n    this.bindEditableElements(document);\n    this.bindGlobalShortcuts();\n  }\n\n  private bindEditableElementEvents(elem: HTMLElement): void {\n    if (elem.dataset.reviewEventsBound === 'true') {\n      return;\n    }\n    elem.dataset.reviewEventsBound = 'true';\n\n    elem.addEventListener('click', (e) => {\n      if (this.shouldIgnoreInteraction(e, elem)) {\n        return;\n      }\n      if (e instanceof MouseEvent && e.detail > 1) {\n        return;\n      }\n\n      e.stopPropagation();\n      e.preventDefault();\n      const id = elem.getAttribute('data-review-id');\n      if (id) {\n        const mouseEvent = e as MouseEvent;\n        this.contextMenuCoordinator?.openFromEvent(elem, mouseEvent);\n      }\n    });\n\n    elem.addEventListener('dblclick', (e) => {\n      if (this.shouldIgnoreInteraction(e, elem)) {\n        return;\n      }\n      e.preventDefault();\n      const id = elem.getAttribute('data-review-id');\n      if (id) {\n        this.openEditor(id);\n      }\n    });\n\n    elem.addEventListener('mouseenter', () => {\n      if (!elem.classList.contains('review-editable-editing')) {\n        elem.classList.add('review-hover');\n      }\n    });\n\n    elem.addEventListener('mouseleave', () => {\n      elem.classList.remove('review-hover');\n    });\n\n    elem.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n    });\n  }\n\n  private shouldIgnoreInteraction(event: Event, elem: HTMLElement): boolean {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return true;\n    }\n    if (elem.classList.contains('review-editable-editing')) {\n      return true;\n    }\n    const target = event.target as HTMLElement | null;\n    if (target?.closest('.review-inline-editor-container')) {\n      return true;\n    }\n    if (target?.closest('.review-section-comment-indicator')) {\n      return true;\n    }\n    return false;\n  }\n\n  private bindEditableElements(root: ParentNode): void {\n    const editableElements = root.querySelectorAll?.('[data-review-id]') ?? [];\n    editableElements.forEach((elem) => {\n      if (elem instanceof HTMLElement) {\n        this.bindEditableElementEvents(elem);\n      }\n    });\n  }\n\n  private bindGlobalShortcuts(): void {\n    if (this.globalShortcutsBound) {\n      return;\n    }\n    this.globalShortcutsBound = true;\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape' && this.editorState.activeEditor) {\n        this.closeEditor();\n      }\n    });\n  }\n\n  public openEditor(elementId: string): void {\n    const element = document.querySelector(\n      `[data-review-id=\"${elementId}\"]`\n    ) as HTMLElement | null;\n    if (!element) return;\n\n    const targetElement = this.resolveListEditorTarget(element) ?? element;\n    const targetId = targetElement.getAttribute('data-review-id');\n    if (!targetId) return;\n\n    if (targetId !== elementId) {\n      logger.debug(\n        `Redirecting edit to list root ${targetId} (clicked ${elementId})`\n      );\n    }\n\n    // Check if inline editing is enabled\n    if (this.config.inlineEditing) {\n      this.openInlineEditor(targetId);\n    } else {\n      this.openModalEditor(targetId);\n    }\n  }\n\n  private openModalEditor(elementId: string): void {\n    const element = document.querySelector(`[data-review-id=\"${elementId}\"]`);\n    if (!element) return;\n\n    this.editorState.currentElementId = elementId;\n    logger.debug('Opening editor for', { elementId });\n    logger.trace(\n      'Tracked changes enabled:',\n      this.editorState.showTrackedChanges\n    );\n\n    // Restore editor history if available\n    this.restoreEditorHistory(elementId);\n\n    const type = element.getAttribute('data-review-type') || 'Para';\n\n    const { plainContent, trackedContent, diffHighlights } =\n      this.createEditorSession(elementId, type);\n\n    logger.trace('Editor content (plain):', plainContent);\n    if (this.editorState.showTrackedChanges) {\n      logger.trace('Editor content (tracked):', trackedContent);\n    }\n\n    const modal = this.createEditorModal(plainContent, type);\n    document.body.appendChild(modal);\n    this.editorState.activeEditor = modal;\n\n    // Delay so DOM renders\n    requestAnimationFrame(() => {\n      this.initializeMilkdown(modal, plainContent, diffHighlights);\n    });\n  }\n\n  private openInlineEditor(elementId: string): void {\n    const element = document.querySelector(\n      `[data-review-id=\"${elementId}\"]`\n    ) as HTMLElement;\n    if (!element) return;\n\n    // Close any existing inline editor\n    this.closeEditor();\n\n    this.editorState.currentElementId = elementId;\n\n    // Restore editor history if available\n    this.restoreEditorHistory(elementId);\n\n    const type = element.getAttribute('data-review-type') || 'Para';\n\n    const { plainContent, diffHighlights } = this.createEditorSession(\n      elementId,\n      type\n    );\n\n    // Mark element as being edited\n    element.classList.add('review-editable-editing');\n\n    // Wrap original content\n    const originalContent = element.innerHTML;\n    element.setAttribute('data-review-original-html', originalContent);\n    element.innerHTML = `\n      <div class=\"review-inline-editor-container\">\n        <div class=\"review-inline-editor-body\"></div>\n        <div class=\"review-inline-editor-actions\">\n          <button class=\"review-btn review-btn-secondary review-btn-sm\" data-action=\"cancel\">Cancel</button>\n          <button class=\"review-btn review-btn-primary review-btn-sm\" data-action=\"save\">Save</button>\n        </div>\n      </div>\n    `;\n\n    const inlineEditor = element.querySelector(\n      '.review-inline-editor-container'\n    ) as HTMLElement;\n    this.editorState.activeEditor = inlineEditor;\n\n    // Add event listeners\n    inlineEditor.querySelectorAll('[data-action=\"cancel\"]').forEach((btn) => {\n      btn.addEventListener('click', () => this.closeEditor());\n    });\n\n    inlineEditor\n      .querySelector('[data-action=\"save\"]')\n      ?.addEventListener('click', () => {\n        this.saveEditor();\n      });\n\n    // Initialize Milkdown\n    requestAnimationFrame(() => {\n      this.initializeMilkdown(inlineEditor, plainContent, diffHighlights);\n    });\n  }\n\n  private async initializeMilkdown(\n    container: HTMLElement,\n    content: string,\n    diffHighlights: DiffHighlightRange[] = []\n  ): Promise<void> {\n    try {\n      // Determine the element type to configure toolbar/context behaviour.\n      const elementId = this.editorState.currentElementId;\n      let elementType = 'default';\n      if (elementId) {\n        const element = document.querySelector(\n          `[data-review-id=\"${elementId}\"]`\n        ) as HTMLElement | null;\n        if (element) {\n          elementType = element.getAttribute('data-review-type') || 'Para';\n        }\n      }\n\n      const editor = await this.editorLifecycle.initialize({\n        container,\n        content,\n        diffHighlights,\n        elementType,\n        onContentChange: (markdown) => {\n          this.editorState.currentEditorContent = markdown;\n        },\n      });\n\n      this.editorState.milkdownEditor = editor;\n\n      logger.debug('Milkdown editor initialized successfully');\n    } catch (error) {\n      logger.error('Failed to initialize Milkdown:', error);\n      const editorContainer =\n        (container.querySelector(\n          '.review-editor-body'\n        ) as HTMLElement | null) ||\n        (container.querySelector(\n          '.review-inline-editor-body'\n        ) as HTMLElement | null);\n      if (editorContainer) {\n        editorContainer.innerHTML = `\n          <div style=\"padding:20px; color:red;\">\n            Failed to initialize editor. Please try again.\n            <pre>${error instanceof Error ? error.message : String(error)}</pre>\n          </div>\n        `;\n      }\n      this.editorState.activeEditorToolbar = null;\n      this.editorLifecycle.destroy();\n      this.editorState.milkdownEditor = null;\n    }\n  }\n\n  public closeEditor(): void {\n    // Save editor history before destroying the editor\n    if (this.editorState.currentElementId) {\n      this.saveEditorHistory(this.editorState.currentElementId);\n    }\n\n    this.editorLifecycle.destroy();\n    this.editorState.milkdownEditor = null;\n    this.editorState.activeEditorToolbar = null;\n    if (this.editorState.activeEditor) {\n      // For inline editing, restore the element\n      if (this.config.inlineEditing && this.editorState.currentElementId) {\n        const element = document.querySelector(\n          `[data-review-id=\"${this.editorState.currentElementId}\"]`\n        ) as HTMLElement;\n        if (element) {\n          element.classList.remove('review-editable-editing');\n          const cachedHtml = element.getAttribute('data-review-original-html');\n          if (cachedHtml !== null) {\n            element.innerHTML = cachedHtml;\n            element.removeAttribute('data-review-original-html');\n          }\n          if (this.editorState.currentElementId) {\n            this.commentController.clearSectionCommentMarkup(\n              this.editorState.currentElementId\n            );\n          }\n        }\n      } else {\n        // For modal editing, just remove the modal\n        this.editorState.activeEditor.remove();\n      }\n      this.editorState.activeEditor = null;\n      if (this.editorState.currentElementId) {\n        this.activeHeadingReferenceCache.delete(\n          this.editorState.currentElementId\n        );\n      }\n      this.editorState.currentElementId = null;\n      this.editorState.currentEditorContent = '';\n    }\n  }\n\n  private saveEditor(): void {\n    if (!this.editorState.milkdownEditor || !this.editorState.currentElementId)\n      return;\n    const elementId = this.editorState.currentElementId;\n\n    // Get markdown content from tracked state\n    let newContent = normalizeListMarkers(\n      this.editorState.currentEditorContent\n    );\n    const cachedHeadingReference =\n      this.activeHeadingReferenceCache.get(elementId);\n    if (cachedHeadingReference) {\n      newContent = this.applyHeadingReference(\n        newContent,\n        cachedHeadingReference\n      );\n    }\n\n    const leadingWhitespaceResult = this.stripLeadingBlankLines(newContent);\n    if (leadingWhitespaceResult.removed) {\n      newContent = leadingWhitespaceResult.content;\n      this.showWhitespaceIgnoredNotification();\n    }\n    this.editorState.currentEditorContent = newContent;\n\n    const elementData = this.config.changes.getElementById(elementId);\n    if (!elementData) {\n      logger.error('Element not found for save:', { elementId });\n      this.closeEditor();\n      return;\n    }\n\n    const cachedSectionComment =\n      this.commentController.consumeSectionCommentMarkup(elementId);\n\n    const segments = this.segmentContentIntoElements(\n      newContent,\n      elementData.metadata\n    );\n\n    if (cachedSectionComment) {\n      mergeSectionCommentIntoSegments(\n        segments,\n        cachedSectionComment,\n        elementData.metadata,\n        (content, markup) =>\n          this.commentController.appendSectionComments(content, markup)\n      );\n    }\n\n    const originalContentRaw = this.config.changes.getElementContent(elementId);\n    const originalContent = normalizeListMarkers(originalContentRaw);\n    const strippedOriginal = this.stripLeadingBlankLines(originalContent).content;\n\n    const originalNormalized = normalizeContentForComparison(strippedOriginal);\n    const newNormalized = normalizeContentForComparison(newContent);\n    const noTextChange = originalNormalized === newNormalized;\n\n    if (noTextChange) {\n      const generatedSegments = this.collectGeneratedSegments(elementId);\n      if (generatedSegments.length > 0) {\n        segments.push(...generatedSegments);\n      }\n    }\n\n    logger.debug('Saving editor');\n    logger.trace('Original normalized:', originalNormalized);\n    logger.trace('New normalized:', newNormalized);\n\n    const { elementIds, removedIds } =\n      this.config.changes.replaceElementWithSegments(elementId, segments);\n\n    this.ensureSegmentDom(elementIds, segments, removedIds);\n\n    this.commentController.clearSectionCommentMarkup(elementId);\n    this.commentController.clearSectionCommentMarkupFor(removedIds);\n    if (cachedSectionComment && elementIds.length > 0) {\n      const commentTargetId = elementIds[elementIds.length - 1];\n      if (typeof commentTargetId === 'string') {\n        this.commentController.cacheSectionCommentMarkup(\n          commentTargetId,\n          cachedSectionComment\n        );\n      }\n    }\n\n    this.updateHeadingReferencesAfterSave(\n      elementId,\n      segments,\n      elementIds,\n      removedIds\n    );\n\n    if (originalNormalized === newNormalized && segments.length === 1) {\n      logger.debug('No meaningful content change detected for primary segment');\n    }\n\n    this.closeEditor();\n    this.refresh();\n  }\n\n  private createEditorModal(_content: string, type: string): HTMLElement {\n    const modal = document.createElement('div');\n    modal.className = 'review-editor-modal';\n    modal.innerHTML = `\n      <div class=\"review-editor-container\">\n        <div class=\"review-editor-header\">\n          <h3>Edit ${type}</h3>\n          <button class=\"review-btn review-btn-secondary\" data-action=\"close\">✕</button>\n        </div>\n        <div class=\"review-editor-body\"></div>\n        <div class=\"review-editor-footer\">\n          <button class=\"review-btn review-btn-secondary\" data-action=\"cancel\">Cancel</button>\n          <button class=\"review-btn review-btn-primary\" data-action=\"save\">Save</button>\n        </div>\n      </div>\n    `;\n\n    modal\n      .querySelector('[data-action=\"close\"]')\n      ?.addEventListener('click', () => this.closeEditor());\n    modal\n      .querySelector('[data-action=\"cancel\"]')\n      ?.addEventListener('click', () => this.closeEditor());\n    modal\n      .querySelector('[data-action=\"save\"]')\n      ?.addEventListener('click', () => this.saveEditor());\n\n    modal.addEventListener('click', (e) => {\n      if (e.target === modal) {\n        this.closeEditor();\n      }\n    });\n\n    return modal;\n  }\n\n  public refresh(): void {\n    const currentState = this.config.changes.getCurrentState();\n    const operations = this.config.changes.getOperations();\n\n    // CRITICAL FIX: Track which elements have modifications to properly handle undo/redo\n    // When undoing, elements that previously had operations now have none,\n    // but we still need to refresh their display to show original state\n    const currentlyModifiedIds = new Set(\n      operations.filter((op) => op.type === 'edit').map((op) => op.elementId)\n    );\n\n    currentState.forEach((elem) => {\n      const relevantOperations = operations.filter(\n        (op) => op.elementId === elem.id\n      );\n      const isModified = relevantOperations.length > 0;\n\n      // IMPORTANT: Always check if element was previously modified (shown in DOM)\n      // This ensures undo/redo properly updates display even when removing operations\n      const wasPreviouslyModified =\n        elem.id === this.editorState.currentElementId ||\n        document.querySelector(\n          `[data-review-id=\"${elem.id}\"][data-review-modified=\"true\"]`\n        );\n\n      if (!isModified && !wasPreviouslyModified) {\n        return;\n      }\n\n      // If showing tracked changes, get content with CriticMarkup visualization\n      if (this.editorState.showTrackedChanges) {\n        const hasEdits = relevantOperations.some((op) => op.type === 'edit');\n\n        if (hasEdits) {\n          // Get content with tracked changes visualization\n          const contentWithChanges =\n            this.config.changes.getElementContentWithTrackedChanges(elem.id);\n\n          // Create a modified element for display\n          const displayElem = {\n            ...elem,\n            content: contentWithChanges,\n          };\n          this.updateElementDisplay(displayElem);\n        } else {\n          this.updateElementDisplay(elem);\n        }\n      } else {\n        this.updateElementDisplay(elem);\n      }\n    });\n\n    // Update modified marker for all elements\n    // Elements WITH modifications get the marker, elements WITHOUT get it removed\n    currentState.forEach((elem) => {\n      const domElement = document.querySelector(\n        `[data-review-id=\"${elem.id}\"]`\n      );\n      if (!domElement) return;\n\n      if (currentlyModifiedIds.has(elem.id)) {\n        domElement.setAttribute('data-review-modified', 'true');\n      } else {\n        // CRITICAL FIX: Remove modified marker when undo removes all operations\n        domElement.removeAttribute('data-review-modified');\n      }\n    });\n\n    this.updateUnsavedIndicator();\n    this.refreshCommentUI();\n    this.syncToolbarState();\n  }\n\n  /**\n   * Clean nested review-editable div fences from markdown content\n   * Removes patterns like: ::: {class=\"review-editable\" ...} content :::\n   */\n  private cleanNestedDivs(content: string): string {\n    // Remove pandoc div fences that represent nested review-editable elements\n    // Pattern: ::: {class=\"review-editable\" ...} ... :::\n    // Also handles data-review-* attributes in any order\n    return content.replace(\n      /:::\\s*\\{[^}]*review-editable[^}]*\\}[\\s\\S]*?:::/g,\n      ''\n    );\n  }\n\n  private prepareEditorContent(\n    elementId: string,\n    content: string,\n    type: string,\n    options: { skipHeadingCache?: boolean } = {}\n  ): string {\n    const { skipHeadingCache = false } = options;\n\n    if (type !== 'Header') {\n      if (!skipHeadingCache) {\n        this.activeHeadingReferenceCache.delete(elementId);\n      }\n      return content;\n    }\n\n    const headingReference = this.ensureHeadingReferenceInfo(\n      elementId,\n      content\n    );\n\n    if (headingReference) {\n      const strippedContent = this.removeHeadingReference(\n        content,\n        headingReference\n      );\n      if (!skipHeadingCache) {\n        this.activeHeadingReferenceCache.set(elementId, headingReference);\n      }\n      return strippedContent;\n    }\n\n    if (!skipHeadingCache) {\n      this.activeHeadingReferenceCache.delete(elementId);\n    }\n    return content;\n  }\n\n  private prepareEditorContentVariants(\n    elementId: string,\n    type: string,\n    showTrackedChanges: boolean\n  ): {\n    plainContent: string;\n    trackedContent: string;\n    commentMarkup: string | null;\n  } {\n    const rawPlain = this.config.changes.getElementContent(elementId);\n    const rawTracked = showTrackedChanges\n      ? this.config.changes.getElementContentWithTrackedChanges(elementId)\n      : rawPlain;\n\n    const cleanedPlain = this.cleanNestedDivs(rawPlain);\n    const cleanedTracked = this.cleanNestedDivs(rawTracked);\n\n    const preparedPlain = this.prepareEditorContent(\n      elementId,\n      cleanedPlain,\n      type\n    );\n    const preparedTracked = this.prepareEditorContent(\n      elementId,\n      cleanedTracked,\n      type,\n      { skipHeadingCache: true }\n    );\n\n    const plainResult =\n      this.commentController.extractSectionComments(preparedPlain);\n    const trackedResult =\n      this.commentController.extractSectionComments(preparedTracked);\n\n    return {\n      plainContent: plainResult.content,\n      trackedContent: trackedResult.content,\n      commentMarkup: plainResult.commentMarkup,\n    };\n  }\n\n  private createEditorSession(\n    elementId: string,\n    type: string\n  ): {\n    plainContent: string;\n    trackedContent: string;\n    diffHighlights: DiffHighlightRange[];\n  } {\n    const { plainContent, trackedContent, commentMarkup } =\n      this.prepareEditorContentVariants(\n        elementId,\n        type,\n        this.editorState.showTrackedChanges\n      );\n\n    this.commentController.cacheSectionCommentMarkup(elementId, commentMarkup);\n\n    const diffHighlights = this.editorState.showTrackedChanges\n      ? this.computeDiffHighlightRanges(trackedContent)\n      : [];\n\n    return { plainContent, trackedContent, diffHighlights };\n  }\n\n  private updateHeadingReferencesAfterSave(\n    elementId: string,\n    segments: { content: string; metadata: ElementMetadata }[],\n    updatedElementIds: string[],\n    removedIds: string[]\n  ): void {\n    this.headingReferenceLookup.delete(elementId);\n    removedIds.forEach((id) => {\n      this.headingReferenceLookup.delete(id);\n      this.activeHeadingReferenceCache.delete(id);\n    });\n    updatedElementIds.forEach((id, index) => {\n      const segment = segments[index];\n      if (!segment || !id) {\n        return;\n      }\n      if (segment.metadata?.type === 'Header') {\n        this.syncHeadingReference(id, segment.content);\n      }\n    });\n  }\n\n  private computeDiffHighlightRanges(\n    trackedContent: string\n  ): DiffHighlightRange[] {\n    if (!trackedContent) {\n      return [];\n    }\n\n    const ranges: DiffHighlightRange[] = [];\n\n    const additionPattern = /\\{\\+\\+([\\s\\S]*?)\\+\\+\\}/g;\n    let additionMatch: RegExpExecArray | null;\n    while ((additionMatch = additionPattern.exec(trackedContent)) !== null) {\n      const matchIndex = additionMatch?.index ?? 0;\n      const additionGroup = additionMatch?.[1] ?? '';\n      if (!additionGroup) {\n        continue;\n      }\n      const prefix = trackedContent.slice(0, matchIndex);\n      const start = this.plainLengthForDiff(prefix);\n      const addition = this.plainifyForDiff(additionGroup);\n      if (!addition) {\n        continue;\n      }\n      ranges.push({\n        start,\n        end: start + addition.length,\n        type: 'addition',\n      });\n    }\n\n    const substitutionPattern = /\\{~~([\\s\\S]+?)~>([\\s\\S]+?)~~\\}/g;\n    let substitutionMatch: RegExpExecArray | null;\n    while (\n      (substitutionMatch = substitutionPattern.exec(trackedContent)) !== null\n    ) {\n      const matchIndex = substitutionMatch?.index ?? 0;\n      const replacementGroup = substitutionMatch?.[2] ?? '';\n      if (!replacementGroup) {\n        continue;\n      }\n      const prefix = trackedContent.slice(0, matchIndex);\n      const start = this.plainLengthForDiff(prefix);\n      const replacement = this.plainifyForDiff(replacementGroup);\n      if (!replacement) {\n        continue;\n      }\n      ranges.push({\n        start,\n        end: start + replacement.length,\n        type: 'modification',\n      });\n    }\n\n    return ranges;\n  }\n\n  private plainLengthForDiff(segment: string): number {\n    if (!segment) {\n      return 0;\n    }\n    return this.plainifyForDiff(segment).length;\n  }\n\n  private plainifyForDiff(segment: string): string {\n    if (!segment) {\n      return '';\n    }\n    return segment\n      .replace(/\\{\\+\\+([\\s\\S]*?)\\+\\+\\}/g, '$1')\n      .replace(/\\{--([\\s\\S]*?)--\\}/g, '')\n      .replace(/\\{~~([\\s\\S]*?)~>([\\s\\S]*?)~~\\}/g, '$2')\n      .replace(/\\{==([\\s\\S]*?)==\\}/g, '$1')\n      .replace(/\\{>>([\\s\\S]*?)<<\\}/g, '');\n  }\n\n  private segmentContentIntoElements(\n    content: string,\n    originalMetadata: ElementMetadata\n  ): { content: string; metadata: ElementMetadata }[] {\n    const trimmed = content.trim();\n    if (!trimmed) {\n      return [\n        {\n          content: '',\n          metadata: originalMetadata,\n        },\n      ];\n    }\n\n    const ast = this.config.markdown.parseToAST(content) as Root;\n    const children = ast.children as Content[];\n    if (!children || children.length === 0) {\n      return [\n        {\n          content,\n          metadata: originalMetadata,\n        },\n      ];\n    }\n\n    const offsets = this.buildLineOffsets(content);\n    const segments: { content: string; metadata: ElementMetadata }[] = [];\n\n    children.forEach((node, index) => {\n      const start = this.positionToIndex(offsets, node.position?.start);\n      const nextNode = children[index + 1];\n      const end = nextNode\n        ? this.positionToIndex(offsets, nextNode.position?.start)\n        : content.length;\n\n      let segmentContent = content.slice(start, end);\n      segmentContent = this.normalizeSegmentContent(segmentContent);\n      if (!segmentContent.trim()) {\n        return;\n      }\n\n      const metadata = this.deriveMetadataFromNode(\n        node,\n        index === 0 ? originalMetadata : undefined\n      );\n      segments.push({\n        content: segmentContent,\n        metadata,\n      });\n    });\n\n    if (segments.length === 0) {\n      return [\n        {\n          content,\n          metadata: originalMetadata,\n        },\n      ];\n    }\n\n    return segments;\n  }\n\n  private buildLineOffsets(text: string): number[] {\n    const offsets: number[] = [0];\n    let index = 0;\n    const length = text.length;\n\n    while (index < length) {\n      const char = text[index];\n      if (char === '\\r') {\n        if (index + 1 < length && text[index + 1] === '\\n') {\n          offsets.push(index + 2);\n          index += 2;\n          continue;\n        }\n        offsets.push(index + 1);\n        index += 1;\n        continue;\n      }\n      if (char === '\\n') {\n        offsets.push(index + 1);\n      }\n      index += 1;\n    }\n\n    return offsets;\n  }\n\n  private positionToIndex(\n    offsets: number[],\n    position?: Position | Point\n  ): number {\n    if (!position) {\n      return 0;\n    }\n\n    const line = 'line' in position ? position.line : (position as any).line;\n    const column =\n      'column' in position ? position.column : (position as any).column;\n\n    const lineIndex = Math.max(0, Math.min(offsets.length - 1, line - 1));\n    const base = offsets[lineIndex] ?? 0;\n    return base + Math.max(0, column - 1);\n  }\n\n  private normalizeSegmentContent(text: string): string {\n    let cleaned = text;\n    const leadingPattern = /^(?:\\s*\\r?\\n)+/;\n    const trailingPattern = /(\\r?\\n\\s*)+$/;\n\n    cleaned = cleaned.replace(leadingPattern, '');\n    cleaned = cleaned.replace(trailingPattern, (match) => {\n      return match.includes('\\n') ? '' : match;\n    });\n\n    return cleaned.trimEnd();\n  }\n\n  private stripLeadingBlankLines(content: string): {\n    content: string;\n    removed: boolean;\n  } {\n    if (!content) {\n      return { content, removed: false };\n    }\n    const stripped = content.replace(\n      /^(?:\\s*(?:<br\\s*\\/?>|\\r?\\n))+/,\n      ''\n    );\n    return {\n      content: stripped,\n      removed: stripped.length !== content.length,\n    };\n  }\n\n  private showWhitespaceIgnoredNotification(): void {\n    this.showNotification(\n      'Leading blank lines were removed because whitespace-only changes are ignored.',\n      'info'\n    );\n  }\n\n  private collectGeneratedSegments(\n    elementId: string\n  ): { content: string; metadata: ElementMetadata }[] {\n    const operations = this.config.changes.getOperations?.() ?? [];\n    if (!operations.length) {\n      return [];\n    }\n\n    const activeIds = new Set<string>();\n    for (const op of operations) {\n      if (op.type === 'insert') {\n        const insertData = op.data as { parentId?: string };\n        if (insertData.parentId === elementId) {\n          activeIds.add(op.elementId);\n        }\n      } else if (op.type === 'delete') {\n        if (activeIds.has(op.elementId)) {\n          activeIds.delete(op.elementId);\n        }\n      }\n    }\n\n    if (activeIds.size === 0) {\n      return [];\n    }\n\n    const state = this.config.changes.getCurrentState?.() ?? [];\n    if (!state.length) {\n      return [];\n    }\n\n    const ordered: { content: string; metadata: ElementMetadata }[] = [];\n    let afterParent = false;\n    for (const element of state) {\n      if (element.id === elementId) {\n        afterParent = true;\n        continue;\n      }\n      if (!afterParent) {\n        continue;\n      }\n      if (activeIds.has(element.id)) {\n        ordered.push({\n          content: element.content,\n          metadata: element.metadata,\n        });\n      } else if (ordered.length > 0) {\n        break;\n      } else {\n        break;\n      }\n    }\n\n    return ordered;\n  }\n\n  private deriveMetadataFromNode(\n    node: Content,\n    fallback?: ElementMetadata\n  ): ElementMetadata {\n    switch (node.type) {\n      case 'heading': {\n        const heading = node as MdHeading;\n        return {\n          type: 'Header',\n          level: heading.depth,\n          attributes:\n            fallback && fallback.type === 'Header'\n              ? { ...fallback.attributes }\n              : undefined,\n          classes:\n            fallback && fallback.type === 'Header'\n              ? [...(fallback.classes ?? [])]\n              : undefined,\n        };\n      }\n      case 'code': {\n        return {\n          type: 'CodeBlock',\n        };\n      }\n      case 'list': {\n        const list = node as MdList;\n        return {\n          type: list.ordered ? 'OrderedList' : 'BulletList',\n        };\n      }\n      case 'blockquote': {\n        return {\n          type: 'BlockQuote',\n        };\n      }\n      case 'table': {\n        return {\n          type: 'Div',\n        };\n      }\n      case 'paragraph': {\n        return {\n          type: 'Para',\n          attributes:\n            fallback && fallback.type === 'Para'\n              ? { ...fallback.attributes }\n              : undefined,\n          classes:\n            fallback && fallback.type === 'Para'\n              ? [...(fallback.classes ?? [])]\n              : undefined,\n        };\n      }\n      default: {\n        if (fallback) {\n          return {\n            ...fallback,\n          };\n        }\n        return {\n          type: 'Div',\n        };\n      }\n    }\n  }\n\n  private ensureSegmentDom(\n    elementIds: string[],\n    segments: { content: string; metadata: ElementMetadata }[],\n    removedIds: string[]\n  ): void {\n    this.removeObsoleteSegmentNodes(removedIds);\n    this.syncSegmentNodes(elementIds, segments);\n  }\n\n  private removeObsoleteSegmentNodes(ids: string[]): void {\n    ids.forEach((id) => {\n      const existing = document.querySelector(\n        `[data-review-id=\"${id}\"]`\n      ) as HTMLElement | null;\n      if (existing?.parentElement) {\n        existing.parentElement.removeChild(existing);\n      }\n    });\n  }\n\n  private syncSegmentNodes(\n    elementIds: string[],\n    segments: { content: string; metadata: ElementMetadata }[]\n  ): void {\n    for (let index = 1; index < elementIds.length; index++) {\n      const id = elementIds[index];\n      const previousId = elementIds[index - 1];\n      if (!id || !previousId) {\n        continue;\n      }\n      const existing = document.querySelector(\n        `[data-review-id=\"${id}\"]`\n      ) as HTMLElement | null;\n      if (!existing) {\n        this.createAndInsertSegmentNode(id, previousId, segments[index]);\n        continue;\n      }\n      this.ensureSegmentOrder(existing, previousId);\n    }\n  }\n\n  private createAndInsertSegmentNode(\n    id: string,\n    previousId: string,\n    segment?: { content: string; metadata: ElementMetadata }\n  ): void {\n    const metadata = segment?.metadata;\n    if (!segment || !metadata) {\n      return;\n    }\n    const node = this.createEditableShell(id, metadata);\n    this.insertEditableAfter(previousId, node);\n    this.bindEditableElementEvents(node);\n  }\n\n  private ensureSegmentOrder(node: HTMLElement, previousId: string): void {\n    const previousNode = document.querySelector(\n      `[data-review-id=\"${previousId}\"]`\n    ) as HTMLElement | null;\n    if (!previousNode || !previousNode.parentNode) {\n      return;\n    }\n    const desiredParent = previousNode.parentNode;\n    const anchor = previousNode.nextSibling;\n    if (\n      node.parentNode !== desiredParent ||\n      node.previousSibling !== previousNode\n    ) {\n      desiredParent.insertBefore(node, anchor);\n    }\n  }\n\n  private createEditableShell(\n    id: string,\n    metadata: ElementMetadata\n  ): HTMLElement {\n    const wrapper = document.createElement('div');\n    wrapper.className = 'review-editable review-editable-generated';\n    wrapper.setAttribute('data-review-id', id);\n    wrapper.setAttribute('data-review-type', metadata.type);\n    if (metadata.level) {\n      wrapper.setAttribute('data-review-level', String(metadata.level));\n    }\n    wrapper.setAttribute('data-review-origin', 'generated');\n    return wrapper;\n  }\n\n  private insertEditableAfter(referenceId: string, element: HTMLElement): void {\n    const reference = document.querySelector(\n      `[data-review-id=\"${referenceId}\"]`\n    );\n    if (reference && reference.parentNode) {\n      reference.parentNode.insertBefore(element, reference.nextSibling);\n      return;\n    }\n    document.body.appendChild(element);\n  }\n\n  private syncToolbarState(): void {\n    const canUndo = this.config.changes.canUndo();\n    const canRedo = this.config.changes.canRedo();\n    this.mainSidebarModule.updateUndoRedoState(canUndo, canRedo);\n    this.mainSidebarModule.setTrackedChangesVisible(\n      this.editorState.showTrackedChanges\n    );\n  }\n\n  private cacheInitialHeadingReferences(): void {\n    try {\n      const elements = this.config.changes.getCurrentState();\n      elements.forEach((element) => {\n        if (element.metadata.type !== 'Header') {\n          return;\n        }\n        const info = this.extractHeadingReferenceInfo(element.content);\n        if (info) {\n          this.headingReferenceLookup.set(element.id, info);\n        }\n      });\n    } catch (error) {\n      logger.debug('Skipped initial heading reference cache:', error);\n    }\n  }\n\n  private ensureHeadingReferenceInfo(\n    elementId: string,\n    content: string\n  ): HeadingReferenceInfo | null {\n    const existing = this.headingReferenceLookup.get(elementId);\n    if (existing) {\n      return existing;\n    }\n    const extracted = this.extractHeadingReferenceInfo(content);\n    if (extracted) {\n      this.headingReferenceLookup.set(elementId, extracted);\n      return extracted;\n    }\n    return null;\n  }\n\n  private extractHeadingReferenceInfo(\n    content: string\n  ): HeadingReferenceInfo | null {\n    if (!content) {\n      return null;\n    }\n    const newline = content.includes('\\r\\n') ? '\\r\\n' : '\\n';\n    const lines = content.split(newline);\n    if (lines.length === 0) {\n      return null;\n    }\n\n    const firstLineOriginal = lines[0];\n    const firstLine = firstLineOriginal ? trimLineEnd(firstLineOriginal) : '';\n    const closingIndex = firstLine.lastIndexOf('}');\n    if (closingIndex === -1 || closingIndex !== firstLine.length - 1) {\n      return null;\n    }\n\n    const openingIndex = firstLine.lastIndexOf('{', closingIndex);\n    if (openingIndex === -1) {\n      return null;\n    }\n\n    const reference = firstLine.slice(openingIndex, closingIndex + 1).trim();\n    if (!reference.startsWith('{#')) {\n      return null;\n    }\n\n    let prefixStart = openingIndex;\n    while (prefixStart > 0 && firstLine.charAt(prefixStart - 1) === ' ') {\n      prefixStart--;\n    }\n    const prefix = firstLine.slice(prefixStart, openingIndex);\n\n    const trimmedLeading = trimLineStart(firstLine);\n    const style: 'atx' | 'setext' = trimmedLeading.startsWith('#')\n      ? 'atx'\n      : 'setext';\n\n    return {\n      reference,\n      prefix,\n      style,\n    };\n  }\n\n  private removeHeadingReference(\n    content: string,\n    info: HeadingReferenceInfo\n  ): string {\n    if (!content) {\n      return content;\n    }\n    const newline = content.includes('\\r\\n') ? '\\r\\n' : '\\n';\n    const lines = content.split(newline);\n    if (lines.length === 0) {\n      return content;\n    }\n\n    const firstLineValue = lines[0];\n    if (!firstLineValue) {\n      return content;\n    }\n    const referencePosition = firstLineValue.lastIndexOf(info.reference);\n    if (referencePosition === -1) {\n      return content;\n    }\n\n    const prefixStart = referencePosition - info.prefix.length;\n    if (prefixStart < 0) {\n      return content;\n    }\n    const prefixSegment = firstLineValue.slice(prefixStart, referencePosition);\n\n    let removalStart = referencePosition;\n\n    if (info.prefix.length > 0) {\n      if (prefixSegment === info.prefix) {\n        removalStart = prefixStart;\n      } else {\n        // Fallback: remove any immediate whitespace before the attribute\n        let whitespaceStart = referencePosition;\n        while (\n          whitespaceStart > 0 &&\n          isWhitespaceChar(firstLineValue.charAt(whitespaceStart - 1))\n        ) {\n          whitespaceStart--;\n        }\n        removalStart = whitespaceStart;\n      }\n    } else {\n      while (\n        removalStart > 0 &&\n        isWhitespaceChar(firstLineValue.charAt(removalStart - 1))\n      ) {\n        removalStart--;\n      }\n    }\n\n    const before = firstLineValue.slice(0, removalStart);\n    const after = firstLineValue.slice(\n      referencePosition + info.reference.length\n    );\n    lines[0] = trimLineEnd(before + after);\n\n    return lines.join(newline);\n  }\n\n  private applyHeadingReference(\n    content: string,\n    info: HeadingReferenceInfo\n  ): string {\n    if (!content) {\n      return content;\n    }\n    const cleaned = this.removeHeadingReference(content, info);\n    const newline = cleaned.includes('\\r\\n') ? '\\r\\n' : '\\n';\n    const lines = cleaned.split(newline);\n    if (lines.length === 0) {\n      return cleaned;\n    }\n\n    const firstLineValue = lines[0];\n    if (!firstLineValue) {\n      return cleaned;\n    }\n    const trimmedLeading = trimLineStart(firstLineValue);\n    const isAtx = trimmedLeading.startsWith('#');\n    const secondLine = lines.length > 1 ? lines[1] : undefined;\n    const isSetext = secondLine\n      ? isSetextUnderline(trimLineEnd(secondLine))\n      : false;\n\n    if (info.style === 'atx' && !isAtx) {\n      return cleaned;\n    }\n    if (info.style === 'setext' && !isSetext) {\n      return cleaned;\n    }\n\n    const safePrefix = info.prefix.length > 0 ? info.prefix : ' ';\n    const withoutTrailing = trimLineEnd(firstLineValue);\n    lines[0] = trimLineEnd(`${withoutTrailing}${safePrefix}${info.reference}`);\n\n    return lines.join(newline);\n  }\n\n  private syncHeadingReference(elementId: string, content: string): void {\n    const updated = this.extractHeadingReferenceInfo(content);\n    if (updated) {\n      this.headingReferenceLookup.set(elementId, updated);\n    } else {\n      this.headingReferenceLookup.delete(elementId);\n    }\n  }\n\n  private updateElementDisplay(elem: ReviewElement): void {\n    const domElement = document.querySelector(\n      `[data-review-id=\"${elem.id}\"]`\n    ) as HTMLElement | null;\n    if (!domElement) return;\n\n    domElement.setAttribute('data-review-type', elem.metadata.type);\n    if (elem.metadata.level !== undefined) {\n      domElement.setAttribute('data-review-level', String(elem.metadata.level));\n    } else {\n      domElement.removeAttribute('data-review-level');\n    }\n\n    // Clean content: remove any nested review-editable fence divs\n    let cleanContent = this.cleanNestedDivs(elem.content);\n\n    // For headings, remove persistent Pandoc references for display\n    // and normalize CriticMarkup to a single line to avoid rendering issues\n    if (elem.metadata.type === 'Header') {\n      const headingReference = this.ensureHeadingReferenceInfo(\n        elem.id,\n        cleanContent\n      );\n      if (headingReference) {\n        cleanContent = this.removeHeadingReference(\n          cleanContent,\n          headingReference\n        );\n      }\n      cleanContent = this.normalizeCriticMarkupNewlines(cleanContent);\n    }\n\n    logger.trace('Updating display for', { elementId: elem.id });\n    logger.trace('Content:', cleanContent);\n\n    // Render using Remark with CriticMarkup support\n    const html = this.config.markdown.renderElement(\n      cleanContent,\n      elem.metadata.type,\n      elem.metadata.level\n    );\n\n    logger.trace('Rendered HTML:', html);\n\n    if (domElement.classList.contains('review-editable-editing')) {\n      return;\n    }\n\n    const contentElem = domElement.querySelector(\n      ':scope > :not([data-review-id]):not(.review-section-comment-indicator)'\n    );\n\n    const removableNodes = Array.from(domElement.childNodes).filter((node) => {\n      if (node === contentElem) return false;\n      if (node instanceof HTMLElement) {\n        if (node.classList.contains('review-section-comment-indicator')) {\n          return false;\n        }\n        if (node.hasAttribute('data-review-id')) {\n          return false;\n        }\n      }\n      return true;\n    });\n\n    removableNodes.forEach((node) => {\n      if (node.parentNode === domElement) {\n        domElement.removeChild(node);\n      }\n    });\n\n    const temp = document.createElement('div');\n    temp.innerHTML = html;\n    const newNodes: ChildNode[] = [];\n    while (temp.firstChild) {\n      const child = temp.firstChild;\n      newNodes.push(child);\n      temp.removeChild(child);\n    }\n\n    if (contentElem) {\n      const firstNewElement = newNodes.find(\n        (node): node is HTMLElement => node instanceof HTMLElement\n      );\n\n      if (firstNewElement && contentElem instanceof HTMLElement) {\n        const combinedClasses = new Set<string>();\n        firstNewElement.className\n          .split(/\\s+/)\n          .filter(Boolean)\n          .forEach((cls) => combinedClasses.add(cls));\n        contentElem.classList.forEach((cls) => combinedClasses.add(cls));\n        firstNewElement.className = Array.from(combinedClasses).join(' ');\n\n        Array.from(contentElem.attributes).forEach((attr) => {\n          if (attr.name === 'class') return;\n          if (!firstNewElement.hasAttribute(attr.name)) {\n            firstNewElement.setAttribute(attr.name, attr.value);\n          }\n        });\n      }\n\n      if (newNodes.length > 0) {\n        const wrapper = this.wrapSectionContent(\n          contentElem.getAttribute('data-review-wrapper') === 'true',\n          newNodes\n        );\n        contentElem.replaceWith(wrapper);\n      } else {\n        contentElem.remove();\n      }\n    } else if (newNodes.length > 0) {\n      const indicator = domElement.querySelector(\n        ':scope > .review-section-comment-indicator'\n      );\n      const wrapper = this.wrapSectionContent(false, newNodes);\n      if (indicator) {\n        domElement.insertBefore(wrapper, indicator);\n      } else {\n        domElement.appendChild(wrapper);\n      }\n    }\n\n    this.commentController.sanitizeInlineCommentArtifacts(domElement);\n  }\n\n  /**\n   * Normalize newlines within CriticMarkup for single-line contexts (like headings)\n   * Converts: {++ test\\n++} → {++ test ++}\n   */\n  private normalizeCriticMarkupNewlines(content: string): string {\n    // Replace newlines within CriticMarkup with spaces\n    return content\n      .replace(/\\{\\+\\+([\\s\\S]+?)\\+\\+\\}/g, (_match, text) => {\n        return `{++${text.replace(/\\s+/g, ' ').trim()}++}`;\n      })\n      .replace(/\\{--([\\s\\S]+?)--\\}/g, (_match, text) => {\n        return `{--${text.replace(/\\s+/g, ' ').trim()}--}`;\n      })\n      .replace(/\\{~~([\\s\\S]+?)~>([\\s\\S]+?)~~\\}/g, (_match, old, newText) => {\n        return `{~~${old.replace(/\\s+/g, ' ').trim()}~>${newText.replace(/\\s+/g, ' ').trim()}~~}`;\n      })\n      .replace(/\\{>>([\\s\\S]+?)<<\\}/g, (_match, text) => {\n        return `{>>${text.replace(/\\s+/g, ' ').trim()}<<}`;\n      })\n      .replace(/\\{==([\\s\\S]+?)==\\}/g, (_match, text) => {\n        return `{==${text.replace(/\\s+/g, ' ').trim()}==}`;\n      });\n  }\n\n  /**\n   * For list items/sub-lists, resolve the highest ancestor list element so edits apply to the full list.\n   */\n  private resolveListEditorTarget(element: HTMLElement): HTMLElement | null {\n    const selector =\n      '[data-review-type=\"BulletList\"], [data-review-type=\"OrderedList\"]';\n    let current = element.closest(selector) as HTMLElement | null;\n    if (!current) {\n      return null;\n    }\n\n    let highest = current;\n    while (current) {\n      const parent = current.parentElement?.closest(\n        selector\n      ) as HTMLElement | null;\n      if (!parent) break;\n      highest = parent;\n      current = parent;\n    }\n\n    return highest;\n  }\n\n  private updateUnsavedIndicator(): void {\n    const hasUnsaved = this.config.changes.hasUnsavedOperations();\n    if (hasUnsaved) {\n      this.getOrCreateToolbar();\n    }\n    this.mainSidebarModule.setHasUnsavedChanges(hasUnsaved);\n  }\n\n  private getOrCreateToolbar(): HTMLElement {\n    let toolbar = document.querySelector(\n      '.review-toolbar'\n    ) as HTMLElement | null;\n    if (!toolbar) {\n      toolbar = this.createPersistentSidebar();\n      document.body.appendChild(toolbar);\n      this.mainSidebarModule.setTrackedChangesVisible(\n        this.editorState.showTrackedChanges\n      );\n      this.syncToolbarState();\n      this.applySidebarCollapsedState(this.uiState.isSidebarCollapsed, toolbar);\n    }\n    return toolbar;\n  }\n\n  /**\n   * Create persistent sidebar with all controls\n   */\n  private createPersistentSidebar(): HTMLElement {\n    const sidebar = this.mainSidebarModule.create();\n\n    if (!this.changeSummaryDashboard) {\n      this.changeSummaryDashboard = new ChangeSummaryDashboard(this.config);\n    }\n\n    return sidebar;\n  }\n\n  private openCommentComposer(context: {\n    elementId: string;\n    existingComment?: ReturnType<CommentsModule['parse']>[0];\n  }): void {\n    this.contextMenuCoordinator?.close();\n    this.commentsSidebarModule?.show();\n\n    const commentKey = context.existingComment\n      ? `${context.elementId}:${context.existingComment.start}`\n      : undefined;\n\n    this.commentController.openComposer({\n      elementId: context.elementId,\n      existingComment: context.existingComment,\n      commentKey,\n    });\n\n    this.commentController.highlightSection(\n      context.elementId,\n      'composer',\n      commentKey\n    );\n  }\n\n  private refreshCommentUI(options: { showSidebar?: boolean } = {}): void {\n    this.commentController.refreshUI({\n      showSidebar: options.showSidebar,\n    });\n  }\n\n  private wrapSectionContent(\n    alreadyWrapped: boolean,\n    nodes: ChildNode[]\n  ): HTMLElement {\n    if (alreadyWrapped) {\n      const fragment = document.createDocumentFragment();\n      nodes.forEach((node) => fragment.appendChild(node));\n      const container = document.createElement('div');\n      container.setAttribute('data-review-wrapper', 'true');\n      container.className = 'review-section-wrapper';\n      container.appendChild(fragment);\n      return container;\n    }\n\n    const wrapper = document.createElement('div');\n    wrapper.className = 'review-section-wrapper';\n    wrapper.setAttribute('data-review-wrapper', 'true');\n    const fragment = document.createDocumentFragment();\n    nodes.forEach((node) => fragment.appendChild(node));\n    wrapper.appendChild(fragment);\n    return wrapper;\n  }\n\n  /**\n   * Scroll to and highlight an element\n   */\n  /**\n   * Remove a comment from the content\n   */\n  public showNotification(\n    message: string,\n    type: 'info' | 'success' | 'error' = 'info'\n  ): void {\n    const notification = document.createElement('div');\n    notification.className = `review-notification review-notification-${type}`;\n    notification.textContent = message;\n    document.body.appendChild(notification);\n    setTimeout(() => {\n      notification.classList.add('review-notification-show');\n    }, 10);\n    setTimeout(() => {\n      notification.classList.remove('review-notification-show');\n      setTimeout(() => notification.remove(), getAnimationDuration('SLOW'));\n    }, UI_CONSTANTS.NOTIFICATION_DISPLAY_DURATION_MS);\n  }\n\n  public showLoading(message = 'Loading...'): HTMLElement {\n    const loading = document.createElement('div');\n    loading.className = 'review-loading';\n    loading.innerHTML = `\n      <div class=\"review-loading-content\">\n        <div class=\"review-loading-spinner\"></div>\n        <p>${message}</p>\n      </div>\n    `;\n    document.body.appendChild(loading);\n    return loading;\n  }\n\n  public hideLoading(loading: HTMLElement): void {\n    loading.remove();\n  }\n\n  public destroy(): void {\n    this.closeEditor();\n\n    // Clean up module instances and their event listeners\n    this.editorToolbarModule?.destroy();\n    this.commentsSidebarModule?.destroy();\n    this.commentComposerModule?.destroy();\n    this.commentBadgesModule?.destroy();\n    this.contextMenuCoordinator?.destroy();\n    this.changeSummaryDashboard?.destroy();\n    this.mainSidebarModule.destroy();\n\n    // Remove DOM elements\n    const toolbar = document.querySelector('.review-toolbar');\n    toolbar?.remove();\n    const editableElements = document.querySelectorAll('.review-editable');\n    editableElements.forEach((elem) => {\n      const clone = elem.cloneNode(true);\n      elem.parentNode?.replaceChild(clone, elem);\n    });\n  }\n\n  /**\n   * Save editor history to persistent localStorage for undo/redo\n   * Stores multiple snapshots of editor content per section\n   */\n  private saveEditorHistory(elementId: string): void {\n    if (!elementId) {\n      return;\n    }\n\n    this.historyStorage.save(elementId, this.editorState.currentEditorContent);\n  }\n\n  /**\n   * Restore editor history from persistent storage\n   */\n  private restoreEditorHistory(elementId: string): void {\n    const historyData = this.historyStorage.get(elementId);\n    if (historyData.states.length === 0) {\n      return;\n    }\n\n    logger.debug('Editor history restored for element', {\n      elementId,\n      stateCount: historyData.states.length,\n      lastUpdated: new Date(historyData.lastUpdated).toLocaleString(),\n    });\n  }\n\n  /**\n   * Get all stored editor histories for debugging/info\n   */\n  public getStoredHistories(): Array<{\n    elementId: string;\n    stateCount: number;\n    lastUpdated: string;\n    size: number;\n  }> {\n    return this.historyStorage.list();\n  }\n\n  /**\n   * Clear editor history for a specific element\n   */\n  public clearElementHistory(elementId: string): void {\n    this.historyStorage.clear(elementId);\n  }\n\n  /**\n   * Clear all editor histories\n   */\n  public clearAllHistories(): void {\n    this.historyStorage.clearAll();\n  }\n}\n\nexport default UIModule;\n","import { createModuleLogger } from '@utils/debug';\nimport type { ReviewGitConfig } from '@/types';\nimport type {\n  GitAuthConfig,\n  GitConfigResolution,\n  GitProviderType,\n  ResolvedGitConfig,\n} from './types';\n\nconst logger = createModuleLogger('GitConfig');\n\nconst DEFAULT_BASE_BRANCH = 'main';\nconst DEFAULT_AUTH_MODE: GitAuthConfig['mode'] = 'header';\n\nconst VALID_PROVIDERS: GitProviderType[] = [\n  'github',\n  'gitlab',\n  'gitea',\n  'forgejo',\n  'azure-devops',\n  'local',\n];\n\n/**\n * Normalize raw git configuration supplied from Quarto metadata.\n */\nexport function resolveGitConfig(\n  rawConfig?: ReviewGitConfig | null\n): GitConfigResolution | null {\n  if (!rawConfig) {\n    return null;\n  }\n\n  const provider = normalizeProvider(rawConfig.provider);\n  if (!provider) {\n    logger.warn(\n      'Git integration disabled: missing or unsupported `review.git.provider` configuration'\n    );\n    return null;\n  }\n\n  const owner = (rawConfig.owner || '').trim();\n  const name = (rawConfig.repo || '').trim();\n\n  if (!owner || !name) {\n    logger.warn(\n      'Git integration disabled: `review.git.owner` and `review.git.repo` are required'\n    );\n    return null;\n  }\n\n  const baseBranch =\n    (\n      rawConfig.baseBranch ||\n      (rawConfig['base-branch'] as string | undefined) ||\n      DEFAULT_BASE_BRANCH\n    ).trim() || DEFAULT_BASE_BRANCH;\n\n  const sourceFile =\n    (rawConfig.sourceFile as string | undefined) ||\n    (rawConfig['source-file'] as string | undefined) ||\n    undefined;\n\n  const authConfig = normalizeAuthConfig(rawConfig.auth);\n\n  const resolved: ResolvedGitConfig = {\n    provider,\n    repository: {\n      owner,\n      name,\n      baseBranch,\n      sourceFile,\n    },\n    auth: authConfig ?? undefined,\n    options: rawConfig.options,\n  };\n\n  return {\n    config: resolved,\n    raw: rawConfig,\n  };\n}\n\nexport type { ResolvedGitConfig, GitConfigResolution } from './types';\n\nfunction normalizeProvider(provider?: string): GitProviderType | null {\n  if (!provider) return null;\n  const normalized = provider.toLowerCase().trim();\n  return VALID_PROVIDERS.includes(normalized as GitProviderType)\n    ? (normalized as GitProviderType)\n    : null;\n}\n\nfunction normalizeAuthConfig(\n  config?: ReviewGitConfig['auth']\n): GitAuthConfig | null {\n  if (!config) {\n    return null;\n  }\n\n  const mode = determineAuthMode(config);\n  const record = config as Record<string, unknown> | undefined;\n\n  const headerName =\n    extractString(record, 'headerName') || extractString(record, 'header-name');\n  const cookieName =\n    extractString(record, 'cookieName') || extractString(record, 'cookie-name');\n  const token = extractString(record, 'token');\n\n  return {\n    mode,\n    headerName: headerName || 'Authorization',\n    cookieName: cookieName || undefined,\n    token: token || undefined,\n  };\n}\n\nfunction determineAuthMode(\n  config: ReviewGitConfig['auth']\n): GitAuthConfig['mode'] {\n  const modeValue = (config?.mode as string | undefined)?.toLowerCase();\n  if (modeValue === 'header' || modeValue === 'cookie' || modeValue === 'pat') {\n    return modeValue;\n  }\n  if (extractString(config as Record<string, unknown>, 'token')) {\n    return 'pat';\n  }\n  return DEFAULT_AUTH_MODE;\n}\n\nfunction extractString(\n  obj: Record<string, unknown> | undefined,\n  key: string\n): string | undefined {\n  if (!obj) return undefined;\n  const value = obj[key];\n  if (typeof value === 'string') {\n    const trimmed = value.trim();\n    return trimmed.length > 0 ? trimmed : undefined;\n  }\n  return undefined;\n}\n","import type {\n  CreateBranchResult,\n  FileUpsertResult,\n  GitAuthConfig,\n  GitUser,\n  RepositoryFile,\n  ReviewCommentInput,\n  ReviewCommentResult,\n} from '../types';\n\nexport interface ProviderConfig {\n  url?: string;\n  token?: string;\n  owner?: string;\n  repo?: string;\n  auth?: GitAuthConfig;\n}\n\nexport interface PullRequest {\n  number: number;\n  title: string;\n  body: string;\n  state: 'open' | 'closed' | 'merged';\n  author: string;\n  createdAt: string;\n  updatedAt: string;\n  url: string;\n}\n\nexport interface Issue {\n  number: number;\n  title: string;\n  body: string;\n  state: 'open' | 'closed';\n  author: string;\n  createdAt: string;\n  url: string;\n}\n\n/**\n * Base class for all remote git providers. Concrete implementations should\n * add provider-specific request logic by overriding the abstract methods.\n */\nexport abstract class BaseProvider {\n  protected readonly config: ProviderConfig;\n\n  constructor(config: ProviderConfig) {\n    this.config = config;\n  }\n\n  /**\n   * Authenticated user associated with the current credentials.\n   */\n  abstract getCurrentUser(): Promise<GitUser>;\n\n  /**\n   * Create a new branch derived from the given base branch.\n   */\n  abstract createBranch(\n    branchName: string,\n    fromBranch: string\n  ): Promise<CreateBranchResult>;\n\n  /**\n   * Retrieve the content of a file at a specific ref.\n   */\n  abstract getFileContent(\n    path: string,\n    ref: string\n  ): Promise<RepositoryFile | null>;\n\n  /**\n   * Create or update the contents of a file on a branch.\n   */\n  abstract createOrUpdateFile(\n    path: string,\n    content: string,\n    message: string,\n    branch: string,\n    sha?: string\n  ): Promise<FileUpsertResult>;\n\n  /**\n   * Create a pull request.\n   */\n  abstract createPullRequest(\n    title: string,\n    body: string,\n    head: string,\n    base: string\n  ): Promise<PullRequest>;\n\n  /**\n   * Update an existing pull request.\n   */\n  abstract updatePullRequest(\n    number: number,\n    updates: Partial<Pick<PullRequest, 'title' | 'body'>>\n  ): Promise<PullRequest>;\n\n  /**\n   * Retrieve a pull request by number.\n   */\n  abstract getPullRequest(number: number): Promise<PullRequest>;\n\n  /**\n   * List pull requests filtered by state.\n   */\n  abstract listPullRequests(\n    state?: 'open' | 'closed' | 'all'\n  ): Promise<PullRequest[]>;\n\n  /**\n   * Merge a pull request using the given method.\n   */\n  abstract mergePullRequest(\n    number: number,\n    method?: 'merge' | 'squash' | 'rebase'\n  ): Promise<void>;\n\n  /**\n   * Create review comments for a pull request.\n   */\n  abstract createReviewComments(\n    number: number,\n    comments: ReviewCommentInput[],\n    commitSha: string\n  ): Promise<ReviewCommentResult[]>;\n\n  /**\n   * Create an issue in the repository.\n   */\n  abstract createIssue(title: string, body: string): Promise<Issue>;\n\n  /**\n   * Retrieve an issue by number.\n   */\n  abstract getIssue(number: number): Promise<Issue>;\n\n  /**\n   * List issues filtered by state.\n   */\n  abstract listIssues(state?: 'open' | 'closed' | 'all'): Promise<Issue[]>;\n\n  /**\n   * Add a comment to a pull request.\n   */\n  abstract addPullRequestComment(number: number, body: string): Promise<void>;\n\n  /**\n   * Add a comment to an issue.\n   */\n  abstract addIssueComment(number: number, body: string): Promise<void>;\n\n  /**\n   * Retrieve repository metadata.\n   */\n  abstract getRepository(): Promise<{\n    name: string;\n    description: string;\n    url: string;\n    defaultBranch: string;\n  }>;\n\n  /**\n   * Determine whether the authenticated user has push/write access to the repository.\n   */\n  abstract hasWriteAccess(): Promise<boolean>;\n\n  /**\n   * Perform a raw API request.\n   */\n  protected async request<T = unknown>(\n    endpoint: string,\n    options: RequestInit = {}\n  ): Promise<T> {\n    if (!this.config.url) {\n      throw new Error('Provider URL is not configured');\n    }\n\n    const headers: Record<string, string> = {};\n    const authHeader = this.getAuthHeader();\n    const headerName = this.config.auth?.headerName || 'Authorization';\n\n    if (authHeader) {\n      headers[headerName] = authHeader;\n    }\n\n    // Merge headers without overwriting provided values\n    const finalHeaders: HeadersInit = {\n      Accept: 'application/json',\n      ...(authHeader ? { [headerName]: authHeader } : {}),\n      ...(options.headers ?? {}),\n    };\n\n    const requestInit: RequestInit = {\n      ...options,\n      headers: finalHeaders,\n    };\n\n    if (this.config.auth?.mode === 'cookie') {\n      requestInit.credentials = requestInit.credentials ?? 'include';\n    }\n\n    const url =\n      endpoint.startsWith('http') || endpoint.startsWith('https')\n        ? endpoint\n        : `${this.config.url}${endpoint}`;\n\n    const response = await fetch(url, requestInit);\n\n    if (!response.ok) {\n      const error = await this.toApiError(response);\n      throw error;\n    }\n\n    if (response.status === 204) {\n      // No content\n      return undefined as T;\n    }\n\n    const text = await response.text();\n    if (!text) {\n      return undefined as T;\n    }\n\n    try {\n      return JSON.parse(text) as T;\n    } catch (error) {\n      throw new Error(\n        `Failed to parse provider response: ${(error as Error).message}`\n      );\n    }\n  }\n\n  /**\n   * Convert a non-OK response to an informative error.\n   */\n  protected async toApiError(response: Response): Promise<Error> {\n    let message = `${response.status} ${response.statusText}`;\n\n    try {\n      const body = await response.json();\n      if (body && typeof body.message === 'string') {\n        message = body.message;\n      }\n    } catch {\n      // Ignore JSON parse errors and fall back to status text\n    }\n\n    const error = new Error(message);\n    (error as Error & { status?: number }).status = response.status;\n    return error;\n  }\n\n  /**\n   * Build the authorization header. Return `undefined` if the provider relies on cookies.\n   */\n  protected abstract getAuthHeader(): string | undefined;\n}\n\nexport default BaseProvider;\n","import { BaseProvider, type Issue, type PullRequest } from './base';\nimport type {\n  CreateBranchResult,\n  FileUpsertResult,\n  GitUser,\n  RepositoryFile,\n  ReviewCommentInput,\n  ReviewCommentResult,\n} from '../types';\n\nfunction decodeBase64(content: string): string {\n  if (typeof atob === 'function') {\n    return decodeURIComponent(\n      Array.prototype.map\n        .call(\n          atob(content),\n          (c: string) => `%${`00${c.charCodeAt(0).toString(16)}`.slice(-2)}`\n        )\n        .join('')\n    );\n  }\n\n  // Fallback for environments without atob (e.g., tests)\n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(content, 'base64').toString('utf-8');\n  }\n  throw new Error('Base64 decoding is not supported in this environment');\n}\n\nfunction encodeBase64(content: string): string {\n  if (typeof btoa === 'function') {\n    return btoa(unescape(encodeURIComponent(content)));\n  }\n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(content, 'utf-8').toString('base64');\n  }\n  throw new Error('Base64 encoding is not supported in this environment');\n}\n\nexport class GitHubProvider extends BaseProvider {\n  protected getAuthHeader(): string | undefined {\n    if (this.config.auth?.mode === 'cookie') {\n      return undefined;\n    }\n    if (this.config.auth?.token) {\n      return `Bearer ${this.config.auth.token}`;\n    }\n    if (this.config.token) {\n      return `Bearer ${this.config.token}`;\n    }\n    return undefined;\n  }\n\n  async getCurrentUser(): Promise<GitUser> {\n    const response = await this.request<GitHubUser>('/user');\n    return {\n      login: response.login,\n      name: response.name ?? undefined,\n      avatarUrl: response.avatar_url ?? undefined,\n    };\n  }\n\n  async createBranch(\n    branchName: string,\n    fromBranch: string\n  ): Promise<CreateBranchResult> {\n    const baseRef = await this.request<GitHubRef>(\n      `/repos/${this.config.owner}/${this.config.repo}/git/ref/heads/${fromBranch}`\n    );\n\n    const response = await this.request<GitHubRef>(\n      `/repos/${this.config.owner}/${this.config.repo}/git/refs`,\n      {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          ref: `refs/heads/${branchName}`,\n          sha: baseRef.object.sha,\n        }),\n      }\n    );\n\n    return {\n      name: response.ref,\n      sha: response.object.sha,\n    };\n  }\n\n  async getFileContent(\n    path: string,\n    ref: string\n  ): Promise<RepositoryFile | null> {\n    try {\n      const response = await this.request<GitHubContent>(\n        `/repos/${this.config.owner}/${this.config.repo}/contents/${encodeURIComponent(\n          path\n        )}?ref=${encodeURIComponent(ref)}`,\n        {\n          headers: { Accept: 'application/vnd.github.v3+json' },\n        }\n      );\n\n      return {\n        path: response.path,\n        sha: response.sha,\n        content: decodeBase64(response.content),\n      };\n    } catch (error) {\n      if (\n        error instanceof Error &&\n        (error as Error & { status?: number }).status === 404\n      ) {\n        return null;\n      }\n      throw error;\n    }\n  }\n\n  async createOrUpdateFile(\n    path: string,\n    content: string,\n    message: string,\n    branch: string,\n    sha?: string\n  ): Promise<FileUpsertResult> {\n    const response = await this.request<GitHubFileResponse>(\n      `/repos/${this.config.owner}/${this.config.repo}/contents/${encodeURIComponent(\n        path\n      )}`,\n      {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          message,\n          content: encodeBase64(content),\n          branch,\n          sha,\n        }),\n      }\n    );\n\n    return {\n      path: response.content.path,\n      sha: response.content.sha,\n      commitSha: response.commit.sha,\n      url: response.content.html_url,\n    };\n  }\n\n  async createPullRequest(\n    title: string,\n    body: string,\n    head: string,\n    base: string\n  ): Promise<PullRequest> {\n    const response = await this.request<GitHubPullRequest>(\n      `/repos/${this.config.owner}/${this.config.repo}/pulls`,\n      {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ title, body, head, base }),\n      }\n    );\n\n    return this.mapPullRequest(response);\n  }\n\n  async updatePullRequest(\n    number: number,\n    updates: Partial<Pick<PullRequest, 'title' | 'body'>>\n  ): Promise<PullRequest> {\n    const response = await this.request<GitHubPullRequest>(\n      `/repos/${this.config.owner}/${this.config.repo}/pulls/${number}`,\n      {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          title: updates.title,\n          body: updates.body,\n        }),\n      }\n    );\n\n    return this.mapPullRequest(response);\n  }\n\n  async getPullRequest(number: number): Promise<PullRequest> {\n    const response = await this.request<GitHubPullRequest>(\n      `/repos/${this.config.owner}/${this.config.repo}/pulls/${number}`\n    );\n    return this.mapPullRequest(response);\n  }\n\n  async listPullRequests(\n    state: 'open' | 'closed' | 'all' = 'open'\n  ): Promise<PullRequest[]> {\n    const response = await this.request<GitHubPullRequest[]>(\n      `/repos/${this.config.owner}/${this.config.repo}/pulls?state=${state}`\n    );\n    return response.map((pr) => this.mapPullRequest(pr));\n  }\n\n  async mergePullRequest(\n    number: number,\n    method: 'merge' | 'squash' | 'rebase' = 'merge'\n  ): Promise<void> {\n    await this.request(\n      `/repos/${this.config.owner}/${this.config.repo}/pulls/${number}/merge`,\n      {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ merge_method: method }),\n      }\n    );\n  }\n\n  async createReviewComments(\n    number: number,\n    comments: ReviewCommentInput[],\n    commitSha: string\n  ): Promise<ReviewCommentResult[]> {\n    if (!comments.length) {\n      return [];\n    }\n\n    const response = await this.request<GitHubReviewResponse>(\n      `/repos/${this.config.owner}/${this.config.repo}/pulls/${number}/reviews`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/vnd.github+json',\n          'X-GitHub-Api-Version': '2022-11-28',\n        },\n        body: JSON.stringify({\n          commit_id: commitSha,\n          event: 'COMMENT',\n          comments: comments.map((comment) => ({\n            path: comment.path,\n            line: comment.line,\n            side: comment.side ?? 'RIGHT',\n            body: comment.body,\n          })),\n        }),\n      }\n    );\n\n    return response?.comments\n      ? response.comments.map((comment) => ({\n          id: comment.id,\n          url: comment.html_url,\n          path: comment.path,\n          line: comment.line,\n        }))\n      : [];\n  }\n\n  async createIssue(title: string, body: string): Promise<Issue> {\n    const response = await this.request<GitHubIssue>(\n      `/repos/${this.config.owner}/${this.config.repo}/issues`,\n      {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ title, body }),\n      }\n    );\n    return this.mapIssue(response);\n  }\n\n  async getIssue(number: number): Promise<Issue> {\n    const response = await this.request<GitHubIssue>(\n      `/repos/${this.config.owner}/${this.config.repo}/issues/${number}`\n    );\n    return this.mapIssue(response);\n  }\n\n  async listIssues(\n    state: 'open' | 'closed' | 'all' = 'open'\n  ): Promise<Issue[]> {\n    const response = await this.request<GitHubIssue[]>(\n      `/repos/${this.config.owner}/${this.config.repo}/issues?state=${state}`\n    );\n    return response.map((issue) => this.mapIssue(issue));\n  }\n\n  async addPullRequestComment(number: number, body: string): Promise<void> {\n    await this.request(\n      `/repos/${this.config.owner}/${this.config.repo}/issues/${number}/comments`,\n      {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ body }),\n      }\n    );\n  }\n\n  async addIssueComment(number: number, body: string): Promise<void> {\n    await this.request(\n      `/repos/${this.config.owner}/${this.config.repo}/issues/${number}/comments`,\n      {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ body }),\n      }\n    );\n  }\n\n  async getRepository(): Promise<{\n    name: string;\n    description: string;\n    url: string;\n    defaultBranch: string;\n  }> {\n    const response = await this.request<GitHubRepository>(\n      `/repos/${this.config.owner}/${this.config.repo}`\n    );\n\n    return {\n      name: response.name,\n      description: response.description,\n      url: response.html_url,\n      defaultBranch: response.default_branch,\n    };\n  }\n\n  async hasWriteAccess(): Promise<boolean> {\n    const response = await this.request<GitHubRepository>(\n      `/repos/${this.config.owner}/${this.config.repo}`\n    );\n    return Boolean(response.permissions?.push);\n  }\n\n  private mapPullRequest(pr: GitHubPullRequest): PullRequest {\n    return {\n      number: pr.number,\n      title: pr.title,\n      body: pr.body,\n      state: pr.merged_at ? 'merged' : pr.state,\n      author: pr.user.login,\n      createdAt: pr.created_at,\n      updatedAt: pr.updated_at,\n      url: pr.html_url,\n    };\n  }\n\n  private mapIssue(issue: GitHubIssue): Issue {\n    return {\n      number: issue.number,\n      title: issue.title,\n      body: issue.body,\n      state: issue.state,\n      author: issue.user.login,\n      createdAt: issue.created_at,\n      url: issue.html_url,\n    };\n  }\n}\n\ninterface GitHubUser {\n  login: string;\n  name?: string;\n  avatar_url?: string;\n}\n\ninterface GitHubRef {\n  ref: string;\n  object: {\n    sha: string;\n  };\n}\n\ninterface GitHubContent {\n  path: string;\n  sha: string;\n  content: string;\n  encoding: 'base64';\n}\n\ninterface GitHubFileResponse {\n  content: {\n    path: string;\n    sha: string;\n    html_url: string;\n  };\n  commit: {\n    sha: string;\n  };\n}\n\ninterface GitHubPullRequest {\n  number: number;\n  title: string;\n  body: string;\n  state: 'open' | 'closed';\n  merged_at: string | null;\n  user: GitHubUser;\n  created_at: string;\n  updated_at: string;\n  html_url: string;\n}\n\ninterface GitHubIssue {\n  number: number;\n  title: string;\n  body: string;\n  state: 'open' | 'closed';\n  user: GitHubUser;\n  created_at: string;\n  html_url: string;\n}\n\ninterface GitHubRepository {\n  name: string;\n  description: string;\n  html_url: string;\n  default_branch: string;\n  permissions?: {\n    push?: boolean;\n  };\n}\n\ninterface GitHubReviewResponse {\n  id: number;\n  state: string;\n  body: string | null;\n  html_url: string;\n  comments: Array<{\n    id: number;\n    path: string;\n    line: number;\n    html_url: string;\n  }>;\n}\n\nexport default GitHubProvider;\n","/**\n * GitLab Provider\n * GitLab-specific API implementation\n */\n\nimport {\n  BaseProvider,\n  type PullRequest,\n  type Issue,\n  type ProviderConfig,\n} from './base';\nimport type {\n  CreateBranchResult,\n  FileUpsertResult,\n  GitUser,\n  RepositoryFile,\n  ReviewCommentInput,\n  ReviewCommentResult,\n} from '../types';\n\nexport class GitLabProvider extends BaseProvider {\n  private projectId: string;\n\n  constructor(\n    config: Omit<ProviderConfig, 'url'> & { url?: string; projectId?: string }\n  ) {\n    super({\n      url: config.url || 'https://gitlab.com/api/v4',\n      ...config,\n    });\n    this.projectId = config.projectId || `${config.owner}%2F${config.repo}`;\n  }\n\n  protected getAuthHeader(): string {\n    return `Bearer ${this.config.token}`;\n  }\n\n  async getCurrentUser(): Promise<GitUser> {\n    return this.notImplemented();\n  }\n\n  async createBranch(\n    _branchName: string,\n    _fromBranch: string\n  ): Promise<CreateBranchResult> {\n    return this.notImplemented();\n  }\n\n  async getFileContent(\n    _path: string,\n    _ref: string\n  ): Promise<RepositoryFile | null> {\n    return this.notImplemented();\n  }\n\n  async createOrUpdateFile(\n    _path: string,\n    _content: string,\n    _message: string,\n    _branch: string,\n    _sha?: string\n  ): Promise<FileUpsertResult> {\n    return this.notImplemented();\n  }\n\n  async createPullRequest(\n    title: string,\n    body: string,\n    head: string,\n    base: string\n  ): Promise<PullRequest> {\n    const endpoint = `/projects/${this.projectId}/merge_requests`;\n\n    const response = await this.request<GitLabMergeRequest>(endpoint, {\n      method: 'POST',\n      body: JSON.stringify({\n        title,\n        description: body,\n        source_branch: head,\n        target_branch: base,\n      }),\n    });\n\n    return this.mapMergeRequest(response);\n  }\n\n  async updatePullRequest(\n    _number: number,\n    _updates: Partial<Pick<PullRequest, 'title' | 'body'>>\n  ): Promise<PullRequest> {\n    return this.notImplemented();\n  }\n\n  async getPullRequest(number: number): Promise<PullRequest> {\n    const endpoint = `/projects/${this.projectId}/merge_requests/${number}`;\n    const response = await this.request<GitLabMergeRequest>(endpoint);\n    return this.mapMergeRequest(response);\n  }\n\n  async listPullRequests(\n    state: 'open' | 'closed' | 'all' = 'open'\n  ): Promise<PullRequest[]> {\n    const stateParam = state === 'open' ? 'opened' : state;\n    const endpoint = `/projects/${this.projectId}/merge_requests?state=${stateParam}`;\n    const response = await this.request<GitLabMergeRequest[]>(endpoint);\n    return response.map((mr) => this.mapMergeRequest(mr));\n  }\n\n  async mergePullRequest(\n    number: number,\n    _method: 'merge' | 'squash' | 'rebase' = 'merge'\n  ): Promise<void> {\n    const endpoint = `/projects/${this.projectId}/merge_requests/${number}/merge`;\n\n    await this.request(endpoint, {\n      method: 'PUT',\n    });\n  }\n\n  async createReviewComments(\n    _number: number,\n    _comments: ReviewCommentInput[],\n    _commitSha: string\n  ): Promise<ReviewCommentResult[]> {\n    return this.notImplemented();\n  }\n\n  async createIssue(title: string, body: string): Promise<Issue> {\n    const endpoint = `/projects/${this.projectId}/issues`;\n\n    const response = await this.request<GitLabIssue>(endpoint, {\n      method: 'POST',\n      body: JSON.stringify({\n        title,\n        description: body,\n      }),\n    });\n\n    return this.mapIssue(response);\n  }\n\n  async getIssue(number: number): Promise<Issue> {\n    const endpoint = `/projects/${this.projectId}/issues/${number}`;\n    const response = await this.request<GitLabIssue>(endpoint);\n    return this.mapIssue(response);\n  }\n\n  async listIssues(\n    state: 'open' | 'closed' | 'all' = 'open'\n  ): Promise<Issue[]> {\n    const stateParam = state === 'open' ? 'opened' : state;\n    const endpoint = `/projects/${this.projectId}/issues?state=${stateParam}`;\n    const response = await this.request<GitLabIssue[]>(endpoint);\n    return response.map((issue) => this.mapIssue(issue));\n  }\n\n  async addPullRequestComment(number: number, body: string): Promise<void> {\n    const endpoint = `/projects/${this.projectId}/merge_requests/${number}/notes`;\n\n    await this.request(endpoint, {\n      method: 'POST',\n      body: JSON.stringify({ body }),\n    });\n  }\n\n  async addIssueComment(number: number, body: string): Promise<void> {\n    const endpoint = `/projects/${this.projectId}/issues/${number}/notes`;\n\n    await this.request(endpoint, {\n      method: 'POST',\n      body: JSON.stringify({ body }),\n    });\n  }\n\n  async getRepository(): Promise<{\n    name: string;\n    description: string;\n    url: string;\n    defaultBranch: string;\n  }> {\n    const endpoint = `/projects/${this.projectId}`;\n    const response = await this.request<GitLabProject>(endpoint);\n\n    return {\n      name: response.name,\n      description: response.description,\n      url: response.web_url,\n      defaultBranch: response.default_branch,\n    };\n  }\n\n  async hasWriteAccess(): Promise<boolean> {\n    return this.notImplemented();\n  }\n\n  private mapMergeRequest(mr: GitLabMergeRequest): PullRequest {\n    // Map GitLab states to our standard states\n    let state: PullRequest['state'];\n    if (mr.state === 'merged') {\n      state = 'merged';\n    } else if (mr.state === 'opened') {\n      state = 'open';\n    } else {\n      state = 'closed';\n    }\n\n    return {\n      number: mr.iid,\n      title: mr.title,\n      body: mr.description,\n      state,\n      author: mr.author.username,\n      createdAt: mr.created_at,\n      updatedAt: mr.updated_at,\n      url: mr.web_url,\n    };\n  }\n\n  private mapIssue(issue: GitLabIssue): Issue {\n    // Map GitLab 'opened' to 'open'\n    const state: Issue['state'] = issue.state === 'opened' ? 'open' : 'closed';\n\n    return {\n      number: issue.iid,\n      title: issue.title,\n      body: issue.description,\n      state,\n      author: issue.author.username,\n      createdAt: issue.created_at,\n      url: issue.web_url,\n    };\n  }\n\n  private notImplemented<T = never>(): T {\n    throw new Error('GitLab provider git integration is not implemented yet');\n  }\n}\n\n// GitLab API types\ninterface GitLabUser {\n  username: string;\n}\n\ninterface GitLabMergeRequest {\n  iid: number;\n  title: string;\n  description: string;\n  state: 'opened' | 'closed' | 'merged';\n  author: GitLabUser;\n  created_at: string;\n  updated_at: string;\n  web_url: string;\n}\n\ninterface GitLabIssue {\n  iid: number;\n  title: string;\n  description: string;\n  state: 'opened' | 'closed';\n  author: GitLabUser;\n  created_at: string;\n  web_url: string;\n}\n\ninterface GitLabProject {\n  name: string;\n  description: string;\n  web_url: string;\n  default_branch: string;\n}\n\nexport default GitLabProvider;\n","/**\n * Gitea/Forgejo Provider\n * Gitea and Forgejo share the same API\n */\n\nimport {\n  BaseProvider,\n  type PullRequest,\n  type Issue,\n  type ProviderConfig,\n} from './base';\nimport type {\n  CreateBranchResult,\n  FileUpsertResult,\n  GitUser,\n  RepositoryFile,\n  ReviewCommentInput,\n  ReviewCommentResult,\n} from '../types';\n\nexport class GiteaProvider extends BaseProvider {\n  constructor(config: ProviderConfig) {\n    // Ensure URL includes API path\n    const rawUrl = (config.url || 'https://gitea.com/api/v1').replace(\n      /\\/$/,\n      ''\n    );\n    const url = rawUrl.endsWith('/api/v1') ? rawUrl : `${rawUrl}/api/v1`;\n\n    super({\n      ...config,\n      url,\n    });\n  }\n\n  protected getAuthHeader(): string {\n    return `token ${this.config.token}`;\n  }\n\n  async getCurrentUser(): Promise<GitUser> {\n    return this.notImplemented();\n  }\n\n  async createBranch(\n    _branchName: string,\n    _fromBranch: string\n  ): Promise<CreateBranchResult> {\n    return this.notImplemented();\n  }\n\n  async getFileContent(\n    _path: string,\n    _ref: string\n  ): Promise<RepositoryFile | null> {\n    return this.notImplemented();\n  }\n\n  async createOrUpdateFile(\n    _path: string,\n    _content: string,\n    _message: string,\n    _branch: string,\n    _sha?: string\n  ): Promise<FileUpsertResult> {\n    return this.notImplemented();\n  }\n\n  async createPullRequest(\n    title: string,\n    body: string,\n    head: string,\n    base: string\n  ): Promise<PullRequest> {\n    const endpoint = `/repos/${this.config.owner}/${this.config.repo}/pulls`;\n\n    const response = await this.request<GiteaPullRequest>(endpoint, {\n      method: 'POST',\n      body: JSON.stringify({\n        title,\n        body,\n        head,\n        base,\n      }),\n    });\n\n    return this.mapPullRequest(response);\n  }\n\n  async updatePullRequest(\n    _number: number,\n    _updates: Partial<Pick<PullRequest, 'title' | 'body'>>\n  ): Promise<PullRequest> {\n    return this.notImplemented();\n  }\n\n  async getPullRequest(number: number): Promise<PullRequest> {\n    const endpoint = `/repos/${this.config.owner}/${this.config.repo}/pulls/${number}`;\n    const response = await this.request<GiteaPullRequest>(endpoint);\n    return this.mapPullRequest(response);\n  }\n\n  async listPullRequests(\n    state: 'open' | 'closed' | 'all' = 'open'\n  ): Promise<PullRequest[]> {\n    const endpoint = `/repos/${this.config.owner}/${this.config.repo}/pulls?state=${state}`;\n    const response = await this.request<GiteaPullRequest[]>(endpoint);\n    return response.map((pr) => this.mapPullRequest(pr));\n  }\n\n  async mergePullRequest(\n    number: number,\n    method: 'merge' | 'squash' | 'rebase' = 'merge'\n  ): Promise<void> {\n    const endpoint = `/repos/${this.config.owner}/${this.config.repo}/pulls/${number}/merge`;\n\n    await this.request(endpoint, {\n      method: 'POST',\n      body: JSON.stringify({\n        Do: method,\n      }),\n    });\n  }\n\n  async createReviewComments(\n    _number: number,\n    _comments: ReviewCommentInput[],\n    _commitSha: string\n  ): Promise<ReviewCommentResult[]> {\n    return this.notImplemented();\n  }\n\n  async createIssue(title: string, body: string): Promise<Issue> {\n    const endpoint = `/repos/${this.config.owner}/${this.config.repo}/issues`;\n\n    const response = await this.request<GiteaIssue>(endpoint, {\n      method: 'POST',\n      body: JSON.stringify({\n        title,\n        body,\n      }),\n    });\n\n    return this.mapIssue(response);\n  }\n\n  async getIssue(number: number): Promise<Issue> {\n    const endpoint = `/repos/${this.config.owner}/${this.config.repo}/issues/${number}`;\n    const response = await this.request<GiteaIssue>(endpoint);\n    return this.mapIssue(response);\n  }\n\n  async listIssues(\n    state: 'open' | 'closed' | 'all' = 'open'\n  ): Promise<Issue[]> {\n    const endpoint = `/repos/${this.config.owner}/${this.config.repo}/issues?state=${state}`;\n    const response = await this.request<GiteaIssue[]>(endpoint);\n    return response.map((issue) => this.mapIssue(issue));\n  }\n\n  async addPullRequestComment(number: number, body: string): Promise<void> {\n    const endpoint = `/repos/${this.config.owner}/${this.config.repo}/issues/${number}/comments`;\n\n    await this.request(endpoint, {\n      method: 'POST',\n      body: JSON.stringify({ body }),\n    });\n  }\n\n  async addIssueComment(number: number, body: string): Promise<void> {\n    const endpoint = `/repos/${this.config.owner}/${this.config.repo}/issues/${number}/comments`;\n\n    await this.request(endpoint, {\n      method: 'POST',\n      body: JSON.stringify({ body }),\n    });\n  }\n\n  async getRepository(): Promise<{\n    name: string;\n    description: string;\n    url: string;\n    defaultBranch: string;\n  }> {\n    const endpoint = `/repos/${this.config.owner}/${this.config.repo}`;\n    const response = await this.request<GiteaRepository>(endpoint);\n\n    return {\n      name: response.name,\n      description: response.description,\n      url: response.html_url,\n      defaultBranch: response.default_branch,\n    };\n  }\n\n  async hasWriteAccess(): Promise<boolean> {\n    return this.notImplemented();\n  }\n\n  private mapPullRequest(pr: GiteaPullRequest): PullRequest {\n    return {\n      number: pr.number,\n      title: pr.title,\n      body: pr.body,\n      state: pr.merged ? 'merged' : pr.state,\n      author: pr.user.login,\n      createdAt: pr.created_at,\n      updatedAt: pr.updated_at,\n      url: pr.html_url,\n    };\n  }\n\n  private mapIssue(issue: GiteaIssue): Issue {\n    return {\n      number: issue.number,\n      title: issue.title,\n      body: issue.body,\n      state: issue.state,\n      author: issue.user.login,\n      createdAt: issue.created_at,\n      url: issue.html_url,\n    };\n  }\n\n  private notImplemented<T = never>(): T {\n    throw new Error('Gitea provider git integration is not implemented yet');\n  }\n}\n\n// Gitea API types\ninterface GiteaUser {\n  login: string;\n}\n\ninterface GiteaPullRequest {\n  number: number;\n  title: string;\n  body: string;\n  state: 'open' | 'closed';\n  merged: boolean;\n  user: GiteaUser;\n  created_at: string;\n  updated_at: string;\n  html_url: string;\n}\n\ninterface GiteaIssue {\n  number: number;\n  title: string;\n  body: string;\n  state: 'open' | 'closed';\n  user: GiteaUser;\n  created_at: string;\n  html_url: string;\n}\n\ninterface GiteaRepository {\n  name: string;\n  description: string;\n  html_url: string;\n  default_branch: string;\n}\n\n// ForgejoProvider is an alias for GiteaProvider (same API)\nexport class ForgejoProvider extends GiteaProvider {}\n\nexport default GiteaProvider;\n","/**\n * Local Git Provider\n * For local-only git operations without remote API\n */\n\nimport { BaseProvider, type PullRequest, type Issue } from './base';\nimport type {\n  CreateBranchResult,\n  FileUpsertResult,\n  GitUser,\n  RepositoryFile,\n  ReviewCommentInput,\n  ReviewCommentResult,\n} from '../types';\n\nexport class LocalProvider extends BaseProvider {\n  constructor() {\n    super({\n      url: '',\n      owner: 'local',\n      repo: 'local',\n    });\n  }\n\n  protected getAuthHeader(): string | undefined {\n    return undefined;\n  }\n\n  getCurrentUser(): Promise<GitUser> {\n    return Promise.resolve({ login: 'local' });\n  }\n\n  createBranch(): Promise<CreateBranchResult> {\n    return Promise.reject(\n      new Error('Branches are not supported for local provider')\n    );\n  }\n\n  getFileContent(): Promise<RepositoryFile | null> {\n    return Promise.reject(\n      new Error('File access is not supported for local provider')\n    );\n  }\n\n  createOrUpdateFile(): Promise<FileUpsertResult> {\n    return Promise.reject(\n      new Error('File writes are not supported for local provider')\n    );\n  }\n\n  createPullRequest(): Promise<PullRequest> {\n    return Promise.reject(\n      new Error('Pull requests not supported for local provider')\n    );\n  }\n\n  getPullRequest(): Promise<PullRequest> {\n    return Promise.reject(\n      new Error('Pull requests not supported for local provider')\n    );\n  }\n\n  updatePullRequest(): Promise<PullRequest> {\n    return Promise.reject(\n      new Error('Pull requests not supported for local provider')\n    );\n  }\n\n  listPullRequests(): Promise<PullRequest[]> {\n    return Promise.resolve([]);\n  }\n\n  mergePullRequest(): Promise<void> {\n    return Promise.reject(\n      new Error('Pull requests not supported for local provider')\n    );\n  }\n\n  createReviewComments(\n    _number: number,\n    _comments: ReviewCommentInput[],\n    _commitSha: string\n  ): Promise<ReviewCommentResult[]> {\n    return Promise.resolve([]);\n  }\n\n  createIssue(): Promise<Issue> {\n    return Promise.reject(new Error('Issues not supported for local provider'));\n  }\n\n  getIssue(): Promise<Issue> {\n    return Promise.reject(new Error('Issues not supported for local provider'));\n  }\n\n  listIssues(): Promise<Issue[]> {\n    return Promise.resolve([]);\n  }\n\n  addPullRequestComment(): Promise<void> {\n    return Promise.reject(\n      new Error('Comments not supported for local provider')\n    );\n  }\n\n  addIssueComment(): Promise<void> {\n    return Promise.reject(\n      new Error('Comments not supported for local provider')\n    );\n  }\n\n  getRepository(): Promise<{\n    name: string;\n    description: string;\n    url: string;\n    defaultBranch: string;\n  }> {\n    return Promise.resolve({\n      name: 'local',\n      description: 'Local repository',\n      url: '',\n      defaultBranch: 'main',\n    });\n  }\n\n  hasWriteAccess(): Promise<boolean> {\n    return Promise.resolve(true);\n  }\n}\n\nexport default LocalProvider;\n","/**\n * Git Providers\n * Exports all provider implementations\n */\n\nexport { BaseProvider } from './base';\nexport { GitHubProvider } from './github';\nexport { GitLabProvider } from './gitlab';\nexport { GiteaProvider, ForgejoProvider } from './gitea';\nexport { LocalProvider } from './local';\n\nexport type { PullRequest, Issue, ProviderConfig } from './base';\n\nimport { GitHubProvider } from './github';\nimport { GitLabProvider } from './gitlab';\nimport { GiteaProvider } from './gitea';\nimport { LocalProvider } from './local';\nimport type { BaseProvider, ProviderConfig } from './base';\nimport type { ResolvedGitConfig } from '../types';\n\n/**\n * Create a provider instance based on type\n */\nexport function createProvider(resolved: ResolvedGitConfig): BaseProvider {\n  const { provider, repository, auth, options } = resolved;\n\n  const apiUrl = isString(options?.apiUrl)\n    ? (options?.apiUrl as string)\n    : undefined;\n\n  const fallbackToken = isString(options?.token)\n    ? (options?.token as string)\n    : undefined;\n\n  const baseConfig: ProviderConfig = {\n    url: apiUrl,\n    token: auth?.mode === 'pat' ? auth.token : fallbackToken,\n    owner: repository.owner,\n    repo: repository.name,\n    auth,\n  };\n\n  switch (provider) {\n    case 'github':\n      return new GitHubProvider({\n        ...baseConfig,\n        url: baseConfig.url || 'https://api.github.com',\n      });\n    case 'gitlab':\n      return new GitLabProvider({\n        ...baseConfig,\n        url: baseConfig.url || 'https://gitlab.com/api/v4',\n        projectId: isString(options?.projectId)\n          ? (options?.projectId as string)\n          : undefined,\n      });\n    case 'gitea':\n    case 'forgejo':\n      return new GiteaProvider({\n        ...baseConfig,\n        url: baseConfig.url || 'https://gitea.com/api/v1',\n      });\n    case 'local':\n      return new LocalProvider();\n    default:\n      throw new Error(`Unknown provider type: ${provider as string}`);\n  }\n}\n\nexport default createProvider;\n\nfunction isString(value: unknown): value is string {\n  return typeof value === 'string' && value.trim().length > 0;\n}\n","import { createModuleLogger } from '@utils/debug';\nimport type { BaseProvider } from './providers';\nimport type { ResolvedGitConfig } from './types';\n\nconst logger = createModuleLogger('GitIntegration');\n\nexport interface ReviewSubmissionPayload {\n  reviewer: string;\n  changes: unknown;\n  comments?: unknown;\n  metadata?: Record<string, unknown>;\n}\n\nexport class GitIntegrationService {\n  constructor(\n    private readonly provider: BaseProvider,\n    private readonly config: ResolvedGitConfig\n  ) {}\n\n  public getRepositoryConfig(): ResolvedGitConfig['repository'] {\n    return this.config.repository;\n  }\n\n  public getProvider(): BaseProvider {\n    return this.provider;\n  }\n\n  public async submitReview(_payload: ReviewSubmissionPayload): Promise<void> {\n    logger.warn('Git integration submitReview is not implemented yet');\n    throw new Error('Git integration workflow is not implemented yet');\n  }\n}\n\nexport default GitIntegrationService;\n","import { createModuleLogger } from '@utils/debug';\n\nexport interface EmbeddedSourceRecord {\n  filename: string;\n  content: string;\n  originalContent: string;\n  lastModified: string;\n  version: string;\n  commitMessage?: string;\n}\n\ninterface PersistedSourcePayload {\n  timestamp: string;\n  version?: string;\n  sources: Record<string, EmbeddedSourcePersisted>;\n}\n\ninterface EmbeddedSourcePersisted {\n  content: string;\n  originalContent: string;\n  lastModified: string;\n  version: string;\n  commitMessage?: string;\n}\n\ninterface SaveResult {\n  version: string;\n  timestamp: string;\n}\n\nconst STORAGE_KEY_DEFAULT = 'quarto-review:embedded-sources';\nconst EMBEDDED_SOURCES_ID = 'embedded-sources';\n\n/**\n * Provides a lightweight persistence layer when no git provider is configured.\n * Sources are cached inside the rendered HTML and mirrored to localStorage so\n * that refreshes do not lose edits.\n */\nexport class EmbeddedSourceStore {\n  private readonly logger = createModuleLogger('EmbeddedSourceStore');\n  private readonly storageKey: string;\n  private readonly storage: Storage | null;\n  private readonly sources = new Map<string, EmbeddedSourceRecord>();\n  private readonly readyPromise: Promise<void>;\n\n  constructor(options?: { storageKey?: string }) {\n    this.storageKey = options?.storageKey ?? STORAGE_KEY_DEFAULT;\n    this.storage = this.resolveLocalStorage();\n    this.readyPromise = this.initialize();\n  }\n\n  /**\n   * Exposes a promise that resolves when initial data loading has completed.\n   */\n  public get ready(): Promise<void> {\n    return this.readyPromise;\n  }\n\n  /**\n   * Returns a read-only list of embedded sources currently tracked.\n   */\n  public async listSources(): Promise<EmbeddedSourceRecord[]> {\n    await this.readyPromise;\n    return Array.from(this.sources.values()).map((record) => ({\n      ...record,\n    }));\n  }\n\n  public async getSource(\n    filename: string\n  ): Promise<EmbeddedSourceRecord | undefined> {\n    await this.readyPromise;\n    const record = this.sources.get(filename);\n    return record ? { ...record } : undefined;\n  }\n\n  public async saveFile(\n    filename: string,\n    content: string,\n    message = 'Update file'\n  ): Promise<SaveResult> {\n    await this.readyPromise;\n\n    const timestamp = new Date().toISOString();\n    const version = this.generateVersionId();\n    const existing = this.sources.get(filename);\n\n    this.sources.set(filename, {\n      filename,\n      content,\n      originalContent: existing?.originalContent ?? content,\n      lastModified: timestamp,\n      version,\n      commitMessage: message,\n    });\n\n    this.updateEmbeddedSources();\n    this.saveToLocalStorage();\n\n    return { version, timestamp };\n  }\n\n  public async clearLocalCache(): Promise<void> {\n    await this.readyPromise;\n    if (!this.storage) return;\n    this.storage.removeItem(this.storageKey);\n  }\n\n  private async initialize(): Promise<void> {\n    this.loadFromDocument();\n    this.loadFromLocalStorage();\n  }\n\n  private loadFromDocument(): void {\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    const script = document.getElementById(EMBEDDED_SOURCES_ID);\n    if (!script || !script.textContent) {\n      return;\n    }\n\n    try {\n      const payload = JSON.parse(script.textContent) as PersistedSourcePayload;\n      if (payload?.sources) {\n        Object.entries(payload.sources).forEach(([filename, data]) => {\n          this.sources.set(filename, {\n            filename,\n            content: data.content,\n            originalContent: data.originalContent ?? data.content,\n            lastModified: data.lastModified ?? payload.timestamp,\n            version:\n              data.version ?? payload.version ?? this.generateVersionId(),\n            commitMessage: data.commitMessage,\n          });\n        });\n      }\n      this.logger.debug(\n        'Loaded embedded sources from document',\n        this.sources.size\n      );\n    } catch (error) {\n      this.logger.warn('Failed to parse embedded sources in document:', error);\n    }\n  }\n\n  private loadFromLocalStorage(): void {\n    if (!this.storage) return;\n    const raw = this.storage.getItem(this.storageKey);\n    if (!raw) return;\n\n    try {\n      const payload = JSON.parse(raw) as PersistedSourcePayload;\n      if (!payload?.sources) return;\n\n      Object.entries(payload.sources).forEach(([filename, data]) => {\n        const existing = this.sources.get(filename);\n        if (!existing) {\n          this.sources.set(filename, {\n            filename,\n            content: data.content,\n            originalContent: data.originalContent ?? data.content,\n            lastModified: data.lastModified,\n            version: data.version,\n            commitMessage: data.commitMessage,\n          });\n          return;\n        }\n\n        // Prefer whichever record is newer\n        if (\n          new Date(data.lastModified).getTime() >\n          new Date(existing.lastModified).getTime()\n        ) {\n          this.sources.set(filename, {\n            filename,\n            content: data.content,\n            originalContent: existing.originalContent,\n            lastModified: data.lastModified,\n            version: data.version,\n            commitMessage: data.commitMessage ?? existing.commitMessage,\n          });\n        }\n      });\n\n      this.logger.debug(\n        'Merged embedded sources from localStorage',\n        Object.keys(payload.sources).length\n      );\n    } catch (error) {\n      this.logger.warn(\n        'Failed to parse embedded sources from localStorage:',\n        error\n      );\n    }\n  }\n\n  private updateEmbeddedSources(): void {\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    const payload: PersistedSourcePayload = {\n      timestamp: new Date().toISOString(),\n      sources: {},\n      version: this.generateVersionId(),\n    };\n\n    this.sources.forEach((record, filename) => {\n      payload.sources[filename] = {\n        content: record.content,\n        originalContent: record.originalContent,\n        lastModified: record.lastModified,\n        version: record.version,\n        commitMessage: record.commitMessage,\n      };\n    });\n\n    const script = this.ensureEmbeddedScript();\n    script.textContent = JSON.stringify(payload, null, 2);\n  }\n\n  private saveToLocalStorage(): void {\n    if (!this.storage) return;\n    const payload: PersistedSourcePayload = {\n      timestamp: new Date().toISOString(),\n      sources: {},\n    };\n\n    this.sources.forEach((record, filename) => {\n      payload.sources[filename] = {\n        content: record.content,\n        originalContent: record.originalContent,\n        lastModified: record.lastModified,\n        version: record.version,\n        commitMessage: record.commitMessage,\n      };\n    });\n\n    try {\n      this.storage.setItem(this.storageKey, JSON.stringify(payload));\n    } catch (error) {\n      this.logger.warn(\n        'Failed to persist embedded sources to localStorage:',\n        error\n      );\n    }\n  }\n\n  private ensureEmbeddedScript(): HTMLScriptElement {\n    let script = document.getElementById(\n      EMBEDDED_SOURCES_ID\n    ) as HTMLScriptElement | null;\n    if (!script) {\n      script = document.createElement('script');\n      script.id = EMBEDDED_SOURCES_ID;\n      script.type = 'application/json';\n      document.body.appendChild(script);\n    }\n    return script;\n  }\n\n  private resolveLocalStorage(): Storage | null {\n    try {\n      if (typeof window !== 'undefined' && window.localStorage) {\n        return window.localStorage;\n      }\n    } catch (error) {\n      this.logger.debug('localStorage unavailable:', error);\n    }\n    return null;\n  }\n\n  private generateVersionId(): string {\n    return `${Date.now().toString(36)}-${Math.random().toString(36).slice(2, 8)}`;\n  }\n}\n","import { createModuleLogger } from '@utils/debug';\nimport type { ReviewGitConfig } from '@/types';\nimport { resolveGitConfig } from './config';\nimport { createProvider } from './providers';\nimport type { BaseProvider } from './providers';\nimport GitIntegrationService, {\n  type ReviewSubmissionPayload,\n} from './integration';\nimport type { ResolvedGitConfig } from './types';\nimport { EmbeddedSourceStore, type EmbeddedSourceRecord } from './fallback';\n\nconst logger = createModuleLogger('GitModule');\n\nexport class GitModule {\n  private readonly resolution: ReturnType<typeof resolveGitConfig>;\n  private readonly provider?: BaseProvider;\n  private readonly integration?: GitIntegrationService;\n  private readonly fallbackStore: EmbeddedSourceStore;\n\n  constructor(rawConfig?: ReviewGitConfig) {\n    this.resolution = resolveGitConfig(rawConfig);\n    this.fallbackStore = new EmbeddedSourceStore();\n\n    if (!this.resolution) {\n      logger.info('Git integration disabled (no configuration provided)');\n      return;\n    }\n\n    try {\n      this.provider = createProvider(this.resolution.config);\n      this.integration = new GitIntegrationService(\n        this.provider,\n        this.resolution.config\n      );\n      const repo = this.resolution.config.repository;\n      logger.debug(\n        `Git integration configured for ${repo.owner}/${repo.name} (base: ${repo.baseBranch})`\n      );\n    } catch (error) {\n      logger.error('Failed to initialize git provider:', error);\n    }\n  }\n\n  public isEnabled(): boolean {\n    return Boolean(this.integration);\n  }\n\n  public getConfig(): ResolvedGitConfig | null {\n    return this.resolution?.config ?? null;\n  }\n\n  public getProvider(): BaseProvider | undefined {\n    return this.provider;\n  }\n\n  public async submitReview(payload: ReviewSubmissionPayload): Promise<void> {\n    if (!this.integration) {\n      throw new Error('Git integration is not configured');\n    }\n\n    await this.integration.submitReview(payload);\n  }\n\n  /**\n   * Backwards compatible placeholder for the legacy `save` workflow.\n   * The new git integration operates via pull requests instead of direct saves.\n   */\n  public async save(\n    _content: string,\n    _summary: unknown,\n    _filepath = 'document.qmd'\n  ): Promise<string> {\n    const message = typeof _summary === 'string' ? _summary : 'Update file';\n\n    if (!this.integration) {\n      const result = await this.fallbackStore.saveFile(\n        _filepath,\n        _content,\n        message\n      );\n      return result.version;\n    }\n\n    logger.warn(\n      'Direct git saves are not supported yet. Submit a review instead.'\n    );\n    return '';\n  }\n\n  public async listEmbeddedSources(): Promise<EmbeddedSourceRecord[]> {\n    return this.fallbackStore.listSources();\n  }\n\n  public async getEmbeddedSource(\n    filename: string\n  ): Promise<EmbeddedSourceRecord | undefined> {\n    return this.fallbackStore.getSource(filename);\n  }\n}\n\nexport { EmbeddedSourceStore } from './fallback';\nexport default GitModule;\n","/**\n * User Module\n * Authentication and permission management\n */\n\nimport { createModuleLogger } from '@utils/debug';\nimport type { User } from '@/types';\n\nconst logger = createModuleLogger('UserModule');\n\nexport interface AuthConfig {\n  storageKey?: string;\n  sessionTimeout?: number; // in milliseconds\n}\n\nexport class UserModule {\n  private currentUser: User | null = null;\n  private config: Required<AuthConfig>;\n  private sessionTimer: ReturnType<typeof setTimeout> | null = null;\n\n  constructor(config: AuthConfig = {}) {\n    this.config = {\n      storageKey: config.storageKey || 'quarto-review-user',\n      sessionTimeout: config.sessionTimeout || 3600000, // 1 hour default\n    };\n\n    this.loadFromStorage();\n  }\n\n  /**\n   * Authenticate a user\n   */\n  public login(user: User): void {\n    this.currentUser = user;\n    this.saveToStorage();\n    this.startSessionTimer();\n  }\n\n  /**\n   * Log out the current user\n   */\n  public logout(): void {\n    this.currentUser = null;\n    this.clearStorage();\n    this.clearSessionTimer();\n  }\n\n  /**\n   * Get current user\n   */\n  public getCurrentUser(): User | null {\n    return this.currentUser;\n  }\n\n  /**\n   * Check if user is authenticated\n   */\n  public isAuthenticated(): boolean {\n    return this.currentUser !== null;\n  }\n\n  /**\n   * Check if user has a specific role\n   */\n  public hasRole(role: User['role']): boolean {\n    return this.currentUser?.role === role;\n  }\n\n  /**\n   * Check if user can edit\n   */\n  public canEdit(): boolean {\n    if (!this.currentUser) return false;\n    return (\n      this.currentUser.role === 'editor' || this.currentUser.role === 'admin'\n    );\n  }\n\n  /**\n   * Check if user can view\n   */\n  public canView(): boolean {\n    return this.isAuthenticated();\n  }\n\n  /**\n   * Check if user is admin\n   */\n  public isAdmin(): boolean {\n    return this.currentUser?.role === 'admin';\n  }\n\n  /**\n   * Check if user can comment\n   */\n  public canComment(): boolean {\n    return this.isAuthenticated();\n  }\n\n  /**\n   * Check if user can delete comments\n   */\n  public canDeleteComment(commentUserId: string): boolean {\n    if (!this.currentUser) return false;\n\n    // Admins can delete any comment\n    if (this.currentUser.role === 'admin') return true;\n\n    // Users can delete their own comments\n    return this.currentUser.id === commentUserId;\n  }\n\n  /**\n   * Check if user can resolve comments\n   */\n  public canResolveComment(): boolean {\n    return this.canEdit();\n  }\n\n  /**\n   * Check if user can push to git\n   */\n  public canPush(): boolean {\n    return this.canEdit();\n  }\n\n  /**\n   * Check if user can merge pull requests\n   */\n  public canMerge(): boolean {\n    return this.isAdmin();\n  }\n\n  /**\n   * Update user information\n   */\n  public updateUser(updates: Partial<User>): void {\n    if (!this.currentUser) return;\n\n    this.currentUser = {\n      ...this.currentUser,\n      ...updates,\n    };\n\n    this.saveToStorage();\n  }\n\n  /**\n   * Save user to storage\n   */\n  private saveToStorage(): void {\n    if (!this.currentUser) return;\n\n    try {\n      localStorage.setItem(\n        this.config.storageKey,\n        JSON.stringify(this.currentUser)\n      );\n    } catch (error) {\n      logger.error('Failed to save user to storage:', error);\n    }\n  }\n\n  /**\n   * Load user from storage\n   */\n  private loadFromStorage(): void {\n    try {\n      const stored = localStorage.getItem(this.config.storageKey);\n      if (stored) {\n        this.currentUser = JSON.parse(stored) as User;\n        this.startSessionTimer();\n      }\n    } catch (error) {\n      logger.error('Failed to load user from storage:', error);\n    }\n  }\n\n  /**\n   * Clear storage\n   */\n  private clearStorage(): void {\n    try {\n      localStorage.removeItem(this.config.storageKey);\n    } catch (error) {\n      logger.error('Failed to clear storage:', error);\n    }\n  }\n\n  /**\n   * Start session timeout timer\n   */\n  private startSessionTimer(): void {\n    this.clearSessionTimer();\n\n    this.sessionTimer = setTimeout(() => {\n      this.logout();\n    }, this.config.sessionTimeout);\n  }\n\n  /**\n   * Clear session timer\n   */\n  private clearSessionTimer(): void {\n    if (this.sessionTimer) {\n      clearTimeout(this.sessionTimer);\n      this.sessionTimer = null;\n    }\n  }\n\n  /**\n   * Refresh session (reset timer)\n   */\n  public refreshSession(): void {\n    if (this.isAuthenticated()) {\n      this.startSessionTimer();\n    }\n  }\n\n  /**\n   * Create a guest user\n   */\n  public static createGuest(name?: string): User {\n    return {\n      id: `guest-${Date.now()}`,\n      name: name || 'Guest',\n      role: 'viewer',\n    };\n  }\n\n  /**\n   * Create an editor user\n   */\n  public static createEditor(id: string, name: string, email?: string): User {\n    return {\n      id,\n      name,\n      email,\n      role: 'editor',\n    };\n  }\n\n  /**\n   * Create an admin user\n   */\n  public static createAdmin(id: string, name: string, email?: string): User {\n    return {\n      id,\n      name,\n      email,\n      role: 'admin',\n    };\n  }\n\n  /**\n   * Get permission summary for current user\n   */\n  public getPermissions(): {\n    canView: boolean;\n    canEdit: boolean;\n    canComment: boolean;\n    canPush: boolean;\n    canMerge: boolean;\n    isAdmin: boolean;\n  } {\n    return {\n      canView: this.canView(),\n      canEdit: this.canEdit(),\n      canComment: this.canComment(),\n      canPush: this.canPush(),\n      canMerge: this.canMerge(),\n      isAdmin: this.isAdmin(),\n    };\n  }\n}\n\nexport default UserModule;\n","/**\n * Quarto Review Extension\n * Main entry point for the review functionality\n */\n\nimport { ChangesModule } from '@modules/changes';\nimport { MarkdownModule, type MarkdownOptions } from '@modules/markdown';\nimport { CommentsModule } from '@modules/comments';\nimport { UIModule } from '@modules/ui';\nimport { GitModule } from '@modules/git';\nimport { UserModule } from '@modules/user';\nimport { debugLogger, type DebugConfig } from '@utils/debug';\nimport type { ReviewGitConfig } from '@/types';\n\n// Export debug logger and configuration\nexport {\n  debugLogger,\n  createModuleLogger,\n  printDebugHelp,\n  type DebugConfig,\n} from '@utils/debug';\n\n// Export types for documentation\nexport type {\n  Element,\n  ElementMetadata,\n  ElementType,\n  Operation,\n  OperationType,\n  OperationData,\n  Comment,\n  User,\n  GitProvider,\n} from '@/types';\n\n// Export module-specific types\nexport type { ChangeSummaryDashboard } from '@modules/ui/change-summary';\n\n// Re-export all modules for advanced usage\nexport { ChangesModule } from '@modules/changes';\nexport { MarkdownModule } from '@modules/markdown';\nexport { CommentsModule } from '@modules/comments';\nexport { UIModule } from '@modules/ui';\nexport { GitModule } from '@modules/git';\nexport { UserModule } from '@modules/user';\n\n/**\n * Configuration options for Quarto Review extension\n */\nexport interface QuartoReviewConfig {\n  /** Enable automatic saving of changes */\n  autoSave?: boolean;\n  /** Interval in milliseconds for auto-save (default: 5 minutes) */\n  autoSaveInterval?: number;\n  /** Git provider to use for version control */\n  gitProvider?: 'github' | 'gitlab' | 'gitea' | 'local';\n  /** Git integration configuration sourced from Quarto metadata */\n  git?: ReviewGitConfig;\n  /** Enable comments feature */\n  enableComments?: boolean;\n  /** Enable translation support */\n  enableTranslation?: boolean;\n  /** Debug configuration for development */\n  debug?: Partial<DebugConfig>;\n  /** Markdown rendering configuration */\n  markdown?: MarkdownOptions;\n}\n\nexport class QuartoReview {\n  private changes: ChangesModule;\n  private markdown: MarkdownModule;\n  private comments: CommentsModule;\n  private ui: UIModule;\n  private git: GitModule;\n  public user: UserModule; // Public so it can be accessed for permissions\n  private config: QuartoReviewConfig;\n  private autoSaveInterval?: number;\n\n  constructor(config: QuartoReviewConfig = {}) {\n    this.config = {\n      autoSave: false,\n      autoSaveInterval: 300000, // 5 minutes\n      enableComments: true,\n      enableTranslation: false,\n      ...config,\n    };\n\n    // Configure debug logger if debug options are provided\n    if (this.config.debug) {\n      debugLogger.setConfig(this.config.debug);\n    }\n\n    // Initialize modules\n    this.changes = new ChangesModule();\n    this.markdown = new MarkdownModule(this.config.markdown);\n    this.comments = new CommentsModule();\n    this.user = new UserModule();\n    this.git = new GitModule(this.config.git);\n    this.ui = new UIModule({\n      changes: this.changes,\n      markdown: this.markdown,\n      comments: this.comments,\n      inlineEditing: true, // Enable inline editing mode by default\n    });\n\n    this.initialize();\n  }\n\n  private initialize(): void {\n    // Parse the rendered HTML to extract original elements\n    this.changes.initializeFromDOM();\n\n    // Set up UI event listeners\n    this.ui.attachEventListeners();\n\n    // Set up auto-save if enabled\n    if (this.config.autoSave) {\n      this.setupAutoSave();\n    }\n    this.ui.refresh();\n  }\n\n  private setupAutoSave(): void {\n    this.autoSaveInterval = window.setInterval(() => {\n      if (this.changes.hasUnsavedOperations()) {\n        this.save().catch((error) => {\n          console.error('Auto-save failed:', error);\n        });\n      }\n    }, this.config.autoSaveInterval);\n  }\n\n  public async save(): Promise<void> {\n    // Export clean markdown without CriticMarkup annotations\n    const markdown = this.changes.toCleanMarkdown();\n    await this.git.save(markdown, this.changes.summarizeOperations());\n    this.changes.markAsSaved();\n  }\n\n  public undo(): void {\n    this.changes.undo();\n    this.ui.refresh();\n  }\n\n  public redo(): void {\n    this.changes.redo();\n    this.ui.refresh();\n  }\n\n  public destroy(): void {\n    // Clear auto-save interval\n    if (this.autoSaveInterval) {\n      clearInterval(this.autoSaveInterval);\n      this.autoSaveInterval = undefined;\n    }\n    // Destroy UI module and all its submodules\n    this.ui.destroy();\n  }\n}\n\n// Auto-initialize if data-review attribute is present\nif (typeof window !== 'undefined') {\n  window.addEventListener('DOMContentLoaded', () => {\n    const reviewElement = document.querySelector('[data-review]');\n    if (reviewElement) {\n      const config = reviewElement.getAttribute('data-review-config');\n      const parsedConfig = config ? JSON.parse(config) : {};\n      new QuartoReview(parsedConfig);\n    }\n  });\n}\n\nexport default QuartoReview;\n"],"names":["Diff","oldStr","newStr","options","callback","oldString","newString","oldTokens","newTokens","_a","done","value","newLen","oldLen","editLength","maxEditLength","maxExecutionTime","abortAfterTimestamp","bestPath","newPos","minDiagonalToConsider","maxDiagonalToConsider","execEditLength","diagonalPath","basePath","removePath","addPath","canAdd","addPathNewPos","canRemove","exec","ret","path","added","removed","oldPosInc","last","oldPos","commonCount","left","right","array","i","chars","changeObjects","lastComponent","components","nextComponent","componentLen","componentPos","component","oldValue","extendedWordChars","WordsWithSpaceDiff","regex","wordsWithSpaceDiff","diffWordsWithSpace","LineDiff","tokenize","lineDiff","diffLines","retLines","linesAndNewlines","line","ArrayDiff","arrayDiff","diffArrays","oldArr","newArr","generateChanges","oldContent","newContent","changes","diffs","Diff.diffLines","position","part","next","nextValue","wordDiffs","Diff.diffWordsWithSpace","localPos","diff","changesToCriticMarkup","applyChanges","tokenizeMarkdown","parts","Diff.diffArrays","result","partValue","token","formatBlock","formatBlockPair","text","kind","splitIntoLines","formatLine","oldBlocks","newBlocks","m","n","oldMeta","block","normalizeBlock","blockSignature","newMeta","lcs","currentRow","nextRow","j","oldEntry","newEntry","diag","down","skipOld","skipNew","formatBlockSubstitution","entry","oldSegment","newSegment","oldLines","newLines","max","buffer","index","oldLine","newLine","isListItemLine","normalizeListMarker","getListMarker","formatListLineChange","isTableLine","formatTableLineChange","formatLineDiff","oldBreak","splitLine","newBreak","oldPrefix","oldBody","splitListPrefix","newPrefix","newBody","lineResult","wrapWithMarkup","oldNewline","newNewline","prefix","newline","hasAdditions","hasDeletions","hasUnchanged","wrapWithSubstitution","trimmedResult","isAlignmentRow","oldCells","newCells","cellCount","formattedCells","oldCell","newCell","formatTableCellChange","content","body","fullLine","formatTableLine","oldText","newText","leading","trailing","oldTrimmed","newTrimmed","leadingMatch","trailingMatch","match","prefixMatch","bodyMatch","marker","trimmed","cells","cell","formatted","inner","lines","tokens","indent","getIndentWidth","nextLine","isContinuationLine","stripListFormatting","indentLength","baseIndent","cleanedBody","removeMarkupForNormalization","normalizedPrefix","trimmedBody","sortedChanges","a","b","change","before","after","stripCriticMarkup","acceptMode","ChangesModule","__publicField","editableElements","elem","id","type","level","sourceLine","sourceColumn","metadata","element","embeddedMarkdown","markdown","map","entity","attrs","child","attr","cls","elementId","data","userId","operation","segments","normalizedSegments","existingGeneratedIds","resultIds","removedIds","firstSegment","tailSegments","lastId","reuseCount","segment","existingId","newId","newMetadata","metadataChanged","fromPosition","toPosition","elements","baseline","targetContent","op","newElement","e","parentId","activeIds","state","parentIndex","el","orderedIds","candidate","candidateId","updated","pattern","cleaned","previous","_match","minIndent","reindented","stripped","counts","original","firstInsert","emptyOptions","toString","settings","includeImageAlt","includeHtml","one","node","all","values","bail","error","hasOwn","toStr","defineProperty","gOPD","isArray","arr","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","key","setProperty","target","getProperty","name","extend","src","copy","copyIsArray","clone","length","deep","prototype","trough","fns","pipeline","run","use","middlewareIndex","output","fn","wrap","middelware","middleware","called","wrapped","parameters","fnExpectsCallback","exception","then","stringifyPosition","point","pos","VFileMessage","causeOrReason","optionsOrParentOrPlace","origin","reason","legacyCause","parent","start","minpath","basename","dirname","extname","join","assertPath","end","seenNonSlash","firstNonSlashEnd","extnameIndex","unmatchedSlash","startPart","startDot","preDotState","code","joined","normalize","absolute","normalizeString","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","minproc","cwd","isUrl","fileUrlOrPath","urlToPath","getPathFromURLPosix","url","pathname","third","order","VFile","isUint8Array","field","assertNonEmpty","assertPart","stem","message","encoding","CallableInstance","property","proto","apply","own","Processor","destination","attacher","assertUnfrozen","self","transformer","file","realFile","vfile","parser","assertParser","assertCompiler","executor","resolve","reject","parseTree","tree","realDone","compileTree","compileResult","looksLikeAValue","complete","assertDone","assertNode","transformers","outputTree","resultingTree","compiler","attachers","namespace","addPlugin","addList","addPreset","add","plugin","plugins","thing","entryIndex","primary","rest","currentPrimary","isPlainObj","unified","frozen","asyncName","looksLikeAVFile","decodeNamedCharacterReference","characterReference","character","splice","list","remove","items","chunkStart","push","hasOwnProperty","combineExtensions","extensions","syntaxExtension","extension","hook","constructs","existing","decodeNumericCharacterReference","base","normalizeIdentifier","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","check","normalizeUri","skip","replace","factorySpace","effects","ok","limit","size","initializeContent","contentStart","afterContentStartConstruct","paragraphInitial","lineStart","document","initializeDocument","containerConstruct","tokenizeContainer","stack","continued","childFlow","childToken","lineStartOffset","item","documentContinue","checkNewContainers","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","flowStart","thereIsANewContainer","thereIsNoNewContainer","containerContinue","flowContinue","writeToChild","endOfFile","stream","seen","nok","classifyCharacter","resolveAll","events","context","attention","resolveAllAttention","tokenizeAttention","open","group","openingSequence","closingSequence","nextEvents","offset","movePoint","attentionMarkers","inside","close","autolink","tokenizeAutolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","blankLine","tokenizeBlankLine","blockQuote","tokenizeBlockQuoteContinuation","exit","tokenizeBlockQuoteStart","contStart","contBefore","characterEscape","tokenizeCharacterEscape","tokenizeCharacterReference","test","numeric","nonLazyContinuation","tokenizeNonLazyContinuation","codeFenced","tokenizeCodeFenced","closeStart","tokenizeCloseStart","initialPrefix","sizeOpen","beforeSequenceOpen","tail","sequenceOpen","infoBefore","atNonLazyBreak","info","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","startBefore","beforeSequenceClose","sequenceClose","sequenceCloseAfter","codeIndented","tokenizeCodeIndented","furtherStart","tokenizeFurtherStart","afterPrefix","atBreak","codeText","resolveCodeText","tokenizeCodeText","tailExitIndex","headEnterIndex","enter","between","SpliceBuffer","initial","stop","deleteCount","count","chunkedPush","subtokenize","eventsArray","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","subcontent","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","slice","resolveContent","tokenizeContent","continuationConstruct","tokenizeContinuation","chunkInside","contentEnd","contentContinue","startLookahead","prefixed","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","begin","escape","factoryWhitespace","definition","tokenizeDefinition","titleBefore","tokenizeTitleBefore","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","hardBreakEscape","tokenizeHardBreakEscape","headingAtx","resolveHeadingAtx","tokenizeHeadingAtx","sequenceFurther","htmlBlockNames","htmlRawNames","htmlFlow","resolveToHtmlFlow","tokenizeHtmlFlow","blankLineBefore","tokenizeBlankLineBefore","nonLazyContinuationStart","tokenizeNonLazyContinuationStart","closingTag","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","continuation","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationAfter","continuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","htmlText","tokenizeHtmlText","returnState","instruction","tagOpen","declaration","commentEnd","comment","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelEnd","resolveAllLabelEnd","resolveToLabelEnd","tokenizeLabelEnd","resourceConstruct","tokenizeResource","referenceFullConstruct","tokenizeReferenceFull","referenceCollapsedConstruct","tokenizeReferenceCollapsed","newEvents","media","label","labelStart","defined","labelEndNok","labelEndOk","referenceNotFull","resourceStart","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFull","referenceFullAfter","referenceFullMissing","referenceCollapsedStart","referenceCollapsedOpen","labelStartImage","tokenizeLabelStartImage","labelStartLink","tokenizeLabelStartLink","lineEnding","tokenizeLineEnding","thematicBreak","tokenizeThematicBreak","sequence","tokenizeListContinuation","tokenizeListEnd","tokenizeListStart","listItemPrefixWhitespaceConstruct","tokenizeListItemPrefixWhitespace","indentConstruct","tokenizeIndent","initialSize","atMarker","onBlank","endOfPrefix","otherPrefix","notBlank","notInCurrentItem","setextUnderline","resolveToSetextUnderline","tokenizeSetextUnderline","heading","paragraph","flow","initializeFlow","atBlankEnding","afterConstruct","resolver","createResolver","string","initializeFactory","resolveAllLineSuffixes","initializeText","notText","extraResolver","resolveAllText","chunks","bufferIndex","tabs","chunk","contentInitial","flowInitial","insideSpan","resolveText","disable","createTokenizer","initialize","from","columnStart","resolveAllConstructs","constructFactory","onsuccessfulconstruct","onsuccessfulcheck","consume","defineSkip","now","sliceSerialize","sliceStream","write","main","addResult","expandTabs","serializeChunks","sliceChunks","_bufferIndex","_index","column","accountForPotentialSkip","chunkIndex","go","fields","construct","_","onreturn","bogusState","listOfConstructs","constructIndex","currentConstruct","handleListOfConstructs","handleMapOfConstructs","handleConstruct","store","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","restore","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","atTab","parse","defaultConstructs","create","creator","postprocess","search","preprocess","atCarriageReturn","preprocessor","endPosition","characterEscapeOrReference","decodeString","decode","$0","$1","$2","hex","fromMarkdown","config","opener","link","onenterdata","codeFlow","emphasis","hardBreak","html","image","listItem","onenterlistitemvalue","onenterlistordered","onenterreference","strong","closer","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","onexitdata","onexitcharacterreferencemarker","onexitcharacterreferencevalue","onexitcharacterreference","onexitcodefenced","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","onexitsetextheadinglinesequence","onexitsetextheadingtext","configure","compile","resume","listStack","prepareList","handler","defaultOnError","containerBalance","listSpread","firstBlankLineIndex","tailIndex","tailEvent","and","errorHandler","onExitError","ancestor","depth","siblings","referenceType","fragment","children","d","combined","remarkParse","doc","ccount","source","escapeStringRegexp","convert","castFactory","anyFactory","propertiesFactory","typeFactory","tests","checks","any","checkAsRecord","nodeAsRecord","testFunction","looksLikeANode","empty","CONTINUE","EXIT","SKIP","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","findAndReplace","ignored","pairs","toPairs","pairIndex","grandparent","find","nodes","matchObject","tupleOrList","tuple","toExpression","toFunction","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","transformGfmAutolinkLiterals","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolink","exitLiteralAutolinkEmail","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","gfmAutolinkLiteralToMarkdown","assert","findUrl","findEmail","protocol","domain","isCorrectDomain","splitUrl","atext","trailExec","trail","closingParenIndex","openingParens","closingParens","email","footnoteReference","footnoteReferencePeek","enterFootnoteCallString","enterFootnoteCall","enterFootnoteDefinitionLabelString","enterFootnoteDefinition","exitFootnoteCallString","exitFootnoteCall","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","tracker","subexit","gfmFootnoteFromMarkdown","gfmFootnoteToMarkdown","firstLineBlank","footnoteDefinition","mapAll","mapExceptFirst","blank","constructsWithoutStrikethrough","handleDelete","peekDelete","gfmStrikethroughFromMarkdown","enterStrikethrough","exitStrikethrough","gfmStrikethroughToMarkdown","defaultStringLength","markdownTable","table","align","stringLength","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","row","sizes","columnIndex","serialize","toAlignment","zwitch","handlers","blockquote","patternInScope","listInScope","none","_1","longestStreak","substring","expected","formatCodeAsIndented","checkFence","suffix","checkQuote","quote","checkEmphasis","encodeCharacterReference","encodeInfo","outside","outsideKind","insideKind","emphasisPeek","betweenHead","betweenTail","testOrVisitor","visitorOrReverse","maybeReverse","overload","formatHeadingAsSetext","literalWithBreak","rank","htmlPeek","imagePeek","imageReference","imageReferencePeek","alt","reference","inlineCode","inlineCodePeek","expression","formatLinkAsAutolink","linkPeek","linkReference","linkReferencePeek","checkBullet","checkBulletOther","bullet","bulletOther","checkBulletOrdered","checkRule","bulletCurrent","useDifferentMarker","firstListItem","checkListItemIndent","style","listItemIndent","phrasing","root","checkStrong","strongPeek","checkRuleRepetition","repetition","handle","joinDefaults","fullPhrasingSpans","unsafe","association","compilePattern","containerPhrasing","indexStack","results","encodeAfter","encodingInfo","containerFlow","eol","indentLines","safe","input","positions","infos","numerical","escapeBackslashes","whole","track","lineShift","move","shift","toMarkdown","containerPhrasingBound","containerFlowBound","safeBound","joinDefinition","invalid","unknown","gfmTableFromMarkdown","enterTable","enterCell","enterRow","exitCodeText","exitTable","gfmTableToMarkdown","padding","alignDelimiters","around","inlineCodeWithTable","handleTable","handleTableCell","handleTableRow","serializeData","handleTableAsData","handleTableRowAsData","matrix","defaultHandlers","gfmTaskListItemFromMarkdown","exitCheck","exitParagraphWithTaskListItem","gfmTaskListItemToMarkdown","listItemWithTaskListItem","firstParaghraph","sibling","checkable","checkbox","gfmFromMarkdown","gfmToMarkdown","wwwPrefix","tokenizeWwwPrefix","tokenizeDomain","tokenizePath","tokenizeTrail","emailDomainDotTrail","tokenizeEmailDomainDotTrail","wwwAutolink","tokenizeWwwAutolink","previousWww","protocolAutolink","tokenizeProtocolAutolink","previousProtocol","emailAutolink","tokenizeEmailAutolink","previousEmail","gfmAutolinkLiteral","dot","gfmAtext","previousUnbalanced","emailDomain","emailDomainAfter","emailDomainDot","wwwStart","wwwAfter","protocolStart","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharacterReferenceStart","trailBracketAfter","trailCharacterReferenceInside","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","call","replacement","callStart","callData","callEscape","labelAtMarker","whitespaceAfter","gfmStrikethrough","single","tokenizeStrikethrough","resolveAllStrikethrough","strikethrough","EditMap","addImplementation","vecs","editMap","at","gfmTableAlign","inDelimiterRow","alignIndex","gfmTable","tokenizeTable","resolveTable","sizeB","bodyRowStart","headRowBefore","headRowStart","headRowBreak","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","currentTable","currentBody","currentCell","flushTableEnd","flushCell","range","rowEnd","previousCell","groupName","valueName","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","side","tasklistCheck","tokenizeTasklistCheck","gfmTaskListItem","spaceThenNonSpace","gfm","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","properties","clobberPrefix","safeId","counter","reuseCounter","sup","revert","subtype","contents","loose","listLoose","listItemLoose","spread","pointEnd","pointStart","rows","firstRow","tableContent","tableRow","cellIndex","alignValue","tableCell","tab","space","trimLines","trimLine","ignore","VOID","PRIMITIVE","ARRAY","OBJECT","DATE","REGEXP","MAP","SET","ERROR","BIGINT","env","deserializer","$","as","out","unpair","object","flags","set","deserialize","serialized","EMPTY","keys","typeOf","asString","shouldSkip","TYPE","serializer","strict","json","pair","entries","lossy","structuredClone$1","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","footer","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","tailTail","structuredClone","createState","definitionById","footnoteById","footnoteCounts","applyData","patch","shallow","defaultUnknownHandler","trimMarkdownSpaceStart","to","hName","hChildren","hProperties","toHast","foot","remarkRehype","hastTree","htmlVoidElements","Schema$1","normal","Schema","merge","definitions","Info","attribute","powers","boolean","increment","booleanish","overloadedBoolean","number","spaceSeparated","commaSeparated","commaOrSpaceSeparated","types","DefinedInfo","mask","mark","normals","aria","caseSensitiveTransform","attributes","caseInsensitiveTransform","svg","xlink","xmlns","xml","cap","dash","valid","schema","Type","camelcase","dashes","kebab","htmlBase","svgBase","defaultSubsetRegex","surrogatePairsRegex","controlCharactersRegex","regexEscapeRegex","subsetToRegexCache","core","charactersToExpressionCached","basic","surrogate","subset","cached","charactersToExpression","groups","hexadecimalRegex","toHexadecimal","omit","decimalRegex","toDecimal","characterEntitiesLegacy","characterEntitiesHtml4","dangerous","characters","notAlphanumericRegex","toNamed","formatSmart","named","decimal","stringifyEntities","htmlCommentRegex","bogusCommentEntitySubset","commentEntitySubset","_2","encode","doctype","_3","stringify","re","whitespace","siblingAfter","siblingBefore","emptyChildren","includeWhitespace","omission","closing","headOrColgroupOrCaption","dd","dt","li","optgroup","option","p","rubyElement","tbody","tfoot","thead","tr","opening","colgroup","constants","selfClosing","serializeAttributes","serializeAttribute","x","y","commas","spaces","textEntitySubset","node_","emptyCharacterReferences","toHtml","options_","alternative","rehypeStringify","defaultOptions","PATTERNS","processCriticMarkup","rejectMode","classPrefix","markup","commentHtml","hasCriticMarkup","renderSubstitutionMarkup","processNodeChildren","nextChildren","nextSibling","deleteText","c","braceIndex","substitutionHtml","remarkCriticMarkup","userOptions","htmlNode","DEFAULT_OPTIONS","MarkdownRenderer","processor","partial","opts","cacheKey","sanitizeHtml","temp","normalizeEntities","MarkdownModule","enabled","allow","update","override","resolved","lineBreak","criticToken","normalizedMarker","enableCriticMarkup","prepared","quotedLines","working","attributePattern","matchResult","rawAttribute","fullMatch","textContent","stripLeadingMarkers","atxMatch","underline","CommentsModule","matches","codeRanges","cursor","ranges","fencePattern","inlinePattern","firstRange","merged","currentStart","currentEnd","lastStart","lastEnd","additionPattern","deletionPattern","substitutionPattern","highlightPattern","commentPattern","char","escapeHtml","div","isWhitespaceChar","trimLineEnd","trimLineStart","isSetextUnderline","firstChar","normalizeListMarkers","fenceDelimiter","delimiter","ModuleEvent","detail","MODULE_EVENTS","ModuleEventEmitter","eventType","wrappedHandler","h","createInitialEditorState","createInitialUIState","createInitialCommentState","ErrorCode","ErrorCode2","MilkdownError","functionReplacer","docTypeError","contextNotFound","timerNotFound","ctxCallOutOfScope","createNodeInParserFail","nodeType","headingMessage","attrsMessage","contentMessage","messages","acc","title","stackOverFlow","parserMatchError","serializerMatchError","expectDomTypeError","callCommandBeforeEditorView","missingNodeInSchema","missingMarkInSchema","Container","_watchers","_value","_emit","Slice$1","container","__privateAdd","__privateSet","__privateGet","watcher","value2","updater","w","off","SliceType","Slice","createSlice","_meta","_container","_clock","_injectedSlices","_consumedSlices","_recordedTimers","_waitTimers","_getSlice","_getTimer","Inspector","clock","timer","duration","timerType","promise","sliceType","_inspector","_Ctx","meta2","Ctx","Clock","_promise","_listener","_eventUniqId","_status","_removeListener","_waitTimeout","Timer","ifTimeout","TimerType","timeout","createTimer","OrderedMap","found","newKey","place","without","f","prop","findDiffStart","childA","childB","findDiffEnd","posA","posB","iA","iB","same","minSize","Fragment","nodeStart","blockSeparator","leafText","first","nodeText","other","otherPos","retIndex","curPos","cur","compareDeep","Mark","placed","marks","ReplaceError","openStart","openEnd","insertInto","removeRange","openIsolating","indexTo","offsetTo","dist","insert","$from","$to","replaceOuter","prepareSliceForReplace","replaceThreeWay","replaceTwoWay","checkJoin","sub","joinable","$before","$after","addNode","addRange","$start","$end","$along","extra","ResolvedPos","parentOffset","val","dOff","tmp","pred","NodeRange","str","rem","cache","resolveCache","elt","ResolveCache","resolveCacheSize","emptyAttrs","Node","startPos","includeParents","wrapMarks","two","TextNode","ContentMatch","validEnd","nodeTypes","TokenStream","expr","parseExpr","dfa","nfa","checkForDeadEnds","frag","toEnd","finished","tp","computed","active","scan","tok","exprs","parseExprSeq","parseExprSubscript","parseExprAtom","parseExprRange","parseNum","min","resolveName","typeName","connect","edge","term","edges","loop","cmp","nullFrom","labeled","explore","states","work","dead","defaultAttrs","defaults","attrName","computeAttrs","built","given","checkAttrs","initAttrs","Attribute","NodeType$1","NodeType","spec","matched","markType","topType","validateType","MarkType","instanceSpec","contentExprCache","contentExpr","markExpr","gatherMarks","excl","isTagRule","rule","isStyleRule","DOMParser","rules","matchedStyles","r","dom","ParseContext","priority","blockTags","ignoreTags","listTags","OPT_PRESERVE_WS","OPT_PRESERVE_WS_FULL","OPT_OPEN_LEFT","wsOptionsFor","preserveWhitespace","NodeContext","solid","fill","isOpen","topNode","topContext","topOptions","top","preserveWS","nodeBefore","domNodeBefore","matchAfter","outerWS","ruleID","normalizeList","sync","oldNeedsBlock","innerMarks","styles","continueAfter","startIn","contentDOM","cautious","route","penalty","cx","nodeMarks","markMayApply","applyMarks","textNode","useRoot","minDepth","$context","deflt","prevItem","selector","DOMSerializer","keep","rendered","markDOM","renderSpec","inline","toDOM","structure","xmlNS","blockArraysIn","gatherToDOM","suspiciousAttributeCache","suspiciousAttributes","suspiciousAttributesInner","suspicious","innerContent","remarkStringify","__typeError","msg","__accessCheck","member","getter","setter","_marks","_hasText","_maybeMerge","_matchTarget","_runNode","_closeNodeAndPush","_addNodeAndPush","_marks2","_matchTarget2","_runProseNode","_runProseMark","_runNode2","_searchType","_maybeMergeChildren","_createMarkdownNode","_moveSpaces","_closeNodeAndPush2","_addNodeAndPush2","_openMark","_closeMark","StackElement","Stack","ParserStackElement","_ParserState","topElement","prevNode","currNode","remark","ParserState","_SerializerStackElement","props","SerializerStackElement","isFragment","_SerializerState","getPriority","searchNode","node2","firstChild","currChildren","currRest","prevChildren","prevRest","onPush","startSpaces","endSpaces","findIndex","lastChild","trim","SerializerState","lower16","factor16","makeRecover","recoverIndex","recoverOffset","DEL_BEFORE","DEL_AFTER","DEL_ACROSS","DEL_SIDE","MapResult","delInfo","recover","StepMap","inverted","assoc","simple","oldIndex","newIndex","oldSize","newSize","del","oldStart","newStart","Mapping","maps","mirror","mirrors","mapping","startSize","mirr","totalSize","inverse","corr","stepsByID","Step","stepClass","StepResult","failed","mapFragment","mapped","AddMarkStep","oldSlice","RemoveMarkStep","AddNodeMarkStep","newSet","RemoveNodeMarkStep","ReplaceStep","contentBetween","ReplaceAroundStep","gapFrom","gapTo","gap","inserted","addMark","removing","adding","s","removeMark","toRemove","clearIncompatible","parentType","clearNewlines","replSteps","allowed","canCut","liftTarget","lift","gapStart","gapEnd","splitting","findWrapping","innerRange","findWrappingOutside","findWrappingInside","withAttrs","outer","innerMatch","wrappers","setBlockType","mapFrom","attrsHere","canChangeType","convertNewlines","pre","supportLinebreak","replaceLinebreaks","startM","endM","replaceNewlines","$pos","setNodeMarkup","newNode","canSplit","typesAfter","innerType","overrideChild","baseType","split","typeAfter","canJoin","canAppendWithSubstitutedLinebreaks","linebreakReplacement","beforeType","$full","insertPoint","dropPoint","pass","bias","insertPos","fits","wrapping","replaceStep","fitsTrivially","Fitter","unplaced","fit","moveInline","placedSize","startDepth","sliceDepth","contentAt","frontierDepth","inject","openAtEnd","dropFromFragment","taken","openEndCount","closeNodeStart","addToFragment","contentAfterFits","dropInner","invalidMarks","definesContent","replaceRange","targetDepths","coveredDepths","preferredTarget","preferredTargetIndex","leftNodes","preferredDepth","leftNode","def","openDepth","targetDepth","expand","closeFragment","startSteps","oldOpen","newOpen","replaceRangeWith","deleteRange","covered","AttrStep","DocAttrStep","TransformError","err","Transform","steps","classesById","Selection","$anchor","$head","SelectionRange","lastNode","lastParent","selectionToInsertionEnd","dir","textOnly","TextSelection","findSelectionIn","AllSelection","selectionClass","warnedAboutTextSelection","checkTextSelection","TextBookmark","anchor","dPos","NodeSelection","deleted","NodeBookmark","sel","AllBookmark","startLen","_from","_to","_newFrom","newTo","UPDATED_SEL","UPDATED_MARKS","UPDATED_SCROLL","Transaction","selection","time","inheritMarks","bind","FieldDesc","desc","baseFields","instance","_old","prev","Configuration","EditorState","rootTr","trs","newState","haveNew","oldState","newInstance","$config","pluginFields","bindProps","Plugin","createKey","PluginKey","deleteSelection","dispatch","atBlockStart","$cursor","joinBackward","$cut","findCutBefore","deleteBarrier","textblockAt","delStep","joinTextblockBackward","joinTextblocksAround","beforeText","beforePos","afterText","afterPos","only","selectNodeBackward","atBlockEnd","joinForward","findCutAfter","selectNodeForward","newlineInCode","defaultBlockAt","exitCode","above","createParagraphNear","liftEmptyBlock","splitBlockAs","splitNode","splitDepth","atEnd","atStart","splitPos","can","$first","splitBlock","selectAll","joinMaybeClear","conn","isolated","canDelAfter","$joinAt","selAfter","afterDepth","selectTextblockSide","selectTextblockStart","selectTextblockEnd","wrapIn","applicable","markApplies","enterAtoms","toggleMark","spaceStart","spaceEnd","chainCommands","commands","backspace","pcBaseKeymap","macBaseKeymap","mac","baseKeymap","InputRule","stringHandler","cutOff","undoInputRule","undoable","toUndo","wrappingInputRule","regexp","getAttrs","joinPredicate","textblockTypeInputRule","nav","agent","ie_edge","ie_upto10","ie_11up","ie","gecko","_chrome","safari","ios","webkit","textBefore","_matcher","matcher","customInputRulesKey","customInputRules","stored","markRule","_b","_c","_d","matchLength","initialStoredMarks","markEnd","captured","textStart","textEnd","cloneTr","equalNodeType","findParent","predicate","findParentNodeType","findParentNodeClosestToPos","findSelectedNodeOfType","findNodeInSelection","hasNode","keyName","ignoreKey","windows","normalizeKeyName","ctrl","mod","modifiers","keymap","bindings","keydownHandler","baseName","direct","noShift","fromCode","domIndex","parentNode","reusedRange","textRange","clearReusedRange","isEquivalentPosition","targetNode","targetOff","scanFor","atomElements","nodeSize","hasBlockDesc","textNodeBefore$1","textNodeAfter$1","isOnEdge","selectionCollapsed","domSel","keyEvent","keyCode","deepActiveElement","caretFromPoint","ie_version","chrome","chrome_version","android","webkit_version","windowRect","vp","getSide","clientRect","rect","scaleX","scaleY","scrollRectIntoView","startDOM","scrollThreshold","scrollMargin","atTop","bounding","moveX","moveY","startX","startY","dX","dY","storeScrollPos","refDOM","refTop","localRect","scrollStack","resetScrollPos","newRefTop","restoreScrollStack","dTop","preventScrollSupported","focusPreventScroll","findOffsetInNode","coords","closest","dxClosest","coordsClosest","rowBot","rowTop","firstBelow","coordsBelow","childIndex","rects","dx","findOffsetInText","len","singleRect","inRect","targetKludge","posFromElement","posFromCaret","outsideBlock","sawBlock","elementFromPoint","box","startI","posAtCoords","caret","nonZero","BIDI","coordsAtPos","atom","supportEmptyRange","rectBefore","rectAfter","flattenV","takeSide","flattenH","withFlushedState","viewState","endOfTextblockVertical","nearest","boxes","maybeRTL","endOfTextblockHorizontal","oldNode","oldOff","anchorNode","anchorOffset","oldBidiLevel","parentDOM","newOff","cachedState","cachedDir","cachedResult","endOfTextblock","NOT_DIRTY","CHILD_DIRTY","CONTENT_DIRTY","NODE_DIRTY","ViewDesc","widget","outerDeco","innerDeco","nodeName","domBefore","domAfter","onlyNodes","nodeDOM","TrailingHackViewDesc","WidgetViewDesc","fromOffset","toOffset","childBase","force","anchorDOM","headDOM","selRange","brKludge","domSelExtended","mutation","startInside","endInside","dirty","CompositionViewDesc","textDOM","mut","MarkViewDesc","custom","replaceNodes","NodeViewDesc","descObj","applyOuterDeco","CustomNodeViewDesc","TextViewDesc","sameOuterDeco","composition","localComposition","compositionInChild","ViewTreeUpdater","iterDeco","insideNode","compIndex","renderDescs","iosHacks","textPos","findTextInFragment","needsWrap","oldDOM","patchOuterDeco","computeOuterDeco","docViewDesc","docView","descs","written","childDOM","rm","OuterDecoLevel","noDeco","outerDOM","prevComputed","curComputed","curDOM","deco","patchAttributes","prevList","curList","lock","preMatch","maxKeep","markDesc","targetDesc","domNode","nextDOM","locked","wrapper","ch","hack","parentDesc","curDesc","descI","fI","compareSide","onWidget","onNode","locals","decoIndex","restNode","widgets","cutAt","oldCSS","childStart","selectionFromDOM","nearestDesc","inWidget","nearestDescNode","selectionBetween","editorOwnsSelection","hasSelection","selectionToDOM","syncNodeSelection","curSel","selectCursorWrapper","resetEditableFrom","resetEditableTo","brokenSelectBetweenUneditable","temporarilyEditableNear","resetEditable","removeClassOnSelectionChange","setEditable","img","clearNodeSelection","hasFocusAndSelection","anchorInRightPlace","moveSelectionBlock","$side","selectHorizontally","mods","$newHead","nodePos","nodeLen","isIgnorable","skipIgnoredNodes","skipIgnoredNodesBefore","skipIgnoredNodesAfter","moveNode","moveOffset","isBlockNode","setSelFocus","textNodeAfter","textNodeBefore","findDirection","mid","selectVertically","beyond","stopNativeHorizontalDelete","nextNode","switchEditable","safariDownArrowBug","focusNode","focusOffset","getMods","captureKeyDown","serializeForClipboard","detachedDoc","wrapMap","parseFromClipboard","plainText","inCode","asText","parsed","readHTML","restoreReplacedSpaces","contextNode","sliceData","inlineParents","addContext","closeSlice","normalizeSiblings","lastWrap","inLast","addToSibling","closeRight","withWrappers","closeRange","_detachedDoc","_policy","maybeWrapTrusted","trustedTypes","metas","firstTag","editHandlers","passiveHandlers","InputState","initInput","eventBelongsToView","runCustomHandler","ensureListeners","setSelectionOrigin","destroyInput","currentHandlers","dispatchEvent","_event","inOrNearComposition","eventCoords","isNear","click","dy","runHandlerOnContext","propName","updateSelection","selectClickedLeaf","selectClickedNode","selectedNode","selectAt","handleSingleClick","selectNode","handleDoubleClick","handleTripleClick","defaultTripleClick","forceDOMFlush","endComposition","selectNodeModifier","flushed","MouseDown","targetPos","timeoutComposition","scheduleComposeEnd","delay","clearComposition","timestampFromCustomEvent","findCompositionNode","textAfter","descAfter","lastChanged","descBefore","restarting","captureCopy","brokenClipboardAPI","cut","sliceSingleNode","capturePaste","plain","doPaste","preferPlain","singleNode","getText","clipboardData","uris","Dragging","dragCopyModifier","dragMoves","moves","mouseDown","draggedSlice","dragging","eventPos","$mouse","isNode","beforeInsert","domChangeCount","compareObjs","WidgetType","noSpec","span","oldOffset","Decoration","InlineType","DecorationSet","local","decorations","buildTree","childOff","newLocal","mapChildren","byPos","childNode","childOffset","baseOffset","takeSpansForNode","moveSpans","withoutNulls","dec","localSet","DecorationGroup","removeOverlap","members","mappedDecos","sorted","oldChildren","moved","oldEnd","newEnd","dSize","mustRebuild","fromLocal","toLocal","mapAndGatherRemainingDecorations","spans","gather","hasNulls","localStart","subtree","insertAhead","viewDecorations","observeOptions","useCharData","SelectionState","DOMObserver","handleDOMChange","mutations","take","ancestors","newSel","typeOver","brs","br","blockParent","readSel","checkCSS","previousSibling","cssChecked","cssCheckWarned","rangeToSelectionRange","currentAnchor","safariShadowSelectionRange","read","parseBetween","from_","to_","startDoc","ruleFromNode","isInline","readDOMChange","addedNodes","compositionID","shared","compare","preferredPos","preferredSide","findDiff","resolveSelection","$fromA","inlineChange","looksLikeBackspace","chFrom","chTo","mkTr","markChange","isMarkChange","parsedSel","curMarks","prevMarks","old","$newStart","$newEnd","skipClosingAndOpening","$next","fromEnd","mayOpen","endA","endB","isSurrogatePair","EditorView","checkStateComponent","getEditable","updateCursorWrapper","buildNodeViews","computeDocDeco","prevProps","redraw","updateSel","pluginsChanged","nodeViews","changedNodeViews","scroll","updateDoc","oldScrollPos","forceSelUpdate","selectionContextChanged","chromeKludge","prevState","pluginView","movedPos","dispatchTransaction","sel1","sel2","nA","nB","withMeta","remarkHandlers","editorViewCtx","editorStateCtx","initTimerCtx","editorCtx","inputRulesCtx","prosePluginsCtx","remarkPluginsCtx","nodeViewCtx","markViewCtx","remarkCtx","remarkStringifyOptionsCtx","ConfigReady","ctx","InitReady","init","editor","SchemaReady","schemaTimerCtx","schemaCtx","nodesCtx","marksCtx","extendPriority","plug","key2","schema2","_ctx","CommandManager","commands2","get","chains","chained","command","pipe","payload","cmd","createCmdKey","commandsCtx","commandsTimerCtx","CommandsReady","overrideBaseKeymap","keymap2","handleBackspace","_keymap","KeymapManager","keymaps","keymapItem","sortedItems","keymapCtx","keymapTimerCtx","KeymapReady","km","ParserReady","outOfScope$1","parserCtx","parserTimerCtx","SerializerReady","serializerTimerCtx","outOfScope","serializerCtx","defaultValueCtx","editorStateOptionsCtx","editorStateTimerCtx","EditorStateReady","getDoc","defaultValue","parser2","key$1","editorState","optionsOverride","prosePlugins","disposeBaseKeymap","_tr","_oldState","keymap$1","pasteRulesCtx","pasteRulesTimerCtx","PasteRulesReady","pasteRule","EditorViewReady","editorViewTimerCtx","editorViewOptionsCtx","rootCtx","rootDOMCtx","rootAttrsCtx","createViewContainer","prepareViewDom","editorView","xs","editorView2","markViews","view2","isPlainText","runner","_enableInspector","_configureList","_onStatusChange","_usrPluginStore","_sysPluginStore","_loadInternal","_prepare","_cleanup","_cleanupInternal","_setStatus","_loadPluginInStore","_Editor","configPlugin","internalPlugins","cleanup","status","loader","enable","onChange","_plugins","clearPlugins","action","Editor","t","o","clsx","nord","prevClass","$command","cmdKey","$inputRule","inputRule","ir","irs","$pasteRule","pr","prs","$mark","markSchema","ns","$node","nodeSchema","$prose","prose","prosePlugin","ps","$shortcut","shortcut","dispose","$ctx","$nodeSchema","schemaCtx2","nextSchema","$markSchema","$useKeymap","userKeymap","shortcuts2","keymapDef","shortcuts","keymapTuple","targetKeys","targetKey","$nodeAttr","$markAttr","$remark","initialOptions","remarkPlugin","rp","splitListItem","itemType","itemAttrs","grandParent","depthBefore","depthAfter","nextType","liftListItem","liftToOuterList","liftOutOfList","endOfList","indexBefore","sinkListItem","nestedBefore","clean","remarkInlineLinks","serializeText","contentArr","emphasisAttr","emphasisSchema","toggleEmphasisCommand","emphasisStarInputRule","emphasisUnderscoreInputRule","emphasisKeymap","strongAttr","strongSchema","toggleStrongCommand","strongInputRule","strongKeymap","inlineCodeAttr","inlineCodeSchema","toggleInlineCodeCommand","inlineCodeInputRule","inlineCodeKeymap","linkAttr","linkSchema","toggleLinkCommand","updateLinkCommand","linkMark","docSchema","visitEmptyLine","ast","remarkPreserveEmptyLinePlugin","paragraphAttr","paragraphSchema","shouldPreserveEmptyLine","shouldPreserveEmptyLine2","turnIntoTextCommand","paragraphKeymap","headingIndex","defaultHeadingIdGenerator","headingIdGenerator","headingAttr","headingSchema","getId","wrapInHeadingInputRule","wrapInHeadingCommand","downgradeHeadingCommand","headingKeymap","blockquoteAttr","blockquoteSchema","wrapInBlockquoteInputRule","wrapInBlockquoteCommand","blockquoteKeymap","codeBlockAttr","codeBlockSchema","language","languageAttrs","createCodeBlockInputRule","createCodeBlockCommand","updateCodeBlockLanguageCommand","codeBlockKeymap","imageAttr","imageSchema","insertImageCommand","updateImageCommand","nodeWithPos","newAttrs","insertImageInputRule","hardbreakAttr","hardbreakSchema","insertHardbreakCommand","hardbreakKeymap","hrAttr","hrSchema","insertHrInputRule","insertHrCommand","bulletListAttr","bulletListSchema","ordered","wrapInBulletListInputRule","wrapInBulletListCommand","bulletListKeymap","orderedListAttr","orderedListSchema","wrapInOrderedListInputRule","wrapInOrderedListCommand","orderedListKeymap","listItemAttr","listItemSchema","listType","sinkListItemCommand","liftListItemCommand","splitListItemCommand","liftFirstListItem","liftFirstListItemCommand","listItemKeymap","textSchema","htmlAttr","htmlSchema","inputRules","markInputRules","isMarkSelectedCommand","isNodeSelectedCommand","clearTextInCurrentBlockCommand","setBlockTypeCommand","wrapInBlockTypeCommand","blockRange","addBlockTypeCommand","selectTextNearPosCommand","clamp","remarkAddOrderInListPlugin","remarkLineBreak","remarkInlineLinkPlugin","isParent","isHTML","flatMapWithDepth","transform","nthChild","BLOCK_CONTAINER_TYPES","remarkHtmlTransformer","remarkMarker","getMarker","inlineNodesCursorPlugin","inlineNodesCursorPluginKey","inlineNodesCursorPlugin2","leftDec","rightDec","hardbreakClearMarkPlugin","hardbreakFilterNodes","hardbreakFilterPlugin","notIn","isInsertHr","curDepth","canApply","syncHeadingIdPlugin","headingIdPluginKey","updateId","idMap","syncListOrderPlugin","syncOrderLabel","transactions","tr2","orderedListType","bulletListType","listItemType","handleNodeItem","changed","expectedLabel","needDispatch","pos2","_parent","index2","commonmark","readFromCache","addToCache","cachePos","TableMap","width","height","problems","bottom","axis","leftA","rightA","topA","bottomA","leftB","rightB","topB","bottomB","col","rowStart","rowEndIndex","computeMap","findWidth","mapPos","colWidths","rowNode","cellNode","colspan","rowspan","colwidth","colW","widthIndex","expectedPos","missing","tableMap","badWidths","findBadColWidths","hasRowSpan","rowWidth","prevRow","colWidth","freshColWidth","getCellAttrs","extraAttrs","widthAttr","widths","setCellAttrs","validateColwidth","tableNodes","cellAttrs","tableNodeTypes","role","tableEditingKey","cellAround","isInTable","selectionCell","$cell","cellNear","pointsAtCell","moveCellForward","inSameTable","$cellA","$cellB","nextCell","tableStart","removeColSpan","addColSpan","columnIsHeader","headerCell","CellSelection","_CellSelection","$anchorCell","$headCell","tableChanged","rowContent","cellRect","extraLeft","extraRight","anchorTop","headTop","anchorBottom","headBottom","anchorRect","headRect","anchorLeft","headLeft","anchorRight","headRight","anchorCell","headCell","CellBookmark","_CellBookmark","drawCellSelection","isCellBoundarySelection","afterFrom","beforeTo","isTextSelectionAcrossCells","fromCellBoundaryNode","toCellBoundaryNode","normalizeSelection","allowTableNodeSelection","NodeSelection2","fixTablesKey","PluginKey2","changedDescendants","curSize","fixTables","fixTable","tablePos","mustAdd","prob","convertTableNodeToArrayOfRows","tableNode","rowCount","colCount2","colIndex","cellPos","topCellIndex","topCellPos","leftCellIndex","leftCellPos","convertArrayOfRowsToTableNode","arrayOfNodes","newRows","oldRow","newRow","findTable","findParentNode","getCellsInColumn","getCellsInRow","getSelectionRangeInColumn","startColIndex","endColIndex","maybeEndIndex","indexes","maybeCells","firstSelectedColumnCells","firstRowCells","columnCells","getSelectionRangeInRow","startRowIndex","endRowIndex","firstSelectedRowCells","firstColumnCells","rowCells","moveRowInArrayOfRows","indexesOrigin","indexesTarget","directionOverride","direction","rowsExtracted","positionOffset","transpose","moveColumn","moveColParams","originIndex","targetIndex","select","indexesOriginColumn","indexesTargetColumn","newTable","moveTableColumn","$lastCell","firstCell","$firstCell","moveRow","moveRowParams","indexesOriginRow","indexesTargetRow","moveTableRow","selectedRect","addColumn","refColumn","addColumnBefore","addColumnAfter","removeColumn","mapStart","deleteColumn","removeRow","rowPos","deleteRow","setCellAttr","deprecated_toggleHeader","isHeaderEnabledByType","cellPositions","toggleHeader","isHeaderRowEnabled","isHeaderColumnEnabled","selectionStartsAt","cellsRect","newType","relativeCellPos","findNextCell","goToNextCell","TextSelection2","deleteTable","deleteCellSelection","baseContent","Slice2","moveTableRow2","moveTableColumn2","pastedCells","fitSlice","Slice3","ensureRectangular","Fragment3","clipCells","newWidth","newHeight","growTable","emptyHead","start2","header","emptyRow","isolateHorizontal","cellTop","cellLeft","isolateVertical","updatePos","insertCells","recomp","handleKeyDown","arrow","shiftArrow","maybeSetSelection","Selection2","atEndOfCell","cellSel","handlePaste","Fragment4","handleMouseDown","startEvent","startDOMCell","domInCell","setCellSelection","cellUnderMouse","$anchor2","starting","TextSelection3","dirStr","mousePos","TableView","defaultCellMinWidth","updateColumnsOnResize","record","overrideCol","overrideValue","totalWidth","fixedWidth","hasWidth","cssWidth","col2","columnResizingPluginKey","PluginKey3","columnResizing","handleWidth","cellMinWidth","View","lastColumnResizable","tableName","ResizeState","pluginState","handleMouseMove","handleMouseLeave","handleMouseDown2","handleDecorations","_ResizeState","activeHandle","domCellAround","edgeCell","updateHandle","win","currentColWidth","finish","event2","pluginState2","updateColumnWidth","draggedWidth","dragged","displayColumnWidth","domWidth","resizeMinWidth","mapIndex","zeroes","DecorationSet2","Decoration2","tableEditing","Plugin2","isComposing","createDecorations","createSpan","imeSpan","strikethroughAttr","strikethroughSchema","toggleStrikethroughCommand","strikethroughInputRule","strikethroughKeymap","originalSchema","tableSchema","firstLine","tableHeaderRowSchema","tableRowSchema","tableCellSchema","tableHeaderSchema","createTable","rowsCount","colsCount","headerCells","selectLine","isRowSelection","createCellSelection","selectRow","selectCol","addRowWithAlignment","headerCol","getAllCellsInTable","selectTable","goToPrevTableCellCommand","goToNextTableCellCommand","insertTableCommand","moveRowCommand","moveColCommand","selectRowCommand","selectColCommand","selectTableCommand","deleteSelectedCellsCommand","isRow","isCol","addColBeforeCommand","addColAfterCommand","addRowBeforeCommand","addRowAfterCommand","setAlignCommand","alignment","insertTableInputRule","tablePasteRule","_view","_offset","headerRow","tableCells","newHeaderRow","tableKeymap","id$1","markdownId","footnoteDefinitionSchema","footnoteReferenceSchema","extendListItemSchemaForTask","baseSchema","checked","wrapInTaskListInputRule","finPos","pasteRules","autoInsertSpanPlugin","columnResizingPlugin","tableEditingPlugin","remarkGFMPlugin","remarkGFM","pluginKey","getChildIndex","keepTableAlignPlugin","tableHeaderRow","currentAlign","freeGlobal","freeSelf","Symbol","objectProto","nativeObjectToString","symToStringTag","getRawTag","isOwn","tag","unmasked","objectToString","nullTag","undefinedTag","baseGetTag","isObjectLike","symbolTag","isSymbol","reWhitespace","trimmedEndIndex","reTrimStart","baseTrim","isObject","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","toNumber","isBinary","FUNC_ERROR_TEXT","nativeMax","nativeMin","debounce","func","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","maxing","invokeFunc","args","thisArg","leadingEdge","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","timeWaiting","shouldInvoke","trailingEdge","cancel","flush","debounced","isInvoking","ListenerManager","listenerCtx","listener","listener2","listeners","prevDoc","prevMarkdown","prevSelection","currentSelection","GOOD_LEAF_SIZE","RopeSequence","Append","Leaf","prototypeAccessors","leftLen","max_empty_items","Branch","eventCount","preserveItems","remap","remaining","addAfter","addBefore","Item","histOptions","newItems","oldItems","lastItem","overflow","DEPTH_OVERFLOW","cutOffEvents","mirrorPos","rebasedTransform","rebasedCount","rebasedItems","newUntil","iRebased","newMaps","branch","upto","newItem","cutPoint","mirrorOffset","HistoryState","undone","prevRanges","prevTime","prevComposition","applyTransaction","history","historyTr","historyKey","rebased","closeHistoryKey","appended","mustPreserveItems","rangesFor","newGroup","isAdjacentTo","mapRanges","adjacent","histTransaction","redo","pop","newHist","cachedPreserveItems","cachedPreserveItemsPlugins","hist","inputType","undo","buildCommand","undoCommand","redoCommand","historyProviderConfig","historyProviderPlugin","history$1","historyKeymap","LOG_LEVEL_VALUES","LOG_STYLES","DebugLogger","debugFromUrl","define_process_env_default","debugEnv","debugLevelEnv","debugModulesEnv","debugExcludeEnv","module","timestamp","consoleMethod","debugLogger","createModuleLogger","moduleName","printDebugHelp","createText","createMarkup","parseCriticMarkup","lastIndex","combinedPattern","matchIndex","cleanCopyNode","processedGrandchildren","newChild","textChild","walkTree","newChildren","cleanNode","deepCleanNode","CRITIC_DELIMITERS","criticMarkupToMarkdown","remarkCriticMarkupMilkdown","newTree","createCriticMark","schemaName","markupName","className","textValues","textNodes","criticAddition","criticDeletion","criticHighlight","criticComment","criticSubstitution","criticKeymap","criticMarkupPlugin","criticMarkupRemarkPlugin","logger","CommandRegistry","commandId","activeState","hasMarkInRange","nodeAttrs","blockquoteNode","blockquoteStart","blockquoteEnd","createStandardCommands","TOOLBAR_BUTTON_GROUPS","CONTEXT_TOOLBAR_CONFIGS","EditorToolbar","milkdownEditor","saved","buttonGroups","buttonCount","CORE_BUTTON_COUNT","groupIndex","groupElem","buttonConfig","button","toggleBtn","toolbar","undoBtn","redoBtn","contextToggleBtn","canExecute","isActive","MilkdownEditor","diffHighlights","elementType","editorContainer","mount","toolbarElement","initialContent","editorBuilder","normalized","toolbarInstance","errorMessage","layout","contentWrapper","trackedHighlightPluginKey","_config","currentOffset","foundPos","nodeLength","EditorLifecycle","CommentsSidebar","sections","callbacks","emptyMsg","snapshot","section","sidebar","closeBtn","commentKey","actions","CommentComposer","composer","textareaContainer","textarea","cancelBtn","submitBtn","sidebarBody","onSubmit","insertionAnchor","isEditing","elementLabel","isEdit","CommentBadges","sectionId","indicator","domElement","icon","countSpan","firstMatch","preview","tooltip","UI_CONSTANTS","getAnimationDuration","CommentController","sidebarElement","existingCommentContent","composerElement","originalItem","currentContent","extracted","existingComments","lastCommentIndex","lastComment","rawState","snapshots","_elementId","ids","commentMarkup","isComposerElement","composerElementId","commentStart","MainSidebar","chevron","actionsSection","actionsTitle","viewSection","viewTitle","trackedLabel","trackedText","commentsSection","commentsTitle","helpSection","canUndo","canRedo","visible","collapsed","hasUnsaved","ContextMenu","menu","editItem","commentItem","firstItem","ContextMenuCoordinator","mergeSectionCommentIntoSegments","fallbackMetadata","appendSectionComments","lastSegment","normalizeContentForComparison","EditorHistoryStorage","parseError","keysToRemove","histories","ChangeSummaryDashboard","operations","currentState","summary","modifiedElements","additionMatches","deletionMatches","substitutionMatches","commentMatches","changeType","dashboard","additionPercent","deletionPercent","substitutionPercent","errorDashboard","refreshed","btn","notification","DebugTools","originalAddOperation","originalReplace","helpers","markdownContent","inspection","initializeDebugTools","tools","UIModule","nextState","mouseEvent","targetId","plainContent","trackedContent","modal","originalContent","inlineEditor","cachedHtml","cachedHeadingReference","leadingWhitespaceResult","elementData","cachedSectionComment","originalContentRaw","strippedOriginal","originalNormalized","newNormalized","generatedSegments","elementIds","commentTargetId","_content","currentlyModifiedIds","relevantOperations","isModified","wasPreviouslyModified","contentWithChanges","displayElem","skipHeadingCache","headingReference","strippedContent","showTrackedChanges","rawPlain","rawTracked","cleanedPlain","cleanedTracked","preparedPlain","preparedTracked","plainResult","trackedResult","updatedElementIds","additionMatch","additionGroup","addition","substitutionMatch","replacementGroup","originalMetadata","offsets","segmentContent","leadingPattern","trailingPattern","afterParent","fallback","previousId","previousNode","desiredParent","referenceId","firstLineOriginal","closingIndex","openingIndex","prefixStart","firstLineValue","referencePosition","prefixSegment","removalStart","whitespaceStart","isAtx","secondLine","isSetext","safePrefix","withoutTrailing","cleanContent","contentElem","newNodes","firstNewElement","combinedClasses","highest","alreadyWrapped","loading","historyData","DEFAULT_BASE_BRANCH","DEFAULT_AUTH_MODE","VALID_PROVIDERS","resolveGitConfig","rawConfig","provider","normalizeProvider","owner","baseBranch","sourceFile","authConfig","normalizeAuthConfig","mode","determineAuthMode","headerName","extractString","cookieName","modeValue","BaseProvider","endpoint","authHeader","finalHeaders","requestInit","response","decodeBase64","encodeBase64","GitHubProvider","branchName","fromBranch","baseRef","ref","sha","updates","method","comments","commitSha","issue","GitLabProvider","_branchName","_fromBranch","_path","_ref","_message","_branch","_sha","_number","_updates","stateParam","mr","_method","_comments","_commitSha","GiteaProvider","rawUrl","LocalProvider","createProvider","repository","auth","apiUrl","isString","fallbackToken","baseConfig","GitIntegrationService","_payload","STORAGE_KEY_DEFAULT","EMBEDDED_SOURCES_ID","EmbeddedSourceStore","filename","version","script","GitModule","repo","_summary","_filepath","UserModule","user","commentUserId","QuartoReview","reviewElement","parsedConfig"],"mappings":";;;;;;;AAAe,MAAMA,GAAK;AAAA,EACtB,KAAKC,GAAQC,GAEbC,IAAU,CAAA,GAAI;AACV,QAAIC;AACJ,IAAI,OAAOD,KAAY,cACnBC,IAAWD,GACXA,IAAU,CAAA,KAEL,cAAcA,MACnBC,IAAWD,EAAQ;AAGvB,UAAME,IAAY,KAAK,UAAUJ,GAAQE,CAAO,GAC1CG,IAAY,KAAK,UAAUJ,GAAQC,CAAO,GAC1CI,IAAY,KAAK,YAAY,KAAK,SAASF,GAAWF,CAAO,CAAC,GAC9DK,IAAY,KAAK,YAAY,KAAK,SAASF,GAAWH,CAAO,CAAC;AACpE,WAAO,KAAK,mBAAmBI,GAAWC,GAAWL,GAASC,CAAQ;AAAA,EAC1E;AAAA,EACA,mBAAmBG,GAAWC,GAAWL,GAASC,GAAU;AACxD,QAAIK;AACJ,UAAMC,IAAO,CAACC,MAAU;AAEpB,UADAA,IAAQ,KAAK,YAAYA,GAAOR,CAAO,GACnCC,GAAU;AACV,mBAAW,WAAY;AAAE,UAAAA,EAASO,CAAK;AAAA,QAAG,GAAG,CAAC;AAC9C;AAAA,MACJ;AAEI,eAAOA;AAAA,IAEf,GACMC,IAASJ,EAAU,QAAQK,IAASN,EAAU;AACpD,QAAIO,IAAa,GACbC,IAAgBH,IAASC;AAC7B,IAAIV,EAAQ,iBAAiB,SACzBY,IAAgB,KAAK,IAAIA,GAAeZ,EAAQ,aAAa;AAEjE,UAAMa,KAAoBP,IAAKN,EAAQ,aAAa,QAAQM,MAAO,SAASA,IAAK,OAC3EQ,IAAsB,KAAK,IAAG,IAAKD,GACnCE,IAAW,CAAC,EAAE,QAAQ,IAAI,eAAe,QAAW;AAE1D,QAAIC,IAAS,KAAK,cAAcD,EAAS,CAAC,GAAGV,GAAWD,GAAW,GAAGJ,CAAO;AAC7E,QAAIe,EAAS,CAAC,EAAE,SAAS,KAAKL,KAAUM,IAAS,KAAKP;AAElD,aAAOF,EAAK,KAAK,YAAYQ,EAAS,CAAC,EAAE,eAAeV,GAAWD,CAAS,CAAC;AAmBjF,QAAIa,IAAwB,QAAWC,IAAwB;AAE/D,UAAMC,IAAiB,MAAM;AACzB,eAASC,IAAe,KAAK,IAAIH,GAAuB,CAACN,CAAU,GAAGS,KAAgB,KAAK,IAAIF,GAAuBP,CAAU,GAAGS,KAAgB,GAAG;AAClJ,YAAIC;AACJ,cAAMC,IAAaP,EAASK,IAAe,CAAC,GAAGG,IAAUR,EAASK,IAAe,CAAC;AAClF,QAAIE,MAGAP,EAASK,IAAe,CAAC,IAAI;AAEjC,YAAII,IAAS;AACb,YAAID,GAAS;AAET,gBAAME,IAAgBF,EAAQ,SAASH;AACvC,UAAAI,IAASD,KAAW,KAAKE,KAAiBA,IAAgBhB;AAAA,QAC9D;AACA,cAAMiB,IAAYJ,KAAcA,EAAW,SAAS,IAAIZ;AACxD,YAAI,CAACc,KAAU,CAACE,GAAW;AAGvB,UAAAX,EAASK,CAAY,IAAI;AACzB;AAAA,QACJ;AAWA,YAPI,CAACM,KAAcF,KAAUF,EAAW,SAASC,EAAQ,SACrDF,IAAW,KAAK,UAAUE,GAAS,IAAM,IAAO,GAAGvB,CAAO,IAG1DqB,IAAW,KAAK,UAAUC,GAAY,IAAO,IAAM,GAAGtB,CAAO,GAEjEgB,IAAS,KAAK,cAAcK,GAAUhB,GAAWD,GAAWgB,GAAcpB,CAAO,GAC7EqB,EAAS,SAAS,KAAKX,KAAUM,IAAS,KAAKP;AAE/C,iBAAOF,EAAK,KAAK,YAAYc,EAAS,eAAehB,GAAWD,CAAS,CAAC,KAAK;AAG/E,QAAAW,EAASK,CAAY,IAAIC,GACrBA,EAAS,SAAS,KAAKX,MACvBQ,IAAwB,KAAK,IAAIA,GAAuBE,IAAe,CAAC,IAExEJ,IAAS,KAAKP,MACdQ,IAAwB,KAAK,IAAIA,GAAuBG,IAAe,CAAC;AAAA,MAGpF;AACA,MAAAT;AAAA,IACJ;AAKA,QAAIV;AACA,OAAC,SAAS0B,IAAO;AACb,mBAAW,WAAY;AACnB,cAAIhB,IAAaC,KAAiB,KAAK,IAAG,IAAKE;AAC3C,mBAAOb,EAAS,MAAS;AAE7B,UAAKkB,EAAc,KACfQ,EAAI;AAAA,QAEZ,GAAG,CAAC;AAAA,MACR,GAAC;AAAA;AAGD,aAAOhB,KAAcC,KAAiB,KAAK,IAAG,KAAME,KAAqB;AACrE,cAAMc,IAAMT,EAAc;AAC1B,YAAIS;AACA,iBAAOA;AAAA,MAEf;AAAA,EAER;AAAA,EACA,UAAUC,GAAMC,GAAOC,GAASC,GAAWhC,GAAS;AAChD,UAAMiC,IAAOJ,EAAK;AAClB,WAAII,KAAQ,CAACjC,EAAQ,qBAAqBiC,EAAK,UAAUH,KAASG,EAAK,YAAYF,IACxE;AAAA,MACH,QAAQF,EAAK,SAASG;AAAA,MACtB,eAAe,EAAE,OAAOC,EAAK,QAAQ,GAAG,OAAOH,GAAO,SAASC,GAAS,mBAAmBE,EAAK,kBAAiB;AAAA,IACjI,IAGmB;AAAA,MACH,QAAQJ,EAAK,SAASG;AAAA,MACtB,eAAe,EAAE,OAAO,GAAG,OAAOF,GAAO,SAASC,GAAS,mBAAmBE,EAAI;AAAA,IAClG;AAAA,EAEI;AAAA,EACA,cAAcZ,GAAUhB,GAAWD,GAAWgB,GAAcpB,GAAS;AACjE,UAAMS,IAASJ,EAAU,QAAQK,IAASN,EAAU;AACpD,QAAI8B,IAASb,EAAS,QAAQL,IAASkB,IAASd,GAAce,IAAc;AAC5E,WAAOnB,IAAS,IAAIP,KAAUyB,IAAS,IAAIxB,KAAU,KAAK,OAAON,EAAU8B,IAAS,CAAC,GAAG7B,EAAUW,IAAS,CAAC,GAAGhB,CAAO;AAClH,MAAAgB,KACAkB,KACAC,KACInC,EAAQ,sBACRqB,EAAS,gBAAgB,EAAE,OAAO,GAAG,mBAAmBA,EAAS,eAAe,OAAO,IAAO,SAAS,GAAK;AAGpH,WAAIc,KAAe,CAACnC,EAAQ,sBACxBqB,EAAS,gBAAgB,EAAE,OAAOc,GAAa,mBAAmBd,EAAS,eAAe,OAAO,IAAO,SAAS,GAAK,IAE1HA,EAAS,SAASa,GACXlB;AAAA,EACX;AAAA,EACA,OAAOoB,GAAMC,GAAOrC,GAAS;AACzB,WAAIA,EAAQ,aACDA,EAAQ,WAAWoC,GAAMC,CAAK,IAG9BD,MAASC,KACR,CAAC,CAACrC,EAAQ,cAAcoC,EAAK,kBAAkBC,EAAM;EAErE;AAAA,EACA,YAAYC,GAAO;AACf,UAAMV,IAAM,CAAA;AACZ,aAASW,IAAI,GAAGA,IAAID,EAAM,QAAQC;AAC9B,MAAID,EAAMC,CAAC,KACPX,EAAI,KAAKU,EAAMC,CAAC,CAAC;AAGzB,WAAOX;AAAA,EACX;AAAA;AAAA,EAEA,UAAUpB,GAAOR,GAAS;AACtB,WAAOQ;AAAA,EACX;AAAA;AAAA,EAEA,SAASA,GAAOR,GAAS;AACrB,WAAO,MAAM,KAAKQ,CAAK;AAAA,EAC3B;AAAA,EACA,KAAKgC,GAAO;AAKR,WAAOA,EAAM,KAAK,EAAE;AAAA,EACxB;AAAA,EACA,YAAYC,GAEZzC,GAAS;AACL,WAAOyC;AAAA,EACX;AAAA,EACA,IAAI,kBAAkB;AAClB,WAAO;AAAA,EACX;AAAA,EACA,YAAYC,GAAerC,GAAWD,GAAW;AAG7C,UAAMuC,IAAa,CAAA;AACnB,QAAIC;AACJ,WAAOF;AACH,MAAAC,EAAW,KAAKD,CAAa,GAC7BE,IAAgBF,EAAc,mBAC9B,OAAOA,EAAc,mBACrBA,IAAgBE;AAEpB,IAAAD,EAAW,QAAO;AAClB,UAAME,IAAeF,EAAW;AAChC,QAAIG,IAAe,GAAG9B,IAAS,GAAGkB,IAAS;AAC3C,WAAOY,IAAeD,GAAcC,KAAgB;AAChD,YAAMC,IAAYJ,EAAWG,CAAY;AACzC,UAAKC,EAAU;AAmBX,QAAAA,EAAU,QAAQ,KAAK,KAAK3C,EAAU,MAAM8B,GAAQA,IAASa,EAAU,KAAK,CAAC,GAC7Eb,KAAUa,EAAU;AAAA,WApBA;AACpB,YAAI,CAACA,EAAU,SAAS,KAAK,iBAAiB;AAC1C,cAAIvC,IAAQH,EAAU,MAAMW,GAAQA,IAAS+B,EAAU,KAAK;AAC5D,UAAAvC,IAAQA,EAAM,IAAI,SAAUA,GAAO+B,GAAG;AAClC,kBAAMS,IAAW5C,EAAU8B,IAASK,CAAC;AACrC,mBAAOS,EAAS,SAASxC,EAAM,SAASwC,IAAWxC;AAAA,UACvD,CAAC,GACDuC,EAAU,QAAQ,KAAK,KAAKvC,CAAK;AAAA,QACrC;AAEI,UAAAuC,EAAU,QAAQ,KAAK,KAAK1C,EAAU,MAAMW,GAAQA,IAAS+B,EAAU,KAAK,CAAC;AAEjF,QAAA/B,KAAU+B,EAAU,OAEfA,EAAU,UACXb,KAAUa,EAAU;AAAA,MAE5B;AAAA,IAKJ;AACA,WAAOJ;AAAA,EACX;AACJ;ACxOA,MAAMM,KAAoB;AAiP1B,MAAMC,WAA2BrD,GAAK;AAAA,EAClC,SAASW,GAAO;AAMZ,UAAM2C,IAAQ,IAAI,OAAO,cAAcF,EAAiB,sBAAsBA,EAAiB,KAAK,IAAI;AACxG,WAAOzC,EAAM,MAAM2C,CAAK,KAAK,CAAA;AAAA,EACjC;AACJ;AACO,MAAMC,KAAqB,IAAIF,GAAkB;AACjD,SAASG,GAAmBvD,GAAQC,GAAQC,GAAS;AACxD,SAAOoD,GAAmB,KAAKtD,GAAQC,GAAQC,CAAO;AAC1D;ACjRA,MAAMsD,WAAiBzD,GAAK;AAAA,EACxB,cAAc;AACV,UAAM,GAAG,SAAS,GAClB,KAAK,WAAW0D;AAAA,EACpB;AAAA,EACA,OAAOnB,GAAMC,GAAOrC,GAAS;AAQzB,WAAIA,EAAQ,qBACJ,CAACA,EAAQ,kBAAkB,CAACoC,EAAK,SAAS;AAAA,CAAI,OAC9CA,IAAOA,EAAK,KAAI,KAEhB,CAACpC,EAAQ,kBAAkB,CAACqC,EAAM,SAAS;AAAA,CAAI,OAC/CA,IAAQA,EAAM,KAAI,MAGjBrC,EAAQ,sBAAsB,CAACA,EAAQ,mBACxCoC,EAAK,SAAS;AAAA,CAAI,MAClBA,IAAOA,EAAK,MAAM,GAAG,EAAE,IAEvBC,EAAM,SAAS;AAAA,CAAI,MACnBA,IAAQA,EAAM,MAAM,GAAG,EAAE,KAG1B,MAAM,OAAOD,GAAMC,GAAOrC,CAAO;AAAA,EAC5C;AACJ;AACO,MAAMwD,KAAW,IAAIF,GAAQ;AAC7B,SAASG,GAAU3D,GAAQC,GAAQC,GAAS;AAC/C,SAAOwD,GAAS,KAAK1D,GAAQC,GAAQC,CAAO;AAChD;AAMO,SAASuD,GAAS/C,GAAOR,GAAS;AACrC,EAAIA,EAAQ,oBAERQ,IAAQA,EAAM,QAAQ,SAAS;AAAA,CAAI;AAEvC,QAAMkD,IAAW,CAAA,GAAIC,IAAmBnD,EAAM,MAAM,WAAW;AAE/D,EAAKmD,EAAiBA,EAAiB,SAAS,CAAC,KAC7CA,EAAiB,IAAG;AAGxB,WAAS,IAAI,GAAG,IAAIA,EAAiB,QAAQ,KAAK;AAC9C,UAAMC,IAAOD,EAAiB,CAAC;AAC/B,IAAI,IAAI,KAAK,CAAC3D,EAAQ,iBAClB0D,EAASA,EAAS,SAAS,CAAC,KAAKE,IAGjCF,EAAS,KAAKE,CAAI;AAAA,EAE1B;AACA,SAAOF;AACX;AC/DA,MAAMG,WAAkBhE,GAAK;AAAA,EACzB,SAASW,GAAO;AACZ,WAAOA,EAAM,MAAK;AAAA,EACtB;AAAA,EACA,KAAKA,GAAO;AACR,WAAOA;AAAA,EACX;AAAA,EACA,YAAYA,GAAO;AACf,WAAOA;AAAA,EACX;AACJ;AACO,MAAMsD,KAAY,IAAID,GAAS;AAC/B,SAASE,GAAWC,GAAQC,GAAQjE,GAAS;AAChD,SAAO8D,GAAU,KAAKE,GAAQC,GAAQjE,CAAO;AACjD;ACCO,SAASkE,GACdC,GACAC,GACc;AACd,QAAMC,IAAwB,CAAA,GACxBC,IAAQC,GAAeJ,GAAYC,CAAU;AACnD,MAAII,IAAW;AAEf,WAASjC,IAAI,GAAGA,IAAI+B,EAAM,QAAQ/B,KAAK;AACrC,UAAMkC,IAAOH,EAAM/B,CAAC;AACpB,QAAI,CAACkC;AACH;AAEF,UAAMjE,IAAQiE,EAAK,SAAS;AAE5B,QAAIA,EAAK,OAAO;AACd,MAAAJ,EAAQ,KAAK;AAAA,QACX,MAAM;AAAA,QACN,UAAAG;AAAA,QACA,QAAQhE,EAAM;AAAA,QACd,MAAMA;AAAA,MAAA,CACP;AACD;AAAA,IACF;AAEA,QAAIiE,EAAK,SAAS;AAChB,YAAMC,IAAOJ,EAAM/B,IAAI,CAAC;AAExB,UAAImC,KAAQA,EAAK,OAAO;AACtB,cAAMC,IAAYD,EAAK,SAAS,IAC1BE,IAAYC,GAAwBrE,GAAOmE,CAAS;AAC1D,YAAIG,IAAWN;AAEf,QAAAI,EAAU,QAAQ,CAACG,MAAS;AAC1B,UAAIA,EAAK,QACPV,EAAQ,KAAK;AAAA,YACX,MAAM;AAAA,YACN,UAAUS;AAAA,YACV,QAAQC,EAAK,MAAM;AAAA,YACnB,MAAMA,EAAK;AAAA,UAAA,CACZ,KACQA,EAAK,WACdV,EAAQ,KAAK;AAAA,YACX,MAAM;AAAA,YACN,UAAUS;AAAA,YACV,QAAQC,EAAK,MAAM;AAAA,YACnB,MAAMA,EAAK;AAAA,UAAA,CACZ,GACDD,KAAYC,EAAK,MAAM;AAAA,QAI3B,CAAC,GAEDP,KAAYhE,EAAM,QAClB+B;AACA;AAAA,MACF;AAEA,MAAA8B,EAAQ,KAAK;AAAA,QACX,MAAM;AAAA,QACN,UAAAG;AAAA,QACA,QAAQhE,EAAM;AAAA,QACd,MAAMA;AAAA,MAAA,CACP,GACDgE,KAAYhE,EAAM;AAClB;AAAA,IACF;AAEA,IAAAgE,KAAYhE,EAAM;AAAA,EACpB;AAEA,SAAO6D;AACT;AAMO,SAASW,GACdb,GACAE,GACQ;AACR,MAAIA,EAAQ,WAAW;AACrB,WAAOF;AAGT,QAAMC,IAAaa,GAAad,GAAYE,CAAO,GAC7CjE,IAAY8E,GAAiBf,CAAU,GACvC9D,IAAY6E,GAAiBd,CAAU,GACvCe,IAAQC,GAAgBhF,GAAWC,CAAS,GAC5CgF,IAAmB,CAAA;AAEzB,WAAS9C,IAAI,GAAGA,IAAI4C,EAAM,QAAQ5C,KAAK;AACrC,UAAMkC,IAAOU,EAAM5C,CAAC;AACpB,QAAI,CAACkC;AACH;AAEF,UAAMa,IAAY,MAAM,QAAQb,EAAK,KAAK,IAAKA,EAAK,QAAqB,CAAA;AAEzE,QAAIA,EAAK,OAAO;AACd,MAAAa,EAAU,QAAQ,CAACC,MAAU;AAC3B,QAAAF,EAAO,KAAKG,GAAYD,GAAO,UAAU,CAAC;AAAA,MAC5C,CAAC;AACD;AAAA,IACF;AAEA,QAAId,EAAK,SAAS;AAChB,YAAMC,IAAOS,EAAM5C,IAAI,CAAC;AACxB,UAAImC,KAAQA,EAAK,OAAO;AACtB,cAAMC,IAAY,MAAM,QAAQD,EAAK,KAAK,IACrCA,EAAK,QACN,CAAA;AACJ,QAAAW,EAAO,KAAK,GAAGI,GAAgBH,GAAWX,CAAS,CAAC,GACpDpC;AAAA,MACF;AACE,QAAA+C,EAAU,QAAQ,CAACC,MAAU;AAC3B,UAAAF,EAAO,KAAKG,GAAYD,GAAO,UAAU,CAAC;AAAA,QAC5C,CAAC;AAEH;AAAA,IACF;AAEA,IAAAF,EAAO,KAAK,GAAGC,CAAS;AAAA,EAC1B;AAEA,SAAOD,EAAO,KAAK,EAAE;AACvB;AAIA,SAASG,GAAYE,GAAcC,GAA0B;AAC3D,SAAID,EAAK,OAAO,WAAW,IAClBC,MAAS,aAAaD,IAAO,KAG/BE,GAAeF,CAAI,EACvB,IAAI,CAAC9B,MAASiC,GAAWjC,GAAM+B,CAAI,CAAC,EACpC,KAAK,EAAE;AACZ;AAEA,SAASF,GAAgBK,GAAqBC,GAA+B;AAC3E,QAAMV,IAAmB,CAAA,GACnBW,IAAIF,EAAU,QACdG,IAAIF,EAAU,QACdG,IAAUJ,EAAU,IAAI,CAACK,OAAW;AAAA,IACxC,OAAAA;AAAA,IACA,YAAYC,GAAeD,CAAK;AAAA,IAChC,WAAWE,GAAeF,CAAK;AAAA,EAAA,EAC/B,GACIG,IAAUP,EAAU,IAAI,CAACI,OAAW;AAAA,IACxC,OAAAA;AAAA,IACA,YAAYC,GAAeD,CAAK;AAAA,IAChC,WAAWE,GAAeF,CAAK;AAAA,EAAA,EAC/B,GAEII,IAAkB,MAAM;AAAA,IAAK,EAAE,QAAQP,IAAI,EAAA;AAAA,IAAK,MACpD,MAAMC,IAAI,CAAC,EAAE,KAAK,CAAC;AAAA,EAAA;AAGrB,WAAS1D,IAAIyD,IAAI,GAAGzD,KAAK,GAAGA,KAAK;AAC/B,UAAMiE,IAAaD,EAAIhE,CAAC,MAAMgE,EAAIhE,CAAC,IAAI,MAAM0D,IAAI,CAAC,EAAE,KAAK,CAAC,IACpDQ,IAAUF,EAAIhE,IAAI,CAAC,KAAK,CAAA;AAC9B,aAASmE,IAAIT,IAAI,GAAGS,KAAK,GAAGA,KAAK;AAC/B,YAAMC,IAAWT,EAAQ3D,CAAC,GACpBqE,IAAWN,EAAQI,CAAC,GACpBG,IAAOJ,EAAQC,IAAI,CAAC,KAAK,GACzBI,IAAOL,EAAQC,CAAC,KAAK,GACrBrE,IAAQmE,EAAWE,IAAI,CAAC,KAAK;AACnC,MACEC,KACAC,KACAD,EAAS,eAAeC,EAAS,cACjCD,EAAS,cAAcC,EAAS,YAEhCJ,EAAWE,CAAC,IAAI,IAAIG,IAEpBL,EAAWE,CAAC,IAAI,KAAK,IAAII,GAAMzE,CAAK;AAAA,IAExC;AAAA,EACF;AAEA,MAAIE,IAAI,GACJmE,IAAI;AAER,SAAOnE,IAAIyD,KAAKU,IAAIT,KAAG;AACrB,UAAMU,IAAWT,EAAQ3D,CAAC,GACpBqE,IAAWN,EAAQI,CAAC;AAC1B,QAAI,CAACC,KAAY,CAACC;AAChB;AAGF,QACED,EAAS,eAAeC,EAAS,cACjCD,EAAS,cAAcC,EAAS,WAChC;AACA,MAAAvB,EAAO,KAAKuB,EAAS,KAAK,GAC1BrE,KACAmE;AACA;AAAA,IACF;AAEA,UAAMK,IAAUR,EAAIhE,IAAI,CAAC,IAAImE,CAAC,KAAK,GAC7BM,IAAUT,EAAIhE,CAAC,IAAImE,IAAI,CAAC,KAAK;AAEnC,IAAIK,MAAYC,KACd3B,EAAO,KAAK4B,GAAwBN,EAAS,OAAOC,EAAS,KAAK,CAAC,GACnErE,KACAmE,OACSK,IAAUC,KACnB3B,EAAO,KAAKG,GAAYmB,EAAS,OAAO,UAAU,CAAC,GACnDpE,QAEA8C,EAAO,KAAKG,GAAYoB,EAAS,OAAO,UAAU,CAAC,GACnDF;AAAA,EAEJ;AAEA,SAAOnE,IAAIyD,KAAG;AACZ,UAAMkB,IAAQhB,EAAQ3D,CAAC;AACvB,IAAI2E,KACF7B,EAAO,KAAKG,GAAY0B,EAAM,OAAO,UAAU,CAAC,GAElD3E;AAAA,EACF;AAEA,SAAOmE,IAAIT,KAAG;AACZ,UAAMiB,IAAQZ,EAAQI,CAAC;AACvB,IAAIQ,KACF7B,EAAO,KAAKG,GAAY0B,EAAM,OAAO,UAAU,CAAC,GAElDR;AAAA,EACF;AAEA,SAAOrB;AACT;AAEA,SAAS4B,GACPE,GACAC,GACQ;AACR,QAAMC,IAAWzB,GAAeuB,CAAU,GACpCG,IAAW1B,GAAewB,CAAU,GACpCG,IAAM,KAAK,IAAIF,EAAS,QAAQC,EAAS,MAAM,GAC/CE,IAAmB,CAAA;AAEzB,WAASC,IAAQ,GAAGA,IAAQF,GAAKE,KAAS;AACxC,UAAMC,IAAUL,EAASI,CAAK,GACxBE,IAAUL,EAASG,CAAK;AAE9B,IAAIC,MAAY,UAAaC,MAAY,SAErCC,GAAeF,CAAO,KACtBE,GAAeD,CAAO,KACtBE,GAAoBC,GAAcJ,CAAO,CAAC,MACxCG,GAAoBC,GAAcH,CAAO,CAAC,IAE5CH,EAAO,KAAKO,GAAqBL,GAASC,CAAO,CAAC,IACzCK,GAAYN,CAAO,KAAKM,GAAYL,CAAO,IACpDH,EAAO,KAAKS,GAAsBP,GAASC,CAAO,CAAC,IAEnDH,EAAO,KAAKU,GAAeR,GAASC,CAAO,CAAC,IAErCD,MAAY,SACrBF,EAAO,KAAK3B,GAAW6B,GAAS,UAAU,CAAC,IAClCC,MAAY,UACrBH,EAAO,KAAK3B,GAAW8B,GAAS,UAAU,CAAC;AAAA,EAE/C;AAEA,SAAOH,EAAO,KAAK,EAAE;AACvB;AAEA,SAASU,GAAeR,GAAiBC,GAAyB;AAChE,QAAM,EAAE,SAASxD,GAAY,SAASgE,EAAA,IAAaC,GAAUV,CAAO,GAC9D,EAAE,SAAStD,GAAY,SAASiE,EAAA,IAAaD,GAAUT,CAAO,GAE9D,EAAE,QAAQW,GAAW,MAAMC,EAAA,IAAYC,GAAgBrE,CAAU,GACjE,EAAE,QAAQsE,GAAW,MAAMC,EAAA,IAAYF,GAAgBpE,CAAU;AAEvE,MAAIkE,MAAcG;AAChB,WAAO5C,GAAW6B,GAAS,UAAU,IAAI7B,GAAW8B,GAAS,UAAU;AAGzE,QAAMrD,IAAQO,GAAwB0D,GAASG,CAAO;AACtD,MAAIC,IAAaL;AAEjB,SAAAhE,EAAM,QAAQ,CAACS,MAAS;AACtB,IAAIA,EAAK,QAEHA,EAAK,MAAM,WAAW,GAAG,KAAKA,EAAK,MAAM,SAAS,IACpD4D,KAAc,MAAMC,GAAe7D,EAAK,MAAM,MAAM,CAAC,GAAG,UAAU,IAElE4D,KAAcC,GAAe7D,EAAK,OAAO,UAAU,IAE5CA,EAAK,UAEd4D,KAAcC,GAAe7D,EAAK,OAAO,UAAU,IAEnD4D,KAAc5D,EAAK;AAAA,EAEvB,CAAC,GAEM,GAAG4D,CAAU,GAAGN,KAAYF,CAAQ;AAC7C;AAEA,SAASJ,GAAqBL,GAAiBC,GAAyB;AACtE,QAAM,EAAE,SAASxD,GAAY,SAAS0E,EAAA,IAAeT,GAAUV,CAAO,GAChE,EAAE,SAAStD,GAAY,SAAS0E,EAAA,IAAeV,GAAUT,CAAO,GAChEc,IAAYD,GAAgBpE,CAAU,EAAE,QACxCmE,IAAUC,GAAgBrE,CAAU,EAAE,MACtCuE,IAAUF,GAAgBpE,CAAU,EAAE;AAE5C,MAAIgC,GAAejC,CAAU,MAAMiC,GAAehC,CAAU;AAC1D,WAAO,GAAGA,CAAU,GAAG0E,KAAcD,CAAU;AAIjD,QAAME,IAASN,GACTO,IAAUF,KAAcD,GAExBvE,IAAQO,GAAwB0D,GAASG,CAAO,GAChDO,IAAe3E,EAAM,KAAK,CAACS,MAASA,EAAK,KAAK,GAC9CmE,IAAe5E,EAAM,KAAK,CAACS,MAASA,EAAK,OAAO,GAChDoE,IAAe7E,EAAM;AAAA,IACzB,CAACS,MAAS,CAACA,EAAK,SAAS,CAACA,EAAK,WAAWA,EAAK,MAAM,KAAA,EAAO,SAAS;AAAA,EAAA;AAGvE,MAAIkE,KAAgBC,KAAgB,CAACC;AACnC,WAAO,GAAGJ,CAAM,GAAGK,GAAqBb,GAASG,CAAO,CAAC,GAAGM,CAAO;AAGrE,MAAIK,IAAgB;AAEpB,EAAA/E,EAAM,QAAQ,CAACS,MAAS;AACtB,IAAIA,EAAK,QAEHA,EAAK,MAAM,WAAW,GAAG,KAAKA,EAAK,MAAM,SAAS,IACpDsE,KAAiB,MAAMT,GAAe7D,EAAK,MAAM,MAAM,CAAC,GAAG,UAAU,IAErEsE,KAAiBT,GAAe7D,EAAK,OAAO,UAAU,IAE/CA,EAAK,UAEdsE,KAAiBT,GAAe7D,EAAK,OAAO,UAAU,IAEtDsE,KAAiBtE,EAAK;AAAA,EAE1B,CAAC;AAED,QAAMM,IAAS,GAAG0D,CAAM,GAAGM,CAAa;AACxC,SAAIhE,EAAO,KAAA,MAAW0D,EAAO,SACpB,GAAGA,CAAM,GAAGH,GAAeF,GAAS,UAAU,CAAC,GAAGM,CAAO,KAG3D,GAAG3D,CAAM,GAAG2D,CAAO;AAC5B;AAEA,SAASf,GAAsBP,GAAiBC,GAAyB;AACvE,QAAM,EAAE,SAASxD,GAAY,SAAA6E,EAAA,IAAYZ,GAAUV,CAAO,GACpD,EAAE,SAAStD,MAAegE,GAAUT,CAAO;AAEjD,MAAI2B,GAAenF,CAAU,KAAKmF,GAAelF,CAAU;AACzD,WAAO,GAAGA,CAAU,GAAG4E,KAAW,EAAE;AAGtC,QAAMO,IAAWpF,EAAW,MAAM,GAAG,GAC/BqF,IAAWpF,EAAW,MAAM,GAAG,GAC/BqF,IAAY,KAAK,IAAIF,EAAS,QAAQC,EAAS,MAAM,GACrDE,IAA2B,CAAA;AAEjC,WAASnH,IAAI,GAAGA,IAAIkH,GAAWlH,KAAK;AAClC,UAAMoH,IAAUJ,EAAShH,CAAC,KAAK,IACzBqH,IAAUJ,EAASjH,CAAC,KAAK;AAE/B,QAAIA,MAAM,KAAKA,MAAMkH,IAAY,GAAG;AAClC,MAAAC,EAAe,KAAKE,KAAWD,CAAO;AACtC;AAAA,IACF;AAEA,IAAAD,EAAe,KAAKG,GAAsBF,GAASC,CAAO,CAAC;AAAA,EAC7D;AAEA,SAAO,GAAGF,EAAe,KAAK,GAAG,CAAC,GAAGV,KAAW,EAAE;AACpD;AAEA,SAASnD,GAAWjC,GAAc+B,GAA0B;AAC1D,QAAM,EAAE,SAAAmE,GAAS,SAAAd,MAAYZ,GAAUxE,CAAI;AAC3C,MAAI,CAACkG,EAAQ;AACX,WAAOnE,MAAS,aAAamE,IAAUd,IAAUA;AAGnD,QAAM,EAAE,QAAAD,GAAQ,MAAAgB,MAASvB,GAAgBsB,CAAO;AAEhD,MAAIf,GAAQ;AAGV,QAAIgB,EAAK,OAAO,WAAW,GAAG;AAC5B,YAAMC,IAAW,GAAGjB,CAAM,GAAGgB,CAAI;AACjC,aAAO,GAAGnB,GAAeoB,GAAUrE,CAAI,CAAC,GAAGqD,CAAO;AAAA,IACpD;AAEA,WAAO,GAAGD,CAAM,GAAGH,GAAemB,GAAMpE,CAAI,CAAC,GAAGqD,CAAO;AAAA,EACzD;AAEA,SAAIhB,GAAY8B,CAAO,IACdG,GAAgB,IAAIH,GAASnE,CAAI,IAAIqD,IAGvC,GAAGJ,GAAekB,GAASnE,CAAI,CAAC,GAAGqD,CAAO;AACnD;AAEA,SAASJ,GAAekB,GAAiBnE,GAA0B;AACjE,MAAI,CAACmE,EAAS,QAAO;AACrB,QAAMpE,IAAOoE;AACb,SAAKpE,EAAK,SAGHC,MAAS,aAAa,MAAMD,CAAI,QAAQ,MAAMA,CAAI,QAFhDA;AAGX;AAEA,SAAS0D,GAAqBjF,GAAoBC,GAA4B;AAC5E,QAAM8F,IAAU/F,EAAW,KAAA,GACrBgG,IAAU/F,EAAW,KAAA;AAC3B,MAAI,CAAC8F,KAAW,CAACC;AACf,WAAO/F;AAGT,QAAMgG,IAAUhG,EAAW,MAAM,MAAM,IAAI,CAAC,KAAK,IAC3CiG,IAAWjG,EAAW,MAAM,MAAM,IAAI,CAAC,KAAK;AAElD,SAAO,GAAGgG,CAAO,MAAMF,CAAO,KAAKC,CAAO,MAAME,CAAQ;AAC1D;AAEA,SAASR,GAAsBF,GAAiBC,GAAyB;AACvE,QAAMU,IAAaX,EAAQ,KAAA,GACrBY,IAAaX,EAAQ,KAAA;AAE3B,MAAIU,MAAeC;AACjB,WAAOX,KAAWD;AAGpB,QAAMa,IAAeZ,EAAQ,MAAM,MAAM,GACnCa,IAAgBb,EAAQ,MAAM,MAAM,GACpCQ,IAAkBI,IAAe,CAAC,KAAK,IACvCH,IAAmBI,IAAgB,CAAC,KAAK,IAEzCnG,IAAQO,GAAwByF,GAAYC,CAAU;AAC5D,MAAIlF,IAAS;AAEb,SAAAf,EAAM,QAAQ,CAACS,MAAS;AACtB,UAAMvE,IAAQuE,EAAK,SAAS;AAC5B,IAAIA,EAAK,QACPM,KAAUuD,GAAepI,GAAO,UAAU,IACjCuE,EAAK,UACdM,KAAUuD,GAAepI,GAAO,UAAU,IAE1C6E,KAAU7E;AAAA,EAEd,CAAC,GAEM,GAAG4J,CAAO,GAAG/E,CAAM,GAAGgF,CAAQ;AACvC;AAEA,SAASjC,GAAUxE,GAAoD;AACrE,SAAIA,EAAK,SAAS;AAAA,CAAI,IACb,EAAE,SAASA,EAAK,MAAM,GAAG,EAAE,GAAG,SAAS;AAAA,EAAA,IAEzC,EAAE,SAASA,GAAM,SAAS,GAAA;AACnC;AAEA,SAAS4E,GAAgBsB,GAAmD;AAC1E,QAAMY,IAAQZ,EAAQ,MAAM,iCAAiC;AAC7D,MAAIY,GAAO;AACT,UAAM,CAAA,EAAGC,IAAc,IAAIC,IAAY,EAAE,IAAIF;AAC7C,WAAO,EAAE,QAAQC,GAAa,MAAMC,EAAA;AAAA,EACtC;AACA,SAAO,EAAE,QAAQ,IAAI,MAAMd,EAAA;AAC7B;AAEA,SAASlE,GAAeF,GAAwB;AAC9C,SAAIA,MAAS,KAAW,CAAA,IACjBA,EAAK,MAAM,YAAY,GAAG,OAAO,CAAC9B,MAASA,EAAK,SAAS,CAAC,KAAK,CAAA;AACxE;AAEA,SAASkE,GAAclE,GAA6B;AAClD,QAAM,EAAE,SAAAkG,EAAA,IAAY1B,GAAUxE,CAAI;AAElC,SADckG,EAAQ,MAAM,4BAA4B,IACzC,CAAC,KAAK;AACvB;AAEA,SAASjC,GAAoBgD,GAAsC;AACjE,SAAKA,IAEEA,EAAO,QAAQ,4BAA4B,OAAO,IAFrC;AAGtB;AAEA,SAAS7C,GAAY+B,GAAuB;AAC1C,QAAMe,IAAUf,EAAK,KAAA;AACrB,SAAKe,EAAQ,SAAS,GAAG,KACNA,EAAQ,MAAM,KAAK,KAAK,CAAA,GAAI,UAC3B,IAFe;AAGrC;AAEA,SAASxB,GAAe1F,GAAuB;AAC7C,QAAMkH,IAAUlH,EAAK,KAAA;AACrB,MAAI,CAACkH,EAAQ,SAAS,GAAG,EAAG,QAAO;AACnC,QAAMC,IAAQD,EAAQ,MAAM,GAAG,EAAE,OAAO,CAACE,MAASA,EAAK,SAAS,CAAC;AACjE,SACED,EAAM,SAAS,KAAKA,EAAM,MAAM,CAACC,MAAS,WAAW,KAAKA,EAAK,KAAA,CAAM,CAAC;AAE1E;AAEA,SAASf,GACPlB,GACAgB,GACApE,GACQ;AACR,QAAMoF,IAAQhB,EAAK,MAAM,GAAG;AAC5B,MAAIgB,EAAM,SAAS;AACjB,WAAO,GAAGhC,CAAM,GAAGH,GAAemB,GAAMpE,CAAI,CAAC;AAG/C,QAAMsF,IAAYF,EACf,IAAI,CAACC,GAAMvD,MAAU;AACpB,QAAIA,MAAU,KAAKA,MAAUsD,EAAM,SAAS;AAC1C,aAAOC;AAET,UAAMF,IAAUE,EAAK,KAAA;AACrB,QAAI,CAACF,KAAW,WAAW,KAAKA,CAAO;AACrC,aAAOE;AAGT,UAAMR,IAAeQ,EAAK,MAAM,MAAM,GAChCP,IAAgBO,EAAK,MAAM,MAAM,GACjCZ,IAAkBI,IAAe,CAAC,KAAK,IACvCH,IAAmBI,IAAgB,CAAC,KAAK,IACzCS,IAAQF,EAAK,MAAMZ,EAAQ,QAAQY,EAAK,SAASX,EAAS,MAAM;AAEtE,WAAO,GAAGD,CAAO,GAAGxB,GAAesC,KAAS,KAAKvF,CAAI,CAAC,GAAG0E,CAAQ;AAAA,EACnE,CAAC,EACA,KAAK,GAAG;AAEX,SAAO,GAAGtB,CAAM,GAAGkC,CAAS;AAC9B;AAEA,SAAS/F,GAAiB4E,GAA2B;AACnD,QAAMqB,IAAQvF,GAAekE,CAAO,GAC9BsB,IAAmB,CAAA;AACzB,MAAI3D,IAAQ;AAEZ,SAAOA,IAAQ0D,EAAM,UAAQ;AAC3B,UAAMvH,IAAOuH,EAAM1D,CAAK;AACxB,QAAI,CAAC7D;AACH;AAGF,QAAIgE,GAAehE,CAAI,GAAG;AACxB,YAAMyH,IAASC,GAAe1H,CAAI;AAClC,UAAI2B,IAAQ3B;AAIZ,WAHA6D,KAGOA,IAAQ0D,EAAM,UAAQ;AAC3B,cAAMI,IAAWJ,EAAM1D,CAAK;AAC5B,YAAI,CAAC8D;AACH;AAKF,YAAIA,EAAS,KAAA,MAAW,IAAI;AAC1B,UAAAhG,KAASgG,GACT9D;AACA;AAAA,QACF;AAGA,YAAIG,GAAe2D,CAAQ,KACND,GAAeC,CAAQ,KACxBF;AAChB;AAKJ,YAAIG,GAAmBD,GAAUF,CAAM,GAAG;AACxC,UAAA9F,KAASgG,GACT9D;AACA;AAAA,QACF;AAGA;AAAA,MACF;AAEA,MAAA2D,EAAO,KAAK7F,CAAK;AAAA,IACnB;AACE,MAAA6F,EAAO,KAAKxH,CAAI,GAChB6D;AAAA,EAEJ;AAEA,SAAO2D;AACT;AAEA,SAAShF,GAAeD,GAAuB;AAC7C,SAAOsF,GAAoBtF,CAAK;AAClC;AAEA,SAASE,GAAeF,GAAuB;AAG7C,SAFgBA,EAAM,QAAQ,aAAa,EAAE,EAAE,QAAA,EACzB,MAAM,OAAO,EAEhC,IAAI,CAACvC,MAAS;AACb,UAAM,EAAE,QAAAmF,EAAA,IAAWP,GAAgB5E,CAAI;AACvC,QAAI,CAACmF;AACH,aAAO;AAGT,UAAM2C,KADc3C,EAAO,MAAM,MAAM,IACH,CAAC,KAAK,IAAI,QAKxC8B,IAJc9B,EACjB,OACA,QAAQ,QAAQ,GAAG,EACnB,MAAM,qBAAqB,IACD,CAAC,KAAKA,EAAO,KAAA;AAC1C,WAAO,GAAG2C,CAAY,IAAIb,CAAM;AAAA,EAClC,CAAC,EACA,KAAK,GAAG;AACb;AAEA,SAASjD,GAAehE,GAAuB;AAC7C,SAAO,0BAA0B,KAAKA,CAAI;AAC5C;AAEA,SAAS0H,GAAe1H,GAAsB;AAE5C,SADcA,EAAK,MAAM,QAAQ,IAClB,CAAC,GAAG,UAAU;AAC/B;AAEA,SAAS4H,GAAmB5H,GAAc+H,GAA6B;AACrE,SAAK/H,EAAK,KAAA,IACK0H,GAAe1H,CAAI,IAClB+H,IAFS;AAG3B;AAEA,SAASF,GAAoBtF,GAAuB;AAoBlD,SAnBcA,EAAM,MAAM,OAAO,EAE9B,IAAI,CAACvC,MAAS;AACb,QAAI,CAACA,EAAK;AACR,aAAO;AAET,UAAM,EAAE,QAAAmF,GAAQ,MAAAgB,MAASvB,GAAgB5E,CAAI,GACvCgI,IAAcC,GAA6B9B,CAAI;AACrD,QAAI,CAAChB;AACH,aAAO6C,EAAY,KAAA;AAErB,UAAME,IAAmB/C,EAAO,QAAQ,QAAQ,GAAG,EAAE,QAAA,GAC/CgD,IAAcH,EAAY,KAAA;AAChC,WAAOG,EAAY,SAAS,IACxB,GAAGD,CAAgB,IAAIC,CAAW,KAClCD;AAAA,EACN,CAAC,EACA,OAAO,CAAClI,MAASA,EAAK,SAAS,CAAC,EAEjB,KAAK;AAAA,CAAI;AAC7B;AAEA,SAASiI,GAA6BnG,GAAsB;AAC1D,SAAOA,EACJ,QAAQ,8BAA8B,IAAI,EAC1C,QAAQ,oBAAoB,EAAE,EAC9B,QAAQ,wBAAwB,IAAI,EACpC,QAAQ,oBAAoB,IAAI,EAChC,QAAQ,oBAAoB,EAAE,EAC9B,KAAA;AACL;AAMO,SAAST,GACdd,GACAE,GACQ;AACR,MAAIA,EAAQ,WAAW;AACrB,WAAOF;AAIT,QAAM6H,IAAgB,CAAC,GAAG3H,CAAO,EAAE,KAAK,CAAC4H,GAAGC,MAAMA,EAAE,WAAWD,EAAE,QAAQ;AAEzE,MAAI5G,IAASlB;AAEb,aAAWgI,KAAUH;AACnB,QAAIG,EAAO,SAAS,YAAY;AAE9B,YAAMC,IAAS/G,EAAO,UAAU,GAAG8G,EAAO,QAAQ,GAC5CE,IAAQhH,EAAO,UAAU8G,EAAO,QAAQ;AAC9C,MAAA9G,IAAS+G,IAASD,EAAO,OAAOE;AAAA,IAClC,WAAWF,EAAO,SAAS,YAAY;AAErC,YAAMC,IAAS/G,EAAO,UAAU,GAAG8G,EAAO,QAAQ,GAC5CE,IAAQhH,EAAO,UAAU8G,EAAO,WAAWA,EAAO,MAAM;AAC9D,MAAA9G,IAAS+G,IAASC;AAAA,IACpB;AAGF,SAAOhH;AACT;AAmBO,SAASiH,GAAkBxC,GAAiByC,IAAa,IAAc;AAC5E,MAAIlH,IAASyE;AAEb,SAAIyC,KAGFlH,IAASA,EAAO,QAAQ,kBAAkB,EAAE,GAE5CA,IAASA,EAAO,QAAQ,wBAAwB,IAAI,GAEpDA,IAASA,EAAO,QAAQ,2BAA2B,IAAI,MAIvDA,IAASA,EAAO,QAAQ,oBAAoB,IAAI,GAEhDA,IAASA,EAAO,QAAQ,sBAAsB,EAAE,GAEhDA,IAASA,EAAO,QAAQ,2BAA2B,IAAI,IAIzDA,IAASA,EAAO,QAAQ,kBAAkB,EAAE,GAC5CA,IAASA,EAAO,QAAQ,oBAAoB,IAAI,GAEzCA;AACT;AC9uBO,MAAMmH,GAAc;AAAA,EAApB;AACG,IAAAC,EAAA,0BAA8B,CAAA;AAC9B,IAAAA,EAAA,oBAA0B,CAAA;AAC1B,IAAAA,EAAA,mBAAyB,CAAA;AACzB,IAAAA,EAAA,eAAiB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKlB,oBAA0B;AAE/B,UAAMC,IAAmB,SAAS,iBAAiB,kBAAkB;AAErE,SAAK,mBAAmB,MAAM,KAAKA,CAAgB,EAAE,IAAI,CAACC,MAAS;AACjE,YAAMC,IAAKD,EAAK,aAAa,gBAAgB,KAAK,IAC5CE,IAAOF,EAAK,aAAa,kBAAkB,KAAK,QAChDG,IAAQH,EAAK,aAAa,mBAAmB,GAC7CI,IAAaJ,EAAK,aAAa,yBAAyB,GACxDK,IAAeL,EAAK,aAAa,2BAA2B,GAE5DM,IAA4B;AAAA,QAChC,MAAAJ;AAAA,QACA,OAAOC,IAAQ,SAASA,GAAO,EAAE,IAAI;AAAA,QACrC,YAAY,KAAK,kBAAkBH,CAAI;AAAA,QACvC,SAAS,KAAK,eAAeA,CAAI;AAAA,MAAA,GAG7B7C,IAAU,KAAK,uBAAuB6C,CAAI,GAE1CO,IAAmB;AAAA,QACvB,IAAAN;AAAA,QACA,SAAA9C;AAAA,QACA,UAAAmD;AAAA,MAAA;AAGF,aAAIF,MACFG,EAAQ,iBAAiB;AAAA,QACvB,MAAM,SAASH,GAAY,EAAE;AAAA,QAC7B,QAAQC,IAAe,SAASA,GAAc,EAAE,IAAI;AAAA,MAAA,IAIjDE;AAAA,IACT,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUQ,uBAAuBP,GAAkC;AAC/D,UAAMQ,IAAmBR,EAAK,aAAa,sBAAsB;AAEjE,QAAI,CAACQ,GAAkB;AACrB,YAAMP,IAAKD,EAAK,aAAa,gBAAgB,KAAK;AAClD,YAAM,IAAI;AAAA,QACR,qDAAqDC,CAAE;AAAA,MAAA;AAAA,IAI3D;AAEA,UAAMQ,IAAW,KAAK,aAAaD,CAAgB;AACnD,WAAO,KAAK,2BAA2BC,CAAQ;AAAA,EACjD;AAAA;AAAA;AAAA;AAAA,EAKQ,aAAa1H,GAAsB;AACzC,UAAM2H,IAA8B;AAAA,MAClC,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,SAAS;AAAA,IAAA;AAEX,WAAO3H,EAAK;AAAA,MACV;AAAA,MACA,CAAC4H,MAAWD,EAAIC,CAAM,KAAKA;AAAA,IAAA;AAAA,EAE/B;AAAA;AAAA;AAAA;AAAA,EAKQ,kBAAkBX,GAAkD;AAC1E,UAAMY,IAAgC,CAAA,GAChCC,IAAQb,EAAK,cAAc,kCAAkC;AAEnE,WAAIa,KACF,MAAM,KAAKA,EAAM,UAAU,EAAE,QAAQ,CAACC,MAAS;AAC7C,MAAKA,EAAK,KAAK,WAAW,cAAc,MACtCF,EAAME,EAAK,IAAI,IAAIA,EAAK;AAAA,IAE5B,CAAC,GAGIF;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKQ,eAAeZ,GAAoC;AACzD,UAAMa,IAAQb,EAAK,cAAc,kCAAkC;AACnE,WAAKa,IAEE,MAAM,KAAKA,EAAM,SAAS,EAAE;AAAA,MACjC,CAACE,MAAQ,CAACA,EAAI,WAAW,SAAS;AAAA,IAAA,IAHjB,CAAA;AAAA,EAKrB;AAAA;AAAA;AAAA;AAAA,EAKO,aACLb,GACAc,GACAC,GACAC,GACM;AACN,UAAMC,IAAuB;AAAA,MAC3B,IAAI,KAAK,oBAAA;AAAA,MACT,MAAAjB;AAAA,MACA,WAAAc;AAAA,MACA,WAAW,KAAK,IAAA;AAAA,MAChB,QAAAE;AAAA,MACA,MAAAD;AAAA,IAAA;AAGF,SAAK,WAAW,KAAKE,CAAS,GAC9B,KAAK,YAAY,CAAA,GACjB,KAAK,QAAQ;AAAA,EACf;AAAA;AAAA;AAAA;AAAA,EAKO,OACLhE,GACAmD,GACAzI,GACAqJ,GACA7N,GACQ;AACR,UAAM2N,IAAY,QAAQ,KAAK,oBAAA,CAAqB,IAC9CC,IAAmB;AAAA,MACvB,MAAM;AAAA,MACN,SAAA9D;AAAA,MACA,UAAAmD;AAAA,MACA,UAAAzI;AAAA,MACA,UAAUxE,GAAS;AAAA,MACnB,WAAWA,GAAS;AAAA,IAAA;AAGtB,gBAAK,aAAa,UAAU2N,GAAWC,GAAMC,CAAM,GAC5CF;AAAA,EACT;AAAA,EAEO,2BACLA,GACAI,GACgD;AAChD,UAAMb,IAAU,KAAK,YAAYS,CAAS;AAC1C,QAAI,CAACT;AACH,YAAM,IAAI,MAAM,WAAWS,CAAS,YAAY;AAGlD,UAAMK,IACJD,EAAS,SAAS,IACdA,IACA;AAAA,MACE;AAAA,QACE,SAAS;AAAA,QACT,UAAUb,EAAQ;AAAA,MAAA;AAAA,IACpB,GAGFe,IAAuB,KAAK,uBAAuBN,CAAS,GAC5DO,IAAsB,CAAA,GACtBC,IAAuB,CAAA,GAEvB,CAACC,GAAc,GAAGC,CAAY,IAAIL;AACxC,QAAI,CAACI;AACH,aAAO,EAAE,YAAYF,GAAW,YAAAC,EAAA;AAElC,SAAK;AAAA,MACHR;AAAA,MACAS,EAAa;AAAA,MACb;AAAA,MACAA,EAAa;AAAA,IAAA,GAEfF,EAAU,KAAKP,CAAS;AAExB,QAAIW,IAASX;AAEb,UAAMY,IAAa,KAAK;AAAA,MACtBF,EAAa;AAAA,MACbJ,EAAqB;AAAA,IAAA;AAGvB,aAAS1L,IAAI,GAAGA,IAAIgM,GAAYhM,KAAK;AACnC,YAAMiM,IAAUH,EAAa9L,CAAC;AAC9B,UAAI,CAACiM;AACH;AAEF,YAAMC,IAAaR,EAAqB1L,CAAC;AACzC,MAAKkM,MAGL,KAAK,KAAKA,GAAYD,EAAQ,SAAS,QAAWA,EAAQ,QAAQ,GAClEN,EAAU,KAAKO,CAAU,GACzBH,IAASG;AAAA,IACX;AAEA,aAASlM,IAAIgM,GAAYhM,IAAI8L,EAAa,QAAQ9L,KAAK;AACrD,YAAMiM,IAAUH,EAAa9L,CAAC;AAC9B,UAAI,CAACiM;AACH;AAEF,YAAME,IAAQ,KAAK;AAAA,QACjBF,EAAQ;AAAA,QACRA,EAAQ;AAAA,QACR,EAAE,OAAOF,EAAA;AAAA,QACT;AAAA,QACA,EAAE,UAAUX,GAAW,WAAW,GAAA;AAAA,MAAK;AAEzC,MAAAO,EAAU,KAAKQ,CAAK,GACpBJ,IAASI;AAAA,IACX;AAEA,aAASnM,IAAIgM,GAAYhM,IAAI0L,EAAqB,QAAQ1L,KAAK;AAC7D,YAAMqK,IAAKqB,EAAqB1L,CAAC;AACjC,MAAKqK,MACL,KAAK,OAAOA,CAAE,GACduB,EAAW,KAAKvB,CAAE;AAAA,IACpB;AAEA,WAAO,EAAE,YAAYsB,GAAW,YAAAC,EAAA;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA,EAKO,OAAOR,GAAmBE,GAAuB;AACtD,UAAMX,IAAU,KAAK,YAAYS,CAAS;AAC1C,QAAI,CAACT;AACH,YAAM,IAAI,MAAM,WAAWS,CAAS,YAAY;AAGlD,UAAMC,IAAmB;AAAA,MACvB,MAAM;AAAA,MACN,iBAAiBV,EAAQ;AAAA,MACzB,kBAAkBA,EAAQ;AAAA,IAAA;AAG5B,SAAK,aAAa,UAAUS,GAAWC,GAAMC,CAAM;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA,EAKO,KACLF,GACAvJ,GACAyJ,GACAc,GACM;AACN,UAAMzB,IAAU,KAAK,YAAYS,CAAS;AAC1C,QAAI,CAACT;AACH,YAAM,IAAI,MAAM,WAAWS,CAAS,YAAY;AAGlD,UAAMxJ,IAAa+I,EAAQ,SACrB0B,IACJD,MACCA,EAAY,SAASzB,EAAQ,SAAS,QACrCyB,EAAY,UAAUzB,EAAQ,SAAS,SACvC,KAAK,UAAUyB,EAAY,cAAc,EAAE,MACzC,KAAK,UAAUzB,EAAQ,SAAS,cAAc,CAAA,CAAE,KAClD,KAAK,UAAUyB,EAAY,WAAW,CAAA,CAAE,MACtC,KAAK,UAAUzB,EAAQ,SAAS,WAAW,CAAA,CAAE;AAEnD,QAAI,CAAC0B,KAAmBzK,MAAeC,EAAY;AAGnD,UAAMC,IAAUH,GAAgBC,GAAYC,CAAU,GAEhDwJ,IAAiB;AAAA,MACrB,MAAM;AAAA,MACN,YAAAzJ;AAAA,MACA,YAAAC;AAAA,MACA,SAAAC;AAAA,IAAA;AAGF,IAAIuK,MACFhB,EAAK,cAAcV,EAAQ,UAC3BU,EAAK,cAAce,IAGrB,KAAK,aAAa,QAAQhB,GAAWC,GAAMC,CAAM;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA,EAKO,KACLF,GACAkB,GACAC,GACAjB,GACM;AACN,UAAMD,IAAiB;AAAA,MACrB,MAAM;AAAA,MACN,cAAAiB;AAAA,MACA,YAAAC;AAAA,IAAA;AAGF,SAAK,aAAa,QAAQnB,GAAWC,GAAMC,CAAM;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA,EAKO,OAAgB;AACrB,UAAMC,IAAY,KAAK,WAAW,IAAA;AAClC,WAAKA,KAEL,KAAK,UAAU,KAAKA,CAAS,GAC7B,KAAK,QAAQ,IACN,MAJgB;AAAA,EAKzB;AAAA,EAEO,UAAmB;AACxB,WAAO,KAAK,WAAW,SAAS;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA,EAKO,OAAgB;AACrB,UAAMA,IAAY,KAAK,UAAU,IAAA;AACjC,WAAKA,KAEL,KAAK,WAAW,KAAKA,CAAS,GAC9B,KAAK,QAAQ,IACN,MAJgB;AAAA,EAKzB;AAAA,EAEO,UAAmB;AACxB,WAAO,KAAK,UAAU,SAAS;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA,EAKO,kBAA6B;AAClC,QAAIiB,IAAW,CAAC,GAAG,KAAK,gBAAgB;AAExC,eAAWjB,KAAa,KAAK;AAC3B,MAAAiB,IAAW,KAAK,eAAeA,GAAUjB,CAAS;AAGpD,WAAOiB;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAMO,eAAenC,GAA4B;AAEhD,WADgB,KAAK,YAAYA,CAAE,KACjB;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMO,kBAAkBA,GAAoB;AAC3C,UAAMM,IAAU,KAAK,eAAeN,CAAE;AACtC,QAAI,CAACM;AACH,YAAM,IAAI,MAAM,WAAWN,CAAE,YAAY;AAE3C,WAAOM,EAAQ;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMO,oCAAoCN,GAAoB;AAC7D,UAAMM,IAAU,KAAK,eAAeN,CAAE;AACtC,QAAI,CAACM;AACH,YAAM,IAAI,MAAM,WAAWN,CAAE,YAAY;AAE3C,UAAMoC,IAAW,KAAK,mBAAmBpC,CAAE,GACrCqC,IAAgB/B,EAAQ;AAO9B,QAL2B,KAAK,WAAW;AAAA,MACzC,CAACgC,MAAOA,EAAG,cAActC;AAAA,IAAA,EAIJ,WAAW,KAAKoC,MAAaC;AAClD,aAAOA;AAGT,UAAM5K,IAAUH,GAAgB8K,GAAUC,CAAa;AACvD,WAAI5K,EAAQ,WAAW,IACd4K,IAGFjK,GAAsBgK,GAAU3K,CAAO;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA,EAKQ,eAAe0K,GAAqBjB,GAAiC;AAC3E,YAAQA,EAAU,MAAA;AAAA,MAChB,KAAK;AACH,eAAO,KAAK,YAAYiB,GAAUjB,CAAS;AAAA,MAC7C,KAAK;AACH,eAAO,KAAK,YAAYiB,GAAUjB,CAAS;AAAA,MAC7C,KAAK;AACH,eAAO,KAAK,UAAUiB,GAAUjB,CAAS;AAAA,MAC3C,KAAK;AACH,eAAO,KAAK,UAAUiB,GAAUjB,CAAS;AAAA,MAC3C;AACE,eAAOiB;AAAA,IAAA;AAAA,EAEb;AAAA;AAAA;AAAA;AAAA,EAKQ,YAAYA,GAAqBjB,GAAiC;AACxE,UAAMF,IAAOE,EAAU,MACjBqB,IAAsB;AAAA,MAC1B,IAAIrB,EAAU;AAAA,MACd,SAASF,EAAK;AAAA,MACd,UAAUA,EAAK;AAAA,IAAA;AAIjB,QAAIA,EAAK,SAAS,OAAO;AACvB,YAAMnG,IAAQsH,EAAS,UAAU,CAACK,MAAMA,EAAE,OAAOxB,EAAK,SAAS,KAAK;AACpE,MAAInG,MAAU,MACZsH,EAAS,OAAOtH,IAAQ,GAAG,GAAG0H,CAAU;AAAA,IAE5C,WAAWvB,EAAK,SAAS,QAAQ;AAC/B,YAAMnG,IAAQsH,EAAS,UAAU,CAACK,MAAMA,EAAE,OAAOxB,EAAK,SAAS,MAAM;AACrE,MAAInG,MAAU,MACZsH,EAAS,OAAOtH,GAAO,GAAG0H,CAAU;AAAA,IAExC;AACE,MAAAJ,EAAS,KAAKI,CAAU;AAG1B,WAAOJ;AAAA,EACT;AAAA,EAEQ,uBAAuBM,GAA4B;AACzD,QAAI,CAACA;AACH,aAAO,CAAA;AAGT,UAAMC,wBAAgB,IAAA;AAEtB,eAAWJ,KAAM,KAAK;AACpB,MAAIA,EAAG,SAAS,WACKA,EAAG,KACP,aAAaG,KAC1BC,EAAU,IAAIJ,EAAG,SAAS,IAEnBA,EAAG,SAAS,YACjBI,EAAU,IAAIJ,EAAG,SAAS,KAC5BI,EAAU,OAAOJ,EAAG,SAAS;AAKnC,QAAII,EAAU,SAAS;AACrB,aAAO,CAAA;AAGT,UAAMC,IAAQ,KAAK,gBAAA,GACbC,IAAcD,EAAM,UAAU,CAACE,MAAOA,EAAG,OAAOJ,CAAQ;AAC9D,QAAIG,MAAgB;AAClB,aAAO,CAAA;AAGT,UAAME,IAAuB,CAAA;AAC7B,aAASnN,IAAIiN,IAAc,GAAGjN,IAAIgN,EAAM,QAAQhN,KAAK;AACnD,YAAMoN,IAAYJ,EAAMhN,CAAC;AACzB,UAAI,CAACoN;AACH;AAEF,YAAMC,IAAcD,EAAU;AAC9B,UAAI,CAACL,EAAU,IAAIM,CAAW;AAC5B;AAEF,MAAAF,EAAW,KAAKE,CAAW;AAAA,IAC7B;AAEA,WAAOF;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKQ,YAAYX,GAAqBjB,GAAiC;AACxE,WAAOiB,EAAS,OAAO,CAACK,MAAMA,EAAE,OAAOtB,EAAU,SAAS;AAAA,EAC5D;AAAA;AAAA;AAAA;AAAA,EAKQ,UAAUiB,GAAqBjB,GAAiC;AACtE,UAAMF,IAAOE,EAAU;AACvB,WAAOiB,EAAS,IAAI,CAACK,MAAM;AACzB,UAAIA,EAAE,OAAOtB,EAAU,WAAW;AAChC,cAAM+B,IAAmB,EAAE,GAAGT,GAAG,SAASxB,EAAK,WAAA;AAC/C,eAAIA,EAAK,gBACPiC,EAAQ,WAAWjC,EAAK,cAEnBiC;AAAA,MACT;AACA,aAAOT;AAAA,IACT,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKQ,UAAUL,GAAqBjB,GAAiC;AACtE,UAAMF,IAAOE,EAAU,MACjBZ,IAAU6B,EAASnB,EAAK,YAAY;AAE1C,WAAKV,MAEL6B,EAAS,OAAOnB,EAAK,cAAc,CAAC,GACpCmB,EAAS,OAAOnB,EAAK,YAAY,GAAGV,CAAO,IAEpC6B;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBO,aAAqB;AAE1B,WADiB,KAAK,gBAAA,EACN,IAAI,CAACK,MAAMA,EAAE,OAAO,EAAE,KAAK;AAAA;AAAA,CAAM;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOO,kBAA0B;AAE/B,WADiB,KAAK,gBAAA,EACN,IAAI,CAACA,MAAM9C,GAAkB8C,EAAE,SAAS,EAAI,CAAC,EAAE,KAAK;AAAA;AAAA,CAAM;AAAA,EAC5E;AAAA;AAAA;AAAA;AAAA;AAAA,EAMQ,2BAA2BhC,GAA0B;AAC3D,QAAI,CAACA,EAAS,SAAS,KAAK;AAC1B,aAAOA;AAGT,UAAM0C,IACJ;AAEF,QAAIC,IAAU3C,GACV4C;AACJ;AACE,MAAAA,IAAWD,GACXA,IAAUA,EAAQ,QAAQD,GAAS,CAACG,GAAQ7F,GAASiB,GAAQH,MAAU;AACrE,cAAMC,IAAQD,EAAM,MAAM,OAAO;AACjC,YAAIgF,IAAY,OAAO;AAEvB,mBAAWtM,KAAQuH,GAAO;AACxB,gBAAMT,IAAQ9G,EAAK,MAAM,eAAe;AACxC,UAAI8G,MACFwF,IAAY,KAAK,IAAIA,GAAWxF,EAAM,CAAC,EAAE,MAAM;AAAA,QAEnD;AAEA,QAAK,OAAO,SAASwF,CAAS,MAC5BA,IAAY;AAGd,cAAMC,IAAahF,EAChB,IAAI,CAACvH,MAAiB;AACrB,cAAI,CAACA,EAAK;AACR,mBAAO;AAET,gBAAMwM,IAAWxM,EAAK,MAAMsM,CAAS;AACrC,iBAAO,GAAG7E,CAAM,GAAG+E,CAAQ;AAAA,QAC7B,CAAC,EACA,KAAK;AAAA,CAAI;AAEZ,eAAO,GAAGhG,CAAO,GAAG+F,CAAU;AAAA,MAChC,CAAC;AAAA,WACMJ,MAAYC;AAErB,WAAOD;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKO,sBAA8B;AACnC,UAAMM,IAAiC,CAAA;AAEvC,eAAWnB,KAAM,KAAK;AACpB,MAAAmB,EAAOnB,EAAG,IAAI,KAAKmB,EAAOnB,EAAG,IAAI,KAAK,KAAK;AAG7C,UAAM/J,IAAkB,CAAA;AACxB,WAAIkL,EAAO,UAAQlL,EAAM,KAAK,SAASkL,EAAO,MAAM,aAAa,GAC7DA,EAAO,UAAQlL,EAAM,KAAK,WAAWkL,EAAO,MAAM,aAAa,GAC/DA,EAAO,QAAMlL,EAAM,KAAK,UAAUkL,EAAO,IAAI,aAAa,GAC1DA,EAAO,QAAMlL,EAAM,KAAK,SAASkL,EAAO,IAAI,aAAa,GAEtDlL,EAAM,SAAS,IAAIA,EAAM,KAAK,IAAI,IAAI;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA,EAKQ,YAAYyH,GAAiC;AAEnD,WADgB,KAAK,gBAAA,EACN,KAAK,CAACwC,MAAMA,EAAE,OAAOxC,CAAE;AAAA,EACxC;AAAA,EAEQ,mBAAmBA,GAAoB;AAC7C,UAAM0D,IAAW,KAAK,oBAAoB1D,CAAE;AAC5C,QAAI0D,UAAiBA,EAAS;AAE9B,UAAMC,IAAc,KAAK,WAAW;AAAA,MAClC,CAACrB,MAAOA,EAAG,SAAS,YAAYA,EAAG,cAActC;AAAA,IAAA;AAEnD,WAAI2D,IACWA,EAAY,KACb,UAGP;AAAA,EACT;AAAA,EAEQ,oBAAoB3D,GAAiC;AAC3D,WAAO,KAAK,iBAAiB,KAAK,CAACwC,MAAMA,EAAE,OAAOxC,CAAE;AAAA,EACtD;AAAA;AAAA;AAAA;AAAA,EAKQ,sBAA8B;AACpC,WAAO,GAAG,KAAK,IAAA,CAAK,IAAI,KAAK,OAAA,EAAS,SAAS,EAAE,EAAE,OAAO,GAAG,CAAC,CAAC;AAAA,EACjE;AAAA;AAAA;AAAA;AAAA,EAKO,uBAAgC;AACrC,WAAO,CAAC,KAAK,SAAS,KAAK,WAAW,SAAS;AAAA,EACjD;AAAA;AAAA;AAAA;AAAA,EAKO,cAAoB;AACzB,SAAK,QAAQ;AAAA,EACf;AAAA;AAAA;AAAA;AAAA,EAKO,gBAAuC;AAC5C,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKO,QAAc;AACnB,SAAK,aAAa,CAAA,GAClB,KAAK,YAAY,CAAA,GACjB,KAAK,QAAQ;AAAA,EACf;AACF;ACptBA,MAAM4D,KAAe,CAAA;AAed,SAASC,GAASjQ,GAAOR,GAAS;AACvC,QAAM0Q,IAAsBF,IACtBG,IACJ,OAAOD,EAAS,mBAAoB,YAChCA,EAAS,kBACT,IACAE,IACJ,OAAOF,EAAS,eAAgB,YAAYA,EAAS,cAAc;AAErE,SAAOG,GAAIrQ,GAAOmQ,GAAiBC,CAAW;AAChD;AAcA,SAASC,GAAIrQ,GAAOmQ,GAAiBC,GAAa;AAChD,MAAIE,GAAKtQ,CAAK,GAAG;AACf,QAAI,WAAWA;AACb,aAAOA,EAAM,SAAS,UAAU,CAACoQ,IAAc,KAAKpQ,EAAM;AAG5D,QAAImQ,KAAmB,SAASnQ,KAASA,EAAM;AAC7C,aAAOA,EAAM;AAGf,QAAI,cAAcA;AAChB,aAAOuQ,GAAIvQ,EAAM,UAAUmQ,GAAiBC,CAAW;AAAA,EAE3D;AAEA,SAAI,MAAM,QAAQpQ,CAAK,IACduQ,GAAIvQ,GAAOmQ,GAAiBC,CAAW,IAGzC;AACT;AAcA,SAASG,GAAIC,GAAQL,GAAiBC,GAAa;AAEjD,QAAMvL,IAAS,CAAA;AACf,MAAIoC,IAAQ;AAEZ,SAAO,EAAEA,IAAQuJ,EAAO;AACtB,IAAA3L,EAAOoC,CAAK,IAAIoJ,GAAIG,EAAOvJ,CAAK,GAAGkJ,GAAiBC,CAAW;AAGjE,SAAOvL,EAAO,KAAK,EAAE;AACvB;AAUA,SAASyL,GAAKtQ,GAAO;AACnB,SAAO,GAAQA,KAAS,OAAOA,KAAU;AAC3C;ACpGO,SAASyQ,GAAKC,GAAO;AAC1B,MAAIA;AACF,UAAMA;AAEV;;;;;;;;ACTA,MAAIC,IAAS,OAAO,UAAU,gBAC1BC,IAAQ,OAAO,UAAU,UACzBC,IAAiB,OAAO,gBACxBC,IAAO,OAAO,0BAEdC,IAAU,SAAiBC,GAAK;AACnC,WAAI,OAAO,MAAM,WAAY,aACrB,MAAM,QAAQA,CAAG,IAGlBJ,EAAM,KAAKI,CAAG,MAAM;AAAA,EAC5B,GAEIC,IAAgB,SAAuBC,GAAK;AAC/C,QAAI,CAACA,KAAON,EAAM,KAAKM,CAAG,MAAM;AAC/B,aAAO;AAGR,QAAIC,IAAoBR,EAAO,KAAKO,GAAK,aAAa,GAClDE,IAAmBF,EAAI,eAAeA,EAAI,YAAY,aAAaP,EAAO,KAAKO,EAAI,YAAY,WAAW,eAAe;AAE7H,QAAIA,EAAI,eAAe,CAACC,KAAqB,CAACC;AAC7C,aAAO;AAKR,QAAIC;AACJ,SAAKA,KAAOH;AAAK;AAEjB,WAAO,OAAOG,IAAQ,OAAeV,EAAO,KAAKO,GAAKG,CAAG;AAAA,EAC1D,GAGIC,IAAc,SAAqBC,GAAQ/R,GAAS;AACvD,IAAIqR,KAAkBrR,EAAQ,SAAS,cACtCqR,EAAeU,GAAQ/R,EAAQ,MAAM;AAAA,MACpC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,OAAOA,EAAQ;AAAA,MACf,UAAU;AAAA,IACb,CAAG,IAED+R,EAAO/R,EAAQ,IAAI,IAAIA,EAAQ;AAAA,EAEjC,GAGIgS,IAAc,SAAqBN,GAAKO,GAAM;AACjD,QAAIA,MAAS;AACZ,UAAKd,EAAO,KAAKO,GAAKO,CAAI;AAEnB,YAAIX;AAGV,iBAAOA,EAAKI,GAAKO,CAAI,EAAE;AAAA,YAJvB;AAQF,WAAOP,EAAIO,CAAI;AAAA,EAChB;AAEAC,SAAAA,KAAiB,SAASA,IAAS;AAClC,QAAIlS,GAASiS,GAAME,GAAKC,GAAMC,GAAaC,GACvCP,IAAS,UAAU,CAAC,GACpBxP,IAAI,GACJgQ,IAAS,UAAU,QACnBC,IAAO;AAaX,SAVI,OAAOT,KAAW,cACrBS,IAAOT,GACPA,IAAS,UAAU,CAAC,KAAK,CAAA,GAEzBxP,IAAI,KAEDwP,KAAU,QAAS,OAAOA,KAAW,YAAY,OAAOA,KAAW,gBACtEA,IAAS,CAAA,IAGHxP,IAAIgQ,GAAQ,EAAEhQ;AAGpB,UAFAvC,IAAU,UAAUuC,CAAC,GAEjBvC,KAAW;AAEd,aAAKiS,KAAQjS;AACZ,UAAAmS,IAAMH,EAAYD,GAAQE,CAAI,GAC9BG,IAAOJ,EAAYhS,GAASiS,CAAI,GAG5BF,MAAWK,MAEVI,KAAQJ,MAASX,EAAcW,CAAI,MAAMC,IAAcd,EAAQa,CAAI,OAClEC,KACHA,IAAc,IACdC,IAAQH,KAAOZ,EAAQY,CAAG,IAAIA,IAAM,CAAA,KAEpCG,IAAQH,KAAOV,EAAcU,CAAG,IAAIA,IAAM,CAAA,GAI3CL,EAAYC,GAAQ,EAAE,MAAME,GAAM,UAAUC,EAAOM,GAAMF,GAAOF,CAAI,GAAG,KAG7D,OAAOA,IAAS,OAC1BN,EAAYC,GAAQ,EAAE,MAAME,GAAM,UAAUG,GAAM;AAQvD,WAAOL;AAAA,EACR;;;;ACpHe,SAASN,GAAcjR,GAAO;AAC5C,MAAI,OAAOA,KAAU,YAAYA,MAAU;AAC1C,WAAO;AAGR,QAAMiS,IAAY,OAAO,eAAejS,CAAK;AAC7C,UAAQiS,MAAc,QAAQA,MAAc,OAAO,aAAa,OAAO,eAAeA,CAAS,MAAM,SAAS,EAAE,OAAO,eAAejS,MAAU,EAAE,OAAO,YAAYA;AACtK;AC+BO,SAASkS,KAAS;AAEvB,QAAMC,IAAM,CAAA,GAENC,IAAW,EAAC,KAAAC,GAAK,KAAAC,EAAG;AAE1B,SAAOF;AAGP,WAASC,KAAO7B,GAAQ;AACtB,QAAI+B,IAAkB;AAEtB,UAAM9S,IAAW+Q,EAAO,IAAG;AAE3B,QAAI,OAAO/Q,KAAa;AACtB,YAAM,IAAI,UAAU,6CAA6CA,CAAQ;AAG3E,IAAAyE,EAAK,MAAM,GAAGsM,CAAM;AAQpB,aAAStM,EAAKwM,MAAU8B,GAAQ;AAC9B,YAAMC,IAAKN,EAAI,EAAEI,CAAe;AAChC,UAAItL,IAAQ;AAEZ,UAAIyJ,GAAO;AACT,QAAAjR,EAASiR,CAAK;AACd;AAAA,MACF;AAGA,aAAO,EAAEzJ,IAAQuJ,EAAO;AACtB,SAAIgC,EAAOvL,CAAK,MAAM,QAAQuL,EAAOvL,CAAK,MAAM,YAC9CuL,EAAOvL,CAAK,IAAIuJ,EAAOvJ,CAAK;AAKhC,MAAAuJ,IAASgC,GAGLC,IACFC,GAAKD,GAAIvO,CAAI,EAAE,GAAGsO,CAAM,IAExB/S,EAAS,MAAM,GAAG+S,CAAM;AAAA,IAE5B;AAAA,EACF;AAGA,WAASF,EAAIK,GAAY;AACvB,QAAI,OAAOA,KAAe;AACxB,YAAM,IAAI;AAAA,QACR,iDAAiDA;AAAA,MACzD;AAGI,WAAAR,EAAI,KAAKQ,CAAU,GACZP;AAAA,EACT;AACF;AAkCO,SAASM,GAAKE,GAAYnT,GAAU;AAEzC,MAAIoT;AAEJ,SAAOC;AAQP,WAASA,KAAWC,GAAY;AAC9B,UAAMC,IAAoBJ,EAAW,SAASG,EAAW;AAEzD,QAAIlO;AAEJ,IAAImO,KACFD,EAAW,KAAKhT,CAAI;AAGtB,QAAI;AACF,MAAA8E,IAAS+N,EAAW,MAAM,MAAMG,CAAU;AAAA,IAC5C,SAASrC,GAAO;AACd,YAAMuC;AAAA;AAAA,QAAkCvC;AAAA;AAMxC,UAAIsC,KAAqBH;AACvB,cAAMI;AAGR,aAAOlT,EAAKkT,CAAS;AAAA,IACvB;AAEA,IAAKD,MACCnO,KAAUA,EAAO,QAAQ,OAAOA,EAAO,QAAS,aAClDA,EAAO,KAAKqO,GAAMnT,CAAI,IACb8E,aAAkB,QAC3B9E,EAAK8E,CAAM,IAEXqO,EAAKrO,CAAM;AAAA,EAGjB;AAOA,WAAS9E,EAAK2Q,MAAU8B,GAAQ;AAC9B,IAAKK,MACHA,IAAS,IACTpT,EAASiR,GAAO,GAAG8B,CAAM;AAAA,EAE7B;AAOA,WAASU,EAAKlT,GAAO;AACnB,IAAAD,EAAK,MAAMC,CAAK;AAAA,EAClB;AACF;ACzKO,SAASmT,GAAkBnT,GAAO;AAEvC,SAAI,CAACA,KAAS,OAAOA,KAAU,WACtB,KAIL,cAAcA,KAAS,UAAUA,IAC5BgE,GAAShE,EAAM,QAAQ,IAI5B,WAAWA,KAAS,SAASA,IACxBgE,GAAShE,CAAK,IAInB,UAAUA,KAAS,YAAYA,IAC1BoT,GAAMpT,CAAK,IAIb;AACT;AAMA,SAASoT,GAAMA,GAAO;AACpB,SAAOnM,GAAMmM,KAASA,EAAM,IAAI,IAAI,MAAMnM,GAAMmM,KAASA,EAAM,MAAM;AACvE;AAMA,SAASpP,GAASqP,GAAK;AACrB,SAAOD,GAAMC,KAAOA,EAAI,KAAK,IAAI,MAAMD,GAAMC,KAAOA,EAAI,GAAG;AAC7D;AAMA,SAASpM,GAAMjH,GAAO;AACpB,SAAOA,KAAS,OAAOA,KAAU,WAAWA,IAAQ;AACtD;ACzDO,MAAMsT,WAAqB,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAwDtC,YAAYC,GAAeC,GAAwBC,GAAQ;AACzD,UAAK,GAED,OAAOD,KAA2B,aACpCC,IAASD,GACTA,IAAyB;AAI3B,QAAIE,IAAS,IAETlU,IAAU,CAAA,GACVmU,IAAc;AAwClB,QAtCIH,MAGA,UAAUA,KACV,YAAYA,IAEZhU,IAAU,EAAC,OAAOgU,EAAsB,IAIxC,WAAWA,KACX,SAASA,IAEThU,IAAU,EAAC,OAAOgU,EAAsB,IAGjC,UAAUA,IACjBhU,IAAU;AAAA,MACR,WAAW,CAACgU,CAAsB;AAAA,MAClC,OAAOA,EAAuB;AAAA,IACxC,IAIQhU,IAAU,EAAC,GAAGgU,EAAsB,IAIpC,OAAOD,KAAkB,WAC3BG,IAASH,IAGF,CAAC/T,EAAQ,SAAS+T,MACzBI,IAAc,IACdD,IAASH,EAAc,SACvB/T,EAAQ,QAAQ+T,IAGd,CAAC/T,EAAQ,UAAU,CAACA,EAAQ,UAAU,OAAOiU,KAAW,UAAU;AACpE,YAAMxM,IAAQwM,EAAO,QAAQ,GAAG;AAEhC,MAAIxM,MAAU,KACZzH,EAAQ,SAASiU,KAEjBjU,EAAQ,SAASiU,EAAO,MAAM,GAAGxM,CAAK,GACtCzH,EAAQ,SAASiU,EAAO,MAAMxM,IAAQ,CAAC;AAAA,IAE3C;AAEA,QAAI,CAACzH,EAAQ,SAASA,EAAQ,aAAaA,EAAQ,WAAW;AAC5D,YAAMoU,IAASpU,EAAQ,UAAUA,EAAQ,UAAU,SAAS,CAAC;AAE7D,MAAIoU,MACFpU,EAAQ,QAAQoU,EAAO;AAAA,IAE3B;AAEA,UAAMC,IACJrU,EAAQ,SAAS,WAAWA,EAAQ,QAChCA,EAAQ,MAAM,QACdA,EAAQ;AAOd,SAAK,YAAYA,EAAQ,aAAa,QAOtC,KAAK,QAAQA,EAAQ,SAAS,QAO9B,KAAK,SAASqU,IAAQA,EAAM,SAAS,QAWrC,KAAK,QAAQ,QAOb,KAAK,OAAO,IAQZ,KAAK,UAAUH,GAOf,KAAK,OAAOG,IAAQA,EAAM,OAAO,QASjC,KAAK,OAAOV,GAAkB3T,EAAQ,KAAK,KAAK,OAOhD,KAAK,QAAQA,EAAQ,SAAS,QAO9B,KAAK,SAAS,KAAK,SAOnB,KAAK,SAASA,EAAQ,UAAU,QAOhC,KAAK,SAASA,EAAQ,UAAU,QAWhC,KAAK,QACHmU,KAAenU,EAAQ,SAAS,OAAOA,EAAQ,MAAM,SAAU,WAC3DA,EAAQ,MAAM,QACd,IAYN,KAAK,SAAS,QAOd,KAAK,WAAW,QAOhB,KAAK,OAAO,QAUZ,KAAK,MAAM;AAAA,EACb;AACF;AAEA8T,GAAa,UAAU,OAAO;AAC9BA,GAAa,UAAU,OAAO;AAC9BA,GAAa,UAAU,SAAS;AAChCA,GAAa,UAAU,UAAU;AACjCA,GAAa,UAAU,QAAQ;AAC/BA,GAAa,UAAU,SAAS;AAChCA,GAAa,UAAU,OAAO;AAC9BA,GAAa,UAAU,YAAY;AACnCA,GAAa,UAAU,QAAQ;AAC/BA,GAAa,UAAU,QAAQ;AAC/BA,GAAa,UAAU,QAAQ;AAC/BA,GAAa,UAAU,SAAS;AAChCA,GAAa,UAAU,SAAS;ACtQzB,MAAMQ,KAAU,EAAC,UAAAC,IAAU,SAAAC,IAAS,SAAAC,IAAO,MAAEC,IAAM,KAAK,IAAG;AAclE,SAASH,GAAS1S,GAAM4S,GAAS;AAC/B,MAAIA,MAAY,UAAa,OAAOA,KAAY;AAC9C,UAAM,IAAI,UAAU,iCAAiC;AAGvDE,EAAAA,GAAW9S,CAAI;AACf,MAAIwS,IAAQ,GACRO,IAAM,IACNnN,IAAQ5F,EAAK,QAEbgT;AAEJ,MACEJ,MAAY,UACZA,EAAQ,WAAW,KACnBA,EAAQ,SAAS5S,EAAK,QACtB;AACA,WAAO4F;AACL,UAAI5F,EAAK,YAAY4F,CAAK,MAAM;AAG9B,YAAIoN,GAAc;AAChB,UAAAR,IAAQ5M,IAAQ;AAChB;AAAA,QACF;AAAA,YACK,CAAImN,IAAM,MAGfC,IAAe,IACfD,IAAMnN,IAAQ;AAIlB,WAAOmN,IAAM,IAAI,KAAK/S,EAAK,MAAMwS,GAAOO,CAAG;AAAA,EAC7C;AAEA,MAAIH,MAAY5S;AACd,WAAO;AAGT,MAAIiT,IAAmB,IACnBC,IAAeN,EAAQ,SAAS;AAEpC,SAAOhN;AACL,QAAI5F,EAAK,YAAY4F,CAAK,MAAM;AAG9B,UAAIoN,GAAc;AAChB,QAAAR,IAAQ5M,IAAQ;AAChB;AAAA,MACF;AAAA;AAEA,MAAIqN,IAAmB,MAGrBD,IAAe,IACfC,IAAmBrN,IAAQ,IAGzBsN,IAAe,OAEblT,EAAK,YAAY4F,CAAK,MAAMgN,EAAQ,YAAYM,GAAc,IAC5DA,IAAe,MAGjBH,IAAMnN,MAKRsN,IAAe,IACfH,IAAME;AAMd,SAAIT,MAAUO,IACZA,IAAME,IACGF,IAAM,MACfA,IAAM/S,EAAK,SAGNA,EAAK,MAAMwS,GAAOO,CAAG;AAC9B;AAUA,SAASJ,GAAQ3S,GAAM;AAGrB,MAFA8S,GAAW9S,CAAI,GAEXA,EAAK,WAAW;AAClB,WAAO;AAGT,MAAI+S,IAAM,IACNnN,IAAQ5F,EAAK,QAEbmT;AAGJ,SAAO,EAAEvN;AACP,QAAI5F,EAAK,YAAY4F,CAAK,MAAM;AAC9B,UAAIuN,GAAgB;AAClB,QAAAJ,IAAMnN;AACN;AAAA,MACF;AAAA,UACK,CAAKuN,MAEVA,IAAiB;AAIrB,SAAOJ,IAAM,IACT/S,EAAK,YAAY,CAAC,MAAM,KACtB,MACA,MACF+S,MAAQ,KAAK/S,EAAK,YAAY,CAAC,MAAM,KACnC,OACAA,EAAK,MAAM,GAAG+S,CAAG;AACzB;AAUA,SAASH,GAAQ5S,GAAM;AACrB8S,EAAAA,GAAW9S,CAAI;AAEf,MAAI4F,IAAQ5F,EAAK,QAEb+S,IAAM,IACNK,IAAY,GACZC,IAAW,IAGXC,IAAc,GAEdH;AAEJ,SAAOvN,OAAS;AACd,UAAM2N,IAAOvT,EAAK,YAAY4F,CAAK;AAEnC,QAAI2N,MAAS,IAAc;AAGzB,UAAIJ,GAAgB;AAClB,QAAAC,IAAYxN,IAAQ;AACpB;AAAA,MACF;AAEA;AAAA,IACF;AAEA,IAAImN,IAAM,MAGRI,IAAiB,IACjBJ,IAAMnN,IAAQ,IAGZ2N,MAAS,KAEPF,IAAW,IACbA,IAAWzN,IACF0N,MAAgB,MACzBA,IAAc,KAEPD,IAAW,OAGpBC,IAAc;AAAA,EAElB;AAEA,SACED,IAAW,KACXN,IAAM;AAAA,EAENO,MAAgB;AAAA,EAEfA,MAAgB,KAAKD,MAAaN,IAAM,KAAKM,MAAaD,IAAY,IAEhE,KAGFpT,EAAK,MAAMqT,GAAUN,CAAG;AACjC;AAUA,SAASF,MAAQ3G,GAAU;AACzB,MAAItG,IAAQ,IAER4N;AAEJ,SAAO,EAAE5N,IAAQsG,EAAS;AACxB4G,IAAAA,GAAW5G,EAAStG,CAAK,CAAC,GAEtBsG,EAAStG,CAAK,MAChB4N,IACEA,MAAW,SAAYtH,EAAStG,CAAK,IAAI4N,IAAS,MAAMtH,EAAStG,CAAK;AAI5E,SAAO4N,MAAW,SAAY,MAAMC,GAAUD,CAAM;AACtD;AAYA,SAASC,GAAUzT,GAAM;AACvB8S,EAAAA,GAAW9S,CAAI;AAEf,QAAM0T,IAAW1T,EAAK,YAAY,CAAC,MAAM;AAGzC,MAAIrB,IAAQgV,GAAgB3T,GAAM,CAAC0T,CAAQ;AAE3C,SAAI/U,EAAM,WAAW,KAAK,CAAC+U,MACzB/U,IAAQ,MAGNA,EAAM,SAAS,KAAKqB,EAAK,YAAYA,EAAK,SAAS,CAAC,MAAM,OAC5DrB,KAAS,MAGJ+U,IAAW,MAAM/U,IAAQA;AAClC;AAYA,SAASgV,GAAgB3T,GAAM4T,GAAgB;AAC7C,MAAIpQ,IAAS,IACTqQ,IAAoB,GACpBC,IAAY,IACZC,IAAO,GACPnO,IAAQ,IAER2N,GAEAS;AAEJ,SAAO,EAAEpO,KAAS5F,EAAK,UAAQ;AAC7B,QAAI4F,IAAQ5F,EAAK;AACf,MAAAuT,IAAOvT,EAAK,YAAY4F,CAAK;AAAA,SACxB;AAAA,UAAI2N,MAAS;AAClB;AAEA,MAAAA,IAAO;AAAA;AAGT,QAAIA,MAAS,IAAc;AACzB,UAAI,EAAAO,MAAclO,IAAQ,KAAKmO,MAAS,GAEjC,KAAID,MAAclO,IAAQ,KAAKmO,MAAS,GAAG;AAChD,YACEvQ,EAAO,SAAS,KAChBqQ,MAAsB,KACtBrQ,EAAO,YAAYA,EAAO,SAAS,CAAC,MAAM,MAC1CA,EAAO,YAAYA,EAAO,SAAS,CAAC,MAAM;AAE1C,cAAIA,EAAO,SAAS;AAGlB,gBAFAwQ,IAAiBxQ,EAAO,YAAY,GAAG,GAEnCwQ,MAAmBxQ,EAAO,SAAS,GAAG;AACxC,cAAIwQ,IAAiB,KACnBxQ,IAAS,IACTqQ,IAAoB,MAEpBrQ,IAASA,EAAO,MAAM,GAAGwQ,CAAc,GACvCH,IAAoBrQ,EAAO,SAAS,IAAIA,EAAO,YAAY,GAAG,IAGhEsQ,IAAYlO,GACZmO,IAAO;AACP;AAAA,YACF;AAAA,qBACSvQ,EAAO,SAAS,GAAG;AAC5B,YAAAA,IAAS,IACTqQ,IAAoB,GACpBC,IAAYlO,GACZmO,IAAO;AACP;AAAA,UACF;AAAA;AAGF,QAAIH,MACFpQ,IAASA,EAAO,SAAS,IAAIA,IAAS,QAAQ,MAC9CqQ,IAAoB;AAAA,MAExB;AACE,QAAIrQ,EAAO,SAAS,IAClBA,KAAU,MAAMxD,EAAK,MAAM8T,IAAY,GAAGlO,CAAK,IAE/CpC,IAASxD,EAAK,MAAM8T,IAAY,GAAGlO,CAAK,GAG1CiO,IAAoBjO,IAAQkO,IAAY;AAG1C,MAAAA,IAAYlO,GACZmO,IAAO;AAAA,IACT,MAAO,CAAIR,MAAS,MAAgBQ,IAAO,KACzCA,MAEAA,IAAO;AAAA,EAEX;AAEA,SAAOvQ;AACT;AAUA,SAASsP,GAAW9S,GAAM;AACxB,MAAI,OAAOA,KAAS;AAClB,UAAM,IAAI;AAAA,MACR,qCAAqC,KAAK,UAAUA,CAAI;AAAA,IAC9D;AAEA;ACpaO,MAAMiU,KAAU,EAAC,KAAAC,GAAG;AAE3B,SAASA,KAAM;AACb,SAAO;AACT;ACYO,SAASC,GAAMC,GAAe;AACnC,SAAO,GACLA,MAAkB,QAChB,OAAOA,KAAkB,YACzB,UAAUA,KACVA,EAAc,QACd,cAAcA,KACdA,EAAc;AAAA,EAEdA,EAAc,SAAS;AAE7B;AClBO,SAASC,GAAUrU,GAAM;AAC9B,MAAI,OAAOA,KAAS;AAClB,IAAAA,IAAO,IAAI,IAAIA,CAAI;AAAA,WACV,CAACmU,GAAMnU,CAAI,GAAG;AAEvB,UAAMqP,IAAQ,IAAI;AAAA,MAChB,iFACErP,IACA;AAAA,IACR;AACI,UAAAqP,EAAM,OAAO,wBACPA;AAAA,EACR;AAEA,MAAIrP,EAAK,aAAa,SAAS;AAE7B,UAAMqP,IAAQ,IAAI,UAAU,gCAAgC;AAC5D,UAAAA,EAAM,OAAO,0BACPA;AAAA,EACR;AAEA,SAAOiF,GAAoBtU,CAAI;AACjC;AAUA,SAASsU,GAAoBC,GAAK;AAChC,MAAIA,EAAI,aAAa,IAAI;AAEvB,UAAMlF,IAAQ,IAAI;AAAA,MAChB;AAAA,IACN;AACI,UAAAA,EAAM,OAAO,6BACPA;AAAA,EACR;AAEA,QAAMmF,IAAWD,EAAI;AACrB,MAAI3O,IAAQ;AAEZ,SAAO,EAAEA,IAAQ4O,EAAS;AACxB,QACEA,EAAS,YAAY5O,CAAK,MAAM,MAChC4O,EAAS,YAAY5O,IAAQ,CAAC,MAAM,IACpC;AACA,YAAM6O,IAAQD,EAAS,YAAY5O,IAAQ,CAAC;AAC5C,UAAI6O,MAAU,MAAgBA,MAAU,KAAe;AAErD,cAAMpF,IAAQ,IAAI;AAAA,UAChB;AAAA,QACV;AACQ,cAAAA,EAAM,OAAO,6BACPA;AAAA,MACR;AAAA,IACF;AAGF,SAAO,mBAAmBmF,CAAQ;AACpC;ACvDA,MAAME;AAAA;AAAA,EAA8B;AAAA,IAClC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA;AAEO,MAAMC,GAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuBjB,YAAYhW,GAAO;AAEjB,QAAIR;AAEJ,IAAKQ,IAEMwV,GAAMxV,CAAK,IACpBR,IAAU,EAAC,MAAMQ,EAAK,IACb,OAAOA,KAAU,YAAYiW,GAAajW,CAAK,IACxDR,IAAU,EAAC,OAAAQ,EAAK,IAEhBR,IAAUQ,IANVR,IAAU,CAAA,GAkBZ,KAAK,MAAM,SAASA,IAAU,KAAK8V,GAAQ,IAAG,GAU9C,KAAK,OAAO,CAAA,GASZ,KAAK,UAAU,CAAA,GAOf,KAAK,WAAW,CAAA,GAOhB,KAAK,OAYL,KAAK,KAUL,KAAK,QASL,KAAK;AAIL,QAAIrO,IAAQ;AAEZ,WAAO,EAAEA,IAAQ8O,GAAM,UAAQ;AAC7B,YAAMG,IAAQH,GAAM9O,CAAK;AAIzB,MACEiP,KAAS1W,KACTA,EAAQ0W,CAAK,MAAM,UACnB1W,EAAQ0W,CAAK,MAAM,SAGnB,KAAKA,CAAK,IAAIA,MAAU,YAAY,CAAC,GAAG1W,EAAQ0W,CAAK,CAAC,IAAI1W,EAAQ0W,CAAK;AAAA,IAE3E;AAGA,QAAIA;AAGJ,SAAKA,KAAS1W;AAEZ,MAAKuW,GAAM,SAASG,CAAK,MAEvB,KAAKA,CAAK,IAAI1W,EAAQ0W,CAAK;AAAA,EAGjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,IAAI,WAAW;AACb,WAAO,OAAO,KAAK,QAAS,WACxBpC,GAAQ,SAAS,KAAK,IAAI,IAC1B;AAAA,EACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,IAAI,SAASC,GAAU;AACrB,IAAAoC,GAAepC,GAAU,UAAU,GACnCqC,GAAWrC,GAAU,UAAU,GAC/B,KAAK,OAAOD,GAAQ,KAAK,KAAK,WAAW,IAAIC,CAAQ;AAAA,EACvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,IAAI,UAAU;AACZ,WAAO,OAAO,KAAK,QAAS,WACxBD,GAAQ,QAAQ,KAAK,IAAI,IACzB;AAAA,EACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,IAAI,QAAQE,GAAS;AACnB,IAAAG,GAAW,KAAK,UAAU,SAAS,GACnC,KAAK,OAAOL,GAAQ,KAAKE,KAAW,IAAI,KAAK,QAAQ;AAAA,EACvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,IAAI,UAAU;AACZ,WAAO,OAAO,KAAK,QAAS,WACxBF,GAAQ,QAAQ,KAAK,IAAI,IACzB;AAAA,EACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,IAAI,QAAQG,GAAS;AAInB,QAHAmC,GAAWnC,GAAS,SAAS,GAC7BE,GAAW,KAAK,SAAS,SAAS,GAE9BF,GAAS;AACX,UAAIA,EAAQ,YAAY,CAAC,MAAM;AAC7B,cAAM,IAAI,MAAM,+BAA+B;AAGjD,UAAIA,EAAQ,SAAS,KAAK,CAAC;AACzB,cAAM,IAAI,MAAM,wCAAwC;AAAA,IAE5D;AAEA,SAAK,OAAOH,GAAQ,KAAK,KAAK,SAAS,KAAK,QAAQG,KAAW,GAAG;AAAA,EACpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,IAAI,OAAO;AACT,WAAO,KAAK,QAAQ,KAAK,QAAQ,SAAS,CAAC;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,IAAI,KAAK5S,GAAM;AACb,IAAImU,GAAMnU,CAAI,MACZA,IAAOqU,GAAUrU,CAAI,IAGvB8U,GAAe9U,GAAM,MAAM,GAEvB,KAAK,SAASA,KAChB,KAAK,QAAQ,KAAKA,CAAI;AAAA,EAE1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,IAAI,OAAO;AACT,WAAO,OAAO,KAAK,QAAS,WACxByS,GAAQ,SAAS,KAAK,MAAM,KAAK,OAAO,IACxC;AAAA,EACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,IAAI,KAAKuC,GAAM;AACb,IAAAF,GAAeE,GAAM,MAAM,GAC3BD,GAAWC,GAAM,MAAM,GACvB,KAAK,OAAOvC,GAAQ,KAAK,KAAK,WAAW,IAAIuC,KAAQ,KAAK,WAAW,GAAG;AAAA,EAC1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+DA,KAAK9C,GAAeC,GAAwBC,GAAQ;AAElD,UAAM6C,IAAU,KAAK,QAAQ/C,GAAeC,GAAwBC,CAAM;AAE1E,UAAA6C,EAAQ,QAAQ,IAEVA;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA4DA,KAAK/C,GAAeC,GAAwBC,GAAQ;AAElD,UAAM6C,IAAU,KAAK,QAAQ/C,GAAeC,GAAwBC,CAAM;AAE1E,WAAA6C,EAAQ,QAAQ,QAETA;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA4DA,QAAQ/C,GAAeC,GAAwBC,GAAQ;AACrD,UAAM6C,IAAU,IAAIhD;AAAA;AAAA,MAElBC;AAAA,MACAC;AAAA,MACAC;AAAA,IACN;AAEI,WAAI,KAAK,SACP6C,EAAQ,OAAO,KAAK,OAAO,MAAMA,EAAQ,MACzCA,EAAQ,OAAO,KAAK,OAGtBA,EAAQ,QAAQ,IAEhB,KAAK,SAAS,KAAKA,CAAO,GAEnBA;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeA,SAASC,GAAU;AACjB,WAAI,KAAK,UAAU,SACV,KAGL,OAAO,KAAK,SAAU,WACjB,KAAK,QAGE,IAAI,YAAYA,KAAY,MAAS,EACtC,OAAO,KAAK,KAAK;AAAA,EAClC;AACF;AAYA,SAASH,GAAWnS,GAAMwN,GAAM;AAC9B,MAAIxN,KAAQA,EAAK,SAAS6P,GAAQ,GAAG;AACnC,UAAM,IAAI;AAAA,MACR,MAAMrC,IAAO,yCAAyCqC,GAAQ,MAAM;AAAA,IAC1E;AAEA;AAYA,SAASqC,GAAelS,GAAMwN,GAAM;AAClC,MAAI,CAACxN;AACH,UAAM,IAAI,MAAM,MAAMwN,IAAO,mBAAmB;AAEpD;AAYA,SAAS0C,GAAW9S,GAAMoQ,GAAM;AAC9B,MAAI,CAACpQ;AACH,UAAM,IAAI,MAAM,cAAcoQ,IAAO,iCAAiC;AAE1E;AAUA,SAASwE,GAAajW,GAAO;AAC3B,SAAO,GACLA,KACE,OAAOA,KAAU,YACjB,gBAAgBA,KAChB,gBAAgBA;AAEtB;ACloBO,MAAMwW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAYP,SAAUC,GAAU;AAGlB,UAAMC;AAAA;AAAA;AAAA;AAAA,MAFO,KACO,YAIX;AAAA,OAEH1W,IAAQ0W,EAAMD,CAAQ,GAEtBE,IAAQ,WAAY;AACxB,aAAO3W,EAAM,MAAM2W,GAAO,SAAS;AAAA,IACrC;AAEA,kBAAO,eAAeA,GAAOD,CAAK,GAc3BC;AAAA,EACT;AAAA,GCiUAC,KAAM,CAAA,EAAG;AAeR,MAAMC,WAAkBL,GAAiB;AAAA;AAAA;AAAA;AAAA,EAI9C,cAAc;AAEZ,UAAM,MAAM,GAeZ,KAAK,WAAW,QAYhB,KAAK,SAAS,QAad,KAAK,YAAY,CAAA,GAajB,KAAK,WAAW,QAShB,KAAK,cAAc,IASnB,KAAK,SAAS,QASd,KAAK,YAAY,CAAA,GAUjB,KAAK,SAAS,QASd,KAAK,eAAetE,GAAM;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,OAAO;AAEL,UAAM4E;AAAA;AAAA,MAEF,IAAID,GAAS;AAAA;AAEjB,QAAI5P,IAAQ;AAEZ,WAAO,EAAEA,IAAQ,KAAK,UAAU,UAAQ;AACtC,YAAM8P,IAAW,KAAK,UAAU9P,CAAK;AACrC,MAAA6P,EAAY,IAAI,GAAGC,CAAQ;AAAA,IAC7B;AAEA,WAAAD,EAAY,KAAKpF,GAAO,IAAM,CAAA,GAAI,KAAK,SAAS,CAAC,GAE1CoF;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA6DA,KAAKzF,GAAKrR,GAAO;AACf,WAAI,OAAOqR,KAAQ,WAEb,UAAU,WAAW,KACvB2F,GAAe,QAAQ,KAAK,MAAM,GAClC,KAAK,UAAU3F,CAAG,IAAIrR,GACf,QAID4W,GAAI,KAAK,KAAK,WAAWvF,CAAG,KAAK,KAAK,UAAUA,CAAG,KAAM,SAI/DA,KACF2F,GAAe,QAAQ,KAAK,MAAM,GAClC,KAAK,YAAY3F,GACV,QAIF,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBA,SAAS;AACP,QAAI,KAAK;AACP,aAAO;AAMT,UAAM4F;AAAA;AAAA;AAAA,MAAyD;AAAA;AAE/D,WAAO,EAAE,KAAK,cAAc,KAAK,UAAU,UAAQ;AACjD,YAAM,CAACF,GAAU,GAAGvX,CAAO,IAAI,KAAK,UAAU,KAAK,WAAW;AAE9D,UAAIA,EAAQ,CAAC,MAAM;AACjB;AAGF,MAAIA,EAAQ,CAAC,MAAM,OACjBA,EAAQ,CAAC,IAAI;AAGf,YAAM0X,IAAcH,EAAS,KAAKE,GAAM,GAAGzX,CAAO;AAElD,MAAI,OAAO0X,KAAgB,cACzB,KAAK,aAAa,IAAIA,CAAW;AAAA,IAErC;AAEA,gBAAK,SAAS,IACd,KAAK,cAAc,OAAO,mBAEnB;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBA,MAAMC,GAAM;AACV,SAAK,OAAM;AACX,UAAMC,IAAWC,GAAMF,CAAI,GACrBG,IAAS,KAAK,UAAU,KAAK;AACnC,WAAAC,GAAa,SAASD,CAAM,GACrBA,EAAO,OAAOF,CAAQ,GAAGA,CAAQ;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA4CA,QAAQD,GAAMpX,GAAM;AAClB,UAAMkX,IAAO;AAEb,gBAAK,OAAM,GACXM,GAAa,WAAW,KAAK,UAAU,KAAK,MAAM,GAClDC,GAAe,WAAW,KAAK,YAAY,KAAK,QAAQ,GAEjDzX,IAAO0X,EAAS,QAAW1X,CAAI,IAAI,IAAI,QAAQ0X,CAAQ;AAQ9D,aAASA,EAASC,GAASC,GAAQ;AACjC,YAAMP,IAAWC,GAAMF,CAAI,GAGrBS;AAAA;AAAA;AAAA,QAEsBX,EAAK,MAAMG,CAAQ;AAAA;AAG/C,MAAAH,EAAK,IAAIW,GAAWR,GAAU,SAAU1G,GAAOmH,GAAMV,GAAM;AACzD,YAAIzG,KAAS,CAACmH,KAAQ,CAACV;AACrB,iBAAOW,EAASpH,CAAK;AAKvB,cAAMqH;AAAA;AAAA;AAAA,UAEsBF;AAAA,WAGtBG,IAAgBf,EAAK,UAAUc,GAAaZ,CAAI;AAEtD,QAAIc,GAAgBD,CAAa,IAC/Bb,EAAK,QAAQa,IAEbb,EAAK,SAASa,GAGhBF;AAAA,UAASpH;AAAA;AAAA,UAAsDyG;AAAA,QAAI;AAAA,MACrE,CAAC;AAOD,eAASW,EAASpH,GAAOyG,GAAM;AAC7B,QAAIzG,KAAS,CAACyG,IACZQ,EAAOjH,CAAK,IACHgH,IACTA,EAAQP,CAAI,IAGZpX,EAAK,QAAWoX,CAAI;AAAA,MAExB;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiCA,YAAYA,GAAM;AAEhB,QAAIe,IAAW,IAEXrT;AAEJ,gBAAK,OAAM,GACX0S,GAAa,eAAe,KAAK,UAAU,KAAK,MAAM,GACtDC,GAAe,eAAe,KAAK,YAAY,KAAK,QAAQ,GAE5D,KAAK,QAAQL,GAAMW,CAAQ,GAC3BK,GAAW,eAAe,WAAWD,CAAQ,GAGtCrT;AAKP,aAASiT,EAASpH,GAAOyG,GAAM;AAC7B,MAAAe,IAAW,IACXzH,GAAKC,CAAK,GACV7L,IAASsS;AAAA,IACX;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAwCA,IAAIU,GAAMV,GAAMpX,GAAM;AACpB,IAAAqY,GAAWP,CAAI,GACf,KAAK,OAAM;AAEX,UAAMQ,IAAe,KAAK;AAE1B,WAAI,CAACtY,KAAQ,OAAOoX,KAAS,eAC3BpX,IAAOoX,GACPA,IAAO,SAGFpX,IAAO0X,EAAS,QAAW1X,CAAI,IAAI,IAAI,QAAQ0X,CAAQ;AAW9D,aAASA,EAASC,GAASC,GAAQ;AAKjC,YAAMP,IAAWC,GAAMF,CAAI;AAC3B,MAAAkB,EAAa,IAAIR,GAAMT,GAAUU,CAAQ;AAQzC,eAASA,EAASpH,GAAO4H,GAAYnB,GAAM;AACzC,cAAMoB;AAAA;AAAA,UAEFD,KAAcT;AAAA;AAGlB,QAAInH,IACFiH,EAAOjH,CAAK,IACHgH,IACTA,EAAQa,CAAa,IAGrBxY,EAAK,QAAWwY,GAAepB,CAAI;AAAA,MAEvC;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBA,QAAQU,GAAMV,GAAM;AAElB,QAAIe,IAAW,IAEXrT;AAEJ,gBAAK,IAAIgT,GAAMV,GAAMW,CAAQ,GAE7BK,GAAW,WAAW,OAAOD,CAAQ,GAE9BrT;AAKP,aAASiT,EAASpH,GAAOmH,GAAM;AAC7B,MAAApH,GAAKC,CAAK,GACV7L,IAASgT,GACTK,IAAW;AAAA,IACb;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+BA,UAAUL,GAAMV,GAAM;AACpB,SAAK,OAAM;AACX,UAAMC,IAAWC,GAAMF,CAAI,GACrBqB,IAAW,KAAK,YAAY,KAAK;AACvC,WAAAhB,GAAe,aAAagB,CAAQ,GACpCJ,GAAWP,CAAI,GAERW,EAASX,GAAMT,CAAQ;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA2DA,IAAIpX,MAAU+S,GAAY;AACxB,UAAM0F,IAAY,KAAK,WACjBC,IAAY,KAAK;AAIvB,QAFA1B,GAAe,OAAO,KAAK,MAAM,GAE7BhX,KAAU,KAEP,KAAI,OAAOA,KAAU;AAC1B,MAAA2Y,EAAU3Y,GAAO+S,CAAU;AAAA,aAClB,OAAO/S,KAAU;AAC1B,MAAI,MAAM,QAAQA,CAAK,IACrB4Y,EAAQ5Y,CAAK,IAEb6Y,EAAU7Y,CAAK;AAAA;AAGjB,YAAM,IAAI,UAAU,iCAAiCA,IAAQ,GAAG;AAGlE,WAAO;AAMP,aAAS8Y,EAAI9Y,GAAO;AAClB,UAAI,OAAOA,KAAU;AACnB,QAAA2Y,EAAU3Y,GAAO,CAAA,CAAE;AAAA,eACV,OAAOA,KAAU;AAC1B,YAAI,MAAM,QAAQA,CAAK,GAAG;AACxB,gBAAM,CAAC+Y,GAAQ,GAAGhG,CAAU;AAAA;AAAA,YACkB/S;AAAA;AAC9C,UAAA2Y,EAAUI,GAAQhG,CAAU;AAAA,QAC9B;AACE,UAAA8F,EAAU7Y,CAAK;AAAA;AAGjB,cAAM,IAAI,UAAU,iCAAiCA,IAAQ,GAAG;AAAA,IAEpE;AAMA,aAAS6Y,EAAUhU,GAAQ;AACzB,UAAI,EAAE,aAAaA,MAAW,EAAE,cAAcA;AAC5C,cAAM,IAAI;AAAA,UACR;AAAA,QACV;AAGM,MAAA+T,EAAQ/T,EAAO,OAAO,GAElBA,EAAO,aACT6T,EAAU,WAAWhH,GAAO,IAAMgH,EAAU,UAAU7T,EAAO,QAAQ;AAAA,IAEzE;AAMA,aAAS+T,EAAQI,GAAS;AACxB,UAAI/R,IAAQ;AAEZ,UAAI+R,KAAY,KAET,KAAI,MAAM,QAAQA,CAAO;AAC9B,eAAO,EAAE/R,IAAQ+R,EAAQ,UAAQ;AAC/B,gBAAMC,IAAQD,EAAQ/R,CAAK;AAC3B,UAAA6R,EAAIG,CAAK;AAAA,QACX;AAAA;AAEA,cAAM,IAAI,UAAU,sCAAsCD,IAAU,GAAG;AAAA,IAE3E;AAOA,aAASL,EAAUI,GAAQhG,GAAY;AACrC,UAAI9L,IAAQ,IACRiS,IAAa;AAEjB,aAAO,EAAEjS,IAAQwR,EAAU;AACzB,YAAIA,EAAUxR,CAAK,EAAE,CAAC,MAAM8R,GAAQ;AAClC,UAAAG,IAAajS;AACb;AAAA,QACF;AAGF,UAAIiS,MAAe;AACjB,QAAAT,EAAU,KAAK,CAACM,GAAQ,GAAGhG,CAAU,CAAC;AAAA,eAI/BA,EAAW,SAAS,GAAG;AAC9B,YAAI,CAACoG,GAAS,GAAGC,CAAI,IAAIrG;AACzB,cAAMsG,IAAiBZ,EAAUS,CAAU,EAAE,CAAC;AAC9C,QAAII,GAAWD,CAAc,KAAKC,GAAWH,CAAO,MAClDA,IAAUzH,GAAO,IAAM2H,GAAgBF,CAAO,IAGhDV,EAAUS,CAAU,IAAI,CAACH,GAAQI,GAAS,GAAGC,CAAI;AAAA,MACnD;AAAA,IACF;AAAA,EACF;AACF;AA8BO,MAAMG,KAAU,IAAI1C,GAAS,EAAG,OAAM;AAS7C,SAASU,GAAa9F,GAAMzR,GAAO;AACjC,MAAI,OAAOA,KAAU;AACnB,UAAM,IAAI,UAAU,aAAayR,IAAO,oBAAoB;AAEhE;AASA,SAAS+F,GAAe/F,GAAMzR,GAAO;AACnC,MAAI,OAAOA,KAAU;AACnB,UAAM,IAAI,UAAU,aAAayR,IAAO,sBAAsB;AAElE;AASA,SAASuF,GAAevF,GAAM+H,GAAQ;AACpC,MAAIA;AACF,UAAM,IAAI;AAAA,MACR,kBACE/H,IACA;AAAA,IACR;AAEA;AAQA,SAAS2G,GAAW9H,GAAM;AAGxB,MAAI,CAACgJ,GAAWhJ,CAAI,KAAK,OAAOA,EAAK,QAAS;AAC5C,UAAM,IAAI,UAAU,yBAAyBA,IAAO,GAAG;AAG3D;AAUA,SAAS6H,GAAW1G,GAAMgI,GAAWvB,GAAU;AAC7C,MAAI,CAACA;AACH,UAAM,IAAI;AAAA,MACR,MAAMzG,IAAO,4BAA4BgI,IAAY;AAAA,IAC3D;AAEA;AAMA,SAASpC,GAAMrX,GAAO;AACpB,SAAO0Z,GAAgB1Z,CAAK,IAAIA,IAAQ,IAAIgW,GAAMhW,CAAK;AACzD;AAMA,SAAS0Z,GAAgB1Z,GAAO;AAC9B,SAAO,GACLA,KACE,OAAOA,KAAU,YACjB,aAAaA,KACb,cAAcA;AAEpB;AAMA,SAASiY,GAAgBjY,GAAO;AAC9B,SAAO,OAAOA,KAAU,YAAYiW,GAAajW,CAAK;AACxD;AAUA,SAASiW,GAAajW,GAAO;AAC3B,SAAO,GACLA,KACE,OAAOA,KAAU,YACjB,gBAAgBA,KAChB,gBAAgBA;AAEtB;ACtyCA,MAAM0M,KAAU,SAAS,cAAc,GAAG;AAMnC,SAASiN,GAA8B3Z,GAAO;AACnD,QAAM4Z,IAAqB,MAAM5Z,IAAQ;AACzC0M,EAAAA,GAAQ,YAAYkN;AACpB,QAAMC,IAAYnN,GAAQ;AAQ1B;AAAA;AAAA;AAAA,IAGEmN,EAAU,WAAWA,EAAU,SAAS,CAAC,MAAM,MAC/C7Z,MAAU,UASL6Z,MAAcD,IAPZ,KAOyCC;AAAA;AACpD;ACbO,SAASC,GAAOC,GAAMlG,GAAOmG,GAAQC,GAAO;AACjD,QAAM7F,IAAM2F,EAAK;AACjB,MAAIG,IAAa,GAEbnH;AAWJ,MARIc,IAAQ,IACVA,IAAQ,CAACA,IAAQO,IAAM,IAAIA,IAAMP,IAEjCA,IAAQA,IAAQO,IAAMA,IAAMP,GAE9BmG,IAASA,IAAS,IAAIA,IAAS,GAG3BC,EAAM,SAAS;AACjB,IAAAlH,IAAa,MAAM,KAAKkH,CAAK,GAC7BlH,EAAW,QAAQc,GAAOmG,CAAM,GAEhCD,EAAK,OAAO,GAAGhH,CAAU;AAAA;AAMzB,SAHIiH,KAAQD,EAAK,OAAOlG,GAAOmG,CAAM,GAG9BE,IAAaD,EAAM;AACxB,MAAAlH,IAAakH,EAAM,MAAMC,GAAYA,IAAa,GAAK,GACvDnH,EAAW,QAAQc,GAAO,CAAC,GAE3BkG,EAAK,OAAO,GAAGhH,CAAU,GACzBmH,KAAc,KACdrG,KAAS;AAGf;AAkBO,SAASsG,GAAKJ,GAAME,GAAO;AAChC,SAAIF,EAAK,SAAS,KAChBD,GAAOC,GAAMA,EAAK,QAAQ,GAAGE,CAAK,GAC3BF,KAEFE;AACT;ACrEA,MAAMG,KAAiB,CAAA,EAAG;AAUnB,SAASC,GAAkBC,GAAY;AAE5C,QAAM/J,IAAM,CAAA;AACZ,MAAItJ,IAAQ;AAEZ,SAAO,EAAEA,IAAQqT,EAAW;AAC1B,IAAAC,GAAgBhK,GAAK+J,EAAWrT,CAAK,CAAC;AAGxC,SAAOsJ;AACT;AAYA,SAASgK,GAAgBhK,GAAKiK,GAAW;AAEvC,MAAIC;AAEJ,OAAKA,KAAQD,GAAW;AAGtB,UAAM5Y,KAFQwY,GAAe,KAAK7J,GAAKkK,CAAI,IAAIlK,EAAIkK,CAAI,IAAI,YAEpClK,EAAIkK,CAAI,IAAI,CAAA,IAE7B5Y,IAAQ2Y,EAAUC,CAAI;AAE5B,QAAI7F;AAEJ,QAAI/S;AACF,WAAK+S,KAAQ/S,GAAO;AAClB,QAAKuY,GAAe,KAAKxY,GAAMgT,CAAI,MAAGhT,EAAKgT,CAAI,IAAI,CAAA;AACnD,cAAM5U,IAAQ6B,EAAM+S,CAAI;AACxB,QAAA8F;AAAA;AAAA,UAEE9Y,EAAKgT,CAAI;AAAA,UACT,MAAM,QAAQ5U,CAAK,IAAIA,IAAQA,IAAQ,CAACA,CAAK,IAAI,CAAA;AAAA,QAC3D;AAAA,MACM;AAAA,EAEJ;AACF;AAaA,SAAS0a,GAAWC,GAAUZ,GAAM;AAClC,MAAI9S,IAAQ;AAEZ,QAAM2E,IAAS,CAAA;AAEf,SAAO,EAAE3E,IAAQ8S,EAAK;AAEnB,KAACA,EAAK9S,CAAK,EAAE,QAAQ,UAAU0T,IAAW/O,GAAQ,KAAKmO,EAAK9S,CAAK,CAAC;AAGrE,EAAA6S,GAAOa,GAAU,GAAG,GAAG/O,CAAM;AAC/B;AC9EO,SAASgP,GAAgC5a,GAAO6a,GAAM;AAC3D,QAAMjG,IAAO,OAAO,SAAS5U,GAAO6a,CAAI;AACxC;AAAA;AAAA,IAEAjG,IAAO,KAAKA,MAAS,MAAMA,IAAO,MAAMA,IAAO;AAAA,IAE/CA,IAAO,OAAOA,IAAO;AAAA,IAErBA,IAAO,SAAUA,IAAO;AAAA,IAExBA,IAAO,SAAUA,IAAO;AAAA,KACvBA,IAAO,WAAY,UAAWA,IAAO,WAAY;AAAA;AAAA,IAElDA,IAAO,UACE,MAEF,OAAO,cAAcA,CAAI;AAAA;AAClC;ACZO,SAASkG,GAAoB9a,GAAO;AACzC,SAAOA,EAEN,QAAQ,eAAe,GAAG,EAE1B,QAAQ,UAAU,EAAE,EAOpB,YAAW,EAAG,YAAW;AAC5B;ACXO,MAAM+a,KAAaC,GAAW,UAAU,GAclCC,KAAoBD,GAAW,YAAY,GAuB3CE,KAAaF,GAAW,qBAAqB;AAanD,SAASG,GAAavG,GAAM;AACjC;AAAA;AAAA;AAAA,IAGEA,MAAS,SAASA,IAAO,MAAMA,MAAS;AAAA;AAE5C;AAaO,MAAMwG,KAAaJ,GAAW,IAAI,GAoB5BK,KAAgBL,GAAW,YAAY,GAevCM,KAAmBN,GAAW,gBAAgB;AAiBpD,SAASO,EAAmB3G,GAAM;AACvC,SAAOA,MAAS,QAAQA,IAAO;AACjC;AAWO,SAAS4G,GAA0B5G,GAAM;AAC9C,SAAOA,MAAS,SAASA,IAAO,KAAKA,MAAS;AAChD;AAiBO,SAAS6G,EAAc7G,GAAM;AAClC,SAAOA,MAAS,MAAMA,MAAS,MAAMA,MAAS;AAChD;AAuBO,MAAM8G,KAAqBV,GAAW,cAAc,GAsB9CW,KAAoBX,GAAW,IAAI;AAUhD,SAASA,GAAWrY,GAAO;AACzB,SAAOiZ;AAUP,WAASA,EAAMhH,GAAM;AACnB,WAAOA,MAAS,QAAQA,IAAO,MAAMjS,EAAM,KAAK,OAAO,aAAaiS,CAAI,CAAC;AAAA,EAC3E;AACF;AC7LO,SAASiH,GAAa7b,GAAO;AAElC,QAAM6E,IAAS,CAAA;AACf,MAAIoC,IAAQ,IACR4M,IAAQ,GACRiI,IAAO;AACX,SAAO,EAAE7U,IAAQjH,EAAM,UAAQ;AAC7B,UAAM4U,IAAO5U,EAAM,WAAWiH,CAAK;AAEnC,QAAI8U,IAAU;AAGd,QAAInH,MAAS,MAAMqG,GAAkBjb,EAAM,WAAWiH,IAAQ,CAAC,CAAC,KAAKgU,GAAkBjb,EAAM,WAAWiH,IAAQ,CAAC,CAAC;AAChH,MAAA6U,IAAO;AAAA,aAGAlH,IAAO;AACd,MAAK,oBAAoB,KAAK,OAAO,aAAaA,CAAI,CAAC,MACrDmH,IAAU,OAAO,aAAanH,CAAI;AAAA,aAI7BA,IAAO,SAAUA,IAAO,OAAQ;AACvC,YAAM1Q,IAAOlE,EAAM,WAAWiH,IAAQ,CAAC;AAGvC,MAAI2N,IAAO,SAAU1Q,IAAO,SAAUA,IAAO,SAC3C6X,IAAU,OAAO,aAAanH,GAAM1Q,CAAI,GACxC4X,IAAO,KAIPC,IAAU;AAAA,IAEd;AAGE,MAAAA,IAAU,OAAO,aAAanH,CAAI;AAEpC,IAAImH,MACFlX,EAAO,KAAK7E,EAAM,MAAM6T,GAAO5M,CAAK,GAAG,mBAAmB8U,CAAO,CAAC,GAClElI,IAAQ5M,IAAQ6U,IAAO,GACvBC,IAAU,KAERD,MACF7U,KAAS6U,GACTA,IAAO;AAAA,EAEX;AACA,SAAOjX,EAAO,KAAK,EAAE,IAAI7E,EAAM,MAAM6T,CAAK;AAC5C;AClEO,SAASmI,EAAaC,GAASC,GAAI7P,GAAMtF,GAAK;AACnD,QAAMoV,IAAQpV,IAAMA,IAAM,IAAI,OAAO;AACrC,MAAIqV,IAAO;AACX,SAAOvI;AAGP,WAASA,EAAMe,GAAM;AACnB,WAAI6G,EAAc7G,CAAI,KACpBqH,EAAQ,MAAM5P,CAAI,GACX9D,EAAOqM,CAAI,KAEbsH,EAAGtH,CAAI;AAAA,EAChB;AAGA,WAASrM,EAAOqM,GAAM;AACpB,WAAI6G,EAAc7G,CAAI,KAAKwH,MAASD,KAClCF,EAAQ,QAAQrH,CAAI,GACbrM,MAET0T,EAAQ,KAAK5P,CAAI,GACV6P,EAAGtH,CAAI;AAAA,EAChB;AACF;AClDO,MAAMtL,KAAU;AAAA,EACrB,UAAU+S;AACZ;AAQA,SAASA,GAAkBJ,GAAS;AAClC,QAAMK,IAAeL,EAAQ,QAAQ,KAAK,OAAO,WAAW,gBAAgBM,GAA4BC,CAAgB;AAExH,MAAIhN;AACJ,SAAO8M;AAGP,WAASC,EAA2B3H,GAAM;AACxC,QAAIA,MAAS,MAAM;AACjB,MAAAqH,EAAQ,QAAQrH,CAAI;AACpB;AAAA,IACF;AACA,WAAAqH,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,YAAY,GAClBD,EAAaC,GAASK,GAAc,YAAY;AAAA,EACzD;AAGA,WAASE,EAAiB5H,GAAM;AAC9B,WAAAqH,EAAQ,MAAM,WAAW,GAClBQ,EAAU7H,CAAI;AAAA,EACvB;AAGA,WAAS6H,EAAU7H,GAAM;AACvB,UAAM7P,IAAQkX,EAAQ,MAAM,aAAa;AAAA,MACvC,aAAa;AAAA,MACb,UAAAzM;AAAA,IACN,CAAK;AACD,WAAIA,MACFA,EAAS,OAAOzK,IAElByK,IAAWzK,GACJqI,EAAKwH,CAAI;AAAA,EAClB;AAGA,WAASxH,EAAKwH,GAAM;AAClB,QAAIA,MAAS,MAAM;AACjB,MAAAqH,EAAQ,KAAK,WAAW,GACxBA,EAAQ,KAAK,WAAW,GACxBA,EAAQ,QAAQrH,CAAI;AACpB;AAAA,IACF;AACA,WAAI2G,EAAmB3G,CAAI,KACzBqH,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,WAAW,GACjBQ,MAITR,EAAQ,QAAQrH,CAAI,GACbxH;AAAA,EACT;AACF;ACvDO,MAAMsP,KAAW;AAAA,EACtB,UAAUC;AACZ,GAGMC,KAAqB;AAAA,EACzB,UAAUC;AACZ;AAQA,SAASF,GAAmBV,GAAS;AACnC,QAAMhF,IAAO,MAEP6F,IAAQ,CAAA;AACd,MAAIC,IAAY,GAEZC,GAEAC,GAEAC;AACJ,SAAOrJ;AAGP,WAASA,EAAMe,GAAM;AAWnB,QAAImI,IAAYD,EAAM,QAAQ;AAC5B,YAAMK,IAAOL,EAAMC,CAAS;AAC5B,aAAA9F,EAAK,iBAAiBkG,EAAK,CAAC,GACrBlB,EAAQ,QAAQkB,EAAK,CAAC,EAAE,cAAcC,GAAkBC,CAAkB,EAAEzI,CAAI;AAAA,IACzF;AAGA,WAAOyI,EAAmBzI,CAAI;AAAA,EAChC;AAGA,WAASwI,EAAiBxI,GAAM;AAM9B,QALAmI,KAKI9F,EAAK,eAAe,YAAY;AAClC,MAAAA,EAAK,eAAe,aAAa,QAC7B+F,KACFM,EAAS;AAKX,YAAMC,IAAmBtG,EAAK,OAAO;AACrC,UAAIuG,IAAkBD,GAElBnK;AAGJ,aAAOoK;AACL,YAAIvG,EAAK,OAAOuG,CAAe,EAAE,CAAC,MAAM,UAAUvG,EAAK,OAAOuG,CAAe,EAAE,CAAC,EAAE,SAAS,aAAa;AACtG,UAAApK,IAAQ6D,EAAK,OAAOuG,CAAe,EAAE,CAAC,EAAE;AACxC;AAAA,QACF;AAEF,MAAAC,EAAeV,CAAS;AAGxB,UAAI9V,IAAQsW;AACZ,aAAOtW,IAAQgQ,EAAK,OAAO;AACzB,QAAAA,EAAK,OAAOhQ,CAAK,EAAE,CAAC,EAAE,MAAM;AAAA,UAC1B,GAAGmM;AAAA,QACb,GACQnM;AAIF,aAAA6S,GAAO7C,EAAK,QAAQuG,IAAkB,GAAG,GAAGvG,EAAK,OAAO,MAAMsG,CAAgB,CAAC,GAG/EtG,EAAK,OAAO,SAAShQ,GACdoW,EAAmBzI,CAAI;AAAA,IAChC;AACA,WAAOf,EAAMe,CAAI;AAAA,EACnB;AAGA,WAASyI,EAAmBzI,GAAM;AAMhC,QAAImI,MAAcD,EAAM,QAAQ;AAI9B,UAAI,CAACE;AACH,eAAOU,EAAkB9I,CAAI;AAM/B,UAAIoI,EAAU,oBAAoBA,EAAU,iBAAiB;AAC3D,eAAOW,EAAU/I,CAAI;AAQvB,MAAAqC,EAAK,YAAY,GAAQ+F,EAAU,oBAAoB,CAACA,EAAU;AAAA,IACpE;AAGA,WAAA/F,EAAK,iBAAiB,CAAA,GACfgF,EAAQ,MAAMW,IAAoBgB,GAAsBC,CAAqB,EAAEjJ,CAAI;AAAA,EAC5F;AAGA,WAASgJ,EAAqBhJ,GAAM;AAClC,WAAIoI,KAAWM,EAAS,GACxBG,EAAeV,CAAS,GACjBW,EAAkB9I,CAAI;AAAA,EAC/B;AAGA,WAASiJ,EAAsBjJ,GAAM;AACnC,WAAAqC,EAAK,OAAO,KAAKA,EAAK,IAAG,EAAG,IAAI,IAAI8F,MAAcD,EAAM,QACxDI,IAAkBjG,EAAK,IAAG,EAAG,QACtB0G,EAAU/I,CAAI;AAAA,EACvB;AAGA,WAAS8I,EAAkB9I,GAAM;AAE/B,WAAAqC,EAAK,iBAAiB,CAAA,GACfgF,EAAQ,QAAQW,IAAoBkB,GAAmBH,CAAS,EAAE/I,CAAI;AAAA,EAC/E;AAGA,WAASkJ,EAAkBlJ,GAAM;AAC/B,WAAAmI,KACAD,EAAM,KAAK,CAAC7F,EAAK,kBAAkBA,EAAK,cAAc,CAAC,GAEhDyG,EAAkB9I,CAAI;AAAA,EAC/B;AAGA,WAAS+I,EAAU/I,GAAM;AACvB,QAAIA,MAAS,MAAM;AACjB,MAAIoI,KAAWM,EAAS,GACxBG,EAAe,CAAC,GAChBxB,EAAQ,QAAQrH,CAAI;AACpB;AAAA,IACF;AACA,WAAAoI,IAAYA,KAAa/F,EAAK,OAAO,KAAKA,EAAK,KAAK,GACpDgF,EAAQ,MAAM,aAAa;AAAA,MACzB,YAAYe;AAAA,MACZ,aAAa;AAAA,MACb,UAAUC;AAAA,IAChB,CAAK,GACMc,EAAanJ,CAAI;AAAA,EAC1B;AAGA,WAASmJ,EAAanJ,GAAM;AAC1B,QAAIA,MAAS,MAAM;AACjB,MAAAoJ,EAAa/B,EAAQ,KAAK,WAAW,GAAG,EAAI,GAC5CwB,EAAe,CAAC,GAChBxB,EAAQ,QAAQrH,CAAI;AACpB;AAAA,IACF;AACA,WAAI2G,EAAmB3G,CAAI,KACzBqH,EAAQ,QAAQrH,CAAI,GACpBoJ,EAAa/B,EAAQ,KAAK,WAAW,CAAC,GAEtCc,IAAY,GACZ9F,EAAK,YAAY,QACVpD,MAEToI,EAAQ,QAAQrH,CAAI,GACbmJ;AAAA,EACT;AAUA,WAASC,EAAajZ,GAAOkZ,GAAW;AACtC,UAAMC,IAASjH,EAAK,YAAYlS,CAAK;AAyCrC,QAxCIkZ,KAAWC,EAAO,KAAK,IAAI,GAC/BnZ,EAAM,WAAWkY,GACbA,MAAYA,EAAW,OAAOlY,IAClCkY,IAAalY,GACbiY,EAAU,WAAWjY,EAAM,KAAK,GAChCiY,EAAU,MAAMkB,CAAM,GAmClBjH,EAAK,OAAO,KAAKlS,EAAM,MAAM,IAAI,GAAG;AACtC,UAAIkC,IAAQ+V,EAAU,OAAO;AAC7B,aAAO/V;AACL;AAAA;AAAA,UAEA+V,EAAU,OAAO/V,CAAK,EAAE,CAAC,EAAE,MAAM,SAASiW;AAAA,WAE1C,CAACF,EAAU,OAAO/V,CAAK,EAAE,CAAC,EAAE;AAAA,UAE5B+V,EAAU,OAAO/V,CAAK,EAAE,CAAC,EAAE,IAAI,SAASiW;AAAA;AAGtC;AAMJ,YAAMK,IAAmBtG,EAAK,OAAO;AACrC,UAAIuG,IAAkBD,GAElBY,GAEA/K;AAGJ,aAAOoK;AACL,YAAIvG,EAAK,OAAOuG,CAAe,EAAE,CAAC,MAAM,UAAUvG,EAAK,OAAOuG,CAAe,EAAE,CAAC,EAAE,SAAS,aAAa;AACtG,cAAIW,GAAM;AACR,YAAA/K,IAAQ6D,EAAK,OAAOuG,CAAe,EAAE,CAAC,EAAE;AACxC;AAAA,UACF;AACA,UAAAW,IAAO;AAAA,QACT;AAMF,WAJAV,EAAeV,CAAS,GAGxB9V,IAAQsW,GACDtW,IAAQgQ,EAAK,OAAO;AACzB,QAAAA,EAAK,OAAOhQ,CAAK,EAAE,CAAC,EAAE,MAAM;AAAA,UAC1B,GAAGmM;AAAA,QACb,GACQnM;AAIF,MAAA6S,GAAO7C,EAAK,QAAQuG,IAAkB,GAAG,GAAGvG,EAAK,OAAO,MAAMsG,CAAgB,CAAC,GAG/EtG,EAAK,OAAO,SAAShQ;AAAA,IACvB;AAAA,EACF;AAQA,WAASwW,EAAerB,GAAM;AAC5B,QAAInV,IAAQ6V,EAAM;AAGlB,WAAO7V,MAAUmV,KAAM;AACrB,YAAM1V,IAAQoW,EAAM7V,CAAK;AACzB,MAAAgQ,EAAK,iBAAiBvQ,EAAM,CAAC,GAC7BA,EAAM,CAAC,EAAE,KAAK,KAAKuQ,GAAMgF,CAAO;AAAA,IAClC;AACA,IAAAa,EAAM,SAASV;AAAA,EACjB;AACA,WAASkB,IAAY;AACnB,IAAAN,EAAU,MAAM,CAAC,IAAI,CAAC,GACtBC,IAAa,QACbD,IAAY,QACZ/F,EAAK,eAAe,aAAa;AAAA,EACnC;AACF;AAQA,SAAS4F,GAAkBZ,GAASC,GAAIkC,GAAK;AAG3C,SAAOpC,EAAaC,GAASA,EAAQ,QAAQ,KAAK,OAAO,WAAW,UAAUC,GAAIkC,CAAG,GAAG,cAAc,KAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,IAAI,SAAY,CAAC;AACpL;ACtVO,SAASC,GAAkBzJ,GAAM;AACtC,MAAIA,MAAS,QAAQ4G,GAA0B5G,CAAI,KAAK+G,GAAkB/G,CAAI;AAC5E,WAAO;AAET,MAAI8G,GAAmB9G,CAAI;AACzB,WAAO;AAEX;ACVO,SAAS0J,GAAW5D,GAAY6D,GAAQC,GAAS;AAEtD,QAAM3L,IAAS,CAAA;AACf,MAAI5L,IAAQ;AAEZ,SAAO,EAAEA,IAAQyT,EAAW,UAAQ;AAClC,UAAMhD,IAAUgD,EAAWzT,CAAK,EAAE;AAElC,IAAIyQ,KAAW,CAAC7E,EAAO,SAAS6E,CAAO,MACrC6G,IAAS7G,EAAQ6G,GAAQC,CAAO,GAChC3L,EAAO,KAAK6E,CAAO;AAAA,EAEvB;AAEA,SAAO6G;AACT;ACbO,MAAME,KAAY;AAAA,EACvB,MAAM;AAAA,EACN,YAAYC;AAAA,EACZ,UAAUC;AACZ;AAQA,SAASD,GAAoBH,GAAQC,GAAS;AAC5C,MAAIvX,IAAQ,IAER2X,GAEAC,GAEA3Z,GAEA4Z,GAEAC,GAEAzM,GAEA0M,GAEAC;AAMJ,SAAO,EAAEhY,IAAQsX,EAAO;AAEtB,QAAIA,EAAOtX,CAAK,EAAE,CAAC,MAAM,WAAWsX,EAAOtX,CAAK,EAAE,CAAC,EAAE,SAAS,uBAAuBsX,EAAOtX,CAAK,EAAE,CAAC,EAAE;AAIpG,WAHA2X,IAAO3X,GAGA2X;AAEL,YAAIL,EAAOK,CAAI,EAAE,CAAC,MAAM,UAAUL,EAAOK,CAAI,EAAE,CAAC,EAAE,SAAS,uBAAuBL,EAAOK,CAAI,EAAE,CAAC,EAAE;AAAA,QAElGJ,EAAQ,eAAeD,EAAOK,CAAI,EAAE,CAAC,CAAC,EAAE,WAAW,CAAC,MAAMJ,EAAQ,eAAeD,EAAOtX,CAAK,EAAE,CAAC,CAAC,EAAE,WAAW,CAAC,GAAG;AAKhH,eAAKsX,EAAOK,CAAI,EAAE,CAAC,EAAE,UAAUL,EAAOtX,CAAK,EAAE,CAAC,EAAE,WAAWsX,EAAOtX,CAAK,EAAE,CAAC,EAAE,IAAI,SAASsX,EAAOtX,CAAK,EAAE,CAAC,EAAE,MAAM,UAAU,KAAK,GAAGsX,EAAOK,CAAI,EAAE,CAAC,EAAE,IAAI,SAASL,EAAOK,CAAI,EAAE,CAAC,EAAE,MAAM,SAASL,EAAOtX,CAAK,EAAE,CAAC,EAAE,IAAI,SAASsX,EAAOtX,CAAK,EAAE,CAAC,EAAE,MAAM,UAAU;AAC3P;AAIF,UAAAqL,IAAMiM,EAAOK,CAAI,EAAE,CAAC,EAAE,IAAI,SAASL,EAAOK,CAAI,EAAE,CAAC,EAAE,MAAM,SAAS,KAAKL,EAAOtX,CAAK,EAAE,CAAC,EAAE,IAAI,SAASsX,EAAOtX,CAAK,EAAE,CAAC,EAAE,MAAM,SAAS,IAAI,IAAI;AAC7I,gBAAM4M,IAAQ;AAAA,YACZ,GAAG0K,EAAOK,CAAI,EAAE,CAAC,EAAE;AAAA,UAC/B,GACgBxK,IAAM;AAAA,YACV,GAAGmK,EAAOtX,CAAK,EAAE,CAAC,EAAE;AAAA,UAChC;AACU,UAAAiY,GAAUrL,GAAO,CAACvB,CAAG,GACrB4M,GAAU9K,GAAK9B,CAAG,GAClBwM,IAAkB;AAAA,YAChB,MAAMxM,IAAM,IAAI,mBAAmB;AAAA,YACnC,OAAAuB;AAAA,YACA,KAAK;AAAA,cACH,GAAG0K,EAAOK,CAAI,EAAE,CAAC,EAAE;AAAA,YACjC;AAAA,UACA,GACUG,IAAkB;AAAA,YAChB,MAAMzM,IAAM,IAAI,mBAAmB;AAAA,YACnC,OAAO;AAAA,cACL,GAAGiM,EAAOtX,CAAK,EAAE,CAAC,EAAE;AAAA,YAClC;AAAA,YACY,KAAAmN;AAAA,UACZ,GACUlP,IAAO;AAAA,YACL,MAAMoN,IAAM,IAAI,eAAe;AAAA,YAC/B,OAAO;AAAA,cACL,GAAGiM,EAAOK,CAAI,EAAE,CAAC,EAAE;AAAA,YACjC;AAAA,YACY,KAAK;AAAA,cACH,GAAGL,EAAOtX,CAAK,EAAE,CAAC,EAAE;AAAA,YAClC;AAAA,UACA,GACU4X,IAAQ;AAAA,YACN,MAAMvM,IAAM,IAAI,WAAW;AAAA,YAC3B,OAAO;AAAA,cACL,GAAGwM,EAAgB;AAAA,YACjC;AAAA,YACY,KAAK;AAAA,cACH,GAAGC,EAAgB;AAAA,YACjC;AAAA,UACA,GACUR,EAAOK,CAAI,EAAE,CAAC,EAAE,MAAM;AAAA,YACpB,GAAGE,EAAgB;AAAA,UAC/B,GACUP,EAAOtX,CAAK,EAAE,CAAC,EAAE,QAAQ;AAAA,YACvB,GAAG8X,EAAgB;AAAA,UAC/B,GACUC,IAAa,CAAA,GAGTT,EAAOK,CAAI,EAAE,CAAC,EAAE,IAAI,SAASL,EAAOK,CAAI,EAAE,CAAC,EAAE,MAAM,WACrDI,IAAa7E,GAAK6E,GAAY,CAAC,CAAC,SAAST,EAAOK,CAAI,EAAE,CAAC,GAAGJ,CAAO,GAAG,CAAC,QAAQD,EAAOK,CAAI,EAAE,CAAC,GAAGJ,CAAO,CAAC,CAAC,IAIzGQ,IAAa7E,GAAK6E,GAAY,CAAC,CAAC,SAASH,GAAOL,CAAO,GAAG,CAAC,SAASM,GAAiBN,CAAO,GAAG,CAAC,QAAQM,GAAiBN,CAAO,GAAG,CAAC,SAAStZ,GAAMsZ,CAAO,CAAC,CAAC,GAK5JQ,IAAa7E,GAAK6E,GAAYV,GAAWE,EAAQ,OAAO,WAAW,WAAW,MAAMD,EAAO,MAAMK,IAAO,GAAG3X,CAAK,GAAGuX,CAAO,CAAC,GAG3HQ,IAAa7E,GAAK6E,GAAY,CAAC,CAAC,QAAQ9Z,GAAMsZ,CAAO,GAAG,CAAC,SAASO,GAAiBP,CAAO,GAAG,CAAC,QAAQO,GAAiBP,CAAO,GAAG,CAAC,QAAQK,GAAOL,CAAO,CAAC,CAAC,GAGtJD,EAAOtX,CAAK,EAAE,CAAC,EAAE,IAAI,SAASsX,EAAOtX,CAAK,EAAE,CAAC,EAAE,MAAM,UACvDgY,IAAS,GACTD,IAAa7E,GAAK6E,GAAY,CAAC,CAAC,SAAST,EAAOtX,CAAK,EAAE,CAAC,GAAGuX,CAAO,GAAG,CAAC,QAAQD,EAAOtX,CAAK,EAAE,CAAC,GAAGuX,CAAO,CAAC,CAAC,KAEzGS,IAAS,GAEXnF,GAAOyE,GAAQK,IAAO,GAAG3X,IAAQ2X,IAAO,GAAGI,CAAU,GACrD/X,IAAQ2X,IAAOI,EAAW,SAASC,IAAS;AAC5C;AAAA,QACF;AAAA;AAON,OADAhY,IAAQ,IACD,EAAEA,IAAQsX,EAAO;AACtB,IAAIA,EAAOtX,CAAK,EAAE,CAAC,EAAE,SAAS,wBAC5BsX,EAAOtX,CAAK,EAAE,CAAC,EAAE,OAAO;AAG5B,SAAOsX;AACT;AAOA,SAASI,GAAkB1C,GAASC,GAAI;AACtC,QAAMiD,IAAmB,KAAK,OAAO,WAAW,iBAAiB,MAC3D3P,IAAW,KAAK,UAChB5D,IAASyS,GAAkB7O,CAAQ;AAGzC,MAAInF;AACJ,SAAOwJ;AAYP,WAASA,EAAMe,GAAM;AACnB,WAAAvK,IAASuK,GACTqH,EAAQ,MAAM,mBAAmB,GAC1BmD,EAAOxK,CAAI;AAAA,EACpB;AAYA,WAASwK,EAAOxK,GAAM;AACpB,QAAIA,MAASvK;AACX,aAAA4R,EAAQ,QAAQrH,CAAI,GACbwK;AAET,UAAMra,IAAQkX,EAAQ,KAAK,mBAAmB,GAGxCpQ,IAAQwS,GAAkBzJ,CAAI,GAI9BgK,IAAO,CAAC/S,KAASA,MAAU,KAAKD,KAAUuT,EAAiB,SAASvK,CAAI,GACxEyK,IAAQ,CAACzT,KAAUA,MAAW,KAAKC,KAASsT,EAAiB,SAAS3P,CAAQ;AACpF,WAAAzK,EAAM,QAAQ,GAAQsF,MAAW,KAAKuU,IAAOA,MAAShT,KAAU,CAACyT,KACjEta,EAAM,SAAS,GAAQsF,MAAW,KAAKgV,IAAQA,MAAUxT,KAAS,CAAC+S,KAC5D1C,EAAGtH,CAAI;AAAA,EAChB;AACF;AAeA,SAASsK,GAAU9L,GAAO6L,GAAQ;AAChC,EAAA7L,EAAM,UAAU6L,GAChB7L,EAAM,UAAU6L,GAChB7L,EAAM,gBAAgB6L;AACxB;ACrOO,MAAMK,KAAW;AAAA,EACtB,MAAM;AAAA,EACN,UAAUC;AACZ;AAOA,SAASA,GAAiBtD,GAASC,GAAIkC,GAAK;AAC1C,MAAIhC,IAAO;AACX,SAAOvI;AAcP,WAASA,EAAMe,GAAM;AACnB,WAAAqH,EAAQ,MAAM,UAAU,GACxBA,EAAQ,MAAM,gBAAgB,GAC9BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,gBAAgB,GAC7BA,EAAQ,MAAM,kBAAkB,GACzB2C;AAAA,EACT;AAcA,WAASA,EAAKhK,GAAM;AAClB,WAAImG,GAAWnG,CAAI,KACjBqH,EAAQ,QAAQrH,CAAI,GACb4K,KAEL5K,MAAS,KACJwJ,EAAIxJ,CAAI,IAEV6K,EAAW7K,CAAI;AAAA,EACxB;AAcA,WAAS4K,EAAmB5K,GAAM;AAEhC,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMqG,GAAkBrG,CAAI,KAErEwH,IAAO,GACAsD,EAAyB9K,CAAI,KAE/B6K,EAAW7K,CAAI;AAAA,EACxB;AAcA,WAAS8K,EAAyB9K,GAAM;AACtC,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACpBwH,IAAO,GACAuD,MAIJ/K,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMqG,GAAkBrG,CAAI,MAAMwH,MAAS,MACrFH,EAAQ,QAAQrH,CAAI,GACb8K,MAETtD,IAAO,GACAqD,EAAW7K,CAAI;AAAA,EACxB;AAYA,WAAS+K,EAAU/K,GAAM;AACvB,WAAIA,MAAS,MACXqH,EAAQ,KAAK,kBAAkB,GAC/BA,EAAQ,MAAM,gBAAgB,GAC9BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,gBAAgB,GAC7BA,EAAQ,KAAK,UAAU,GAChBC,KAILtH,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAMuG,GAAavG,CAAI,IAC3DwJ,EAAIxJ,CAAI,KAEjBqH,EAAQ,QAAQrH,CAAI,GACb+K;AAAA,EACT;AAYA,WAASF,EAAW7K,GAAM;AACxB,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACbgL,KAEL1E,GAAWtG,CAAI,KACjBqH,EAAQ,QAAQrH,CAAI,GACb6K,KAEFrB,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAASgL,EAAiBhL,GAAM;AAC9B,WAAOqG,GAAkBrG,CAAI,IAAIiL,EAAWjL,CAAI,IAAIwJ,EAAIxJ,CAAI;AAAA,EAC9D;AAYA,WAASiL,EAAWjL,GAAM;AACxB,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACpBwH,IAAO,GACAwD,KAELhL,MAAS,MAEXqH,EAAQ,KAAK,kBAAkB,EAAE,OAAO,iBACxCA,EAAQ,MAAM,gBAAgB,GAC9BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,gBAAgB,GAC7BA,EAAQ,KAAK,UAAU,GAChBC,KAEF4D,EAAWlL,CAAI;AAAA,EACxB;AAcA,WAASkL,EAAWlL,GAAM;AAExB,SAAKA,MAAS,MAAMqG,GAAkBrG,CAAI,MAAMwH,MAAS,IAAI;AAC3D,YAAMlY,IAAO0Q,MAAS,KAAKkL,IAAaD;AACxC,aAAA5D,EAAQ,QAAQrH,CAAI,GACb1Q;AAAA,IACT;AACA,WAAOka,EAAIxJ,CAAI;AAAA,EACjB;AACF;AC5NO,MAAMmL,KAAY;AAAA,EACvB,SAAS;AAAA,EACT,UAAUC;AACZ;AAOA,SAASA,GAAkB/D,GAASC,GAAIkC,GAAK;AAC3C,SAAOvK;AAgBP,WAASA,EAAMe,GAAM;AACnB,WAAO6G,EAAc7G,CAAI,IAAIoH,EAAaC,GAASpQ,GAAO,YAAY,EAAE+I,CAAI,IAAI/I,EAAM+I,CAAI;AAAA,EAC5F;AAgBA,WAAS/I,EAAM+I,GAAM;AACnB,WAAOA,MAAS,QAAQ2G,EAAmB3G,CAAI,IAAIsH,EAAGtH,CAAI,IAAIwJ,EAAIxJ,CAAI;AAAA,EACxE;AACF;AC/CO,MAAMqL,KAAa;AAAA,EACxB,cAAc;AAAA,IACZ,UAAUC;AAAA,EACd;AAAA,EACA,MAAEC;AAAAA,EACA,MAAM;AAAA,EACN,UAAUC;AACZ;AAOA,SAASA,GAAwBnE,GAASC,GAAIkC,GAAK;AACjD,QAAMnH,IAAO;AACb,SAAOpD;AAYP,WAASA,EAAMe,GAAM;AACnB,QAAIA,MAAS,IAAI;AACf,YAAM7F,IAAQkI,EAAK;AACnB,aAAKlI,EAAM,SACTkN,EAAQ,MAAM,cAAc;AAAA,QAC1B,YAAY;AAAA,MACtB,CAAS,GACDlN,EAAM,OAAO,KAEfkN,EAAQ,MAAM,kBAAkB,GAChCA,EAAQ,MAAM,kBAAkB,GAChCA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,kBAAkB,GACxBpQ;AAAA,IACT;AACA,WAAOuS,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAAS/I,EAAM+I,GAAM;AACnB,WAAI6G,EAAc7G,CAAI,KACpBqH,EAAQ,MAAM,4BAA4B,GAC1CA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,4BAA4B,GACzCA,EAAQ,KAAK,kBAAkB,GACxBC,MAETD,EAAQ,KAAK,kBAAkB,GACxBC,EAAGtH,CAAI;AAAA,EAChB;AACF;AAeA,SAASsL,GAA+BjE,GAASC,GAAIkC,GAAK;AACxD,QAAMnH,IAAO;AACb,SAAOoJ;AAeP,WAASA,EAAUzL,GAAM;AACvB,WAAI6G,EAAc7G,CAAI,IAGboH,EAAaC,GAASqE,GAAY,cAAcrJ,EAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,IAAI,SAAY,CAAC,EAAErC,CAAI,IAEpI0L,EAAW1L,CAAI;AAAA,EACxB;AAeA,WAAS0L,EAAW1L,GAAM;AACxB,WAAOqH,EAAQ,QAAQgE,IAAY/D,GAAIkC,CAAG,EAAExJ,CAAI;AAAA,EAClD;AACF;AAGA,SAASuL,GAAKlE,GAAS;AACrB,EAAAA,EAAQ,KAAK,YAAY;AAC3B;ACnIO,MAAMsE,KAAkB;AAAA,EAC7B,MAAM;AAAA,EACN,UAAUC;AACZ;AAOA,SAASA,GAAwBvE,GAASC,GAAIkC,GAAK;AACjD,SAAOvK;AAYP,WAASA,EAAMe,GAAM;AACnB,WAAAqH,EAAQ,MAAM,iBAAiB,GAC/BA,EAAQ,MAAM,cAAc,GAC5BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,cAAc,GACpBmD;AAAA,EACT;AAYA,WAASA,EAAOxK,GAAM;AAEpB,WAAI0G,GAAiB1G,CAAI,KACvBqH,EAAQ,MAAM,sBAAsB,GACpCA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,sBAAsB,GACnCA,EAAQ,KAAK,iBAAiB,GACvBC,KAEFkC,EAAIxJ,CAAI;AAAA,EACjB;AACF;AClDO,MAAMgF,KAAqB;AAAA,EAChC,MAAM;AAAA,EACN,UAAU6G;AACZ;AAOA,SAASA,GAA2BxE,GAASC,GAAIkC,GAAK;AACpD,QAAMnH,IAAO;AACb,MAAImF,IAAO,GAEPrV,GAEA2Z;AACJ,SAAO7M;AAgBP,WAASA,EAAMe,GAAM;AACnB,WAAAqH,EAAQ,MAAM,oBAAoB,GAClCA,EAAQ,MAAM,0BAA0B,GACxCA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,0BAA0B,GAChC2C;AAAA,EACT;AAiBA,WAASA,EAAKhK,GAAM;AAClB,WAAIA,MAAS,MACXqH,EAAQ,MAAM,iCAAiC,GAC/CA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,iCAAiC,GACvC0E,MAET1E,EAAQ,MAAM,yBAAyB,GACvClV,IAAM,IACN2Z,IAAOzF,IACAjb,EAAM4U,CAAI;AAAA,EACnB;AAcA,WAAS+L,EAAQ/L,GAAM;AACrB,WAAIA,MAAS,MAAMA,MAAS,OAC1BqH,EAAQ,MAAM,qCAAqC,GACnDA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,qCAAqC,GAClDA,EAAQ,MAAM,yBAAyB,GACvClV,IAAM,GACN2Z,IAAOrF,IACArb,MAETic,EAAQ,MAAM,yBAAyB,GACvClV,IAAM,GACN2Z,IAAOtF,IACApb,EAAM4U,CAAI;AAAA,EACnB;AAmBA,WAAS5U,EAAM4U,GAAM;AACnB,QAAIA,MAAS,MAAMwH,GAAM;AACvB,YAAMrX,IAAQkX,EAAQ,KAAK,yBAAyB;AACpD,aAAIyE,MAASzF,MAAqB,CAACtB,GAA8B1C,EAAK,eAAelS,CAAK,CAAC,IAClFqZ,EAAIxJ,CAAI,KAKjBqH,EAAQ,MAAM,0BAA0B,GACxCA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,0BAA0B,GACvCA,EAAQ,KAAK,oBAAoB,GAC1BC;AAAA,IACT;AACA,WAAIwE,EAAK9L,CAAI,KAAKwH,MAASrV,KACzBkV,EAAQ,QAAQrH,CAAI,GACb5U,KAEFoe,EAAIxJ,CAAI;AAAA,EACjB;AACF;ACvIA,MAAMgM,KAAsB;AAAA,EAC1B,SAAS;AAAA,EACT,UAAUC;AACZ,GAGaC,KAAa;AAAA,EACxB,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAUC;AACZ;AAOA,SAASA,GAAmB9E,GAASC,GAAIkC,GAAK;AAC5C,QAAMnH,IAAO,MAEP+J,IAAa;AAAA,IACjB,SAAS;AAAA,IACT,UAAUC;AAAA,EACd;AACE,MAAIC,IAAgB,GAChBC,IAAW,GAEX9W;AACJ,SAAOwJ;AAcP,WAASA,EAAMe,GAAM;AAEnB,WAAOwM,EAAmBxM,CAAI;AAAA,EAChC;AAcA,WAASwM,EAAmBxM,GAAM;AAChC,UAAMyM,IAAOpK,EAAK,OAAOA,EAAK,OAAO,SAAS,CAAC;AAC/C,WAAAiK,IAAgBG,KAAQA,EAAK,CAAC,EAAE,SAAS,eAAeA,EAAK,CAAC,EAAE,eAAeA,EAAK,CAAC,GAAG,EAAI,EAAE,SAAS,GACvGhX,IAASuK,GACTqH,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,MAAM,iBAAiB,GAC/BA,EAAQ,MAAM,yBAAyB,GAChCqF,EAAa1M,CAAI;AAAA,EAC1B;AAcA,WAAS0M,EAAa1M,GAAM;AAC1B,WAAIA,MAASvK,KACX8W,KACAlF,EAAQ,QAAQrH,CAAI,GACb0M,KAELH,IAAW,IACN/C,EAAIxJ,CAAI,KAEjBqH,EAAQ,KAAK,yBAAyB,GAC/BR,EAAc7G,CAAI,IAAIoH,EAAaC,GAASsF,GAAY,YAAY,EAAE3M,CAAI,IAAI2M,EAAW3M,CAAI;AAAA,EACtG;AAcA,WAAS2M,EAAW3M,GAAM;AACxB,WAAIA,MAAS,QAAQ2G,EAAmB3G,CAAI,KAC1CqH,EAAQ,KAAK,iBAAiB,GACvBhF,EAAK,YAAYiF,EAAGtH,CAAI,IAAIqH,EAAQ,MAAM2E,IAAqBY,GAAgB3V,CAAK,EAAE+I,CAAI,MAEnGqH,EAAQ,MAAM,qBAAqB,GACnCA,EAAQ,MAAM,eAAe;AAAA,MAC3B,aAAa;AAAA,IACnB,CAAK,GACMwF,EAAK7M,CAAI;AAAA,EAClB;AAcA,WAAS6M,EAAK7M,GAAM;AAClB,WAAIA,MAAS,QAAQ2G,EAAmB3G,CAAI,KAC1CqH,EAAQ,KAAK,aAAa,GAC1BA,EAAQ,KAAK,qBAAqB,GAC3BsF,EAAW3M,CAAI,KAEpB6G,EAAc7G,CAAI,KACpBqH,EAAQ,KAAK,aAAa,GAC1BA,EAAQ,KAAK,qBAAqB,GAC3BD,EAAaC,GAASyF,GAAY,YAAY,EAAE9M,CAAI,KAEzDA,MAAS,MAAMA,MAASvK,IACnB+T,EAAIxJ,CAAI,KAEjBqH,EAAQ,QAAQrH,CAAI,GACb6M;AAAA,EACT;AAcA,WAASC,EAAW9M,GAAM;AACxB,WAAIA,MAAS,QAAQ2G,EAAmB3G,CAAI,IACnC2M,EAAW3M,CAAI,KAExBqH,EAAQ,MAAM,qBAAqB,GACnCA,EAAQ,MAAM,eAAe;AAAA,MAC3B,aAAa;AAAA,IACnB,CAAK,GACM0F,EAAK/M,CAAI;AAAA,EAClB;AAcA,WAAS+M,EAAK/M,GAAM;AAClB,WAAIA,MAAS,QAAQ2G,EAAmB3G,CAAI,KAC1CqH,EAAQ,KAAK,aAAa,GAC1BA,EAAQ,KAAK,qBAAqB,GAC3BsF,EAAW3M,CAAI,KAEpBA,MAAS,MAAMA,MAASvK,IACnB+T,EAAIxJ,CAAI,KAEjBqH,EAAQ,QAAQrH,CAAI,GACb+M;AAAA,EACT;AAeA,WAASH,EAAe5M,GAAM;AAC5B,WAAOqH,EAAQ,QAAQ+E,GAAYnV,GAAO+V,CAAa,EAAEhN,CAAI;AAAA,EAC/D;AAcA,WAASgN,EAAchN,GAAM;AAC3B,WAAAqH,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,YAAY,GAClBK;AAAA,EACT;AAcA,WAASA,EAAa1H,GAAM;AAC1B,WAAOsM,IAAgB,KAAKzF,EAAc7G,CAAI,IAAIoH,EAAaC,GAAS4F,GAAoB,cAAcX,IAAgB,CAAC,EAAEtM,CAAI,IAAIiN,EAAmBjN,CAAI;AAAA,EAC9J;AAcA,WAASiN,EAAmBjN,GAAM;AAChC,WAAIA,MAAS,QAAQ2G,EAAmB3G,CAAI,IACnCqH,EAAQ,MAAM2E,IAAqBY,GAAgB3V,CAAK,EAAE+I,CAAI,KAEvEqH,EAAQ,MAAM,eAAe,GACtB6F,EAAalN,CAAI;AAAA,EAC1B;AAcA,WAASkN,EAAalN,GAAM;AAC1B,WAAIA,MAAS,QAAQ2G,EAAmB3G,CAAI,KAC1CqH,EAAQ,KAAK,eAAe,GACrB4F,EAAmBjN,CAAI,MAEhCqH,EAAQ,QAAQrH,CAAI,GACbkN;AAAA,EACT;AAcA,WAASjW,EAAM+I,GAAM;AACnB,WAAAqH,EAAQ,KAAK,YAAY,GAClBC,EAAGtH,CAAI;AAAA,EAChB;AAOA,WAASqM,EAAmBhF,GAASC,GAAIkC,GAAK;AAC5C,QAAIhC,IAAO;AACX,WAAO2F;AAOP,aAASA,EAAYnN,IAAM;AACzB,aAAAqH,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQrH,EAAI,GACpBqH,EAAQ,KAAK,YAAY,GAClBpI;AAAA,IACT;AAcA,aAASA,EAAMe,IAAM;AAInB,aAAAqH,EAAQ,MAAM,iBAAiB,GACxBR,EAAc7G,EAAI,IAAIoH,EAAaC,GAAS+F,GAAqB,cAAc/K,EAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,IAAI,SAAY,CAAC,EAAErC,EAAI,IAAIoN,EAAoBpN,EAAI;AAAA,IACtM;AAcA,aAASoN,EAAoBpN,IAAM;AACjC,aAAIA,OAASvK,KACX4R,EAAQ,MAAM,yBAAyB,GAChCgG,GAAcrN,EAAI,KAEpBwJ,EAAIxJ,EAAI;AAAA,IACjB;AAcA,aAASqN,GAAcrN,IAAM;AAC3B,aAAIA,OAASvK,KACX+R,KACAH,EAAQ,QAAQrH,EAAI,GACbqN,MAEL7F,KAAQ+E,KACVlF,EAAQ,KAAK,yBAAyB,GAC/BR,EAAc7G,EAAI,IAAIoH,EAAaC,GAASiG,IAAoB,YAAY,EAAEtN,EAAI,IAAIsN,GAAmBtN,EAAI,KAE/GwJ,EAAIxJ,EAAI;AAAA,IACjB;AAcA,aAASsN,GAAmBtN,IAAM;AAChC,aAAIA,OAAS,QAAQ2G,EAAmB3G,EAAI,KAC1CqH,EAAQ,KAAK,iBAAiB,GACvBC,EAAGtH,EAAI,KAETwJ,EAAIxJ,EAAI;AAAA,IACjB;AAAA,EACF;AACF;AAOA,SAASiM,GAA4B5E,GAASC,GAAIkC,GAAK;AACrD,QAAMnH,IAAO;AACb,SAAOpD;AAOP,WAASA,EAAMe,GAAM;AACnB,WAAIA,MAAS,OACJwJ,EAAIxJ,CAAI,KAEjBqH,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,YAAY,GAClBQ;AAAA,EACT;AAOA,WAASA,EAAU7H,GAAM;AACvB,WAAOqC,EAAK,OAAO,KAAKA,EAAK,IAAG,EAAG,IAAI,IAAImH,EAAIxJ,CAAI,IAAIsH,EAAGtH,CAAI;AAAA,EAChE;AACF;AC/bO,MAAMuN,KAAe;AAAA,EAC1B,MAAM;AAAA,EACN,UAAUC;AACZ,GAGMC,KAAe;AAAA,EACnB,SAAS;AAAA,EACT,UAAUC;AACZ;AAOA,SAASF,GAAqBnG,GAASC,GAAIkC,GAAK;AAC9C,QAAMnH,IAAO;AACb,SAAOpD;AAgBP,WAASA,EAAMe,GAAM;AAGnB,WAAAqH,EAAQ,MAAM,cAAc,GAGrBD,EAAaC,GAASsG,GAAa,cAAc,CAAK,EAAE3N,CAAI;AAAA,EACrE;AAYA,WAAS2N,EAAY3N,GAAM;AACzB,UAAMyM,IAAOpK,EAAK,OAAOA,EAAK,OAAO,SAAS,CAAC;AAC/C,WAAOoK,KAAQA,EAAK,CAAC,EAAE,SAAS,gBAAgBA,EAAK,CAAC,EAAE,eAAeA,EAAK,CAAC,GAAG,EAAI,EAAE,UAAU,IAAImB,EAAQ5N,CAAI,IAAIwJ,EAAIxJ,CAAI;AAAA,EAC9H;AAYA,WAAS4N,EAAQ5N,GAAM;AACrB,WAAIA,MAAS,OACJ/I,EAAM+I,CAAI,IAEf2G,EAAmB3G,CAAI,IAClBqH,EAAQ,QAAQoG,IAAcG,GAAS3W,CAAK,EAAE+I,CAAI,KAE3DqH,EAAQ,MAAM,eAAe,GACtBmD,EAAOxK,CAAI;AAAA,EACpB;AAYA,WAASwK,EAAOxK,GAAM;AACpB,WAAIA,MAAS,QAAQ2G,EAAmB3G,CAAI,KAC1CqH,EAAQ,KAAK,eAAe,GACrBuG,EAAQ5N,CAAI,MAErBqH,EAAQ,QAAQrH,CAAI,GACbwK;AAAA,EACT;AAGA,WAASvT,EAAM+I,GAAM;AACnB,WAAAqH,EAAQ,KAAK,cAAc,GAIpBC,EAAGtH,CAAI;AAAA,EAChB;AACF;AAOA,SAAS0N,GAAqBrG,GAASC,GAAIkC,GAAK;AAC9C,QAAMnH,IAAO;AACb,SAAOoL;AAaP,WAASA,EAAazN,GAAM;AAG1B,WAAIqC,EAAK,OAAO,KAAKA,EAAK,IAAG,EAAG,IAAI,IAC3BmH,EAAIxJ,CAAI,IAEb2G,EAAmB3G,CAAI,KACzBqH,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,YAAY,GAClBoG,KASFrG,EAAaC,GAASsG,GAAa,cAAc,CAAK,EAAE3N,CAAI;AAAA,EACrE;AAYA,WAAS2N,EAAY3N,GAAM;AACzB,UAAMyM,IAAOpK,EAAK,OAAOA,EAAK,OAAO,SAAS,CAAC;AAC/C,WAAOoK,KAAQA,EAAK,CAAC,EAAE,SAAS,gBAAgBA,EAAK,CAAC,EAAE,eAAeA,EAAK,CAAC,GAAG,EAAI,EAAE,UAAU,IAAInF,EAAGtH,CAAI,IAAI2G,EAAmB3G,CAAI,IAAIyN,EAAazN,CAAI,IAAIwJ,EAAIxJ,CAAI;AAAA,EACzK;AACF;AClKO,MAAM6N,KAAW;AAAA,EACtB,MAAM;AAAA,EACR,UAAEjT;AAAAA,EACA,SAASkT;AAAA,EACT,UAAUC;AACZ;AAIA,SAASD,GAAgBnE,GAAQ;AAC/B,MAAIqE,IAAgBrE,EAAO,SAAS,GAChCsE,IAAiB,GAEjB5b,GAEA6b;AAGJ,OAAKvE,EAAOsE,CAAc,EAAE,CAAC,EAAE,SAAS,gBAAgBtE,EAAOsE,CAAc,EAAE,CAAC,EAAE,SAAS,aAAatE,EAAOqE,CAAa,EAAE,CAAC,EAAE,SAAS,gBAAgBrE,EAAOqE,CAAa,EAAE,CAAC,EAAE,SAAS;AAI1L,SAHA3b,IAAQ4b,GAGD,EAAE5b,IAAQ2b;AACf,UAAIrE,EAAOtX,CAAK,EAAE,CAAC,EAAE,SAAS,gBAAgB;AAE5C,QAAAsX,EAAOsE,CAAc,EAAE,CAAC,EAAE,OAAO,mBACjCtE,EAAOqE,CAAa,EAAE,CAAC,EAAE,OAAO,mBAChCC,KAAkB,GAClBD,KAAiB;AACjB;AAAA,MACF;AAAA;AAOJ,OAFA3b,IAAQ4b,IAAiB,GACzBD,KACO,EAAE3b,KAAS2b;AAChB,IAAIE,MAAU,SACR7b,MAAU2b,KAAiBrE,EAAOtX,CAAK,EAAE,CAAC,EAAE,SAAS,iBACvD6b,IAAQ7b,MAEDA,MAAU2b,KAAiBrE,EAAOtX,CAAK,EAAE,CAAC,EAAE,SAAS,kBAC9DsX,EAAOuE,CAAK,EAAE,CAAC,EAAE,OAAO,gBACpB7b,MAAU6b,IAAQ,MACpBvE,EAAOuE,CAAK,EAAE,CAAC,EAAE,MAAMvE,EAAOtX,IAAQ,CAAC,EAAE,CAAC,EAAE,KAC5CsX,EAAO,OAAOuE,IAAQ,GAAG7b,IAAQ6b,IAAQ,CAAC,GAC1CF,KAAiB3b,IAAQ6b,IAAQ,GACjC7b,IAAQ6b,IAAQ,IAElBA,IAAQ;AAGZ,SAAOvE;AACT;AAOA,SAAS/O,GAASoF,GAAM;AAEtB,SAAOA,MAAS,MAAM,KAAK,OAAO,KAAK,OAAO,SAAS,CAAC,EAAE,CAAC,EAAE,SAAS;AACxE;AAOA,SAAS+N,GAAiB1G,GAASC,GAAIkC,GAAK;AAE1C,MAAI+C,IAAW,GAEX/E,GAEArX;AACJ,SAAO8O;AAcP,WAASA,EAAMe,GAAM;AACnB,WAAAqH,EAAQ,MAAM,UAAU,GACxBA,EAAQ,MAAM,kBAAkB,GACzBqF,EAAa1M,CAAI;AAAA,EAC1B;AAYA,WAAS0M,EAAa1M,GAAM;AAC1B,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACpBuM,KACOG,MAETrF,EAAQ,KAAK,kBAAkB,GACxB8G,EAAQnO,CAAI;AAAA,EACrB;AAYA,WAASmO,EAAQnO,GAAM;AAErB,WAAIA,MAAS,OACJwJ,EAAIxJ,CAAI,IAMbA,MAAS,MACXqH,EAAQ,MAAM,OAAO,GACrBA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,OAAO,GACb8G,KAILnO,MAAS,MACX7P,IAAQkX,EAAQ,MAAM,kBAAkB,GACxCG,IAAO,GACA6F,EAAcrN,CAAI,KAEvB2G,EAAmB3G,CAAI,KACzBqH,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,YAAY,GAClB8G,MAIT9G,EAAQ,MAAM,cAAc,GACrB7O,EAAKwH,CAAI;AAAA,EAClB;AAYA,WAASxH,EAAKwH,GAAM;AAClB,WAAIA,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAM2G,EAAmB3G,CAAI,KACxEqH,EAAQ,KAAK,cAAc,GACpB8G,EAAQnO,CAAI,MAErBqH,EAAQ,QAAQrH,CAAI,GACbxH;AAAA,EACT;AAYA,WAAS6U,EAAcrN,GAAM;AAE3B,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACpBwH,KACO6F,KAIL7F,MAAS+E,KACXlF,EAAQ,KAAK,kBAAkB,GAC/BA,EAAQ,KAAK,UAAU,GAChBC,EAAGtH,CAAI,MAIhB7P,EAAM,OAAO,gBACNqI,EAAKwH,CAAI;AAAA,EAClB;AACF;ACnMO,MAAMoO,GAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOxB,YAAYC,GAAS;AAEnB,SAAK,OAAOA,IAAU,CAAC,GAAGA,CAAO,IAAI,CAAA,GAErC,KAAK,QAAQ,CAAA;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,IAAIhc,GAAO;AACT,QAAIA,IAAQ,KAAKA,KAAS,KAAK,KAAK,SAAS,KAAK,MAAM;AACtD,YAAM,IAAI,WAAW,0BAA0BA,IAAQ,oCAAoC,KAAK,KAAK,SAAS,KAAK,MAAM,UAAU,GAAG;AAExI,WAAIA,IAAQ,KAAK,KAAK,SAAe,KAAK,KAAKA,CAAK,IAC7C,KAAK,MAAM,KAAK,MAAM,SAASA,IAAQ,KAAK,KAAK,SAAS,CAAC;AAAA,EACpE;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,SAAS;AACX,WAAO,KAAK,KAAK,SAAS,KAAK,MAAM;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,QAAQ;AACN,gBAAK,UAAU,CAAC,GACT,KAAK,MAAM,IAAG;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,MAAM4M,GAAOO,GAAK;AAEhB,UAAM8O,IAAO9O,KAAoC,OAAO;AACxD,WAAI8O,IAAO,KAAK,KAAK,SACZ,KAAK,KAAK,MAAMrP,GAAOqP,CAAI,IAEhCrP,IAAQ,KAAK,KAAK,SACb,KAAK,MAAM,MAAM,KAAK,MAAM,SAASqP,IAAO,KAAK,KAAK,QAAQ,KAAK,MAAM,SAASrP,IAAQ,KAAK,KAAK,MAAM,EAAE,QAAO,IAErH,KAAK,KAAK,MAAMA,CAAK,EAAE,OAAO,KAAK,MAAM,MAAM,KAAK,MAAM,SAASqP,IAAO,KAAK,KAAK,MAAM,EAAE,SAAS;AAAA,EAC9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsBA,OAAOrP,GAAOsP,GAAalJ,GAAO;AAEhC,UAAMmJ,IAAQD,KAAe;AAC7B,SAAK,UAAU,KAAK,MAAMtP,CAAK,CAAC;AAChC,UAAMtS,IAAU,KAAK,MAAM,OAAO,KAAK,MAAM,SAAS6hB,GAAO,OAAO,iBAAiB;AACrF,WAAInJ,KAAOoJ,GAAY,KAAK,MAAMpJ,CAAK,GAChC1Y,EAAQ,QAAO;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,MAAM;AACJ,gBAAK,UAAU,OAAO,iBAAiB,GAChC,KAAK,KAAK,IAAG;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,KAAK4b,GAAM;AACT,SAAK,UAAU,OAAO,iBAAiB,GACvC,KAAK,KAAK,KAAKA,CAAI;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,SAASlD,GAAO;AACd,SAAK,UAAU,OAAO,iBAAiB,GACvCoJ,GAAY,KAAK,MAAMpJ,CAAK;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,QAAQkD,GAAM;AACZ,SAAK,UAAU,CAAC,GAChB,KAAK,MAAM,KAAKA,CAAI;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,YAAYlD,GAAO;AACjB,SAAK,UAAU,CAAC,GAChBoJ,GAAY,KAAK,OAAOpJ,EAAM,QAAO,CAAE;AAAA,EACzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,UAAUxU,GAAG;AACX,QAAI,EAAAA,MAAM,KAAK,KAAK,UAAUA,IAAI,KAAK,KAAK,UAAU,KAAK,MAAM,WAAW,KAAKA,IAAI,KAAK,KAAK,KAAK,WAAW;AAC/G,UAAIA,IAAI,KAAK,KAAK,QAAQ;AAExB,cAAMlE,IAAU,KAAK,KAAK,OAAOkE,GAAG,OAAO,iBAAiB;AAC5D,QAAA4d,GAAY,KAAK,OAAO9hB,EAAQ,QAAO,CAAE;AAAA,MAC3C,OAAO;AAEL,cAAMA,IAAU,KAAK,MAAM,OAAO,KAAK,KAAK,SAAS,KAAK,MAAM,SAASkE,GAAG,OAAO,iBAAiB;AACpG,QAAA4d,GAAY,KAAK,MAAM9hB,EAAQ,QAAO,CAAE;AAAA,MAC1C;AAAA,EACF;AACF;AAcA,SAAS8hB,GAAYtJ,GAAMlY,GAAO;AAEhC,MAAIqY,IAAa;AACjB,MAAIrY,EAAM,SAAS;AACjB,IAAAkY,EAAK,KAAK,GAAGlY,CAAK;AAAA;AAElB,WAAOqY,IAAarY,EAAM;AACxB,MAAAkY,EAAK,KAAK,GAAGlY,EAAM,MAAMqY,GAAYA,IAAa,GAAK,CAAC,GACxDA,KAAc;AAGpB;ACvOO,SAASoJ,GAAYC,GAAa;AAEvC,QAAMC,IAAQ,CAAA;AACd,MAAIvc,IAAQ,IAERwc,GAEAC,GAEAC,GAEAC,GAEA7Q,GAEA8Q,GAEAC;AACJ,QAAMvF,IAAS,IAAIyE,GAAaO,CAAW;AAC3C,SAAO,EAAEtc,IAAQsX,EAAO,UAAQ;AAC9B,WAAOtX,KAASuc;AACd,MAAAvc,IAAQuc,EAAMvc,CAAK;AAMrB,QAJAwc,IAAQlF,EAAO,IAAItX,CAAK,GAIpBA,KAASwc,EAAM,CAAC,EAAE,SAAS,eAAelF,EAAO,IAAItX,IAAQ,CAAC,EAAE,CAAC,EAAE,SAAS,qBAC9E4c,IAAYJ,EAAM,CAAC,EAAE,WAAW,QAChCE,IAAa,GACTA,IAAaE,EAAU,UAAUA,EAAUF,CAAU,EAAE,CAAC,EAAE,SAAS,sBACrEA,KAAc,IAEZA,IAAaE,EAAU,UAAUA,EAAUF,CAAU,EAAE,CAAC,EAAE,SAAS;AACrE,aAAO,EAAEA,IAAaE,EAAU,UAC1BA,EAAUF,CAAU,EAAE,CAAC,EAAE,SAAS;AAGtC,QAAIE,EAAUF,CAAU,EAAE,CAAC,EAAE,SAAS,gBACpCE,EAAUF,CAAU,EAAE,CAAC,EAAE,8BAA8B,IACvDA;AAOR,QAAIF,EAAM,CAAC,MAAM;AACf,MAAIA,EAAM,CAAC,EAAE,gBACX,OAAO,OAAOD,GAAOO,GAAWxF,GAAQtX,CAAK,CAAC,GAC9CA,IAAQuc,EAAMvc,CAAK,GACnB6c,IAAO;AAAA,aAIFL,EAAM,CAAC,EAAE,YAAY;AAG5B,WAFAE,IAAa1c,GACbyc,IAAY,QACLC;AAEL,YADAC,IAAarF,EAAO,IAAIoF,CAAU,GAC9BC,EAAW,CAAC,EAAE,SAAS,gBAAgBA,EAAW,CAAC,EAAE,SAAS;AAChE,UAAIA,EAAW,CAAC,MAAM,YAChBF,MACFnF,EAAO,IAAImF,CAAS,EAAE,CAAC,EAAE,OAAO,oBAElCE,EAAW,CAAC,EAAE,OAAO,cACrBF,IAAYC;AAAA,iBAEL,EAAAC,EAAW,CAAC,EAAE,SAAS,gBAAgBA,EAAW,CAAC,EAAE,SAAS,kBAGvE;AAGJ,MAAIF,MAEFD,EAAM,CAAC,EAAE,MAAM;AAAA,QACb,GAAGlF,EAAO,IAAImF,CAAS,EAAE,CAAC,EAAE;AAAA,MACtC,GAGQ3Q,IAAawL,EAAO,MAAMmF,GAAWzc,CAAK,GAC1C8L,EAAW,QAAQ0Q,CAAK,GACxBlF,EAAO,OAAOmF,GAAWzc,IAAQyc,IAAY,GAAG3Q,CAAU;AAAA,IAE9D;AAAA,EACF;AAGA,SAAA+G,GAAOyJ,GAAa,GAAG,OAAO,mBAAmBhF,EAAO,MAAM,CAAC,CAAC,GACzD,CAACuF;AACV;AAYA,SAASC,GAAWxF,GAAQyF,GAAY;AACtC,QAAMjf,IAAQwZ,EAAO,IAAIyF,CAAU,EAAE,CAAC,GAChCxF,IAAUD,EAAO,IAAIyF,CAAU,EAAE,CAAC;AACxC,MAAIC,IAAgBD,IAAa;AAEjC,QAAME,IAAiB,CAAA;AACvB,MAAIC,IAAYpf,EAAM;AACtB,EAAKof,MACHA,IAAY3F,EAAQ,OAAOzZ,EAAM,WAAW,EAAEA,EAAM,KAAK,GACrDA,EAAM,6BACRof,EAAU,2BAA2B;AAGzC,QAAMC,IAAcD,EAAU,QAExBX,IAAQ,CAAA,GAERa,IAAO,CAAA;AAEb,MAAInG,GAEA1O,GACAvI,IAAQ,IAERqd,IAAUvf,GACVwf,IAAS,GACT1Q,IAAQ;AACZ,QAAM2Q,IAAS,CAAC3Q,CAAK;AAIrB,SAAOyQ,KAAS;AAEd,WAAO/F,EAAO,IAAI,EAAE0F,CAAa,EAAE,CAAC,MAAMK;AAAS;AAGnD,IAAAJ,EAAe,KAAKD,CAAa,GAC5BK,EAAQ,eACXpG,IAASM,EAAQ,YAAY8F,CAAO,GAC/BA,EAAQ,QACXpG,EAAO,KAAK,IAAI,GAEd1O,KACF2U,EAAU,WAAWG,EAAQ,KAAK,GAEhCA,EAAQ,gCACVH,EAAU,qCAAqC,KAEjDA,EAAU,MAAMjG,CAAM,GAClBoG,EAAQ,gCACVH,EAAU,qCAAqC,UAKnD3U,IAAW8U,GACXA,IAAUA,EAAQ;AAAA,EACpB;AAKA,OADAA,IAAUvf,GACH,EAAEkC,IAAQmd,EAAY;AAC3B;AAAA,IAEAA,EAAYnd,CAAK,EAAE,CAAC,MAAM,UAAUmd,EAAYnd,IAAQ,CAAC,EAAE,CAAC,MAAM,WAAWmd,EAAYnd,CAAK,EAAE,CAAC,EAAE,SAASmd,EAAYnd,IAAQ,CAAC,EAAE,CAAC,EAAE,QAAQmd,EAAYnd,CAAK,EAAE,CAAC,EAAE,MAAM,SAASmd,EAAYnd,CAAK,EAAE,CAAC,EAAE,IAAI,SAC3M4M,IAAQ5M,IAAQ,GAChBud,EAAO,KAAK3Q,CAAK,GAEjByQ,EAAQ,aAAa,QACrBA,EAAQ,WAAW,QACnBA,IAAUA,EAAQ;AAqBtB,OAhBAH,EAAU,SAAS,CAAA,GAKfG,KAEFA,EAAQ,aAAa,QACrBA,EAAQ,WAAW,UAEnBE,EAAO,IAAG,GAKZvd,IAAQud,EAAO,QACRvd,OAAS;AACd,UAAMwd,IAAQL,EAAY,MAAMI,EAAOvd,CAAK,GAAGud,EAAOvd,IAAQ,CAAC,CAAC,GAC1D4M,IAAQqQ,EAAe,IAAG;AAChC,IAAAV,EAAM,KAAK,CAAC3P,GAAOA,IAAQ4Q,EAAM,SAAS,CAAC,CAAC,GAC5ClG,EAAO,OAAO1K,GAAO,GAAG4Q,CAAK;AAAA,EAC/B;AAGA,OAFAjB,EAAM,QAAO,GACbvc,IAAQ,IACD,EAAEA,IAAQuc,EAAM;AACrB,IAAAa,EAAKE,IAASf,EAAMvc,CAAK,EAAE,CAAC,CAAC,IAAIsd,IAASf,EAAMvc,CAAK,EAAE,CAAC,GACxDsd,KAAUf,EAAMvc,CAAK,EAAE,CAAC,IAAIuc,EAAMvc,CAAK,EAAE,CAAC,IAAI;AAEhD,SAAOod;AACT;ACjNO,MAAM/a,KAAU;AAAA,EACrB,SAASob;AAAA,EACT,UAAUC;AACZ,GAGMC,KAAwB;AAAA,EAC5B,SAAS;AAAA,EACT,UAAUC;AACZ;AAQA,SAASH,GAAenG,GAAQ;AAC9B,SAAA+E,GAAY/E,CAAM,GACXA;AACT;AAOA,SAASoG,GAAgB1I,GAASC,GAAI;AAEpC,MAAI1M;AACJ,SAAO0K;AAYP,WAASA,EAAWtF,GAAM;AACxB,WAAAqH,EAAQ,MAAM,SAAS,GACvBzM,IAAWyM,EAAQ,MAAM,gBAAgB;AAAA,MACvC,aAAa;AAAA,IACnB,CAAK,GACM6I,EAAYlQ,CAAI;AAAA,EACzB;AAYA,WAASkQ,EAAYlQ,GAAM;AACzB,WAAIA,MAAS,OACJmQ,EAAWnQ,CAAI,IAKpB2G,EAAmB3G,CAAI,IAClBqH,EAAQ,MAAM2I,IAAuBI,GAAiBD,CAAU,EAAEnQ,CAAI,KAI/EqH,EAAQ,QAAQrH,CAAI,GACbkQ;AAAA,EACT;AAOA,WAASC,EAAWnQ,GAAM;AACxB,WAAAqH,EAAQ,KAAK,cAAc,GAC3BA,EAAQ,KAAK,SAAS,GACfC,EAAGtH,CAAI;AAAA,EAChB;AAOA,WAASoQ,EAAgBpQ,GAAM;AAC7B,WAAAqH,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,cAAc,GAC3BzM,EAAS,OAAOyM,EAAQ,MAAM,gBAAgB;AAAA,MAC5C,aAAa;AAAA,MACb,UAAAzM;AAAA,IACN,CAAK,GACDA,IAAWA,EAAS,MACbsV;AAAA,EACT;AACF;AAOA,SAASD,GAAqB5I,GAASC,GAAIkC,GAAK;AAC9C,QAAMnH,IAAO;AACb,SAAOgO;AAOP,WAASA,EAAerQ,GAAM;AAC5B,WAAAqH,EAAQ,KAAK,cAAc,GAC3BA,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,YAAY,GAClBD,EAAaC,GAASiJ,GAAU,YAAY;AAAA,EACrD;AAOA,WAASA,EAAStQ,GAAM;AACtB,QAAIA,MAAS,QAAQ2G,EAAmB3G,CAAI;AAC1C,aAAOwJ,EAAIxJ,CAAI;AAKjB,UAAMyM,IAAOpK,EAAK,OAAOA,EAAK,OAAO,SAAS,CAAC;AAC/C,WAAI,CAACA,EAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,KAAKoK,KAAQA,EAAK,CAAC,EAAE,SAAS,gBAAgBA,EAAK,CAAC,EAAE,eAAeA,EAAK,CAAC,GAAG,EAAI,EAAE,UAAU,IACrJnF,EAAGtH,CAAI,IAETqH,EAAQ,UAAUhF,EAAK,OAAO,WAAW,MAAMmH,GAAKlC,CAAE,EAAEtH,CAAI;AAAA,EACrE;AACF;ACxHO,SAASuQ,GAAmBlJ,GAASC,GAAIkC,GAAK/R,GAAM+Y,GAAaC,GAAmBC,GAASC,GAAYxe,GAAK;AACnH,QAAMoV,IAAQpV,KAAO,OAAO;AAC5B,MAAIye,IAAU;AACd,SAAO3R;AAcP,WAASA,EAAMe,GAAM;AACnB,WAAIA,MAAS,MACXqH,EAAQ,MAAM5P,CAAI,GAClB4P,EAAQ,MAAMmJ,CAAW,GACzBnJ,EAAQ,MAAMoJ,CAAiB,GAC/BpJ,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAKoJ,CAAiB,GACvBI,KAIL7Q,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAMuG,GAAavG,CAAI,IAC3DwJ,EAAIxJ,CAAI,KAEjBqH,EAAQ,MAAM5P,CAAI,GAClB4P,EAAQ,MAAMqJ,CAAO,GACrBrJ,EAAQ,MAAMsJ,CAAU,GACxBtJ,EAAQ,MAAM,eAAe;AAAA,MAC3B,aAAa;AAAA,IACnB,CAAK,GACMyJ,EAAI9Q,CAAI;AAAA,EACjB;AAYA,WAAS6Q,EAAe7Q,GAAM;AAC5B,WAAIA,MAAS,MACXqH,EAAQ,MAAMoJ,CAAiB,GAC/BpJ,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAKoJ,CAAiB,GAC9BpJ,EAAQ,KAAKmJ,CAAW,GACxBnJ,EAAQ,KAAK5P,CAAI,GACV6P,MAETD,EAAQ,MAAMsJ,CAAU,GACxBtJ,EAAQ,MAAM,eAAe;AAAA,MAC3B,aAAa;AAAA,IACnB,CAAK,GACM0J,EAAS/Q,CAAI;AAAA,EACtB;AAYA,WAAS+Q,EAAS/Q,GAAM;AACtB,WAAIA,MAAS,MACXqH,EAAQ,KAAK,aAAa,GAC1BA,EAAQ,KAAKsJ,CAAU,GAChBE,EAAe7Q,CAAI,KAExBA,MAAS,QAAQA,MAAS,MAAM2G,EAAmB3G,CAAI,IAClDwJ,EAAIxJ,CAAI,KAEjBqH,EAAQ,QAAQrH,CAAI,GACbA,MAAS,KAAKgR,IAAiBD;AAAA,EACxC;AAYA,WAASC,EAAehR,GAAM;AAC5B,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACzCqH,EAAQ,QAAQrH,CAAI,GACb+Q,KAEFA,EAAS/Q,CAAI;AAAA,EACtB;AAYA,WAAS8Q,EAAI9Q,GAAM;AACjB,WAAI,CAAC4Q,MAAY5Q,MAAS,QAAQA,MAAS,MAAM4G,GAA0B5G,CAAI,MAC7EqH,EAAQ,KAAK,aAAa,GAC1BA,EAAQ,KAAKsJ,CAAU,GACvBtJ,EAAQ,KAAKqJ,CAAO,GACpBrJ,EAAQ,KAAK5P,CAAI,GACV6P,EAAGtH,CAAI,KAEZ4Q,IAAUrJ,KAASvH,MAAS,MAC9BqH,EAAQ,QAAQrH,CAAI,GACpB4Q,KACOE,KAEL9Q,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACpB4Q,KACOE,KAML9Q,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAMuG,GAAavG,CAAI,IAC3DwJ,EAAIxJ,CAAI,KAEjBqH,EAAQ,QAAQrH,CAAI,GACbA,MAAS,KAAKiR,IAAYH;AAAA,EACnC;AAYA,WAASG,EAAUjR,GAAM;AACvB,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACzCqH,EAAQ,QAAQrH,CAAI,GACb8Q,KAEFA,EAAI9Q,CAAI;AAAA,EACjB;AACF;ACpKO,SAASkR,GAAa7J,GAASC,GAAIkC,GAAK/R,GAAM0Z,GAAYR,GAAY;AAC3E,QAAMtO,IAAO;AACb,MAAImF,IAAO,GAEP+B;AACJ,SAAOtK;AAYP,WAASA,EAAMe,GAAM;AACnB,WAAAqH,EAAQ,MAAM5P,CAAI,GAClB4P,EAAQ,MAAM8J,CAAU,GACxB9J,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK8J,CAAU,GACvB9J,EAAQ,MAAMsJ,CAAU,GACjB/C;AAAA,EACT;AAYA,WAASA,EAAQ5N,GAAM;AACrB,WAAIwH,IAAO,OAAOxH,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAM,CAACuJ;AAAA;AAAA;AAAA;AAAA;AAAA,IAMlEvJ,MAAS,MAAM,CAACwH,KAAQ,4BAA4BnF,EAAK,OAAO,aACvDmH,EAAIxJ,CAAI,IAEbA,MAAS,MACXqH,EAAQ,KAAKsJ,CAAU,GACvBtJ,EAAQ,MAAM8J,CAAU,GACxB9J,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK8J,CAAU,GACvB9J,EAAQ,KAAK5P,CAAI,GACV6P,KAILX,EAAmB3G,CAAI,KACzBqH,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,YAAY,GAClBuG,MAETvG,EAAQ,MAAM,eAAe;AAAA,MAC3B,aAAa;AAAA,IACnB,CAAK,GACM+J,EAAYpR,CAAI;AAAA,EACzB;AAYA,WAASoR,EAAYpR,GAAM;AACzB,WAAIA,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAM2G,EAAmB3G,CAAI,KAAKwH,MAAS,OACtFH,EAAQ,KAAK,aAAa,GACnBuG,EAAQ5N,CAAI,MAErBqH,EAAQ,QAAQrH,CAAI,GACfuJ,MAAMA,IAAO,CAAC1C,EAAc7G,CAAI,IAC9BA,MAAS,KAAKqR,IAAcD;AAAA,EACrC;AAYA,WAASC,EAAYrR,GAAM;AACzB,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACzCqH,EAAQ,QAAQrH,CAAI,GACpBwH,KACO4J,KAEFA,EAAYpR,CAAI;AAAA,EACzB;AACF;ACzGO,SAASsR,GAAajK,GAASC,GAAIkC,GAAK/R,GAAM0Z,GAAYR,GAAY;AAE3E,MAAIlb;AACJ,SAAOwJ;AAYP,WAASA,EAAMe,GAAM;AACnB,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACzCqH,EAAQ,MAAM5P,CAAI,GAClB4P,EAAQ,MAAM8J,CAAU,GACxB9J,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK8J,CAAU,GACvB1b,IAASuK,MAAS,KAAK,KAAKA,GACrBuR,KAEF/H,EAAIxJ,CAAI;AAAA,EACjB;AAcA,WAASuR,EAAMvR,GAAM;AACnB,WAAIA,MAASvK,KACX4R,EAAQ,MAAM8J,CAAU,GACxB9J,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK8J,CAAU,GACvB9J,EAAQ,KAAK5P,CAAI,GACV6P,MAETD,EAAQ,MAAMsJ,CAAU,GACjB/C,EAAQ5N,CAAI;AAAA,EACrB;AAYA,WAAS4N,EAAQ5N,GAAM;AACrB,WAAIA,MAASvK,KACX4R,EAAQ,KAAKsJ,CAAU,GAChBY,EAAM9b,CAAM,KAEjBuK,MAAS,OACJwJ,EAAIxJ,CAAI,IAIb2G,EAAmB3G,CAAI,KAEzBqH,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,YAAY,GAClBD,EAAaC,GAASuG,GAAS,YAAY,MAEpDvG,EAAQ,MAAM,eAAe;AAAA,MAC3B,aAAa;AAAA,IACnB,CAAK,GACMmD,EAAOxK,CAAI;AAAA,EACpB;AAOA,WAASwK,EAAOxK,GAAM;AACpB,WAAIA,MAASvK,KAAUuK,MAAS,QAAQ2G,EAAmB3G,CAAI,KAC7DqH,EAAQ,KAAK,aAAa,GACnBuG,EAAQ5N,CAAI,MAErBqH,EAAQ,QAAQrH,CAAI,GACbA,MAAS,KAAKwR,IAAShH;AAAA,EAChC;AAYA,WAASgH,EAAOxR,GAAM;AACpB,WAAIA,MAASvK,KAAUuK,MAAS,MAC9BqH,EAAQ,QAAQrH,CAAI,GACbwK,KAEFA,EAAOxK,CAAI;AAAA,EACpB;AACF;ACrIO,SAASyR,GAAkBpK,GAASC,GAAI;AAE7C,MAAIiC;AACJ,SAAOtK;AAGP,WAASA,EAAMe,GAAM;AACnB,WAAI2G,EAAmB3G,CAAI,KACzBqH,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,YAAY,GACzBkC,IAAO,IACAtK,KAEL4H,EAAc7G,CAAI,IACboH,EAAaC,GAASpI,GAAOsK,IAAO,eAAe,YAAY,EAAEvJ,CAAI,IAEvEsH,EAAGtH,CAAI;AAAA,EAChB;AACF;AC1BO,MAAM0R,KAAa;AAAA,EACxB,MAAM;AAAA,EACN,UAAUC;AACZ,GAGMC,KAAc;AAAA,EAClB,SAAS;AAAA,EACT,UAAUC;AACZ;AAOA,SAASF,GAAmBtK,GAASC,GAAIkC,GAAK;AAC5C,QAAMnH,IAAO;AAEb,MAAIyP;AACJ,SAAO7S;AAYP,WAASA,EAAMe,GAAM;AAInB,WAAAqH,EAAQ,MAAM,YAAY,GACnBrQ,EAAOgJ,CAAI;AAAA,EACpB;AAYA,WAAShJ,EAAOgJ,GAAM;AAGpB,WAAOkR,GAAa;AAAA,MAAK7O;AAAA,MAAMgF;AAAA,MAAS0K;AAAA;AAAA,MAExCvI;AAAA,MAAK;AAAA,MAAmB;AAAA,MAAyB;AAAA,IAAuB,EAAExJ,CAAI;AAAA,EAChF;AAYA,WAAS+R,EAAW/R,GAAM;AAExB,WADA8R,IAAa5L,GAAoB7D,EAAK,eAAeA,EAAK,OAAOA,EAAK,OAAO,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,GACrGrC,MAAS,MACXqH,EAAQ,MAAM,kBAAkB,GAChCA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,kBAAkB,GACxB2K,KAEFxI,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAASgS,EAAYhS,GAAM;AAEzB,WAAO4G,GAA0B5G,CAAI,IAAIyR,GAAkBpK,GAAS4K,CAAiB,EAAEjS,CAAI,IAAIiS,EAAkBjS,CAAI;AAAA,EACvH;AAYA,WAASiS,EAAkBjS,GAAM;AAC/B,WAAOuQ;AAAA,MAAmBlJ;AAAA,MAAS6K;AAAA;AAAA,MAEnC1I;AAAA,MAAK;AAAA,MAAyB;AAAA,MAAgC;AAAA,MAAsC;AAAA,MAA4B;AAAA,IAA6B,EAAExJ,CAAI;AAAA,EACrK;AAYA,WAASkS,EAAiBlS,GAAM;AAC9B,WAAOqH,EAAQ,QAAQuK,IAAa3a,GAAOA,CAAK,EAAE+I,CAAI;AAAA,EACxD;AAcA,WAAS/I,EAAM+I,GAAM;AACnB,WAAO6G,EAAc7G,CAAI,IAAIoH,EAAaC,GAAS8K,GAAiB,YAAY,EAAEnS,CAAI,IAAImS,EAAgBnS,CAAI;AAAA,EAChH;AAcA,WAASmS,EAAgBnS,GAAM;AAC7B,WAAIA,MAAS,QAAQ2G,EAAmB3G,CAAI,KAC1CqH,EAAQ,KAAK,YAAY,GAKzBhF,EAAK,OAAO,QAAQ,KAAKyP,CAAU,GAK5BxK,EAAGtH,CAAI,KAETwJ,EAAIxJ,CAAI;AAAA,EACjB;AACF;AAOA,SAAS6R,GAAoBxK,GAASC,GAAIkC,GAAK;AAC7C,SAAOoI;AAcP,WAASA,EAAY5R,GAAM;AACzB,WAAO4G,GAA0B5G,CAAI,IAAIyR,GAAkBpK,GAAS+K,CAAY,EAAEpS,CAAI,IAAIwJ,EAAIxJ,CAAI;AAAA,EACpG;AAaA,WAASoS,EAAapS,GAAM;AAC1B,WAAOsR,GAAajK,GAASgL,GAAY7I,GAAK,mBAAmB,yBAAyB,uBAAuB,EAAExJ,CAAI;AAAA,EACzH;AAYA,WAASqS,EAAWrS,GAAM;AACxB,WAAO6G,EAAc7G,CAAI,IAAIoH,EAAaC,GAASiL,GAA8B,YAAY,EAAEtS,CAAI,IAAIsS,EAA6BtS,CAAI;AAAA,EAC1I;AAYA,WAASsS,EAA6BtS,GAAM;AAC1C,WAAOA,MAAS,QAAQ2G,EAAmB3G,CAAI,IAAIsH,EAAGtH,CAAI,IAAIwJ,EAAIxJ,CAAI;AAAA,EACxE;AACF;AClPO,MAAMuS,KAAkB;AAAA,EAC7B,MAAM;AAAA,EACN,UAAUC;AACZ;AAOA,SAASA,GAAwBnL,GAASC,GAAIkC,GAAK;AACjD,SAAOvK;AAaP,WAASA,EAAMe,GAAM;AACnB,WAAAqH,EAAQ,MAAM,iBAAiB,GAC/BA,EAAQ,QAAQrH,CAAI,GACb/I;AAAA,EACT;AAaA,WAASA,EAAM+I,GAAM;AACnB,WAAI2G,EAAmB3G,CAAI,KACzBqH,EAAQ,KAAK,iBAAiB,GACvBC,EAAGtH,CAAI,KAETwJ,EAAIxJ,CAAI;AAAA,EACjB;AACF;AC5CO,MAAMyS,KAAa;AAAA,EACxB,MAAM;AAAA,EACN,SAASC;AAAA,EACT,UAAUC;AACZ;AAGA,SAASD,GAAkB/I,GAAQC,GAAS;AAC1C,MAAIuG,IAAaxG,EAAO,SAAS,GAC7BjC,IAAe,GAEfhT,GAEApE;AAGJ,SAAIqZ,EAAOjC,CAAY,EAAE,CAAC,EAAE,SAAS,iBACnCA,KAAgB,IAIdyI,IAAa,IAAIzI,KAAgBiC,EAAOwG,CAAU,EAAE,CAAC,EAAE,SAAS,iBAClEA,KAAc,IAEZxG,EAAOwG,CAAU,EAAE,CAAC,EAAE,SAAS,yBAAyBzI,MAAiByI,IAAa,KAAKA,IAAa,IAAIzI,KAAgBiC,EAAOwG,IAAa,CAAC,EAAE,CAAC,EAAE,SAAS,kBACjKA,KAAczI,IAAe,MAAMyI,IAAa,IAAI,IAElDA,IAAazI,MACfhT,IAAU;AAAA,IACR,MAAM;AAAA,IACN,OAAOiV,EAAOjC,CAAY,EAAE,CAAC,EAAE;AAAA,IAC/B,KAAKiC,EAAOwG,CAAU,EAAE,CAAC,EAAE;AAAA,EACjC,GACI7f,IAAO;AAAA,IACL,MAAM;AAAA,IACN,OAAOqZ,EAAOjC,CAAY,EAAE,CAAC,EAAE;AAAA,IAC/B,KAAKiC,EAAOwG,CAAU,EAAE,CAAC,EAAE;AAAA,IAC3B,aAAa;AAAA,EACnB,GACIjL,GAAOyE,GAAQjC,GAAcyI,IAAazI,IAAe,GAAG,CAAC,CAAC,SAAShT,GAASkV,CAAO,GAAG,CAAC,SAAStZ,GAAMsZ,CAAO,GAAG,CAAC,QAAQtZ,GAAMsZ,CAAO,GAAG,CAAC,QAAQlV,GAASkV,CAAO,CAAC,CAAC,IAEnKD;AACT;AAOA,SAASgJ,GAAmBtL,GAASC,GAAIkC,GAAK;AAC5C,MAAIhC,IAAO;AACX,SAAOvI;AAYP,WAASA,EAAMe,GAAM;AAEnB,WAAAqH,EAAQ,MAAM,YAAY,GACnBrQ,EAAOgJ,CAAI;AAAA,EACpB;AAYA,WAAShJ,EAAOgJ,GAAM;AACpB,WAAAqH,EAAQ,MAAM,oBAAoB,GAC3BqF,EAAa1M,CAAI;AAAA,EAC1B;AAYA,WAAS0M,EAAa1M,GAAM;AAC1B,WAAIA,MAAS,MAAMwH,MAAS,KAC1BH,EAAQ,QAAQrH,CAAI,GACb0M,KAIL1M,MAAS,QAAQ4G,GAA0B5G,CAAI,KACjDqH,EAAQ,KAAK,oBAAoB,GAC1BuG,EAAQ5N,CAAI,KAEdwJ,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAAS4N,EAAQ5N,GAAM;AACrB,WAAIA,MAAS,MACXqH,EAAQ,MAAM,oBAAoB,GAC3BuL,EAAgB5S,CAAI,KAEzBA,MAAS,QAAQ2G,EAAmB3G,CAAI,KAC1CqH,EAAQ,KAAK,YAAY,GAIlBC,EAAGtH,CAAI,KAEZ6G,EAAc7G,CAAI,IACboH,EAAaC,GAASuG,GAAS,YAAY,EAAE5N,CAAI,KAK1DqH,EAAQ,MAAM,gBAAgB,GACvB7O,EAAKwH,CAAI;AAAA,EAClB;AAcA,WAAS4S,EAAgB5S,GAAM;AAC7B,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACb4S,MAETvL,EAAQ,KAAK,oBAAoB,GAC1BuG,EAAQ5N,CAAI;AAAA,EACrB;AAYA,WAASxH,EAAKwH,GAAM;AAClB,WAAIA,MAAS,QAAQA,MAAS,MAAM4G,GAA0B5G,CAAI,KAChEqH,EAAQ,KAAK,gBAAgB,GACtBuG,EAAQ5N,CAAI,MAErBqH,EAAQ,QAAQrH,CAAI,GACbxH;AAAA,EACT;AACF;ACnLO,MAAMqa,KAAiB;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAcaC,KAAe,CAAC,OAAO,UAAU,SAAS,UAAU,GC5EpDC,KAAW;AAAA,EACtB,UAAU;AAAA,EACV,MAAM;AAAA,EACN,WAAWC;AAAA,EACX,UAAUC;AACZ,GAGMC,KAAkB;AAAA,EACtB,SAAS;AAAA,EACT,UAAUC;AACZ,GACMC,KAA2B;AAAA,EAC/B,SAAS;AAAA,EACT,UAAUC;AACZ;AAGA,SAASL,GAAkBrJ,GAAQ;AACjC,MAAItX,IAAQsX,EAAO;AACnB,SAAOtX,OACD,EAAAsX,EAAOtX,CAAK,EAAE,CAAC,MAAM,WAAWsX,EAAOtX,CAAK,EAAE,CAAC,EAAE,SAAS;AAA9D;AAIF,SAAIA,IAAQ,KAAKsX,EAAOtX,IAAQ,CAAC,EAAE,CAAC,EAAE,SAAS,iBAE7CsX,EAAOtX,CAAK,EAAE,CAAC,EAAE,QAAQsX,EAAOtX,IAAQ,CAAC,EAAE,CAAC,EAAE,OAE9CsX,EAAOtX,IAAQ,CAAC,EAAE,CAAC,EAAE,QAAQsX,EAAOtX,IAAQ,CAAC,EAAE,CAAC,EAAE,OAElDsX,EAAO,OAAOtX,IAAQ,GAAG,CAAC,IAErBsX;AACT;AAOA,SAASsJ,GAAiB5L,GAASC,GAAIkC,GAAK;AAC1C,QAAMnH,IAAO;AAEb,MAAI5M,GAEA6d,GAEAlhB,GAEAC,GAEAkhB;AACJ,SAAOtU;AAYP,WAASA,EAAMe,GAAM;AAEnB,WAAOhJ,EAAOgJ,CAAI;AAAA,EACpB;AAYA,WAAShJ,EAAOgJ,GAAM;AACpB,WAAAqH,EAAQ,MAAM,UAAU,GACxBA,EAAQ,MAAM,cAAc,GAC5BA,EAAQ,QAAQrH,CAAI,GACbgK;AAAA,EACT;AAgBA,WAASA,EAAKhK,GAAM;AAClB,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACbwT,KAELxT,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACpBsT,IAAa,IACNG,KAELzT,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACpBvK,IAAS,GAMF4M,EAAK,YAAYiF,IAAKoM,KAI3BvN,GAAWnG,CAAI,KAEjBqH,EAAQ,QAAQrH,CAAI,GACpB5N,IAAS,OAAO,aAAa4N,CAAI,GAC1B2T,KAEFnK,EAAIxJ,CAAI;AAAA,EACjB;AAgBA,WAASwT,EAAgBxT,GAAM;AAC7B,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACpBvK,IAAS,GACFme,KAEL5T,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACpBvK,IAAS,GACTpD,IAAQ,GACDwhB,KAIL1N,GAAWnG,CAAI,KACjBqH,EAAQ,QAAQrH,CAAI,GACpBvK,IAAS,GAGF4M,EAAK,YAAYiF,IAAKoM,KAExBlK,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAAS4T,EAAkB5T,GAAM;AAC/B,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GAGbqC,EAAK,YAAYiF,IAAKoM,KAExBlK,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAAS6T,EAAgB7T,GAAM;AAC7B,UAAM5U,KAAQ;AACd,WAAI4U,MAAS5U,GAAM,WAAWiH,GAAO,KACnCgV,EAAQ,QAAQrH,CAAI,GAChB3N,MAAUjH,GAAM,SAGXiX,EAAK,YAAYiF,IAAKwM,IAExBD,KAEFrK,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAASyT,EAAczT,GAAM;AAC3B,WAAImG,GAAWnG,CAAI,KAEjBqH,EAAQ,QAAQrH,CAAI,GACpB5N,IAAS,OAAO,aAAa4N,CAAI,GAC1B2T,KAEFnK,EAAIxJ,CAAI;AAAA,EACjB;AAcA,WAAS2T,EAAQ3T,GAAM;AACrB,QAAIA,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAM4G,GAA0B5G,CAAI,GAAG;AAClF,YAAM+T,KAAQ/T,MAAS,IACjBnD,KAAOzK,EAAO,YAAW;AAC/B,aAAI,CAAC2hB,MAAS,CAACT,KAAcR,GAAa,SAASjW,EAAI,KACrDpH,IAAS,GAGF4M,EAAK,YAAYiF,EAAGtH,CAAI,IAAI8T,EAAa9T,CAAI,KAElD6S,GAAe,SAASzgB,EAAO,YAAW,CAAE,KAC9CqD,IAAS,GACLse,MACF1M,EAAQ,QAAQrH,CAAI,GACbgU,KAKF3R,EAAK,YAAYiF,EAAGtH,CAAI,IAAI8T,EAAa9T,CAAI,MAEtDvK,IAAS,GAEF4M,EAAK,aAAa,CAACA,EAAK,OAAO,KAAKA,EAAK,IAAG,EAAG,IAAI,IAAImH,EAAIxJ,CAAI,IAAIsT,IAAaW,EAAwBjU,CAAI,IAAIkU,EAA4BlU,CAAI;AAAA,IACzJ;AAGA,WAAIA,MAAS,MAAMqG,GAAkBrG,CAAI,KACvCqH,EAAQ,QAAQrH,CAAI,GACpB5N,KAAU,OAAO,aAAa4N,CAAI,GAC3B2T,KAEFnK,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAASgU,EAAiBhU,GAAM;AAC9B,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GAGbqC,EAAK,YAAYiF,IAAKwM,KAExBtK,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAASiU,EAAwBjU,GAAM;AACrC,WAAI6G,EAAc7G,CAAI,KACpBqH,EAAQ,QAAQrH,CAAI,GACbiU,KAEFE,EAAYnU,CAAI;AAAA,EACzB;AAyBA,WAASkU,EAA4BlU,GAAM;AACzC,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACbmU,KAILnU,MAAS,MAAMA,MAAS,MAAMmG,GAAWnG,CAAI,KAC/CqH,EAAQ,QAAQrH,CAAI,GACboU,KAELvN,EAAc7G,CAAI,KACpBqH,EAAQ,QAAQrH,CAAI,GACbkU,KAEFC,EAAYnU,CAAI;AAAA,EACzB;AAgBA,WAASoU,EAAsBpU,GAAM;AAEnC,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMqG,GAAkBrG,CAAI,KACpFqH,EAAQ,QAAQrH,CAAI,GACboU,KAEFC,EAA2BrU,CAAI;AAAA,EACxC;AAeA,WAASqU,EAA2BrU,GAAM;AACxC,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACbsU,KAELzN,EAAc7G,CAAI,KACpBqH,EAAQ,QAAQrH,CAAI,GACbqU,KAEFH,EAA4BlU,CAAI;AAAA,EACzC;AAeA,WAASsU,EAA6BtU,GAAM;AAC1C,WAAIA,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,KAClEwJ,EAAIxJ,CAAI,IAEbA,MAAS,MAAMA,MAAS,MAC1BqH,EAAQ,QAAQrH,CAAI,GACpBuT,IAAUvT,GACHuU,KAEL1N,EAAc7G,CAAI,KACpBqH,EAAQ,QAAQrH,CAAI,GACbsU,KAEFE,EAA+BxU,CAAI;AAAA,EAC5C;AAcA,WAASuU,EAA6BvU,GAAM;AAC1C,WAAIA,MAASuT,KACXlM,EAAQ,QAAQrH,CAAI,GACpBuT,IAAU,MACHkB,KAELzU,MAAS,QAAQ2G,EAAmB3G,CAAI,IACnCwJ,EAAIxJ,CAAI,KAEjBqH,EAAQ,QAAQrH,CAAI,GACbuU;AAAA,EACT;AAYA,WAASC,EAA+BxU,GAAM;AAC5C,WAAIA,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAM4G,GAA0B5G,CAAI,IACnJqU,EAA2BrU,CAAI,KAExCqH,EAAQ,QAAQrH,CAAI,GACbwU;AAAA,EACT;AAaA,WAASC,EAAkCzU,GAAM;AAC/C,WAAIA,MAAS,MAAMA,MAAS,MAAM6G,EAAc7G,CAAI,IAC3CkU,EAA4BlU,CAAI,IAElCwJ,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAASmU,EAAYnU,GAAM;AACzB,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACb0U,KAEFlL,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAAS0U,EAAc1U,GAAM;AAC3B,WAAIA,MAAS,QAAQ2G,EAAmB3G,CAAI,IAGnC8T,EAAa9T,CAAI,IAEtB6G,EAAc7G,CAAI,KACpBqH,EAAQ,QAAQrH,CAAI,GACb0U,KAEFlL,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAAS8T,EAAa9T,GAAM;AAC1B,WAAIA,MAAS,MAAMvK,MAAW,KAC5B4R,EAAQ,QAAQrH,CAAI,GACb2U,MAEL3U,MAAS,MAAMvK,MAAW,KAC5B4R,EAAQ,QAAQrH,CAAI,GACb4U,MAEL5U,MAAS,MAAMvK,MAAW,KAC5B4R,EAAQ,QAAQrH,CAAI,GACb6U,MAEL7U,MAAS,MAAMvK,MAAW,KAC5B4R,EAAQ,QAAQrH,CAAI,GACb0T,KAEL1T,MAAS,MAAMvK,MAAW,KAC5B4R,EAAQ,QAAQrH,CAAI,GACb8U,MAELnO,EAAmB3G,CAAI,MAAMvK,MAAW,KAAKA,MAAW,MAC1D4R,EAAQ,KAAK,cAAc,GACpBA,EAAQ,MAAM6L,IAAiB6B,IAAmBC,EAAiB,EAAEhV,CAAI,KAE9EA,MAAS,QAAQ2G,EAAmB3G,CAAI,KAC1CqH,EAAQ,KAAK,cAAc,GACpB2N,GAAkBhV,CAAI,MAE/BqH,EAAQ,QAAQrH,CAAI,GACb8T;AAAA,EACT;AAaA,WAASkB,GAAkBhV,GAAM;AAC/B,WAAOqH,EAAQ,MAAM+L,IAA0B6B,IAA0BF,EAAiB,EAAE/U,CAAI;AAAA,EAClG;AAaA,WAASiV,GAAyBjV,GAAM;AACtC,WAAAqH,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,YAAY,GAClB6N;AAAA,EACT;AAaA,WAASA,GAAmBlV,GAAM;AAChC,WAAIA,MAAS,QAAQ2G,EAAmB3G,CAAI,IACnCgV,GAAkBhV,CAAI,KAE/BqH,EAAQ,MAAM,cAAc,GACrByM,EAAa9T,CAAI;AAAA,EAC1B;AAYA,WAAS2U,GAA0B3U,GAAM;AACvC,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACb0T,KAEFI,EAAa9T,CAAI;AAAA,EAC1B;AAYA,WAAS4U,GAAuB5U,GAAM;AACpC,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACpB5N,IAAS,IACF+iB,MAEFrB,EAAa9T,CAAI;AAAA,EAC1B;AAYA,WAASmV,GAAsBnV,GAAM;AACnC,QAAIA,MAAS,IAAI;AACf,YAAMnD,KAAOzK,EAAO,YAAW;AAC/B,aAAI0gB,GAAa,SAASjW,EAAI,KAC5BwK,EAAQ,QAAQrH,CAAI,GACb6U,MAEFf,EAAa9T,CAAI;AAAA,IAC1B;AACA,WAAImG,GAAWnG,CAAI,KAAK5N,EAAO,SAAS,KAEtCiV,EAAQ,QAAQrH,CAAI,GACpB5N,KAAU,OAAO,aAAa4N,CAAI,GAC3BmV,MAEFrB,EAAa9T,CAAI;AAAA,EAC1B;AAYA,WAAS8U,GAAwB9U,GAAM;AACrC,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACb0T,KAEFI,EAAa9T,CAAI;AAAA,EAC1B;AAoBA,WAAS0T,EAA8B1T,GAAM;AAC3C,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACb6U,MAIL7U,MAAS,MAAMvK,MAAW,KAC5B4R,EAAQ,QAAQrH,CAAI,GACb0T,KAEFI,EAAa9T,CAAI;AAAA,EAC1B;AAYA,WAAS6U,GAAkB7U,GAAM;AAC/B,WAAIA,MAAS,QAAQ2G,EAAmB3G,CAAI,KAC1CqH,EAAQ,KAAK,cAAc,GACpB0N,GAAkB/U,CAAI,MAE/BqH,EAAQ,QAAQrH,CAAI,GACb6U;AAAA,EACT;AAYA,WAASE,GAAkB/U,GAAM;AAC/B,WAAAqH,EAAQ,KAAK,UAAU,GAKhBC,EAAGtH,CAAI;AAAA,EAChB;AACF;AAOA,SAASqT,GAAiChM,GAASC,GAAIkC,GAAK;AAC1D,QAAMnH,IAAO;AACb,SAAOpD;AAaP,WAASA,EAAMe,GAAM;AACnB,WAAI2G,EAAmB3G,CAAI,KACzBqH,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,YAAY,GAClBpQ,KAEFuS,EAAIxJ,CAAI;AAAA,EACjB;AAaA,WAAS/I,EAAM+I,GAAM;AACnB,WAAOqC,EAAK,OAAO,KAAKA,EAAK,IAAG,EAAG,IAAI,IAAImH,EAAIxJ,CAAI,IAAIsH,EAAGtH,CAAI;AAAA,EAChE;AACF;AAOA,SAASmT,GAAwB9L,GAASC,GAAIkC,GAAK;AACjD,SAAOvK;AAaP,WAASA,EAAMe,GAAM;AACnB,WAAAqH,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,YAAY,GAClBA,EAAQ,QAAQ8D,IAAW7D,GAAIkC,CAAG;AAAA,EAC3C;AACF;AC91BO,MAAM4L,KAAW;AAAA,EACtB,MAAM;AAAA,EACN,UAAUC;AACZ;AAOA,SAASA,GAAiBhO,GAASC,GAAIkC,GAAK;AAC1C,QAAMnH,IAAO;AAEb,MAAI5M,GAEApD,GAEAijB;AACJ,SAAOrW;AAYP,WAASA,EAAMe,GAAM;AACnB,WAAAqH,EAAQ,MAAM,UAAU,GACxBA,EAAQ,MAAM,cAAc,GAC5BA,EAAQ,QAAQrH,CAAI,GACbgK;AAAA,EACT;AAgBA,WAASA,EAAKhK,GAAM;AAClB,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACbwT,KAELxT,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACbyT,KAELzT,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACbuV,KAILpP,GAAWnG,CAAI,KACjBqH,EAAQ,QAAQrH,CAAI,GACbwV,KAEFhM,EAAIxJ,CAAI;AAAA,EACjB;AAgBA,WAASwT,EAAgBxT,GAAM;AAC7B,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACb4T,KAEL5T,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACpB3N,IAAQ,GACDwhB,KAEL1N,GAAWnG,CAAI,KACjBqH,EAAQ,QAAQrH,CAAI,GACbyV,KAEFjM,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAAS4T,EAAkB5T,GAAM;AAC/B,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACb0V,KAEFlM,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAAS2V,EAAQ3V,GAAM;AACrB,WAAIA,MAAS,OACJwJ,EAAIxJ,CAAI,IAEbA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACb4V,KAELjP,EAAmB3G,CAAI,KACzBsV,IAAcK,GACPE,GAAiB7V,CAAI,MAE9BqH,EAAQ,QAAQrH,CAAI,GACb2V;AAAA,EACT;AAYA,WAASC,EAAa5V,GAAM;AAC1B,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACb0V,KAEFC,EAAQ3V,CAAI;AAAA,EACrB;AAYA,WAAS0V,EAAW1V,GAAM;AACxB,WAAOA,MAAS,KAAKR,GAAIQ,CAAI,IAAIA,MAAS,KAAK4V,EAAa5V,CAAI,IAAI2V,EAAQ3V,CAAI;AAAA,EAClF;AAYA,WAAS6T,EAAgB7T,GAAM;AAC7B,UAAM5U,KAAQ;AACd,WAAI4U,MAAS5U,GAAM,WAAWiH,GAAO,KACnCgV,EAAQ,QAAQrH,CAAI,GACb3N,MAAUjH,GAAM,SAAS0qB,IAAQjC,KAEnCrK,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAAS8V,EAAM9V,GAAM;AACnB,WAAIA,MAAS,OACJwJ,EAAIxJ,CAAI,IAEbA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACb+V,KAELpP,EAAmB3G,CAAI,KACzBsV,IAAcQ,GACPD,GAAiB7V,CAAI,MAE9BqH,EAAQ,QAAQrH,CAAI,GACb8V;AAAA,EACT;AAYA,WAASC,EAAW/V,GAAM;AACxB,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACbgW,KAEFF,EAAM9V,CAAI;AAAA,EACnB;AAYA,WAASgW,EAAShW,GAAM;AACtB,WAAIA,MAAS,KACJR,GAAIQ,CAAI,IAEbA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACbgW,KAEFF,EAAM9V,CAAI;AAAA,EACnB;AAYA,WAASyV,EAAYzV,GAAM;AACzB,WAAIA,MAAS,QAAQA,MAAS,KACrBR,GAAIQ,CAAI,IAEb2G,EAAmB3G,CAAI,KACzBsV,IAAcG,GACPI,GAAiB7V,CAAI,MAE9BqH,EAAQ,QAAQrH,CAAI,GACbyV;AAAA,EACT;AAYA,WAASF,EAAYvV,GAAM;AACzB,WAAIA,MAAS,OACJwJ,EAAIxJ,CAAI,IAEbA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACbiW,KAELtP,EAAmB3G,CAAI,KACzBsV,IAAcC,GACPM,GAAiB7V,CAAI,MAE9BqH,EAAQ,QAAQrH,CAAI,GACbuV;AAAA,EACT;AAYA,WAASU,EAAiBjW,GAAM;AAC9B,WAAOA,MAAS,KAAKR,GAAIQ,CAAI,IAAIuV,EAAYvV,CAAI;AAAA,EACnD;AAYA,WAASyT,EAAczT,GAAM;AAE3B,WAAImG,GAAWnG,CAAI,KACjBqH,EAAQ,QAAQrH,CAAI,GACbkW,KAEF1M,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAASkW,EAASlW,GAAM;AAEtB,WAAIA,MAAS,MAAMqG,GAAkBrG,CAAI,KACvCqH,EAAQ,QAAQrH,CAAI,GACbkW,KAEFC,EAAgBnW,CAAI;AAAA,EAC7B;AAYA,WAASmW,EAAgBnW,GAAM;AAC7B,WAAI2G,EAAmB3G,CAAI,KACzBsV,IAAca,GACPN,GAAiB7V,CAAI,KAE1B6G,EAAc7G,CAAI,KACpBqH,EAAQ,QAAQrH,CAAI,GACbmW,KAEF3W,GAAIQ,CAAI;AAAA,EACjB;AAYA,WAASwV,EAAQxV,GAAM;AAErB,WAAIA,MAAS,MAAMqG,GAAkBrG,CAAI,KACvCqH,EAAQ,QAAQrH,CAAI,GACbwV,KAELxV,MAAS,MAAMA,MAAS,MAAM4G,GAA0B5G,CAAI,IACvDoW,EAAepW,CAAI,IAErBwJ,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAASoW,EAAepW,GAAM;AAC5B,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACbR,MAILQ,MAAS,MAAMA,MAAS,MAAMmG,GAAWnG,CAAI,KAC/CqH,EAAQ,QAAQrH,CAAI,GACbqW,KAEL1P,EAAmB3G,CAAI,KACzBsV,IAAcc,GACPP,GAAiB7V,CAAI,KAE1B6G,EAAc7G,CAAI,KACpBqH,EAAQ,QAAQrH,CAAI,GACboW,KAEF5W,GAAIQ,CAAI;AAAA,EACjB;AAYA,WAASqW,EAAqBrW,GAAM;AAElC,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMqG,GAAkBrG,CAAI,KACpFqH,EAAQ,QAAQrH,CAAI,GACbqW,KAEFC,EAA0BtW,CAAI;AAAA,EACvC;AAaA,WAASsW,EAA0BtW,GAAM;AACvC,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACbuW,KAEL5P,EAAmB3G,CAAI,KACzBsV,IAAcgB,GACPT,GAAiB7V,CAAI,KAE1B6G,EAAc7G,CAAI,KACpBqH,EAAQ,QAAQrH,CAAI,GACbsW,KAEFF,EAAepW,CAAI;AAAA,EAC5B;AAaA,WAASuW,EAA4BvW,GAAM;AACzC,WAAIA,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,KAClEwJ,EAAIxJ,CAAI,IAEbA,MAAS,MAAMA,MAAS,MAC1BqH,EAAQ,QAAQrH,CAAI,GACpBvK,IAASuK,GACFwW,MAEL7P,EAAmB3G,CAAI,KACzBsV,IAAciB,GACPV,GAAiB7V,CAAI,KAE1B6G,EAAc7G,CAAI,KACpBqH,EAAQ,QAAQrH,CAAI,GACbuW,MAETlP,EAAQ,QAAQrH,CAAI,GACbyW;AAAA,EACT;AAYA,WAASD,GAA4BxW,GAAM;AACzC,WAAIA,MAASvK,KACX4R,EAAQ,QAAQrH,CAAI,GACpBvK,IAAS,QACFihB,MAEL1W,MAAS,OACJwJ,EAAIxJ,CAAI,IAEb2G,EAAmB3G,CAAI,KACzBsV,IAAckB,IACPX,GAAiB7V,CAAI,MAE9BqH,EAAQ,QAAQrH,CAAI,GACbwW;AAAA,EACT;AAYA,WAASC,GAA8BzW,GAAM;AAC3C,WAAIA,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,KACjFwJ,EAAIxJ,CAAI,IAEbA,MAAS,MAAMA,MAAS,MAAM4G,GAA0B5G,CAAI,IACvDoW,EAAepW,CAAI,KAE5BqH,EAAQ,QAAQrH,CAAI,GACbyW;AAAA,EACT;AAaA,WAASC,GAAiC1W,GAAM;AAC9C,WAAIA,MAAS,MAAMA,MAAS,MAAM4G,GAA0B5G,CAAI,IACvDoW,EAAepW,CAAI,IAErBwJ,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAASR,GAAIQ,GAAM;AACjB,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,cAAc,GAC3BA,EAAQ,KAAK,UAAU,GAChBC,KAEFkC,EAAIxJ,CAAI;AAAA,EACjB;AAgBA,WAAS6V,GAAiB7V,GAAM;AAC9B,WAAAqH,EAAQ,KAAK,cAAc,GAC3BA,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,YAAY,GAClBsP;AAAA,EACT;AAgBA,WAASA,GAAgB3W,GAAM;AAG7B,WAAO6G,EAAc7G,CAAI,IAAIoH,EAAaC,GAASuP,IAAuB,cAAcvU,EAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,IAAI,SAAY,CAAC,EAAErC,CAAI,IAAI4W,GAAsB5W,CAAI;AAAA,EAC1M;AAgBA,WAAS4W,GAAsB5W,GAAM;AACnC,WAAAqH,EAAQ,MAAM,cAAc,GACrBiO,EAAYtV,CAAI;AAAA,EACzB;AACF;AChpBO,MAAM6W,KAAW;AAAA,EACtB,MAAM;AAAA,EACN,YAAYC;AAAA,EACZ,WAAWC;AAAA,EACX,UAAUC;AACZ,GAGMC,KAAoB;AAAA,EACxB,UAAUC;AACZ,GAEMC,KAAyB;AAAA,EAC7B,UAAUC;AACZ,GAEMC,KAA8B;AAAA,EAClC,UAAUC;AACZ;AAGA,SAASR,GAAmBnN,GAAQ;AAClC,MAAItX,IAAQ;AAEZ,QAAMklB,IAAY,CAAA;AAClB,SAAO,EAAEllB,IAAQsX,EAAO,UAAQ;AAC9B,UAAMxZ,IAAQwZ,EAAOtX,CAAK,EAAE,CAAC;AAE7B,QADAklB,EAAU,KAAK5N,EAAOtX,CAAK,CAAC,GACxBlC,EAAM,SAAS,gBAAgBA,EAAM,SAAS,eAAeA,EAAM,SAAS,YAAY;AAE1F,YAAMka,IAASla,EAAM,SAAS,eAAe,IAAI;AACjD,MAAAA,EAAM,OAAO,QACbkC,KAASgY;AAAA,IACX;AAAA,EACF;AAGA,SAAIV,EAAO,WAAW4N,EAAU,UAC9BrS,GAAOyE,GAAQ,GAAGA,EAAO,QAAQ4N,CAAS,GAErC5N;AACT;AAGA,SAASoN,GAAkBpN,GAAQC,GAAS;AAC1C,MAAIvX,IAAQsX,EAAO,QACfU,IAAS,GAETla,GAEA6Z,GAEAS,GAEA+M;AAGJ,SAAOnlB;AAEL,QADAlC,IAAQwZ,EAAOtX,CAAK,EAAE,CAAC,GACnB2X,GAAM;AAER,UAAI7Z,EAAM,SAAS,UAAUA,EAAM,SAAS,eAAeA,EAAM;AAC/D;AAKF,MAAIwZ,EAAOtX,CAAK,EAAE,CAAC,MAAM,WAAWlC,EAAM,SAAS,gBACjDA,EAAM,YAAY;AAAA,IAEtB,WAAWsa;AACT,UAAId,EAAOtX,CAAK,EAAE,CAAC,MAAM,YAAYlC,EAAM,SAAS,gBAAgBA,EAAM,SAAS,gBAAgB,CAACA,EAAM,cACxG6Z,IAAO3X,GACHlC,EAAM,SAAS,cAAa;AAC9B,QAAAka,IAAS;AACT;AAAA,MACF;AAAA,UAEG,CAAIla,EAAM,SAAS,eACxBsa,IAAQpY;AAGZ,QAAM4X,IAAQ;AAAA,IACZ,MAAMN,EAAOK,CAAI,EAAE,CAAC,EAAE,SAAS,cAAc,SAAS;AAAA,IACtD,OAAO;AAAA,MACL,GAAGL,EAAOK,CAAI,EAAE,CAAC,EAAE;AAAA,IACzB;AAAA,IACI,KAAK;AAAA,MACH,GAAGL,EAAOA,EAAO,SAAS,CAAC,EAAE,CAAC,EAAE;AAAA,IACtC;AAAA,EACA,GACQ8N,IAAQ;AAAA,IACZ,MAAM;AAAA,IACN,OAAO;AAAA,MACL,GAAG9N,EAAOK,CAAI,EAAE,CAAC,EAAE;AAAA,IACzB;AAAA,IACI,KAAK;AAAA,MACH,GAAGL,EAAOc,CAAK,EAAE,CAAC,EAAE;AAAA,IAC1B;AAAA,EACA,GACQna,IAAO;AAAA,IACX,MAAM;AAAA,IACN,OAAO;AAAA,MACL,GAAGqZ,EAAOK,IAAOK,IAAS,CAAC,EAAE,CAAC,EAAE;AAAA,IACtC;AAAA,IACI,KAAK;AAAA,MACH,GAAGV,EAAOc,IAAQ,CAAC,EAAE,CAAC,EAAE;AAAA,IAC9B;AAAA,EACA;AACE,SAAA+M,IAAQ,CAAC,CAAC,SAASvN,GAAOL,CAAO,GAAG,CAAC,SAAS6N,GAAO7N,CAAO,CAAC,GAG7D4N,IAAQjS,GAAKiS,GAAO7N,EAAO,MAAMK,IAAO,GAAGA,IAAOK,IAAS,CAAC,CAAC,GAG7DmN,IAAQjS,GAAKiS,GAAO,CAAC,CAAC,SAASlnB,GAAMsZ,CAAO,CAAC,CAAC,GAK9C4N,IAAQjS,GAAKiS,GAAO9N,GAAWE,EAAQ,OAAO,WAAW,WAAW,MAAMD,EAAO,MAAMK,IAAOK,IAAS,GAAGI,IAAQ,CAAC,GAAGb,CAAO,CAAC,GAG9H4N,IAAQjS,GAAKiS,GAAO,CAAC,CAAC,QAAQlnB,GAAMsZ,CAAO,GAAGD,EAAOc,IAAQ,CAAC,GAAGd,EAAOc,IAAQ,CAAC,GAAG,CAAC,QAAQgN,GAAO7N,CAAO,CAAC,CAAC,GAG7G4N,IAAQjS,GAAKiS,GAAO7N,EAAO,MAAMc,IAAQ,CAAC,CAAC,GAG3C+M,IAAQjS,GAAKiS,GAAO,CAAC,CAAC,QAAQvN,GAAOL,CAAO,CAAC,CAAC,GAC9C1E,GAAOyE,GAAQK,GAAML,EAAO,QAAQ6N,CAAK,GAClC7N;AACT;AAOA,SAASqN,GAAiB3P,GAASC,GAAIkC,GAAK;AAC1C,QAAMnH,IAAO;AACb,MAAIhQ,IAAQgQ,EAAK,OAAO,QAEpBqV,GAEAC;AAGJ,SAAOtlB;AACL,SAAKgQ,EAAK,OAAOhQ,CAAK,EAAE,CAAC,EAAE,SAAS,gBAAgBgQ,EAAK,OAAOhQ,CAAK,EAAE,CAAC,EAAE,SAAS,gBAAgB,CAACgQ,EAAK,OAAOhQ,CAAK,EAAE,CAAC,EAAE,WAAW;AACnI,MAAAqlB,IAAarV,EAAK,OAAOhQ,CAAK,EAAE,CAAC;AACjC;AAAA,IACF;AAEF,SAAO4M;AAiBP,WAASA,EAAMe,GAAM;AAEnB,WAAK0X,IAaDA,EAAW,YACNE,EAAY5X,CAAI,KAEzB2X,IAAUtV,EAAK,OAAO,QAAQ,SAAS6D,GAAoB7D,EAAK,eAAe;AAAA,MAC7E,OAAOqV,EAAW;AAAA,MAClB,KAAKrV,EAAK,IAAG;AAAA,IACnB,CAAK,CAAC,CAAC,GACHgF,EAAQ,MAAM,UAAU,GACxBA,EAAQ,MAAM,aAAa,GAC3BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,aAAa,GAC1BA,EAAQ,KAAK,UAAU,GAChBpQ,KAxBEuS,EAAIxJ,CAAI;AAAA,EAyBnB;AAkBA,WAAS/I,EAAM+I,GAAM;AAKnB,WAAIA,MAAS,KACJqH,EAAQ,QAAQ4P,IAAmBY,GAAYF,IAAUE,IAAaD,CAAW,EAAE5X,CAAI,IAI5FA,MAAS,KACJqH,EAAQ,QAAQ8P,IAAwBU,GAAYF,IAAUG,IAAmBF,CAAW,EAAE5X,CAAI,IAIpG2X,IAAUE,EAAW7X,CAAI,IAAI4X,EAAY5X,CAAI;AAAA,EACtD;AAgBA,WAAS8X,EAAiB9X,GAAM;AAC9B,WAAOqH,EAAQ,QAAQgQ,IAA6BQ,GAAYD,CAAW,EAAE5X,CAAI;AAAA,EACnF;AAkBA,WAAS6X,EAAW7X,GAAM;AAExB,WAAOsH,EAAGtH,CAAI;AAAA,EAChB;AAkBA,WAAS4X,EAAY5X,GAAM;AACzB,WAAA0X,EAAW,YAAY,IAChBlO,EAAIxJ,CAAI;AAAA,EACjB;AACF;AAOA,SAASkX,GAAiB7P,GAASC,GAAIkC,GAAK;AAC1C,SAAOuO;AAYP,WAASA,EAAc/X,GAAM;AAC3B,WAAAqH,EAAQ,MAAM,UAAU,GACxBA,EAAQ,MAAM,gBAAgB,GAC9BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,gBAAgB,GACtB2Q;AAAA,EACT;AAYA,WAASA,EAAehY,GAAM;AAC5B,WAAO4G,GAA0B5G,CAAI,IAAIyR,GAAkBpK,GAAS4Q,CAAY,EAAEjY,CAAI,IAAIiY,EAAajY,CAAI;AAAA,EAC7G;AAYA,WAASiY,EAAajY,GAAM;AAC1B,WAAIA,MAAS,KACJkY,EAAYlY,CAAI,IAElBuQ,GAAmBlJ,GAAS8Q,GAA0BC,GAA4B,uBAAuB,8BAA8B,oCAAoC,0BAA0B,6BAA6B,EAAE,EAAEpY,CAAI;AAAA,EACnP;AAYA,WAASmY,EAAyBnY,GAAM;AACtC,WAAO4G,GAA0B5G,CAAI,IAAIyR,GAAkBpK,GAASgR,CAAe,EAAErY,CAAI,IAAIkY,EAAYlY,CAAI;AAAA,EAC/G;AAYA,WAASoY,EAA2BpY,GAAM;AACxC,WAAOwJ,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAASqY,EAAgBrY,GAAM;AAC7B,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,KAClCsR,GAAajK,GAASiR,GAAoB9O,GAAK,iBAAiB,uBAAuB,qBAAqB,EAAExJ,CAAI,IAEpHkY,EAAYlY,CAAI;AAAA,EACzB;AAYA,WAASsY,EAAmBtY,GAAM;AAChC,WAAO4G,GAA0B5G,CAAI,IAAIyR,GAAkBpK,GAAS6Q,CAAW,EAAElY,CAAI,IAAIkY,EAAYlY,CAAI;AAAA,EAC3G;AAYA,WAASkY,EAAYlY,GAAM;AACzB,WAAIA,MAAS,MACXqH,EAAQ,MAAM,gBAAgB,GAC9BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,gBAAgB,GAC7BA,EAAQ,KAAK,UAAU,GAChBC,KAEFkC,EAAIxJ,CAAI;AAAA,EACjB;AACF;AAOA,SAASoX,GAAsB/P,GAASC,GAAIkC,GAAK;AAC/C,QAAMnH,IAAO;AACb,SAAOkW;AAYP,WAASA,EAAcvY,GAAM;AAC3B,WAAOkR,GAAa,KAAK7O,GAAMgF,GAASmR,GAAoBC,GAAsB,aAAa,mBAAmB,iBAAiB,EAAEzY,CAAI;AAAA,EAC3I;AAYA,WAASwY,EAAmBxY,GAAM;AAChC,WAAOqC,EAAK,OAAO,QAAQ,SAAS6D,GAAoB7D,EAAK,eAAeA,EAAK,OAAOA,EAAK,OAAO,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,CAAC,IAAIiF,EAAGtH,CAAI,IAAIwJ,EAAIxJ,CAAI;AAAA,EAC1J;AAYA,WAASyY,EAAqBzY,GAAM;AAClC,WAAOwJ,EAAIxJ,CAAI;AAAA,EACjB;AACF;AAOA,SAASsX,GAA2BjQ,GAASC,GAAIkC,GAAK;AACpD,SAAOkP;AAcP,WAASA,EAAwB1Y,GAAM;AAGrC,WAAAqH,EAAQ,MAAM,WAAW,GACzBA,EAAQ,MAAM,iBAAiB,GAC/BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,iBAAiB,GACvBsR;AAAA,EACT;AAcA,WAASA,EAAuB3Y,GAAM;AACpC,WAAIA,MAAS,MACXqH,EAAQ,MAAM,iBAAiB,GAC/BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,iBAAiB,GAC9BA,EAAQ,KAAK,WAAW,GACjBC,KAEFkC,EAAIxJ,CAAI;AAAA,EACjB;AACF;ACniBO,MAAM4Y,KAAkB;AAAA,EAC7B,MAAM;AAAA,EACN,YAAY/B,GAAS;AAAA,EACrB,UAAUgC;AACZ;AAOA,SAASA,GAAwBxR,GAASC,GAAIkC,GAAK;AACjD,QAAMnH,IAAO;AACb,SAAOpD;AAYP,WAASA,EAAMe,GAAM;AACnB,WAAAqH,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,MAAM,kBAAkB,GAChCA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,kBAAkB,GACxB2C;AAAA,EACT;AAYA,WAASA,EAAKhK,GAAM;AAClB,WAAIA,MAAS,MACXqH,EAAQ,MAAM,aAAa,GAC3BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,aAAa,GAC1BA,EAAQ,KAAK,YAAY,GAClBpQ,KAEFuS,EAAIxJ,CAAI;AAAA,EACjB;AA6BA,WAAS/I,EAAM+I,GAAM;AAMnB,WAAOA,MAAS,MAAM,4BAA4BqC,EAAK,OAAO,aAAamH,EAAIxJ,CAAI,IAAIsH,EAAGtH,CAAI;AAAA,EAChG;AACF;ACzFO,MAAM8Y,KAAiB;AAAA,EAC5B,MAAM;AAAA,EACN,YAAYjC,GAAS;AAAA,EACrB,UAAUkC;AACZ;AAOA,SAASA,GAAuB1R,GAASC,GAAIkC,GAAK;AAChD,QAAMnH,IAAO;AACb,SAAOpD;AAYP,WAASA,EAAMe,GAAM;AACnB,WAAAqH,EAAQ,MAAM,WAAW,GACzBA,EAAQ,MAAM,aAAa,GAC3BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,aAAa,GAC1BA,EAAQ,KAAK,WAAW,GACjBpQ;AAAA,EACT;AAGA,WAASA,EAAM+I,GAAM;AAKnB,WAAOA,MAAS,MAAM,4BAA4BqC,EAAK,OAAO,aAAamH,EAAIxJ,CAAI,IAAIsH,EAAGtH,CAAI;AAAA,EAChG;AACF;AC1CO,MAAMgZ,KAAa;AAAA,EACxB,MAAM;AAAA,EACN,UAAUC;AACZ;AAOA,SAASA,GAAmB5R,GAASC,GAAI;AACvC,SAAOrI;AAGP,WAASA,EAAMe,GAAM;AACnB,WAAAqH,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,YAAY,GAClBD,EAAaC,GAASC,GAAI,YAAY;AAAA,EAC/C;AACF;ACnBO,MAAM4R,KAAgB;AAAA,EAC3B,MAAM;AAAA,EACN,UAAUC;AACZ;AAOA,SAASA,GAAsB9R,GAASC,GAAIkC,GAAK;AAC/C,MAAIhC,IAAO,GAEP/R;AACJ,SAAOwJ;AAYP,WAASA,EAAMe,GAAM;AACnB,WAAAqH,EAAQ,MAAM,eAAe,GAEtBrQ,EAAOgJ,CAAI;AAAA,EACpB;AAYA,WAAShJ,EAAOgJ,GAAM;AACpB,WAAAvK,IAASuK,GACF4N,EAAQ5N,CAAI;AAAA,EACrB;AAYA,WAAS4N,EAAQ5N,GAAM;AACrB,WAAIA,MAASvK,KACX4R,EAAQ,MAAM,uBAAuB,GAC9B+R,EAASpZ,CAAI,KAElBwH,KAAQ,MAAMxH,MAAS,QAAQ2G,EAAmB3G,CAAI,MACxDqH,EAAQ,KAAK,eAAe,GACrBC,EAAGtH,CAAI,KAETwJ,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAASoZ,EAASpZ,GAAM;AACtB,WAAIA,MAASvK,KACX4R,EAAQ,QAAQrH,CAAI,GACpBwH,KACO4R,MAET/R,EAAQ,KAAK,uBAAuB,GAC7BR,EAAc7G,CAAI,IAAIoH,EAAaC,GAASuG,GAAS,YAAY,EAAE5N,CAAI,IAAI4N,EAAQ5N,CAAI;AAAA,EAChG;AACF;ACpFO,MAAMmF,KAAO;AAAA,EAClB,cAAc;AAAA,IACZ,UAAUkU;AAAA,EACd;AAAA,EACE,MAAMC;AAAA,EACN,MAAM;AAAA,EACN,UAAUC;AACZ,GAGMC,KAAoC;AAAA,EACxC,SAAS;AAAA,EACT,UAAUC;AACZ,GAGMC,KAAkB;AAAA,EACtB,SAAS;AAAA,EACT,UAAUC;AACZ;AAUA,SAASJ,GAAkBlS,GAASC,GAAIkC,GAAK;AAC3C,QAAMnH,IAAO,MACPoK,IAAOpK,EAAK,OAAOA,EAAK,OAAO,SAAS,CAAC;AAC/C,MAAIuX,IAAcnN,KAAQA,EAAK,CAAC,EAAE,SAAS,eAAeA,EAAK,CAAC,EAAE,eAAeA,EAAK,CAAC,GAAG,EAAI,EAAE,SAAS,GACrGjF,IAAO;AACX,SAAOvI;AAGP,WAASA,EAAMe,GAAM;AACnB,UAAMzP,IAAO8R,EAAK,eAAe,SAASrC,MAAS,MAAMA,MAAS,MAAMA,MAAS,KAAK,kBAAkB;AACxG,QAAIzP,MAAS,kBAAkB,CAAC8R,EAAK,eAAe,UAAUrC,MAASqC,EAAK,eAAe,SAASmE,GAAWxG,CAAI,GAAG;AAOpH,UANKqC,EAAK,eAAe,SACvBA,EAAK,eAAe,OAAO9R,GAC3B8W,EAAQ,MAAM9W,GAAM;AAAA,QAClB,YAAY;AAAA,MACtB,CAAS,IAECA,MAAS;AACX,eAAA8W,EAAQ,MAAM,gBAAgB,GACvBrH,MAAS,MAAMA,MAAS,KAAKqH,EAAQ,MAAM6R,IAAe1P,GAAKqQ,CAAQ,EAAE7Z,CAAI,IAAI6Z,EAAS7Z,CAAI;AAEvG,UAAI,CAACqC,EAAK,aAAarC,MAAS;AAC9B,eAAAqH,EAAQ,MAAM,gBAAgB,GAC9BA,EAAQ,MAAM,eAAe,GACtBmD,EAAOxK,CAAI;AAAA,IAEtB;AACA,WAAOwJ,EAAIxJ,CAAI;AAAA,EACjB;AAGA,WAASwK,EAAOxK,GAAM;AACpB,WAAIwG,GAAWxG,CAAI,KAAK,EAAEwH,IAAO,MAC/BH,EAAQ,QAAQrH,CAAI,GACbwK,MAEJ,CAACnI,EAAK,aAAamF,IAAO,OAAOnF,EAAK,eAAe,SAASrC,MAASqC,EAAK,eAAe,SAASrC,MAAS,MAAMA,MAAS,OAC/HqH,EAAQ,KAAK,eAAe,GACrBwS,EAAS7Z,CAAI,KAEfwJ,EAAIxJ,CAAI;AAAA,EACjB;AAKA,WAAS6Z,EAAS7Z,GAAM;AACtB,WAAAqH,EAAQ,MAAM,gBAAgB,GAC9BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,gBAAgB,GAC7BhF,EAAK,eAAe,SAASA,EAAK,eAAe,UAAUrC,GACpDqH,EAAQ;AAAA,MAAM8D;AAAA;AAAA,MAErB9I,EAAK,YAAYmH,IAAMsQ;AAAA,MAASzS,EAAQ,QAAQmS,IAAmCO,GAAaC,CAAW;AAAA,IAAC;AAAA,EAC9G;AAGA,WAASF,EAAQ9Z,GAAM;AACrB,WAAAqC,EAAK,eAAe,mBAAmB,IACvCuX,KACOG,EAAY/Z,CAAI;AAAA,EACzB;AAGA,WAASga,EAAYha,GAAM;AACzB,WAAI6G,EAAc7G,CAAI,KACpBqH,EAAQ,MAAM,0BAA0B,GACxCA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,0BAA0B,GAChC0S,KAEFvQ,EAAIxJ,CAAI;AAAA,EACjB;AAGA,WAAS+Z,EAAY/Z,GAAM;AACzB,WAAAqC,EAAK,eAAe,OAAOuX,IAAcvX,EAAK,eAAegF,EAAQ,KAAK,gBAAgB,GAAG,EAAI,EAAE,QAC5FC,EAAGtH,CAAI;AAAA,EAChB;AACF;AAOA,SAASqZ,GAAyBhS,GAASC,GAAIkC,GAAK;AAClD,QAAMnH,IAAO;AACb,SAAAA,EAAK,eAAe,aAAa,QAC1BgF,EAAQ,MAAM8D,IAAW2O,GAASG,CAAQ;AAGjD,WAASH,EAAQ9Z,GAAM;AACrB,WAAAqC,EAAK,eAAe,oBAAoBA,EAAK,eAAe,qBAAqBA,EAAK,eAAe,kBAI9F+E,EAAaC,GAASC,GAAI,kBAAkBjF,EAAK,eAAe,OAAO,CAAC,EAAErC,CAAI;AAAA,EACvF;AAGA,WAASia,EAASja,GAAM;AACtB,WAAIqC,EAAK,eAAe,qBAAqB,CAACwE,EAAc7G,CAAI,KAC9DqC,EAAK,eAAe,oBAAoB,QACxCA,EAAK,eAAe,mBAAmB,QAChC6X,EAAiBla,CAAI,MAE9BqC,EAAK,eAAe,oBAAoB,QACxCA,EAAK,eAAe,mBAAmB,QAChCgF,EAAQ,QAAQqS,IAAiBpS,GAAI4S,CAAgB,EAAEla,CAAI;AAAA,EACpE;AAGA,WAASka,EAAiBla,GAAM;AAE9B,WAAAqC,EAAK,eAAe,aAAa,IAEjCA,EAAK,YAAY,QAGV+E,EAAaC,GAASA,EAAQ,QAAQlC,IAAMmC,GAAIkC,CAAG,GAAG,cAAcnH,EAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,IAAI,SAAY,CAAC,EAAErC,CAAI;AAAA,EAC/J;AACF;AAOA,SAAS2Z,GAAetS,GAASC,GAAIkC,GAAK;AACxC,QAAMnH,IAAO;AACb,SAAO+E,EAAaC,GAASsG,GAAa,kBAAkBtL,EAAK,eAAe,OAAO,CAAC;AAGxF,WAASsL,EAAY3N,GAAM;AACzB,UAAMyM,IAAOpK,EAAK,OAAOA,EAAK,OAAO,SAAS,CAAC;AAC/C,WAAOoK,KAAQA,EAAK,CAAC,EAAE,SAAS,oBAAoBA,EAAK,CAAC,EAAE,eAAeA,EAAK,CAAC,GAAG,EAAI,EAAE,WAAWpK,EAAK,eAAe,OAAOiF,EAAGtH,CAAI,IAAIwJ,EAAIxJ,CAAI;AAAA,EACrJ;AACF;AAOA,SAASsZ,GAAgBjS,GAAS;AAChC,EAAAA,EAAQ,KAAK,KAAK,eAAe,IAAI;AACvC;AAOA,SAASoS,GAAiCpS,GAASC,GAAIkC,GAAK;AAC1D,QAAMnH,IAAO;AAIb,SAAO+E,EAAaC,GAASsG,GAAa,4BAA4BtL,EAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,IAAI,SAAY,CAAK;AAGtJ,WAASsL,EAAY3N,GAAM;AACzB,UAAMyM,IAAOpK,EAAK,OAAOA,EAAK,OAAO,SAAS,CAAC;AAC/C,WAAO,CAACwE,EAAc7G,CAAI,KAAKyM,KAAQA,EAAK,CAAC,EAAE,SAAS,6BAA6BnF,EAAGtH,CAAI,IAAIwJ,EAAIxJ,CAAI;AAAA,EAC1G;AACF;ACtMO,MAAMma,KAAkB;AAAA,EAC7B,MAAM;AAAA,EACN,WAAWC;AAAA,EACX,UAAUC;AACZ;AAGA,SAASD,GAAyBzQ,GAAQC,GAAS;AAEjD,MAAIvX,IAAQsX,EAAO,QAEfjV,GAEApE,GAEAohB;AAIJ,SAAOrf;AACL,QAAIsX,EAAOtX,CAAK,EAAE,CAAC,MAAM,SAAS;AAChC,UAAIsX,EAAOtX,CAAK,EAAE,CAAC,EAAE,SAAS,WAAW;AACvC,QAAAqC,IAAUrC;AACV;AAAA,MACF;AACA,MAAIsX,EAAOtX,CAAK,EAAE,CAAC,EAAE,SAAS,gBAC5B/B,IAAO+B;AAAA,IAEX;AAGE,MAAIsX,EAAOtX,CAAK,EAAE,CAAC,EAAE,SAAS,aAE5BsX,EAAO,OAAOtX,GAAO,CAAC,GAEpB,CAACqf,KAAc/H,EAAOtX,CAAK,EAAE,CAAC,EAAE,SAAS,iBAC3Cqf,IAAarf;AAInB,QAAMioB,IAAU;AAAA,IACd,MAAM;AAAA,IACN,OAAO;AAAA,MACL,GAAG3Q,EAAOjV,CAAO,EAAE,CAAC,EAAE;AAAA,IAC5B;AAAA,IACI,KAAK;AAAA,MACH,GAAGiV,EAAOA,EAAO,SAAS,CAAC,EAAE,CAAC,EAAE;AAAA,IACtC;AAAA,EACA;AAGE,SAAAA,EAAOrZ,CAAI,EAAE,CAAC,EAAE,OAAO,qBAInBohB,KACF/H,EAAO,OAAOrZ,GAAM,GAAG,CAAC,SAASgqB,GAAS1Q,CAAO,CAAC,GAClDD,EAAO,OAAO+H,IAAa,GAAG,GAAG,CAAC,QAAQ/H,EAAOjV,CAAO,EAAE,CAAC,GAAGkV,CAAO,CAAC,GACtED,EAAOjV,CAAO,EAAE,CAAC,EAAE,MAAM;AAAA,IACvB,GAAGiV,EAAO+H,CAAU,EAAE,CAAC,EAAE;AAAA,EAC/B,KAEI/H,EAAOjV,CAAO,EAAE,CAAC,IAAI4lB,GAIvB3Q,EAAO,KAAK,CAAC,QAAQ2Q,GAAS1Q,CAAO,CAAC,GAC/BD;AACT;AAOA,SAAS0Q,GAAwBhT,GAASC,GAAIkC,GAAK;AACjD,QAAMnH,IAAO;AAEb,MAAI5M;AACJ,SAAOwJ;AAaP,WAASA,EAAMe,GAAM;AACnB,QAAI3N,IAAQgQ,EAAK,OAAO,QAEpBkY;AAEJ,WAAOloB;AAGL,UAAIgQ,EAAK,OAAOhQ,CAAK,EAAE,CAAC,EAAE,SAAS,gBAAgBgQ,EAAK,OAAOhQ,CAAK,EAAE,CAAC,EAAE,SAAS,gBAAgBgQ,EAAK,OAAOhQ,CAAK,EAAE,CAAC,EAAE,SAAS,WAAW;AAC1I,QAAAkoB,IAAYlY,EAAK,OAAOhQ,CAAK,EAAE,CAAC,EAAE,SAAS;AAC3C;AAAA,MACF;AAKF,WAAI,CAACgQ,EAAK,OAAO,KAAKA,EAAK,MAAM,IAAI,MAAMA,EAAK,aAAakY,MAC3DlT,EAAQ,MAAM,mBAAmB,GACjC5R,IAASuK,GACFhJ,EAAOgJ,CAAI,KAEbwJ,EAAIxJ,CAAI;AAAA,EACjB;AAaA,WAAShJ,EAAOgJ,GAAM;AACpB,WAAAqH,EAAQ,MAAM,2BAA2B,GAClCmD,EAAOxK,CAAI;AAAA,EACpB;AAaA,WAASwK,EAAOxK,GAAM;AACpB,WAAIA,MAASvK,KACX4R,EAAQ,QAAQrH,CAAI,GACbwK,MAETnD,EAAQ,KAAK,2BAA2B,GACjCR,EAAc7G,CAAI,IAAIoH,EAAaC,GAASpQ,GAAO,YAAY,EAAE+I,CAAI,IAAI/I,EAAM+I,CAAI;AAAA,EAC5F;AAaA,WAAS/I,EAAM+I,GAAM;AACnB,WAAIA,MAAS,QAAQ2G,EAAmB3G,CAAI,KAC1CqH,EAAQ,KAAK,mBAAmB,GACzBC,EAAGtH,CAAI,KAETwJ,EAAIxJ,CAAI;AAAA,EACjB;AACF;AC3KO,MAAMwa,KAAO;AAAA,EAClB,UAAUC;AACZ;AAQA,SAASA,GAAepT,GAAS;AAC/B,QAAMhF,IAAO,MACPgM,IAAUhH,EAAQ;AAAA;AAAA,IAExB8D;AAAA,IAAWuP;AAAA;AAAA,IAEXrT,EAAQ,QAAQ,KAAK,OAAO,WAAW,aAAasT,GAAgBvT,EAAaC,GAASA,EAAQ,QAAQ,KAAK,OAAO,WAAW,MAAMsT,GAAgBtT,EAAQ,QAAQ3S,IAASimB,CAAc,CAAC,GAAG,YAAY,CAAC;AAAA,EAAC;AAChN,SAAOtM;AAGP,WAASqM,EAAc1a,GAAM;AAC3B,QAAIA,MAAS,MAAM;AACjB,MAAAqH,EAAQ,QAAQrH,CAAI;AACpB;AAAA,IACF;AACA,WAAAqH,EAAQ,MAAM,iBAAiB,GAC/BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,iBAAiB,GAC9BhF,EAAK,mBAAmB,QACjBgM;AAAA,EACT;AAGA,WAASsM,EAAe3a,GAAM;AAC5B,QAAIA,MAAS,MAAM;AACjB,MAAAqH,EAAQ,QAAQrH,CAAI;AACpB;AAAA,IACF;AACA,WAAAqH,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,YAAY,GACzBhF,EAAK,mBAAmB,QACjBgM;AAAA,EACT;AACF;AC9CO,MAAMuM,KAAW;AAAA,EACtB,YAAYC,GAAc;AAC5B,GACaC,KAASC,GAAkB,QAAQ,GACnCzqB,KAAOyqB,GAAkB,MAAM;AAQ5C,SAASA,GAAkBzZ,GAAO;AAChC,SAAO;AAAA,IACL,YAAYuZ,GAAevZ,MAAU,SAAS0Z,KAAyB,MAAS;AAAA,IAChF,UAAUC;AAAA,EACd;AAOE,WAASA,EAAe5T,GAAS;AAC/B,UAAMhF,IAAO,MACPyD,IAAa,KAAK,OAAO,WAAWxE,CAAK,GACzChR,IAAO+W,EAAQ,QAAQvB,GAAY7G,GAAOic,CAAO;AACvD,WAAOjc;AAGP,aAASA,EAAMe,GAAM;AACnB,aAAO4N,EAAQ5N,CAAI,IAAI1P,EAAK0P,CAAI,IAAIkb,EAAQlb,CAAI;AAAA,IAClD;AAGA,aAASkb,EAAQlb,GAAM;AACrB,UAAIA,MAAS,MAAM;AACjB,QAAAqH,EAAQ,QAAQrH,CAAI;AACpB;AAAA,MACF;AACA,aAAAqH,EAAQ,MAAM,MAAM,GACpBA,EAAQ,QAAQrH,CAAI,GACbxH;AAAA,IACT;AAGA,aAASA,EAAKwH,GAAM;AAClB,aAAI4N,EAAQ5N,CAAI,KACdqH,EAAQ,KAAK,MAAM,GACZ/W,EAAK0P,CAAI,MAIlBqH,EAAQ,QAAQrH,CAAI,GACbxH;AAAA,IACT;AAQA,aAASoV,EAAQ5N,GAAM;AACrB,UAAIA,MAAS;AACX,eAAO;AAET,YAAMmF,IAAOW,EAAW9F,CAAI;AAC5B,UAAI3N,IAAQ;AACZ,UAAI8S;AAGF,eAAO,EAAE9S,IAAQ8S,EAAK,UAAQ;AAC5B,gBAAMoD,IAAOpD,EAAK9S,CAAK;AACvB,cAAI,CAACkW,EAAK,YAAYA,EAAK,SAAS,KAAKlG,GAAMA,EAAK,QAAQ;AAC1D,mBAAO;AAAA,QAEX;AAEF,aAAO;AAAA,IACT;AAAA,EACF;AACF;AAQA,SAASwY,GAAeM,GAAe;AACrC,SAAOC;AAGP,WAASA,EAAezR,GAAQC,GAAS;AACvC,QAAIvX,IAAQ,IAER6b;AAIJ,WAAO,EAAE7b,KAASsX,EAAO;AACvB,MAAIuE,MAAU,SACRvE,EAAOtX,CAAK,KAAKsX,EAAOtX,CAAK,EAAE,CAAC,EAAE,SAAS,WAC7C6b,IAAQ7b,GACRA,QAEO,CAACsX,EAAOtX,CAAK,KAAKsX,EAAOtX,CAAK,EAAE,CAAC,EAAE,SAAS,YAEjDA,MAAU6b,IAAQ,MACpBvE,EAAOuE,CAAK,EAAE,CAAC,EAAE,MAAMvE,EAAOtX,IAAQ,CAAC,EAAE,CAAC,EAAE,KAC5CsX,EAAO,OAAOuE,IAAQ,GAAG7b,IAAQ6b,IAAQ,CAAC,GAC1C7b,IAAQ6b,IAAQ,IAElBA,IAAQ;AAGZ,WAAOiN,IAAgBA,EAAcxR,GAAQC,CAAO,IAAID;AAAA,EAC1D;AACF;AAaA,SAASqR,GAAuBrR,GAAQC,GAAS;AAC/C,MAAIwF,IAAa;AAEjB,SAAO,EAAEA,KAAczF,EAAO;AAC5B,SAAKyF,MAAezF,EAAO,UAAUA,EAAOyF,CAAU,EAAE,CAAC,EAAE,SAAS,iBAAiBzF,EAAOyF,IAAa,CAAC,EAAE,CAAC,EAAE,SAAS,QAAQ;AAC9H,YAAM5W,IAAOmR,EAAOyF,IAAa,CAAC,EAAE,CAAC,GAC/BiM,IAASzR,EAAQ,YAAYpR,CAAI;AACvC,UAAInG,IAAQgpB,EAAO,QACfC,IAAc,IACd9T,IAAO,GAEP+T;AACJ,aAAOlpB,OAAS;AACd,cAAMmpB,IAAQH,EAAOhpB,CAAK;AAC1B,YAAI,OAAOmpB,KAAU,UAAU;AAE7B,eADAF,IAAcE,EAAM,QACbA,EAAM,WAAWF,IAAc,CAAC,MAAM;AAC3C,YAAA9T,KACA8T;AAEF,cAAIA,EAAa;AACjB,UAAAA,IAAc;AAAA,QAChB,WAESE,MAAU;AACjB,UAAAD,IAAO,IACP/T;AAAA,iBACSgU,MAAU,IAEd;AAEL,UAAAnpB;AACA;AAAA,QACF;AAAA,MACF;AAMA,UAHIuX,EAAQ,4BAA4BwF,MAAezF,EAAO,WAC5DnC,IAAO,IAELA,GAAM;AACR,cAAMrX,IAAQ;AAAA,UACZ,MAAMif,MAAezF,EAAO,UAAU4R,KAAQ/T,IAAO,IAAI,eAAe;AAAA,UACxE,OAAO;AAAA,YACL,cAAcnV,IAAQipB,IAAc9iB,EAAK,MAAM,eAAe8iB;AAAA,YAC9D,QAAQ9iB,EAAK,MAAM,SAASnG;AAAA,YAC5B,MAAMmG,EAAK,IAAI;AAAA,YACf,QAAQA,EAAK,IAAI,SAASgP;AAAA,YAC1B,QAAQhP,EAAK,IAAI,SAASgP;AAAA,UACtC;AAAA,UACU,KAAK;AAAA,YACH,GAAGhP,EAAK;AAAA,UACpB;AAAA,QACA;AACQ,QAAAA,EAAK,MAAM;AAAA,UACT,GAAGrI,EAAM;AAAA,QACnB,GACYqI,EAAK,MAAM,WAAWA,EAAK,IAAI,SACjC,OAAO,OAAOA,GAAMrI,CAAK,KAEzBwZ,EAAO,OAAOyF,GAAY,GAAG,CAAC,SAASjf,GAAOyZ,CAAO,GAAG,CAAC,QAAQzZ,GAAOyZ,CAAO,CAAC,GAChFwF,KAAc;AAAA,MAElB;AACA,MAAAA;AAAA,IACF;AAEF,SAAOzF;AACT;AC3MO,MAAM7B,KAAW;AAAA,EACrB,IAAK3C;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKA;AAAAA,EACL,IAAKkG;AACR,GAGaoQ,KAAiB;AAAA,EAC3B,IAAK/J;AACR,GAGagK,KAAc;AAAA,EACzB,CAAC,EAAE,GAAGnO;AAAA,EACN,CAAC,EAAE,GAAGA;AAAA,EACL,IAAKA;AACR,GAGaiN,KAAO;AAAA,EACjB,IAAK/H;AAAA,EACL,IAAKyG;AAAAA,EACL,IAAK,CAACiB,IAAiBjB,EAAa;AAAA,EACpC,IAAKnG;AAAA,EACL,IAAKoH;AAAA,EACL,IAAKjB;AAAAA,EACL,IAAKhN;AAAA,EACL,KAAMA;AACT,GAGa4O,KAAS;AAAA,EACnB,IAAK9V;AAAA,EACL,IAAK2G;AACR,GAGarb,KAAO;AAAA,EAClB,CAAC,EAAE,GAAG0oB;AAAA,EACN,CAAC,EAAE,GAAGA;AAAA,EACN,CAAC,EAAE,GAAGA;AAAA,EACL,IAAKJ;AAAA,EACL,IAAK5T;AAAA,EACL,IAAK6E;AAAA,EACL,IAAK,CAACa,IAAU0K,EAAQ;AAAA,EACxB,IAAK0D;AAAA,EACL,IAAK,CAACvG,IAAiB5G,EAAe;AAAA,EACtC,IAAKkL;AAAA,EACL,IAAKhN;AAAA,EACL,IAAKgE;AACR,GAGa8N,KAAa;AAAA,EACxB,MAAM,CAAC9R,IAAW+R,EAAW;AAC/B,GAGarR,KAAmB;AAAA,EAC9B,MAAM,CAAC,IAAI,EAAE;AACf,GAGasR,KAAU;AAAA,EACrB,MAAM,CAAA;AACR;;;;;;;;;;;;ACxBO,SAASC,GAAgBpZ,GAAQqZ,GAAYC,GAAM;AAExD,MAAIxd,IAAQ;AAAA,IACV,cAAc;AAAA,IACd,QAAQ;AAAA,IACR,MAAMwd,KAAQA,EAAK,QAAQ;AAAA,IAC3B,QAAQA,KAAQA,EAAK,UAAU;AAAA,IAC/B,QAAQA,KAAQA,EAAK,UAAU;AAAA,EACnC;AAEE,QAAMC,IAAc,CAAA,GAEdC,IAAuB,CAAA;AAE7B,MAAIb,IAAS,CAAA,GAETnT,IAAQ,CAAA;AASZ,QAAMb,IAAU;AAAA,IACd,SAAS8U,EAAiBC,CAAqB;AAAA,IAC/C,OAAOD,EAAiBE,CAAiB;AAAA,IACzC,SAAAC;AAAA,IACA,OAAApO;AAAA,IACA,MAAA3C;AAAA,IACA,WAAW4Q,EAAiBE,GAAmB;AAAA,MAC7C,WAAW;AAAA,IACjB,CAAK;AAAA,EACL,GAOQzS,IAAU;AAAA,IACd,MAAM;AAAA,IACN,gBAAgB,CAAA;AAAA,IAChB,YAAA2S;AAAA,IACA,QAAQ,CAAA;AAAA,IACR,KAAAC;AAAA,IACA,QAAA9Z;AAAA,IACA,UAAU;AAAA,IACV,gBAAA+Z;AAAA,IACA,aAAAC;AAAA,IACA,OAAAC;AAAA,EACJ;AAOE,MAAIxiB,IAAQ4hB,EAAW,SAAS,KAAKnS,GAASvC,CAAO;AAQrD,SAAI0U,EAAW,cACbG,EAAqB,KAAKH,CAAU,GAE/BnS;AAGP,WAAS+S,EAAM9M,GAAO;AAKpB,WAJAwL,IAAS9V,GAAK8V,GAAQxL,CAAK,GAC3B+M,EAAI,GAGAvB,EAAOA,EAAO,SAAS,CAAC,MAAM,OACzB,CAAA,KAETwB,EAAUd,GAAY,CAAC,GAGvBnS,EAAQ,SAASF,GAAWwS,GAAsBtS,EAAQ,QAAQA,CAAO,GAClEA,EAAQ;AAAA,EACjB;AAOA,WAAS6S,EAAetsB,GAAO2sB,GAAY;AACzC,WAAOC,GAAgBL,EAAYvsB,CAAK,GAAG2sB,CAAU;AAAA,EACvD;AAGA,WAASJ,EAAYvsB,GAAO;AAC1B,WAAO6sB,GAAY3B,GAAQlrB,CAAK;AAAA,EAClC;AAGA,WAASqsB,IAAM;AAEb,UAAM;AAAA,MACJ,cAAAS;AAAA,MACA,QAAAC;AAAA,MACA,MAAA1uB;AAAA,MACA,QAAA2uB;AAAA,MACA,QAAA9S;AAAA,IACN,IAAQ7L;AACJ,WAAO;AAAA,MACL,cAAAye;AAAA,MACA,QAAAC;AAAA,MACA,MAAA1uB;AAAA,MACA,QAAA2uB;AAAA,MACA,QAAA9S;AAAA,IACN;AAAA,EACE;AAGA,WAASkS,EAAWnxB,GAAO;AACzB,IAAA6wB,EAAY7wB,EAAM,IAAI,IAAIA,EAAM,QAChCgyB,EAAuB;AAAA,EACzB;AAiBA,WAASR,IAAO;AAEd,QAAIS;AACJ,WAAO7e,EAAM,SAAS6c,EAAO,UAAQ;AACnC,YAAMG,IAAQH,EAAO7c,EAAM,MAAM;AAGjC,UAAI,OAAOgd,KAAU;AAKnB,aAJA6B,IAAa7e,EAAM,QACfA,EAAM,eAAe,MACvBA,EAAM,eAAe,IAEhBA,EAAM,WAAW6e,KAAc7e,EAAM,eAAegd,EAAM;AAC/D,UAAA8B,EAAG9B,EAAM,WAAWhd,EAAM,YAAY,CAAC;AAAA;AAGzC,QAAA8e,EAAG9B,CAAK;AAAA,IAEZ;AAAA,EACF;AAUA,WAAS8B,EAAGtd,GAAM;AAGhB,IAAA7F,IAAQA,EAAM6F,CAAI;AAAA,EACpB;AAGA,WAASsc,EAAQtc,GAAM;AACrB,IAAI2G,EAAmB3G,CAAI,KACzBxB,EAAM,QACNA,EAAM,SAAS,GACfA,EAAM,UAAUwB,MAAS,KAAK,IAAI,GAClCod,EAAuB,KACdpd,MAAS,OAClBxB,EAAM,UACNA,EAAM,WAIJA,EAAM,eAAe,IACvBA,EAAM,YAENA,EAAM,gBAGFA,EAAM;AAAA;AAAA;AAAA,IAIV6c,EAAO7c,EAAM,MAAM,EAAE,WACnBA,EAAM,eAAe,IACrBA,EAAM,YAKVoL,EAAQ,WAAW5J;AAAA,EAIrB;AAGA,WAASkO,EAAMzW,GAAM8lB,GAAQ;AAG3B,UAAMptB,KAAQotB,KAAU,CAAA;AACxB,WAAAptB,GAAM,OAAOsH,GACbtH,GAAM,QAAQqsB,EAAG,GACjB5S,EAAQ,OAAO,KAAK,CAAC,SAASzZ,IAAOyZ,CAAO,CAAC,GAC7C1B,EAAM,KAAK/X,EAAK,GACTA;AAAA,EACT;AAGA,WAASob,EAAK9T,GAAM;AAClB,UAAMtH,IAAQ+X,EAAM,IAAG;AACvB,WAAA/X,EAAM,MAAMqsB,EAAG,GACf5S,EAAQ,OAAO,KAAK,CAAC,QAAQzZ,GAAOyZ,CAAO,CAAC,GACrCzZ;AAAA,EACT;AAOA,WAASisB,EAAsBoB,GAAW3Q,GAAM;AAC9C,IAAAgQ,EAAUW,GAAW3Q,EAAK,IAAI;AAAA,EAChC;AAOA,WAASwP,EAAkBoB,GAAG5Q,GAAM;AAClC,IAAAA,EAAK,QAAO;AAAA,EACd;AAUA,WAASsP,EAAiBuB,GAAUH,GAAQ;AAC1C,WAAO1X;AAeP,aAASA,GAAKC,IAAYwP,IAAaqI,IAAY;AAEjD,UAAIC,IAEAC,IAEAC,IAEAjR;AACJ,aAAO,MAAM,QAAQ/G,EAAU;AAAA;AAAA,QAC/BiY,GAAuBjY,EAAU;AAAA,UAAI,cAAcA;AAAA;AAAA,QAEnDiY,GAAuB;AAAA;AAAA,UAA0BjY;AAAA,QAAU,CAAE;AAAA,UAAIkY,GAAsBlY,EAAU;AAUjG,eAASkY,GAAsB/lB,IAAK;AAClC,eAAOgH;AAGP,iBAASA,GAAMe,IAAM;AACnB,gBAAMhT,KAAOgT,OAAS,QAAQ/H,GAAI+H,EAAI,GAChCrE,KAAMqE,OAAS,QAAQ/H,GAAI,MAC3BkN,KAAO;AAAA;AAAA;AAAA,YAGb,GAAI,MAAM,QAAQnY,EAAI,IAAIA,KAAOA,KAAO,CAACA,EAAI,IAAI,CAAA;AAAA,YAAK,GAAI,MAAM,QAAQ2O,EAAG,IAAIA,KAAMA,KAAM,CAACA,EAAG,IAAI,CAAA;AAAA,UAAG;AACtG,iBAAOoiB,GAAuB5Y,EAAI,EAAEnF,EAAI;AAAA,QAC1C;AAAA,MACF;AAUA,eAAS+d,GAAuB5Y,IAAM;AAGpC,eAFAyY,KAAmBzY,IACnB0Y,KAAiB,GACb1Y,GAAK,WAAW,IACXwY,KAEFM,EAAgB9Y,GAAK0Y,EAAc,CAAC;AAAA,MAC7C;AAUA,eAASI,EAAgBT,IAAW;AAClC,eAAOve;AAGP,iBAASA,GAAMe,IAAM;AAanB,iBARA6M,IAAOqR,EAAK,GACZJ,KAAmBN,IACdA,GAAU,YACb5T,EAAQ,mBAAmB4T,KAKzBA,GAAU,QAAQ5T,EAAQ,OAAO,WAAW,QAAQ,KAAK,SAAS4T,GAAU,IAAI,IAC3EhU,GAAQ,IAEVgU,GAAU,SAAS;AAAA;AAAA;AAAA;AAAA,YAI1BD,IAAS,OAAO,OAAO,OAAO,OAAO3T,CAAO,GAAG2T,CAAM,IAAI3T;AAAA,YAASvC;AAAA,YAASC;AAAA,YAAIkC;AAAA,UAAG,EAAExJ,EAAI;AAAA,QAC1F;AAAA,MACF;AAGA,eAASsH,GAAGtH,IAAM;AAEhB,eAAA0d,EAASI,IAAkBjR,CAAI,GACxByI;AAAA,MACT;AAGA,eAAS9L,GAAIxJ,IAAM;AAGjB,eADA6M,EAAK,QAAO,GACR,EAAEgR,KAAiBD,GAAiB,SAC/BK,EAAgBL,GAAiBC,EAAc,CAAC,IAElDF;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAUA,WAASd,EAAUW,GAAWxB,GAAM;AAClC,IAAIwB,EAAU,cAAc,CAACtB,EAAqB,SAASsB,CAAS,KAClEtB,EAAqB,KAAKsB,CAAS,GAEjCA,EAAU,WACZtY,GAAO0E,EAAQ,QAAQoS,GAAMpS,EAAQ,OAAO,SAASoS,GAAMwB,EAAU,QAAQ5T,EAAQ,OAAO,MAAMoS,CAAI,GAAGpS,CAAO,CAAC,GAE/G4T,EAAU,cACZ5T,EAAQ,SAAS4T,EAAU,UAAU5T,EAAQ,QAAQA,CAAO;AAAA,EAEhE;AAQA,WAASsU,IAAQ;AACf,UAAMC,IAAa3B,EAAG,GAChB4B,IAAgBxU,EAAQ,UACxByU,KAAwBzU,EAAQ,kBAChC0U,KAAmB1U,EAAQ,OAAO,QAClC2U,KAAa,MAAM,KAAKrW,CAAK;AACnC,WAAO;AAAA,MACL,MAAMoW;AAAA,MACN,SAAAE;AAAA,IACN;AAQI,aAASA,KAAU;AACjB,MAAAhgB,IAAQ2f,GACRvU,EAAQ,WAAWwU,GACnBxU,EAAQ,mBAAmByU,IAC3BzU,EAAQ,OAAO,SAAS0U,IACxBpW,IAAQqW,IACRnB,EAAuB;AAAA,IACzB;AAAA,EACF;AASA,WAASA,IAA0B;AACjC,IAAI5e,EAAM,QAAQyd,KAAezd,EAAM,SAAS,MAC9CA,EAAM,SAASyd,EAAYzd,EAAM,IAAI,GACrCA,EAAM,UAAUyd,EAAYzd,EAAM,IAAI,IAAI;AAAA,EAE9C;AACF;AAYA,SAASwe,GAAY3B,GAAQlrB,GAAO;AAClC,QAAMsuB,IAAatuB,EAAM,MAAM,QACzBuuB,IAAmBvuB,EAAM,MAAM,cAC/BwuB,IAAWxuB,EAAM,IAAI,QACrByuB,IAAiBzuB,EAAM,IAAI;AAEjC,MAAI0uB;AACJ,MAAIJ,MAAeE;AAEjB,IAAAE,IAAO,CAACxD,EAAOoD,CAAU,EAAE,MAAMC,GAAkBE,CAAc,CAAC;AAAA,OAC7D;AAEL,QADAC,IAAOxD,EAAO,MAAMoD,GAAYE,CAAQ,GACpCD,IAAmB,IAAI;AACzB,YAAMI,IAAOD,EAAK,CAAC;AACnB,MAAI,OAAOC,KAAS,WAClBD,EAAK,CAAC,IAAIC,EAAK,MAAMJ,CAAgB,IAGrCG,EAAK,MAAK;AAAA,IAEd;AACA,IAAID,IAAiB,KAEnBC,EAAK,KAAKxD,EAAOsD,CAAQ,EAAE,MAAM,GAAGC,CAAc,CAAC;AAAA,EAEvD;AACA,SAAOC;AACT;AAYA,SAAS9B,GAAgB1B,GAAQyB,GAAY;AAC3C,MAAIzqB,IAAQ;AAEZ,QAAMpC,IAAS,CAAA;AAEf,MAAI8uB;AACJ,SAAO,EAAE1sB,IAAQgpB,EAAO,UAAQ;AAC9B,UAAMG,IAAQH,EAAOhpB,CAAK;AAE1B,QAAIjH;AACJ,QAAI,OAAOowB,KAAU;AACnB,MAAApwB,IAAQowB;AAAA,QACH,SAAQA,GAAK;AAAA,MAClB,KAAK,IACH;AACE,QAAApwB,IAAQ;AACR;AAAA,MACF;AAAA,MACF,KAAK,IACH;AACE,QAAAA,IAAQ;AAAA;AACR;AAAA,MACF;AAAA,MACF,KAAK,IACH;AACE,QAAAA,IAAQ;AAAA;AACR;AAAA,MACF;AAAA,MACF,KAAK,IACH;AACE,QAAAA,IAAQ0xB,IAAa,MAAM;AAC3B;AAAA,MACF;AAAA,MACF,KAAK,IACH;AACE,YAAI,CAACA,KAAciC,EAAO;AAC1B,QAAA3zB,IAAQ;AACR;AAAA,MACF;AAAA,MACF;AAGI,QAAAA,IAAQ,OAAO,aAAaowB,CAAK;AAAA,IAE3C;AACI,IAAAuD,IAAQvD,MAAU,IAClBvrB,EAAO,KAAK7E,CAAK;AAAA,EACnB;AACA,SAAO6E,EAAO,KAAK,EAAE;AACvB;AC1kBO,SAAS+uB,GAAMp0B,GAAS;AAM7B,QAAM8X,IAAS;AAAA,IACb;AAAA;AAAA,MAJF+C,GAAkB,CAACwZ,IAAmB,IAFrBr0B,KAAW,CAAA,GAEuB,cAAc,CAAA,CAAG,CAAC;AAAA;AAAA,IAKnE,SAASs0B,EAAOxqB,EAAO;AAAA,IACvB,SAAS,CAAA;AAAA,IACT,UAAUwqB,EAAOpX,EAAQ;AAAA,IACzB,MAAMoX,EAAO1E,EAAI;AAAA,IACjB,MAAM,CAAA;AAAA,IACN,QAAQ0E,EAAOpE,EAAM;AAAA,IACrB,MAAMoE,EAAO5uB,EAAI;AAAA,EACrB;AACE,SAAOoS;AAQP,WAASwc,EAAO7Q,GAAS;AACvB,WAAO8Q;AAEP,aAASA,EAAQnD,GAAM;AACrB,aAAOF,GAAgBpZ,GAAQ2L,GAAS2N,CAAI;AAAA,IAC9C;AAAA,EACF;AACF;AC3CO,SAASoD,GAAYzV,GAAQ;AAClC,SAAO,CAAC+E,GAAY/E,CAAM;AAAG;AAG7B,SAAOA;AACT;ACAA,MAAM0V,KAAS;AAMR,SAASC,KAAa;AAC3B,MAAInC,IAAS,GACT/qB,IAAS,IAET6M,IAAQ,IAERsgB;AACJ,SAAOC;AAIP,WAASA,EAAap0B,GAAOuW,GAAUnC,GAAK;AAE1C,UAAM6b,IAAS,CAAA;AAEf,QAAI/lB,GAEAhG,GAEA+f,GAEAoQ,GAEAzf;AAWJ,SAVA5U,IAAQgH,KAAU,OAAOhH,KAAU,WAAWA,EAAM,SAAQ,IAAK,IAAI,YAAYuW,KAAY,MAAS,EAAE,OAAOvW,CAAK,IACpHikB,IAAgB,GAChBjd,IAAS,IACL6M,MAEE7T,EAAM,WAAW,CAAC,MAAM,SAC1BikB,KAEFpQ,IAAQ,SAEHoQ,IAAgBjkB,EAAM,UAAQ;AAKnC,UAJAi0B,GAAO,YAAYhQ,GACnB/Z,IAAQ+pB,GAAO,KAAKj0B,CAAK,GACzBq0B,IAAcnqB,KAASA,EAAM,UAAU,SAAYA,EAAM,QAAQlK,EAAM,QACvE4U,IAAO5U,EAAM,WAAWq0B,CAAW,GAC/B,CAACnqB,GAAO;AACV,QAAAlD,IAAShH,EAAM,MAAMikB,CAAa;AAClC;AAAA,MACF;AACA,UAAIrP,MAAS,MAAMqP,MAAkBoQ,KAAeF;AAClD,QAAAlE,EAAO,KAAK,EAAE,GACdkE,IAAmB;AAAA;AAUnB,gBARIA,MACFlE,EAAO,KAAK,EAAE,GACdkE,IAAmB,SAEjBlQ,IAAgBoQ,MAClBpE,EAAO,KAAKjwB,EAAM,MAAMikB,GAAeoQ,CAAW,CAAC,GACnDtC,KAAUsC,IAAcpQ,IAElBrP,GAAI;AAAA,UACV,KAAK,GACH;AACE,YAAAqb,EAAO,KAAK,KAAK,GACjB8B;AACA;AAAA,UACF;AAAA,UACF,KAAK,GACH;AAGE,iBAFA7tB,IAAO,KAAK,KAAK6tB,IAAS,CAAC,IAAI,GAC/B9B,EAAO,KAAK,EAAE,GACP8B,MAAW7tB,IAAM,CAAA+rB,EAAO,KAAK,EAAE;AACtC;AAAA,UACF;AAAA,UACF,KAAK,IACH;AACE,YAAAA,EAAO,KAAK,EAAE,GACd8B,IAAS;AACT;AAAA,UACF;AAAA,UACF;AAEI,YAAAoC,IAAmB,IACnBpC,IAAS;AAAA,QAEvB;AAEM,MAAA9N,IAAgBoQ,IAAc;AAAA,IAChC;AACA,WAAIjgB,MACE+f,KAAkBlE,EAAO,KAAK,EAAE,GAChCjpB,KAAQipB,EAAO,KAAKjpB,CAAM,GAC9BipB,EAAO,KAAK,IAAI,IAEXA;AAAA,EACT;AACF;AChHA,MAAMqE,KAA6B;AAc5B,SAASC,GAAav0B,GAAO;AAClC,SAAOA,EAAM,QAAQs0B,IAA4BE,EAAM;AACzD;AAYA,SAASA,GAAOC,GAAIC,GAAIC,GAAI;AAC1B,MAAID;AAEF,WAAOA;AAKT,MADaC,EAAG,WAAW,CAAC,MACf,IAAI;AACf,UAAMjB,IAAOiB,EAAG,WAAW,CAAC,GACtBC,IAAMlB,MAAS,OAAOA,MAAS;AACrC,WAAO9Y,GAAgC+Z,EAAG,MAAMC,IAAM,IAAI,CAAC,GAAGA,IAAM,KAAK,EAAE;AAAA,EAC7E;AACA,SAAOjb,GAA8Bgb,CAAE,KAAKF;AAC9C;ACIA,MAAM7d,KAAM,CAAA,EAAG;AAyBR,SAASie,GAAa70B,GAAOuW,GAAU/W,GAAS;AACrD,SAAI,OAAO+W,KAAa,aACtB/W,IAAU+W,GACVA,IAAW,SAENiC,GAAShZ,CAAO,EAAEw0B,GAAYJ,GAAMp0B,CAAO,EAAE,SAAQ,EAAG,MAAM00B,GAAU,EAAGl0B,GAAOuW,GAAU,EAAI,CAAC,CAAC,CAAC;AAC5G;AAOA,SAASiC,GAAShZ,GAAS;AAEzB,QAAMs1B,IAAS;AAAA,IACb,YAAY,CAAA;AAAA,IACZ,gBAAgB,CAAC,YAAY,YAAY,WAAW,aAAa,QAAQ;AAAA,IACzE,OAAO;AAAA,MACL,UAAUC,EAAOC,EAAI;AAAA,MACrB,kBAAkBC;AAAA,MAClB,eAAeA;AAAA,MACf,YAAYF,EAAO7F,EAAO;AAAA,MAC1B,YAAY6F,EAAO9U,EAAU;AAAA,MAC7B,iBAAiBgV;AAAA,MACjB,oBAAoBA;AAAA,MACpB,YAAYF,EAAOG,EAAQ;AAAA,MAC3B,qBAAqBluB;AAAA,MACrB,qBAAqBA;AAAA,MACrB,cAAc+tB,EAAOG,IAAUluB,CAAM;AAAA,MACrC,UAAU+tB,EAAOtS,IAAUzb,CAAM;AAAA,MACjC,cAAciuB;AAAA,MACd,MAAMA;AAAA,MACN,eAAeA;AAAA,MACf,YAAYF,EAAOzO,EAAU;AAAA,MAC7B,6BAA6Btf;AAAA,MAC7B,uBAAuBA;AAAA,MACvB,uBAAuBA;AAAA,MACvB,UAAU+tB,EAAOI,EAAQ;AAAA,MACzB,iBAAiBJ,EAAOK,EAAS;AAAA,MACjC,mBAAmBL,EAAOK,EAAS;AAAA,MACnC,UAAUL,EAAOM,IAAMruB,CAAM;AAAA,MAC7B,cAAciuB;AAAA,MACd,UAAUF,EAAOM,IAAMruB,CAAM;AAAA,MAC7B,cAAciuB;AAAA,MACd,OAAOF,EAAOO,EAAK;AAAA,MACnB,OAAOtuB;AAAA,MACP,MAAM+tB,EAAOC,EAAI;AAAA,MACjB,UAAUD,EAAOQ,EAAQ;AAAA,MACzB,eAAeC;AAAA,MACf,aAAaT,EAAOhb,IAAM0b,CAAkB;AAAA,MAC5C,eAAeV,EAAOhb,EAAI;AAAA,MAC1B,WAAWgb,EAAO5F,EAAS;AAAA,MAC3B,WAAWuG;AAAA,MACX,iBAAiB1uB;AAAA,MACjB,2BAA2BA;AAAA,MAC3B,qBAAqBA;AAAA,MACrB,eAAe+tB,EAAO7F,EAAO;AAAA,MAC7B,QAAQ6F,EAAOY,EAAM;AAAA,MACrB,eAAeZ,EAAOjH,EAAa;AAAA,IACzC;AAAA,IACI,MAAM;AAAA,MACJ,YAAY8H,EAAM;AAAA,MAClB,oBAAoBC;AAAA,MACpB,UAAUD,EAAM;AAAA,MAChB,eAAeE;AAAA,MACf,kBAAkBC;AAAA,MAClB,YAAYH,EAAM;AAAA,MAClB,sBAAsBI;AAAA,MACtB,qCAAqCC;AAAA,MACrC,iCAAiCA;AAAA,MACjC,yBAAyBC;AAAA,MACzB,oBAAoBC;AAAA,MACpB,YAAYP,EAAOQ,CAAgB;AAAA,MACnC,iBAAiBC;AAAA,MACjB,qBAAqBC;AAAA,MACrB,qBAAqBC;AAAA,MACrB,eAAeP;AAAA,MACf,cAAcJ,EAAOY,CAAkB;AAAA,MACvC,UAAUZ,EAAOa,EAAc;AAAA,MAC/B,cAAcT;AAAA,MACd,MAAMA;AAAA,MACN,YAAYJ,EAAM;AAAA,MAClB,6BAA6Bc;AAAA,MAC7B,uBAAuBC;AAAA,MACvB,uBAAuBC;AAAA,MACvB,UAAUhB,EAAM;AAAA,MAChB,iBAAiBA,EAAOiB,CAAe;AAAA,MACvC,mBAAmBjB,EAAOiB,CAAe;AAAA,MACzC,UAAUjB,EAAOkB,EAAc;AAAA,MAC/B,cAAcd;AAAA,MACd,UAAUJ,EAAOmB,EAAc;AAAA,MAC/B,cAAcf;AAAA,MACd,OAAOJ,EAAOoB,EAAW;AAAA,MACzB,OAAOC;AAAA,MACP,WAAWC;AAAA,MACX,YAAYC;AAAA,MACZ,MAAMvB,EAAOwB,EAAU;AAAA,MACvB,UAAUxB,EAAM;AAAA,MAChB,aAAaA,EAAM;AAAA,MACnB,eAAeA,EAAM;AAAA,MACrB,WAAWA,EAAM;AAAA,MACjB,iBAAiByB;AAAA,MACjB,2BAA2BC;AAAA,MAC3B,qBAAqBC;AAAA,MACrB,UAAUC;AAAA,MACV,eAAe5B,EAAO6B,CAAmB;AAAA,MACzC,2BAA2BC;AAAA,MAC3B,mBAAmBC;AAAA,MACnB,QAAQ/B,EAAM;AAAA,MACd,eAAeA,EAAM;AAAA,IAC3B;AAAA,EACA;AACEgC,EAAAA,GAAU9C,IAASt1B,KAAW,CAAA,GAAI,mBAAmB,CAAA,CAAE;AAGvD,QAAM4N,IAAO,CAAA;AACb,SAAOyqB;AAUP,WAASA,EAAQtZ,GAAQ;AAEvB,QAAI1G,IAAO;AAAA,MACT,MAAM;AAAA,MACN,UAAU,CAAA;AAAA,IAChB;AAEI,UAAM2G,IAAU;AAAA,MACd,OAAO,CAAC3G,CAAI;AAAA,MACZ,YAAY,CAAA;AAAA,MACZ,QAAAid;AAAA,MACA,OAAAhS;AAAA,MACA,MAAA3C;AAAA,MACA,QAAAnZ;AAAA,MACA,QAAA8wB;AAAA,MACA,MAAA1qB;AAAA,IACN,GAEU2qB,IAAY,CAAA;AAClB,QAAI9wB,KAAQ;AACZ,WAAO,EAAEA,KAAQsX,EAAO;AAGtB,UAAIA,EAAOtX,EAAK,EAAE,CAAC,EAAE,SAAS,iBAAiBsX,EAAOtX,EAAK,EAAE,CAAC,EAAE,SAAS;AACvE,YAAIsX,EAAOtX,EAAK,EAAE,CAAC,MAAM;AACvB,UAAA8wB,EAAU,KAAK9wB,EAAK;AAAA,aACf;AACL,gBAAMoa,KAAO0W,EAAU,IAAG;AAC1B,UAAA9wB,KAAQ+wB,EAAYzZ,GAAQ8C,IAAMpa,EAAK;AAAA,QACzC;AAIJ,SADAA,KAAQ,IACD,EAAEA,KAAQsX,EAAO,UAAQ;AAC9B,YAAM0Z,KAAUnD,EAAOvW,EAAOtX,EAAK,EAAE,CAAC,CAAC;AACvC,MAAI2P,GAAI,KAAKqhB,IAAS1Z,EAAOtX,EAAK,EAAE,CAAC,EAAE,IAAI,KACzCgxB,GAAQ1Z,EAAOtX,EAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,OAAO,OAAO;AAAA,QAChD,gBAAgBsX,EAAOtX,EAAK,EAAE,CAAC,EAAE;AAAA,MAC3C,GAAWuX,CAAO,GAAGD,EAAOtX,EAAK,EAAE,CAAC,CAAC;AAAA,IAEjC;AAGA,QAAIuX,EAAQ,WAAW,SAAS,GAAG;AACjC,YAAM6C,KAAO7C,EAAQ,WAAWA,EAAQ,WAAW,SAAS,CAAC;AAE7D,OADgB6C,GAAK,CAAC,KAAK6W,IACnB,KAAK1Z,GAAS,QAAW6C,GAAK,CAAC,CAAC;AAAA,IAC1C;AAkBA,SAfAxJ,EAAK,WAAW;AAAA,MACd,OAAOzE,GAAMmL,EAAO,SAAS,IAAIA,EAAO,CAAC,EAAE,CAAC,EAAE,QAAQ;AAAA,QACpD,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,QAAQ;AAAA,MAChB,CAAO;AAAA,MACD,KAAKnL,GAAMmL,EAAO,SAAS,IAAIA,EAAOA,EAAO,SAAS,CAAC,EAAE,CAAC,EAAE,MAAM;AAAA,QAChE,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,QAAQ;AAAA,MAChB,CAAO;AAAA,IACP,GAGItX,KAAQ,IACD,EAAEA,KAAQ6tB,EAAO,WAAW;AACjC,MAAAjd,IAAOid,EAAO,WAAW7tB,EAAK,EAAE4Q,CAAI,KAAKA;AAE3C,WAAOA;AAAA,EACT;AAQA,WAASmgB,EAAYzZ,GAAQ1K,GAAO9B,GAAQ;AAC1C,QAAI9K,IAAQ4M,IAAQ,GAChBskB,KAAmB,IACnBC,KAAa,IAEb7C,IAEA7R,IAEA2U,IAEA5J;AACJ,WAAO,EAAExnB,KAAS8K,KAAQ;AACxB,YAAM0R,KAAQlF,EAAOtX,CAAK;AAC1B,cAAQwc,GAAM,CAAC,EAAE,MAAI;AAAA,QACnB,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK,cACH;AACE,UAAIA,GAAM,CAAC,MAAM,UACf0U,OAEAA,MAEF1J,KAAW;AACX;AAAA,QACF;AAAA,QACF,KAAK,mBACH;AACE,UAAIhL,GAAM,CAAC,MAAM,YACX8R,MAAY,CAAC9G,MAAY,CAAC0J,MAAoB,CAACE,OACjDA,KAAsBpxB,IAExBwnB,KAAW;AAEb;AAAA,QACF;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAID;AAAA,QAEJ;AAEI,UAAAA,KAAW;AAAA,MAEvB;AACM,UAAI,CAAC0J,MAAoB1U,GAAM,CAAC,MAAM,WAAWA,GAAM,CAAC,EAAE,SAAS,oBAAoB0U,OAAqB,MAAM1U,GAAM,CAAC,MAAM,WAAWA,GAAM,CAAC,EAAE,SAAS,mBAAmBA,GAAM,CAAC,EAAE,SAAS,gBAAgB;AAC/M,YAAI8R,IAAU;AACZ,cAAI+C,KAAYrxB;AAEhB,eADAyc,KAAY,QACL4U,QAAa;AAClB,kBAAMC,KAAYha,EAAO+Z,EAAS;AAClC,gBAAIC,GAAU,CAAC,EAAE,SAAS,gBAAgBA,GAAU,CAAC,EAAE,SAAS,mBAAmB;AACjF,kBAAIA,GAAU,CAAC,MAAM,OAAQ;AAC7B,cAAI7U,OACFnF,EAAOmF,EAAS,EAAE,CAAC,EAAE,OAAO,mBAC5B0U,KAAa,KAEfG,GAAU,CAAC,EAAE,OAAO,cACpB7U,KAAY4U;AAAA,YACd,WAAW,EAAAC,GAAU,CAAC,EAAE,SAAS,gBAAgBA,GAAU,CAAC,EAAE,SAAS,sBAAsBA,GAAU,CAAC,EAAE,SAAS,gCAAgCA,GAAU,CAAC,EAAE,SAAS,sBAAsBA,GAAU,CAAC,EAAE,SAAS,kBAGnN;AAAA,UAEJ;AACA,UAAIF,OAAwB,CAAC3U,MAAa2U,KAAsB3U,QAC9D6R,GAAS,UAAU,KAIrBA,GAAS,MAAM,OAAO,OAAO,CAAA,GAAI7R,KAAYnF,EAAOmF,EAAS,EAAE,CAAC,EAAE,QAAQD,GAAM,CAAC,EAAE,GAAG,GACtFlF,EAAO,OAAOmF,MAAazc,GAAO,GAAG,CAAC,QAAQsuB,IAAU9R,GAAM,CAAC,CAAC,CAAC,GACjExc,KACA8K;AAAA,QACF;AAGA,YAAI0R,GAAM,CAAC,EAAE,SAAS,kBAAkB;AAEtC,gBAAMtG,KAAO;AAAA,YACX,MAAM;AAAA,YACN,SAAS;AAAA,YACT,OAAO,OAAO,OAAO,CAAA,GAAIsG,GAAM,CAAC,EAAE,KAAK;AAAA;AAAA,YAEvC,KAAK;AAAA,UACjB;AACU,UAAA8R,KAAWpY,IACXoB,EAAO,OAAOtX,GAAO,GAAG,CAAC,SAASkW,IAAMsG,GAAM,CAAC,CAAC,CAAC,GACjDxc,KACA8K,KACAsmB,KAAsB,QACtB5J,KAAW;AAAA,QACb;AAAA,MACF;AAAA,IACF;AACA,WAAAlQ,EAAO1K,CAAK,EAAE,CAAC,EAAE,UAAUukB,IACpBrmB;AAAA,EACT;AAYA,WAASgjB,EAAOjB,GAAQ0E,GAAK;AAC3B,WAAO5Z;AAOP,aAASA,EAAK7Z,GAAO;AACnB,MAAA+d,EAAM,KAAK,MAAMgR,EAAO/uB,CAAK,GAAGA,CAAK,GACjCyzB,KAAKA,EAAI,KAAK,MAAMzzB,CAAK;AAAA,IAC/B;AAAA,EACF;AAKA,WAASiC,IAAS;AAChB,SAAK,MAAM,KAAK;AAAA,MACd,MAAM;AAAA,MACN,UAAU,CAAA;AAAA,IAChB,CAAK;AAAA,EACH;AAKA,WAAS8b,EAAMxS,GAAMvL,GAAO0zB,GAAc;AAIxC,IAHe,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC,EAEvB,SACf,KAAKnoB,CAAI,GAClB,KAAK,MAAM,KAAKA,CAAI,GACpB,KAAK,WAAW,KAAK,CAACvL,GAAO0zB,KAAgB,MAAS,CAAC,GACvDnoB,EAAK,WAAW;AAAA,MACd,OAAO8C,GAAMrO,EAAM,KAAK;AAAA;AAAA,MAExB,KAAK;AAAA,IACX;AAAA,EACE;AAUA,WAAS6wB,EAAO4C,GAAK;AACnB,WAAOnZ;AAOP,aAASA,EAAMta,GAAO;AACpB,MAAIyzB,KAAKA,EAAI,KAAK,MAAMzzB,CAAK,GAC7Bob,EAAK,KAAK,MAAMpb,CAAK;AAAA,IACvB;AAAA,EACF;AAKA,WAASob,EAAKpb,GAAO2zB,GAAa;AAChC,UAAMpoB,IAAO,KAAK,MAAM,IAAG,GACrBsO,IAAO,KAAK,WAAW,IAAG;AAChC,QAAKA;AAKE,MAAIA,EAAK,CAAC,EAAE,SAAS7Z,EAAM,SAC5B2zB,IACFA,EAAY,KAAK,MAAM3zB,GAAO6Z,EAAK,CAAC,CAAC,KAErBA,EAAK,CAAC,KAAKsZ,IACnB,KAAK,MAAMnzB,GAAO6Z,EAAK,CAAC,CAAC;AAAA,QATnC,OAAM,IAAI,MAAM,mBAAmB7Z,EAAM,OAAO,QAAQoO,GAAkB;AAAA,MACxE,OAAOpO,EAAM;AAAA,MACb,KAAKA,EAAM;AAAA,IACnB,CAAO,IAAI,kBAAkB;AASzB,IAAAuL,EAAK,SAAS,MAAM8C,GAAMrO,EAAM,GAAG;AAAA,EACrC;AAKA,WAAS+yB,IAAS;AAChB,WAAO7nB,GAAS,KAAK,MAAM,IAAG,CAAE;AAAA,EAClC;AAUA,WAASwlB,IAAqB;AAC5B,SAAK,KAAK,8BAA8B;AAAA,EAC1C;AAMA,WAASD,EAAqBzwB,GAAO;AACnC,QAAI,KAAK,KAAK,6BAA6B;AACzC,YAAM4zB,IAAW,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AACjD,MAAAA,EAAS,QAAQ,OAAO,SAAS,KAAK,eAAe5zB,CAAK,GAAG,EAAE,GAC/D,KAAK,KAAK,8BAA8B;AAAA,IAC1C;AAAA,EACF;AAMA,WAASuxB,IAA4B;AACnC,UAAMlpB,IAAO,KAAK,OAAM,GAClBkD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,OAAOlD;AAAA,EACd;AAMA,WAASmpB,IAA4B;AACnC,UAAMnpB,IAAO,KAAK,OAAM,GAClBkD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,OAAOlD;AAAA,EACd;AAMA,WAASipB,IAAwB;AAE/B,IAAI,KAAK,KAAK,mBACd,KAAK,OAAM,GACX,KAAK,KAAK,iBAAiB;AAAA,EAC7B;AAMA,WAASD,IAAmB;AAC1B,UAAMhpB,IAAO,KAAK,OAAM,GAClBkD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,QAAQlD,EAAK,QAAQ,4BAA4B,EAAE,GACxD,KAAK,KAAK,iBAAiB;AAAA,EAC7B;AAMA,WAASopB,IAAqB;AAC5B,UAAMppB,IAAO,KAAK,OAAM,GAClBkD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,QAAQlD,EAAK,QAAQ,gBAAgB,EAAE;AAAA,EAC9C;AAMA,WAASupB,EAA4B5xB,GAAO;AAC1C,UAAMsnB,IAAQ,KAAK,OAAM,GACnB/b,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,QAAQ+b,GACb/b,EAAK,aAAawK,GAAoB,KAAK,eAAe/V,CAAK,CAAC,EAAE,YAAW;AAAA,EAC/E;AAMA,WAAS6xB,IAA8B;AACrC,UAAMxpB,IAAO,KAAK,OAAM,GAClBkD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,QAAQlD;AAAA,EACf;AAMA,WAASspB,IAAoC;AAC3C,UAAMtpB,IAAO,KAAK,OAAM,GAClBkD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,MAAMlD;AAAA,EACb;AAMA,WAASyoB,EAAyB9wB,GAAO;AACvC,UAAMuL,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,QAAI,CAACA,EAAK,OAAO;AACf,YAAMsoB,IAAQ,KAAK,eAAe7zB,CAAK,EAAE;AACzC,MAAAuL,EAAK,QAAQsoB;AAAA,IACf;AAAA,EACF;AAMA,WAASjB,IAA0B;AACjC,SAAK,KAAK,+BAA+B;AAAA,EAC3C;AAMA,WAASD,EAAgC3yB,GAAO;AAC9C,UAAMuL,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,QAAQ,KAAK,eAAevL,CAAK,EAAE,YAAY,CAAC,MAAM,KAAK,IAAI;AAAA,EACtE;AAMA,WAAS0yB,IAAsB;AAC7B,SAAK,KAAK,+BAA+B;AAAA,EAC3C;AAOA,WAASxC,EAAYlwB,GAAO;AAG1B,UAAM8zB,IAFO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC,EAEvB;AACtB,QAAIxX,IAAOwX,EAASA,EAAS,SAAS,CAAC;AACvC,KAAI,CAACxX,KAAQA,EAAK,SAAS,YAEzBA,IAAOnc,GAAI,GACXmc,EAAK,WAAW;AAAA,MACd,OAAOjO,GAAMrO,EAAM,KAAK;AAAA;AAAA,MAExB,KAAK;AAAA,IACb,GACM8zB,EAAS,KAAKxX,CAAI,IAEpB,KAAK,MAAM,KAAKA,CAAI;AAAA,EACtB;AAOA,WAAS2U,EAAWjxB,GAAO;AACzB,UAAMsc,IAAO,KAAK,MAAM,IAAG;AAC3B,IAAAA,EAAK,SAAS,KAAK,eAAetc,CAAK,GACvCsc,EAAK,SAAS,MAAMjO,GAAMrO,EAAM,GAAG;AAAA,EACrC;AAOA,WAASoyB,EAAiBpyB,GAAO;AAC/B,UAAMyZ,IAAU,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAEhD,QAAI,KAAK,KAAK,aAAa;AACzB,YAAM6C,IAAO7C,EAAQ,SAASA,EAAQ,SAAS,SAAS,CAAC;AACzD,MAAA6C,EAAK,SAAS,MAAMjO,GAAMrO,EAAM,GAAG,GACnC,KAAK,KAAK,cAAc;AACxB;AAAA,IACF;AACA,IAAI,CAAC,KAAK,KAAK,gCAAgC+vB,EAAO,eAAe,SAAStW,EAAQ,IAAI,MACxFyW,EAAY,KAAK,MAAMlwB,CAAK,GAC5BixB,EAAW,KAAK,MAAMjxB,CAAK;AAAA,EAE/B;AAOA,WAAS8xB,IAAkB;AACzB,SAAK,KAAK,cAAc;AAAA,EAC1B;AAOA,WAASC,KAAiB;AACxB,UAAM1pB,IAAO,KAAK,OAAM,GAClBkD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,QAAQlD;AAAA,EACf;AAOA,WAAS2pB,KAAiB;AACxB,UAAM3pB,IAAO,KAAK,OAAM,GAClBkD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,QAAQlD;AAAA,EACf;AAOA,WAASqpB,KAAiB;AACxB,UAAMrpB,IAAO,KAAK,OAAM,GAClBkD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,QAAQlD;AAAA,EACf;AAOA,WAASgqB,KAAa;AACpB,UAAM9mB,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAK7C,QAAI,KAAK,KAAK,aAAa;AAEzB,YAAMwoB,IAAgB,KAAK,KAAK,iBAAiB;AACjD,MAAAxoB,EAAK,QAAQ,aAEbA,EAAK,gBAAgBwoB,GAErB,OAAOxoB,EAAK,KACZ,OAAOA,EAAK;AAAA,IACd;AAEE,aAAOA,EAAK,YAEZ,OAAOA,EAAK;AAEd,SAAK,KAAK,gBAAgB;AAAA,EAC5B;AAOA,WAAS0mB,KAAc;AACrB,UAAM1mB,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAK7C,QAAI,KAAK,KAAK,aAAa;AAEzB,YAAMwoB,IAAgB,KAAK,KAAK,iBAAiB;AACjD,MAAAxoB,EAAK,QAAQ,aAEbA,EAAK,gBAAgBwoB,GAErB,OAAOxoB,EAAK,KACZ,OAAOA,EAAK;AAAA,IACd;AAEE,aAAOA,EAAK,YAEZ,OAAOA,EAAK;AAEd,SAAK,KAAK,gBAAgB;AAAA,EAC5B;AAOA,WAAS4mB,GAAgBnyB,GAAO;AAC9B,UAAM2qB,IAAS,KAAK,eAAe3qB,CAAK,GAClC4zB,IAAW,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAGjD,IAAAA,EAAS,QAAQpE,GAAa7E,CAAM,GAEpCiJ,EAAS,aAAa7d,GAAoB4U,CAAM,EAAE,YAAW;AAAA,EAC/D;AAOA,WAASuH,KAAc;AACrB,UAAM8B,IAAW,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC,GAC3C/4B,IAAQ,KAAK,OAAM,GACnBsQ,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAG7C,QADA,KAAK,KAAK,cAAc,IACpBA,EAAK,SAAS,QAAQ;AAExB,YAAM0oB,IAAWD,EAAS;AAC1B,MAAAzoB,EAAK,WAAW0oB;AAAA,IAClB;AACE,MAAA1oB,EAAK,MAAMtQ;AAAA,EAEf;AAOA,WAASs3B,IAAkC;AACzC,UAAMlqB,IAAO,KAAK,OAAM,GAClBkD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,MAAMlD;AAAA,EACb;AAOA,WAASmqB,KAA4B;AACnC,UAAMnqB,IAAO,KAAK,OAAM,GAClBkD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,QAAQlD;AAAA,EACf;AAOA,WAASoqB,KAAiB;AACxB,SAAK,KAAK,cAAc;AAAA,EAC1B;AAOA,WAAS9B,IAAmB;AAC1B,SAAK,KAAK,gBAAgB;AAAA,EAC5B;AAOA,WAAS2B,GAAsBtyB,GAAO;AACpC,UAAMsnB,IAAQ,KAAK,OAAM,GACnB/b,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAG7C,IAAAA,EAAK,QAAQ+b,GAEb/b,EAAK,aAAawK,GAAoB,KAAK,eAAe/V,CAAK,CAAC,EAAE,YAAW,GAC7E,KAAK,KAAK,gBAAgB;AAAA,EAC5B;AAOA,WAASkxB,GAA+BlxB,GAAO;AAC7C,SAAK,KAAK,yBAAyBA,EAAM;AAAA,EAC3C;AAMA,WAASmxB,GAA8BnxB,GAAO;AAC5C,UAAMqI,IAAO,KAAK,eAAerI,CAAK,GAChCsH,IAAO,KAAK,KAAK;AAEvB,QAAIrM;AACJ,IAAIqM,KACFrM,IAAQ4a,GAAgCxN,GAAMf,MAAS,oCAAoC,KAAK,EAAE,GAClG,KAAK,KAAK,yBAAyB,UAGnCrM,IADe2Z,GAA8BvM,CAAI;AAGnD,UAAMiU,KAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,GAAK,SAASrhB;AAAA,EAChB;AAMA,WAASm2B,GAAyBpxB,GAAO;AACvC,UAAMsc,IAAO,KAAK,MAAM,IAAG;AAC3B,IAAAA,EAAK,SAAS,MAAMjO,GAAMrO,EAAM,GAAG;AAAA,EACrC;AAMA,WAASgxB,GAAuBhxB,GAAO;AACrC,IAAAixB,EAAW,KAAK,MAAMjxB,CAAK;AAC3B,UAAMuL,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,MAAM,KAAK,eAAevL,CAAK;AAAA,EACtC;AAMA,WAAS+wB,GAAoB/wB,GAAO;AAClC,IAAAixB,EAAW,KAAK,MAAMjxB,CAAK;AAC3B,UAAMuL,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7C,IAAAA,EAAK,MAAM,YAAY,KAAK,eAAevL,CAAK;AAAA,EAClD;AAOA,WAASkb,KAAa;AACpB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU,CAAA;AAAA,IAChB;AAAA,EACE;AAGA,WAASiV,KAAW;AAClB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IACb;AAAA,EACE;AAGA,WAASzS,KAAW;AAClB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,IACb;AAAA,EACE;AAGA,WAAS6D,KAAa;AACpB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,OAAO;AAAA,MACP,KAAK;AAAA,IACX;AAAA,EACE;AAGA,WAAS6O,KAAW;AAClB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU,CAAA;AAAA,IAChB;AAAA,EACE;AAGA,WAASjG,KAAU;AACjB,WAAO;AAAA,MACL,MAAM;AAAA;AAAA,MAEN,OAAO;AAAA,MACP,UAAU,CAAA;AAAA,IAChB;AAAA,EACE;AAGA,WAASkG,KAAY;AACnB,WAAO;AAAA,MACL,MAAM;AAAA,IACZ;AAAA,EACE;AAGA,WAASC,KAAO;AACd,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,IACb;AAAA,EACE;AAGA,WAASC,KAAQ;AACf,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,MACL,KAAK;AAAA,IACX;AAAA,EACE;AAGA,WAASN,KAAO;AACd,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,MACL,UAAU,CAAA;AAAA,IAChB;AAAA,EACE;AAMA,WAASjb,GAAKhV,GAAO;AACnB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,SAASA,EAAM,SAAS;AAAA,MACxB,OAAO;AAAA,MACP,QAAQA,EAAM;AAAA,MACd,UAAU,CAAA;AAAA,IAChB;AAAA,EACE;AAMA,WAASwwB,GAASxwB,GAAO;AACvB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,QAAQA,EAAM;AAAA,MACd,SAAS;AAAA,MACT,UAAU,CAAA;AAAA,IAChB;AAAA,EACE;AAGA,WAASoqB,KAAY;AACnB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU,CAAA;AAAA,IAChB;AAAA,EACE;AAGA,WAASwG,KAAS;AAChB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU,CAAA;AAAA,IAChB;AAAA,EACE;AAGA,WAASzwB,KAAO;AACd,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,IACb;AAAA,EACE;AAGA,WAAS4oB,KAAgB;AACvB,WAAO;AAAA,MACL,MAAM;AAAA,IACZ;AAAA,EACE;AACF;AAUA,SAAS1a,GAAM6lB,GAAG;AAChB,SAAO;AAAA,IACL,MAAMA,EAAE;AAAA,IACR,QAAQA,EAAE;AAAA,IACV,QAAQA,EAAE;AAAA,EACd;AACA;AAOA,SAASrB,GAAUsB,GAAU5e,GAAY;AACvC,MAAIrT,IAAQ;AACZ,SAAO,EAAEA,IAAQqT,EAAW,UAAQ;AAClC,UAAMta,IAAQsa,EAAWrT,CAAK;AAC9B,IAAI,MAAM,QAAQjH,CAAK,IACrB43B,GAAUsB,GAAUl5B,CAAK,IAEzBwa,GAAU0e,GAAUl5B,CAAK;AAAA,EAE7B;AACF;AAOA,SAASwa,GAAU0e,GAAU1e,GAAW;AAEtC,MAAInJ;AACJ,OAAKA,KAAOmJ;AACV,QAAI5D,GAAI,KAAK4D,GAAWnJ,CAAG;AACzB,cAAQA,GAAG;AAAA,QACT,KAAK,kBACH;AACE,gBAAMxP,IAAQ2Y,EAAUnJ,CAAG;AAC3B,UAAIxP,KACFq3B,EAAS7nB,CAAG,EAAE,KAAK,GAAGxP,CAAK;AAE7B;AAAA,QACF;AAAA,QACF,KAAK,cACH;AACE,gBAAMA,IAAQ2Y,EAAUnJ,CAAG;AAC3B,UAAIxP,KACFq3B,EAAS7nB,CAAG,EAAE,KAAK,GAAGxP,CAAK;AAE7B;AAAA,QACF;AAAA,QACF,KAAK;AAAA,QACL,KAAK,QACH;AACE,gBAAMA,IAAQ2Y,EAAUnJ,CAAG;AAC3B,UAAIxP,KACF,OAAO,OAAOq3B,EAAS7nB,CAAG,GAAGxP,CAAK;AAEpC;AAAA,QACF;AAAA,MAEV;AAGA;AAGA,SAASq2B,GAAet2B,GAAMC,GAAO;AACnC,QAAID,IACI,IAAI,MAAM,mBAAmBA,EAAK,OAAO,QAAQuR,GAAkB;AAAA,IACvE,OAAOvR,EAAK;AAAA,IACZ,KAAKA,EAAK;AAAA,EAChB,CAAK,IAAI,4BAA4BC,EAAM,OAAO,QAAQsR,GAAkB;AAAA,IACtE,OAAOtR,EAAM;AAAA,IACb,KAAKA,EAAM;AAAA,EACjB,CAAK,IAAI,WAAW,IAEV,IAAI,MAAM,sCAAsCA,EAAM,OAAO,QAAQsR,GAAkB;AAAA,IAC3F,OAAOtR,EAAM;AAAA,IACb,KAAKA,EAAM;AAAA,EACjB,CAAK,IAAI,iBAAiB;AAE1B;ACnoCe,SAASs3B,GAAY35B,GAAS;AAG3C,QAAMyX,IAAO;AAEb,EAAAA,EAAK,SAASK;AAKd,WAASA,EAAO8hB,GAAK;AACnB,WAAOvE,GAAauE,GAAK;AAAA,MACvB,GAAGniB,EAAK,KAAK,UAAU;AAAA,MACvB,GAAGzX;AAAA;AAAA;AAAA;AAAA,MAIH,YAAYyX,EAAK,KAAK,qBAAqB,KAAK,CAAA;AAAA,MAChD,iBAAiBA,EAAK,KAAK,wBAAwB,KAAK,CAAA;AAAA,IAC9D,CAAK;AAAA,EACH;AACF;AChCO,SAASoiB,GAAOr5B,GAAO6Z,GAAW;AACvC,QAAMyf,IAAS,OAAOt5B,CAAK;AAE3B,MAAI,OAAO6Z,KAAc;AACvB,UAAM,IAAI,UAAU,oBAAoB;AAG1C,MAAIuJ,IAAQ,GACRnc,IAAQqyB,EAAO,QAAQzf,CAAS;AAEpC,SAAO5S,MAAU;AACf,IAAAmc,KACAnc,IAAQqyB,EAAO,QAAQzf,GAAW5S,IAAQ4S,EAAU,MAAM;AAG5D,SAAOuJ;AACT;AC1Be,SAASmW,GAAmB7J,GAAQ;AAClD,MAAI,OAAOA,KAAW;AACrB,UAAM,IAAI,UAAU,mBAAmB;AAKxC,SAAOA,EACL,QAAQ,uBAAuB,MAAM,EACrC,QAAQ,MAAM,OAAO;AACxB;ACkIO,MAAM8J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAgBT,SAAU9Y,GAAM;AACd,QAAIA,KAAS;AACX,aAAOxE;AAGT,QAAI,OAAOwE,KAAS;AAClB,aAAO+Y,GAAY/Y,CAAI;AAGzB,QAAI,OAAOA,KAAS;AAClB,aAAO,MAAM,QAAQA,CAAI,IACrBgZ,GAAWhZ,CAAI;AAAA;AAAA;AAAA,QAGfiZ;AAAA;AAAA,UAAwCjZ;AAAA,QAAI;AAAA;AAGlD,QAAI,OAAOA,KAAS;AAClB,aAAOkZ,GAAYlZ,CAAI;AAGzB,UAAM,IAAI,MAAM,8CAA8C;AAAA,EAChE;AAAA;AAOJ,SAASgZ,GAAWG,GAAO;AAEzB,QAAMC,IAAS,CAAA;AACf,MAAI7yB,IAAQ;AAEZ,SAAO,EAAEA,IAAQ4yB,EAAM;AACrB,IAAAC,EAAO7yB,CAAK,IAAIuyB,GAAQK,EAAM5yB,CAAK,CAAC;AAGtC,SAAOwyB,GAAYM,CAAG;AAMtB,WAASA,KAAOhnB,GAAY;AAC1B,QAAI9L,IAAQ;AAEZ,WAAO,EAAEA,IAAQ6yB,EAAO;AACtB,UAAIA,EAAO7yB,CAAK,EAAE,MAAM,MAAM8L,CAAU,EAAG,QAAO;AAGpD,WAAO;AAAA,EACT;AACF;AAQA,SAAS4mB,GAAkB/d,GAAO;AAChC,QAAMoe;AAAA;AAAA,IAAwDpe;AAAA;AAE9D,SAAO6d,GAAYlpB,CAAG;AAMtB,WAASA,EAAID,GAAM;AACjB,UAAM2pB;AAAA;AAAA;AAAA,MACoB3pB;AAAA;AAI1B,QAAIe;AAEJ,SAAKA,KAAOuK;AACV,UAAIqe,EAAa5oB,CAAG,MAAM2oB,EAAc3oB,CAAG,EAAG,QAAO;AAGvD,WAAO;AAAA,EACT;AACF;AAQA,SAASuoB,GAAYhe,GAAO;AAC1B,SAAO6d,GAAYptB,CAAI;AAKvB,WAASA,EAAKiE,GAAM;AAClB,WAAOA,KAAQA,EAAK,SAASsL;AAAA,EAC/B;AACF;AAQA,SAAS6d,GAAYS,GAAc;AACjC,SAAOte;AAMP,WAASA,EAAM5b,GAAOiH,GAAO2M,GAAQ;AACnC,WAAO,GACLumB,GAAen6B,CAAK,KAClBk6B,EAAa;AAAA,MACX;AAAA,MACAl6B;AAAA,MACA,OAAOiH,KAAU,WAAWA,IAAQ;AAAA,MACpC2M,KAAU;AAAA,IACpB;AAAA,EAEE;AACF;AAEA,SAASsI,KAAK;AACZ,SAAO;AACT;AAMA,SAASie,GAAen6B,GAAO;AAC7B,SAAOA,MAAU,QAAQ,OAAOA,KAAU,YAAY,UAAUA;AAClE;ACvEA,MAAMo6B,KAAQ,CAAA,GAKDC,KAAW,IAKXC,KAAO,IAKPC,KAAO;AAiDb,SAASC,GAAa3iB,GAAM6I,GAAM+Z,GAASC,GAAS;AAEzD,MAAI9e;AAEJ,EAAI,OAAO8E,KAAS,cAAc,OAAO+Z,KAAY,cACnDC,IAAUD,GAEVA,IAAU/Z,KAGV9E,IAAQ8E;AAGV,QAAMia,IAAKnB,GAAQ5d,CAAK,GAClBgf,IAAOF,IAAU,KAAK;AAE5B,EAAAG,EAAQhjB,GAAM,QAAW,EAAE,EAAC;AAO5B,WAASgjB,EAAQvqB,GAAMrJ,GAAO6zB,GAAS;AACrC,UAAM96B;AAAA;AAAA,MACJsQ,KAAQ,OAAOA,KAAS,WAAWA,IAAO,CAAA;AAAA;AAG5C,QAAI,OAAOtQ,EAAM,QAAS,UAAU;AAClC,YAAMyR;AAAA;AAAA,QAEJ,OAAOzR,EAAM,WAAY,WACrBA,EAAM;AAAA;AAAA,UAEN,OAAOA,EAAM,QAAS,WACpBA,EAAM,OACN;AAAA;AAAA;AAER,aAAO,eAAe+6B,GAAO,QAAQ;AAAA,QACnC,OACE,YAAiBzqB,EAAK,QAAQmB,IAAO,MAAMA,IAAO,MAAM,OAAO;AAAA,MACzE,CAAO;AAAA,IACH;AAEA,WAAOspB;AAEP,aAASA,IAAQ;AAEf,UAAIl2B,IAASu1B,IAETY,GAEA/b,GAEAgc;AAEJ,WAAI,CAACva,KAAQia,EAAGrqB,GAAMrJ,GAAO6zB,EAAQA,EAAQ,SAAS,CAAC,KAAK,MAAS,OAEnEj2B,IAASq2B,GAAST,EAAQnqB,GAAMwqB,CAAO,CAAC,GAEpCj2B,EAAO,CAAC,MAAMy1B;AAChB,eAAOz1B;AAIX,UAAI,cAAcyL,KAAQA,EAAK,UAAU;AACvC,cAAM6qB;AAAA;AAAA,UAA2C7qB;AAAA;AAEjD,YAAI6qB,EAAa,YAAYt2B,EAAO,CAAC,MAAM01B;AAIzC,eAHAtb,KAAUyb,IAAUS,EAAa,SAAS,SAAS,MAAMP,GACzDK,IAAeH,EAAQ,OAAOK,CAAY,GAEnClc,IAAS,MAAMA,IAASkc,EAAa,SAAS,UAAQ;AAC3D,kBAAMnuB,IAAQmuB,EAAa,SAASlc,CAAM;AAI1C,gBAFA+b,IAAYH,EAAQ7tB,GAAOiS,GAAQgc,CAAY,EAAC,GAE5CD,EAAU,CAAC,MAAMV;AACnB,qBAAOU;AAGT,YAAA/b,IACE,OAAO+b,EAAU,CAAC,KAAM,WAAWA,EAAU,CAAC,IAAI/b,IAAS2b;AAAA,UAC/D;AAAA,MAEJ;AAEA,aAAO/1B;AAAA,IACT;AAAA,EACF;AACF;AAUA,SAASq2B,GAASl7B,GAAO;AACvB,SAAI,MAAM,QAAQA,CAAK,IACdA,IAGL,OAAOA,KAAU,WACZ,CAACq6B,IAAUr6B,CAAK,IAGlBA,KAAU,OAA8Bo6B,KAAQ,CAACp6B,CAAK;AAC/D;ACjUO,SAASo7B,GAAevjB,GAAMkC,GAAMva,GAAS;AAElD,QAAM67B,IAAU7B,IADCh6B,KAAW,CAAA,GACK,UAAU,CAAA,CAAE,GACvC87B,IAAQC,GAAQxhB,CAAI;AAC1B,MAAIyhB,IAAY;AAEhB,SAAO,EAAEA,IAAYF,EAAM;AACzB,IAAAd,GAAa3iB,GAAM,QAAQ4iB,CAAO;AAIpC,WAASA,EAAQnqB,GAAMwqB,GAAS;AAC9B,QAAI7zB,IAAQ,IAERw0B;AAEJ,WAAO,EAAEx0B,IAAQ6zB,EAAQ,UAAQ;AAC/B,YAAMlnB,IAASknB,EAAQ7zB,CAAK,GAEtB4xB,IAAW4C,IAAcA,EAAY,WAAW;AAEtD,UACEJ;AAAA,QACEznB;AAAA,QACAilB,IAAWA,EAAS,QAAQjlB,CAAM,IAAI;AAAA,QACtC6nB;AAAA,MACV;AAEQ;AAGF,MAAAA,IAAc7nB;AAAA,IAChB;AAEA,QAAI6nB;AACF,aAAOxD,EAAQ3nB,GAAMwqB,CAAO;AAAA,EAEhC;AAYA,WAAS7C,EAAQ3nB,GAAMwqB,GAAS;AAC9B,UAAMlnB,IAASknB,EAAQA,EAAQ,SAAS,CAAC,GACnCY,IAAOJ,EAAME,CAAS,EAAE,CAAC,GACzBzf,IAAUuf,EAAME,CAAS,EAAE,CAAC;AAClC,QAAI3nB,IAAQ;AAGZ,UAAM5M,IADW2M,EAAO,SACD,QAAQtD,CAAI;AACnC,QAAI3E,IAAS,IAETgwB,IAAQ,CAAA;AAEZ,IAAAD,EAAK,YAAY;AAEjB,QAAIxxB,IAAQwxB,EAAK,KAAKprB,EAAK,KAAK;AAEhC,WAAOpG,KAAO;AACZ,YAAMlG,IAAWkG,EAAM,OAEjB0xB,IAAc;AAAA,QAClB,OAAO1xB,EAAM;AAAA,QACb,OAAOA,EAAM;AAAA,QACb,OAAO,CAAC,GAAG4wB,GAASxqB,CAAI;AAAA,MAChC;AACM,UAAItQ,IAAQ+b,EAAQ,GAAG7R,GAAO0xB,CAAW;AA8BzC,UA5BI,OAAO57B,KAAU,aACnBA,IAAQA,EAAM,SAAS,IAAI,EAAC,MAAM,QAAQ,OAAAA,EAAK,IAAI,SAIjDA,MAAU,KAIZ07B,EAAK,YAAY13B,IAAW,KAExB6P,MAAU7P,KACZ23B,EAAM,KAAK;AAAA,QACT,MAAM;AAAA,QACN,OAAOrrB,EAAK,MAAM,MAAMuD,GAAO7P,CAAQ;AAAA,MACnD,CAAW,GAGC,MAAM,QAAQhE,CAAK,IACrB27B,EAAM,KAAK,GAAG37B,CAAK,IACVA,KACT27B,EAAM,KAAK37B,CAAK,GAGlB6T,IAAQ7P,IAAWkG,EAAM,CAAC,EAAE,QAC5ByB,IAAS,KAGP,CAAC+vB,EAAK;AACR;AAGF,MAAAxxB,IAAQwxB,EAAK,KAAKprB,EAAK,KAAK;AAAA,IAC9B;AAEA,WAAI3E,KACEkI,IAAQvD,EAAK,MAAM,UACrBqrB,EAAM,KAAK,EAAC,MAAM,QAAQ,OAAOrrB,EAAK,MAAM,MAAMuD,CAAK,EAAC,CAAC,GAG3DD,EAAO,SAAS,OAAO3M,GAAO,GAAG,GAAG00B,CAAK,KAEzCA,IAAQ,CAACrrB,CAAI,GAGRrJ,IAAQ00B,EAAM;AAAA,EACvB;AACF;AAUA,SAASJ,GAAQM,GAAa;AAE5B,QAAMh3B,IAAS,CAAA;AAEf,MAAI,CAAC,MAAM,QAAQg3B,CAAW;AAC5B,UAAM,IAAI,UAAU,mDAAmD;AAKzE,QAAM9hB,IACJ,CAAC8hB,EAAY,CAAC,KAAK,MAAM,QAAQA,EAAY,CAAC,CAAC,IAC3CA,IACA,CAACA,CAAW;AAElB,MAAI50B,IAAQ;AAEZ,SAAO,EAAEA,IAAQ8S,EAAK,UAAQ;AAC5B,UAAM+hB,IAAQ/hB,EAAK9S,CAAK;AACxB,IAAApC,EAAO,KAAK,CAACk3B,GAAaD,EAAM,CAAC,CAAC,GAAGE,GAAWF,EAAM,CAAC,CAAC,CAAC,CAAC;AAAA,EAC5D;AAEA,SAAOj3B;AACT;AAUA,SAASk3B,GAAaL,GAAM;AAC1B,SAAO,OAAOA,KAAS,WAAW,IAAI,OAAOtV,GAAOsV,CAAI,GAAG,GAAG,IAAIA;AACpE;AAUA,SAASM,GAAWjgB,GAAS;AAC3B,SAAO,OAAOA,KAAY,aACtBA,IACA,WAAY;AACV,WAAOA;AAAA,EACT;AACN;ACvPA,MAAMkgB,KAAc,YAEdC,KAAiB,CAAC,YAAY,QAAQ,SAAS,OAAO;AASrD,SAASC,KAAiC;AAC/C,SAAO;AAAA,IACL,YAAY,CAACC,EAA4B;AAAA,IACzC,OAAO;AAAA,MACL,iBAAiBC;AAAA,MACjB,sBAAsBC;AAAA,MACtB,qBAAqBA;AAAA,MACrB,oBAAoBA;AAAA,IAC1B;AAAA,IACI,MAAM;AAAA,MACJ,iBAAiBC;AAAA,MACjB,sBAAsBC;AAAA,MACtB,qBAAqBC;AAAA,MACrB,oBAAoBC;AAAA,IAC1B;AAAA,EACA;AACA;AASO,SAASC,KAA+B;AAC7C,SAAO;AAAA,IACL,QAAQ;AAAA,MACN;AAAA,QACE,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,aAAAV;AAAA,QACA,gBAAAC;AAAA,MACR;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,aAAAD;AAAA,QACA,gBAAAC;AAAA,MACR;AAAA,MACM;AAAA,QACE,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,aAAAD;AAAA,QACA,gBAAAC;AAAA,MACR;AAAA,IACA;AAAA,EACA;AACA;AAMA,SAASG,GAAqBt3B,GAAO;AACnC,OAAK,MAAM,EAAC,MAAM,QAAQ,OAAO,MAAM,KAAK,IAAI,UAAU,CAAA,EAAE,GAAGA,CAAK;AACtE;AAMA,SAASu3B,GAA0Bv3B,GAAO;AACxC,OAAK,OAAO,MAAM,iBAAiB,KAAK,MAAMA,CAAK;AACrD;AAMA,SAAS03B,GAAwB13B,GAAO;AACtC,OAAK,OAAO,KAAK,iBAAiB,KAAK,MAAMA,CAAK;AACpD;AAMA,SAAS23B,GAAuB33B,GAAO;AACrC,OAAK,OAAO,KAAK,KAAK,KAAK,MAAMA,CAAK;AACtC,QAAMuL,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CssB,EAAOtsB,EAAK,MACZA,EAAK,MAAM,YAAY,KAAK,eAAevL,CAAK;AAClD;AAMA,SAASy3B,GAAyBz3B,GAAO;AACvC,OAAK,OAAO,KAAK,cAAc,KAAK,MAAMA,CAAK;AACjD;AAMA,SAASw3B,GAAoBx3B,GAAO;AAClC,OAAK,KAAKA,CAAK;AACjB;AAGA,SAASq3B,GAA6BvkB,GAAM;AAC1C,EAAAujB;AAAA,IACEvjB;AAAA,IACA;AAAA,MACE,CAAC,mDAAmDglB,EAAO;AAAA,MAC3D,CAAC,2DAA2DC,EAAS;AAAA,IAC3E;AAAA,IACI,EAAC,QAAQ,CAAC,QAAQ,eAAe,EAAC;AAAA,EACtC;AACA;AAYA,SAASD,GAAQxK,GAAG0K,GAAUC,GAAQ37B,GAAM6I,GAAO;AACjD,MAAI3B,IAAS;AAcb,MAXI,CAACiH,GAAStF,CAAK,MAKf,MAAM,KAAK6yB,CAAQ,MACrBC,IAASD,IAAWC,GACpBD,IAAW,IACXx0B,IAAS,YAGP,CAAC00B,GAAgBD,CAAM;AACzB,WAAO;AAGT,QAAMr4B,IAAQu4B,GAASF,IAAS37B,CAAI;AAEpC,MAAI,CAACsD,EAAM,CAAC,EAAG,QAAO;AAGtB,QAAME,IAAS;AAAA,IACb,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK0D,IAASw0B,IAAWp4B,EAAM,CAAC;AAAA,IAChC,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAOo4B,IAAWp4B,EAAM,CAAC,EAAC,CAAC;AAAA,EACzD;AAEE,SAAIA,EAAM,CAAC,IACF,CAACE,GAAQ,EAAC,MAAM,QAAQ,OAAOF,EAAM,CAAC,EAAC,CAAC,IAG1CE;AACT;AAUA,SAASi4B,GAAUzK,GAAG8K,GAAO9Q,GAAOniB,GAAO;AACzC;AAAA;AAAA,IAEE,CAACsF,GAAStF,GAAO,EAAI;AAAA,IAErB,UAAU,KAAKmiB,CAAK,IAEb,KAGF;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK,YAAY8Q,IAAQ,MAAM9Q;AAAA,MAC/B,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAO8Q,IAAQ,MAAM9Q,EAAK,CAAC;AAAA,IACzD;AAAA;AACA;AAMA,SAAS4Q,GAAgBD,GAAQ;AAC/B,QAAMr4B,IAAQq4B,EAAO,MAAM,GAAG;AAE9B,SACE,EAAAr4B,EAAM,SAAS,KACdA,EAAMA,EAAM,SAAS,CAAC,MACpB,IAAI,KAAKA,EAAMA,EAAM,SAAS,CAAC,CAAC,KAC/B,CAAC,aAAa,KAAKA,EAAMA,EAAM,SAAS,CAAC,CAAC,MAC7CA,EAAMA,EAAM,SAAS,CAAC,MACpB,IAAI,KAAKA,EAAMA,EAAM,SAAS,CAAC,CAAC,KAC/B,CAAC,aAAa,KAAKA,EAAMA,EAAM,SAAS,CAAC,CAAC;AAMlD;AAMA,SAASu4B,GAAStnB,GAAK;AACrB,QAAMwnB,IAAY,sBAAsB,KAAKxnB,CAAG;AAEhD,MAAI,CAACwnB;AACH,WAAO,CAACxnB,GAAK,MAAS;AAGxB,EAAAA,IAAMA,EAAI,MAAM,GAAGwnB,EAAU,KAAK;AAElC,MAAIC,IAAQD,EAAU,CAAC,GACnBE,IAAoBD,EAAM,QAAQ,GAAG;AACzC,QAAME,IAAgBlE,GAAOzjB,GAAK,GAAG;AACrC,MAAI4nB,IAAgBnE,GAAOzjB,GAAK,GAAG;AAEnC,SAAO0nB,MAAsB,MAAMC,IAAgBC;AACjD,IAAA5nB,KAAOynB,EAAM,MAAM,GAAGC,IAAoB,CAAC,GAC3CD,IAAQA,EAAM,MAAMC,IAAoB,CAAC,GACzCA,IAAoBD,EAAM,QAAQ,GAAG,GACrCG;AAGF,SAAO,CAAC5nB,GAAKynB,CAAK;AACpB;AAOA,SAAS7tB,GAAStF,GAAOuzB,GAAO;AAC9B,QAAM7oB,IAAO1K,EAAM,MAAM,WAAWA,EAAM,QAAQ,CAAC;AAEnD,UACGA,EAAM,UAAU,KACfyR,GAAkB/G,CAAI,KACtB8G,GAAmB9G,CAAI;AAAA,GAExB,CAAC6oB,KAAS7oB,MAAS;AAExB;ACrQA8oB,GAAkB,OAAOC;AAMzB,SAASC,KAA0B;AACjC,OAAK,OAAM;AACb;AAMA,SAASC,GAAkB94B,GAAO;AAChC,OAAK,MAAM,EAAC,MAAM,qBAAqB,YAAY,IAAI,OAAO,GAAE,GAAGA,CAAK;AAC1E;AAMA,SAAS+4B,KAAqC;AAC5C,OAAK,OAAM;AACb;AAMA,SAASC,GAAwBh5B,GAAO;AACtC,OAAK;AAAA,IACH,EAAC,MAAM,sBAAsB,YAAY,IAAI,OAAO,IAAI,UAAU,GAAE;AAAA,IACpEA;AAAA,EACJ;AACA;AAMA,SAASi5B,GAAuBj5B,GAAO;AACrC,QAAMsnB,IAAQ,KAAK,OAAM,GACnB/b,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CssB,EAAOtsB,EAAK,MACZA,EAAK,aAAawK;AAAA,IAChB,KAAK,eAAe/V,CAAK;AAAA,EAC7B,EAAI,YAAW,GACbuL,EAAK,QAAQ+b;AACf;AAMA,SAAS4R,GAAiBl5B,GAAO;AAC/B,OAAK,KAAKA,CAAK;AACjB;AAMA,SAASm5B,GAAkCn5B,GAAO;AAChD,QAAMsnB,IAAQ,KAAK,OAAM,GACnB/b,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CssB,EAAOtsB,EAAK,MACZA,EAAK,aAAawK;AAAA,IAChB,KAAK,eAAe/V,CAAK;AAAA,EAC7B,EAAI,YAAW,GACbuL,EAAK,QAAQ+b;AACf;AAMA,SAAS8R,GAAuBp5B,GAAO;AACrC,OAAK,KAAKA,CAAK;AACjB;AAGA,SAAS44B,KAAwB;AAC/B,SAAO;AACT;AAMA,SAASD,GAAkBptB,GAAM+hB,GAAGtjB,GAAO0S,GAAM;AAC/C,QAAM2c,IAAUrvB,EAAM,cAAc0S,CAAI;AACxC,MAAIzhB,IAAQo+B,EAAQ,KAAK,IAAI;AAC7B,QAAMje,IAAOpR,EAAM,MAAM,mBAAmB,GACtCsvB,IAAUtvB,EAAM,MAAM,WAAW;AACvC,SAAA/O,KAASo+B,EAAQ;AAAA,IACfrvB,EAAM,KAAKA,EAAM,cAAcuB,CAAI,GAAG,EAAC,OAAO,KAAK,QAAQtQ,EAAK,CAAC;AAAA,EACrE,GACEq+B,EAAO,GACPle,EAAI,GACJngB,KAASo+B,EAAQ,KAAK,GAAG,GAClBp+B;AACT;AASO,SAASs+B,KAA0B;AACxC,SAAO;AAAA,IACL,OAAO;AAAA,MACL,uBAAuBV;AAAA,MACvB,iBAAiBC;AAAA,MACjB,kCAAkCC;AAAA,MAClC,uBAAuBC;AAAA,IAC7B;AAAA,IACI,MAAM;AAAA,MACJ,uBAAuBC;AAAA,MACvB,iBAAiBC;AAAA,MACjB,kCAAkCC;AAAA,MAClC,uBAAuBC;AAAA,IAC7B;AAAA,EACA;AACA;AAWO,SAASI,GAAsB/+B,GAAS;AAE7C,MAAIg/B,IAAiB;AAErB,SAAIh/B,KAAWA,EAAQ,mBACrBg/B,IAAiB,KAGZ;AAAA,IACL,UAAU,EAAC,oBAAAC,GAAkB,mBAAEf,GAAiB;AAAA;AAAA,IAEhD,QAAQ,CAAC,EAAC,WAAW,KAAK,aAAa,CAAC,SAAS,YAAY,WAAW,EAAC,CAAC;AAAA,EAC9E;AAME,WAASe,EAAmBnuB,GAAM+hB,GAAGtjB,GAAO0S,GAAM;AAChD,UAAM2c,IAAUrvB,EAAM,cAAc0S,CAAI;AACxC,QAAIzhB,IAAQo+B,EAAQ,KAAK,IAAI;AAC7B,UAAMje,IAAOpR,EAAM,MAAM,oBAAoB,GACvCsvB,IAAUtvB,EAAM,MAAM,OAAO;AACnC,WAAA/O,KAASo+B,EAAQ;AAAA,MACfrvB,EAAM,KAAKA,EAAM,cAAcuB,CAAI,GAAG,EAAC,QAAQtQ,GAAO,OAAO,IAAG,CAAC;AAAA,IACvE,GACIq+B,EAAO,GAEPr+B,KAASo+B,EAAQ,KAAK,IAAI,GAEtB9tB,EAAK,YAAYA,EAAK,SAAS,SAAS,MAC1C8tB,EAAQ,MAAM,CAAC,GAEfp+B,KAASo+B,EAAQ;AAAA,OACdI,IAAiB;AAAA,IAAO,OACvBzvB,EAAM;AAAA,QACJA,EAAM,cAAcuB,GAAM8tB,EAAQ,QAAO,CAAE;AAAA,QAC3CI,IAAiBE,KAASC;AAAA,MACtC;AAAA,IACA,IAGIxe,EAAI,GAEGngB;AAAA,EACT;AACF;AAGA,SAAS2+B,GAAev7B,GAAM6D,GAAO23B,GAAO;AAC1C,SAAO33B,MAAU,IAAI7D,IAAOs7B,GAAOt7B,GAAM6D,GAAO23B,CAAK;AACvD;AAGA,SAASF,GAAOt7B,GAAM6D,GAAO23B,GAAO;AAClC,UAAQA,IAAQ,KAAK,UAAUx7B;AACjC;AC7LA,MAAMy7B,KAAiC;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEAC,GAAa,OAAOC;AASb,SAASC,KAA+B;AAC7C,SAAO;AAAA,IACL,gBAAgB,CAAC,QAAQ;AAAA,IACzB,OAAO,EAAC,eAAeC,GAAkB;AAAA,IACzC,MAAM,EAAC,eAAeC,GAAiB;AAAA,EAC3C;AACA;AASO,SAASC,KAA6B;AAC3C,SAAO;AAAA,IACL,QAAQ;AAAA,MACN;AAAA,QACE,WAAW;AAAA,QACX,aAAa;AAAA,QACb,gBAAgBN;AAAA,MACxB;AAAA,IACA;AAAA,IACI,UAAU,EAAC,QAAQC,GAAY;AAAA,EACnC;AACA;AAMA,SAASG,GAAmBl6B,GAAO;AACjC,OAAK,MAAM,EAAC,MAAM,UAAU,UAAU,CAAA,EAAE,GAAGA,CAAK;AAClD;AAMA,SAASm6B,GAAkBn6B,GAAO;AAChC,OAAK,KAAKA,CAAK;AACjB;AAMA,SAAS+5B,GAAaxuB,GAAM+hB,GAAGtjB,GAAO0S,GAAM;AAC1C,QAAM2c,IAAUrvB,EAAM,cAAc0S,CAAI,GAClCtB,IAAOpR,EAAM,MAAM,eAAe;AACxC,MAAI/O,IAAQo+B,EAAQ,KAAK,IAAI;AAC7B,SAAAp+B,KAAS+O,EAAM,kBAAkBuB,GAAM;AAAA,IACrC,GAAG8tB,EAAQ,QAAO;AAAA,IAClB,QAAQp+B;AAAA,IACR,OAAO;AAAA,EACX,CAAG,GACDA,KAASo+B,EAAQ,KAAK,IAAI,GAC1Bje,EAAI,GACGngB;AACT;AAGA,SAAS++B,KAAa;AACpB,SAAO;AACT;ACgDA,SAASK,GAAoBp/B,GAAO;AAClC,SAAOA,EAAM;AACf;AAcO,SAASq/B,GAAcC,GAAO9/B,GAAS;AAC5C,QAAM0Q,IAAW1Q,KAAW,CAAA,GAEtB+/B,KAASrvB,EAAS,SAAS,CAAA,GAAI,OAAM,GACrCsvB,IAAetvB,EAAS,gBAAgBkvB,IAExCK,IAAa,CAAA,GAEbC,IAAa,CAAA,GAEbC,IAAa,CAAA,GAEbC,IAAsB,CAAA;AAC5B,MAAIC,IAAkB,GAClBC,IAAW;AAIf,SAAO,EAAEA,IAAWR,EAAM,UAAQ;AAEhC,UAAMS,IAAM,CAAA,GAENC,IAAQ,CAAA;AACd,QAAIC,IAAc;AAMlB,SAJIX,EAAMQ,CAAQ,EAAE,SAASD,MAC3BA,IAAkBP,EAAMQ,CAAQ,EAAE,SAG7B,EAAEG,IAAcX,EAAMQ,CAAQ,EAAE,UAAQ;AAC7C,YAAMt1B,IAAO01B,GAAUZ,EAAMQ,CAAQ,EAAEG,CAAW,CAAC;AAEnD,UAAI/vB,EAAS,oBAAoB,IAAO;AACtC,cAAMkM,IAAOojB,EAAah1B,CAAI;AAC9B,QAAAw1B,EAAMC,CAAW,IAAI7jB,IAGnBwjB,EAAoBK,CAAW,MAAM,UACrC7jB,IAAOwjB,EAAoBK,CAAW,OAEtCL,EAAoBK,CAAW,IAAI7jB;AAAA,MAEvC;AAEA,MAAA2jB,EAAI,KAAKv1B,CAAI;AAAA,IACf;AAEA,IAAAk1B,EAAWI,CAAQ,IAAIC,GACvBJ,EAAWG,CAAQ,IAAIE;AAAA,EACzB;AAGA,MAAIC,IAAc;AAElB,MAAI,OAAOV,KAAU,YAAY,YAAYA;AAC3C,WAAO,EAAEU,IAAcJ;AACrB,MAAAJ,EAAWQ,CAAW,IAAIE,GAAYZ,EAAMU,CAAW,CAAC;AAAA,OAErD;AACL,UAAMrrB,IAAOurB,GAAYZ,CAAK;AAE9B,WAAO,EAAEU,IAAcJ;AACrB,MAAAJ,EAAWQ,CAAW,IAAIrrB;AAAA,EAE9B;AAGA,EAAAqrB,IAAc;AAEd,QAAMF,IAAM,CAAA,GAENC,IAAQ,CAAA;AAEd,SAAO,EAAEC,IAAcJ,KAAiB;AACtC,UAAMjrB,IAAO6qB,EAAWQ,CAAW;AACnC,QAAIr0B,IAAS,IACTC,IAAQ;AAEZ,IAAI+I,MAAS,MACXhJ,IAAS,KACTC,IAAQ,OACC+I,MAAS,MAClBhJ,IAAS,MACAgJ,MAAS,QAClB/I,IAAQ;AAIV,QAAIuQ,IACFlM,EAAS,oBAAoB,KACzB,IACA,KAAK;AAAA,MACH;AAAA,MACA0vB,EAAoBK,CAAW,IAAIr0B,EAAO,SAASC,EAAM;AAAA,IACrE;AAEI,UAAMrB,IAAOoB,IAAS,IAAI,OAAOwQ,CAAI,IAAIvQ;AAEzC,IAAIqE,EAAS,oBAAoB,OAC/BkM,IAAOxQ,EAAO,SAASwQ,IAAOvQ,EAAM,QAEhCuQ,IAAOwjB,EAAoBK,CAAW,MACxCL,EAAoBK,CAAW,IAAI7jB,IAGrC4jB,EAAMC,CAAW,IAAI7jB,IAGvB2jB,EAAIE,CAAW,IAAIz1B;AAAA,EACrB;AAGA,EAAAk1B,EAAW,OAAO,GAAG,GAAGK,CAAG,GAC3BJ,EAAW,OAAO,GAAG,GAAGK,CAAK,GAE7BF,IAAW;AAEX,QAAMn1B,IAAQ,CAAA;AAEd,SAAO,EAAEm1B,IAAWJ,EAAW,UAAQ;AACrC,UAAMK,IAAML,EAAWI,CAAQ,GACzBE,IAAQL,EAAWG,CAAQ;AACjC,IAAAG,IAAc;AAEd,UAAM78B,IAAO,CAAA;AAEb,WAAO,EAAE68B,IAAcJ,KAAiB;AACtC,YAAMr1B,IAAOu1B,EAAIE,CAAW,KAAK;AACjC,UAAIr0B,IAAS,IACTC,IAAQ;AAEZ,UAAIqE,EAAS,oBAAoB,IAAO;AACtC,cAAMkM,IACJwjB,EAAoBK,CAAW,KAAKD,EAAMC,CAAW,KAAK,IACtDrrB,IAAO6qB,EAAWQ,CAAW;AAEnC,QAAIrrB,MAAS,MACXhJ,IAAS,IAAI,OAAOwQ,CAAI,IACfxH,MAAS,KACdwH,IAAO,KACTxQ,IAAS,IAAI,OAAOwQ,IAAO,IAAI,GAAG,GAClCvQ,IAAQ,IAAI,OAAOuQ,IAAO,IAAI,GAAG,MAEjCxQ,IAAS,IAAI,OAAOwQ,IAAO,CAAC,GAC5BvQ,IAAQD,KAGVC,IAAQ,IAAI,OAAOuQ,CAAI;AAAA,MAE3B;AAEA,MAAIlM,EAAS,mBAAmB,MAAS,CAAC+vB,KACxC78B,EAAK,KAAK,GAAG,GAIb8M,EAAS,YAAY;AAAA;AAAA,MAGrB,EAAEA,EAAS,oBAAoB,MAAS1F,MAAS,QAChD0F,EAAS,mBAAmB,MAAS+vB,MAEtC78B,EAAK,KAAK,GAAG,GAGX8M,EAAS,oBAAoB,MAC/B9M,EAAK,KAAKwI,CAAM,GAGlBxI,EAAK,KAAKoH,CAAI,GAEV0F,EAAS,oBAAoB,MAC/B9M,EAAK,KAAKyI,CAAK,GAGbqE,EAAS,YAAY,MACvB9M,EAAK,KAAK,GAAG,IAIb8M,EAAS,iBAAiB,MAC1B+vB,MAAgBJ,IAAkB,MAElCz8B,EAAK,KAAK,GAAG;AAAA,IAEjB;AAEA,IAAAuH,EAAM;AAAA,MACJuF,EAAS,iBAAiB,KACtB9M,EAAK,KAAK,EAAE,EAAE,QAAQ,OAAO,EAAE,IAC/BA,EAAK,KAAK,EAAE;AAAA,IACtB;AAAA,EACE;AAEA,SAAOuH,EAAM,KAAK;AAAA,CAAI;AACxB;AAQA,SAASu1B,GAAUlgC,GAAO;AACxB,SAAOA,KAAU,OAA8B,KAAK,OAAOA,CAAK;AAClE;AAQA,SAASmgC,GAAYngC,GAAO;AAC1B,QAAM4U,IAAO,OAAO5U,KAAU,WAAWA,EAAM,YAAY,CAAC,IAAI;AAEhE,SAAO4U,MAAS,MAAgBA,MAAS,KACrC,KACAA,MAAS,MAAgBA,MAAS,MAChC,MACAA,MAAS,MAAgBA,MAAS,MAChC,MACA;AACV;ACvVA,MAAMgC,KAAM,CAAA,EAAG;AAcR,SAASwpB,GAAO/uB,GAAK7R,GAAS;AACnC,QAAM0Q,IAAW1Q,KAAW,CAAA;AA8B5B,WAAS6Q,EAAIrQ,MAAU+S,GAAY;AAEjC,QAAIN,IAAKpC,EAAI;AACb,UAAMgwB,IAAWhwB,EAAI;AAErB,QAAIrQ,KAAS4W,GAAI,KAAK5W,GAAOqR,CAAG,GAAG;AAEjC,YAAMjF,IAAK,OAAOpM,EAAMqR,CAAG,CAAC;AAE5B,MAAAoB,IAAKmE,GAAI,KAAKypB,GAAUj0B,CAAE,IAAIi0B,EAASj0B,CAAE,IAAIiE,EAAI;AAAA,IACnD;AAEA,QAAIoC;AACF,aAAOA,EAAG,KAAK,MAAMzS,GAAO,GAAG+S,CAAU;AAAA,EAE7C;AAEA,SAAA1C,EAAI,WAAWH,EAAS,YAAY,CAAA,GACpCG,EAAI,UAAUH,EAAS,SACvBG,EAAI,UAAUH,EAAS,SAGhBG;AACT;ACjHA,MAAMuG,KAAM,CAAA,EAAG;AAOR,SAASghB,GAAU/c,GAAML,GAAW;AACzC,MAAIvT,IAAQ,IAERoK;AAGJ,MAAImJ,EAAU;AACZ,WAAO,EAAEvT,IAAQuT,EAAU,WAAW;AACpC,MAAAod,GAAU/c,GAAML,EAAU,WAAWvT,CAAK,CAAC;AAI/C,OAAKoK,KAAOmJ;AACV,QAAI5D,GAAI,KAAK4D,GAAWnJ,CAAG;AACzB,cAAQA,GAAG;AAAA,QACT,KAAK;AAEH;AAAA;AAAA,QAIF,KAAK,UAAU;AACb0I,UAAAA,GAAKc,EAAKxJ,CAAG,GAAGmJ,EAAUnJ,CAAG,CAAC;AAC9B;AAAA,QACF;AAAA,QAEA,KAAK,QAAQ;AACX0I,UAAAA,GAAKc,EAAKxJ,CAAG,GAAGmJ,EAAUnJ,CAAG,CAAC;AAC9B;AAAA,QACF;AAAA,QAEA,KAAK,YAAY;AACfxE,UAAAA,GAAIgO,EAAKxJ,CAAG,GAAGmJ,EAAUnJ,CAAG,CAAC;AAC7B;AAAA,QACF;AAAA,QAEA;AAEE,UAAAwJ,EAAK,QAAQxJ,CAAG,IAAImJ,EAAUnJ,CAAG;AAAA,MAE3C;AAIE,SAAOwJ;AACT;AAOA,SAASd,GAAKnY,GAAMC,GAAO;AACzB,EAAIA,KACFD,EAAK,KAAK,GAAGC,CAAK;AAEtB;AAOA,SAASgL,GAAIjL,GAAMC,GAAO;AACxB,EAAIA,KACF,OAAO,OAAOD,GAAMC,CAAK;AAE7B;AClEO,SAASy+B,GAAWhwB,GAAM+hB,GAAGtjB,GAAO0S,GAAM;AAC/C,QAAMtB,IAAOpR,EAAM,MAAM,YAAY,GAC/BqvB,IAAUrvB,EAAM,cAAc0S,CAAI;AACxC,EAAA2c,EAAQ,KAAK,IAAI,GACjBA,EAAQ,MAAM,CAAC;AACf,QAAMp+B,IAAQ+O,EAAM;AAAA,IAClBA,EAAM,cAAcuB,GAAM8tB,EAAQ,QAAO,CAAE;AAAA,IAC3CvxB;AAAAA,EACJ;AACE,SAAAsT,EAAI,GACGngB;AACT;AAGA,SAAS6M,GAAIzJ,GAAMivB,GAAGuM,GAAO;AAC3B,SAAO,OAAOA,IAAQ,KAAK,OAAOx7B;AACpC;ACnBO,SAASm9B,GAAezjB,GAAOxN,GAAS;AAC7C,SACEkxB,GAAY1jB,GAAOxN,EAAQ,aAAa,EAAI,KAC5C,CAACkxB,GAAY1jB,GAAOxN,EAAQ,gBAAgB,EAAK;AAErD;AAQA,SAASkxB,GAAY1jB,GAAO/C,GAAM0mB,GAAM;AAKtC,MAJI,OAAO1mB,KAAS,aAClBA,IAAO,CAACA,CAAI,IAGV,CAACA,KAAQA,EAAK,WAAW;AAC3B,WAAO0mB;AAGT,MAAIx5B,IAAQ;AAEZ,SAAO,EAAEA,IAAQ8S,EAAK;AACpB,QAAI+C,EAAM,SAAS/C,EAAK9S,CAAK,CAAC;AAC5B,aAAO;AAIX,SAAO;AACT;AC1BO,SAASmuB,GAAU/C,GAAGqO,GAAI3xB,GAAO0S,GAAM;AAC5C,MAAIxa,IAAQ;AAEZ,SAAO,EAAEA,IAAQ8H,EAAM,OAAO;AAG5B,QACEA,EAAM,OAAO9H,CAAK,EAAE,cAAc;AAAA,KAClCs5B,GAAexxB,EAAM,OAAOA,EAAM,OAAO9H,CAAK,CAAC;AAE/C,aAAO,QAAQ,KAAKwa,EAAK,MAAM,IAAI,KAAK;AAI5C,SAAO;AAAA;AACT;ACnBO,SAASkf,GAAc3gC,GAAO4gC,GAAW;AAC9C,QAAMtH,IAAS,OAAOt5B,CAAK;AAC3B,MAAIiH,IAAQqyB,EAAO,QAAQsH,CAAS,GAChCC,IAAW55B,GACXmc,IAAQ,GACRrc,IAAM;AAEV,MAAI,OAAO65B,KAAc;AACvB,UAAM,IAAI,UAAU,oBAAoB;AAG1C,SAAO35B,MAAU;AACf,IAAIA,MAAU45B,IACR,EAAEzd,IAAQrc,MACZA,IAAMqc,KAGRA,IAAQ,GAGVyd,IAAW55B,IAAQ25B,EAAU,QAC7B35B,IAAQqyB,EAAO,QAAQsH,GAAWC,CAAQ;AAG5C,SAAO95B;AACT;ACzBO,SAAS+5B,GAAqBxwB,GAAMvB,GAAO;AAChD,SAAO,GACLA,EAAM,QAAQ,WAAW,MACvBuB,EAAK;AAAA,EAEL,CAACA,EAAK;AAAA,EAEN,WAAW,KAAKA,EAAK,KAAK;AAAA,EAE1B,CAAC,0CAA0C,KAAKA,EAAK,KAAK;AAEhE;ACbO,SAASywB,GAAWhyB,GAAO;AAChC,QAAM1E,IAAS0E,EAAM,QAAQ,SAAS;AAEtC,MAAI1E,MAAW,OAAOA,MAAW;AAC/B,UAAM,IAAI;AAAA,MACR,iCACEA,IACA;AAAA,IACR;AAGE,SAAOA;AACT;ACJO,SAASuK,GAAKtE,GAAM+hB,GAAGtjB,GAAO0S,GAAM;AACzC,QAAMpX,IAAS02B,GAAWhyB,CAAK,GACzB2W,IAAMpV,EAAK,SAAS,IACpB0wB,IAAS32B,MAAW,MAAM,gBAAgB;AAEhD,MAAIy2B,GAAqBxwB,GAAMvB,CAAK,GAAG;AACrC,UAAMoR,IAAOpR,EAAM,MAAM,cAAc,GACjC/O,IAAQ+O,EAAM,YAAY2W,GAAK7Y,EAAG;AACxC,WAAAsT,EAAI,GACGngB;AAAA,EACT;AAEA,QAAMo+B,IAAUrvB,EAAM,cAAc0S,CAAI,GAClCuM,IAAW3jB,EAAO,OAAO,KAAK,IAAIs2B,GAAcjb,GAAKrb,CAAM,IAAI,GAAG,CAAC,CAAC,GACpE8V,IAAOpR,EAAM,MAAM,YAAY;AACrC,MAAI/O,IAAQo+B,EAAQ,KAAKpQ,CAAQ;AAEjC,MAAI1d,EAAK,MAAM;AACb,UAAM+tB,IAAUtvB,EAAM,MAAM,iBAAiBiyB,CAAM,EAAE;AACrD,IAAAhhC,KAASo+B,EAAQ;AAAA,MACfrvB,EAAM,KAAKuB,EAAK,MAAM;AAAA,QACpB,QAAQtQ;AAAA,QACR,OAAO;AAAA,QACP,QAAQ,CAAC,GAAG;AAAA,QACZ,GAAGo+B,EAAQ,QAAO;AAAA,MAC1B,CAAO;AAAA,IACP,GACIC,EAAO;AAAA,EACT;AAEA,MAAI/tB,EAAK,QAAQA,EAAK,MAAM;AAC1B,UAAM+tB,IAAUtvB,EAAM,MAAM,iBAAiBiyB,CAAM,EAAE;AACrD,IAAAhhC,KAASo+B,EAAQ,KAAK,GAAG,GACzBp+B,KAASo+B,EAAQ;AAAA,MACfrvB,EAAM,KAAKuB,EAAK,MAAM;AAAA,QACpB,QAAQtQ;AAAA,QACR,OAAO;AAAA;AAAA,QACP,QAAQ,CAAC,GAAG;AAAA,QACZ,GAAGo+B,EAAQ,QAAO;AAAA,MAC1B,CAAO;AAAA,IACP,GACIC,EAAO;AAAA,EACT;AAEA,SAAAr+B,KAASo+B,EAAQ,KAAK;AAAA,CAAI,GAEtB1Y,MACF1lB,KAASo+B,EAAQ,KAAK1Y,IAAM;AAAA,CAAI,IAGlC1lB,KAASo+B,EAAQ,KAAKpQ,CAAQ,GAC9B7N,EAAI,GACGngB;AACT;AAGA,SAAS6M,GAAIzJ,GAAMivB,GAAGuM,GAAO;AAC3B,UAAQA,IAAQ,KAAK,UAAUx7B;AACjC;AClEO,SAAS69B,GAAWlyB,GAAO;AAChC,QAAM1E,IAAS0E,EAAM,QAAQ,SAAS;AAEtC,MAAI1E,MAAW,OAAOA,MAAW;AAC/B,UAAM,IAAI;AAAA,MACR,kCACEA,IACA;AAAA,IACR;AAGE,SAAOA;AACT;ACNO,SAASic,GAAWhW,GAAM+hB,GAAGtjB,GAAO0S,GAAM;AAC/C,QAAMyf,IAAQD,GAAWlyB,CAAK,GACxBiyB,IAASE,MAAU,MAAM,UAAU,cACnC/gB,IAAOpR,EAAM,MAAM,YAAY;AACrC,MAAIsvB,IAAUtvB,EAAM,MAAM,OAAO;AACjC,QAAMqvB,IAAUrvB,EAAM,cAAc0S,CAAI;AACxC,MAAIzhB,IAAQo+B,EAAQ,KAAK,GAAG;AAC5B,SAAAp+B,KAASo+B,EAAQ;AAAA,IACfrvB,EAAM,KAAKA,EAAM,cAAcuB,CAAI,GAAG;AAAA,MACpC,QAAQtQ;AAAA,MACR,OAAO;AAAA,MACP,GAAGo+B,EAAQ,QAAO;AAAA,IACxB,CAAK;AAAA,EACL,GACEp+B,KAASo+B,EAAQ,KAAK,KAAK,GAE3BC,EAAO;AAAA,EAIL,CAAC/tB,EAAK;AAAA,EAEN,eAAe,KAAKA,EAAK,GAAG,KAE5B+tB,IAAUtvB,EAAM,MAAM,oBAAoB,GAC1C/O,KAASo+B,EAAQ,KAAK,GAAG,GACzBp+B,KAASo+B,EAAQ;AAAA,IACfrvB,EAAM,KAAKuB,EAAK,KAAK,EAAC,QAAQtQ,GAAO,OAAO,KAAK,GAAGo+B,EAAQ,QAAO,EAAE,CAAC;AAAA,EAC5E,GACIp+B,KAASo+B,EAAQ,KAAK,GAAG,MAGzBC,IAAUtvB,EAAM,MAAM,gBAAgB,GACtC/O,KAASo+B,EAAQ;AAAA,IACfrvB,EAAM,KAAKuB,EAAK,KAAK;AAAA,MACnB,QAAQtQ;AAAA,MACR,OAAOsQ,EAAK,QAAQ,MAAM;AAAA;AAAA,MAC1B,GAAG8tB,EAAQ,QAAO;AAAA,IAC1B,CAAO;AAAA,EACP,IAGEC,EAAO,GAEH/tB,EAAK,UACP+tB,IAAUtvB,EAAM,MAAM,QAAQiyB,CAAM,EAAE,GACtChhC,KAASo+B,EAAQ,KAAK,MAAM8C,CAAK,GACjClhC,KAASo+B,EAAQ;AAAA,IACfrvB,EAAM,KAAKuB,EAAK,OAAO;AAAA,MACrB,QAAQtQ;AAAA,MACR,OAAOkhC;AAAA,MACP,GAAG9C,EAAQ,QAAO;AAAA,IAC1B,CAAO;AAAA,EACP,GACIp+B,KAASo+B,EAAQ,KAAK8C,CAAK,GAC3B7C,EAAO,IAGTle,EAAI,GAEGngB;AACT;ACnEO,SAASmhC,GAAcpyB,GAAO;AACnC,QAAM1E,IAAS0E,EAAM,QAAQ,YAAY;AAEzC,MAAI1E,MAAW,OAAOA,MAAW;AAC/B,UAAM,IAAI;AAAA,MACR,qCACEA,IACA;AAAA,IACR;AAGE,SAAOA;AACT;ACZO,SAAS+2B,GAAyBxsB,GAAM;AAC7C,SAAO,QAAQA,EAAK,SAAS,EAAE,EAAE,YAAW,IAAK;AACnD;AC8BO,SAASysB,GAAWC,GAASliB,GAAQ/U,GAAQ;AAClD,QAAMk3B,IAAcljB,GAAkBijB,CAAO,GACvCE,IAAanjB,GAAkBe,CAAM;AAG3C,SAAImiB,MAAgB,SACXC,MAAe;AAAA;AAAA;AAAA;AAAA,IAIlBn3B,MAAW,MACT,EAAC,QAAQ,IAAM,SAAS,GAAI,IAC5B,EAAC,QAAQ,IAAO,SAAS,GAAK;AAAA,MAChCm3B,MAAe;AAAA;AAAA,IAEb,EAAC,QAAQ,IAAM,SAAS,GAAI;AAAA;AAAA;AAAA,IAE5B,EAAC,QAAQ,IAAO,SAAS,GAAI;AAAA,MAIjCD,MAAgB,IACXC,MAAe;AAAA;AAAA,IAElB,EAAC,QAAQ,IAAO,SAAS,GAAK;AAAA,MAC9BA,MAAe;AAAA;AAAA,IAEb,EAAC,QAAQ,IAAM,SAAS,GAAI;AAAA;AAAA;AAAA,IAE5B,EAAC,QAAQ,IAAO,SAAS,GAAK;AAAA,MAI/BA,MAAe;AAAA;AAAA,IAElB,EAAC,QAAQ,IAAO,SAAS,GAAK;AAAA,MAC9BA,MAAe;AAAA;AAAA,IAEb,EAAC,QAAQ,IAAM,SAAS,GAAK;AAAA;AAAA;AAAA,IAE7B,EAAC,QAAQ,IAAO,SAAS,GAAK;AAAA;AACtC;ACxEArM,GAAS,OAAOsM;AAST,SAAStM,GAAS7kB,GAAM+hB,GAAGtjB,GAAO0S,GAAM;AAC7C,QAAMpX,IAAS82B,GAAcpyB,CAAK,GAC5BoR,IAAOpR,EAAM,MAAM,UAAU,GAC7BqvB,IAAUrvB,EAAM,cAAc0S,CAAI,GAClC7V,IAASwyB,EAAQ,KAAK/zB,CAAM;AAElC,MAAI0Y,IAAUqb,EAAQ;AAAA,IACpBrvB,EAAM,kBAAkBuB,GAAM;AAAA,MAC5B,OAAOjG;AAAA,MACP,QAAAuB;AAAA,MACA,GAAGwyB,EAAQ,QAAO;AAAA,IACxB,CAAK;AAAA,EACL;AACE,QAAMsD,IAAc3e,EAAQ,WAAW,CAAC,GAClCnE,IAAOyiB;AAAA,IACX5f,EAAK,OAAO,WAAWA,EAAK,OAAO,SAAS,CAAC;AAAA,IAC7CigB;AAAA,IACAr3B;AAAA,EACJ;AAEE,EAAIuU,EAAK,WACPmE,IAAUqe,GAAyBM,CAAW,IAAI3e,EAAQ,MAAM,CAAC;AAGnE,QAAM4e,IAAc5e,EAAQ,WAAWA,EAAQ,SAAS,CAAC,GACnD1D,IAAQgiB,GAAW5f,EAAK,MAAM,WAAW,CAAC,GAAGkgB,GAAat3B,CAAM;AAEtE,EAAIgV,EAAM,WACR0D,IAAUA,EAAQ,MAAM,GAAG,EAAE,IAAIqe,GAAyBO,CAAW;AAGvE,QAAM91B,IAAQuyB,EAAQ,KAAK/zB,CAAM;AAEjC,SAAA8V,EAAI,GAEJpR,EAAM,iCAAiC;AAAA,IACrC,OAAOsQ,EAAM;AAAA,IACb,QAAQT,EAAK;AAAA,EACjB,GACShT,IAASmX,IAAUlX;AAC5B;AAQA,SAAS41B,GAAapP,GAAGqO,GAAI3xB,GAAO;AAClC,SAAOA,EAAM,QAAQ,YAAY;AACnC;ACkNO,SAASgsB,GAAMljB,GAAM+pB,GAAeC,GAAkBC,GAAc;AAEzE,MAAIpH,GAEAha,GAEA+Z;AAEJ,EACE,OAAOmH,KAAkB,cACzB,OAAOC,KAAqB,cAE5BnhB,IAAO,QACP+Z,IAAUmH,GACVlH,IAAUmH,MAGVnhB,IAAOkhB,GAEPnH,IAAUoH,GACVnH,IAAUoH,IAGZtH,GAAa3iB,GAAM6I,GAAMqhB,GAAUrH,CAAO;AAM1C,WAASqH,EAASzxB,GAAMwqB,GAAS;AAC/B,UAAMlnB,IAASknB,EAAQA,EAAQ,SAAS,CAAC,GACnC7zB,IAAQ2M,IAASA,EAAO,SAAS,QAAQtD,CAAI,IAAI;AACvD,WAAOmqB,EAAQnqB,GAAMrJ,GAAO2M,CAAM;AAAA,EACpC;AACF;AC3SO,SAASouB,GAAsB1xB,GAAMvB,GAAO;AACjD,MAAIkzB,IAAmB;AAIvB,SAAAlH,GAAMzqB,GAAM,SAAUA,GAAM;AAC1B,QACG,WAAWA,KAAQ,WAAW,KAAKA,EAAK,KAAK,KAC9CA,EAAK,SAAS;AAEd,aAAA2xB,IAAmB,IACZ3H;AAAA,EAEX,CAAC,GAEM,IACJ,CAAChqB,EAAK,SAASA,EAAK,QAAQ,MAC3BL,GAASK,CAAI,MACZvB,EAAM,QAAQ,UAAUkzB;AAE/B;AClBO,SAAS/S,GAAQ5e,GAAM+hB,GAAGtjB,GAAO0S,GAAM;AAC5C,QAAMygB,IAAO,KAAK,IAAI,KAAK,IAAI,GAAG5xB,EAAK,SAAS,CAAC,GAAG,CAAC,GAC/C8tB,IAAUrvB,EAAM,cAAc0S,CAAI;AAExC,MAAIugB,GAAsB1xB,GAAMvB,CAAK,GAAG;AACtC,UAAMoR,IAAOpR,EAAM,MAAM,eAAe,GAClCsvB,IAAUtvB,EAAM,MAAM,UAAU,GAChC/O,IAAQ+O,EAAM,kBAAkBuB,GAAM;AAAA,MAC1C,GAAG8tB,EAAQ,QAAO;AAAA,MAClB,QAAQ;AAAA;AAAA,MACR,OAAO;AAAA;AAAA,IACb,CAAK;AACD,WAAAC,EAAO,GACPle,EAAI,GAGFngB,IACA;AAAA,KACCkiC,MAAS,IAAI,MAAM,KAAK;AAAA;AAAA,MAEvBliC,EAAM;AAAA;AAAA,OAGH,KAAK,IAAIA,EAAM,YAAY,IAAI,GAAGA,EAAM,YAAY;AAAA,CAAI,CAAC,IAAI;AAAA,IACxE;AAAA,EAEE;AAEA,QAAMguB,IAAW,IAAI,OAAOkU,CAAI,GAC1B/hB,IAAOpR,EAAM,MAAM,YAAY,GAC/BsvB,IAAUtvB,EAAM,MAAM,UAAU;AAMtC,EAAAqvB,EAAQ,KAAKpQ,IAAW,GAAG;AAE3B,MAAIhuB,IAAQ+O,EAAM,kBAAkBuB,GAAM;AAAA,IACxC,QAAQ;AAAA,IACR,OAAO;AAAA;AAAA,IACP,GAAG8tB,EAAQ,QAAO;AAAA,EACtB,CAAG;AAED,SAAI,SAAS,KAAKp+B,CAAK,MAErBA,IAAQohC,GAAyBphC,EAAM,WAAW,CAAC,CAAC,IAAIA,EAAM,MAAM,CAAC,IAGvEA,IAAQA,IAAQguB,IAAW,MAAMhuB,IAAQguB,GAErCjf,EAAM,QAAQ,aAChB/O,KAAS,MAAMguB,IAGjBqQ,EAAO,GACPle,EAAI,GAEGngB;AACT;ACtEAq1B,GAAK,OAAO8M;AAML,SAAS9M,GAAK/kB,GAAM;AACzB,SAAOA,EAAK,SAAS;AACvB;AAKA,SAAS6xB,KAAW;AAClB,SAAO;AACT;ACZA7M,GAAM,OAAO8M;AASN,SAAS9M,GAAMhlB,GAAM+hB,GAAGtjB,GAAO0S,GAAM;AAC1C,QAAMyf,IAAQD,GAAWlyB,CAAK,GACxBiyB,IAASE,MAAU,MAAM,UAAU,cACnC/gB,IAAOpR,EAAM,MAAM,OAAO;AAChC,MAAIsvB,IAAUtvB,EAAM,MAAM,OAAO;AACjC,QAAMqvB,IAAUrvB,EAAM,cAAc0S,CAAI;AACxC,MAAIzhB,IAAQo+B,EAAQ,KAAK,IAAI;AAC7B,SAAAp+B,KAASo+B,EAAQ;AAAA,IACfrvB,EAAM,KAAKuB,EAAK,KAAK,EAAC,QAAQtQ,GAAO,OAAO,KAAK,GAAGo+B,EAAQ,QAAO,EAAE,CAAC;AAAA,EAC1E,GACEp+B,KAASo+B,EAAQ,KAAK,IAAI,GAE1BC,EAAO;AAAA,EAIJ,CAAC/tB,EAAK,OAAOA,EAAK;AAAA,EAEnB,eAAe,KAAKA,EAAK,GAAG,KAE5B+tB,IAAUtvB,EAAM,MAAM,oBAAoB,GAC1C/O,KAASo+B,EAAQ,KAAK,GAAG,GACzBp+B,KAASo+B,EAAQ;AAAA,IACfrvB,EAAM,KAAKuB,EAAK,KAAK,EAAC,QAAQtQ,GAAO,OAAO,KAAK,GAAGo+B,EAAQ,QAAO,EAAE,CAAC;AAAA,EAC5E,GACIp+B,KAASo+B,EAAQ,KAAK,GAAG,MAGzBC,IAAUtvB,EAAM,MAAM,gBAAgB,GACtC/O,KAASo+B,EAAQ;AAAA,IACfrvB,EAAM,KAAKuB,EAAK,KAAK;AAAA,MACnB,QAAQtQ;AAAA,MACR,OAAOsQ,EAAK,QAAQ,MAAM;AAAA,MAC1B,GAAG8tB,EAAQ,QAAO;AAAA,IAC1B,CAAO;AAAA,EACP,IAGEC,EAAO,GAEH/tB,EAAK,UACP+tB,IAAUtvB,EAAM,MAAM,QAAQiyB,CAAM,EAAE,GACtChhC,KAASo+B,EAAQ,KAAK,MAAM8C,CAAK,GACjClhC,KAASo+B,EAAQ;AAAA,IACfrvB,EAAM,KAAKuB,EAAK,OAAO;AAAA,MACrB,QAAQtQ;AAAA,MACR,OAAOkhC;AAAA,MACP,GAAG9C,EAAQ,QAAO;AAAA,IAC1B,CAAO;AAAA,EACP,GACIp+B,KAASo+B,EAAQ,KAAK8C,CAAK,GAC3B7C,EAAO,IAGTr+B,KAASo+B,EAAQ,KAAK,GAAG,GACzBje,EAAI,GAEGngB;AACT;AAKA,SAASoiC,KAAY;AACnB,SAAO;AACT;AC5EAC,GAAe,OAAOC;AASf,SAASD,GAAe/xB,GAAM+hB,GAAGtjB,GAAO0S,GAAM;AACnD,QAAMpV,IAAOiE,EAAK,eACZ6P,IAAOpR,EAAM,MAAM,gBAAgB;AACzC,MAAIsvB,IAAUtvB,EAAM,MAAM,OAAO;AACjC,QAAMqvB,IAAUrvB,EAAM,cAAc0S,CAAI;AACxC,MAAIzhB,IAAQo+B,EAAQ,KAAK,IAAI;AAC7B,QAAMmE,IAAMxzB,EAAM,KAAKuB,EAAK,KAAK;AAAA,IAC/B,QAAQtQ;AAAA,IACR,OAAO;AAAA,IACP,GAAGo+B,EAAQ,QAAO;AAAA,EACtB,CAAG;AACD,EAAAp+B,KAASo+B,EAAQ,KAAKmE,IAAM,IAAI,GAEhClE,EAAO;AAEP,QAAMvhB,IAAQ/N,EAAM;AACpB,EAAAA,EAAM,QAAQ,CAAA,GACdsvB,IAAUtvB,EAAM,MAAM,WAAW;AAKjC,QAAMyzB,IAAYzzB,EAAM,KAAKA,EAAM,cAAcuB,CAAI,GAAG;AAAA,IACtD,QAAQtQ;AAAA,IACR,OAAO;AAAA,IACP,GAAGo+B,EAAQ,QAAO;AAAA,EACtB,CAAG;AACD,SAAAC,EAAO,GACPtvB,EAAM,QAAQ+N,GACdqD,EAAI,GAEA9T,MAAS,UAAU,CAACk2B,KAAOA,MAAQC,IACrCxiC,KAASo+B,EAAQ,KAAKoE,IAAY,GAAG,IAC5Bn2B,MAAS,aAElBrM,IAAQA,EAAM,MAAM,GAAG,EAAE,IAEzBA,KAASo+B,EAAQ,KAAK,GAAG,GAGpBp+B;AACT;AAKA,SAASsiC,KAAqB;AAC5B,SAAO;AACT;ACzDAG,GAAW,OAAOC;AAQX,SAASD,GAAWnyB,GAAM+hB,GAAGtjB,GAAO;AACzC,MAAI/O,IAAQsQ,EAAK,SAAS,IACtB0d,IAAW,KACX/mB,IAAQ;AAKZ,SAAO,IAAI,OAAO,aAAa+mB,IAAW,UAAU,EAAE,KAAKhuB,CAAK;AAC9D,IAAAguB,KAAY;AAmBd,OAbE,WAAW,KAAKhuB,CAAK,MACnB,WAAW,KAAKA,CAAK,KAAK,WAAW,KAAKA,CAAK,KAAM,QAAQ,KAAKA,CAAK,OAEzEA,IAAQ,MAAMA,IAAQ,MAUjB,EAAEiH,IAAQ8H,EAAM,OAAO,UAAQ;AACpC,UAAMO,IAAUP,EAAM,OAAO9H,CAAK,GAC5B07B,IAAa5zB,EAAM,eAAeO,CAAO;AAE/C,QAAIpF;AAKJ,QAAKoF,EAAQ;AAEb,aAAQpF,IAAQy4B,EAAW,KAAK3iC,CAAK,KAAI;AACvC,YAAIgE,IAAWkG,EAAM;AAGrB,QACElK,EAAM,WAAWgE,CAAQ,MAAM,MAC/BhE,EAAM,WAAWgE,IAAW,CAAC,MAAM,MAEnCA,KAGFhE,IAAQA,EAAM,MAAM,GAAGgE,CAAQ,IAAI,MAAMhE,EAAM,MAAMkK,EAAM,QAAQ,CAAC;AAAA,MACtE;AAAA,EACF;AAEA,SAAO8jB,IAAWhuB,IAAQguB;AAC5B;AAKA,SAAS0U,KAAiB;AACxB,SAAO;AACT;AC/DO,SAASE,GAAqBtyB,GAAMvB,GAAO;AAChD,QAAM2W,IAAMzV,GAASK,CAAI;AAEzB,SAAO,GACL,CAACvB,EAAM,QAAQ;AAAA,EAEbuB,EAAK;AAAA,EAEL,CAACA,EAAK;AAAA,EAENA,EAAK,YACLA,EAAK,SAAS,WAAW,KACzBA,EAAK,SAAS,CAAC,EAAE,SAAS;AAAA,GAEzBoV,MAAQpV,EAAK,OAAO,YAAYoV,MAAQpV,EAAK;AAAA,EAE9C,oBAAoB,KAAKA,EAAK,GAAG;AAAA;AAAA,EAGjC,CAAC,iBAAiB,KAAKA,EAAK,GAAG;AAErC;ACxBA0kB,GAAK,OAAO6N;AASL,SAAS7N,GAAK1kB,GAAM+hB,GAAGtjB,GAAO0S,GAAM;AACzC,QAAMyf,IAAQD,GAAWlyB,CAAK,GACxBiyB,IAASE,MAAU,MAAM,UAAU,cACnC9C,IAAUrvB,EAAM,cAAc0S,CAAI;AAExC,MAAItB,GAEAke;AAEJ,MAAIuE,GAAqBtyB,GAAMvB,CAAK,GAAG;AAErC,UAAM+N,IAAQ/N,EAAM;AACpB,IAAAA,EAAM,QAAQ,CAAA,GACdoR,IAAOpR,EAAM,MAAM,UAAU;AAC7B,QAAI/O,IAAQo+B,EAAQ,KAAK,GAAG;AAC5B,WAAAp+B,KAASo+B,EAAQ;AAAA,MACfrvB,EAAM,kBAAkBuB,GAAM;AAAA,QAC5B,QAAQtQ;AAAA,QACR,OAAO;AAAA,QACP,GAAGo+B,EAAQ,QAAO;AAAA,MAC1B,CAAO;AAAA,IACP,GACIp+B,KAASo+B,EAAQ,KAAK,GAAG,GACzBje,EAAI,GACJpR,EAAM,QAAQ+N,GACP9c;AAAA,EACT;AAEA,EAAAmgB,IAAOpR,EAAM,MAAM,MAAM,GACzBsvB,IAAUtvB,EAAM,MAAM,OAAO;AAC7B,MAAI/O,IAAQo+B,EAAQ,KAAK,GAAG;AAC5B,SAAAp+B,KAASo+B,EAAQ;AAAA,IACfrvB,EAAM,kBAAkBuB,GAAM;AAAA,MAC5B,QAAQtQ;AAAA,MACR,OAAO;AAAA,MACP,GAAGo+B,EAAQ,QAAO;AAAA,IACxB,CAAK;AAAA,EACL,GACEp+B,KAASo+B,EAAQ,KAAK,IAAI,GAC1BC,EAAO;AAAA,EAIJ,CAAC/tB,EAAK,OAAOA,EAAK;AAAA,EAEnB,eAAe,KAAKA,EAAK,GAAG,KAE5B+tB,IAAUtvB,EAAM,MAAM,oBAAoB,GAC1C/O,KAASo+B,EAAQ,KAAK,GAAG,GACzBp+B,KAASo+B,EAAQ;AAAA,IACfrvB,EAAM,KAAKuB,EAAK,KAAK,EAAC,QAAQtQ,GAAO,OAAO,KAAK,GAAGo+B,EAAQ,QAAO,EAAE,CAAC;AAAA,EAC5E,GACIp+B,KAASo+B,EAAQ,KAAK,GAAG,MAGzBC,IAAUtvB,EAAM,MAAM,gBAAgB,GACtC/O,KAASo+B,EAAQ;AAAA,IACfrvB,EAAM,KAAKuB,EAAK,KAAK;AAAA,MACnB,QAAQtQ;AAAA,MACR,OAAOsQ,EAAK,QAAQ,MAAM;AAAA,MAC1B,GAAG8tB,EAAQ,QAAO;AAAA,IAC1B,CAAO;AAAA,EACP,IAGEC,EAAO,GAEH/tB,EAAK,UACP+tB,IAAUtvB,EAAM,MAAM,QAAQiyB,CAAM,EAAE,GACtChhC,KAASo+B,EAAQ,KAAK,MAAM8C,CAAK,GACjClhC,KAASo+B,EAAQ;AAAA,IACfrvB,EAAM,KAAKuB,EAAK,OAAO;AAAA,MACrB,QAAQtQ;AAAA,MACR,OAAOkhC;AAAA,MACP,GAAG9C,EAAQ,QAAO;AAAA,IAC1B,CAAO;AAAA,EACP,GACIp+B,KAASo+B,EAAQ,KAAK8C,CAAK,GAC3B7C,EAAO,IAGTr+B,KAASo+B,EAAQ,KAAK,GAAG,GAEzBje,EAAI,GACGngB;AACT;AAQA,SAAS6iC,GAASvyB,GAAM+hB,GAAGtjB,GAAO;AAChC,SAAO6zB,GAAqBtyB,GAAMvB,CAAK,IAAI,MAAM;AACnD;AC5GA+zB,GAAc,OAAOC;AASd,SAASD,GAAcxyB,GAAM+hB,GAAGtjB,GAAO0S,GAAM;AAClD,QAAMpV,IAAOiE,EAAK,eACZ6P,IAAOpR,EAAM,MAAM,eAAe;AACxC,MAAIsvB,IAAUtvB,EAAM,MAAM,OAAO;AACjC,QAAMqvB,IAAUrvB,EAAM,cAAc0S,CAAI;AACxC,MAAIzhB,IAAQo+B,EAAQ,KAAK,GAAG;AAC5B,QAAMl5B,IAAO6J,EAAM,kBAAkBuB,GAAM;AAAA,IACzC,QAAQtQ;AAAA,IACR,OAAO;AAAA,IACP,GAAGo+B,EAAQ,QAAO;AAAA,EACtB,CAAG;AACD,EAAAp+B,KAASo+B,EAAQ,KAAKl5B,IAAO,IAAI,GAEjCm5B,EAAO;AAEP,QAAMvhB,IAAQ/N,EAAM;AACpB,EAAAA,EAAM,QAAQ,CAAA,GACdsvB,IAAUtvB,EAAM,MAAM,WAAW;AAKjC,QAAMyzB,IAAYzzB,EAAM,KAAKA,EAAM,cAAcuB,CAAI,GAAG;AAAA,IACtD,QAAQtQ;AAAA,IACR,OAAO;AAAA,IACP,GAAGo+B,EAAQ,QAAO;AAAA,EACtB,CAAG;AACD,SAAAC,EAAO,GACPtvB,EAAM,QAAQ+N,GACdqD,EAAI,GAEA9T,MAAS,UAAU,CAACnH,KAAQA,MAASs9B,IACvCxiC,KAASo+B,EAAQ,KAAKoE,IAAY,GAAG,IAC5Bn2B,MAAS,aAElBrM,IAAQA,EAAM,MAAM,GAAG,EAAE,IAEzBA,KAASo+B,EAAQ,KAAK,GAAG,GAGpBp+B;AACT;AAKA,SAAS+iC,KAAoB;AAC3B,SAAO;AACT;ACtDO,SAASC,GAAYj0B,GAAO;AACjC,QAAM1E,IAAS0E,EAAM,QAAQ,UAAU;AAEvC,MAAI1E,MAAW,OAAOA,MAAW,OAAOA,MAAW;AACjD,UAAM,IAAI;AAAA,MACR,kCACEA,IACA;AAAA,IACR;AAGE,SAAOA;AACT;ACVO,SAAS44B,GAAiBl0B,GAAO;AACtC,QAAMm0B,IAASF,GAAYj0B,CAAK,GAC1Bo0B,IAAcp0B,EAAM,QAAQ;AAElC,MAAI,CAACo0B;AACH,WAAOD,MAAW,MAAM,MAAM;AAGhC,MAAIC,MAAgB,OAAOA,MAAgB,OAAOA,MAAgB;AAChE,UAAM,IAAI;AAAA,MACR,kCACEA,IACA;AAAA,IACR;AAGE,MAAIA,MAAgBD;AAClB,UAAM,IAAI;AAAA,MACR,yBACEA,IACA,4BACAC,IACA;AAAA,IACR;AAGE,SAAOA;AACT;AC7BO,SAASC,GAAmBr0B,GAAO;AACxC,QAAM1E,IAAS0E,EAAM,QAAQ,iBAAiB;AAE9C,MAAI1E,MAAW,OAAOA,MAAW;AAC/B,UAAM,IAAI;AAAA,MACR,kCACEA,IACA;AAAA,IACR;AAGE,SAAOA;AACT;ACZO,SAASg5B,GAAUt0B,GAAO;AAC/B,QAAM1E,IAAS0E,EAAM,QAAQ,QAAQ;AAErC,MAAI1E,MAAW,OAAOA,MAAW,OAAOA,MAAW;AACjD,UAAM,IAAI;AAAA,MACR,kCACEA,IACA;AAAA,IACR;AAGE,SAAOA;AACT;ACHO,SAAS0P,GAAKzJ,GAAMsD,GAAQ7E,GAAO0S,GAAM;AAC9C,QAAMtB,IAAOpR,EAAM,MAAM,MAAM,GACzBu0B,IAAgBv0B,EAAM;AAE5B,MAAIm0B,IAAS5yB,EAAK,UAAU8yB,GAAmBr0B,CAAK,IAAIi0B,GAAYj0B,CAAK;AAEzE,QAAMo0B,IAAc7yB,EAAK,UACrB4yB,MAAW,MACT,MACA,MACFD,GAAiBl0B,CAAK;AAC1B,MAAIw0B,IACF3vB,KAAU7E,EAAM,iBAAiBm0B,MAAWn0B,EAAM,iBAAiB;AAErE,MAAI,CAACuB,EAAK,SAAS;AACjB,UAAMkzB,IAAgBlzB,EAAK,WAAWA,EAAK,SAAS,CAAC,IAAI;AAqCzD;AAAA;AAAA,OAzBG4yB,MAAW,OAAOA,MAAW;AAAA,MAE9BM,MACC,CAACA,EAAc,YAAY,CAACA,EAAc,SAAS,CAAC;AAAA,MAErDz0B,EAAM,MAAMA,EAAM,MAAM,SAAS,CAAC,MAAM,UACxCA,EAAM,MAAMA,EAAM,MAAM,SAAS,CAAC,MAAM,cACxCA,EAAM,MAAMA,EAAM,MAAM,SAAS,CAAC,MAAM,UACxCA,EAAM,MAAMA,EAAM,MAAM,SAAS,CAAC,MAAM;AAAA,MAExCA,EAAM,WAAWA,EAAM,WAAW,SAAS,CAAC,MAAM,KAClDA,EAAM,WAAWA,EAAM,WAAW,SAAS,CAAC,MAAM,KAClDA,EAAM,WAAWA,EAAM,WAAW,SAAS,CAAC,MAAM,MAElDw0B,IAAqB,KAWnBF,GAAUt0B,CAAK,MAAMm0B,KAAUM;AAAA,MAAe;AAChD,UAAIv8B,IAAQ;AAEZ,aAAO,EAAEA,IAAQqJ,EAAK,SAAS,UAAQ;AACrC,cAAM6M,IAAO7M,EAAK,SAASrJ,CAAK;AAEhC,YACEkW,KACAA,EAAK,SAAS,cACdA,EAAK,YACLA,EAAK,SAAS,CAAC,KACfA,EAAK,SAAS,CAAC,EAAE,SAAS,iBAC1B;AACA,UAAAomB,IAAqB;AACrB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,EAAIA,MACFL,IAASC,IAGXp0B,EAAM,gBAAgBm0B;AACtB,QAAMljC,IAAQ+O,EAAM,cAAcuB,GAAMmR,CAAI;AAC5C,SAAA1S,EAAM,iBAAiBm0B,GACvBn0B,EAAM,gBAAgBu0B,GACtBnjB,EAAI,GACGngB;AACT;AC3FO,SAASyjC,GAAoB10B,GAAO;AACzC,QAAM20B,IAAQ30B,EAAM,QAAQ,kBAAkB;AAE9C,MAAI20B,MAAU,SAASA,MAAU,SAASA,MAAU;AAClD,UAAM,IAAI;AAAA,MACR,kCACEA,IACA;AAAA,IACR;AAGE,SAAOA;AACT;ACLO,SAASnO,GAASjlB,GAAMsD,GAAQ7E,GAAO0S,GAAM;AAClD,QAAMkiB,IAAiBF,GAAoB10B,CAAK;AAChD,MAAIm0B,IAASn0B,EAAM,iBAAiBi0B,GAAYj0B,CAAK;AAGrD,EAAI6E,KAAUA,EAAO,SAAS,UAAUA,EAAO,YAC7CsvB,KACG,OAAOtvB,EAAO,SAAU,YAAYA,EAAO,QAAQ,KAChDA,EAAO,QACP,MACH7E,EAAM,QAAQ,wBAAwB,KACnC,IACA6E,EAAO,SAAS,QAAQtD,CAAI,KAChC4yB;AAGJ,MAAI9mB,IAAO8mB,EAAO,SAAS;AAE3B,GACES,MAAmB,SAClBA,MAAmB,YAChB/vB,KAAUA,EAAO,SAAS,UAAUA,EAAO,UAAWtD,EAAK,aAE/D8L,IAAO,KAAK,KAAKA,IAAO,CAAC,IAAI;AAG/B,QAAMgiB,IAAUrvB,EAAM,cAAc0S,CAAI;AACxC,EAAA2c,EAAQ,KAAK8E,IAAS,IAAI,OAAO9mB,IAAO8mB,EAAO,MAAM,CAAC,GACtD9E,EAAQ,MAAMhiB,CAAI;AAClB,QAAM+D,IAAOpR,EAAM,MAAM,UAAU,GAC7B/O,IAAQ+O,EAAM;AAAA,IAClBA,EAAM,cAAcuB,GAAM8tB,EAAQ,QAAO,CAAE;AAAA,IAC3CvxB;AAAA,EACJ;AACE,SAAAsT,EAAI,GAEGngB;AAGP,WAAS6M,EAAIzJ,GAAM6D,GAAO23B,GAAO;AAC/B,WAAI33B,KACM23B,IAAQ,KAAK,IAAI,OAAOxiB,CAAI,KAAKhZ,KAGnCw7B,IAAQsE,IAASA,IAAS,IAAI,OAAO9mB,IAAO8mB,EAAO,MAAM,KAAK9/B;AAAA,EACxE;AACF;ACjDO,SAAS+rB,GAAU7e,GAAM+hB,GAAGtjB,GAAO0S,GAAM;AAC9C,QAAMtB,IAAOpR,EAAM,MAAM,WAAW,GAC9BsvB,IAAUtvB,EAAM,MAAM,UAAU,GAChC/O,IAAQ+O,EAAM,kBAAkBuB,GAAMmR,CAAI;AAChD,SAAA4c,EAAO,GACPle,EAAI,GACGngB;AACT;ACDO,MAAM4jC;AAAA;AAAA,EAGTpK,GAAQ;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAEA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAEA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAEA;AAAA;AAAA,IAEA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAEA;AAAA,EACN,CAAK;AAAA;AC7BE,SAASqK,GAAKvzB,GAAM+hB,GAAGtjB,GAAO0S,GAAM;AAOzC,UALoBnR,EAAK,SAAS,KAAK,SAAU2oB,GAAG;AAClD,WAAO2K,GAAS3K,CAAC;AAAA,EACnB,CAAC,IAE+BlqB,EAAM,oBAAoBA,EAAM,eAC/C,KAAKA,GAAOuB,GAAMmR,CAAI;AACzC;ACdO,SAASqiB,GAAY/0B,GAAO;AACjC,QAAM1E,IAAS0E,EAAM,QAAQ,UAAU;AAEvC,MAAI1E,MAAW,OAAOA,MAAW;AAC/B,UAAM,IAAI;AAAA,MACR,mCACEA,IACA;AAAA,IACR;AAGE,SAAOA;AACT;ACXAsrB,GAAO,OAAOoO;AASP,SAASpO,GAAOrlB,GAAM+hB,GAAGtjB,GAAO0S,GAAM;AAC3C,QAAMpX,IAASy5B,GAAY/0B,CAAK,GAC1BoR,IAAOpR,EAAM,MAAM,QAAQ,GAC3BqvB,IAAUrvB,EAAM,cAAc0S,CAAI,GAClC7V,IAASwyB,EAAQ,KAAK/zB,IAASA,CAAM;AAE3C,MAAI0Y,IAAUqb,EAAQ;AAAA,IACpBrvB,EAAM,kBAAkBuB,GAAM;AAAA,MAC5B,OAAOjG;AAAA,MACP,QAAAuB;AAAA,MACA,GAAGwyB,EAAQ,QAAO;AAAA,IACxB,CAAK;AAAA,EACL;AACE,QAAMsD,IAAc3e,EAAQ,WAAW,CAAC,GAClCnE,IAAOyiB;AAAA,IACX5f,EAAK,OAAO,WAAWA,EAAK,OAAO,SAAS,CAAC;AAAA,IAC7CigB;AAAA,IACAr3B;AAAA,EACJ;AAEE,EAAIuU,EAAK,WACPmE,IAAUqe,GAAyBM,CAAW,IAAI3e,EAAQ,MAAM,CAAC;AAGnE,QAAM4e,IAAc5e,EAAQ,WAAWA,EAAQ,SAAS,CAAC,GACnD1D,IAAQgiB,GAAW5f,EAAK,MAAM,WAAW,CAAC,GAAGkgB,GAAat3B,CAAM;AAEtE,EAAIgV,EAAM,WACR0D,IAAUA,EAAQ,MAAM,GAAG,EAAE,IAAIqe,GAAyBO,CAAW;AAGvE,QAAM91B,IAAQuyB,EAAQ,KAAK/zB,IAASA,CAAM;AAE1C,SAAA8V,EAAI,GAEJpR,EAAM,iCAAiC;AAAA,IACrC,OAAOsQ,EAAM;AAAA,IACb,QAAQT,EAAK;AAAA,EACjB,GACShT,IAASmX,IAAUlX;AAC5B;AAQA,SAASk4B,GAAW1R,GAAGqO,GAAI3xB,GAAO;AAChC,SAAOA,EAAM,QAAQ,UAAU;AACjC;ACxDO,SAAS7J,GAAKoL,GAAM+hB,GAAGtjB,GAAO0S,GAAM;AACzC,SAAO1S,EAAM,KAAKuB,EAAK,OAAOmR,CAAI;AACpC;ACNO,SAASuiB,GAAoBj1B,GAAO;AACzC,QAAMk1B,IAAal1B,EAAM,QAAQ,kBAAkB;AAEnD,MAAIk1B,IAAa;AACf,UAAM,IAAI;AAAA,MACR,6CACEA,IACA;AAAA,IACR;AAGE,SAAOA;AACT;ACNO,SAASnW,GAAcuE,GAAGqO,GAAI3xB,GAAO;AAC1C,QAAM/O,KACJqjC,GAAUt0B,CAAK,KAAKA,EAAM,QAAQ,aAAa,MAAM,KACrD,OAAOi1B,GAAoBj1B,CAAK,CAAC;AAEnC,SAAOA,EAAM,QAAQ,aAAa/O,EAAM,MAAM,GAAG,EAAE,IAAIA;AACzD;ACGO,MAAMkkC,KAAS;AAAA,EACtB,YAAE5D;AAAAA,EACA,OAAOlL;AAAAA,EACT,MAAExgB;AAAAA,EACA,YAAA0R;AAAA,EACF,UAAE6O;AAAAA,EACF,WAAEC;AAAAA,EACF,SAAElG;AAAAA,EACF,MAAEmG;AAAAA,EACF,OAAEC;AAAAA,EACF,gBAAE+M;AAAAA,EACF,YAAEI;AAAAA,EACF,MAAEzN;AAAAA,EACF,eAAE8N;AAAAA,EACF,MAAE/oB;AAAAA,EACF,UAAEwb;AAAAA,EACF,WAAEpG;AAAAA,EACF,MAAE0U;AAAAA,EACF,QAAElO;AAAAA,EACF,MAAEzwB;AAAAA,EACF,eAAE4oB;AACF,GCpCa5Z,KAAO,CAACiwB,EAAY;AAGjC,SAASA,GAAaviC,GAAMC,GAAO+R,GAAQ7E,GAAO;AAEhD,MACElN,EAAM,SAAS,UACfi/B,GAAqBj/B,GAAOkN,CAAK,MAChCnN,EAAK,SAAS,UACZA,EAAK,SAASC,EAAM,QAAQi/B,GAAqBl/B,GAAMmN,CAAK;AAE/D,WAAO;AAKT,MAAI,YAAY6E,KAAU,OAAOA,EAAO,UAAW;AACjD,WACEhS,EAAK,SAAS;AAAA,KAEbA,EAAK,SAASC,EAAM,QACnBA,EAAM,SAAS;AAAA,IAEdA,EAAM,SAAS,aAAamgC,GAAsBngC,GAAOkN,CAAK,KAEjE,SAGK6E,EAAO,SAAS,IAAI;AAE/B;AC1BA,MAAMwwB,KAAoB;AAAA,EACxB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAGaC,KAAS;AAAA,EACpB,EAAC,WAAW,KAAM,OAAO,YAAY,aAAa,WAAU;AAAA,EAC5D,EAAC,WAAW,KAAM,QAAQ,YAAY,aAAa,WAAU;AAAA,EAC7D;AAAA,IACE,WAAW;AAAA,IACX,aAAa,CAAC,6BAA6B,qBAAqB;AAAA,EACpE;AAAA,EACE;AAAA,IACE,WAAW;AAAA,IACX,aAAa;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACN;AAAA,EACA;AAAA,EACE;AAAA,IACE,WAAW;AAAA;AAAA,IACX,aAAa;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACN;AAAA,EACA;AAAA,EACE,EAAC,WAAW,KAAK,OAAO,YAAY,aAAa,WAAU;AAAA,EAC3D,EAAC,WAAW,KAAK,QAAQ,YAAY,aAAa,WAAU;AAAA,EAC5D;AAAA,IACE,WAAW;AAAA,IACX,aAAa,CAAC,6BAA6B,qBAAqB;AAAA,EACpE;AAAA;AAAA;AAAA,EAGE;AAAA,IACE,WAAW;AAAA,IACX,OAAO;AAAA,IACP,aAAa;AAAA,IACb,gBAAgBD;AAAA,EACpB;AAAA;AAAA,EAEE,EAAC,WAAW,KAAK,aAAa,aAAY;AAAA;AAAA,EAE1C,EAAC,SAAS,IAAM,WAAW,IAAG;AAAA,EAC9B,EAAC,WAAW,KAAK,aAAa,cAAc,OAAO;AAAA,MAAc;AAAA;AAAA;AAAA,EAGjE,EAAC,WAAW,KAAK,OAAO,aAAa,aAAa,WAAU;AAAA;AAAA,EAE5D,EAAC,WAAW,KAAK,aAAa,kBAAiB;AAAA;AAAA,EAE/C,EAAC,WAAW,KAAK,aAAa,iBAAgB;AAAA;AAAA,EAE9C;AAAA,IACE,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,gBAAgBA;AAAA,EACpB;AAAA;AAAA;AAAA,EAGE,EAAC,SAAS,IAAM,QAAQ,QAAQ,WAAW,IAAG;AAAA,EAC9C,EAAC,WAAW,KAAK,aAAa,iBAAgB;AAAA;AAAA,EAE9C,EAAC,SAAS,IAAM,WAAW,KAAK,OAAO;AAAA,KAAgB;AAAA,EACvD,EAAC,WAAW,KAAK,aAAa,YAAY,gBAAgBA,GAAiB;AAAA;AAAA,EAE3E,EAAC,SAAS,IAAM,WAAW,KAAK,OAAO;AAAA,IAAe;AAAA;AAAA;AAAA,EAGtD,EAAC,SAAS,IAAM,WAAW,KAAK,OAAO;AAAA,KAAgB;AAAA;AAAA,EAEvD,EAAC,SAAS,IAAM,QAAQ,QAAQ,WAAW,KAAK,OAAO;AAAA,MAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOxE,EAAC,SAAS,IAAM,WAAW,KAAK,OAAO,cAAa;AAAA,EACpD;AAAA,IACE,WAAW;AAAA,IACX,OAAO;AAAA,IACP,aAAa;AAAA,IACb,gBAAgBA;AAAA,EACpB;AAAA,EACE,EAAC,WAAW,KAAK,aAAa,qBAAoB;AAAA;AAAA,EAElD,EAAC,SAAS,IAAM,WAAW,IAAG;AAAA;AAAA;AAAA,EAG9B,EAAC,SAAS,IAAM,WAAW,IAAG;AAAA,EAC9B,EAAC,WAAW,KAAK,aAAa,qBAAoB;AAAA;AAAA;AAAA,EAGlD,EAAC,SAAS,IAAM,WAAW,IAAG;AAAA,EAC9B,EAAC,WAAW,KAAK,aAAa,YAAY,gBAAgBA,GAAiB;AAAA,EAC3E,EAAC,WAAW,KAAK,aAAa,CAAC,SAAS,WAAW,EAAC;AAAA;AAAA;AAAA;AAAA,EAIpD,EAAC,WAAW,MAAM,OAAO,YAAY,aAAa,WAAU;AAAA;AAAA,EAE5D,EAAC,WAAW,KAAK,aAAa,CAAC,SAAS,WAAW,EAAC;AAAA;AAAA;AAAA,EAGpD,EAAC,SAAS,IAAM,WAAW,IAAG;AAAA,EAC9B,EAAC,WAAW,KAAK,aAAa,YAAY,gBAAgBA,GAAiB;AAAA;AAAA;AAAA,EAG3E,EAAC,SAAS,IAAM,WAAW,IAAG;AAAA,EAC9B;AAAA,IACE,WAAW;AAAA,IACX,aAAa,CAAC,6BAA6B,2BAA2B;AAAA,EAC1E;AAAA,EACE,EAAC,WAAW,KAAK,aAAa,YAAY,gBAAgBA,GAAiB;AAAA;AAAA;AAAA;AAAA,EAI3E,EAAC,SAAS,IAAM,WAAW,IAAG;AAChC;ACvHO,SAASE,GAAYh0B,GAAM;AAChC,SAAIA,EAAK,SAAS,CAACA,EAAK,aACfA,EAAK,SAAS,KAGhBikB,GAAajkB,EAAK,UAAU;AACrC;ACzBO,SAASi0B,GAAej1B,GAAS;AACtC,MAAI,CAACA,EAAQ,WAAW;AACtB,UAAM1D,KACH0D,EAAQ,UAAU,oBAAoB,OACtCA,EAAQ,SAAS,QAAQA,EAAQ,SAAS,MAAM;AAEnD,IAAAA,EAAQ,YAAY,IAAI;AAAA,OACrB1D,IAAS,MAAMA,IAAS,MAAM,OAC5B,sBAAsB,KAAK0D,EAAQ,SAAS,IAAI,OAAO,MACxDA,EAAQ,aACPA,EAAQ,QAAQ,QAAQA,EAAQ,QAAQ,MAAM;AAAA,MACjD;AAAA,IACN;AAAA,EACE;AAEA,SAAOA,EAAQ;AACjB;ACFO,SAASk1B,GAAkB5wB,GAAQ7E,GAAO0S,GAAM;AACrD,QAAMgjB,IAAa11B,EAAM,YACnBiqB,IAAWplB,EAAO,YAAY,CAAA,GAE9B8wB,IAAU,CAAA;AAChB,MAAIz9B,IAAQ,IACR2E,IAAS6V,EAAK,QAEdkjB;AAEJ,EAAAF,EAAW,KAAK,EAAE;AAClB,MAAIrG,IAAUrvB,EAAM,cAAc0S,CAAI;AAEtC,SAAO,EAAExa,IAAQ+xB,EAAS,UAAQ;AAChC,UAAMhsB,IAAQgsB,EAAS/xB,CAAK;AAE5B,QAAI4E;AAIJ,QAFA44B,EAAWA,EAAW,SAAS,CAAC,IAAIx9B,GAEhCA,IAAQ,IAAI+xB,EAAS,QAAQ;AAG/B,UAAIkL,IAASn1B,EAAM,OAAO,SAASiqB,EAAS/xB,IAAQ,CAAC,EAAE,IAAI;AAG3D,MAAIi9B,KAAUA,EAAO,SAAMA,IAASA,EAAO,OAC3Cr4B,IAAQq4B,IACJA,EAAOlL,EAAS/xB,IAAQ,CAAC,GAAG2M,GAAQ7E,GAAO;AAAA,QACzC,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,GAAGqvB,EAAQ,QAAO;AAAA,MAC9B,CAAW,EAAE,OAAO,CAAC,IACX;AAAA,IACN;AACE,MAAAvyB,IAAQ4V,EAAK;AASf,IACEijB,EAAQ,SAAS,MAChB94B,MAAW,QAAQA,MAAW;AAAA,MAC/BoB,EAAM,SAAS,WAEf03B,EAAQA,EAAQ,SAAS,CAAC,IAAIA,EAAQA,EAAQ,SAAS,CAAC,EAAE;AAAA,MACxD;AAAA,MACA;AAAA,IACR,GACM94B,IAAS,KAGTwyB,IAAUrvB,EAAM,cAAc0S,CAAI,GAClC2c,EAAQ,KAAKsG,EAAQ,KAAK,EAAE,CAAC;AAG/B,QAAI1kC,IAAQ+O,EAAM,OAAO/B,GAAO4G,GAAQ7E,GAAO;AAAA,MAC7C,GAAGqvB,EAAQ,QAAO;AAAA,MAClB,OAAAvyB;AAAA,MACA,QAAAD;AAAA,IACN,CAAK;AAKD,IAAI+4B,KAAeA,MAAgB3kC,EAAM,MAAM,GAAG,CAAC,MACjDA,IACEohC,GAAyBuD,EAAY,WAAW,CAAC,CAAC,IAAI3kC,EAAM,MAAM,CAAC;AAGvE,UAAM4kC,IAAe71B,EAAM;AAC3B,IAAAA,EAAM,iCAAiC,QACvC41B,IAAc,QAKVC,MAEAF,EAAQ,SAAS,KACjBE,EAAa,UACbh5B,MAAW84B,EAAQA,EAAQ,SAAS,CAAC,EAAE,MAAM,EAAE,MAE/CA,EAAQA,EAAQ,SAAS,CAAC,IACxBA,EAAQA,EAAQ,SAAS,CAAC,EAAE,MAAM,GAAG,EAAE,IACvCtD,GAAyBx1B,EAAO,WAAW,CAAC,CAAC,IAG7Cg5B,EAAa,UAAOD,IAAc94B,KAGxCuyB,EAAQ,KAAKp+B,CAAK,GAClB0kC,EAAQ,KAAK1kC,CAAK,GAClB4L,IAAS5L,EAAM,MAAM,EAAE;AAAA,EACzB;AAEA,SAAAykC,EAAW,IAAG,GAEPC,EAAQ,KAAK,EAAE;AACxB;AC7GO,SAASG,GAAcjxB,GAAQ7E,GAAO0S,GAAM;AACjD,QAAMgjB,IAAa11B,EAAM,YACnBiqB,IAAWplB,EAAO,YAAY,CAAA,GAC9BwqB,IAAUrvB,EAAM,cAAc0S,CAAI,GAElCijB,IAAU,CAAA;AAChB,MAAIz9B,IAAQ;AAIZ,OAFAw9B,EAAW,KAAK,EAAE,GAEX,EAAEx9B,IAAQ+xB,EAAS,UAAQ;AAChC,UAAMhsB,IAAQgsB,EAAS/xB,CAAK;AAE5B,IAAAw9B,EAAWA,EAAW,SAAS,CAAC,IAAIx9B,GAEpCy9B,EAAQ;AAAA,MACNtG,EAAQ;AAAA,QACNrvB,EAAM,OAAO/B,GAAO4G,GAAQ7E,GAAO;AAAA,UACjC,QAAQ;AAAA;AAAA,UACR,OAAO;AAAA;AAAA,UACP,GAAGqvB,EAAQ,QAAO;AAAA,QAC5B,CAAS;AAAA,MACT;AAAA,IACA,GAEQpxB,EAAM,SAAS,WACjB+B,EAAM,iBAAiB,SAGrB9H,IAAQ+xB,EAAS,SAAS,KAC5B0L,EAAQ;AAAA,MACNtG,EAAQ,KAAKrb,GAAQ/V,GAAOgsB,EAAS/xB,IAAQ,CAAC,GAAG2M,GAAQ7E,CAAK,CAAC;AAAA,IACvE;AAAA,EAEE;AAEA,SAAA01B,EAAW,IAAG,GAEPC,EAAQ,KAAK,EAAE;AACxB;AASA,SAAS3hB,GAAQnhB,GAAMC,GAAO+R,GAAQ7E,GAAO;AAC3C,MAAI9H,IAAQ8H,EAAM,KAAK;AAEvB,SAAO9H,OAAS;AACd,UAAMpC,IAASkK,EAAM,KAAK9H,CAAK,EAAErF,GAAMC,GAAO+R,GAAQ7E,CAAK;AAE3D,QAAIlK,MAAW,MAAQA,MAAW;AAChC;AAGF,QAAI,OAAOA,KAAW;AACpB,aAAO;AAAA,EAAK,OAAO,IAAIA,CAAM;AAG/B,QAAIA,MAAW;AACb,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAEX;AAEA,SAAO;AAAA;AAAA;AACT;AC/EA,MAAMigC,KAAM;AAKL,SAASC,GAAY/kC,GAAO6M,GAAK;AAEtC,QAAMhI,IAAS,CAAA;AACf,MAAIgP,IAAQ,GACRzQ,IAAO,GAEP8G;AAEJ,SAAQA,IAAQ46B,GAAI,KAAK9kC,CAAK;AAC5B,IAAAqQ,EAAIrQ,EAAM,MAAM6T,GAAO3J,EAAM,KAAK,CAAC,GACnCrF,EAAO,KAAKqF,EAAM,CAAC,CAAC,GACpB2J,IAAQ3J,EAAM,QAAQA,EAAM,CAAC,EAAE,QAC/B9G;AAGF,SAAAiN,EAAIrQ,EAAM,MAAM6T,CAAK,CAAC,GAEfhP,EAAO,KAAK,EAAE;AAKrB,WAASwL,EAAIrQ,GAAO;AAClB,IAAA6E,EAAO,KAAKgI,EAAI7M,GAAOoD,GAAM,CAACpD,CAAK,CAAC;AAAA,EACtC;AACF;ACFO,SAASglC,GAAKj2B,GAAOk2B,GAAOnQ,GAAQ;AACzC,QAAM90B,KAAS80B,EAAO,UAAU,OAAOmQ,KAAS,OAAOnQ,EAAO,SAAS,KAEjEoQ,IAAY,CAAA,GAEZrgC,IAAS,CAAA,GAETsgC,IAAQ,CAAA;AACd,MAAIl+B,IAAQ;AAEZ,SAAO,EAAEA,IAAQ8H,EAAM,OAAO,UAAQ;AACpC,UAAMO,IAAUP,EAAM,OAAO9H,CAAK;AAElC,QAAI,CAACs5B,GAAexxB,EAAM,OAAOO,CAAO;AACtC;AAGF,UAAMqzB,IAAa5zB,EAAM,eAAeO,CAAO;AAE/C,QAAIpF;AAEJ,WAAQA,IAAQy4B,EAAW,KAAK3iC,CAAK,KAAI;AACvC,YAAM4L,IAAS,YAAY0D,KAAW,EAAQA,EAAQ,SAChDzD,IAAQ,WAAWyD,GACnBtL,IAAWkG,EAAM,SAAS0B,IAAS1B,EAAM,CAAC,EAAE,SAAS;AAE3D,MAAIg7B,EAAU,SAASlhC,CAAQ,KACzBmhC,EAAMnhC,CAAQ,EAAE,UAAU,CAAC4H,MAC7Bu5B,EAAMnhC,CAAQ,EAAE,SAAS,KAGvBmhC,EAAMnhC,CAAQ,EAAE,SAAS,CAAC6H,MAC5Bs5B,EAAMnhC,CAAQ,EAAE,QAAQ,QAG1BkhC,EAAU,KAAKlhC,CAAQ,GACvBmhC,EAAMnhC,CAAQ,IAAI,EAAC,QAAA4H,GAAQ,OAAAC,EAAK;AAAA,IAEpC;AAAA,EACF;AAEA,EAAAq5B,EAAU,KAAKE,EAAS;AAExB,MAAIvxB,IAAQihB,EAAO,SAASA,EAAO,OAAO,SAAS;AACnD,QAAM1gB,IAAMpU,EAAM,UAAU80B,EAAO,QAAQA,EAAO,MAAM,SAAS;AAGjE,OAFA7tB,IAAQ,IAED,EAAEA,IAAQi+B,EAAU,UAAQ;AACjC,UAAMlhC,IAAWkhC,EAAUj+B,CAAK;AAGhC,IAAIjD,IAAW6P,KAAS7P,KAAYoQ,KAQjCpQ,IAAW,IAAIoQ,KACd8wB,EAAUj+B,IAAQ,CAAC,MAAMjD,IAAW,KACpCmhC,EAAMnhC,CAAQ,EAAE,SAChB,CAACmhC,EAAMnhC,IAAW,CAAC,EAAE,UACrB,CAACmhC,EAAMnhC,IAAW,CAAC,EAAE,SACtBkhC,EAAUj+B,IAAQ,CAAC,MAAMjD,IAAW,KACnCmhC,EAAMnhC,CAAQ,EAAE,UAChB,CAACmhC,EAAMnhC,IAAW,CAAC,EAAE,UACrB,CAACmhC,EAAMnhC,IAAW,CAAC,EAAE,UAKrB6P,MAAU7P,KAIZa,EAAO,KAAKwgC,GAAkBrlC,EAAM,MAAM6T,GAAO7P,CAAQ,GAAG,IAAI,CAAC,GAGnE6P,IAAQ7P,GAGN,iBAAiB,KAAKhE,EAAM,OAAOgE,CAAQ,CAAC,MAC3C,CAAC8wB,EAAO,UAAU,CAACA,EAAO,OAAO,SAAS90B,EAAM,OAAOgE,CAAQ,CAAC,KAGjEa,EAAO,KAAK,IAAI,KAGhBA,EAAO,KAAKu8B,GAAyBphC,EAAM,WAAWgE,CAAQ,CAAC,CAAC,GAChE6P;AAAA,EAEJ;AAEA,SAAAhP,EAAO,KAAKwgC,GAAkBrlC,EAAM,MAAM6T,GAAOO,CAAG,GAAG0gB,EAAO,KAAK,CAAC,GAE7DjwB,EAAO,KAAK,EAAE;AACvB;AAOA,SAASugC,GAAU35B,GAAGC,GAAG;AACvB,SAAOD,IAAIC;AACb;AAOA,SAAS25B,GAAkBrlC,GAAO6L,GAAO;AACvC,QAAM82B,IAAa,yBAEbuC,IAAY,CAAA,GAEZR,IAAU,CAAA,GACVY,IAAQtlC,IAAQ6L;AACtB,MAAI5E,IAAQ,IACR4M,IAAQ,GAER3J;AAEJ,SAAQA,IAAQy4B,EAAW,KAAK2C,CAAK;AACnC,IAAAJ,EAAU,KAAKh7B,EAAM,KAAK;AAG5B,SAAO,EAAEjD,IAAQi+B,EAAU;AACzB,IAAIrxB,MAAUqxB,EAAUj+B,CAAK,KAC3By9B,EAAQ,KAAK1kC,EAAM,MAAM6T,GAAOqxB,EAAUj+B,CAAK,CAAC,CAAC,GAGnDy9B,EAAQ,KAAK,IAAI,GACjB7wB,IAAQqxB,EAAUj+B,CAAK;AAGzB,SAAAy9B,EAAQ,KAAK1kC,EAAM,MAAM6T,CAAK,CAAC,GAExB6wB,EAAQ,KAAK,EAAE;AACxB;ACpKO,SAASa,GAAMzQ,GAAQ;AAI5B,QAAMt1B,IAAUs1B,KAAU,CAAA,GACpB1D,IAAM5xB,EAAQ,OAAO,CAAA;AAC3B,MAAIgmC,IAAYhmC,EAAQ,aAAa,GACjC4D,IAAOguB,EAAI,QAAQ,GACnBW,IAASX,EAAI,UAAU;AAE3B,SAAO,EAAC,MAAAqU,GAAM,SAAAnhB,GAAS,OAAAohB,EAAK;AAO5B,WAASphB,IAAU;AACjB,WAAO,EAAC,KAAK,EAAC,MAAAlhB,GAAM,QAAA2uB,EAAM,GAAG,WAAAyT,EAAS;AAAA,EACxC;AAOA,WAASE,EAAM1lC,GAAO;AACpB,IAAAwlC,KAAaxlC;AAAA,EACf;AAOA,WAASylC,EAAKR,GAAO;AAEnB,UAAMjlC,IAAQilC,KAAS,IACjBhV,IAASjwB,EAAM,MAAM,WAAW,GAChCqhB,IAAO4O,EAAOA,EAAO,SAAS,CAAC;AACrC,WAAA7sB,KAAQ6sB,EAAO,SAAS,GACxB8B,IACE9B,EAAO,WAAW,IAAI8B,IAAS1Q,EAAK,SAAS,IAAIA,EAAK,SAASmkB,GAC1DxlC;AAAA,EACT;AACF;ACzBO,SAAS2lC,GAAW9tB,GAAMrY,GAAS;AACxC,QAAM0Q,IAAW1Q,KAAW,CAAA,GAEtBuP,IAAQ;AAAA,IACZ,eAAeu1B;AAAA,IACf,mBAAmBsB;AAAA,IACnB,eAAeC;AAAA,IACf,eAAeN;AAAA,IACf,gBAAAhB;AAAA,IACA,OAAAzhB;AAAA;AAAA;AAAA,IAGA,UAAU,EAAC,GAAGud,GAAQ;AAAA;AAAA,IAEtB,QAAQ;AAAA,IACR,aAAA0E;AAAA,IACA,YAAY,CAAA;AAAA,IACZ,MAAM,CAAC,GAAG7wB,EAAI;AAAA,IACd,SAAS,CAAA;AAAA,IACT,MAAM4xB;AAAA,IACN,OAAO,CAAA;AAAA,IACP,QAAQ,CAAC,GAAGzB,EAAM;AAAA,EACtB;AAEE,EAAAzM,GAAU7oB,GAAOmB,CAAQ,GAErBnB,EAAM,QAAQ,oBAChBA,EAAM,KAAK,KAAKg3B,EAAc,GAGhCh3B,EAAM,SAASqxB,GAAO,QAAQ;AAAA,IAChC,SAAI4F;AAAAA,IACJ,SAAIC;AAAAA,IACA,UAAUl3B,EAAM;AAAA,EACpB,CAAG;AAED,MAAIlK,IAASkK,EAAM,OAAO8I,GAAM,QAAW9I,GAAO;AAAA,IAChD,QAAQ;AAAA;AAAA,IACR,OAAO;AAAA;AAAA,IACP,KAAK,EAAC,MAAM,GAAG,QAAQ,EAAC;AAAA,IACxB,WAAW;AAAA,EACf,CAAG;AAED,SACElK,KACAA,EAAO,WAAWA,EAAO,SAAS,CAAC,MAAM,MACzCA,EAAO,WAAWA,EAAO,SAAS,CAAC,MAAM,OAEzCA,KAAU;AAAA,IAGLA;AAGP,WAASie,EAAMrR,GAAM;AACnB,WAAA1C,EAAM,MAAM,KAAK0C,CAAI,GACd0O;AAKP,aAASA,IAAO;AACd,MAAApR,EAAM,MAAM,IAAG;AAAA,IACjB;AAAA,EACF;AACF;AAMA,SAASi3B,GAAQhmC,GAAO;AACtB,QAAM,IAAI,MAAM,0BAA0BA,IAAQ,kBAAkB;AACtE;AAMA,SAASimC,GAAQjmC,GAAO;AAEtB,QAAMsQ;AAAA;AAAA,IAA6BtQ;AAAA;AACnC,QAAM,IAAI,MAAM,iCAAiCsQ,EAAK,OAAO,GAAG;AAClE;AAGA,SAASy1B,GAAenkC,GAAMC,GAAO;AAEnC,MAAID,EAAK,SAAS,gBAAgBA,EAAK,SAASC,EAAM;AACpD,WAAO;AAEX;AAgBA,SAAS+jC,GAAuBhyB,GAAQ6N,GAAM;AAC5C,SAAO+iB,GAAkB5wB,GAAQ,MAAM6N,CAAI;AAC7C;AAiBA,SAASokB,GAAmBjyB,GAAQ6N,GAAM;AACxC,SAAOojB,GAAcjxB,GAAQ,MAAM6N,CAAI;AACzC;AA2BA,SAASqkB,GAAU9lC,GAAO80B,GAAQ;AAChC,SAAOkQ,GAAK,MAAMhlC,GAAO80B,CAAM;AACjC;AChJO,SAASoR,KAAuB;AACrC,SAAO;AAAA,IACL,OAAO;AAAA,MACL,OAAOC;AAAA,MACP,WAAWC;AAAA,MACX,aAAaA;AAAA,MACb,UAAUC;AAAA,IAChB;AAAA,IACI,MAAM;AAAA,MACJ,UAAUC;AAAA,MACV,OAAOC;AAAAA,MACP,WAAWpmB;AAAA,MACX,aAAaA;AAAA,MACb,UAAUA;AAAA,IAChB;AAAA,EACA;AACA;AAMA,SAASgmB,GAAWphC,GAAO;AACzB,QAAMw6B,IAAQx6B,EAAM;AAEpB,OAAK;AAAA,IACH;AAAA,MACE,MAAM;AAAA,MACN,OAAOw6B,EAAM,IAAI,SAAUtG,GAAG;AAC5B,eAAOA,MAAM,SAAS,OAAOA;AAAA,MAC/B,CAAC;AAAA,MACD,UAAU,CAAA;AAAA,IAChB;AAAA,IACIl0B;AAAA,EACJ,GACE,KAAK,KAAK,UAAU;AACtB;AAMA,SAASwhC,GAAUxhC,GAAO;AACxB,OAAK,KAAKA,CAAK,GACf,KAAK,KAAK,UAAU;AACtB;AAMA,SAASshC,GAASthC,GAAO;AACvB,OAAK,MAAM,EAAC,MAAM,YAAY,UAAU,CAAA,EAAE,GAAGA,CAAK;AACpD;AAMA,SAASob,GAAKpb,GAAO;AACnB,OAAK,KAAKA,CAAK;AACjB;AAMA,SAASqhC,GAAUrhC,GAAO;AACxB,OAAK,MAAM,EAAC,MAAM,aAAa,UAAU,CAAA,EAAE,GAAGA,CAAK;AACrD;AAQA,SAASuhC,GAAavhC,GAAO;AAC3B,MAAI/E,IAAQ,KAAK,OAAM;AAEvB,EAAI,KAAK,KAAK,YACZA,IAAQA,EAAM,QAAQ,cAAc+b,EAAO;AAG7C,QAAMzL,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CssB,EAAOtsB,EAAK,MACZA,EAAK,QAAQtQ,GACb,KAAK,KAAK+E,CAAK;AACjB;AAOA,SAASgX,GAAQ0Y,GAAIC,GAAI;AAEvB,SAAOA,MAAO,MAAMA,IAAKD;AAC3B;AAWO,SAAS+R,GAAmBhnC,GAAS;AAC1C,QAAM0Q,IAAW1Q,KAAW,CAAA,GACtBinC,IAAUv2B,EAAS,kBACnBw2B,IAAkBx2B,EAAS,gBAC3BsvB,IAAetvB,EAAS,cACxBy2B,IAASF,IAAU,MAAM;AAE/B,SAAO;AAAA,IACL,QAAQ;AAAA,MACN,EAAC,WAAW,MAAM,aAAa,YAAW;AAAA,MAC1C,EAAC,WAAW;AAAA,GAAM,aAAa,YAAW;AAAA;AAAA;AAAA,MAG1C,EAAC,SAAS,IAAM,WAAW,KAAK,OAAO,SAAS;AAAA;AAAA,MAEhD,EAAC,WAAW,KAAK,aAAa,YAAW;AAAA;AAAA;AAAA,MAGzC,EAAC,SAAS,IAAM,WAAW,KAAK,OAAO,IAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM1C,EAAC,SAAS,IAAM,WAAW,KAAK,OAAO,QAAO;AAAA,IACpD;AAAA,IACI,UAAU;AAAA,MACR,YAAYG;AAAA,MACZ,OAAOC;AAAA,MACP,WAAWC;AAAA,MACX,UAAUC;AAAA,IAChB;AAAA,EACA;AAME,WAASF,EAAYv2B,GAAM+hB,GAAGtjB,GAAO0S,GAAM;AACzC,WAAOulB,EAAcC,EAAkB32B,GAAMvB,GAAO0S,CAAI,GAAGnR,EAAK,KAAK;AAAA,EACvE;AAUA,WAASy2B,EAAez2B,GAAM+hB,GAAGtjB,GAAO0S,GAAM;AAC5C,UAAMse,IAAMmH,EAAqB52B,GAAMvB,GAAO0S,CAAI,GAC5CzhB,IAAQgnC,EAAc,CAACjH,CAAG,CAAC;AAEjC,WAAO//B,EAAM,MAAM,GAAGA,EAAM,QAAQ;AAAA,CAAI,CAAC;AAAA,EAC3C;AAMA,WAAS8mC,EAAgBx2B,GAAM+hB,GAAGtjB,GAAO0S,GAAM;AAC7C,UAAMtB,IAAOpR,EAAM,MAAM,WAAW,GAC9BsvB,IAAUtvB,EAAM,MAAM,UAAU,GAChC/O,IAAQ+O,EAAM,kBAAkBuB,GAAM;AAAA,MAC1C,GAAGmR;AAAA,MACH,QAAQklB;AAAA,MACR,OAAOA;AAAA,IACb,CAAK;AACD,WAAAtI,EAAO,GACPle,EAAI,GACGngB;AAAA,EACT;AAMA,WAASgnC,EAAcG,GAAQ5H,GAAO;AACpC,WAAOF,GAAc8H,GAAQ;AAAA,MAC3B,OAAA5H;AAAA;AAAA,MAEA,iBAAAmH;AAAA;AAAA,MAEA,SAAAD;AAAA;AAAA,MAEA,cAAAjH;AAAA,IACN,CAAK;AAAA,EACH;AAOA,WAASyH,EAAkB32B,GAAMvB,GAAO0S,GAAM;AAC5C,UAAMuX,IAAW1oB,EAAK;AACtB,QAAIrJ,IAAQ;AAEZ,UAAMpC,IAAS,CAAA,GACTw5B,IAAUtvB,EAAM,MAAM,OAAO;AAEnC,WAAO,EAAE9H,IAAQ+xB,EAAS;AACxB,MAAAn0B,EAAOoC,CAAK,IAAIigC,EAAqBlO,EAAS/xB,CAAK,GAAG8H,GAAO0S,CAAI;AAGnE,WAAA4c,EAAO,GAEAx5B;AAAA,EACT;AAOA,WAASqiC,EAAqB52B,GAAMvB,GAAO0S,GAAM;AAC/C,UAAMuX,IAAW1oB,EAAK;AACtB,QAAIrJ,IAAQ;AAEZ,UAAMpC,IAAS,CAAA,GACTw5B,IAAUtvB,EAAM,MAAM,UAAU;AAEtC,WAAO,EAAE9H,IAAQ+xB,EAAS;AAIxB,MAAAn0B,EAAOoC,CAAK,IAAI6/B,EAAgB9N,EAAS/xB,CAAK,GAAGqJ,GAAMvB,GAAO0S,CAAI;AAGpE,WAAA4c,EAAO,GAEAx5B;AAAA,EACT;AAMA,WAAS+hC,EAAoBt2B,GAAMsD,GAAQ7E,GAAO;AAChD,QAAI/O,IAAQonC,GAAgB,WAAW92B,GAAMsD,GAAQ7E,CAAK;AAE1D,WAAIA,EAAM,MAAM,SAAS,WAAW,MAClC/O,IAAQA,EAAM,QAAQ,OAAO,MAAM,IAG9BA;AAAA,EACT;AACF;ACvRO,SAASqnC,KAA8B;AAC5C,SAAO;AAAA,IACL,MAAM;AAAA,MACJ,2BAA2BC;AAAA,MAC3B,6BAA6BA;AAAA,MAC7B,WAAWC;AAAA,IACjB;AAAA,EACA;AACA;AASO,SAASC,KAA4B;AAC1C,SAAO;AAAA,IACL,QAAQ,CAAC,EAAC,SAAS,IAAM,WAAW,KAAK,OAAO,QAAO,CAAC;AAAA,IACxD,UAAU,EAAC,UAAUC,GAAwB;AAAA,EACjD;AACA;AAMA,SAASH,GAAUviC,GAAO;AAExB,QAAMuL,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CssB,EAAOtsB,EAAK,MACZA,EAAK,UAAUvL,EAAM,SAAS;AAChC;AAMA,SAASwiC,GAA8BxiC,GAAO;AAC5C,QAAM6O,IAAS,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAE/C,MACEA,KACAA,EAAO,SAAS,cAChB,OAAOA,EAAO,WAAY,WAC1B;AACA,UAAMtD,IAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC7CssB,IAAOtsB,EAAK;AACZ,UAAMojB,IAAOpjB,EAAK,SAAS,CAAC;AAE5B,QAAIojB,KAAQA,EAAK,SAAS,QAAQ;AAChC,YAAMmF,IAAWjlB,EAAO;AACxB,UAAI3M,IAAQ,IAERygC;AAEJ,aAAO,EAAEzgC,IAAQ4xB,EAAS,UAAQ;AAChC,cAAM8O,IAAU9O,EAAS5xB,CAAK;AAC9B,YAAI0gC,EAAQ,SAAS,aAAa;AAChC,UAAAD,IAAkBC;AAClB;AAAA,QACF;AAAA,MACF;AAEA,MAAID,MAAoBp3B,MAEtBojB,EAAK,QAAQA,EAAK,MAAM,MAAM,CAAC,GAE3BA,EAAK,MAAM,WAAW,IACxBpjB,EAAK,SAAS,MAAK,IAEnBA,EAAK,YACLojB,EAAK,YACL,OAAOA,EAAK,SAAS,MAAM,UAAW,aAEtCA,EAAK,SAAS,MAAM,UACpBA,EAAK,SAAS,MAAM,UACpBpjB,EAAK,SAAS,QAAQ,OAAO,OAAO,IAAIojB,EAAK,SAAS,KAAK;AAAA,IAGjE;AAAA,EACF;AAEA,OAAK,KAAK3uB,CAAK;AACjB;AAMA,SAAS0iC,GAAyBn3B,GAAMsD,GAAQ7E,GAAO0S,GAAM;AAC3D,QAAMiS,IAAOpjB,EAAK,SAAS,CAAC,GACtBs3B,IACJ,OAAOt3B,EAAK,WAAY,aAAaojB,KAAQA,EAAK,SAAS,aACvDmU,IAAW,OAAOv3B,EAAK,UAAU,MAAM,OAAO,MAC9C8tB,IAAUrvB,EAAM,cAAc0S,CAAI;AAExC,EAAImmB,KACFxJ,EAAQ,KAAKyJ,CAAQ;AAGvB,MAAI7nC,IAAQonC,GAAgB,SAAS92B,GAAMsD,GAAQ7E,GAAO;AAAA,IACxD,GAAG0S;AAAA,IACH,GAAG2c,EAAQ,QAAO;AAAA,EACtB,CAAG;AAED,SAAIwJ,MACF5nC,IAAQA,EAAM,QAAQ,mCAAmC4b,CAAK,IAGzD5b;AAMP,WAAS4b,EAAM6Y,GAAI;AACjB,WAAOA,IAAKoT;AAAA,EACd;AACF;AC5GO,SAASC,KAAkB;AAChC,SAAO;AAAA,IACL3L,GAA8B;AAAA,IAC9BmC,GAAuB;AAAA,IACvBU,GAA4B;AAAA,IAC5BkH,GAAoB;AAAA,IACpBmB,GAA2B;AAAA,EAC/B;AACA;AAYO,SAASU,GAAcvoC,GAAS;AACrC,SAAO;AAAA,IACL,YAAY;AAAA,MACVm9B,GAA4B;AAAA,MAC5B4B,GAAsB/+B,CAAO;AAAA,MAC7B2/B,GAA0B;AAAA,MAC1BqH,GAAmBhnC,CAAO;AAAA,MAC1BgoC,GAAyB;AAAA,IAC/B;AAAA,EACA;AACA;ACzDA,MAAMQ,KAAY;AAAA,EAChB,UAAUC;AAAA,EACV,SAAS;AACX,GACMjL,KAAS;AAAA,EACb,UAAUkL;AAAA,EACV,SAAS;AACX,GACM7mC,KAAO;AAAA,EACX,UAAU8mC;AAAA,EACV,SAAS;AACX,GACM9K,KAAQ;AAAA,EACZ,UAAU+K;AAAA,EACV,SAAS;AACX,GACMC,KAAsB;AAAA,EAC1B,UAAUC;AAAA,EACV,SAAS;AACX,GACMC,KAAc;AAAA,EAClB,MAAM;AAAA,EACN,UAAUC;AAAA,EACV,UAAUC;AACZ,GACMC,KAAmB;AAAA,EACvB,MAAM;AAAA,EACN,UAAUC;AAAA,EACV,UAAUC;AACZ,GACMC,KAAgB;AAAA,EACpB,MAAM;AAAA,EACN,UAAUC;AAAA,EACV,UAAUC;AACZ,GAGM7jC,KAAO,CAAA;AAUN,SAAS8jC,KAAqB;AACnC,SAAO;AAAA,IACT,MAAI9jC;AAAAA,EACJ;AACA;AAGA,IAAI0P,KAAO;AAGX,OAAOA,KAAO;AACZ1P,EAAAA,GAAK0P,EAAI,IAAIi0B,IACbj0B,MACIA,OAAS,KAAIA,KAAO,KAAYA,OAAS,OAAIA,KAAO;AAE1D1P,GAAK,EAAE,IAAI2jC;AACX3jC,GAAK,EAAE,IAAI2jC;AACX3jC,GAAK,EAAE,IAAI2jC;AACX3jC,GAAK,EAAE,IAAI2jC;AACX3jC,GAAK,EAAE,IAAI,CAAC2jC,IAAeH,EAAgB;AAC3CxjC,GAAK,GAAG,IAAI,CAAC2jC,IAAeH,EAAgB;AAC5CxjC,GAAK,EAAE,IAAI,CAAC2jC,IAAeN,EAAW;AACtCrjC,GAAK,GAAG,IAAI,CAAC2jC,IAAeN,EAAW;AAmBvC,SAASO,GAAsB7sB,GAASC,GAAIkC,GAAK;AAC/C,QAAMnH,IAAO;AAEb,MAAIgyB,GAEA77B;AACJ,SAAOyG;AAYP,WAASA,EAAMe,GAAM;AACnB,WAAI,CAACs0B,GAASt0B,CAAI,KAAK,CAACm0B,GAAc,KAAK9xB,GAAMA,EAAK,QAAQ,KAAKkyB,GAAmBlyB,EAAK,MAAM,IACxFmH,EAAIxJ,CAAI,KAEjBqH,EAAQ,MAAM,iBAAiB,GAC/BA,EAAQ,MAAM,sBAAsB,GAC7BkhB,EAAMvoB,CAAI;AAAA,EACnB;AAYA,WAASuoB,EAAMvoB,GAAM;AACnB,WAAIs0B,GAASt0B,CAAI,KACfqH,EAAQ,QAAQrH,CAAI,GACbuoB,KAELvoB,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACbw0B,KAEFhrB,EAAIxJ,CAAI;AAAA,EACjB;AAgBA,WAASw0B,EAAYx0B,GAAM;AAEzB,WAAIA,MAAS,KACJqH,EAAQ,MAAMosB,IAAqBgB,GAAkBC,CAAc,EAAE10B,CAAI,IAI9EA,MAAS,MAAMA,MAAS,MAAMqG,GAAkBrG,CAAI,KACtDxH,IAAO,IACP6O,EAAQ,QAAQrH,CAAI,GACbw0B,KASFC,EAAiBz0B,CAAI;AAAA,EAC9B;AAYA,WAAS00B,EAAe10B,GAAM;AAC5B,WAAAqH,EAAQ,QAAQrH,CAAI,GACpBq0B,IAAM,IACCG;AAAA,EACT;AAYA,WAASC,EAAiBz0B,GAAM;AAG9B,WAAIxH,KAAQ67B,KAAOluB,GAAW9D,EAAK,QAAQ,KACzCgF,EAAQ,KAAK,sBAAsB,GACnCA,EAAQ,KAAK,iBAAiB,GACvBC,EAAGtH,CAAI,KAETwJ,EAAIxJ,CAAI;AAAA,EACjB;AACF;AAaA,SAAS4zB,GAAoBvsB,GAASC,GAAIkC,GAAK;AAC7C,QAAMnH,IAAO;AACb,SAAOsyB;AAYP,WAASA,EAAS30B,GAAM;AACtB,WAAIA,MAAS,MAAMA,MAAS,OAAO,CAAC6zB,GAAY,KAAKxxB,GAAMA,EAAK,QAAQ,KAAKkyB,GAAmBlyB,EAAK,MAAM,IAClGmH,EAAIxJ,CAAI,KAEjBqH,EAAQ,MAAM,iBAAiB,GAC/BA,EAAQ,MAAM,oBAAoB,GAG3BA,EAAQ,MAAM+rB,IAAW/rB,EAAQ,QAAQ+gB,IAAQ/gB,EAAQ,QAAQ5a,IAAMmoC,CAAQ,GAAGprB,CAAG,GAAGA,CAAG,EAAExJ,CAAI;AAAA,EAC1G;AAYA,WAAS40B,EAAS50B,GAAM;AACtB,WAAAqH,EAAQ,KAAK,oBAAoB,GACjCA,EAAQ,KAAK,iBAAiB,GACvBC,EAAGtH,CAAI;AAAA,EAChB;AACF;AAaA,SAAS+zB,GAAyB1sB,GAASC,GAAIkC,GAAK;AAClD,QAAMnH,IAAO;AACb,MAAIjQ,IAAS,IACTmX,IAAO;AACX,SAAOsrB;AAYP,WAASA,EAAc70B,GAAM;AAC3B,YAAKA,MAAS,MAAMA,MAAS,QAAQg0B,GAAiB,KAAK3xB,GAAMA,EAAK,QAAQ,KAAK,CAACkyB,GAAmBlyB,EAAK,MAAM,KAChHgF,EAAQ,MAAM,iBAAiB,GAC/BA,EAAQ,MAAM,qBAAqB,GACnCjV,KAAU,OAAO,cAAc4N,CAAI,GACnCqH,EAAQ,QAAQrH,CAAI,GACb80B,KAEFtrB,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAAS80B,EAAqB90B,GAAM;AAElC,QAAImG,GAAWnG,CAAI,KAAK5N,EAAO,SAAS;AAEtC,aAAAA,KAAU,OAAO,cAAc4N,CAAI,GACnCqH,EAAQ,QAAQrH,CAAI,GACb80B;AAET,QAAI90B,MAAS,IAAI;AACf,YAAMmoB,IAAW/1B,EAAO,YAAW;AACnC,UAAI+1B,MAAa,UAAUA,MAAa;AACtC,eAAA9gB,EAAQ,QAAQrH,CAAI,GACb+0B;AAAA,IAEX;AACA,WAAOvrB,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAAS+0B,EAAsB/0B,GAAM;AACnC,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GAChBuJ,IACKyrB,KAETzrB,IAAO,IACAwrB,MAEFvrB,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAASg1B,EAAch1B,GAAM;AAG3B,WAAOA,MAAS,QAAQuG,GAAavG,CAAI,KAAK4G,GAA0B5G,CAAI,KAAK+G,GAAkB/G,CAAI,KAAK8G,GAAmB9G,CAAI,IAAIwJ,EAAIxJ,CAAI,IAAIqH,EAAQ,QAAQ+gB,IAAQ/gB,EAAQ,QAAQ5a,IAAMwoC,CAAa,GAAGzrB,CAAG,EAAExJ,CAAI;AAAA,EAC5N;AAYA,WAASi1B,EAAcj1B,GAAM;AAC3B,WAAAqH,EAAQ,KAAK,qBAAqB,GAClCA,EAAQ,KAAK,iBAAiB,GACvBC,EAAGtH,CAAI;AAAA,EAChB;AACF;AAaA,SAASqzB,GAAkBhsB,GAASC,GAAIkC,GAAK;AAC3C,MAAIhC,IAAO;AACX,SAAO0tB;AAYP,WAASA,EAAgBl1B,GAAM;AAC7B,YAAKA,MAAS,MAAMA,MAAS,QAAQwH,IAAO,KAC1CA,KACAH,EAAQ,QAAQrH,CAAI,GACbk1B,KAELl1B,MAAS,MAAMwH,MAAS,KAC1BH,EAAQ,QAAQrH,CAAI,GACbm1B,KAEF3rB,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAASm1B,EAAen1B,GAAM;AAE5B,WAAOA,MAAS,OAAOwJ,EAAIxJ,CAAI,IAAIsH,EAAGtH,CAAI;AAAA,EAC5C;AACF;AAaA,SAASszB,GAAejsB,GAASC,GAAIkC,GAAK;AAExC,MAAI4rB,GAEAC,GAEA9rB;AACJ,SAAO+rB;AAYP,WAASA,EAAat1B,GAAM;AAI1B,WAAIA,MAAS,MAAMA,MAAS,KACnBqH,EAAQ,MAAMohB,IAAO8M,GAAaC,CAAmB,EAAEx1B,CAAI,IAShEA,MAAS,QAAQ4G,GAA0B5G,CAAI,KAAK+G,GAAkB/G,CAAI,KAAKA,MAAS,MAAM8G,GAAmB9G,CAAI,IAChHu1B,EAAYv1B,CAAI,KAEzBuJ,IAAO,IACPlC,EAAQ,QAAQrH,CAAI,GACbs1B;AAAA,EACT;AAYA,WAASE,EAAoBx1B,GAAM;AAEjC,WAAIA,MAAS,KACXo1B,IAA0B,MAK1BC,IAA8BD,GAC9BA,IAA0B,SAE5B/tB,EAAQ,QAAQrH,CAAI,GACbs1B;AAAA,EACT;AAWA,WAASC,EAAYv1B,GAAM;AAGzB,WAAIq1B,KAA+BD,KAA2B,CAAC7rB,IACtDC,EAAIxJ,CAAI,IAEVsH,EAAGtH,CAAI;AAAA,EAChB;AACF;AAaA,SAASuzB,GAAalsB,GAASC,GAAI;AACjC,MAAIiF,IAAW,GACXkpB,IAAY;AAChB,SAAOC;AAYP,WAASA,EAAW11B,GAAM;AACxB,WAAIA,MAAS,MACXuM,KACAlF,EAAQ,QAAQrH,CAAI,GACb01B,KAML11B,MAAS,MAAMy1B,IAAYlpB,IACtBopB,EAAkB31B,CAAI,IAM3BA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACtNqH,EAAQ,MAAMohB,IAAOnhB,GAAIquB,CAAiB,EAAE31B,CAAI,IAErDA,MAAS,QAAQ4G,GAA0B5G,CAAI,KAAK+G,GAAkB/G,CAAI,IACrEsH,EAAGtH,CAAI,KAEhBqH,EAAQ,QAAQrH,CAAI,GACb01B;AAAA,EACT;AAYA,WAASC,EAAkB31B,GAAM;AAE/B,WAAIA,MAAS,MACXy1B,KAEFpuB,EAAQ,QAAQrH,CAAI,GACb01B;AAAA,EACT;AACF;AAiBA,SAASlC,GAAcnsB,GAASC,GAAIkC,GAAK;AACvC,SAAOif;AAYP,WAASA,EAAMzoB,GAAM;AAEnB,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,OAChLqH,EAAQ,QAAQrH,CAAI,GACbyoB,KAMLzoB,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACb41B,KAML51B,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACb61B;AAAA;AAAA,MAIT71B,MAAS;AAAA,MAETA,MAAS,QAAQ4G,GAA0B5G,CAAI,KAAK+G,GAAkB/G,CAAI,IACjEsH,EAAGtH,CAAI,IAETwJ,EAAIxJ,CAAI;AAAA;AAAA,EACjB;AAeA,WAAS61B,EAAkB71B,GAAM;AAG/B,WAAIA,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAM4G,GAA0B5G,CAAI,KAAK+G,GAAkB/G,CAAI,IACnGsH,EAAGtH,CAAI,IAETyoB,EAAMzoB,CAAI;AAAA,EACnB;AAYA,WAAS41B,EAA6B51B,GAAM;AAE1C,WAAOmG,GAAWnG,CAAI,IAAI81B,EAA8B91B,CAAI,IAAIwJ,EAAIxJ,CAAI;AAAA,EAC1E;AAYA,WAAS81B,EAA8B91B,GAAM;AAE3C,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACbyoB,KAELtiB,GAAWnG,CAAI,KACjBqH,EAAQ,QAAQrH,CAAI,GACb81B,KAIFtsB,EAAIxJ,CAAI;AAAA,EACjB;AACF;AAiBA,SAAS0zB,GAA4BrsB,GAASC,GAAIkC,GAAK;AACrD,SAAOvK;AAYP,WAASA,EAAMe,GAAM;AAEnB,WAAAqH,EAAQ,QAAQrH,CAAI,GACb/I;AAAA,EACT;AAYA,WAASA,EAAM+I,GAAM;AAEnB,WAAOqG,GAAkBrG,CAAI,IAAIwJ,EAAIxJ,CAAI,IAAIsH,EAAGtH,CAAI;AAAA,EACtD;AACF;AAQA,SAAS6zB,GAAY7zB,GAAM;AACzB,SAAOA,MAAS,QAAQA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,OAAO4G,GAA0B5G,CAAI;AACnJ;AAQA,SAASg0B,GAAiBh0B,GAAM;AAC9B,SAAO,CAACmG,GAAWnG,CAAI;AACzB;AAMA,SAASm0B,GAAcn0B,GAAM;AAK3B,SAAO,EAAEA,MAAS,MAAMs0B,GAASt0B,CAAI;AACvC;AAMA,SAASs0B,GAASt0B,GAAM;AACtB,SAAOA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MAAMqG,GAAkBrG,CAAI;AAC3F;AAMA,SAASu0B,GAAmB5qB,GAAQ;AAClC,MAAItX,IAAQsX,EAAO,QACf1Z,IAAS;AACb,SAAOoC,OAAS;AACd,UAAMlC,IAAQwZ,EAAOtX,CAAK,EAAE,CAAC;AAC7B,SAAKlC,EAAM,SAAS,eAAeA,EAAM,SAAS,iBAAiB,CAACA,EAAM,WAAW;AACnF,MAAAF,IAAS;AACT;AAAA,IACF;AAIA,QAAIE,EAAM,+BAA+B;AACvC,MAAAF,IAAS;AACT;AAAA,IACF;AAAA,EACF;AACA,SAAI0Z,EAAO,SAAS,KAAK,CAAC1Z,MAGxB0Z,EAAOA,EAAO,SAAS,CAAC,EAAE,CAAC,EAAE,gCAAgC,KAExD1Z;AACT;AC70BA,MAAMgG,KAAS;AAAA,EACb,UAAU0jB;AAAA,EACV,SAAS;AACX;AAeO,SAASoc,KAAc;AAE5B,SAAO;AAAA,IACL,UAAU;AAAA,MACP,IAAK;AAAA,QACJ,MAAM;AAAA,QACN,UAAUC;AAAA,QACV,cAAc;AAAA,UACZ,UAAUC;AAAA,QACpB;AAAA,QACQ,MAAMC;AAAA,MACd;AAAA,IACA;AAAA,IACI,MAAM;AAAA,MACH,IAAK;AAAA,QACJ,MAAM;AAAA,QACN,UAAUC;AAAA,MAClB;AAAA,MACO,IAAK;AAAA,QACJ,MAAM;AAAA,QACN,KAAK;AAAA,QACL,UAAUC;AAAA,QACV,WAAWC;AAAA,MACnB;AAAA,IACA;AAAA,EACA;AACA;AAOA,SAASD,GAAiC/uB,GAASC,GAAIkC,GAAK;AAC1D,QAAMnH,IAAO;AACb,MAAIhQ,IAAQgQ,EAAK,OAAO;AACxB,QAAMsV,IAAUtV,EAAK,OAAO,iBAAiBA,EAAK,OAAO,eAAe;AAExE,MAAIqV;AAGJ,SAAOrlB,OAAS;AACd,UAAMlC,IAAQkS,EAAK,OAAOhQ,CAAK,EAAE,CAAC;AAClC,QAAIlC,EAAM,SAAS,cAAc;AAC/B,MAAAunB,IAAavnB;AACb;AAAA,IACF;AAGA,QAAIA,EAAM,SAAS,qBAAqBA,EAAM,SAAS,eAAeA,EAAM,SAAS,WAAWA,EAAM,SAAS,WAAWA,EAAM,SAAS;AACvI;AAAA,EAEJ;AACA,SAAO8O;AAKP,WAASA,EAAMe,GAAM;AACnB,QAAI,CAAC0X,KAAc,CAACA,EAAW;AAC7B,aAAOlO,EAAIxJ,CAAI;AAEjB,UAAMxI,IAAK0O,GAAoB7D,EAAK,eAAe;AAAA,MACjD,OAAOqV,EAAW;AAAA,MAClB,KAAKrV,EAAK,IAAG;AAAA,IACnB,CAAK,CAAC;AACF,WAAI7K,EAAG,YAAY,CAAC,MAAM,MAAM,CAACmgB,EAAQ,SAASngB,EAAG,MAAM,CAAC,CAAC,IACpDgS,EAAIxJ,CAAI,KAEjBqH,EAAQ,MAAM,4BAA4B,GAC1CA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,4BAA4B,GAClCC,EAAGtH,CAAI;AAAA,EAChB;AACF;AAIA,SAASq2B,GAAkC1sB,GAAQC,GAAS;AAC1D,MAAIvX,IAAQsX,EAAO;AAKnB,SAAOtX;AACL,QAAIsX,EAAOtX,CAAK,EAAE,CAAC,EAAE,SAAS,gBAAgBsX,EAAOtX,CAAK,EAAE,CAAC,MAAM,SAAS;AAC7D,MAAAsX,EAAOtX,CAAK,EAAE,CAAC;AAC5B;AAAA,IACF;AAGF,EAAAsX,EAAOtX,IAAQ,CAAC,EAAE,CAAC,EAAE,OAAO,QAC5BsX,EAAOtX,IAAQ,CAAC,EAAE,CAAC,EAAE,OAAO;AAI5B,QAAMikC,IAAO;AAAA,IACX,MAAM;AAAA,IACN,OAAO,OAAO,OAAO,IAAI3sB,EAAOtX,IAAQ,CAAC,EAAE,CAAC,EAAE,KAAK;AAAA,IACnD,KAAK,OAAO,OAAO,CAAA,GAAIsX,EAAOA,EAAO,SAAS,CAAC,EAAE,CAAC,EAAE,GAAG;AAAA,EAC3D,GAGQlU,IAAS;AAAA,IACb,MAAM;AAAA,IACN,OAAO,OAAO,OAAO,IAAIkU,EAAOtX,IAAQ,CAAC,EAAE,CAAC,EAAE,GAAG;AAAA,IACjD,KAAK,OAAO,OAAO,IAAIsX,EAAOtX,IAAQ,CAAC,EAAE,CAAC,EAAE,GAAG;AAAA,EACnD;AAEE,EAAAoD,EAAO,IAAI,UACXA,EAAO,IAAI,UACXA,EAAO,IAAI;AAEX,QAAMqlB,IAAS;AAAA,IACb,MAAM;AAAA,IACN,OAAO,OAAO,OAAO,CAAA,GAAIrlB,EAAO,GAAG;AAAA,IACnC,KAAK,OAAO,OAAO,CAAA,GAAIkU,EAAOA,EAAO,SAAS,CAAC,EAAE,CAAC,EAAE,KAAK;AAAA,EAC7D,GAEQ6R,IAAQ;AAAA,IACZ,MAAM;AAAA,IACN,aAAa;AAAA,IACb,OAAO,OAAO,OAAO,CAAA,GAAIV,EAAO,KAAK;AAAA,IACrC,KAAK,OAAO,OAAO,CAAA,GAAIA,EAAO,GAAG;AAAA,EACrC,GAGQyb,IAAc;AAAA;AAAA,IAEpB5sB,EAAOtX,IAAQ,CAAC;AAAA,IAAGsX,EAAOtX,IAAQ,CAAC;AAAA,IAAG,CAAC,SAASikC,GAAM1sB,CAAO;AAAA;AAAA,IAE7DD,EAAOtX,IAAQ,CAAC;AAAA,IAAGsX,EAAOtX,IAAQ,CAAC;AAAA;AAAA,IAEnC,CAAC,SAASoD,GAAQmU,CAAO;AAAA,IAAG,CAAC,QAAQnU,GAAQmU,CAAO;AAAA;AAAA,IAEpD,CAAC,SAASkR,GAAQlR,CAAO;AAAA,IAAG,CAAC,SAAS4R,GAAO5R,CAAO;AAAA,IAAG,CAAC,QAAQ4R,GAAO5R,CAAO;AAAA,IAAG,CAAC,QAAQkR,GAAQlR,CAAO;AAAA;AAAA,IAEzGD,EAAOA,EAAO,SAAS,CAAC;AAAA,IAAGA,EAAOA,EAAO,SAAS,CAAC;AAAA,IAAG,CAAC,QAAQ2sB,GAAM1sB,CAAO;AAAA,EAAC;AAC7E,SAAAD,EAAO,OAAOtX,GAAOsX,EAAO,SAAStX,IAAQ,GAAG,GAAGkkC,CAAW,GACvD5sB;AACT;AAMA,SAASwsB,GAAwB9uB,GAASC,GAAIkC,GAAK;AACjD,QAAMnH,IAAO,MACPsV,IAAUtV,EAAK,OAAO,iBAAiBA,EAAK,OAAO,eAAe;AACxE,MAAImF,IAAO,GAEPhP;AAOJ,SAAOyG;AAYP,WAASA,EAAMe,GAAM;AACnB,WAAAqH,EAAQ,MAAM,iBAAiB,GAC/BA,EAAQ,MAAM,4BAA4B,GAC1CA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,4BAA4B,GAClCmvB;AAAA,EACT;AAYA,WAASA,EAAUx2B,GAAM;AACvB,WAAIA,MAAS,KAAWwJ,EAAIxJ,CAAI,KAChCqH,EAAQ,MAAM,uBAAuB,GACrCA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,uBAAuB,GACpCA,EAAQ,MAAM,uBAAuB,GACrCA,EAAQ,MAAM,aAAa,EAAE,cAAc,UACpCovB;AAAA,EACT;AAYA,WAASA,EAASz2B,GAAM;AACtB;AAAA;AAAA,MAEAwH,IAAO;AAAA,MAEPxH,MAAS,MAAM,CAACxH;AAAA;AAAA,MAGhBwH,MAAS,QAAQA,MAAS,MAAM4G,GAA0B5G,CAAI;AAAA;AAC5D,aAAOwJ,EAAIxJ,CAAI;AAEjB,QAAIA,MAAS,IAAI;AACf,MAAAqH,EAAQ,KAAK,aAAa;AAC1B,YAAMlX,IAAQkX,EAAQ,KAAK,uBAAuB;AAClD,aAAKsQ,EAAQ,SAASzR,GAAoB7D,EAAK,eAAelS,CAAK,CAAC,CAAC,KAGrEkX,EAAQ,MAAM,4BAA4B,GAC1CA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,4BAA4B,GACzCA,EAAQ,KAAK,iBAAiB,GACvBC,KANEkC,EAAIxJ,CAAI;AAAA,IAOnB;AACA,WAAK4G,GAA0B5G,CAAI,MACjCxH,IAAO,KAETgP,KACAH,EAAQ,QAAQrH,CAAI,GACbA,MAAS,KAAK02B,IAAaD;AAAA,EACpC;AAYA,WAASC,EAAW12B,GAAM;AACxB,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACzCqH,EAAQ,QAAQrH,CAAI,GACpBwH,KACOivB,KAEFA,EAASz2B,CAAI;AAAA,EACtB;AACF;AAMA,SAASg2B,GAAwB3uB,GAASC,GAAIkC,GAAK;AACjD,QAAMnH,IAAO,MACPsV,IAAUtV,EAAK,OAAO,iBAAiBA,EAAK,OAAO,eAAe;AAExE,MAAIyP,GACAtK,IAAO,GAEPhP;AACJ,SAAOyG;AAYP,WAASA,EAAMe,GAAM;AACnB,WAAAqH,EAAQ,MAAM,uBAAuB,EAAE,aAAa,IACpDA,EAAQ,MAAM,4BAA4B,GAC1CA,EAAQ,MAAM,kCAAkC,GAChDA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,kCAAkC,GACxCsvB;AAAA,EACT;AAYA,WAASA,EAAc32B,GAAM;AAC3B,WAAIA,MAAS,MACXqH,EAAQ,MAAM,6BAA6B,GAC3CA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,6BAA6B,GAC1CA,EAAQ,MAAM,kCAAkC,GAChDA,EAAQ,MAAM,aAAa,EAAE,cAAc,UACpC+J,KAEF5H,EAAIxJ,CAAI;AAAA,EACjB;AAeA,WAASoR,EAAYpR,GAAM;AACzB;AAAA;AAAA,MAEAwH,IAAO;AAAA,MAEPxH,MAAS,MAAM,CAACxH;AAAA;AAAA,MAGhBwH,MAAS,QAAQA,MAAS,MAAM4G,GAA0B5G,CAAI;AAAA;AAC5D,aAAOwJ,EAAIxJ,CAAI;AAEjB,QAAIA,MAAS,IAAI;AACf,MAAAqH,EAAQ,KAAK,aAAa;AAC1B,YAAMlX,IAAQkX,EAAQ,KAAK,kCAAkC;AAC7D,aAAAyK,IAAa5L,GAAoB7D,EAAK,eAAelS,CAAK,CAAC,GAC3DkX,EAAQ,MAAM,kCAAkC,GAChDA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,kCAAkC,GAC/CA,EAAQ,KAAK,4BAA4B,GAClC0K;AAAA,IACT;AACA,WAAKnL,GAA0B5G,CAAI,MACjCxH,IAAO,KAETgP,KACAH,EAAQ,QAAQrH,CAAI,GACbA,MAAS,KAAKqR,IAAcD;AAAA,EACrC;AAeA,WAASC,EAAYrR,GAAM;AACzB,WAAIA,MAAS,MAAMA,MAAS,MAAMA,MAAS,MACzCqH,EAAQ,QAAQrH,CAAI,GACpBwH,KACO4J,KAEFA,EAAYpR,CAAI;AAAA,EACzB;AAYA,WAAS+R,EAAW/R,GAAM;AACxB,WAAIA,MAAS,MACXqH,EAAQ,MAAM,kBAAkB,GAChCA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,kBAAkB,GAC1BsQ,EAAQ,SAAS7F,CAAU,KAC9B6F,EAAQ,KAAK7F,CAAU,GAMlB1K,EAAaC,GAASuvB,GAAiB,iCAAiC,KAE1EptB,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAAS42B,EAAgB52B,GAAM;AAE7B,WAAOsH,EAAGtH,CAAI;AAAA,EAChB;AACF;AAMA,SAASi2B,GAA+B5uB,GAASC,GAAIkC,GAAK;AAUxD,SAAOnC,EAAQ,MAAM8D,IAAW7D,GAAID,EAAQ,QAAQpR,IAAQqR,GAAIkC,CAAG,CAAC;AACtE;AAGA,SAAS0sB,GAAyB7uB,GAAS;AACzC,EAAAA,EAAQ,KAAK,uBAAuB;AACtC;AAMA,SAASsS,GAAetS,GAASC,GAAIkC,GAAK;AACxC,QAAMnH,IAAO;AACb,SAAO+E,EAAaC,GAASsG,GAAa,+BAA+B,CAAK;AAK9E,WAASA,EAAY3N,GAAM;AACzB,UAAMyM,IAAOpK,EAAK,OAAOA,EAAK,OAAO,SAAS,CAAC;AAC/C,WAAOoK,KAAQA,EAAK,CAAC,EAAE,SAAS,iCAAiCA,EAAK,CAAC,EAAE,eAAeA,EAAK,CAAC,GAAG,EAAI,EAAE,WAAW,IAAInF,EAAGtH,CAAI,IAAIwJ,EAAIxJ,CAAI;AAAA,EAC3I;AACF;ACndO,SAAS62B,GAAiBjsC,GAAS;AAExC,MAAIksC,KADalsC,KAAW,CAAA,GACN;AACtB,QAAM2kB,IAAY;AAAA,IAChB,MAAM;AAAA,IACN,UAAUwnB;AAAA,IACV,YAAYC;AAAA,EAChB;AACE,SAAIF,KAAW,SACbA,IAAS,KAEJ;AAAA,IACL,MAAM;AAAA,MACH,KAAMvnB;AAAA,IACb;AAAA,IACI,YAAY;AAAA,MACV,MAAM,CAACA,CAAS;AAAA,IACtB;AAAA,IACI,kBAAkB;AAAA,MAChB,MAAM,CAAC,GAAG;AAAA,IAChB;AAAA,EACA;AAOE,WAASynB,EAAwBrtB,GAAQC,GAAS;AAChD,QAAIvX,IAAQ;AAGZ,WAAO,EAAEA,IAAQsX,EAAO;AAEtB,UAAIA,EAAOtX,CAAK,EAAE,CAAC,MAAM,WAAWsX,EAAOtX,CAAK,EAAE,CAAC,EAAE,SAAS,oCAAoCsX,EAAOtX,CAAK,EAAE,CAAC,EAAE,QAAQ;AACzH,YAAI2X,IAAO3X;AAGX,eAAO2X;AAEL,cAAIL,EAAOK,CAAI,EAAE,CAAC,MAAM,UAAUL,EAAOK,CAAI,EAAE,CAAC,EAAE,SAAS,oCAAoCL,EAAOK,CAAI,EAAE,CAAC,EAAE;AAAA,UAE/GL,EAAOtX,CAAK,EAAE,CAAC,EAAE,IAAI,SAASsX,EAAOtX,CAAK,EAAE,CAAC,EAAE,MAAM,WAAWsX,EAAOK,CAAI,EAAE,CAAC,EAAE,IAAI,SAASL,EAAOK,CAAI,EAAE,CAAC,EAAE,MAAM,QAAQ;AACzH,YAAAL,EAAOtX,CAAK,EAAE,CAAC,EAAE,OAAO,yBACxBsX,EAAOK,CAAI,EAAE,CAAC,EAAE,OAAO;AAGvB,kBAAMitB,IAAgB;AAAA,cACpB,MAAM;AAAA,cACN,OAAO,OAAO,OAAO,CAAA,GAAIttB,EAAOK,CAAI,EAAE,CAAC,EAAE,KAAK;AAAA,cAC9C,KAAK,OAAO,OAAO,CAAA,GAAIL,EAAOtX,CAAK,EAAE,CAAC,EAAE,GAAG;AAAA,YACzD,GAGkB/B,IAAO;AAAA,cACX,MAAM;AAAA,cACN,OAAO,OAAO,OAAO,CAAA,GAAIqZ,EAAOK,CAAI,EAAE,CAAC,EAAE,GAAG;AAAA,cAC5C,KAAK,OAAO,OAAO,CAAA,GAAIL,EAAOtX,CAAK,EAAE,CAAC,EAAE,KAAK;AAAA,YAC3D,GAIkB+X,IAAa,CAAC,CAAC,SAAS6sB,GAAertB,CAAO,GAAG,CAAC,SAASD,EAAOK,CAAI,EAAE,CAAC,GAAGJ,CAAO,GAAG,CAAC,QAAQD,EAAOK,CAAI,EAAE,CAAC,GAAGJ,CAAO,GAAG,CAAC,SAAStZ,GAAMsZ,CAAO,CAAC,GAClJ+R,IAAa/R,EAAQ,OAAO,WAAW,WAAW;AACxD,YAAI+R,KAEFzW,GAAOkF,GAAYA,EAAW,QAAQ,GAAGV,GAAWiS,GAAYhS,EAAO,MAAMK,IAAO,GAAG3X,CAAK,GAAGuX,CAAO,CAAC,GAIzG1E,GAAOkF,GAAYA,EAAW,QAAQ,GAAG,CAAC,CAAC,QAAQ9Z,GAAMsZ,CAAO,GAAG,CAAC,SAASD,EAAOtX,CAAK,EAAE,CAAC,GAAGuX,CAAO,GAAG,CAAC,QAAQD,EAAOtX,CAAK,EAAE,CAAC,GAAGuX,CAAO,GAAG,CAAC,QAAQqtB,GAAertB,CAAO,CAAC,CAAC,GAC/K1E,GAAOyE,GAAQK,IAAO,GAAG3X,IAAQ2X,IAAO,GAAGI,CAAU,GACrD/X,IAAQ2X,IAAOI,EAAW,SAAS;AACnC;AAAA,UACF;AAAA,MAEJ;AAGF,SADA/X,IAAQ,IACD,EAAEA,IAAQsX,EAAO;AACtB,MAAIA,EAAOtX,CAAK,EAAE,CAAC,EAAE,SAAS,qCAC5BsX,EAAOtX,CAAK,EAAE,CAAC,EAAE,OAAO;AAG5B,WAAOsX;AAAA,EACT;AAMA,WAASotB,EAAsB1vB,GAASC,GAAIkC,GAAK;AAC/C,UAAM5O,IAAW,KAAK,UAChB+O,IAAS,KAAK;AACpB,QAAInC,IAAO;AACX,WAAOvI;AAGP,aAASA,EAAMe,GAAM;AACnB,aAAIpF,MAAa,OAAO+O,EAAOA,EAAO,SAAS,CAAC,EAAE,CAAC,EAAE,SAAS,oBACrDH,EAAIxJ,CAAI,KAEjBqH,EAAQ,MAAM,gCAAgC,GACvC6H,EAAKlP,CAAI;AAAA,IAClB;AAGA,aAASkP,EAAKlP,GAAM;AAClB,YAAMhJ,IAASyS,GAAkB7O,CAAQ;AACzC,UAAIoF,MAAS;AAEX,eAAIwH,IAAO,IAAUgC,EAAIxJ,CAAI,KAC7BqH,EAAQ,QAAQrH,CAAI,GACpBwH,KACO0H;AAET,UAAI1H,IAAO,KAAK,CAACsvB,EAAQ,QAAOttB,EAAIxJ,CAAI;AACxC,YAAM7P,IAAQkX,EAAQ,KAAK,gCAAgC,GACrDpQ,IAAQwS,GAAkBzJ,CAAI;AACpC,aAAA7P,EAAM,QAAQ,CAAC8G,KAASA,MAAU,KAAK,EAAQD,GAC/C7G,EAAM,SAAS,CAAC6G,KAAUA,MAAW,KAAK,EAAQC,GAC3CqQ,EAAGtH,CAAI;AAAA,IAChB;AAAA,EACF;AACF;ACpHO,MAAMk3B,GAAQ;AAAA;AAAA;AAAA;AAAA,EAInB,cAAc;AAMZ,SAAK,MAAM,CAAA;AAAA,EACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,IAAI7kC,GAAO+S,GAAQlB,GAAK;AACtB,IAAAizB,GAAkB,MAAM9kC,GAAO+S,GAAQlB,CAAG;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqBA,QAAQyF,GAAQ;AAMd,QALA,KAAK,IAAI,KAAK,SAAU9S,GAAGC,GAAG;AAC5B,aAAOD,EAAE,CAAC,IAAIC,EAAE,CAAC;AAAA,IACnB,CAAC,GAGG,KAAK,IAAI,WAAW;AACtB;AAqBF,QAAIzE,IAAQ,KAAK,IAAI;AAErB,UAAM+kC,IAAO,CAAA;AACb,WAAO/kC,IAAQ;AACb,MAAAA,KAAS,GACT+kC,EAAK,KAAKztB,EAAO,MAAM,KAAK,IAAItX,CAAK,EAAE,CAAC,IAAI,KAAK,IAAIA,CAAK,EAAE,CAAC,CAAC,GAAG,KAAK,IAAIA,CAAK,EAAE,CAAC,CAAC,GAGnFsX,EAAO,SAAS,KAAK,IAAItX,CAAK,EAAE,CAAC;AAEnC,IAAA+kC,EAAK,KAAKztB,EAAO,OAAO,GACxBA,EAAO,SAAS;AAChB,QAAIkG,IAAQunB,EAAK,IAAG;AACpB,WAAOvnB,KAAO;AACZ,iBAAW/X,KAAW+X;AACpB,QAAAlG,EAAO,KAAK7R,CAAO;AAErB,MAAA+X,IAAQunB,EAAK,IAAG;AAAA,IAClB;AAGA,SAAK,IAAI,SAAS;AAAA,EACpB;AACF;AAWA,SAASD,GAAkBE,GAASC,GAAIlyB,GAAQlB,GAAK;AACnD,MAAI7R,IAAQ;AAGZ,MAAI,EAAA+S,MAAW,KAAKlB,EAAI,WAAW,IAGnC;AAAA,WAAO7R,IAAQglC,EAAQ,IAAI,UAAQ;AACjC,UAAIA,EAAQ,IAAIhlC,CAAK,EAAE,CAAC,MAAMilC,GAAI;AAChC,QAAAD,EAAQ,IAAIhlC,CAAK,EAAE,CAAC,KAAK+S,GAOzBiyB,EAAQ,IAAIhlC,CAAK,EAAE,CAAC,EAAE,KAAK,GAAG6R,CAAG;AAGjC;AAAA,MACF;AACA,MAAA7R,KAAS;AAAA,IACX;AACA,IAAAglC,EAAQ,IAAI,KAAK,CAACC,GAAIlyB,GAAQlB,CAAG,CAAC;AAAA;AACpC;ACzIO,SAASqzB,GAAc5tB,GAAQtX,GAAO;AAC3C,MAAImlC,IAAiB;AAErB,QAAM7M,IAAQ,CAAA;AACd,SAAOt4B,IAAQsX,EAAO,UAAQ;AAC5B,UAAMkF,IAAQlF,EAAOtX,CAAK;AAC1B,QAAImlC;AACF,UAAI3oB,EAAM,CAAC,MAAM;AAGf,QAAIA,EAAM,CAAC,EAAE,SAAS,kBACpB8b,EAAM,KAAKhhB,EAAOtX,IAAQ,CAAC,EAAE,CAAC,EAAE,SAAS,yBAAyB,SAAS,MAAM;AAAA,eAM5Ewc,EAAM,CAAC,EAAE,SAAS;AACzB,YAAIlF,EAAOtX,IAAQ,CAAC,EAAE,CAAC,EAAE,SAAS,wBAAwB;AACxD,gBAAMolC,IAAa9M,EAAM,SAAS;AAClC,UAAAA,EAAM8M,CAAU,IAAI9M,EAAM8M,CAAU,MAAM,SAAS,WAAW;AAAA,QAChE;AAAA,iBAGO5oB,EAAM,CAAC,EAAE,SAAS;AACzB;AAAA,UAEG,CAAIA,EAAM,CAAC,MAAM,WAAWA,EAAM,CAAC,EAAE,SAAS,wBACnD2oB,IAAiB;AAEnB,IAAAnlC,KAAS;AAAA,EACX;AACA,SAAOs4B;AACT;AC3BO,SAAS+M,KAAW;AACzB,SAAO;AAAA,IACL,MAAM;AAAA,MACJ,MAAM;AAAA,QACJ,MAAM;AAAA,QACN,UAAUC;AAAA,QACV,YAAYC;AAAA,MACpB;AAAA,IACA;AAAA,EACA;AACA;AAMA,SAASD,GAActwB,GAASC,GAAIkC,GAAK;AACvC,QAAMnH,IAAO;AACb,MAAImF,IAAO,GACPqwB,IAAQ,GAERtuB;AACJ,SAAOtK;AAkBP,WAASA,EAAMe,GAAM;AACnB,QAAI3N,IAAQgQ,EAAK,OAAO,SAAS;AACjC,WAAOhQ,IAAQ,MAAI;AACjB,YAAMoF,KAAO4K,EAAK,OAAOhQ,CAAK,EAAE,CAAC,EAAE;AACnC,UAAIoF,OAAS;AAAA,MAEbA,OAAS,aAAc,CAAApF;AAAA,UAAa;AAAA,IACtC;AACA,UAAMoa,IAAOpa,IAAQ,KAAKgQ,EAAK,OAAOhQ,CAAK,EAAE,CAAC,EAAE,OAAO,MACjD/C,KAAOmd,MAAS,eAAeA,MAAS,aAAaqrB,IAAeC;AAG1E,WAAIzoC,OAASwoC,KAAgBz1B,EAAK,OAAO,KAAKA,EAAK,MAAM,IAAI,IACpDmH,EAAIxJ,CAAI,IAEV1Q,GAAK0Q,CAAI;AAAA,EAClB;AAcA,WAAS+3B,EAAc/3B,GAAM;AAC3B,WAAAqH,EAAQ,MAAM,WAAW,GACzBA,EAAQ,MAAM,UAAU,GACjB2wB,EAAah4B,CAAI;AAAA,EAC1B;AAcA,WAASg4B,EAAah4B,GAAM;AAC1B,WAAIA,MAAS,QAcbuJ,IAAO,IAEPsuB,KAAS,IACFI,EAAaj4B,CAAI;AAAA,EAC1B;AAgBA,WAASi4B,EAAaj4B,GAAM;AAC1B,WAAIA,MAAS,OAEJwJ,EAAIxJ,CAAI,IAEb2G,EAAmB3G,CAAI,IAErB63B,IAAQ,KACVA,IAAQ,GAGRx1B,EAAK,YAAY,IACjBgF,EAAQ,KAAK,UAAU,GACvBA,EAAQ,MAAM,YAAY,GAC1BA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,YAAY,GAClB6wB,KAIF1uB,EAAIxJ,CAAI,IAEb6G,EAAc7G,CAAI,IAIboH,EAAaC,GAAS4wB,GAAc,YAAY,EAAEj4B,CAAI,KAE/D63B,KAAS,GACLtuB,MACFA,IAAO,IAEP/B,KAAQ,IAENxH,MAAS,OACXqH,EAAQ,MAAM,kBAAkB,GAChCA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,kBAAkB,GAE/BkC,IAAO,IACA0uB,MAIT5wB,EAAQ,MAAM,MAAM,GACb8wB,EAAYn4B,CAAI;AAAA,EACzB;AAcA,WAASm4B,EAAYn4B,GAAM;AACzB,WAAIA,MAAS,QAAQA,MAAS,OAAO4G,GAA0B5G,CAAI,KACjEqH,EAAQ,KAAK,MAAM,GACZ4wB,EAAaj4B,CAAI,MAE1BqH,EAAQ,QAAQrH,CAAI,GACbA,MAAS,KAAKo4B,IAAgBD;AAAA,EACvC;AAcA,WAASC,EAAcp4B,GAAM;AAC3B,WAAIA,MAAS,MAAMA,MAAS,OAC1BqH,EAAQ,QAAQrH,CAAI,GACbm4B,KAEFA,EAAYn4B,CAAI;AAAA,EACzB;AAcA,WAASk4B,EAAmBl4B,GAAM;AAKhC,WAHAqC,EAAK,YAAY,IAGbA,EAAK,OAAO,KAAKA,EAAK,IAAG,EAAG,IAAI,IAC3BmH,EAAIxJ,CAAI,KAEjBqH,EAAQ,MAAM,mBAAmB,GAEjCkC,IAAO,IACH1C,EAAc7G,CAAI,IACboH,EAAaC,GAASgxB,GAAqB,cAAch2B,EAAK,OAAO,WAAW,QAAQ,KAAK,SAAS,cAAc,IAAI,SAAY,CAAC,EAAErC,CAAI,IAE7Iq4B,EAAoBr4B,CAAI;AAAA,EACjC;AAgBA,WAASq4B,EAAoBr4B,GAAM;AACjC,WAAIA,MAAS,MAAMA,MAAS,KACnBs4B,EAAyBt4B,CAAI,IAElCA,MAAS,OACXuJ,IAAO,IAEPlC,EAAQ,MAAM,kBAAkB,GAChCA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,kBAAkB,GACxBkxB,KAIFC,EAAiBx4B,CAAI;AAAA,EAC9B;AAaA,WAASu4B,EAAwBv4B,GAAM;AACrC,WAAI6G,EAAc7G,CAAI,IACboH,EAAaC,GAASixB,GAA0B,YAAY,EAAEt4B,CAAI,IAEpEs4B,EAAyBt4B,CAAI;AAAA,EACtC;AAaA,WAASs4B,EAAyBt4B,GAAM;AAEtC,WAAIA,MAAS,MACX63B,KAAS,GACTtuB,IAAO,IACPlC,EAAQ,MAAM,sBAAsB,GACpCA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,sBAAsB,GAC5BoxB,KAILz4B,MAAS,MACX63B,KAAS,GAEFY,EAAgCz4B,CAAI,KAEzCA,MAAS,QAAQ2G,EAAmB3G,CAAI,IACnC04B,EAAuB14B,CAAI,IAE7Bw4B,EAAiBx4B,CAAI;AAAA,EAC9B;AAaA,WAASy4B,EAAgCz4B,GAAM;AAC7C,WAAIA,MAAS,MACXqH,EAAQ,MAAM,sBAAsB,GAC7BsxB,EAAoB34B,CAAI,KAI1Bw4B,EAAiBx4B,CAAI;AAAA,EAC9B;AAaA,WAAS24B,EAAoB34B,GAAM;AACjC,WAAIA,MAAS,MACXqH,EAAQ,QAAQrH,CAAI,GACb24B,KAIL34B,MAAS,MACXuJ,IAAO,IACPlC,EAAQ,KAAK,sBAAsB,GACnCA,EAAQ,MAAM,sBAAsB,GACpCA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,sBAAsB,GAC5BuxB,MAETvxB,EAAQ,KAAK,sBAAsB,GAC5BuxB,EAAiC54B,CAAI;AAAA,EAC9C;AAaA,WAAS44B,EAAiC54B,GAAM;AAC9C,WAAI6G,EAAc7G,CAAI,IACboH,EAAaC,GAASqxB,GAAwB,YAAY,EAAE14B,CAAI,IAElE04B,EAAuB14B,CAAI;AAAA,EACpC;AAaA,WAAS04B,EAAuB14B,GAAM;AACpC,WAAIA,MAAS,MACJq4B,EAAoBr4B,CAAI,IAE7BA,MAAS,QAAQ2G,EAAmB3G,CAAI,IAKtC,CAACuJ,KAAQ/B,MAASqwB,IACbW,EAAiBx4B,CAAI,KAI9BqH,EAAQ,KAAK,mBAAmB,GAChCA,EAAQ,KAAK,WAAW,GAGjBC,EAAGtH,CAAI,KAETw4B,EAAiBx4B,CAAI;AAAA,EAC9B;AAaA,WAASw4B,EAAiBx4B,GAAM;AAE9B,WAAOwJ,EAAIxJ,CAAI;AAAA,EACjB;AAcA,WAAS83B,EAAa93B,GAAM;AAI1B,WAAAqH,EAAQ,MAAM,UAAU,GACjBwxB,EAAa74B,CAAI;AAAA,EAC1B;AAgBA,WAAS64B,EAAa74B,GAAM;AAC1B,WAAIA,MAAS,OACXqH,EAAQ,MAAM,kBAAkB,GAChCA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,kBAAkB,GACxBwxB,KAEL74B,MAAS,QAAQ2G,EAAmB3G,CAAI,KAC1CqH,EAAQ,KAAK,UAAU,GAChBC,EAAGtH,CAAI,KAEZ6G,EAAc7G,CAAI,IACboH,EAAaC,GAASwxB,GAAc,YAAY,EAAE74B,CAAI,KAI/DqH,EAAQ,MAAM,MAAM,GACbyxB,EAAY94B,CAAI;AAAA,EACzB;AAcA,WAAS84B,EAAY94B,GAAM;AACzB,WAAIA,MAAS,QAAQA,MAAS,OAAO4G,GAA0B5G,CAAI,KACjEqH,EAAQ,KAAK,MAAM,GACZwxB,EAAa74B,CAAI,MAE1BqH,EAAQ,QAAQrH,CAAI,GACbA,MAAS,KAAK+4B,IAAgBD;AAAA,EACvC;AAcA,WAASC,EAAc/4B,GAAM;AAC3B,WAAIA,MAAS,MAAMA,MAAS,OAC1BqH,EAAQ,QAAQrH,CAAI,GACb84B,KAEFA,EAAY94B,CAAI;AAAA,EACzB;AACF;AAIA,SAAS43B,GAAajuB,GAAQC,GAAS;AACrC,MAAIvX,IAAQ,IACR2mC,IAA0B,IAE1BC,IAAU,GAEVC,IAAW,CAAC,GAAG,GAAG,GAAG,CAAC,GAEtBtjC,IAAO,CAAC,GAAG,GAAG,GAAG,CAAC,GAClBujC,IAAgC,IAChCC,IAAe,GAEfC,GAEAC,GAEAC;AACJ,QAAMthC,IAAM,IAAIi/B,GAAO;AACvB,SAAO,EAAE7kC,IAAQsX,EAAO,UAAQ;AAC9B,UAAMkF,IAAQlF,EAAOtX,CAAK,GACpBlC,IAAQ0e,EAAM,CAAC;AACrB,IAAIA,EAAM,CAAC,MAAM,UAEX1e,EAAM,SAAS,eACjBgpC,IAAgC,IAG5BC,MAAiB,MACnBI,GAAcvhC,GAAK2R,GAASwvB,GAAcC,GAAcC,CAAW,GACnEA,IAAc,QACdF,IAAe,IAIjBC,IAAe;AAAA,MACb,MAAM;AAAA,MACN,OAAO,OAAO,OAAO,CAAA,GAAIlpC,EAAM,KAAK;AAAA;AAAA,MAEpC,KAAK,OAAO,OAAO,CAAA,GAAIA,EAAM,GAAG;AAAA,IAC1C,GACQ8H,EAAI,IAAI5F,GAAO,GAAG,CAAC,CAAC,SAASgnC,GAAczvB,CAAO,CAAC,CAAC,KAC3CzZ,EAAM,SAAS,cAAcA,EAAM,SAAS,uBACrD6oC,IAA0B,IAC1BO,IAAc,QACdL,IAAW,CAAC,GAAG,GAAG,GAAG,CAAC,GACtBtjC,IAAO,CAAC,GAAGvD,IAAQ,GAAG,GAAG,CAAC,GAGtB8mC,MACFA,IAAgC,IAChCG,IAAc;AAAA,MACZ,MAAM;AAAA,MACN,OAAO,OAAO,OAAO,CAAA,GAAInpC,EAAM,KAAK;AAAA;AAAA,MAEpC,KAAK,OAAO,OAAO,CAAA,GAAIA,EAAM,GAAG;AAAA,IAC5C,GACU8H,EAAI,IAAI5F,GAAO,GAAG,CAAC,CAAC,SAASinC,GAAa1vB,CAAO,CAAC,CAAC,IAErDqvB,IAAU9oC,EAAM,SAAS,sBAAsB,IAAImpC,IAAc,IAAI,KAG9DL,MAAY9oC,EAAM,SAAS,UAAUA,EAAM,SAAS,0BAA0BA,EAAM,SAAS,2BACpG6oC,IAA0B,IAGtBpjC,EAAK,CAAC,MAAM,MACVsjC,EAAS,CAAC,MAAM,MAClBtjC,EAAK,CAAC,IAAIA,EAAK,CAAC,GAChB2jC,IAAcE,GAAUxhC,GAAK2R,GAASsvB,GAAUD,GAAS,QAAWM,CAAW,GAC/EL,IAAW,CAAC,GAAG,GAAG,GAAG,CAAC,IAExBtjC,EAAK,CAAC,IAAIvD,MAEHlC,EAAM,SAAS,uBACpB6oC,IACFA,IAA0B,MAEtBE,EAAS,CAAC,MAAM,MAClBtjC,EAAK,CAAC,IAAIA,EAAK,CAAC,GAChB2jC,IAAcE,GAAUxhC,GAAK2R,GAASsvB,GAAUD,GAAS,QAAWM,CAAW,IAEjFL,IAAWtjC,GACXA,IAAO,CAACsjC,EAAS,CAAC,GAAG7mC,GAAO,GAAG,CAAC,MAK7BlC,EAAM,SAAS,eACtBgpC,IAAgC,IAChCC,IAAe/mC,KACNlC,EAAM,SAAS,cAAcA,EAAM,SAAS,uBACrDipC,IAAe/mC,GACX6mC,EAAS,CAAC,MAAM,KAClBtjC,EAAK,CAAC,IAAIA,EAAK,CAAC,GAChB2jC,IAAcE,GAAUxhC,GAAK2R,GAASsvB,GAAUD,GAAS5mC,GAAOknC,CAAW,KAClE3jC,EAAK,CAAC,MAAM,MACrB2jC,IAAcE,GAAUxhC,GAAK2R,GAAShU,GAAMqjC,GAAS5mC,GAAOknC,CAAW,IAEzEN,IAAU,KACDA,MAAY9oC,EAAM,SAAS,UAAUA,EAAM,SAAS,0BAA0BA,EAAM,SAAS,4BACtGyF,EAAK,CAAC,IAAIvD;AAAA,EAEd;AAUA,OATI+mC,MAAiB,KACnBI,GAAcvhC,GAAK2R,GAASwvB,GAAcC,GAAcC,CAAW,GAErErhC,EAAI,QAAQ2R,EAAQ,MAAM,GAK1BvX,IAAQ,IACD,EAAEA,IAAQuX,EAAQ,OAAO,UAAQ;AACtC,UAAMiF,IAAQjF,EAAQ,OAAOvX,CAAK;AAClC,IAAIwc,EAAM,CAAC,MAAM,WAAWA,EAAM,CAAC,EAAE,SAAS,YAC5CA,EAAM,CAAC,EAAE,SAAS0oB,GAAc3tB,EAAQ,QAAQvX,CAAK;AAAA,EAEzD;AACA,SAAOsX;AACT;AAcA,SAAS8vB,GAAUxhC,GAAK2R,GAAS8vB,GAAOT,GAASU,GAAQC,GAAc;AAGrE,QAAMC,IAAYZ,MAAY,IAAI,gBAAgBA,MAAY,IAAI,mBAAmB,aAG/Ea,IAAY;AASlB,EAAIJ,EAAM,CAAC,MAAM,MACfE,EAAa,MAAM,OAAO,OAAO,CAAA,GAAIG,GAASnwB,EAAQ,QAAQ8vB,EAAM,CAAC,CAAC,CAAC,GACvEzhC,EAAI,IAAIyhC,EAAM,CAAC,GAAG,GAAG,CAAC,CAAC,QAAQE,GAAchwB,CAAO,CAAC,CAAC;AAUxD,QAAM4S,IAAMud,GAASnwB,EAAQ,QAAQ8vB,EAAM,CAAC,CAAC;AAkB7C,MAjBAE,IAAe;AAAA,IACb,MAAMC;AAAA,IACN,OAAO,OAAO,OAAO,CAAA,GAAIrd,CAAG;AAAA;AAAA,IAE5B,KAAK,OAAO,OAAO,CAAA,GAAIA,CAAG;AAAA,EAC9B,GACEvkB,EAAI,IAAIyhC,EAAM,CAAC,GAAG,GAAG,CAAC,CAAC,SAASE,GAAchwB,CAAO,CAAC,CAAC,GAWnD8vB,EAAM,CAAC,MAAM,GAAG;AAClB,UAAMM,IAAeD,GAASnwB,EAAQ,QAAQ8vB,EAAM,CAAC,CAAC,GAChDO,IAAaF,GAASnwB,EAAQ,QAAQ8vB,EAAM,CAAC,CAAC,GAE9CQ,IAAa;AAAA,MACjB,MAAMJ;AAAA,MACN,OAAO,OAAO,OAAO,CAAA,GAAIE,CAAY;AAAA,MACrC,KAAK,OAAO,OAAO,CAAA,GAAIC,CAAU;AAAA,IACvC;AAEI,QADAhiC,EAAI,IAAIyhC,EAAM,CAAC,GAAG,GAAG,CAAC,CAAC,SAASQ,GAAYtwB,CAAO,CAAC,CAAC,GACjDqvB,MAAY,GAAG;AAEjB,YAAMh6B,IAAQ2K,EAAQ,OAAO8vB,EAAM,CAAC,CAAC,GAC/Bl6B,IAAMoK,EAAQ,OAAO8vB,EAAM,CAAC,CAAC;AAMnC,UALAz6B,EAAM,CAAC,EAAE,MAAM,OAAO,OAAO,CAAA,GAAIO,EAAI,CAAC,EAAE,GAAG,GAC3CP,EAAM,CAAC,EAAE,OAAO,aAChBA,EAAM,CAAC,EAAE,cAAc,QAGnBy6B,EAAM,CAAC,IAAIA,EAAM,CAAC,IAAI,GAAG;AAC3B,cAAM7iC,IAAI6iC,EAAM,CAAC,IAAI,GACf5iC,IAAI4iC,EAAM,CAAC,IAAIA,EAAM,CAAC,IAAI;AAChC,QAAAzhC,EAAI,IAAIpB,GAAGC,GAAG,CAAA,CAAE;AAAA,MAClB;AAAA,IACF;AACA,IAAAmB,EAAI,IAAIyhC,EAAM,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,QAAQQ,GAAYtwB,CAAO,CAAC,CAAC;AAAA,EAC1D;AASA,SAAI+vB,MAAW,WACbC,EAAa,MAAM,OAAO,OAAO,CAAA,GAAIG,GAASnwB,EAAQ,QAAQ+vB,CAAM,CAAC,GACrE1hC,EAAI,IAAI0hC,GAAQ,GAAG,CAAC,CAAC,QAAQC,GAAchwB,CAAO,CAAC,CAAC,GACpDgwB,IAAe,SAEVA;AACT;AAYA,SAASJ,GAAcvhC,GAAK2R,GAASvX,GAAOq4B,GAAOyP,GAAW;AAE5D,QAAMC,IAAQ,CAAA,GACRC,IAAUN,GAASnwB,EAAQ,QAAQvX,CAAK;AAC9C,EAAI8nC,MACFA,EAAU,MAAM,OAAO,OAAO,CAAA,GAAIE,CAAO,GACzCD,EAAM,KAAK,CAAC,QAAQD,GAAWvwB,CAAO,CAAC,IAEzC8gB,EAAM,MAAM,OAAO,OAAO,CAAA,GAAI2P,CAAO,GACrCD,EAAM,KAAK,CAAC,QAAQ1P,GAAO9gB,CAAO,CAAC,GACnC3R,EAAI,IAAI5F,IAAQ,GAAG,GAAG+nC,CAAK;AAC7B;AAOA,SAASL,GAASpwB,GAAQtX,GAAO;AAC/B,QAAMwc,IAAQlF,EAAOtX,CAAK,GACpBioC,IAAOzrB,EAAM,CAAC,MAAM,UAAU,UAAU;AAC9C,SAAOA,EAAM,CAAC,EAAEyrB,CAAI;AACtB;AC5yBA,MAAMC,KAAgB;AAAA,EACpB,MAAM;AAAA,EACN,UAAUC;AACZ;AAUO,SAASC,KAAkB;AAChC,SAAO;AAAA,IACL,MAAM;AAAA,MACH,IAAKF;AAAA,IACZ;AAAA,EACA;AACA;AAMA,SAASC,GAAsBnzB,GAASC,GAAIkC,GAAK;AAC/C,QAAMnH,IAAO;AACb,SAAO2H;AAYP,WAASA,EAAKhK,GAAM;AAClB;AAAA;AAAA,MAEAqC,EAAK,aAAa;AAAA;AAAA,MAGlB,CAACA,EAAK,qCACGmH,EAAIxJ,CAAI,KAEjBqH,EAAQ,MAAM,eAAe,GAC7BA,EAAQ,MAAM,qBAAqB,GACnCA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,qBAAqB,GAC3BmD;AAAA;AAAA,EACT;AAYA,WAASA,EAAOxK,GAAM;AAIpB,WAAI4G,GAA0B5G,CAAI,KAChCqH,EAAQ,MAAM,6BAA6B,GAC3CA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,6BAA6B,GACnCoD,KAELzK,MAAS,MAAMA,MAAS,OAC1BqH,EAAQ,MAAM,2BAA2B,GACzCA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,2BAA2B,GACjCoD,KAEFjB,EAAIxJ,CAAI;AAAA,EACjB;AAYA,WAASyK,EAAMzK,GAAM;AACnB,WAAIA,MAAS,MACXqH,EAAQ,MAAM,qBAAqB,GACnCA,EAAQ,QAAQrH,CAAI,GACpBqH,EAAQ,KAAK,qBAAqB,GAClCA,EAAQ,KAAK,eAAe,GACrBpQ,KAEFuS,EAAIxJ,CAAI;AAAA,EACjB;AAKA,WAAS/I,EAAM+I,GAAM;AAEnB,WAAI2G,EAAmB3G,CAAI,IAClBsH,EAAGtH,CAAI,IAKZ6G,EAAc7G,CAAI,IACbqH,EAAQ,MAAM;AAAA,MACnB,UAAUqzB;AAAA,IAClB,GAASpzB,GAAIkC,CAAG,EAAExJ,CAAI,IAIXwJ,EAAIxJ,CAAI;AAAA,EACjB;AACF;AAMA,SAAS06B,GAAkBrzB,GAASC,GAAIkC,GAAK;AAC3C,SAAOpC,EAAaC,GAASpQ,GAAO,YAAY;AAYhD,WAASA,EAAM+I,GAAM;AAKnB,WAAOA,MAAS,OAAOwJ,EAAIxJ,CAAI,IAAIsH,EAAGtH,CAAI;AAAA,EAC5C;AACF;ACvHO,SAAS26B,GAAI/vC,GAAS;AAC3B,SAAO6a,GAAkB;AAAA,IACvB2uB,GAAkB;AAAA,IAClB2B,GAAW;AAAA,IACXc,GAAiBjsC,CAAO;AAAA,IACxB8sC,GAAQ;AAAA,IACR+C,GAAe;AAAA,EACnB,CAAG;AACH;AClCA,MAAMr/B,KAAe,CAAA;AAWN,SAASw/B,GAAUhwC,GAAS;AAGzC,QAAMyX;AAAA;AAAA,IAAuC;AAAA,KACvC/G,IAAW1Q,KAAWwQ,IACtB5C,IAAO6J,EAAK,KAAI,GAEhBw4B,IACJriC,EAAK,wBAAwBA,EAAK,sBAAsB,CAAA,IACpDsiC,IACJtiC,EAAK,2BAA2BA,EAAK,yBAAyB,CAAA,IAC1DuiC,IACJviC,EAAK,yBAAyBA,EAAK,uBAAuB,CAAA;AAE5D,EAAAqiC,EAAoB,KAAKF,GAAIr/B,CAAQ,CAAC,GACtCw/B,EAAuB,KAAK5H,GAAe,CAAE,GAC7C6H,EAAqB,KAAK5H,GAAc73B,CAAQ,CAAC;AACnD;ACrBO,SAASowB,GAAWvxB,GAAOuB,GAAM;AAEtC,QAAMzL,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAUkK,EAAM,KAAKA,EAAM,IAAIuB,CAAI,GAAG,EAAI;AAAA,EAC9C;AACE,SAAAvB,EAAM,MAAMuB,GAAMzL,CAAM,GACjBkK,EAAM,UAAUuB,GAAMzL,CAAM;AACrC;ACTO,SAASuwB,GAAUrmB,GAAOuB,GAAM;AAErC,QAAMzL,IAAS,EAAC,MAAM,WAAW,SAAS,MAAM,YAAY,IAAI,UAAU,CAAA,EAAE;AAC5E,SAAAkK,EAAM,MAAMuB,GAAMzL,CAAM,GACjB,CAACkK,EAAM,UAAUuB,GAAMzL,CAAM,GAAG,EAAC,MAAM,QAAQ,OAAO;AAAA,EAAI,CAAC;AACpE;ACLO,SAAS+P,GAAK7F,GAAOuB,GAAM;AAChC,QAAMtQ,IAAQsQ,EAAK,QAAQA,EAAK,QAAQ;AAAA,IAAO,IAEzCs/B,IAAa,CAAA;AAEnB,EAAIt/B,EAAK,SACPs/B,EAAW,YAAY,CAAC,cAAct/B,EAAK,IAAI;AAKjD,MAAIzL,IAAS;AAAA,IACX,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAA+qC;AAAA,IACA,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAA5vC,EAAK,CAAC;AAAA,EACpC;AAEE,SAAIsQ,EAAK,SACPzL,EAAO,OAAO,EAAC,MAAMyL,EAAK,KAAI,IAGhCvB,EAAM,MAAMuB,GAAMzL,CAAM,GACxBA,IAASkK,EAAM,UAAUuB,GAAMzL,CAAM,GAGrCA,IAAS,EAAC,MAAM,WAAW,SAAS,OAAO,YAAY,CAAA,GAAI,UAAU,CAACA,CAAM,EAAC,GAC7EkK,EAAM,MAAMuB,GAAMzL,CAAM,GACjBA;AACT;AC9BO,SAASgnC,GAAc98B,GAAOuB,GAAM;AAEzC,QAAMzL,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAUkK,EAAM,IAAIuB,CAAI;AAAA,EAC5B;AACE,SAAAvB,EAAM,MAAMuB,GAAMzL,CAAM,GACjBkK,EAAM,UAAUuB,GAAMzL,CAAM;AACrC;ACVO,SAASswB,GAASpmB,GAAOuB,GAAM;AAEpC,QAAMzL,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAUkK,EAAM,IAAIuB,CAAI;AAAA,EAC5B;AACE,SAAAvB,EAAM,MAAMuB,GAAMzL,CAAM,GACjBkK,EAAM,UAAUuB,GAAMzL,CAAM;AACrC;ACXO,SAAS64B,GAAkB3uB,GAAOuB,GAAM;AAC7C,QAAMu/B,IACJ,OAAO9gC,EAAM,QAAQ,iBAAkB,WACnCA,EAAM,QAAQ,gBACd,iBACA3C,IAAK,OAAOkE,EAAK,UAAU,EAAE,YAAW,GACxCw/B,IAASj0B,GAAazP,EAAG,YAAW,CAAE,GACtCnF,IAAQ8H,EAAM,cAAc,QAAQ3C,CAAE;AAE5C,MAAI2jC,GAEAC,IAAejhC,EAAM,eAAe,IAAI3C,CAAE;AAE9C,EAAI4jC,MAAiB,UACnBA,IAAe,GACfjhC,EAAM,cAAc,KAAK3C,CAAE,GAC3B2jC,IAAUhhC,EAAM,cAAc,UAE9BghC,IAAU9oC,IAAQ,GAGpB+oC,KAAgB,GAChBjhC,EAAM,eAAe,IAAI3C,GAAI4jC,CAAY;AAGzC,QAAMhb,IAAO;AAAA,IACX,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY;AAAA,MACV,MAAM,MAAM6a,IAAgB,QAAQC;AAAA,MACpC,IACED,IACA,WACAC,KACCE,IAAe,IAAI,MAAMA,IAAe;AAAA,MAC3C,iBAAiB;AAAA,MACjB,iBAAiB,CAAC,gBAAgB;AAAA,IACxC;AAAA,IACI,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAO,OAAOD,CAAO,EAAC,CAAC;AAAA,EACrD;AACE,EAAAhhC,EAAM,MAAMuB,GAAM0kB,CAAI;AAGtB,QAAMib,IAAM;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAU,CAACjb,CAAI;AAAA,EACnB;AACE,SAAAjmB,EAAM,MAAMuB,GAAM2/B,CAAG,GACdlhC,EAAM,UAAUuB,GAAM2/B,CAAG;AAClC;AClDO,SAAS/gB,GAAQngB,GAAOuB,GAAM;AAEnC,QAAMzL,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS,MAAMyL,EAAK;AAAA,IACpB,YAAY,CAAA;AAAA,IACZ,UAAUvB,EAAM,IAAIuB,CAAI;AAAA,EAC5B;AACE,SAAAvB,EAAM,MAAMuB,GAAMzL,CAAM,GACjBkK,EAAM,UAAUuB,GAAMzL,CAAM;AACrC;ACRO,SAASwwB,GAAKtmB,GAAOuB,GAAM;AAChC,MAAIvB,EAAM,QAAQ,oBAAoB;AAEpC,UAAMlK,IAAS,EAAC,MAAM,OAAO,OAAOyL,EAAK,MAAK;AAC9C,WAAAvB,EAAM,MAAMuB,GAAMzL,CAAM,GACjBkK,EAAM,UAAUuB,GAAMzL,CAAM;AAAA,EACrC;AAGF;ACRO,SAASqrC,GAAOnhC,GAAOuB,GAAM;AAClC,QAAM6/B,IAAU7/B,EAAK;AACrB,MAAI0wB,IAAS;AAQb,MANImP,MAAY,cACdnP,KAAU,OACDmP,MAAY,WACrBnP,KAAU,OAAO1wB,EAAK,SAASA,EAAK,cAAc,MAGhDA,EAAK,SAAS;AAChB,WAAO,CAAC,EAAC,MAAM,QAAQ,OAAO,OAAOA,EAAK,MAAM0wB,EAAM,CAAC;AAGzD,QAAMoP,IAAWrhC,EAAM,IAAIuB,CAAI,GACzBojB,IAAO0c,EAAS,CAAC;AAEvB,EAAI1c,KAAQA,EAAK,SAAS,SACxBA,EAAK,QAAQ,MAAMA,EAAK,QAExB0c,EAAS,QAAQ,EAAC,MAAM,QAAQ,OAAO,IAAG,CAAC;AAG7C,QAAM/uB,IAAO+uB,EAASA,EAAS,SAAS,CAAC;AAEzC,SAAI/uB,KAAQA,EAAK,SAAS,SACxBA,EAAK,SAAS2f,IAEdoP,EAAS,KAAK,EAAC,MAAM,QAAQ,OAAOpP,EAAM,CAAC,GAGtCoP;AACT;ACjCO,SAAS/N,GAAetzB,GAAOuB,GAAM;AAC1C,QAAMlE,IAAK,OAAOkE,EAAK,UAAU,EAAE,YAAW,GACxCgW,IAAavX,EAAM,eAAe,IAAI3C,CAAE;AAE9C,MAAI,CAACka;AACH,WAAO4pB,GAAOnhC,GAAOuB,CAAI;AAI3B,QAAMs/B,IAAa,EAAC,KAAK/zB,GAAayK,EAAW,OAAO,EAAE,GAAG,KAAKhW,EAAK,IAAG;AAE1E,EAAIgW,EAAW,UAAU,QAAQA,EAAW,UAAU,WACpDspB,EAAW,QAAQtpB,EAAW;AAIhC,QAAMzhB,IAAS,EAAC,MAAM,WAAW,SAAS,OAAO,YAAA+qC,GAAY,UAAU,CAAA,EAAE;AACzE,SAAA7gC,EAAM,MAAMuB,GAAMzL,CAAM,GACjBkK,EAAM,UAAUuB,GAAMzL,CAAM;AACrC;ACrBO,SAASywB,GAAMvmB,GAAOuB,GAAM;AAEjC,QAAMs/B,IAAa,EAAC,KAAK/zB,GAAavL,EAAK,GAAG,EAAC;AAE/C,EAAIA,EAAK,QAAQ,QAAQA,EAAK,QAAQ,WACpCs/B,EAAW,MAAMt/B,EAAK,MAGpBA,EAAK,UAAU,QAAQA,EAAK,UAAU,WACxCs/B,EAAW,QAAQt/B,EAAK;AAI1B,QAAMzL,IAAS,EAAC,MAAM,WAAW,SAAS,OAAO,YAAA+qC,GAAY,UAAU,CAAA,EAAE;AACzE,SAAA7gC,EAAM,MAAMuB,GAAMzL,CAAM,GACjBkK,EAAM,UAAUuB,GAAMzL,CAAM;AACrC;ACfO,SAAS49B,GAAW1zB,GAAOuB,GAAM;AAEtC,QAAMpL,IAAO,EAAC,MAAM,QAAQ,OAAOoL,EAAK,MAAM,QAAQ,aAAa,GAAG,EAAC;AACvE,EAAAvB,EAAM,MAAMuB,GAAMpL,CAAI;AAGtB,QAAML,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAU,CAACK,CAAI;AAAA,EACnB;AACE,SAAA6J,EAAM,MAAMuB,GAAMzL,CAAM,GACjBkK,EAAM,UAAUuB,GAAMzL,CAAM;AACrC;ACbO,SAASi+B,GAAc/zB,GAAOuB,GAAM;AACzC,QAAMlE,IAAK,OAAOkE,EAAK,UAAU,EAAE,YAAW,GACxCgW,IAAavX,EAAM,eAAe,IAAI3C,CAAE;AAE9C,MAAI,CAACka;AACH,WAAO4pB,GAAOnhC,GAAOuB,CAAI;AAI3B,QAAMs/B,IAAa,EAAC,MAAM/zB,GAAayK,EAAW,OAAO,EAAE,EAAC;AAE5D,EAAIA,EAAW,UAAU,QAAQA,EAAW,UAAU,WACpDspB,EAAW,QAAQtpB,EAAW;AAIhC,QAAMzhB,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAA+qC;AAAA,IACA,UAAU7gC,EAAM,IAAIuB,CAAI;AAAA,EAC5B;AACE,SAAAvB,EAAM,MAAMuB,GAAMzL,CAAM,GACjBkK,EAAM,UAAUuB,GAAMzL,CAAM;AACrC;AC1BO,SAASmwB,GAAKjmB,GAAOuB,GAAM;AAEhC,QAAMs/B,IAAa,EAAC,MAAM/zB,GAAavL,EAAK,GAAG,EAAC;AAEhD,EAAIA,EAAK,UAAU,QAAQA,EAAK,UAAU,WACxCs/B,EAAW,QAAQt/B,EAAK;AAI1B,QAAMzL,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAA+qC;AAAA,IACA,UAAU7gC,EAAM,IAAIuB,CAAI;AAAA,EAC5B;AACE,SAAAvB,EAAM,MAAMuB,GAAMzL,CAAM,GACjBkK,EAAM,UAAUuB,GAAMzL,CAAM;AACrC;ACZO,SAAS0wB,GAASxmB,GAAOuB,GAAMsD,GAAQ;AAC5C,QAAM8wB,IAAU31B,EAAM,IAAIuB,CAAI,GACxB+/B,IAAQz8B,IAAS08B,GAAU18B,CAAM,IAAI28B,GAAcjgC,CAAI,GAEvDs/B,IAAa,CAAA,GAEb5W,IAAW,CAAA;AAEjB,MAAI,OAAO1oB,EAAK,WAAY,WAAW;AACrC,UAAMojB,IAAOgR,EAAQ,CAAC;AAEtB,QAAIvV;AAEJ,IAAIuE,KAAQA,EAAK,SAAS,aAAaA,EAAK,YAAY,MACtDvE,IAAYuE,KAEZvE,IAAY,EAAC,MAAM,WAAW,SAAS,KAAK,YAAY,IAAI,UAAU,CAAA,EAAE,GACxEuV,EAAQ,QAAQvV,CAAS,IAGvBA,EAAU,SAAS,SAAS,KAC9BA,EAAU,SAAS,QAAQ,EAAC,MAAM,QAAQ,OAAO,IAAG,CAAC,GAGvDA,EAAU,SAAS,QAAQ;AAAA,MACzB,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY,EAAC,MAAM,YAAY,SAAS7e,EAAK,SAAS,UAAU,GAAI;AAAA,MACpE,UAAU,CAAA;AAAA,IAChB,CAAK,GAIDs/B,EAAW,YAAY,CAAC,gBAAgB;AAAA,EAC1C;AAEA,MAAI3oC,IAAQ;AAEZ,SAAO,EAAEA,IAAQy9B,EAAQ,UAAQ;AAC/B,UAAM13B,IAAQ03B,EAAQz9B,CAAK;AAG3B,KACEopC,KACAppC,MAAU,KACV+F,EAAM,SAAS,aACfA,EAAM,YAAY,QAElBgsB,EAAS,KAAK,EAAC,MAAM,QAAQ,OAAO;AAAA,EAAI,CAAC,GAGvChsB,EAAM,SAAS,aAAaA,EAAM,YAAY,OAAO,CAACqjC,IACxDrX,EAAS,KAAK,GAAGhsB,EAAM,QAAQ,IAE/BgsB,EAAS,KAAKhsB,CAAK;AAAA,EAEvB;AAEA,QAAMqU,IAAOqjB,EAAQA,EAAQ,SAAS,CAAC;AAGvC,EAAIrjB,MAASgvB,KAAShvB,EAAK,SAAS,aAAaA,EAAK,YAAY,QAChE2X,EAAS,KAAK,EAAC,MAAM,QAAQ,OAAO;AAAA,EAAI,CAAC;AAI3C,QAAMn0B,IAAS,EAAC,MAAM,WAAW,SAAS,MAAM,YAAA+qC,GAAY,UAAA5W,EAAQ;AACpE,SAAAjqB,EAAM,MAAMuB,GAAMzL,CAAM,GACjBkK,EAAM,UAAUuB,GAAMzL,CAAM;AACrC;AAMA,SAASyrC,GAAUhgC,GAAM;AACvB,MAAI+/B,IAAQ;AACZ,MAAI//B,EAAK,SAAS,QAAQ;AACxB,IAAA+/B,IAAQ//B,EAAK,UAAU;AACvB,UAAM0oB,IAAW1oB,EAAK;AACtB,QAAIrJ,IAAQ;AAEZ,WAAO,CAACopC,KAAS,EAAEppC,IAAQ+xB,EAAS;AAClC,MAAAqX,IAAQE,GAAcvX,EAAS/xB,CAAK,CAAC;AAAA,EAEzC;AAEA,SAAOopC;AACT;AAMA,SAASE,GAAcjgC,GAAM;AAC3B,QAAMkgC,IAASlgC,EAAK;AAEpB,SAAOkgC,KACHlgC,EAAK,SAAS,SAAS;AAE7B;ACxGO,SAASyJ,GAAKhL,GAAOuB,GAAM;AAEhC,QAAMs/B,IAAa,CAAA,GACblL,IAAU31B,EAAM,IAAIuB,CAAI;AAC9B,MAAIrJ,IAAQ;AAOZ,OALI,OAAOqJ,EAAK,SAAU,YAAYA,EAAK,UAAU,MACnDs/B,EAAW,QAAQt/B,EAAK,QAInB,EAAErJ,IAAQy9B,EAAQ,UAAQ;AAC/B,UAAM13B,IAAQ03B,EAAQz9B,CAAK;AAE3B,QACE+F,EAAM,SAAS,aACfA,EAAM,YAAY,QAClBA,EAAM,cACN,MAAM,QAAQA,EAAM,WAAW,SAAS,KACxCA,EAAM,WAAW,UAAU,SAAS,gBAAgB,GACpD;AACA,MAAA4iC,EAAW,YAAY,CAAC,oBAAoB;AAC5C;AAAA,IACF;AAAA,EACF;AAGA,QAAM/qC,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAASyL,EAAK,UAAU,OAAO;AAAA,IAC/B,YAAAs/B;AAAA,IACA,UAAU7gC,EAAM,KAAK21B,GAAS,EAAI;AAAA,EACtC;AACE,SAAA31B,EAAM,MAAMuB,GAAMzL,CAAM,GACjBkK,EAAM,UAAUuB,GAAMzL,CAAM;AACrC;ACpCO,SAASsqB,GAAUpgB,GAAOuB,GAAM;AAErC,QAAMzL,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAUkK,EAAM,IAAIuB,CAAI;AAAA,EAC5B;AACE,SAAAvB,EAAM,MAAMuB,GAAMzL,CAAM,GACjBkK,EAAM,UAAUuB,GAAMzL,CAAM;AACrC;ACTO,SAASg/B,GAAK90B,GAAOuB,GAAM;AAEhC,QAAMzL,IAAS,EAAC,MAAM,QAAQ,UAAUkK,EAAM,KAAKA,EAAM,IAAIuB,CAAI,CAAC,EAAC;AACnE,SAAAvB,EAAM,MAAMuB,GAAMzL,CAAM,GACjBkK,EAAM,UAAUuB,GAAMzL,CAAM;AACrC;ACNO,SAAS8wB,GAAO5mB,GAAOuB,GAAM;AAElC,QAAMzL,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAUkK,EAAM,IAAIuB,CAAI;AAAA,EAC5B;AACE,SAAAvB,EAAM,MAAMuB,GAAMzL,CAAM,GACjBkK,EAAM,UAAUuB,GAAMzL,CAAM;AACrC;ACAO,MAAM4rC,KAAWr9B,GAAM,KAAK,GAUtBs9B,KAAat9B,GAAM,OAAO;AAUvC,SAASA,GAAM/G,GAAM;AACnB,SAAO+G;AAQP,WAASA,EAAM9C,GAAM;AACnB,UAAM8C,IAAS9C,KAAQA,EAAK,YAAYA,EAAK,SAASjE,CAAI,KAAM,CAAA;AAEhE,QACE,OAAO+G,EAAM,QAAS,YACtBA,EAAM,OAAO,KACb,OAAOA,EAAM,UAAW,YACxBA,EAAM,SAAS;AAEf,aAAO;AAAA,QACL,MAAMA,EAAM;AAAA,QACZ,QAAQA,EAAM;AAAA,QACd,QACE,OAAOA,EAAM,UAAW,YAAYA,EAAM,SAAS,KAC/CA,EAAM,SACN;AAAA,MACd;AAAA,EAEE;AACF;AAUO,SAASpP,GAASsM,GAAM;AAC7B,QAAMuD,IAAQ68B,GAAWpgC,CAAI,GACvB8D,IAAMq8B,GAASngC,CAAI;AAEzB,MAAIuD,KAASO;AACX,WAAO,EAAC,OAAAP,GAAO,KAAAO,EAAG;AAEtB;AC5EO,SAASkrB,GAAMvwB,GAAOuB,GAAM;AACjC,QAAMqgC,IAAO5hC,EAAM,IAAIuB,CAAI,GACrBsgC,IAAWD,EAAK,MAAK,GAErBE,IAAe,CAAA;AAErB,MAAID,GAAU;AAEZ,UAAMld,IAAO;AAAA,MACX,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY,CAAA;AAAA,MACZ,UAAU3kB,EAAM,KAAK,CAAC6hC,CAAQ,GAAG,EAAI;AAAA,IAC3C;AACI,IAAA7hC,EAAM,MAAMuB,EAAK,SAAS,CAAC,GAAGojB,CAAI,GAClCmd,EAAa,KAAKnd,CAAI;AAAA,EACxB;AAEA,MAAIid,EAAK,SAAS,GAAG;AAEnB,UAAMpnC,IAAO;AAAA,MACX,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY,CAAA;AAAA,MACZ,UAAUwF,EAAM,KAAK4hC,GAAM,EAAI;AAAA,IACrC,GAEU98B,IAAQ68B,GAAWpgC,EAAK,SAAS,CAAC,CAAC,GACnC8D,IAAMq8B,GAASngC,EAAK,SAASA,EAAK,SAAS,SAAS,CAAC,CAAC;AAC5D,IAAIuD,KAASO,MAAK7K,EAAK,WAAW,EAAC,OAAAsK,GAAO,KAAAO,EAAG,IAC7Cy8B,EAAa,KAAKtnC,CAAI;AAAA,EACxB;AAGA,QAAM1E,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAUkK,EAAM,KAAK8hC,GAAc,EAAI;AAAA,EAC3C;AACE,SAAA9hC,EAAM,MAAMuB,GAAMzL,CAAM,GACjBkK,EAAM,UAAUuB,GAAMzL,CAAM;AACrC;ACpCO,SAASisC,GAAS/hC,GAAOuB,GAAMsD,GAAQ;AAC5C,QAAMilB,IAAWjlB,IAASA,EAAO,WAAW,QAGtC2U,KADWsQ,IAAWA,EAAS,QAAQvoB,CAAI,IAAI,OACxB,IAAI,OAAO,MAElCivB,IAAQ3rB,KAAUA,EAAO,SAAS,UAAUA,EAAO,QAAQ,QAC3D7B,IAASwtB,IAAQA,EAAM,SAASjvB,EAAK,SAAS;AACpD,MAAIygC,IAAY;AAEhB,QAAMxmC,IAAQ,CAAA;AAEd,SAAO,EAAEwmC,IAAYh/B,KAAQ;AAE3B,UAAMvH,IAAO8F,EAAK,SAASygC,CAAS,GAE9BnB,IAAa,CAAA,GACboB,IAAazR,IAAQA,EAAMwR,CAAS,IAAI;AAE9C,IAAIC,MACFpB,EAAW,QAAQoB;AAIrB,QAAInsC,IAAS,EAAC,MAAM,WAAW,SAAA0jB,GAAS,YAAAqnB,GAAY,UAAU,CAAA,EAAE;AAEhE,IAAIplC,MACF3F,EAAO,WAAWkK,EAAM,IAAIvE,CAAI,GAChCuE,EAAM,MAAMvE,GAAM3F,CAAM,GACxBA,IAASkK,EAAM,UAAUvE,GAAM3F,CAAM,IAGvC0F,EAAM,KAAK1F,CAAM;AAAA,EACnB;AAGA,QAAMA,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAUkK,EAAM,KAAKxE,GAAO,EAAI;AAAA,EACpC;AACE,SAAAwE,EAAM,MAAMuB,GAAMzL,CAAM,GACjBkK,EAAM,UAAUuB,GAAMzL,CAAM;AACrC;ACjDO,SAASosC,GAAUliC,GAAOuB,GAAM;AAIrC,QAAMzL,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAUkK,EAAM,IAAIuB,CAAI;AAAA,EAC5B;AACE,SAAAvB,EAAM,MAAMuB,GAAMzL,CAAM,GACjBkK,EAAM,UAAUuB,GAAMzL,CAAM;AACrC;AC/BA,MAAMqsC,KAAM,GACNC,KAAQ;AAWP,SAASC,GAAUpxC,GAAO;AAC/B,QAAMs5B,IAAS,OAAOt5B,CAAK,GACrBi0B,IAAS;AACf,MAAI/pB,IAAQ+pB,EAAO,KAAKqF,CAAM,GAC1B73B,IAAO;AAEX,QAAMkJ,IAAQ,CAAA;AAEd,SAAOT;AACL,IAAAS,EAAM;AAAA,MACJ0mC,GAAS/X,EAAO,MAAM73B,GAAMyI,EAAM,KAAK,GAAGzI,IAAO,GAAG,EAAI;AAAA,MACxDyI,EAAM,CAAC;AAAA,IACb,GAEIzI,IAAOyI,EAAM,QAAQA,EAAM,CAAC,EAAE,QAC9BA,IAAQ+pB,EAAO,KAAKqF,CAAM;AAG5B,SAAA3uB,EAAM,KAAK0mC,GAAS/X,EAAO,MAAM73B,CAAI,GAAGA,IAAO,GAAG,EAAK,CAAC,GAEjDkJ,EAAM,KAAK,EAAE;AACtB;AAYA,SAAS0mC,GAASrxC,GAAO6T,GAAOO,GAAK;AACnC,MAAIif,IAAa,GACbE,IAAWvzB,EAAM;AAErB,MAAI6T,GAAO;AACT,QAAIe,IAAO5U,EAAM,YAAYqzB,CAAU;AAEvC,WAAOze,MAASs8B,MAAOt8B,MAASu8B;AAC9B,MAAA9d,KACAze,IAAO5U,EAAM,YAAYqzB,CAAU;AAAA,EAEvC;AAEA,MAAIjf,GAAK;AACP,QAAIQ,IAAO5U,EAAM,YAAYuzB,IAAW,CAAC;AAEzC,WAAO3e,MAASs8B,MAAOt8B,MAASu8B;AAC9B,MAAA5d,KACA3e,IAAO5U,EAAM,YAAYuzB,IAAW,CAAC;AAAA,EAEzC;AAEA,SAAOA,IAAWF,IAAarzB,EAAM,MAAMqzB,GAAYE,CAAQ,IAAI;AACrE;ACjDO,SAASruB,GAAK6J,GAAOuB,GAAM;AAEhC,QAAMzL,IAAS,EAAC,MAAM,QAAQ,OAAOusC,GAAU,OAAO9gC,EAAK,KAAK,CAAC,EAAC;AAClE,SAAAvB,EAAM,MAAMuB,GAAMzL,CAAM,GACjBkK,EAAM,UAAUuB,GAAMzL,CAAM;AACrC;ACLO,SAASipB,GAAc/e,GAAOuB,GAAM;AAEzC,QAAMzL,IAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAU,CAAA;AAAA,EACd;AACE,SAAAkK,EAAM,MAAMuB,GAAMzL,CAAM,GACjBkK,EAAM,UAAUuB,GAAMzL,CAAM;AACrC;ACAO,MAAMw7B,KAAW;AAAA,EACtB,YAAAC;AAAA,EACA,OAAOlL;AAAA,EACT,MAAExgB;AAAAA,EACA,QAAQi3B;AAAA,EACR,UAAA1W;AAAA,EACA,mBAAAuI;AAAA,EACA,SAAAxO;AAAA,EACF,MAAEmG;AAAAA,EACA,gBAAAgN;AAAA,EACA,OAAA/M;AAAA,EACA,YAAAmN;AAAA,EACA,eAAAK;AAAA,EACA,MAAA9N;AAAA,EACA,UAAAO;AAAA,EACA,MAAAxb;AAAA,EACA,WAAAoV;AAAA;AAAA,EAEF,MAAE0U;AAAAA,EACA,QAAAlO;AAAA,EACA,OAAA2J;AAAA,EACA,WAAA2R;AAAA,EACA,UAAAH;AAAA,EACF,MAAE5rC;AAAAA,EACA,eAAA4oB;AAAA,EACA,MAAMwjB;AAAA,EACN,MAAMA;AAAA,EACN,YAAYA;AAAA,EACZ,oBAAoBA;AACtB;AAGA,SAASA,KAAS;AAElB;AC/DO,MAAMC,KAAa,IACbC,KAAa,GACbC,KAAa,GACbC,KAAa,GACbC,KAAa,GACbC,KAAa,GACbC,KAAa,GACbC,KAAa,GACbC,KAAa,GACbC,KAAa,GCFpBC,KAAM,OAAO,QAAS,WAAW,OAAO,YAExCC,KAAe,CAACC,GAAG9f,MAAM;AAC7B,QAAM+f,IAAK,CAACC,GAAKprC,OACfkrC,EAAE,IAAIlrC,GAAOorC,CAAG,GACTA,IAGHC,IAAS,CAAArrC,MAAS;AACtB,QAAIkrC,EAAE,IAAIlrC,CAAK;AACb,aAAOkrC,EAAE,IAAIlrC,CAAK;AAEpB,UAAM,CAACoF,GAAMrM,CAAK,IAAIqyB,EAAEprB,CAAK;AAC7B,YAAQoF,GAAI;AAAA,MACV,KAAKmlC;AAAA,MACL,KAAKD;AACH,eAAOa,EAAGpyC,GAAOiH,CAAK;AAAA,MACxB,KAAKwqC,IAAO;AACV,cAAMzgC,IAAMohC,EAAG,CAAA,GAAInrC,CAAK;AACxB,mBAAWA,KAASjH;AAClB,UAAAgR,EAAI,KAAKshC,EAAOrrC,CAAK,CAAC;AACxB,eAAO+J;AAAA,MACT;AAAA,MACA,KAAK0gC,IAAQ;AACX,cAAMa,IAASH,EAAG,CAAA,GAAInrC,CAAK;AAC3B,mBAAW,CAACoK,GAAKpK,CAAK,KAAKjH;AACzB,UAAAuyC,EAAOD,EAAOjhC,CAAG,CAAC,IAAIihC,EAAOrrC,CAAK;AACpC,eAAOsrC;AAAA,MACT;AAAA,MACA,KAAKZ;AACH,eAAOS,EAAG,IAAI,KAAKpyC,CAAK,GAAGiH,CAAK;AAAA,MAClC,KAAK2qC,IAAQ;AACX,cAAM,EAAC,QAAAtY,GAAQ,OAAAkZ,EAAK,IAAIxyC;AACxB,eAAOoyC,EAAG,IAAI,OAAO9Y,GAAQkZ,CAAK,GAAGvrC,CAAK;AAAA,MAC5C;AAAA,MACA,KAAK4qC,IAAK;AACR,cAAMhlC,IAAMulC,EAAG,oBAAI,OAAKnrC,CAAK;AAC7B,mBAAW,CAACoK,GAAKpK,CAAK,KAAKjH;AACzB,UAAA6M,EAAI,IAAIylC,EAAOjhC,CAAG,GAAGihC,EAAOrrC,CAAK,CAAC;AACpC,eAAO4F;AAAA,MACT;AAAA,MACA,KAAKilC,IAAK;AACR,cAAMW,IAAML,EAAG,oBAAI,OAAKnrC,CAAK;AAC7B,mBAAWA,KAASjH;AAClB,UAAAyyC,EAAI,IAAIH,EAAOrrC,CAAK,CAAC;AACvB,eAAOwrC;AAAA,MACT;AAAA,MACA,KAAKV,IAAO;AACV,cAAM,EAAC,MAAAtgC,GAAM,SAAA6E,EAAO,IAAItW;AACxB,eAAOoyC,EAAG,IAAIH,GAAIxgC,CAAI,EAAE6E,CAAO,GAAGrP,CAAK;AAAA,MACzC;AAAA,MACA,KAAK+qC;AACH,eAAOI,EAAG,OAAOpyC,CAAK,GAAGiH,CAAK;AAAA,MAChC,KAAK;AACH,eAAOmrC,EAAG,OAAO,OAAOpyC,CAAK,CAAC,GAAGiH,CAAK;AAAA,MACxC,KAAK;AACH,eAAOmrC,EAAG,IAAI,WAAWpyC,CAAK,EAAE,QAAQA,CAAK;AAAA,MAC/C,KAAK,YAAY;AACf,cAAM,EAAE,QAAAgH,EAAM,IAAK,IAAI,WAAWhH,CAAK;AACvC,eAAOoyC,EAAG,IAAI,SAASprC,CAAM,GAAGhH,CAAK;AAAA,MACvC;AAAA,IACN;AACI,WAAOoyC,EAAG,IAAIH,GAAI5lC,CAAI,EAAErM,CAAK,GAAGiH,CAAK;AAAA,EACvC;AAEA,SAAOqrC;AACT,GAWaI,KAAc,CAAAC,MAAcT,GAAa,oBAAI,OAAKS,CAAU,EAAE,CAAC,GC7EtEC,KAAQ,IAER,EAAC,UAAA3iC,GAAQ,IAAI,CAAA,GACb,EAAA,MAAC4iC,GAAI,IAAI,QAETC,KAAS,CAAA9yC,MAAS;AACtB,QAAMqM,IAAO,OAAOrM;AACpB,MAAIqM,MAAS,YAAY,CAACrM;AACxB,WAAO,CAACwxC,IAAWnlC,CAAI;AAEzB,QAAM0mC,IAAW9iC,GAAS,KAAKjQ,CAAK,EAAE,MAAM,GAAG,EAAE;AACjD,UAAQ+yC,GAAQ;AAAA,IACd,KAAK;AACH,aAAO,CAACtB,IAAOmB,EAAK;AAAA,IACtB,KAAK;AACH,aAAO,CAAClB,IAAQkB,EAAK;AAAA,IACvB,KAAK;AACH,aAAO,CAACjB,IAAMiB,EAAK;AAAA,IACrB,KAAK;AACH,aAAO,CAAChB,IAAQgB,EAAK;AAAA,IACvB,KAAK;AACH,aAAO,CAACf,IAAKe,EAAK;AAAA,IACpB,KAAK;AACH,aAAO,CAACd,IAAKc,EAAK;AAAA,IACpB,KAAK;AACH,aAAO,CAACnB,IAAOsB,CAAQ;AAAA,EAC7B;AAEE,SAAIA,EAAS,SAAS,OAAO,IACpB,CAACtB,IAAOsB,CAAQ,IAErBA,EAAS,SAAS,OAAO,IACpB,CAAChB,IAAOgB,CAAQ,IAElB,CAACrB,IAAQqB,CAAQ;AAC1B,GAEMC,KAAa,CAAC,CAACC,GAAM5mC,CAAI,MAC7B4mC,MAASzB,OACRnlC,MAAS,cAAcA,MAAS,WAG7B6mC,KAAa,CAACC,GAAQC,GAAMjB,GAAG9f,MAAM;AAEzC,QAAM+f,IAAK,CAACC,GAAKryC,MAAU;AACzB,UAAMiH,IAAQorB,EAAE,KAAKggB,CAAG,IAAI;AAC5B,WAAAF,EAAE,IAAInyC,GAAOiH,CAAK,GACXA;AAAA,EACT,GAEMosC,IAAO,CAAArzC,MAAS;AACpB,QAAImyC,EAAE,IAAInyC,CAAK;AACb,aAAOmyC,EAAE,IAAInyC,CAAK;AAEpB,QAAI,CAACizC,GAAM5mC,CAAI,IAAIymC,GAAO9yC,CAAK;AAC/B,YAAQizC,GAAI;AAAA,MACV,KAAKzB,IAAW;AACd,YAAI9qC,IAAQ1G;AACZ,gBAAQqM,GAAI;AAAA,UACV,KAAK;AACH,YAAA4mC,IAAOjB,IACPtrC,IAAQ1G,EAAM,SAAQ;AACtB;AAAA,UACF,KAAK;AAAA,UACL,KAAK;AACH,gBAAImzC;AACF,oBAAM,IAAI,UAAU,yBAAyB9mC,CAAI;AACnD,YAAA3F,IAAQ;AACR;AAAA,UACF,KAAK;AACH,mBAAO0rC,EAAG,CAACb,EAAI,GAAGvxC,CAAK;AAAA,QACnC;AACQ,eAAOoyC,EAAG,CAACa,GAAMvsC,CAAK,GAAG1G,CAAK;AAAA,MAChC;AAAA,MACA,KAAKyxC,IAAO;AACV,YAAIplC,GAAM;AACR,cAAImkC,IAASxwC;AACb,iBAAIqM,MAAS,aACXmkC,IAAS,IAAI,WAAWxwC,EAAM,MAAM,IAE7BqM,MAAS,kBAChBmkC,IAAS,IAAI,WAAWxwC,CAAK,IAExBoyC,EAAG,CAAC/lC,GAAM,CAAC,GAAGmkC,CAAM,CAAC,GAAGxwC,CAAK;AAAA,QACtC;AAEA,cAAMgR,IAAM,CAAA,GACN/J,IAAQmrC,EAAG,CAACa,GAAMjiC,CAAG,GAAGhR,CAAK;AACnC,mBAAW0G,KAAS1G;AAClB,UAAAgR,EAAI,KAAKqiC,EAAK3sC,CAAK,CAAC;AACtB,eAAOO;AAAA,MACT;AAAA,MACA,KAAKyqC,IAAQ;AACX,YAAIrlC;AACF,kBAAQA,GAAI;AAAA,YACV,KAAK;AACH,qBAAO+lC,EAAG,CAAC/lC,GAAMrM,EAAM,SAAQ,CAAE,GAAGA,CAAK;AAAA,YAC3C,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AACH,qBAAOoyC,EAAG,CAAC/lC,GAAMrM,EAAM,QAAO,CAAE,GAAGA,CAAK;AAAA,UACtD;AAGQ,YAAIozC,KAAS,YAAYpzC;AACvB,iBAAOqzC,EAAKrzC,EAAM,QAAQ;AAE5B,cAAMszC,IAAU,CAAA,GACVrsC,IAAQmrC,EAAG,CAACa,GAAMK,CAAO,GAAGtzC,CAAK;AACvC,mBAAWqR,KAAOwhC,GAAK7yC,CAAK;AAC1B,WAAImzC,KAAU,CAACH,GAAWF,GAAO9yC,EAAMqR,CAAG,CAAC,CAAC,MAC1CiiC,EAAQ,KAAK,CAACD,EAAKhiC,CAAG,GAAGgiC,EAAKrzC,EAAMqR,CAAG,CAAC,CAAC,CAAC;AAE9C,eAAOpK;AAAA,MACT;AAAA,MACA,KAAK0qC;AACH,eAAOS,EAAG,CAACa,GAAMjzC,EAAM,YAAW,CAAE,GAAGA,CAAK;AAAA,MAC9C,KAAK4xC,IAAQ;AACX,cAAM,EAAC,QAAAtY,GAAQ,OAAAkZ,EAAK,IAAIxyC;AACxB,eAAOoyC,EAAG,CAACa,GAAM,EAAC,QAAA3Z,GAAQ,OAAAkZ,EAAK,CAAC,GAAGxyC,CAAK;AAAA,MAC1C;AAAA,MACA,KAAK6xC,IAAK;AACR,cAAMyB,IAAU,CAAA,GACVrsC,IAAQmrC,EAAG,CAACa,GAAMK,CAAO,GAAGtzC,CAAK;AACvC,mBAAW,CAACqR,GAAK3K,CAAK,KAAK1G;AACzB,WAAImzC,KAAU,EAAEH,GAAWF,GAAOzhC,CAAG,CAAC,KAAK2hC,GAAWF,GAAOpsC,CAAK,CAAC,OACjE4sC,EAAQ,KAAK,CAACD,EAAKhiC,CAAG,GAAGgiC,EAAK3sC,CAAK,CAAC,CAAC;AAEzC,eAAOO;AAAA,MACT;AAAA,MACA,KAAK6qC,IAAK;AACR,cAAMwB,IAAU,CAAA,GACVrsC,IAAQmrC,EAAG,CAACa,GAAMK,CAAO,GAAGtzC,CAAK;AACvC,mBAAW0G,KAAS1G;AAClB,WAAImzC,KAAU,CAACH,GAAWF,GAAOpsC,CAAK,CAAC,MACrC4sC,EAAQ,KAAKD,EAAK3sC,CAAK,CAAC;AAE5B,eAAOO;AAAA,MACT;AAAA,IACN;AAEI,UAAM,EAAC,SAAAqP,EAAO,IAAItW;AAClB,WAAOoyC,EAAG,CAACa,GAAM,EAAC,MAAM5mC,GAAM,SAAAiK,EAAO,CAAC,GAAGtW,CAAK;AAAA,EAChD;AAEA,SAAOqzC;AACT,GAccnT,KAAY,CAAClgC,GAAO,EAAC,MAAAozC,GAAM,OAAAG,EAAK,IAAI,OAAO;AACvD,QAAMlhB,IAAI,CAAA;AACV,SAAO6gB,GAAW,EAAEE,KAAQG,IAAQ,CAAC,CAACH,GAAM,oBAAI,OAAK/gB,CAAC,EAAEryB,CAAK,GAAGqyB;AAClE,GC3JAmhB,KAAe,OAAO,mBAAoB;AAAA;AAAA,EAExC,CAACzZ,GAAKv6B,MACJA,MAAY,UAAUA,KAAW,WAAWA,KAC1CkzC,GAAYxS,GAAUnG,GAAKv6B,CAAO,CAAC,IAAI,gBAAgBu6B,CAAG;AAAA,IAE9D,CAACA,GAAKv6B,MAAYkzC,GAAYxS,GAAUnG,GAAKv6B,CAAO,CAAC;AC2DhD,SAASi0C,GAA2BphB,GAAGqhB,GAAkB;AAE9D,QAAM7uC,IAAS,CAAC,EAAC,MAAM,QAAQ,OAAO,IAAG,CAAC;AAE1C,SAAI6uC,IAAmB,KACrB7uC,EAAO,KAAK;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAO,OAAO6uC,CAAgB,EAAC,CAAC;AAAA,EAChE,CAAK,GAGI7uC;AACT;AAaO,SAAS8uC,GAAyBC,GAAgBF,GAAkB;AACzE,SACE,wBACCE,IAAiB,MACjBF,IAAmB,IAAI,MAAMA,IAAmB;AAErD;AAWO,SAASG,GAAO9kC,GAAO;AAC5B,QAAM8gC,IACJ,OAAO9gC,EAAM,QAAQ,iBAAkB,WACnCA,EAAM,QAAQ,gBACd,iBACA+kC,IACJ/kC,EAAM,QAAQ,uBAAuB0kC,IACjCM,IACJhlC,EAAM,QAAQ,qBAAqB4kC,IAC/BK,IAAgBjlC,EAAM,QAAQ,iBAAiB,aAC/CklC,IAAuBllC,EAAM,QAAQ,wBAAwB,MAC7DmlC,IAA0BnlC,EAAM,QAAQ,2BAA2B;AAAA,IACvE,WAAW,CAAC,SAAS;AAAA,EACzB,GAEQolC,IAAY,CAAA;AAClB,MAAIP,IAAiB;AAErB,SAAO,EAAEA,IAAiB7kC,EAAM,cAAc,UAAQ;AACpD,UAAMuX,IAAavX,EAAM,aAAa;AAAA,MACpCA,EAAM,cAAc6kC,CAAc;AAAA,IACxC;AAEI,QAAI,CAACttB;AACH;AAGF,UAAMhd,IAAUyF,EAAM,IAAIuX,CAAU,GAC9Bla,IAAK,OAAOka,EAAW,UAAU,EAAE,YAAW,GAC9CwpB,IAASj0B,GAAazP,EAAG,YAAW,CAAE;AAC5C,QAAIsnC,IAAmB;AAEvB,UAAMU,IAAiB,CAAA,GACjBvkC,IAASd,EAAM,eAAe,IAAI3C,CAAE;AAG1C,WAAOyD,MAAW,UAAa,EAAE6jC,KAAoB7jC,KAAQ;AAC3D,MAAIukC,EAAe,SAAS,KAC1BA,EAAe,KAAK,EAAC,MAAM,QAAQ,OAAO,IAAG,CAAC;AAGhD,UAAIpb,IACF,OAAO8a,KAAwB,WAC3BA,IACAA,EAAoBF,GAAgBF,CAAgB;AAE1D,MAAI,OAAO1a,KAAa,aACtBA,IAAW,EAAC,MAAM,QAAQ,OAAOA,EAAQ,IAG3Cob,EAAe,KAAK;AAAA,QAClB,MAAM;AAAA,QACN,SAAS;AAAA,QACT,YAAY;AAAA,UACV,MACE,MACAvE,IACA,WACAC,KACC4D,IAAmB,IAAI,MAAMA,IAAmB;AAAA,UACnD,qBAAqB;AAAA,UACrB,WACE,OAAOK,KAAsB,WACzBA,IACAA,EAAkBH,GAAgBF,CAAgB;AAAA,UACxD,WAAW,CAAC,uBAAuB;AAAA,QAC7C;AAAA,QACQ,UAAU,MAAM,QAAQ1a,CAAQ,IAAIA,IAAW,CAACA,CAAQ;AAAA,MAChE,CAAO;AAAA,IACH;AAEA,UAAM3X,IAAO/X,EAAQA,EAAQ,SAAS,CAAC;AAEvC,QAAI+X,KAAQA,EAAK,SAAS,aAAaA,EAAK,YAAY,KAAK;AAC3D,YAAMgzB,IAAWhzB,EAAK,SAASA,EAAK,SAAS,SAAS,CAAC;AACvD,MAAIgzB,KAAYA,EAAS,SAAS,SAChCA,EAAS,SAAS,MAElBhzB,EAAK,SAAS,KAAK,EAAC,MAAM,QAAQ,OAAO,IAAG,CAAC,GAG/CA,EAAK,SAAS,KAAK,GAAG+yB,CAAc;AAAA,IACtC;AACE,MAAA9qC,EAAQ,KAAK,GAAG8qC,CAAc;AAIhC,UAAM7e,IAAW;AAAA,MACf,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY,EAAC,IAAIsa,IAAgB,QAAQC,EAAM;AAAA,MAC/C,UAAU/gC,EAAM,KAAKzF,GAAS,EAAI;AAAA,IACxC;AAEI,IAAAyF,EAAM,MAAMuX,GAAYiP,CAAQ,GAEhC4e,EAAU,KAAK5e,CAAQ;AAAA,EACzB;AAEA,MAAI4e,EAAU,WAAW;AAIzB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY,EAAC,eAAe,IAAM,WAAW,CAAC,WAAW,EAAC;AAAA,MAC1D,UAAU;AAAA,QACR;AAAA,UACE,MAAM;AAAA,UACN,SAASF;AAAA,UACT,YAAY;AAAA,YACV,GAAGK,GAAgBJ,CAAuB;AAAA,YAC1C,IAAI;AAAA,UACd;AAAA,UACQ,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAOF,EAAa,CAAC;AAAA,QACvD;AAAA,QACM,EAAC,MAAM,QAAQ,OAAO;AAAA,EAAI;AAAA,QAC1B;AAAA,UACE,MAAM;AAAA,UACN,SAAS;AAAA,UACT,YAAY,CAAA;AAAA,UACZ,UAAUjlC,EAAM,KAAKolC,GAAW,EAAI;AAAA,QAC5C;AAAA,QACM,EAAC,MAAM,QAAQ,OAAO;AAAA,EAAI;AAAA,MAChC;AAAA,IACA;AACA;ACxEA,MAAMv9B,KAAM,CAAA,EAAG,gBAGT5G,KAAe,CAAA;AAYd,SAASukC,GAAY18B,GAAMrY,GAAS;AACzC,QAAM0Q,IAAW1Q,KAAWwQ,IAEtBwkC,IAAiB,oBAAI,IAAG,GAExBC,IAAe,oBAAI,IAAG,GAEtBC,IAAiB,oBAAI,IAAG,GAIxBrU,IAAW,EAAC,GAAG+G,IAAiB,GAAGl3B,EAAS,SAAQ,GAGpDnB,IAAQ;AAAA,IACZ,KAAAwB;AAAA,IACA,WAAAokC;AAAA,IACA,gBAAAH;AAAA,IACA,cAAAC;AAAA,IACA,gBAAAC;AAAA,IACA,eAAe,CAAA;AAAA,IACf,UAAArU;AAAA,IACA,KAAAhwB;AAAA,IACA,SAASH;AAAA,IACT,OAAA0kC;AAAA,IACJ,MAAIliC;AAAAA,EACJ;AAEE,SAAAqoB,GAAMljB,GAAM,SAAUvH,GAAM;AAC1B,QAAIA,EAAK,SAAS,gBAAgBA,EAAK,SAAS,sBAAsB;AACpE,YAAMzD,IAAMyD,EAAK,SAAS,eAAekkC,IAAiBC,GACpDroC,IAAK,OAAOkE,EAAK,UAAU,EAAE,YAAW;AAI9C,MAAKzD,EAAI,IAAIT,CAAE,KAEbS,EAAI,IAAIT,GAAIkE,CAAI;AAAA,IAEpB;AAAA,EACF,CAAC,GAEMvB;AAYP,WAASsB,EAAIC,GAAMsD,GAAQ;AACzB,UAAMvH,IAAOiE,EAAK,MACZ4zB,IAASn1B,EAAM,SAAS1C,CAAI;AAElC,QAAIuK,GAAI,KAAK7H,EAAM,UAAU1C,CAAI,KAAK63B;AACpC,aAAOA,EAAOn1B,GAAOuB,GAAMsD,CAAM;AAGnC,QAAI7E,EAAM,QAAQ,eAAeA,EAAM,QAAQ,YAAY,SAAS1C,CAAI,GAAG;AACzE,UAAI,cAAciE,GAAM;AACtB,cAAM,EAAC,UAAA0oB,GAAU,GAAG6b,EAAO,IAAIvkC,GACzBzL,IAASyvC,GAAgBO,CAAO;AAEtC,eAAAhwC,EAAO,WAAWkK,EAAM,IAAIuB,CAAI,GAEzBzL;AAAA,MACT;AAGA,aAAOyvC,GAAgBhkC,CAAI;AAAA,IAC7B;AAIA,YAFgBvB,EAAM,QAAQ,kBAAkB+lC,IAEjC/lC,GAAOuB,GAAMsD,CAAM;AAAA,EACpC;AAUA,WAASrD,EAAIqD,GAAQ;AAEnB,UAAMpD,IAAS,CAAA;AAEf,QAAI,cAAcoD,GAAQ;AACxB,YAAM+nB,IAAQ/nB,EAAO;AACrB,UAAI3M,IAAQ;AACZ,aAAO,EAAEA,IAAQ00B,EAAM,UAAQ;AAC7B,cAAM92B,IAASkK,EAAM,IAAI4sB,EAAM10B,CAAK,GAAG2M,CAAM;AAG7C,YAAI/O,GAAQ;AACV,cAAIoC,KAAS00B,EAAM10B,IAAQ,CAAC,EAAE,SAAS,YACjC,CAAC,MAAM,QAAQpC,CAAM,KAAKA,EAAO,SAAS,WAC5CA,EAAO,QAAQkwC,GAAuBlwC,EAAO,KAAK,IAGhD,CAAC,MAAM,QAAQA,CAAM,KAAKA,EAAO,SAAS,YAAW;AACvD,kBAAM6uB,IAAO7uB,EAAO,SAAS,CAAC;AAE9B,YAAI6uB,KAAQA,EAAK,SAAS,WACxBA,EAAK,QAAQqhB,GAAuBrhB,EAAK,KAAK;AAAA,UAElD;AAGF,UAAI,MAAM,QAAQ7uB,CAAM,IACtB2L,EAAO,KAAK,GAAG3L,CAAM,IAErB2L,EAAO,KAAK3L,CAAM;AAAA,QAEtB;AAAA,MACF;AAAA,IACF;AAEA,WAAO2L;AAAA,EACT;AACF;AAYA,SAASokC,GAAMhkB,GAAMokB,GAAI;AACvB,EAAIpkB,EAAK,aAAUokB,EAAG,WAAWhxC,GAAS4sB,CAAI;AAChD;AAcA,SAAS+jB,GAAU/jB,GAAMokB,GAAI;AAE3B,MAAInwC,IAASmwC;AAGb,MAAIpkB,KAAQA,EAAK,MAAM;AACrB,UAAMqkB,IAAQrkB,EAAK,KAAK,OAClBskB,IAAYtkB,EAAK,KAAK,WACtBukB,IAAcvkB,EAAK,KAAK;AAE9B,QAAI,OAAOqkB,KAAU;AAGnB,UAAIpwC,EAAO,SAAS;AAClB,QAAAA,EAAO,UAAUowC;AAAA,WAMd;AAGH,cAAMjc,IAAW,cAAcn0B,IAASA,EAAO,WAAW,CAACA,CAAM;AACjE,QAAAA,IAAS,EAAC,MAAM,WAAW,SAASowC,GAAO,YAAY,CAAA,GAAI,UAAAjc,EAAQ;AAAA,MACrE;AAGF,IAAIn0B,EAAO,SAAS,aAAaswC,KAC/B,OAAO,OAAOtwC,EAAO,YAAYyvC,GAAgBa,CAAW,CAAC,GAI7D,cAActwC,KACdA,EAAO,YACPqwC,MAAc,QACdA,MAAc,WAEdrwC,EAAO,WAAWqwC;AAAA,EAEtB;AAEA,SAAOrwC;AACT;AAYA,SAASiwC,GAAsB/lC,GAAOuB,GAAM;AAC1C,QAAMlD,IAAOkD,EAAK,QAAQ,CAAA,GAEpBzL,IACJ,WAAWyL,KACX,EAAEsG,GAAI,KAAKxJ,GAAM,aAAa,KAAKwJ,GAAI,KAAKxJ,GAAM,WAAW,KACzD,EAAC,MAAM,QAAQ,OAAOkD,EAAK,MAAK,IAChC;AAAA,IACE,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAA;AAAA,IACZ,UAAUvB,EAAM,IAAIuB,CAAI;AAAA,EAClC;AAEE,SAAAvB,EAAM,MAAMuB,GAAMzL,CAAM,GACjBkK,EAAM,UAAUuB,GAAMzL,CAAM;AACrC;AAcO,SAAS6N,GAAKipB,GAAO0U,GAAO;AAEjC,QAAMxrC,IAAS,CAAA;AACf,MAAIoC,IAAQ;AAMZ,OAJIopC,KACFxrC,EAAO,KAAK,EAAC,MAAM,QAAQ,OAAO;AAAA,EAAI,CAAC,GAGlC,EAAEoC,IAAQ00B,EAAM;AACrB,IAAI10B,KAAOpC,EAAO,KAAK,EAAC,MAAM,QAAQ,OAAO;AAAA,EAAI,CAAC,GAClDA,EAAO,KAAK82B,EAAM10B,CAAK,CAAC;AAG1B,SAAIopC,KAAS1U,EAAM,SAAS,KAC1B92B,EAAO,KAAK,EAAC,MAAM,QAAQ,OAAO;AAAA,EAAI,CAAC,GAGlCA;AACT;AAUA,SAASkwC,GAAuB/0C,GAAO;AACrC,MAAIiH,IAAQ,GACR2N,IAAO5U,EAAM,WAAWiH,CAAK;AAEjC,SAAO2N,MAAS,KAAKA,MAAS;AAC5B,IAAA3N,KACA2N,IAAO5U,EAAM,WAAWiH,CAAK;AAG/B,SAAOjH,EAAM,MAAMiH,CAAK;AAC1B;ACjYO,SAASmuC,GAAOv9B,GAAMrY,GAAS;AACpC,QAAMuP,IAAQwlC,GAAY18B,GAAMrY,CAAO,GACjC8Q,IAAOvB,EAAM,IAAI8I,GAAM,MAAS,GAChCw9B,IAAOxB,GAAO9kC,CAAK,GAEnBlK,IAAS,MAAM,QAAQyL,CAAI,IAC7B,EAAC,MAAM,QAAQ,UAAUA,EAAI,IAC7BA,KAAQ,EAAC,MAAM,QAAQ,UAAU,CAAA,EAAE;AAEvC,SAAI+kC,KAKFxwC,EAAO,SAAS,KAAK,EAAC,MAAM,QAAQ,OAAO;AAAA,EAAI,GAAGwwC,CAAI,GAGjDxwC;AACT;AC0Ce,SAASywC,GAAax+B,GAAatX,GAAS;AACzD,SAAIsX,KAAe,SAASA,IAInB,eAAgBe,GAAMV,GAAM;AAEjC,UAAMo+B;AAAA;AAAA,MACJH,GAAOv9B,GAAM,EAAC,MAAAV,GAAM,GAAG3X,EAAO,CAAC;AAAA;AAEjC,UAAMsX,EAAY,IAAIy+B,GAAUp+B,CAAI;AAAA,EACtC,IAMK,SAAUU,GAAMV,GAAM;AAM3B;AAAA;AAAA,MACEi+B,GAAOv9B,GAAM,EAAC,MAAAV,GAAM,GAAIL,KAAetX,EAAQ,CAAC;AAAA;AAAA,EAEpD;AACF;ACzKO,MAAMg2C,KAAmB;AAAA,EAC9B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;ACrBO,IAAAC,KAAA,MAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWlB,YAAYh/B,GAAUi/B,GAAQvE,GAAO;AACnC,SAAK,SAASuE,GACd,KAAK,WAAWj/B,GAEZ06B,MACF,KAAK,QAAQA;AAAA,EAEjB;AACF;AAEAwE,GAAO,UAAU,SAAS,CAAA;AAC1BA,GAAO,UAAU,WAAW,CAAA;AAC5BA,GAAO,UAAU,QAAQ;ACdlB,SAASC,GAAMC,GAAa1E,GAAO;AAExC,QAAM16B,IAAW,CAAA,GAEXi/B,IAAS,CAAA;AAEf,aAAWpvB,KAAcuvB;AACvB,WAAO,OAAOp/B,GAAU6P,EAAW,QAAQ,GAC3C,OAAO,OAAOovB,GAAQpvB,EAAW,MAAM;AAGzC,SAAO,IAAIqvB,GAAOl/B,GAAUi/B,GAAQvE,CAAK;AAC3C;ACjBO,SAASr8B,GAAU9U,GAAO;AAC/B,SAAOA,EAAM,YAAW;AAC1B;ACNO,MAAM81C,GAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAShB,YAAYr/B,GAAUs/B,GAAW;AAC/B,SAAK,YAAYA,GACjB,KAAK,WAAWt/B;AAAA,EAClB;AACF;AAEAq/B,GAAK,UAAU,YAAY;AAC3BA,GAAK,UAAU,aAAa;AAC5BA,GAAK,UAAU,UAAU;AACzBA,GAAK,UAAU,wBAAwB;AACvCA,GAAK,UAAU,iBAAiB;AAChCA,GAAK,UAAU,UAAU;AACzBA,GAAK,UAAU,kBAAkB;AACjCA,GAAK,UAAU,SAAS;AACxBA,GAAK,UAAU,oBAAoB;AACnCA,GAAK,UAAU,WAAW;AAC1BA,GAAK,UAAU,iBAAiB;AAChCA,GAAK,UAAU,QAAQ;AC/BvB,IAAIE,KAAS;AAEN,MAAMC,IAAUC,GAAS,GACnBC,KAAaD,GAAS,GACtBE,KAAoBF,GAAS,GAC7BG,IAASH,GAAS,GAClBI,KAAiBJ,GAAS,GAC1BK,KAAiBL,GAAS,GAC1BM,KAAwBN,GAAS;AAE9C,SAASA,KAAY;AACnB,SAAO,KAAK,EAAEF;AAChB;;;;;;;;;;8CCLMlc;AAAA;AAAA,EACJ,OAAO,KAAK2c,EAAK;AAAA;AAGZ,MAAMC,WAAoBZ,GAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcpC,YAAYr/B,GAAUs/B,GAAWY,GAAMxF,GAAO;AAC5C,QAAIlqC,IAAQ;AAMZ,QAJA,MAAMwP,GAAUs/B,CAAS,GAEzBa,GAAK,MAAM,SAASzF,CAAK,GAErB,OAAOwF,KAAS;AAClB,aAAO,EAAE1vC,IAAQ6yB,GAAO,UAAQ;AAC9B,cAAMle,IAAQke,GAAO7yB,CAAK;AAC1B,QAAA2vC,GAAK,MAAM9c,GAAO7yB,CAAK,IAAI0vC,IAAOF,GAAM76B,CAAK,OAAO66B,GAAM76B,CAAK,CAAC;AAAA,MAClE;AAAA,EAEJ;AACF;AAEA86B,GAAY,UAAU,UAAU;AAchC,SAASE,GAAKpmC,GAAQa,GAAKrR,GAAO;AAChC,EAAIA,MACFwQ,EAAOa,CAAG,IAAIrR;AAElB;ACnBO,SAAS8zB,GAAOxN,GAAY;AAEjC,QAAMspB,IAAa,CAAA,GAEbiH,IAAU,CAAA;AAEhB,aAAW,CAACpgC,GAAUzW,CAAK,KAAK,OAAO,QAAQsmB,EAAW,UAAU,GAAG;AACrE,UAAM7E,IAAO,IAAIi1B;AAAA,MACfjgC;AAAA,MACA6P,EAAW,UAAUA,EAAW,cAAc,CAAA,GAAI7P,CAAQ;AAAA,MAC1DzW;AAAA,MACAsmB,EAAW;AAAA,IACjB;AAEI,IACEA,EAAW,mBACXA,EAAW,gBAAgB,SAAS7P,CAAQ,MAE5CgL,EAAK,kBAAkB,KAGzBmuB,EAAWn5B,CAAQ,IAAIgL,GAEvBo1B,EAAQ/hC,GAAU2B,CAAQ,CAAC,IAAIA,GAC/BogC,EAAQ/hC,GAAU2M,EAAK,SAAS,CAAC,IAAIhL;AAAA,EACvC;AAEA,SAAO,IAAIk/B,GAAO/F,GAAYiH,GAASvwB,EAAW,KAAK;AACzD;ACjEO,MAAMwwB,KAAOhjB,GAAO;AAAA,EACzB,YAAY;AAAA,IACV,sBAAsB;AAAA,IACtB,YAAYqiB;AAAA,IACZ,kBAAkB;AAAA,IAClB,UAAUA;AAAA,IACV,aAAaA;AAAA,IACb,cAAcE;AAAA,IACd,cAAcA;AAAA,IACd,aAAaA;AAAA,IACb,cAAcC;AAAA,IACd,aAAa;AAAA,IACb,iBAAiBA;AAAA,IACjB,aAAa;AAAA,IACb,cAAcH;AAAA,IACd,gBAAgBG;AAAA,IAChB,kBAAkB;AAAA,IAClB,cAAcH;AAAA,IACd,YAAYG;AAAA,IACZ,aAAaH;AAAA,IACb,cAAc;AAAA,IACd,YAAYA;AAAA,IACZ,aAAa;AAAA,IACb,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,gBAAgBG;AAAA,IAChB,WAAWD;AAAA,IACX,UAAU;AAAA,IACV,WAAWF;AAAA,IACX,eAAeA;AAAA,IACf,qBAAqBA;AAAA,IACrB,iBAAiB;AAAA,IACjB,UAAUG;AAAA,IACV,iBAAiB;AAAA,IACjB,cAAcD;AAAA,IACd,aAAaF;AAAA,IACb,cAAcA;AAAA,IACd,cAAc;AAAA,IACd,cAAcA;AAAA,IACd,qBAAqBG;AAAA,IACrB,cAAcD;AAAA,IACd,cAAcA;AAAA,IACd,aAAaA;AAAA,IACb,cAAcF;AAAA,IACd,aAAaE;AAAA,IACb,UAAU;AAAA,IACV,cAAcA;AAAA,IACd,cAAcA;AAAA,IACd,cAAcA;AAAA,IACd,eAAe;AAAA,IACf,MAAM;AAAA,EACV;AAAA,EACE,UAAUhkB,GAAG5b,GAAU;AACrB,WAAOA,MAAa,SAChBA,IACA,UAAUA,EAAS,MAAM,CAAC,EAAE,YAAW;AAAA,EAC7C;AACF,CAAC;ACpDM,SAASsgC,GAAuBC,GAAYjB,GAAW;AAC5D,SAAOA,KAAaiB,IAAaA,EAAWjB,CAAS,IAAIA;AAC3D;ACAO,SAASkB,GAAyBD,GAAYvgC,GAAU;AAC7D,SAAOsgC,GAAuBC,GAAYvgC,EAAS,YAAW,CAAE;AAClE;ACDO,MAAM4e,KAAOvB,GAAO;AAAA,EACzB,YAAY;AAAA,IACV,eAAe;AAAA,IACf,WAAW;AAAA,IACX,SAAS;AAAA,IACT,WAAW;AAAA,EACf;AAAA,EACE,iBAAiB,CAAC,WAAW,YAAY,SAAS,UAAU;AAAA,EAC5D,YAAY;AAAA;AAAA,IAEV,MAAM;AAAA,IACN,QAAQyiB;AAAA,IACR,eAAeD;AAAA,IACf,WAAWA;AAAA,IACX,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,iBAAiBL;AAAA,IACjB,qBAAqBA;AAAA,IACrB,gBAAgBA;AAAA,IAChB,KAAK;AAAA,IACL,IAAI;AAAA,IACJ,OAAOA;AAAA,IACP,gBAAgB;AAAA,IAChB,cAAcK;AAAA,IACd,WAAWL;AAAA,IACX,UAAUA;AAAA,IACV,UAAUK;AAAA,IACV,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAASL;AAAA,IACT,MAAM;AAAA,IACN,WAAWK;AAAA,IACX,MAAMD;AAAA,IACN,SAAS;AAAA,IACT,SAAS;AAAA,IACT,iBAAiBF;AAAA,IACjB,UAAUF;AAAA,IACV,cAAcK;AAAA,IACd,QAAQD,IAASE;AAAA,IACjB,aAAa;AAAA,IACb,MAAM;AAAA,IACN,UAAU;AAAA,IACV,UAAU;AAAA,IACV,SAASN;AAAA,IACT,OAAOA;AAAA,IACP,KAAK;AAAA,IACL,SAAS;AAAA,IACT,UAAUA;AAAA,IACV,UAAUG;AAAA,IACV,WAAWD;AAAA,IACX,SAAS;AAAA,IACT,cAAc;AAAA,IACd,eAAe;AAAA,IACf,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,gBAAgBF;AAAA,IAChB,YAAY;AAAA,IACZ,SAASK;AAAA,IACT,QAAQD;AAAA,IACR,QAAQD;AAAA,IACR,MAAMC;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAASC;AAAA,IACT,WAAWA;AAAA,IACX,IAAI;AAAA,IACJ,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,OAAOL;AAAA,IACP,WAAW;AAAA,IACX,WAAW;AAAA,IACX,IAAI;AAAA,IACJ,OAAOA;AAAA,IACP,QAAQ;AAAA,IACR,UAAUK;AAAA,IACV,SAASA;AAAA,IACT,WAAWL;AAAA,IACX,UAAUK;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,IACT,MAAML;AAAA,IACN,KAAKI;AAAA,IACL,UAAU;AAAA,IACV,KAAK;AAAA,IACL,WAAWA;AAAA,IACX,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,WAAWA;AAAA,IACX,UAAUJ;AAAA,IACV,OAAOA;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,IACP,UAAUA;AAAA,IACV,YAAYA;AAAA,IACZ,SAAS;AAAA,IACT,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,gBAAgB;AAAA,IAChB,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,WAAW;AAAA,IACX,kBAAkB;AAAA,IAClB,UAAU;AAAA,IACV,SAAS;AAAA,IACT,SAAS;AAAA,IACT,eAAe;AAAA,IACf,eAAe;AAAA,IACf,mBAAmB;AAAA,IACnB,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,SAAS;AAAA,IACT,WAAW;AAAA,IACX,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,kBAAkB;AAAA,IAClB,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,aAAa;AAAA,IACb,WAAW;AAAA,IACX,gBAAgB;AAAA,IAChB,aAAa;AAAA,IACb,cAAc;AAAA,IACd,cAAc;AAAA,IACd,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,oBAAoB;AAAA,IACpB,SAAS;AAAA,IACT,UAAU;AAAA,IACV,UAAU;AAAA,IACV,aAAa;AAAA,IACb,2BAA2B;AAAA,IAC3B,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,cAAc;AAAA,IACd,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,IACV,WAAW;AAAA,IACX,cAAc;AAAA,IACd,UAAU;AAAA,IACV,sBAAsB;AAAA,IACtB,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,SAAS;AAAA,IACT,MAAMA;AAAA,IACN,SAASI;AAAA,IACT,SAAS;AAAA,IACT,MAAMC;AAAA,IACN,aAAa;AAAA,IACb,aAAaL;AAAA,IACb,SAAS;AAAA,IACT,eAAe;AAAA,IACf,qBAAqB;AAAA,IACrB,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,UAAUA;AAAA,IACV,gBAAgB;AAAA,IAChB,KAAKK;AAAA,IACL,UAAUL;AAAA,IACV,UAAUA;AAAA,IACV,MAAMI;AAAA,IACN,SAASA;AAAA,IACT,SAASC;AAAA,IACT,OAAO;AAAA,IACP,QAAQL;AAAA,IACR,UAAUA;AAAA,IACV,UAAUA;AAAA,IACV,oBAAoBA;AAAA,IACpB,0BAA0BA;AAAA,IAC1B,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,MAAMI;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAMA;AAAA,IACN,YAAYF;AAAA,IACZ,KAAK;AAAA,IACL,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,OAAOE;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,IACP,UAAUA;AAAA,IACV,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,WAAW;AAAA,IACX,MAAM;AAAA,IACN,eAAeJ;AAAA,IACf,QAAQ;AAAA,IACR,OAAOE;AAAA,IACP,OAAOE;AAAA,IACP,MAAM;AAAA,IACN,oBAAoB;AAAA;AAAA;AAAA,IAIpB,OAAO;AAAA;AAAA,IACP,OAAO;AAAA;AAAA,IACP,SAASC;AAAA;AAAA,IACT,MAAM;AAAA;AAAA,IACN,YAAY;AAAA;AAAA,IACZ,SAAS;AAAA;AAAA,IACT,QAAQD;AAAA;AAAA,IACR,aAAa;AAAA;AAAA,IACb,cAAcA;AAAA;AAAA,IACd,aAAa;AAAA;AAAA,IACb,aAAa;AAAA;AAAA,IACb,MAAM;AAAA;AAAA,IACN,SAAS;AAAA;AAAA,IACT,SAAS;AAAA;AAAA,IACT,OAAO;AAAA;AAAA,IACP,MAAM;AAAA;AAAA,IACN,UAAU;AAAA;AAAA,IACV,UAAU;AAAA;AAAA,IACV,OAAO;AAAA;AAAA,IACP,SAASJ;AAAA;AAAA,IACT,SAASA;AAAA;AAAA,IACT,OAAO;AAAA;AAAA,IACP,MAAM;AAAA;AAAA,IACN,OAAO;AAAA;AAAA,IACP,aAAa;AAAA;AAAA,IACb,QAAQI;AAAA;AAAA,IACR,YAAYA;AAAA;AAAA,IACZ,MAAM;AAAA;AAAA,IACN,UAAU;AAAA;AAAA,IACV,QAAQ;AAAA;AAAA,IACR,cAAcA;AAAA;AAAA,IACd,aAAaA;AAAA;AAAA,IACb,UAAUJ;AAAA;AAAA,IACV,QAAQA;AAAA;AAAA,IACR,SAASA;AAAA;AAAA,IACT,QAAQA;AAAA;AAAA,IACR,QAAQ;AAAA;AAAA,IACR,SAAS;AAAA;AAAA,IACT,QAAQ;AAAA;AAAA,IACR,KAAK;AAAA;AAAA,IACL,aAAaI;AAAA;AAAA,IACb,OAAO;AAAA;AAAA,IACP,QAAQ;AAAA;AAAA,IACR,WAAWF;AAAA;AAAA,IACX,SAAS;AAAA;AAAA,IACT,SAAS;AAAA;AAAA,IACT,MAAM;AAAA;AAAA,IACN,WAAWE;AAAA;AAAA,IACX,WAAW;AAAA;AAAA,IACX,SAAS;AAAA;AAAA,IACT,QAAQ;AAAA;AAAA,IACR,OAAO;AAAA;AAAA,IACP,QAAQA;AAAA;AAAA;AAAA,IAGR,mBAAmB;AAAA,IACnB,aAAa;AAAA,IACb,UAAU;AAAA,IACV,yBAAyBJ;AAAA,IACzB,uBAAuBA;AAAA,IACvB,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,SAASI;AAAA,IACT,UAAU;AAAA,IACV,cAAc;AAAA,EAClB;AAAA,EACE,OAAO;AAAA,EACP,WAAWY;AACb,CAAC,GCvTYC,KAAMpjB,GAAO;AAAA,EACxB,YAAY;AAAA,IACV,cAAc;AAAA,IACd,mBAAmB;AAAA,IACnB,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,IACV,UAAU;AAAA,IACV,oBAAoB;AAAA,IACpB,2BAA2B;AAAA,IAC3B,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,aAAa;AAAA,IACb,UAAU;AAAA,IACV,kBAAkB;AAAA,IAClB,kBAAkB;AAAA,IAClB,aAAa;AAAA,IACb,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,4BAA4B;AAAA,IAC5B,0BAA0B;AAAA,IAC1B,UAAU;AAAA,IACV,WAAW;AAAA,IACX,cAAc;AAAA,IACd,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,eAAe;AAAA,IACf,WAAW;AAAA,IACX,WAAW;AAAA,IACX,aAAa;AAAA,IACb,SAAS;AAAA,IACT,aAAa;AAAA,IACb,cAAc;AAAA,IACd,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,UAAU;AAAA,IACV,OAAO;AAAA,IACP,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,eAAe;AAAA,IACf,SAAS;AAAA,IACT,UAAU;AAAA,IACV,WAAW;AAAA,IACX,kBAAkB;AAAA,IAClB,UAAU;AAAA,IACV,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,SAAS;AAAA,IACT,WAAW;AAAA,IACX,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,aAAa;AAAA,IACb,cAAc;AAAA,IACd,cAAc;AAAA,IACd,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,WAAW;AAAA,IACX,cAAc;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,UAAU;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,IACV,UAAU;AAAA,IACV,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,IACV,WAAW;AAAA,IACX,cAAc;AAAA,IACd,UAAU;AAAA,IACV,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,kBAAkB;AAAA,IAClB,mBAAmB;AAAA,IACnB,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,iBAAiB;AAAA,IACjB,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,aAAa;AAAA,IACb,uBAAuB;AAAA,IACvB,wBAAwB;AAAA,IACxB,iBAAiB;AAAA,IACjB,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,aAAa;AAAA,IACb,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,iBAAiB;AAAA,IACjB,QAAQ;AAAA,IACR,mBAAmB;AAAA,IACnB,oBAAoB;AAAA,IACpB,aAAa;AAAA,IACb,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,UAAU;AAAA,IACV,cAAc;AAAA,IACd,eAAe;AAAA,IACf,cAAc;AAAA,IACd,UAAU;AAAA,IACV,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,IACb,SAAS;AAAA;AAAA,IAET,eAAe;AAAA,IACf,eAAe;AAAA,EACnB;AAAA,EACE,YAAY;AAAA,IACV,OAAO0iB;AAAA,IACP,cAAcH;AAAA,IACd,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,mBAAmB;AAAA,IACnB,YAAYA;AAAA,IACZ,WAAWA;AAAA,IACX,YAAY;AAAA,IACZ,QAAQA;AAAA,IACR,eAAe;AAAA,IACf,eAAe;AAAA,IACf,SAASA;AAAA,IACT,WAAW;AAAA,IACX,eAAe;AAAA,IACf,eAAe;AAAA,IACf,aAAa;AAAA,IACb,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAMA;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,WAAWA;AAAA,IACX,WAAWC;AAAA,IACX,MAAM;AAAA,IACN,UAAU;AAAA,IACV,eAAe;AAAA,IACf,UAAU;AAAA,IACV,OAAO;AAAA,IACP,oBAAoB;AAAA,IACpB,2BAA2B;AAAA,IAC3B,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,SAAS;AAAA,IACT,mBAAmB;AAAA,IACnB,kBAAkB;AAAA,IAClB,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,GAAG;AAAA,IACH,UAAU;AAAA,IACV,eAAe;AAAA,IACf,SAASD;AAAA,IACT,iBAAiBA;AAAA,IACjB,WAAW;AAAA,IACX,SAAS;AAAA,IACT,KAAK;AAAA,IACL,SAASA;AAAA,IACT,kBAAkB;AAAA,IAClB,UAAUJ;AAAA,IACV,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,UAAU;AAAA,IACV,WAAWI;AAAA,IACX,kBAAkB;AAAA,IAClB,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAUA;AAAA,IACV,2BAA2B;AAAA,IAC3B,MAAM;AAAA,IACN,aAAaA;AAAA,IACb,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,WAAW;AAAA,IACX,gBAAgB;AAAA,IAChB,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAIE;AAAA,IACJ,IAAIA;AAAA,IACJ,WAAWA;AAAA,IACX,4BAA4B;AAAA,IAC5B,0BAA0B;AAAA,IAC1B,UAAU;AAAA,IACV,mBAAmB;AAAA,IACnB,eAAe;AAAA,IACf,SAAS;AAAA,IACT,SAASF;AAAA,IACT,mBAAmB;AAAA,IACnB,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,UAAU;AAAA,IACV,WAAWA;AAAA,IACX,cAAcA;AAAA,IACd,cAAcA;AAAA,IACd,IAAI;AAAA,IACJ,aAAaA;AAAA,IACb,gBAAgB;AAAA,IAChB,mBAAmB;AAAA,IACnB,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,WAAWA;AAAA,IACX,GAAGA;AAAA,IACH,IAAIA;AAAA,IACJ,IAAIA;AAAA,IACJ,IAAIA;AAAA,IACJ,IAAIA;AAAA,IACJ,cAAcG;AAAA,IACd,kBAAkB;AAAA,IAClB,WAAW;AAAA;AAAA,IACX,YAAY;AAAA;AAAA,IACZ,UAAU;AAAA;AAAA,IACV,SAAS;AAAA,IACT,MAAM;AAAA,IACN,cAAc;AAAA,IACd,eAAe;AAAA,IACf,eAAe;AAAA,IACf,mBAAmBH;AAAA,IACnB,OAAO;AAAA,IACP,WAAW;AAAA,IACX,WAAW;AAAA,IACX,aAAa;AAAA,IACb,cAAc;AAAA,IACd,aAAa;AAAA,IACb,aAAa;AAAA,IACb,MAAM;AAAA,IACN,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,cAAc;AAAA,IACd,KAAK;AAAA,IACL,OAAO;AAAA,IACP,wBAAwB;AAAA,IACxB,uBAAuB;AAAA,IACvB,WAAWA;AAAA,IACX,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,IACb,cAAc;AAAA,IACd,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,UAAU;AAAA,IACV,OAAO;AAAA,IACP,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,eAAe;AAAA,IACf,SAAS;AAAA,IACT,UAAU;AAAA,IACV,WAAW;AAAA,IACX,kBAAkB;AAAA,IAClB,UAAU;AAAA,IACV,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,SAAS;AAAA,IACT,WAAW;AAAA,IACX,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,aAAa;AAAA,IACb,cAAc;AAAA,IACd,cAAc;AAAA,IACd,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,WAAW;AAAA,IACX,cAAc;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,UAAU;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,IACV,UAAU;AAAA,IACV,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,IACV,WAAW;AAAA,IACX,cAAc;AAAA,IACd,UAAU;AAAA,IACV,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,UAAU;AAAA,IACV,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,SAAS;AAAA,IACT,kBAAkBA;AAAA,IAClB,mBAAmBA;AAAA,IACnB,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,MAAM;AAAA,IACN,YAAYA;AAAA,IACZ,qBAAqB;AAAA,IACrB,kBAAkB;AAAA,IAClB,cAAc;AAAA,IACd,OAAO;AAAA,IACP,MAAMC;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,eAAe;AAAA,IACf,QAAQ;AAAA,IACR,WAAWD;AAAA,IACX,WAAWA;AAAA,IACX,WAAWA;AAAA,IACX,eAAe;AAAA,IACf,qBAAqB;AAAA,IACrB,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,UAAUG;AAAA,IACV,GAAG;AAAA,IACH,QAAQ;AAAA,IACR,gBAAgB;AAAA,IAChB,MAAM;AAAA,IACN,MAAM;AAAA,IACN,KAAKA;AAAA,IACL,KAAKA;AAAA,IACL,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,oBAAoBA;AAAA,IACpB,kBAAkBA;AAAA,IAClB,eAAeA;AAAA,IACf,iBAAiBA;AAAA,IACjB,UAAU;AAAA,IACV,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,MAAM;AAAA,IACN,gBAAgB;AAAA,IAChB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,cAAc;AAAA,IACd,kBAAkBH;AAAA,IAClB,kBAAkBA;AAAA,IAClB,cAAc;AAAA,IACd,SAAS;AAAA,IACT,aAAa;AAAA,IACb,cAAc;AAAA,IACd,OAAO;AAAA,IACP,OAAO;AAAA,IACP,aAAa;AAAA,IACb,WAAW;AAAA,IACX,aAAa;AAAA,IACb,uBAAuBA;AAAA,IACvB,wBAAwBA;AAAA,IACxB,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,iBAAiBG;AAAA,IACjB,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,kBAAkBH;AAAA,IAClB,eAAeA;AAAA,IACf,aAAa;AAAA,IACb,OAAO;AAAA,IACP,cAAcA;AAAA,IACd,cAAc;AAAA,IACd,qBAAqB;AAAA,IACrB,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,sBAAsB;AAAA,IACtB,gBAAgBG;AAAA,IAChB,UAAUH;AAAA,IACV,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,SAASA;AAAA,IACT,SAASA;AAAA,IACT,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,OAAO;AAAA,IACP,mBAAmB;AAAA,IACnB,MAAM;AAAA,IACN,QAAQG;AAAA,IACR,IAAI;AAAA,IACJ,WAAW;AAAA,IACX,iBAAiB;AAAA,IACjB,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,mBAAmBH;AAAA,IACnB,oBAAoBA;AAAA,IACpB,SAAS;AAAA,IACT,aAAa;AAAA,IACb,cAAc;AAAA,IACd,YAAYA;AAAA,IACZ,QAAQ;AAAA,IACR,aAAaA;AAAA,IACb,eAAeA;AAAA,IACf,cAAc;AAAA,IACd,UAAUA;AAAA,IACV,cAAcA;AAAA,IACd,SAAS;AAAA,IACT,UAAUA;AAAA,IACV,aAAaA;AAAA,IACb,aAAaA;AAAA,IACb,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,aAAa;AAAA,IACb,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,kBAAkB;AAAA,IAClB,SAASA;AAAA,IACT,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,kBAAkB;AAAA,IAClB,GAAG;AAAA,IACH,YAAY;AAAA,EAChB;AAAA,EACE,OAAO;AAAA,EACP,WAAWU;AACb,CAAC,GCpjBYI,KAAQrjB,GAAO;AAAA,EAC1B,YAAY;AAAA,IACV,cAAc;AAAA,IACd,cAAc;AAAA,IACd,WAAW;AAAA,IACX,WAAW;AAAA,IACX,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,WAAW;AAAA,EACf;AAAA,EACE,OAAO;AAAA,EACP,UAAUzB,GAAG5b,GAAU;AACrB,WAAO,WAAWA,EAAS,MAAM,CAAC,EAAE,YAAW;AAAA,EACjD;AACF,CAAC,GCbY2gC,KAAQtjB,GAAO;AAAA,EAC1B,YAAY,EAAC,YAAY,cAAa;AAAA,EACtC,YAAY,EAAC,YAAY,MAAM,OAAO,KAAI;AAAA,EAC1C,OAAO;AAAA,EACP,WAAWmjB;AACb,CAAC,GCNYI,KAAMvjB,GAAO;AAAA,EACxB,YAAY,EAAC,SAAS,MAAM,SAAS,MAAM,UAAU,KAAI;AAAA,EACzD,OAAO;AAAA,EACP,UAAUzB,GAAG5b,GAAU;AACrB,WAAO,SAASA,EAAS,MAAM,CAAC,EAAE,YAAW;AAAA,EAC/C;AACF,CAAC,GCAK6gC,KAAM,UACNC,KAAO,WACPC,KAAQ;AAgCP,SAAS9b,GAAK+b,GAAQz3C,GAAO;AAClC,QAAM01C,IAAS5gC,GAAU9U,CAAK;AAC9B,MAAIyW,IAAWzW,GACX03C,IAAO5B;AAEX,MAAIJ,KAAU+B,EAAO;AACnB,WAAOA,EAAO,SAASA,EAAO,OAAO/B,CAAM,CAAC;AAG9C,MAAIA,EAAO,SAAS,KAAKA,EAAO,MAAM,GAAG,CAAC,MAAM,UAAU8B,GAAM,KAAKx3C,CAAK,GAAG;AAE3E,QAAIA,EAAM,OAAO,CAAC,MAAM,KAAK;AAE3B,YAAMoZ,IAAOpZ,EAAM,MAAM,CAAC,EAAE,QAAQu3C,IAAMI,EAAS;AACnD,MAAAlhC,IAAW,SAAS2C,EAAK,OAAO,CAAC,EAAE,YAAW,IAAKA,EAAK,MAAM,CAAC;AAAA,IACjE,OAAO;AAEL,YAAMA,IAAOpZ,EAAM,MAAM,CAAC;AAE1B,UAAI,CAACu3C,GAAK,KAAKn+B,CAAI,GAAG;AACpB,YAAIw+B,IAASx+B,EAAK,QAAQk+B,IAAKO,EAAK;AAEpC,QAAID,EAAO,OAAO,CAAC,MAAM,QACvBA,IAAS,MAAMA,IAGjB53C,IAAQ,SAAS43C;AAAA,MACnB;AAAA,IACF;AAEA,IAAAF,IAAOhB;AAAA,EACT;AAEA,SAAO,IAAIgB,EAAKjhC,GAAUzW,CAAK;AACjC;AAQA,SAAS63C,GAAMpjB,GAAI;AACjB,SAAO,MAAMA,EAAG,YAAW;AAC7B;AAQA,SAASkjB,GAAUljB,GAAI;AACrB,SAAOA,EAAG,OAAO,CAAC,EAAE,YAAW;AACjC;ACrFO,MAAMY,KAAOugB,GAAM,CAACkB,IAAMgB,IAAUX,IAAOC,IAAOC,EAAG,GAAG,MAAM,GAKxDH,KAAMtB,GAAM,CAACkB,IAAMiB,IAASZ,IAAOC,IAAOC,EAAG,GAAG,KAAK,GCD5DW,KAAqB,aACrBC,KAAsB,mCACtBC;AAAA;AAAA,EAEJ;AAAA,GACIC,KAAmB,uBAGnBC,KAAqB,oBAAI,QAAO;AAS/B,SAASC,GAAKr4C,GAAOR,GAAS;AAQnC,MAPAQ,IAAQA,EAAM;AAAA,IACZR,EAAQ,SACJ84C,GAA6B94C,EAAQ,MAAM,IAC3Cw4C;AAAA,IACJO;AAAA,EACJ,GAEM/4C,EAAQ,UAAUA,EAAQ;AAC5B,WAAOQ;AAGT,SACEA,EAEG,QAAQi4C,IAAqBO,CAAS,EAGtC,QAAQN,IAAwBK,CAAK;AAQ1C,WAASC,EAAUnF,GAAMpsC,GAAOsJ,GAAK;AACnC,WAAO/Q,EAAQ;AAAA,OACZ6zC,EAAK,WAAW,CAAC,IAAI,SAAU,OAC9BA,EAAK,WAAW,CAAC,IACjB,QACA;AAAA,MACF9iC,EAAI,WAAWtJ,IAAQ,CAAC;AAAA,MACxBzH;AAAA,IACN;AAAA,EACE;AAOA,WAAS+4C,EAAM1+B,GAAW5S,GAAOsJ,GAAK;AACpC,WAAO/Q,EAAQ;AAAA,MACbqa,EAAU,WAAW,CAAC;AAAA,MACtBtJ,EAAI,WAAWtJ,IAAQ,CAAC;AAAA,MACxBzH;AAAA,IACN;AAAA,EACE;AACF;AAUA,SAAS84C,GAA6BG,GAAQ;AAC5C,MAAIC,IAASN,GAAmB,IAAIK,CAAM;AAE1C,SAAKC,MACHA,IAASC,GAAuBF,CAAM,GACtCL,GAAmB,IAAIK,GAAQC,CAAM,IAGhCA;AACT;AAMA,SAASC,GAAuBF,GAAQ;AAEtC,QAAMG,IAAS,CAAA;AACf,MAAI3xC,IAAQ;AAEZ,SAAO,EAAEA,IAAQwxC,EAAO;AACtB,IAAAG,EAAO,KAAKH,EAAOxxC,CAAK,EAAE,QAAQkxC,IAAkB,MAAM,CAAC;AAG7D,SAAO,IAAI,OAAO,QAAQS,EAAO,KAAK,GAAG,IAAI,KAAK,GAAG;AACvD;ACpHA,MAAMC,KAAmB;AAUlB,SAASC,GAAclkC,GAAM1Q,GAAM60C,GAAM;AAC9C,QAAM/4C,IAAQ,QAAQ4U,EAAK,SAAS,EAAE,EAAE,YAAW;AACnD,SAAOmkC,KAAQ70C,KAAQ,CAAC20C,GAAiB,KAAK,OAAO,aAAa30C,CAAI,CAAC,IACnElE,IACAA,IAAQ;AACd;ACfA,MAAMg5C,KAAe;AAUd,SAASC,GAAUrkC,GAAM1Q,GAAM60C,GAAM;AAC1C,QAAM/4C,IAAQ,OAAO,OAAO4U,CAAI;AAChC,SAAOmkC,KAAQ70C,KAAQ,CAAC80C,GAAa,KAAK,OAAO,aAAa90C,CAAI,CAAC,IAC/DlE,IACAA,IAAQ;AACd;ACVO,MAAMk5C,KAA0B;AAAA,EACraC,KAAyB;AAAA,EACpC,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,KAAK;AAAA,EACL,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,MAAM;AAAA,EACN,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,SAAS;AAAA,EACT,MAAM;AAAA,EACN,KAAK;AAAA,EACL,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,SAAS;AAAA,EACT,IAAI;AAAA,EACJ,KAAK;AAAA,EACL,OAAO;AAAA,EACP,KAAK;AAAA,EACL,SAAS;AAAA,EACT,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,OAAO;AAAA,EACP,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,SAAS;AAAA,EACT,MAAM;AAAA,EACN,KAAK;AAAA,EACL,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,SAAS;AAAA,EACT,IAAI;AAAA,EACJ,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,KAAK;AAAA,EACL,SAAS;AAAA,EACT,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,OAAO;AAAA,EACP,UAAU;AAAA,EACV,OAAO;AAAA,EACP,KAAK;AAAA,EACL,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,SAAS;AAAA,EACT,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,KAAK;AAAA,EACL,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,KAAK;AAAA,EACL,KAAK;AAAA,EACL,IAAI;AAAA,EACJ,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,KAAK;AAAA,EACL,MAAM;AAAA,EACN,OAAO;AAAA,EACP,IAAI;AAAA,EACJ,OAAO;AAAA,EACP,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,KAAK;AAAA,EACL,KAAK;AAAA,EACL,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,MAAM;AAAA,EACN,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,KAAK;AAAA,EACL,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,MAAM;AACR,GC5PaC,KAAY;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GCXMxiC,KAAM,CAAA,EAAG,gBAOTyiC,KAAa,CAAA;AAGnB,IAAIhoC;AAEJ,KAAKA,MAAO8nC;AACV,EAAIviC,GAAI,KAAKuiC,IAAwB9nC,EAAG,MACtCgoC,GAAWF,GAAuB9nC,EAAG,CAAC,IAAIA;AAI9C,MAAMioC,KAAuB;AAWtB,SAASC,GAAQ3kC,GAAM1Q,GAAM60C,GAAMhD,GAAW;AACnD,QAAMl8B,IAAY,OAAO,aAAajF,CAAI;AAE1C,MAAIgC,GAAI,KAAKyiC,IAAYx/B,CAAS,GAAG;AACnC,UAAMpI,IAAO4nC,GAAWx/B,CAAS,GAC3B7Z,IAAQ,MAAMyR;AAEpB,WACEsnC,KACAG,GAAwB,SAASznC,CAAI,KACrC,CAAC2nC,GAAU,SAAS3nC,CAAI,MACvB,CAACskC,KACC7xC,KACCA,MAAS,MACTo1C,GAAqB,KAAK,OAAO,aAAap1C,CAAI,CAAC,KAEhDlE,IAGFA,IAAQ;AAAA,EACjB;AAEA,SAAO;AACT;AC3BO,SAASw5C,GAAY5kC,GAAM1Q,GAAM1E,GAAS;AAC/C,MAAImhB,IAAUm4B,GAAclkC,GAAM1Q,GAAM1E,EAAQ,sBAAsB,GAElEi6C;AAqBJ,OAnBIj6C,EAAQ,sBAAsBA,EAAQ,2BACxCi6C,IAAQF;AAAA,IACN3kC;AAAA,IACA1Q;AAAA,IACA1E,EAAQ;AAAA,IACRA,EAAQ;AAAA,EACd,KAcKA,EAAQ,yBAAyB,CAACi6C,MACnCj6C,EAAQ,uBACR;AACA,UAAMk6C,IAAUT,GAAUrkC,GAAM1Q,GAAM1E,EAAQ,sBAAsB;AAEpE,IAAIk6C,EAAQ,SAAS/4B,EAAQ,WAC3BA,IAAU+4B;AAAA,EAEd;AAEA,SAAOD,MACJ,CAACj6C,EAAQ,yBAAyBi6C,EAAM,SAAS94B,EAAQ,UACxD84B,IACA94B;AACN;ACjDO,SAASg5B,GAAkB35C,GAAOR,GAAS;AAChD,SAAO64C,GAAKr4C,GAAO,OAAO,OAAO,EAAC,QAAQw5C,GAAW,GAAGh6C,CAAO,CAAC;AAClE;ACdA,MAAMo6C,KAAmB,8BAGnBC,KAA2B,CAAC,GAAG,GAC/BC,KAAsB,CAAC,KAAK,GAAG;AAgB9B,SAASvvB,GAAQja,GAAMowB,GAAIqZ,GAAIhrC,GAAO;AAE3C,SAAOA,EAAM,SAAS,gBAClB,OACE4qC;AAAA,IACErpC,EAAK;AAAA,IACL,OAAO,OAAO,CAAA,GAAIvB,EAAM,SAAS,qBAAqB;AAAA,MACpD,QAAQ8qC;AAAA,IACpB,CAAW;AAAA,EACX,IACQ,MACF,SAASvpC,EAAK,MAAM,QAAQspC,IAAkBI,CAAM,IAAI;AAK5D,WAASA,EAAOvlB,GAAI;AAClB,WAAOklB;AAAA,MACLllB;AAAA,MACA,OAAO,OAAO,CAAA,GAAI1lB,EAAM,SAAS,qBAAqB;AAAA,QACpD,QAAQ+qC;AAAA,MAChB,CAAO;AAAA,IACP;AAAA,EACE;AACF;AChCO,SAASG,GAAQvZ,GAAIqZ,GAAIG,GAAInrC,GAAO;AACzC,SACE,QACCA,EAAM,SAAS,eAAe,YAAY,cAC1CA,EAAM,SAAS,eAAe,KAAK,OACpC;AAEJ;ACkCO,SAASorC,GAAU3pC,GAAQhR,GAAS;AACzC,QAAM0Q,IAAW1Q,KAAW,CAAA;AAK5B,UAFcgR,EAAOA,EAAO,SAAS,CAAC,MAAM,KAAK,CAAC,GAAGA,GAAQ,EAAE,IAAIA,GAGhE;AAAA,KACEN,EAAS,WAAW,MAAM,MACzB,OACCA,EAAS,YAAY,KAAQ,KAAK;AAAA,EAC3C,EACK,KAAI;AACT;ACpDO,SAASiqC,GAAU3pC,GAAQ;AAChC,SAAOA,EAAO,KAAK,GAAG,EAAE,KAAI;AAC9B;ACjBA,MAAM4pC,KAAK;AAaJ,SAASC,GAAWphC,GAAO;AAChC,SAAO,OAAOA,KAAU,WACpBA,EAAM,SAAS,SACbmhB,GAAMnhB,EAAM,KAAK,IACjB,KACFmhB,GAAMnhB,CAAK;AACjB;AAMA,SAASmhB,GAAMp6B,GAAO;AACpB,SAAOA,EAAM,QAAQo6C,IAAI,EAAE,MAAM;AACnC;AC3BO,MAAME,KAAezhB,GAAS,CAAC,GACzB0hB,KAAgB1hB,GAAS,EAAE,GAGlC2hB,KAAgB,CAAA;AAOtB,SAAS3hB,GAASqd,GAAW;AAC3B,SAAOvO;AAgBP,WAASA,EAAQ/zB,GAAQ3M,GAAOwzC,GAAmB;AACjD,UAAM5hB,IAAWjlB,IAASA,EAAO,WAAW4mC;AAC5C,QAAIv7B,KAAUhY,KAAS,KAAKivC,GACxBhyC,IAAO20B,EAAS5Z,CAAM;AAE1B,QAAI,CAACw7B;AACH,aAAOv2C,KAAQm2C,GAAWn2C,CAAI;AAC5B,QAAA+a,KAAUi3B,GACVhyC,IAAO20B,EAAS5Z,CAAM;AAK1B,WAAO/a;AAAA,EACT;AACF;AC/BA,MAAM0S,KAAM,CAAA,EAAG;AAWR,SAAS8jC,GAASra,GAAU;AACjC,SAAO0Y;AAOP,WAASA,EAAKzoC,GAAMrJ,GAAO2M,GAAQ;AACjC,WACEgD,GAAI,KAAKypB,GAAU/vB,EAAK,OAAO,KAC/B+vB,EAAS/vB,EAAK,OAAO,EAAEA,GAAMrJ,GAAO2M,CAAM;AAAA,EAE9C;AACF;ACnCO,MAAM+mC,KAAUD,GAAS;AAAA,EAChC,MAAEnxC;AAAAA,EACA,SAASqxC;AAAA,EACT,UAAUA;AAAA,EACV,IAAAC;AAAA,EACA,IAAAC;AAAA,EACA,MAAMF;AAAA,EACR,MAAEvlB;AAAAA,EACA,IAAA0lB;AAAA,EACA,UAAAC;AAAA,EACA,QAAAC;AAAA,EACA,GAAAC;AAAA,EACA,IAAIC;AAAA,EACJ,IAAIA;AAAA,EACN,OAAEC;AAAAA,EACA,IAAI7wC;AAAA,EACJ,OAAA8wC;AAAA,EACA,IAAI9wC;AAAA,EACJ,OAAA+wC;AAAA,EACA,IAAAC;AACF,CAAC;AAcD,SAASX,GAAwBvoB,GAAGprB,GAAO2M,GAAQ;AACjD,QAAM1P,IAAOo2C,GAAa1mC,GAAQ3M,GAAO,EAAI;AAC7C,SACE,CAAC/C,KACAA,EAAK,SAAS,aACb,EAAEA,EAAK,SAAS,UAAUm2C,GAAWn2C,EAAK,MAAM,OAAO,CAAC,CAAC;AAE/D;AAcA,SAASmxB,GAAKhD,GAAGprB,GAAO2M,GAAQ;AAC9B,QAAM1P,IAAOo2C,GAAa1mC,GAAQ3M,CAAK;AACvC,SAAO,CAAC/C,KAAQA,EAAK,SAAS;AAChC;AAcA,SAASqF,GAAK8oB,GAAGprB,GAAO2M,GAAQ;AAC9B,QAAM1P,IAAOo2C,GAAa1mC,GAAQ3M,CAAK;AACvC,SAAO,CAAC/C,KAAQA,EAAK,SAAS;AAChC;AAcA,SAASg3C,GAAE7oB,GAAGprB,GAAO2M,GAAQ;AAC3B,QAAM1P,IAAOo2C,GAAa1mC,GAAQ3M,CAAK;AACvC,SAAO/C,IACHA,EAAK,SAAS,cACXA,EAAK,YAAY,aAChBA,EAAK,YAAY,aACjBA,EAAK,YAAY,WACjBA,EAAK,YAAY,gBACjBA,EAAK,YAAY,aACjBA,EAAK,YAAY,SACjBA,EAAK,YAAY,QACjBA,EAAK,YAAY,cACjBA,EAAK,YAAY,gBACjBA,EAAK,YAAY,YACjBA,EAAK,YAAY,YACjBA,EAAK,YAAY,UACjBA,EAAK,YAAY,QACjBA,EAAK,YAAY,QACjBA,EAAK,YAAY,QACjBA,EAAK,YAAY,QACjBA,EAAK,YAAY,QACjBA,EAAK,YAAY,QACjBA,EAAK,YAAY,YACjBA,EAAK,YAAY,YACjBA,EAAK,YAAY,QACjBA,EAAK,YAAY,UACjBA,EAAK,YAAY,UACjBA,EAAK,YAAY,SACjBA,EAAK,YAAY,QACjBA,EAAK,YAAY,OACjBA,EAAK,YAAY,SACjBA,EAAK,YAAY,aACjBA,EAAK,YAAY,WACjBA,EAAK,YAAY,QACrB,CAAC0P;AAAA,EAEC,EACEA,EAAO,SAAS,cACfA,EAAO,YAAY,OAClBA,EAAO,YAAY,WACnBA,EAAO,YAAY,SACnBA,EAAO,YAAY,SACnBA,EAAO,YAAY,SACnBA,EAAO,YAAY,cACnBA,EAAO,YAAY;AAE/B;AAcA,SAASmnC,GAAG1oB,GAAGprB,GAAO2M,GAAQ;AAC5B,QAAM1P,IAAOo2C,GAAa1mC,GAAQ3M,CAAK;AACvC,SAAO,CAAC/C,KAASA,EAAK,SAAS,aAAaA,EAAK,YAAY;AAC/D;AAcA,SAAS42C,GAAGzoB,GAAGprB,GAAO2M,GAAQ;AAC5B,QAAM1P,IAAOo2C,GAAa1mC,GAAQ3M,CAAK;AACvC,SAAO,GACL/C,KACEA,EAAK,SAAS,cACbA,EAAK,YAAY,QAAQA,EAAK,YAAY;AAEjD;AAcA,SAAS22C,GAAGxoB,GAAGprB,GAAO2M,GAAQ;AAC5B,QAAM1P,IAAOo2C,GAAa1mC,GAAQ3M,CAAK;AACvC,SACE,CAAC/C,KACAA,EAAK,SAAS,cACZA,EAAK,YAAY,QAAQA,EAAK,YAAY;AAEjD;AAcA,SAASi3C,GAAY9oB,GAAGprB,GAAO2M,GAAQ;AACrC,QAAM1P,IAAOo2C,GAAa1mC,GAAQ3M,CAAK;AACvC,SACE,CAAC/C,KACAA,EAAK,SAAS,cACZA,EAAK,YAAY,QAAQA,EAAK,YAAY;AAEjD;AAcA,SAAS82C,GAAS3oB,GAAGprB,GAAO2M,GAAQ;AAClC,QAAM1P,IAAOo2C,GAAa1mC,GAAQ3M,CAAK;AACvC,SAAO,CAAC/C,KAASA,EAAK,SAAS,aAAaA,EAAK,YAAY;AAC/D;AAcA,SAAS+2C,GAAO5oB,GAAGprB,GAAO2M,GAAQ;AAChC,QAAM1P,IAAOo2C,GAAa1mC,GAAQ3M,CAAK;AACvC,SACE,CAAC/C,KACAA,EAAK,SAAS,cACZA,EAAK,YAAY,YAAYA,EAAK,YAAY;AAErD;AAcA,SAASo3C,GAAMjpB,GAAGprB,GAAO2M,GAAQ;AAC/B,QAAM1P,IAAOo2C,GAAa1mC,GAAQ3M,CAAK;AACvC,SAAO,GACL/C,KACEA,EAAK,SAAS,cACbA,EAAK,YAAY,WAAWA,EAAK,YAAY;AAEpD;AAcA,SAASk3C,GAAM/oB,GAAGprB,GAAO2M,GAAQ;AAC/B,QAAM1P,IAAOo2C,GAAa1mC,GAAQ3M,CAAK;AACvC,SACE,CAAC/C,KACAA,EAAK,SAAS,cACZA,EAAK,YAAY,WAAWA,EAAK,YAAY;AAEpD;AAcA,SAASm3C,GAAMhpB,GAAGprB,GAAO2M,GAAQ;AAC/B,SAAO,CAAC0mC,GAAa1mC,GAAQ3M,CAAK;AACpC;AAcA,SAASs0C,GAAGlpB,GAAGprB,GAAO2M,GAAQ;AAC5B,QAAM1P,IAAOo2C,GAAa1mC,GAAQ3M,CAAK;AACvC,SAAO,CAAC/C,KAASA,EAAK,SAAS,aAAaA,EAAK,YAAY;AAC/D;AAcA,SAASqG,GAAM8nB,GAAGprB,GAAO2M,GAAQ;AAC/B,QAAM1P,IAAOo2C,GAAa1mC,GAAQ3M,CAAK;AACvC,SACE,CAAC/C,KACAA,EAAK,SAAS,cACZA,EAAK,YAAY,QAAQA,EAAK,YAAY;AAEjD;AC5VO,MAAMs3C,KAAUd,GAAS;AAAA,EAC9B,MAAAnxC;AAAA,EACA,UAAAkyC;AAAA,EACA,MAAA/nB;AAAA,EACA,MAAA2B;AAAA,EACA,OAAA+lB;AACF,CAAC;AAUD,SAAS/lB,GAAK/kB,GAAM;AAClB,QAAMojB,IAAO4mB,GAAahqC,GAAM,EAAE;AAClC,SAAO,CAACojB,KAAQA,EAAK,SAAS;AAChC;AAUA,SAASA,GAAKpjB,GAAM;AAElB,QAAM6N,IAAO,oBAAI,IAAG;AAIpB,aAAWnR,KAASsD,EAAK;AACvB,QACEtD,EAAM,SAAS,cACdA,EAAM,YAAY,UAAUA,EAAM,YAAY,UAC/C;AACA,UAAImR,EAAK,IAAInR,EAAM,OAAO,EAAG,QAAO;AACpC,MAAAmR,EAAK,IAAInR,EAAM,OAAO;AAAA,IACxB;AAKF,QAAMA,IAAQsD,EAAK,SAAS,CAAC;AAC7B,SAAO,CAACtD,KAASA,EAAM,SAAS;AAClC;AAUA,SAASzD,GAAK+G,GAAM;AAClB,QAAMojB,IAAO4mB,GAAahqC,GAAM,IAAI,EAAI;AAExC,SACE,CAACojB,KACAA,EAAK,SAAS,aACb,EAAEA,EAAK,SAAS,UAAU2mB,GAAW3mB,EAAK,MAAM,OAAO,CAAC,CAAC,MACzD,EACEA,EAAK,SAAS,cACbA,EAAK,YAAY,UAChBA,EAAK,YAAY,UACjBA,EAAK,YAAY,YACjBA,EAAK,YAAY,WACjBA,EAAK,YAAY;AAG3B;AAiBA,SAAS+nB,GAASnrC,GAAMrJ,GAAO2M,GAAQ;AACrC,QAAMpE,IAAW+qC,GAAc3mC,GAAQ3M,CAAK,GACtCysB,IAAO4mB,GAAahqC,GAAM,IAAI,EAAI;AAGxC,SACEsD,KACApE,KACAA,EAAS,SAAS,aAClBA,EAAS,YAAY,cACrBmrC,GAAQnrC,GAAUoE,EAAO,SAAS,QAAQpE,CAAQ,GAAGoE,CAAM,IAEpD,KAGF,GAAQ8f,KAAQA,EAAK,SAAS,aAAaA,EAAK,YAAY;AACrE;AAcA,SAAS0nB,GAAM9qC,GAAMrJ,GAAO2M,GAAQ;AAClC,QAAMpE,IAAW+qC,GAAc3mC,GAAQ3M,CAAK,GACtCysB,IAAO4mB,GAAahqC,GAAM,EAAE;AAGlC,SACEsD,KACApE,KACAA,EAAS,SAAS,cACjBA,EAAS,YAAY,WAAWA,EAAS,YAAY,YACtDmrC,GAAQnrC,GAAUoE,EAAO,SAAS,QAAQpE,CAAQ,GAAGoE,CAAM,IAEpD,KAGF,GAAQ8f,KAAQA,EAAK,SAAS,aAAaA,EAAK,YAAY;AACrE;AC7HA,MAAMgoB,KAAY;AAAA;AAAA,EAEhB,MAAM;AAAA,IACJ,CAAC;AAAA,WAAgB,MAAM,EAAE,GAAG;AAAA,eAAoB,MAAM,EAAE,CAAC;AAAA,IACzD,CAAC;AAAA,cAAsB,MAAM,EAAE,GAAG;AAAA,gBAAuB,MAAM,EAAE,CAAC;AAAA,EACtE;AAAA;AAAA,EAEE,UAAU;AAAA,IACR,CAAC;AAAA,SAAc,MAAM,EAAE,GAAG;AAAA,eAAsB,MAAM,EAAE,CAAC;AAAA,IACzD,CAAC;AAAA,eAAsB,MAAM,EAAE,GAAG;AAAA,eAAsB,MAAM,EAAE,CAAC;AAAA,EACrE;AAAA;AAAA,EAEE,QAAQ;AAAA,IACN,CAAC,KAAK,MAAM,EAAE,GAAG,QAAQ,MAAM,EAAE,CAAC;AAAA,IAClC,CAAC,OAAO,MAAM,EAAE,GAAG,UAAU,MAAM,EAAE,CAAC;AAAA,EAC1C;AAAA;AAAA,EAEE,QAAQ;AAAA,IACN,CAAC,KAAK,MAAM,EAAE,GAAG,QAAQ,MAAM,EAAE,CAAC;AAAA,IAClC,CAAC,OAAO,MAAM,EAAE,GAAG,UAAU,MAAM,EAAE,CAAC;AAAA,EAC1C;AACA;AAgBO,SAAShvC,GAAQ4D,GAAMrJ,GAAO2M,GAAQ7E,GAAO;AAClD,QAAM0oC,IAAS1oC,EAAM,QACfgqC,IAAOtB,EAAO,UAAU,QAAQ,KAAQ1oC,EAAM,SAAS;AAC7D,MAAI4sC,IACFlE,EAAO,UAAU,QACb1oC,EAAM,SAAS,qBACfA,EAAM,SAAS,MAAM,SAASuB,EAAK,QAAQ,YAAW,CAAE;AAE9D,QAAM3L,IAAQ,CAAA;AAEd,MAAIlD;AAEJ,EAAIg2C,EAAO,UAAU,UAAUnnC,EAAK,YAAY,UAC9CvB,EAAM,SAASmoC;AAGjB,QAAMF,IAAa4E,GAAoB7sC,GAAOuB,EAAK,UAAU,GAEvDhH,IAAUyF,EAAM;AAAA,IACpB0oC,EAAO,UAAU,UAAUnnC,EAAK,YAAY,aAAaA,EAAK,UAAUA;AAAA,EAC5E;AAEE,SAAAvB,EAAM,SAAS0oC,GAQXnuC,MAASqyC,IAAc,MAEvB3E,KAAc,CAAC+B,KAAQ,CAACyC,GAAQlrC,GAAMrJ,GAAO2M,CAAM,OACrDjP,EAAM,KAAK,KAAK2L,EAAK,SAAS0mC,IAAa,MAAMA,IAAa,EAAE,GAG9D2E,MACClE,EAAO,UAAU,SAAS1oC,EAAM,SAAS,sBAE1CtN,IAAOu1C,EAAW,OAAOA,EAAW,SAAS,CAAC,IAE5C,CAACjoC,EAAM,SAAS,oBAChBtN,MAAS,OACRA,KAAQA,MAAS,OAAOA,MAAS,QAElCkD,EAAM,KAAK,GAAG,GAGhBA,EAAM,KAAK,GAAG,IAGhBA,EAAM,KAAK,GAAG,IAGhBA,EAAM,KAAK2E,CAAO,GAEd,CAACqyC,MAAgB,CAAC5C,KAAQ,CAAC4B,GAAQrqC,GAAMrJ,GAAO2M,CAAM,MACxDjP,EAAM,KAAK,OAAO2L,EAAK,UAAU,GAAG,GAG/B3L,EAAM,KAAK,EAAE;AACtB;AAOA,SAASi3C,GAAoB7sC,GAAO6gC,GAAY;AAE9C,QAAMp/B,IAAS,CAAA;AACf,MAAIvJ,IAAQ,IAERoK;AAEJ,MAAIu+B;AACF,SAAKv+B,KAAOu+B;AACV,UAAIA,EAAWv+B,CAAG,MAAM,QAAQu+B,EAAWv+B,CAAG,MAAM,QAAW;AAC7D,cAAMrR,IAAQ67C,GAAmB9sC,GAAOsC,GAAKu+B,EAAWv+B,CAAG,CAAC;AAC5D,QAAIrR,KAAOwQ,EAAO,KAAKxQ,CAAK;AAAA,MAC9B;AAAA;AAIJ,SAAO,EAAEiH,IAAQuJ,EAAO,UAAQ;AAC9B,UAAM/O,IAAOsN,EAAM,SAAS,kBACxByB,EAAOvJ,CAAK,EAAE,OAAOuJ,EAAOvJ,CAAK,EAAE,SAAS,CAAC,IAC7C;AAGJ,IAAIA,MAAUuJ,EAAO,SAAS,KAAK/O,MAAS,OAAOA,MAAS,QAC1D+O,EAAOvJ,CAAK,KAAK;AAAA,EAErB;AAEA,SAAOuJ,EAAO,KAAK,EAAE;AACvB;AAQA,SAASqrC,GAAmB9sC,GAAOsC,GAAKrR,GAAO;AAC7C,QAAMyhB,IAAOia,GAAK3sB,EAAM,QAAQsC,CAAG,GAC7ByqC,IACJ/sC,EAAM,SAAS,oBAAoBA,EAAM,OAAO,UAAU,SAAS,IAAI,GACnEgtC,IAAIhtC,EAAM,SAAS,2BAA2B,IAAI;AACxD,MAAImyB,IAAQnyB,EAAM,OAEdlK;AAWJ,MATI4c,EAAK,sBAAsBzhB,MAAUyhB,EAAK,aAAazhB,MAAU,MACnEA,IAAQ,MAEPyhB,EAAK,WAAWA,EAAK,uBACrB,OAAOzhB,KAAU,YAAYA,MAAUyhB,EAAK,aAAazhB,MAAU,QAEpEA,IAAQ,EAAQA,IAIhBA,KAAU,QAEVA,MAAU,MACT,OAAOA,KAAU,YAAY,OAAO,MAAMA,CAAK;AAEhD,WAAO;AAGT,QAAMyR,IAAOkoC;AAAA,IACXl4B,EAAK;AAAA,IACL,OAAO,OAAO,CAAA,GAAI1S,EAAM,SAAS,qBAAqB;AAAA;AAAA,MAEpD,QAAQ2sC,GAAU,KAAKI,CAAC,EAAEC,CAAC;AAAA,IACjC,CAAK;AAAA,EACL;AA6BE,SAVI/7C,MAAU,OAIdA,IAAQ,MAAM,QAAQA,CAAK,KACtByhB,EAAK,iBAAiBu6B,KAASC,IAAQj8C,GAAO;AAAA,IAC7C,SAAS,CAAC+O,EAAM,SAAS;AAAA,EACjC,CAAO,IACD,OAAO/O,CAAK,GAEZ+O,EAAM,SAAS,2BAA2B,CAAC/O,KAAcyR,KAGzD1C,EAAM,SAAS,mBACjBlK,IAAS80C;AAAA,IACP35C;AAAA,IACA,OAAO,OAAO,CAAA,GAAI+O,EAAM,SAAS,qBAAqB;AAAA,MACpD,WAAW;AAAA,MACX,QAAQ2sC,GAAU,SAASI,CAAC,EAAEC,CAAC;AAAA,IACvC,CAAO;AAAA,EACP,IAKMl3C,MAAW7E,MAGX+O,EAAM,SAAS,cACfsqB,GAAOr5B,GAAOkhC,CAAK,IAAI7H,GAAOr5B,GAAO+O,EAAM,WAAW,MAEtDmyB,IAAQnyB,EAAM,cAGhBlK,IACEq8B,IACAyY;AAAA,IACE35C;AAAA,IACA,OAAO,OAAO,CAAA,GAAI+O,EAAM,SAAS,qBAAqB;AAAA;AAAA,MAEpD,SAASmyB,MAAU,MAAMwa,GAAU,SAASA,GAAU,QAAQI,CAAC,EAAEC,CAAC;AAAA,MAClE,WAAW;AAAA,IACrB,CAAS;AAAA,EACT,IACM7a,IAIGzvB,KAAQ5M,KAAS,MAAMA;AAChC;AC/PA,MAAMq3C,KAAmB,CAAC,KAAK,GAAG;AAgB3B,SAASh3C,GAAKoL,GAAM+hB,GAAGze,GAAQ7E,GAAO;AAE3C,SAAO6E,KACLA,EAAO,SAAS,cACfA,EAAO,YAAY,YAAYA,EAAO,YAAY,WACjDtD,EAAK,QACLqpC;AAAA,IACErpC,EAAK;AAAA,IACL,OAAO,OAAO,CAAA,GAAIvB,EAAM,SAAS,qBAAqB;AAAA,MACpD,QAAQmtC;AAAA,IAClB,CAAS;AAAA,EACT;AACA;ACfO,SAASx2B,GAAIpV,GAAMrJ,GAAO2M,GAAQ7E,GAAO;AAC9C,SAAOA,EAAM,SAAS,qBAClBuB,EAAK,QACLpL,GAAKoL,GAAMrJ,GAAO2M,GAAQ7E,CAAK;AACrC;ACPO,SAAS80B,GAAKvzB,GAAMowB,GAAIqZ,GAAIhrC,GAAO;AACxC,SAAOA,EAAM,IAAIuB,CAAI;AACvB;ACLO,MAAM4zB,KAAS9D,GAAO,QAAQ;AAAA,EACnC,SAAA4F;AAAA,EACA,SAAAC;AAAA,EACA,UAAU,EAAC,SAAA1b,IAAS,SAAA0vB,IAAS,SAAAvtC,IAAS,KAAAgZ,IAAG,MAAEme,IAAM,MAAA3+B,GAAI;AACvD,CAAC;AAUD,SAAS8gC,GAAQ11B,GAAM;AACrB,QAAM,IAAI,MAAM,yBAAyBA,IAAO,GAAG;AACrD;AAUA,SAAS21B,GAAQkW,GAAO;AAEtB,QAAM7rC;AAAA;AAAA,IAA6B6rC;AAAA;AACnC,QAAM,IAAI,MAAM,kCAAkC7rC,EAAK,OAAO,GAAG;AACnE;AC6GA,MAAMN,KAAe,CAAA,GAGfosC,KAA2B,CAAA,GAG3B5B,KAAgB,CAAA;AAYf,SAAS6B,GAAOxkC,GAAMrY,GAAS;AACpC,QAAM88C,IAAW98C,KAAWwQ,IACtBkxB,IAAQob,EAAS,SAAS,KAC1BC,IAAcrb,MAAU,MAAM,MAAM;AAE1C,MAAIA,MAAU,OAAOA,MAAU;AAC7B,UAAM,IAAI,MAAM,oBAAoBA,IAAQ,yBAAyB;AAgCvE,SA5Bc;AAAA,IACZ,KAAA7wB;AAAA,IACA,KAAAE;AAAA,IACA,UAAU;AAAA,MACR,kBAAkB+rC,EAAS,oBAAoB;AAAA,MAC/C,kBAAkBA,EAAS,oBAAoB;AAAA,MAC/C,0BAA0BA,EAAS,4BAA4B;AAAA,MAC/D,YAAYA,EAAS,cAAc;AAAA,MACnC,gBAAgBA,EAAS,kBAAkB;AAAA,MAC3C,iBAAiBA,EAAS,mBAAmB;AAAA,MAC7C,cAAcA,EAAS,gBAAgB;AAAA,MACvC,cAAcA,EAAS,gBAAgB;AAAA,MACvC,eAAeA,EAAS,iBAAiB;AAAA,MACzC,0BAA0BA,EAAS,4BAA4B;AAAA,MAC/D,kBAAkBA,EAAS,oBAAoB;AAAA,MAC/C,yBAAyBA,EAAS,2BAA2B;AAAA,MAC7D,oBAAoBA,EAAS,sBAAsB;AAAA,MACnD,OAAOA,EAAS,SAAS9G;AAAA,MACzB,qBACE8G,EAAS,uBAAuBF;AAAA,MAClC,kBAAkBE,EAAS,oBAAoB;AAAA,MAC/C,oBAAoBA,EAAS,sBAAsB;AAAA,IACzD;AAAA,IACI,QAAQA,EAAS,UAAU,QAAQpF,KAAM7hB;AAAAA,IACzC,OAAA6L;AAAA,IACA,aAAAqb;AAAA,EACJ,EAEe;AAAA,IACX,MAAM,QAAQ1kC,CAAI,IAAI,EAAC,MAAM,QAAQ,UAAUA,EAAI,IAAIA;AAAA,IACvD;AAAA,IACA;AAAA,EACJ;AACA;AAgBA,SAASxH,GAAIC,GAAMrJ,GAAO2M,GAAQ;AAChC,SAAOswB,GAAO5zB,GAAMrJ,GAAO2M,GAAQ,IAAI;AACzC;AAWO,SAASrD,GAAIqD,GAAQ;AAE1B,QAAM8wB,IAAU,CAAA,GACV1L,IAAYplB,KAAUA,EAAO,YAAa4mC;AAChD,MAAIvzC,IAAQ;AAEZ,SAAO,EAAEA,IAAQ+xB,EAAS;AACxB,IAAA0L,EAAQz9B,CAAK,IAAI,KAAK,IAAI+xB,EAAS/xB,CAAK,GAAGA,GAAO2M,CAAM;AAG1D,SAAO8wB,EAAQ,KAAK,EAAE;AACxB;AChPe,SAAS8X,GAAgBh9C,GAAS;AAG/C,QAAMyX,IAAO,MACP/G,IAAW,EAAC,GAAG+G,EAAK,KAAK,UAAU,GAAG,GAAGzX,EAAO;AAEtD,EAAAyX,EAAK,WAAWuB;AAKhB,WAASA,EAASX,GAAM;AACtB,WAAOwkC,GAAOxkC,GAAM3H,CAAQ;AAAA,EAC9B;AACF;ACZA,MAAMusC,KAAsC;AAAA,EAC1C,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,aAAa;AACf,GAMMC,KAAW;AAAA;AAAA,EAEf,UAAU;AAAA;AAAA,EAEV,UAAU;AAAA;AAAA,EAEV,cAAc;AAAA;AAAA,EAEd,SAAS;AAAA;AAAA,EAET,WAAW;AACb;AAKA,SAASC,GACPz3C,GACA1F,GACQ;AACR,QAAM,EAAE,YAAAuM,GAAY,YAAA6wC,GAAY,aAAAC,EAAA,IAAgBr9C;AAChD,MAAIqF,IAASK;AAGb,SAAAL,IAASA,EAAO,QAAQ63C,GAAS,UAAU,CAACjtC,GAAQnG,MAC9CszC,IACK,KAEF,eAAeC,CAAW,0CAA0CvzC,CAAO,QACnF,GAGDzE,IAASA,EAAO,QAAQ63C,GAAS,UAAU,CAACjtC,GAAQnG,MAC9CyC,IACK,KAEF,eAAe8wC,CAAW,0CAA0CvzC,CAAO,QACnF,GAGDzE,IAASA,EAAO,QAAQ63C,GAAS,cAAc,CAACjtC,GAAQ/F,GAASC,MAAY;AAC3E,QAAImzC,IAAS;AAEb,WAAK/wC,MACH+wC,KAAU,eAAeD,CAAW,kDAAkDnzC,CAAO,WAG1FkzC,MACHE,KAAU,eAAeD,CAAW,kDAAkDlzC,CAAO,WAGxF,gBAAgBkzC,CAAW,kDAAkDC,CAAM;AAAA,EAC5F,CAAC,GAGDj4C,IAASA,EAAO,QAAQ63C,GAAS,WAAW,CAACjtC,GAAQvK,GAAMqlB,MAAY;AACrE,UAAMwyB,IAAcxyB,IAChB,gBAAgBsyB,CAAW,wCAAwCtyB,CAAO,YAC1E;AACJ,WAAO,gBAAgBsyB,CAAW,4CAA4C33C,CAAI,UAAU63C,CAAW;AAAA,EACzG,CAAC,GAGDl4C,IAASA,EAAO,QAAQ63C,GAAS,SAAS,CAACjtC,GAAQnG,MAC1C,gBAAgBuzC,CAAW,wCAAwCvzC,CAAO,SAClF,GAEMzE;AACT;AAKA,SAASm4C,GAAgB93C,GAAuB;AAC9C,SAAO,OAAO,OAAOw3C,EAAQ,EAAE,KAAK,CAACptC,OACnCA,EAAQ,YAAY,GACbA,EAAQ,KAAKpK,CAAI,EACzB;AACH;AAEA,SAAS+3C,GACPvzC,GACAC,GACAnK,GACQ;AACR,QAAM,EAAE,aAAAq9C,GAAa,YAAA9wC,GAAY,YAAA6wC,EAAA,IAAep9C;AAEhD,MAAIs9C,IAAS;AAEb,SAAK/wC,MACH+wC,KAAU,eAAeD,CAAW,kDAAkDnzC,CAAO,WAG1FkzC,MACHE,KAAU,eAAeD,CAAW,kDAAkDlzC,CAAO,WAGxF,gBAAgBkzC,CAAW,kDAAkDC,CAAM;AAC5F;AAEA,SAASI,GAAoB5sC,GAAc9Q,GAAoC;AAC7E,MAAI,CAAC8Q,EAAK,SAAU;AAEpB,QAAM6sC,IAAmC,CAAA;AAEzC,WAASp7C,IAAI,GAAGA,IAAIuO,EAAK,SAAS,QAAQvO,KAAK;AAC7C,UAAMiL,IAAQsD,EAAK,SAASvO,CAAC;AAE7B,QAAIiL,EAAM,SAAS,UAAU;AAC3B,YAAMwC,IAAW2tC,EAAaA,EAAa,SAAS,CAAC,GAI/CC,IAAc9sC,EAAK,SAASvO,IAAI,CAAC,GACjCs7C,IACJrwC,EAAM,UACF,IAAI,CAACswC,MAAY,WAAWA,IAAKA,EAAW,QAAQ,EAAG,EACxD,KAAK,EAAE,KAAK,IACX,CAAC5zC,GAASC,CAAO,IAAI0zC,EAAW,MAAM,IAAI;AAEhD,UACE3zC,MAAY,UACZC,MAAY,UACZ6F,KACAA,EAAS,SAAS,UAClB4tC,KACAA,EAAY,SAAS,UACrB5tC,EAAS,OAAO,SAAS,GAAG,KAC5B4tC,EAAY,OAAO,SAAS,GAAG,GAC/B;AACA,cAAMG,IAAa/tC,EAAS,MAAM,YAAY,GAAG;AACjD,YAAI+tC,MAAe,IAAI;AACrB,gBAAMluC,IACJG,EAAS,MAAM,MAAM,GAAG+tC,CAAU,IAClC/tC,EAAS,MAAM,MAAM+tC,IAAa,CAAC;AACrC,UAAIluC,IACFG,EAAS,QAAQH,IAEjB8tC,EAAa,IAAA;AAAA,QAEjB;AAEA,cAAMK,IAAmBP;AAAA,UACvBvzC;AAAA,UACAC;AAAA,UACAnK;AAAA,QAAA;AAEF,QAAA29C,EAAa,KAAK;AAAA,UAChB,MAAM;AAAA,UACN,OAAOK;AAAA,QAAA,CACA,GAETJ,EAAY,QAAQA,EAAY,MAAM,QAAQ,OAAO,EAAE;AAEvD;AAAA,MACF;AAAA,IACF;AAEA,IAAAD,EAAa,KAAKnwC,CAAK;AAAA,EACzB;AAEA,EAAAsD,EAAK,WAAW6sC;AAClB;AAKO,MAAMM,KAA2D,CACtEC,IAAc,OACX;AACH,QAAMl+C,IAAU,EAAE,GAAGi9C,IAAgB,GAAGiB,EAAA;AAExC,SAAO,CAAC7lC,MAAe;AACrB,IAAAkjB,GAAMljB,GAAM,QAAQ,CAACvH,GAAYrJ,GAAO2M,MAAW;AACjD,UAAI,CAACA,KAAU3M,MAAU,QAAQA,MAAU,OAAW;AAEtD,YAAM/B,IAAOoL,EAAK;AAGlB,UAAI,CAAC0sC,GAAgB93C,CAAI,EAAG;AAM5B,YAAMy4C,IAAiB;AAAA,QACrB,MAAM;AAAA,QACN,OALWhB,GAAoBz3C,GAAM1F,CAAO;AAAA,MAKrC;AAGR,MAAAoU,EAAkB,SAAS3M,CAAK,IAAI02C;AAAA,IACvC,CAAC,GAED5iB;AAAA,MACEljB;AAAA,MACA,CAAC,aAAa,WAAW,SAAS,YAAY,WAAW;AAAA,MACzD,CAACvH,MAAc;AACb4sC,QAAAA,GAAoB5sC,GAAM9Q,CAAO;AAAA,MACnC;AAAA,IAAA;AAAA,EAEJ;AACF,GCxNMo+C,KAAmC;AAAA,EACvC,oBAAoB;AAAA,EACpB,cAAc;AAChB;AAQO,MAAMC,GAAiB;AAAA,EAAvB;AACY,IAAA5xC,EAAA,mCAAY,IAAA;AAAA;AAAA,EAE7B,OAAOW,GAAkBpN,GAA4C;AACnE,UAAMs+C,IAAY,KAAK,aAAat+C,CAAO;AAC3C,WAAO,OAAOs+C,EAAU,YAAYlxC,CAAQ,CAAC;AAAA,EAC/C;AAAA,EAEA,YACEA,GACApN,GACiB;AAEjB,WADkB,KAAK,aAAaA,CAAO,EAC1B,QAAQoN,CAAQ,EAAE,KAAK,MAAM;AAAA,EAChD;AAAA,EAEQ,aAAamxC,GAAuD;AAC1E,UAAMC,IAAO,EAAE,GAAGJ,IAAiB,GAAGG,EAAA,GAChCE,IAAW,GAAGD,EAAK,kBAAkB,IAAIA,EAAK,YAAY,IAE1DtF,IAAS,KAAK,MAAM,IAAIuF,CAAQ;AACtC,QAAIvF;AACF,aAAOA;AAGT,UAAMtmC,IAAWmH,GAAA;AACjB,WAAAnH,EAAS,IAAI+mB,EAAW,EAAE,IAAIqW,EAAS,GAEnCwO,EAAK,sBACP5rC,EAAS,IAAIqrC,EAAyB,GAGxCrrC,EACG,IAAIkjC,IAAqB,EAAE,oBAAoB,GAAA,CAAM,EACrD,IAAIkH,IAAwB,EAAE,oBAAoB,GAAA,CAAM,GAE3D,KAAK,MAAM,IAAIyB,GAAU7rC,CAA6B,GAC/CA;AAAA,EACT;AACF;AC3DO,SAAS8rC,GAAa7oB,GAAsB;AACjD,MAAI,OAAO,WAAa;AACtB,WAAOA;AAGT,QAAM8oB,IAAO,SAAS,cAAc,KAAK;AACzC,EAAAA,EAAK,YAAY9oB,GAEjB8oB,EAAK,iBAAiB,QAAQ,EAAE,QAAQ,CAAC7tC,MAAS;AAChD,UAAM66B,IAAc,SAAS,eAAe76B,EAAK,SAAS;AAC1D,IAAAA,EAAK,YAAY66B,CAAW;AAAA,EAC9B,CAAC,GAEDgT,EAAK,iBAA8B,GAAG,EAAE,QAAQ,CAACzxC,MAAY;AAC3D,UAAM,KAAKA,EAAQ,UAAU,EAAE,QAAQ,CAACO,MAAS;AAC/C,MAAIA,EAAK,KAAK,YAAA,EAAc,WAAW,IAAI,KACzCP,EAAQ,gBAAgBO,EAAK,IAAI;AAAA,IAErC,CAAC;AAAA,EACH,CAAC;AAED,QAAM0lC,IAAawL,EAAK;AACxB,SAAOC,GAAkBzL,CAAU;AACrC;AAEA,SAASyL,GAAkBp+C,GAAuB;AAChD,SAAOA,EACJ,QAAQ,YAAY,OAAO,EAC3B,QAAQ,YAAY,MAAM,EAC1B,QAAQ,YAAY,MAAM;AAC/B;AChBO,MAAMq+C,GAAe;AAAA,EAK1B,YAAY7+C,IAA2B,IAAI;AAJnC,IAAAyM,EAAA;AACA,IAAAA,EAAA;AACS,IAAAA,EAAA,sBAAesN,GAAA,EAAU,IAAI4f,EAAW,EAAE,IAAIqW,EAAS;AAGtE,SAAK,UAAU;AAAA,MACb,oBAAoBhwC,EAAQ,sBAAsB;AAAA,MAClD,cAAcA,EAAQ,gBAAgB;AAAA,IAAA,GAExC,KAAK,WAAW,IAAIq+C,GAAA;AAAA,EACtB;AAAA,EAEO,aAAkD;AACvD,WAAO,EAAE,GAAG,KAAK,QAAA;AAAA,EACnB;AAAA,EAEO,sBAAsBS,GAAwB;AACnD,SAAK,UAAU,EAAE,GAAG,KAAK,SAAS,oBAAoBA,EAAA;AAAA,EACxD;AAAA,EAEO,gBAAgBC,GAAsB;AAC3C,SAAK,UAAU,EAAE,GAAG,KAAK,SAAS,cAAcA,EAAA;AAAA,EAClD;AAAA,EAEO,cAAcC,GAA+B;AAClD,SAAK,UAAU;AAAA,MACb,oBACEA,EAAO,sBAAsB,KAAK,QAAQ;AAAA,MAC5C,cAAcA,EAAO,gBAAgB,KAAK,QAAQ;AAAA,IAAA;AAAA,EAEtD;AAAA,EAEQ,uBACNC,GACiB;AACjB,UAAM5jC,IAAwB;AAAA,MAC5B,oBAAoB,KAAK,QAAQ;AAAA,MACjC,cAAc,KAAK,QAAQ;AAAA,IAAA;AAE7B,QAAI,CAAC4jC;AACH,aAAO5jC;AAET,UAAM6jC,IAAW,EAAE,GAAG7jC,EAAA;AACtB,WAAI4jC,EAAS,uBAAuB,WAClCC,EAAS,qBAAqBD,EAAS,qBAErCA,EAAS,iBAAiB,WAC5BC,EAAS,eAAeD,EAAS,eAE5BC;AAAA,EACT;AAAA,EAEQ,gBAAgB9xC,GAA0B;AAChD,WAAO,KAAK,2BAA2BA,CAAQ;AAAA,EACjD;AAAA,EAEQ,2BAA2BA,GAA0B;AAC3D,UAAM0C,IACJ;AAEF,WAAO1C,EAAS;AAAA,MACd0C;AAAA,MACA,CACEG,GACAkvC,GACA9zC,GACA+zC,GACAv0C,GACAd,MACG;AACH,cAAM6B,IAAc7B,EAAK,QAAQ,QAAQ,EAAE,EAAE,QAAQ,QAAQ,EAAE,GACzDs1C,IAAmBx0C,EAAO,KAAA;AAChC,eAAO,GAAGs0C,CAAS,GAAG9zC,CAAM,GAAGg0C,CAAgB,KAAKD,CAAW,GAAGxzC,CAAW,GAAGwzC,CAAW;AAAA,MAC7F;AAAA,IAAA;AAAA,EAEJ;AAAA;AAAA;AAAA;AAAA,EAKA,MAAa,OACXhyC,GACAkyC,GACiB;AACjB,UAAMt/C,IAAU,KAAK,uBAAuB,EAAE,oBAAAs/C,GAAoB,GAC5DC,IAAW,KAAK,gBAAgBnyC,CAAQ,GACxCyoB,IAAO,MAAM,KAAK,SAAS,YAAY0pB,GAAUv/C,CAAO;AAC9D,WAAO,KAAK,eAAe61B,GAAM71B,CAAO;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA,EAKO,WAAWoN,GAAkBkyC,GAAsC;AACxE,UAAMt/C,IAAU,KAAK,uBAAuB,EAAE,oBAAAs/C,GAAoB,GAC5DC,IAAW,KAAK,gBAAgBnyC,CAAQ,GACxCyoB,IAAO,KAAK,SAAS,OAAO0pB,GAAUv/C,CAAO;AACnD,WAAO,KAAK,eAAe61B,GAAM71B,CAAO;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA,EAKO,aAAaoN,GAA0B;AAG5C,WADa,KAAK,WAAWA,CAAQ,EACzB,QAAQ,gBAAgB,EAAE,EAAE,KAAA;AAAA,EAC1C;AAAA,EAEQ,eAAeyoB,GAAc71B,GAAkC;AACrE,WAAOA,EAAQ,eAAe61B,IAAO6oB,GAAa7oB,CAAI;AAAA,EACxD;AAAA;AAAA;AAAA;AAAA,EAKO,WAAWzoB,GAAwB;AACxC,UAAMmyC,IAAW,KAAK,gBAAgBnyC,CAAQ;AAC9C,WAAO,KAAK,aAAa,MAAMmyC,CAAQ;AAAA,EACzC;AAAA;AAAA;AAAA;AAAA,EAKO,YAAYnyC,GAA0B;AAE3C,WADY,KAAK,WAAWA,CAAQ,EACzB,SACR,IAAI,CAACI,MAAUiD,GAASjD,CAAK,EAAE,KAAA,CAAM,EACrC,OAAO,CAACgB,MAAYA,EAAQ,SAAS,CAAC,EACtC,KAAK;AAAA,CAAI;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKO,cAAc1E,GAAiB+C,GAAcC,GAAwB;AAE1E,QAAID,MAAS,YAAYC;AACvB,aAAO,KAAK,cAAchD,GAASgD,CAAK;AAI1C,QAAID,MAAS,gBAEP,CAAC/C,EAAQ,KAAA,EAAO,WAAW,GAAG,GAAG;AAEnC,YAAM01C,IADQ11C,EAAQ,MAAM;AAAA,CAAI,EACN,IAAI,CAAClG,MAAS,KAAKA,CAAI,EAAE;AACnD,aAAO,KAAK,WAAW47C,EAAY,KAAK;AAAA,CAAI,CAAC;AAAA,IAC/C;AAGF,QAAI3yC,MAAS,aAAa;AACxB,UAAIgpB,IAAO,KAAK,WAAW/rB,CAAO;AAClC,aAAK+rB,EAAK,SAAS,QAAQ,MACzBA,IAAOA,EAAK,QAAQ,eAAe,QAAQ,IAEtCA;AAAA,IACT;AAGA,WAAO,KAAK,WAAW/rB,CAAO;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA,EAKO,SAAS+rB,GAAsB;AACpC,WAAO6oB,GAAa7oB,CAAI;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA,EAMQ,6BAA6BiE,GAAwB;AAC3D,QAAI2lB,IAAU3lB,EAAO,QAAA;AACrB,UAAM4lB,IAAmB;AAEzB,eAAa;AACX,YAAMC,IAAcD,EAAiB,KAAKD,CAAO;AACjD,UAAI,CAACE;AACH;AAGF,YAAMC,IAAeD,EAAY,CAAC,GAAG,UAAU;AAC/C,UAAI,CAACC,KAAgB,CAAC,KAAK,uBAAuBA,CAAY;AAC5D;AAGF,YAAMC,IAAYF,EAAY,CAAC,KAAK;AACpC,MAAAF,IAAUA,EACP,MAAM,GAAG,KAAK,IAAI,GAAGA,EAAQ,SAASI,EAAU,MAAM,CAAC,EACvD,QAAA;AAAA,IACL;AAEA,WAAOJ;AAAA,EACT;AAAA,EAEQ,cAAc31C,GAAiBgD,GAAuB;AAC5D,UAAMiD,IAAU,KAAK,6BAA6BjG,CAAO,GACnDg2C,IAAc,KAAK,mBAAmB/vC,CAAO,GAC7C3C,IAAW0yC,IACb,GAAG,IAAI,OAAOhzC,CAAK,CAAC,IAAIgzC,CAAW,KACnC,GAAG,IAAI,OAAOhzC,CAAK,CAAC;AACxB,WAAO,KAAK,WAAWM,CAAQ;AAAA,EACjC;AAAA,EAEQ,mBAAmB0sB,GAAwB;AACjD,UAAMhvB,IAAUgvB,EAAO,KAAA,GAEjBimB,IAAsB,CAACv/C,MACvBA,EAAM,WAAW,KAAK,IACjBA,IAEFA,EAAM,QAAQ,UAAU,EAAE,EAAE,KAAA,GAG/Bw/C,IAAWl1C,EAAQ,MAAM,aAAa;AAC5C,QAAIk1C,GAAU;AACZ,YAAMrwC,IAAYqwC,EAAS,CAAC,GAAG,UAAU;AACzC,aAAOD,EAAoBpwC,CAAS;AAAA,IACtC;AAEA,UAAMxE,IAAQL,EAAQ,MAAM,OAAO;AACnC,QAAIK,EAAM,UAAU,GAAG;AACrB,YAAM80C,IAAY90C,EAAM,CAAC,GAAG,UAAU;AACtC,UAAI,YAAY,KAAK80C,CAAS,GAAG;AAC/B,cAAMtwC,IAAYxE,EAAM,CAAC,GAAG,UAAU;AACtC,eAAO40C,EAAoBpwC,CAAS;AAAA,MACtC;AAAA,IACF;AAEA,WAAOowC,EAAoBj1C,CAAO;AAAA,EACpC;AAAA,EAEQ,uBAAuBhB,GAA0B;AACvD,QAAI,CAACA;AACH,aAAO;AAST,UAAMsB,IAAStB,EAAQ,MAAM,KAAK;AAClC,WAAIsB,EAAO,WAAW,IACb,KAGFA,EAAO,MAAM,CAAC7F,MACdA,IACD,GAAAA,EAAM,WAAW,GAAG,KAAKA,EAAM,SAAS,KACxCA,EAAM,WAAW,GAAG,KAAKA,EAAM,SAAS,KAE1CA,EAAM,SAAS,GAAG,KAClB,CAACA,EAAM,WAAW,GAAG,KACrB,CAACA,EAAM,WAAW,GAAG,KANJ,EAUpB;AAAA,EACH;AACF;ACvPO,MAAM26C,GAAe;AAAA,EAArB;AACG,IAAAzzC,EAAA,sCAAqC,IAAA;AAG5B;AAAA,IAAAA,EAAA,kBAAW;AAAA,MAC1B,UAAU;AAAA,MACV,UAAU;AAAA,MACV,cAAc;AAAA,MACd,SAAS;AAAA,MACT,WAAW;AAAA,IAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMN,MAAMW,GAAuC;AAClD,UAAM+yC,IAA+B,CAAA;AAGrC,WAFiB,KAAK,gBAAgB/yC,CAAQ,EAErC,QAAQ,CAACoB,MAAY;AAC5B,MAAIA,EAAQ,SAAS,UAAU,CAACA,EAAQ,WAGxC,KAAK,2BAA2BA,EAAQ,SAASA,EAAQ,OAAO2xC,CAAO;AAAA,IACzE,CAAC,GAEMA,EAAQ,KAAK,CAACl0C,GAAGC,MAAMD,EAAE,QAAQC,EAAE,KAAK;AAAA,EACjD;AAAA;AAAA;AAAA;AAAA,EAKO,aAAakB,GAA0B;AAG5C,WAFiB,KAAK,gBAAgBA,CAAQ,EAG3C,IAAI,CAACoB,MACAA,EAAQ,SAAS,UAGjB,CAACA,EAAQ,UACJA,EAAQ,UAEV,KAAK,oBAAoBA,EAAQ,OAAO,CAChD,EACA,KAAK,EAAE;AAAA,EACZ;AAAA;AAAA;AAAA;AAAA,EAKO,OAAOpB,GAAkB1C,GAAkC;AAChE,UAAM0B,IAASgB,EAAS,UAAU,GAAG1C,EAAM,KAAK,GAC1C2B,IAAQe,EAAS,UAAU1C,EAAM,GAAG;AAE1C,YAAQA,EAAM,MAAA;AAAA,MACZ,KAAK;AACH,eAAO0B,IAAS1B,EAAM,UAAU2B;AAAA,MAClC,KAAK;AACH,eAAOD,IAASC;AAAA,MAClB,KAAK;AACH,eAAOD,KAAU1B,EAAM,eAAe,MAAM2B;AAAA,MAC9C,KAAK;AACH,eAAOD,IAAS1B,EAAM,UAAU2B;AAAA,MAClC,KAAK;AACH,eAAOD,IAASC;AAAA,MAClB;AACE,eAAOe;AAAA,IAAA;AAAA,EAEb;AAAA;AAAA;AAAA;AAAA,EAKO,OAAOA,GAAkB1C,GAAkC;AAChE,UAAM0B,IAASgB,EAAS,UAAU,GAAG1C,EAAM,KAAK,GAC1C2B,IAAQe,EAAS,UAAU1C,EAAM,GAAG;AAE1C,YAAQA,EAAM,MAAA;AAAA,MACZ,KAAK;AACH,eAAO0B,IAASC;AAAA,MAClB,KAAK;AACH,eAAOD,IAAS1B,EAAM,UAAU2B;AAAA,MAClC,KAAK;AACH,eAAOD,IAAS1B,EAAM,UAAU2B;AAAA,MAClC,KAAK;AACH,eAAOD,IAAS1B,EAAM,UAAU2B;AAAA,MAClC,KAAK;AACH,eAAOD,IAASC;AAAA,MAClB;AACE,eAAOe;AAAA,IAAA;AAAA,EAEb;AAAA;AAAA;AAAA;AAAA,EAKO,UAAUA,GAA0B;AACzC,QAAI/H,IAAS+H;AACb,UAAM+yC,IAAU,KAAK,MAAM96C,CAAM;AAGjC,aAAS,IAAI86C,EAAQ,SAAS,GAAG,KAAK,GAAG,KAAK;AAC5C,YAAMz1C,IAAQy1C,EAAQ,CAAC;AACvB,MAAKz1C,MACLrF,IAAS,KAAK,OAAOA,GAAQqF,CAAK;AAAA,IACpC;AAEA,WAAOrF;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKO,UAAU+H,GAA0B;AACzC,QAAI/H,IAAS+H;AACb,UAAM+yC,IAAU,KAAK,MAAM96C,CAAM;AAGjC,aAAS,IAAI86C,EAAQ,SAAS,GAAG,KAAK,GAAG,KAAK;AAC5C,YAAMz1C,IAAQy1C,EAAQ,CAAC;AACvB,MAAKz1C,MACLrF,IAAS,KAAK,OAAOA,GAAQqF,CAAK;AAAA,IACpC;AAEA,WAAOrF;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKO,WACLsI,GACA7D,GACA+D,GACAhB,IAAwB,WACf;AACT,UAAMke,IAAmB;AAAA,MACvB,IAAI,KAAK,kBAAA;AAAA,MACT,WAAApd;AAAA,MACA,QAAAE;AAAA,MACA,WAAW,KAAK,IAAA;AAAA,MAChB,SAAA/D;AAAA,MACA,UAAU;AAAA,MACV,MAAA+C;AAAA,IAAA;AAGF,gBAAK,SAAS,IAAIke,EAAQ,IAAIA,CAAO,GAC9BA;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKO,WAAWne,GAAiC;AACjD,WAAO,KAAK,SAAS,IAAIA,CAAE;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA,EAKO,sBAAsBe,GAA8B;AACzD,WAAO,MAAM,KAAK,KAAK,SAAS,OAAA,CAAQ,EAAE;AAAA,MACxC,CAACmwC,MAAMA,EAAE,cAAcnwC;AAAA,IAAA;AAAA,EAE3B;AAAA;AAAA;AAAA;AAAA,EAKO,iBAA4B;AACjC,WAAO,MAAM,KAAK,KAAK,SAAS,QAAQ;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA,EAKO,eAAef,GAAqB;AACzC,UAAMme,IAAU,KAAK,SAAS,IAAIne,CAAE;AACpC,WAAKme,KAELA,EAAQ,WAAW,IACZ,MAHc;AAAA,EAIvB;AAAA;AAAA;AAAA;AAAA,EAKO,iBAAiBne,GAAqB;AAC3C,UAAMme,IAAU,KAAK,SAAS,IAAIne,CAAE;AACpC,WAAKme,KAELA,EAAQ,WAAW,IACZ,MAHc;AAAA,EAIvB;AAAA;AAAA;AAAA;AAAA,EAKO,cAAcne,GAAqB;AACxC,WAAO,KAAK,SAAS,OAAOA,CAAE;AAAA,EAChC;AAAA,EAEQ,gBAAgBQ,GAAqC;AAC3D,UAAMgzC,IAAa,KAAK,kBAAkBhzC,CAAQ;AAClD,QAAIgzC,EAAW,WAAW;AACxB,aAAO,CAAC,EAAE,MAAM,QAAQ,SAAShzC,GAAU,OAAO,GAAG;AAGvD,UAAMW,IAA8B,CAAA;AACpC,QAAIsyC,IAAS;AAEb,WAAAD,EAAW,QAAQ,CAACtR,MAAU;AAC5B,MAAIA,EAAM,QAAQuR,KAChBtyC,EAAS,KAAK;AAAA,QACZ,MAAM;AAAA,QACN,SAASX,EAAS,MAAMizC,GAAQvR,EAAM,KAAK;AAAA,QAC3C,OAAOuR;AAAA,MAAA,CACR,GAEHtyC,EAAS,KAAK;AAAA,QACZ,MAAM;AAAA,QACN,SAASX,EAAS,MAAM0hC,EAAM,OAAOA,EAAM,GAAG;AAAA,QAC9C,OAAOA,EAAM;AAAA,MAAA,CACd,GACDuR,IAASvR,EAAM;AAAA,IACjB,CAAC,GAEGuR,IAASjzC,EAAS,UACpBW,EAAS,KAAK;AAAA,MACZ,MAAM;AAAA,MACN,SAASX,EAAS,MAAMizC,CAAM;AAAA,MAC9B,OAAOA;AAAA,IAAA,CACR,GAGItyC;AAAA,EACT;AAAA,EAEQ,kBAAkBX,GAAmC;AAC3D,UAAMkzC,IAA0B,CAAA;AAChC,QAAI51C;AAEJ,UAAM61C,IAAe;AACrB,YAAQ71C,IAAQ61C,EAAa,KAAKnzC,CAAQ,OAAO,QAAM;AACrD,YAAMyyC,IAAYn1C,IAAQ,CAAC,KAAK,IAC1BmpB,IAAanpB,GAAO,SAAS;AACnC,MAAA41C,EAAO,KAAK;AAAA,QACV,OAAOzsB;AAAA,QACP,KAAKA,IAAagsB,EAAU;AAAA,MAAA,CAC7B;AAAA,IACH;AAEA,UAAMW,IAAgB;AACtB,YAAQ91C,IAAQ81C,EAAc,KAAKpzC,CAAQ,OAAO,QAAM;AACtD,YAAMyyC,IAAYn1C,IAAQ,CAAC,KAAK,IAC1B2J,IAAQ3J,GAAO,SAAS,GACxBkK,IAAMP,IAAQwrC,EAAU;AAE9B,MAAIS,EAAO,KAAK,CAACxR,MAAUz6B,KAASy6B,EAAM,SAASl6B,KAAOk6B,EAAM,GAAG,KAInEwR,EAAO,KAAK,EAAE,OAAAjsC,GAAO,KAAAO,EAAA,CAAK;AAAA,IAC5B;AAEA,WAAA0rC,EAAO,KAAK,CAACr0C,GAAGC,MAAMD,EAAE,QAAQC,EAAE,KAAK,GAChC,KAAK,YAAYo0C,CAAM;AAAA,EAChC;AAAA,EAEQ,YAAYA,GAA0C;AAC5D,QAAIA,EAAO,WAAW;AACpB,aAAO,CAAA;AAGT,UAAMG,IAAaH,EAAO,CAAC;AAC3B,QAAI,CAACG;AACH,aAAO,CAAA;AAET,UAAMC,IAA0B,CAAC,EAAE,GAAGD,GAAY;AAElD,aAAS,IAAI,GAAG,IAAIH,EAAO,QAAQ,KAAK;AACtC,YAAMx7B,IAAUw7B,EAAO,CAAC;AACxB,UAAI,CAACx7B,EAAS;AACd,YAAM7iB,IAAOy+C,EAAOA,EAAO,SAAS,CAAC;AACrC,UAAI,CAACz+C,GAAM;AACT,QAAAy+C,EAAO,KAAK,EAAE,GAAG57B,GAAS;AAC1B;AAAA,MACF;AACA,YAAM67B,IAAe77B,EAAQ,SAAS,GAChC87B,IAAa97B,EAAQ,OAAO67B,GAC5BE,IAAY5+C,EAAK,SAAS,GAC1B6+C,IAAU7+C,EAAK,OAAO4+C;AAC5B,MAAIF,KAAgBG,IAClB7+C,EAAK,MAAM,KAAK,IAAI6+C,GAASF,CAAU,IAEvCF,EAAO,KAAK,EAAE,GAAG57B,GAAS;AAAA,IAE9B;AAEA,WAAO47B;AAAA,EACT;AAAA,EAEQ,2BACNlyC,GACAiR,GACA0gC,GACM;AACN,QAAIz1C;AAEJ,UAAMq2C,IAAkB,IAAI,OAAO,KAAK,SAAS,QAAQ;AACzD,YAAQr2C,IAAQq2C,EAAgB,KAAKvyC,CAAO,OAAO,QAAM;AACvD,YAAM1E,IAAUY,IAAQ,CAAC,KAAK,IACxBm1C,IAAYn1C,IAAQ,CAAC,KAAK,IAC1BmpB,IAAanpB,GAAO,SAAS;AACnC,MAAAy1C,EAAQ,KAAK;AAAA,QACX,MAAM;AAAA,QACN,SAAAr2C;AAAA,QACA,OAAO2V,IAASoU;AAAA,QAChB,KAAKpU,IAASoU,IAAagsB,EAAU;AAAA,MAAA,CACtC;AAAA,IACH;AAEA,UAAMmB,IAAkB,IAAI,OAAO,KAAK,SAAS,QAAQ;AACzD,YAAQt2C,IAAQs2C,EAAgB,KAAKxyC,CAAO,OAAO,QAAM;AACvD,YAAM1E,IAAUY,IAAQ,CAAC,KAAK,IACxBm1C,IAAYn1C,IAAQ,CAAC,KAAK,IAC1BmpB,IAAanpB,GAAO,SAAS;AACnC,MAAAy1C,EAAQ,KAAK;AAAA,QACX,MAAM;AAAA,QACN,SAAAr2C;AAAA,QACA,OAAO2V,IAASoU;AAAA,QAChB,KAAKpU,IAASoU,IAAagsB,EAAU;AAAA,MAAA,CACtC;AAAA,IACH;AAEA,UAAMoB,IAAsB,IAAI,OAAO,KAAK,SAAS,YAAY;AACjE,YAAQv2C,IAAQu2C,EAAoB,KAAKzyC,CAAO,OAAO,QAAM;AAC3D,YAAM1E,IAAUY,IAAQ,CAAC,KAAK,IACxBihC,IAAcjhC,IAAQ,CAAC,KAAK,IAC5Bm1C,IAAYn1C,IAAQ,CAAC,KAAK,IAC1BmpB,IAAanpB,GAAO,SAAS;AACnC,MAAAy1C,EAAQ,KAAK;AAAA,QACX,MAAM;AAAA,QACN,SAAAr2C;AAAA,QACA,aAAA6hC;AAAA,QACA,OAAOlsB,IAASoU;AAAA,QAChB,KAAKpU,IAASoU,IAAagsB,EAAU;AAAA,MAAA,CACtC;AAAA,IACH;AAEA,UAAMqB,IAAmB,IAAI,OAAO,KAAK,SAAS,SAAS;AAC3D,YAAQx2C,IAAQw2C,EAAiB,KAAK1yC,CAAO,OAAO,QAAM;AACxD,YAAM1E,IAAUY,IAAQ,CAAC,KAAK,IACxBqgB,IAAUrgB,IAAQ,CAAC,KAAK,IACxBm1C,IAAYn1C,IAAQ,CAAC,KAAK,IAC1BmpB,IAAanpB,GAAO,SAAS;AACnC,MAAAy1C,EAAQ,KAAK;AAAA,QACX,MAAM;AAAA,QACN,SAAAr2C;AAAA,QACA,SAAAihB;AAAA,QACA,OAAOtL,IAASoU;AAAA,QAChB,KAAKpU,IAASoU,IAAagsB,EAAU;AAAA,MAAA,CACtC;AAAA,IACH;AAEA,UAAMsB,IAAiB,IAAI,OAAO,KAAK,SAAS,OAAO;AACvD,YAAQz2C,IAAQy2C,EAAe,KAAK3yC,CAAO,OAAO,QAAM;AACtD,YAAMqxC,IAAYn1C,IAAQ,CAAC,KAAK,IAC1BZ,IAAUY,IAAQ,CAAC,KAAK,IACxBmpB,IAAanpB,GAAO,SAAS,GAC7B2J,IAAQoL,IAASoU,GACjBjf,IAAMP,IAAQwrC,EAAU;AAU9B,MAR0BM,EAAQ;AAAA,QAChC,CAACn6C,MACCA,EAAE,SAAS,eACXA,EAAE,WACFqO,KAASrO,EAAE,SACXqO,IAAQrO,EAAE;AAAA,MAAA,KAIZm6C,EAAQ,KAAK;AAAA,QACX,MAAM;AAAA,QACN,SAAAr2C;AAAA,QACA,OAAAuK;AAAA,QACA,KAAAO;AAAA,MAAA,CACD;AAAA,IAEL;AAAA,EACF;AAAA,EAEQ,oBAAoBpG,GAAyB;AACnD,QAAIqnB,IAAOrnB;AAEX,WAAAqnB,IAAOA,EAAK;AAAA,MACV,IAAI,OAAO,KAAK,SAAS,QAAQ;AAAA,MACjC;AAAA,IAAA,GAGFA,IAAOA,EAAK;AAAA,MACV,IAAI,OAAO,KAAK,SAAS,QAAQ;AAAA,MACjC;AAAA,IAAA,GAGFA,IAAOA,EAAK;AAAA,MACV,IAAI,OAAO,KAAK,SAAS,YAAY;AAAA,MACrC;AAAA,IAAA,GAGFA,IAAOA,EAAK;AAAA,MACV,IAAI,OAAO,KAAK,SAAS,SAAS;AAAA,MAClC,CAAC5lB,GAAQnG,GAAiBihB,MACpBA,IACK,oFAAoF,KAAK,WAAWA,CAAO,CAAC,KAAKjhB,CAAO,YAE1H,+DAA+DA,CAAO;AAAA,IAC/E,GAGF+rB,IAAOA,EAAK;AAAA,MACV,IAAI,OAAO,KAAK,SAAS,OAAO;AAAA,MAChC;AAAA,IAAA,GAGKA;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKO,eAAenwB,GAAsB;AAC1C,WAAO,MAAMA,CAAI;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA,EAKO,eAAeA,GAAsB;AAC1C,WAAO,MAAMA,CAAI;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA,EAKO,mBAAmB4K,GAAkBq7B,GAA6B;AACvE,WAAO,MAAMr7B,CAAQ,KAAKq7B,CAAW;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA,EAKO,cAAcjmC,GAAsB;AAEzC,WAAO,MADSA,EAAK,QAAQ,QAAQ,GAAG,EAAE,KAAA,CACtB;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA,EAKO,gBAAgBA,GAAcqlB,GAA0B;AAC7D,QAAIA,GAAS;AACX,YAAMjgB,IAAUigB,EAAQ,QAAQ,QAAQ,GAAG,EAAE,KAAA;AAC7C,aAAO,MAAMrlB,CAAI,SAASoF,CAAO;AAAA,IACnC;AACA,WAAO,MAAMpF,CAAI;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA,EAKO,gBAAgB0H,GAA2B;AAChD,WACE,KAAK,SAAS,SAAS,KAAKA,CAAQ,KACpC,KAAK,SAAS,SAAS,KAAKA,CAAQ,KACpC,KAAK,SAAS,aAAa,KAAKA,CAAQ,KACxC,KAAK,SAAS,QAAQ,KAAKA,CAAQ,KACnC,KAAK,SAAS,UAAU,KAAKA,CAAQ;AAAA,EAEzC;AAAA;AAAA;AAAA;AAAA,EAKO,kBAAkBA,GAA0B;AACjD,WAAO,KAAK,UAAUA,CAAQ;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA,EAKQ,oBAA4B;AAClC,WAAO,WAAW,KAAK,IAAA,CAAK,IAAI,KAAK,OAAA,EAAS,SAAS,EAAE,EAAE,OAAO,GAAG,CAAC,CAAC;AAAA,EACzE;AAAA;AAAA;AAAA;AAAA,EAKQ,WAAW1H,GAAsB;AACvC,UAAM2H,IAA8B;AAAA,MAClC,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IAAA;AAEP,WAAO3H,EAAK,QAAQ,YAAY,CAAC07C,MAAS/zC,EAAI+zC,CAAI,KAAKA,CAAI;AAAA,EAC7D;AAAA;AAAA;AAAA;AAAA,EAKO,QAAc;AACnB,SAAK,SAAS,MAAA;AAAA,EAChB;AACF;ACzhBO,SAASC,GAAW37C,GAAsB;AAC/C,QAAM47C,IAAM,SAAS,cAAc,KAAK;AACxC,SAAAA,EAAI,cAAc57C,GACX47C,EAAI;AACb;AAKO,SAASC,GAAiBH,GAAuB;AACtD,SAAOA,MAAS,OAAOA,MAAS,OAAQA,MAAS,QAAQA,MAAS;AAAA;AACpE;AAMO,SAASI,GAAY97C,GAAsB;AAChD,MAAIkP,IAAMlP,EAAK;AACf,SAAOkP,IAAM,KAAK2sC,GAAiB77C,EAAK,OAAOkP,IAAM,CAAC,CAAC;AACrD,IAAAA;AAEF,SAAOlP,EAAK,MAAM,GAAGkP,CAAG;AAC1B;AAMO,SAAS6sC,GAAc/7C,GAAsB;AAClD,MAAI2O,IAAQ;AACZ,SAAOA,IAAQ3O,EAAK,UAAU67C,GAAiB77C,EAAK,OAAO2O,CAAK,CAAC;AAC/D,IAAAA;AAEF,SAAO3O,EAAK,MAAM2O,CAAK;AACzB;AAMO,SAASqtC,GAAkB99C,GAAuB;AACvD,MAAI,CAACA;AACH,WAAO;AAET,QAAMkH,IAAUlH,EAAK,KAAA;AACrB,MAAIkH,EAAQ,WAAW;AACrB,WAAO;AAET,QAAM62C,IAAY72C,EAAQ,OAAO,CAAC;AAClC,MAAI62C,MAAc,OAAOA,MAAc;AACrC,WAAO;AAET,WAASp/C,IAAI,GAAGA,IAAIuI,EAAQ,QAAQvI;AAClC,QAAIuI,EAAQ,OAAOvI,CAAC,MAAMo/C;AACxB,aAAO;AAGX,SAAO;AACT;AAUO,SAASC,GAAqB93C,GAAyB;AAC5D,QAAMqB,IAAQrB,EAAQ,MAAM,OAAO;AACnC,MAAI+3C,IAAgC;AA0BpC,SAxBmB12C,EAAM,IAAI,CAACvH,MAAS;AACrC,UAAMkH,IAAUlH,EAAK,KAAA,GAEfk+C,IADah3C,EAAQ,MAAM,gBAAgB,IAClB,CAAC,KAAK;AAErC,WAAIg3C,KACGD,IAEMA,KAAkB/2C,EAAQ,WAAW+2C,CAAc,MAC5DA,IAAiB,QAFjBA,IAAiBC,GAIZl+C,KAGLi+C,IACKj+C,IAGFA,EAAK;AAAA,MACV;AAAA,MACA,CAACqM,GAAQ5E,MAAmB,GAAGA,CAAM;AAAA,IAAA;AAAA,EAEzC,CAAC,EAEiB,KAAK;AAAA,CAAI;AAC7B;ACvGO,MAAM02C,WAA6B,YAAe;AAAA,EACvD,YAAYl1C,GAAcm1C,GAAY;AACpC,UAAMn1C,GAAM;AAAA,MACV,QAAAm1C;AAAA,MACA,SAAS;AAAA,MACT,YAAY;AAAA,IAAA,CACb;AAAA,EACH;AACF;AAKO,MAAMC,KAAgB;AAAA;AAAA,EAE3B,cAAc;AAAA,EACd,wBAAwB;AAAA,EACxB,0BAA0B;AAAA,EAC1B,gBAAgB;AAAA,EAChB,gBAAgB;AAAA;AAAA,EAGhB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,yBAAyB;AAAA,EACzB,yBAAyB;AAAA;AAAA,EAGzB,0BAA0B;AAAA,EAC1B,uBAAuB;AAAA;AAAA,EAGvB,iBAAiB;AAAA,EACjB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA;AAAA,EAGhB,qBAAqB;AAAA,EACrB,qBAAqB;AACvB;AAwDO,MAAMC,GAAmB;AAAA,EAAzB;AACG,IAAAz1C,EAAA,uCAAgE,IAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKxE,GAAY01C,GAAmB1pB,GAAoC;AACjE,IAAK,KAAK,UAAU,IAAI0pB,CAAS,KAC/B,KAAK,UAAU,IAAIA,GAAW,oBAAI,KAAK,GAEzC,KAAK,UAAU,IAAIA,CAAS,EAAG,IAAI,CAACl+B,MAAuB;AACzD,MAAAwU,EAAQxU,EAAM,MAAW;AAAA,IAC3B,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKA,KAAck+B,GAAmB1pB,GAAoC;AACnE,UAAM2pB,IAAiB,CAACJ,MAAc;AACpC,MAAAvpB,EAAQupB,CAAM,GACd,KAAK,IAAIG,GAAWC,CAAc;AAAA,IACpC;AACA,SAAK,GAAGD,GAAWC,CAAc;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA,EAKA,IAAaD,GAAmB1pB,GAAoC;AAClE,QAAI,CAAC,KAAK,UAAU,IAAI0pB,CAAS,EAAG;AACpC,UAAMthB,IAAW,KAAK,UAAU,IAAIshB,CAAS;AAC7C,IAAAthB,EAAS,QAAQ,CAACwhB,MAAM;AACtB,MAAIA,EAAE,SAAA,MAAe5pB,EAAQ,cAC3BoI,EAAS,OAAOwhB,CAAC;AAAA,IAErB,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,mBAAmBF,GAA0B;AAC3C,IAAIA,IACF,KAAK,UAAU,OAAOA,CAAS,IAE/B,KAAK,UAAU,MAAA;AAAA,EAEnB;AAAA;AAAA;AAAA;AAAA,EAKA,KAAcA,GAAmBH,GAAkB;AACjD,UAAM/9B,IAAQ,IAAI89B,GAAeI,GAAWH,CAAM;AAClD,aAAS,cAAc/9B,CAAK,GAGxB,KAAK,UAAU,IAAIk+B,CAAS,KAC9B,KAAK,UAAU,IAAIA,CAAS,EAAG,QAAQ,CAAC1pB,MAAY;AAClD,MAAAA,EAAQxU,CAAK;AAAA,IACf,CAAC;AAAA,EAEL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,iBAAuB;AACrB,SAAK,mBAAA;AAAA,EACP;AACF;AC9HO,SAASq+B,KAAwC;AACtD,SAAO;AAAA,IACL,cAAc;AAAA,IACd,qBAAqB;AAAA,IACrB,kBAAkB;AAAA,IAClB,gBAAgB;AAAA,IAChB,sBAAsB;AAAA,IACtB,oBAAoB;AAAA,EAAA;AAExB;AAKO,SAASC,KAAgC;AAC9C,SAAO;AAAA,IACL,oBAAoB;AAAA,EAAA;AAExB;AAKO,SAASC,KAA0C;AACxD,SAAO;AAAA,IACL,uBAAuB;AAAA,IACvB,+BAA+B;AAAA,IAC/B,4BAA4B;AAAA,IAC5B,0BAA0B;AAAA,IAC1B,eAAe;AAAA,EAAA;AAEnB;ACpFA,IAAIC,KAA6B,kBAACC,OAChCA,EAAW,eAAkB,gBAC7BA,EAAW,kBAAqB,mBAChCA,EAAW,gBAAmB,iBAC9BA,EAAW,oBAAuB,qBAClCA,EAAW,yBAA4B,0BACvCA,EAAW,gBAAmB,iBAC9BA,EAAW,mBAAsB,oBACjCA,EAAW,uBAA0B,wBACrCA,EAAW,wBAA2B,yBACtCA,EAAW,qBAAwB,sBACnCA,EAAW,8BAAiC,+BAC5CA,EAAW,qBAAwB,sBACnCA,EAAW,sBAAyB,uBACpCA,EAAW,sBAAyB,uBACpCA,EAAW,aAAgB,cAC3BA,EAAW,gBAAmB,iBACvBA,IACND,MAAa,CAAA,CAAE;AAClB,MAAME,WAAsB,MAAM;AAAA,EAChC,YAAYvtC,GAAM0B,GAAS;AACzB,UAAMA,CAAO,GACb,KAAK,OAAO,iBACZ,KAAK,OAAO1B;AAAA,EACd;AACF;AACA,MAAMwtC,KAAmB,CAAC/vB,GAAGryB,MAAU,OAAOA,KAAU,aAAa,eAAeA,GAC9Em6C,KAAY,CAAC2B,MAAM,KAAK,UAAUA,GAAGsG,EAAgB;AAC3D,SAASC,GAAah2C,GAAM;AAC1B,SAAO,IAAI81C;AAAA,IACTF,GAAU;AAAA,IACV,qCAAqC9H,GAAU9tC,CAAI,CAAC;AAAA,EACxD;AACA;AACA,SAASi2C,GAAgB7wC,GAAM;AAC7B,SAAO,IAAI0wC;AAAA,IACTF,GAAU;AAAA,IACV,YAAYxwC,CAAI;AAAA,EACpB;AACA;AACA,SAAS8wC,GAAc9wC,GAAM;AAC3B,SAAO,IAAI0wC;AAAA,IACTF,GAAU;AAAA,IACV,UAAUxwC,CAAI;AAAA,EAClB;AACA;AACA,SAAS+wC,KAAoB;AAC3B,SAAO,IAAIL;AAAA,IACTF,GAAU;AAAA,IACV;AAAA,EACJ;AACA;AACA,SAASQ,GAAuBC,GAAU31C,GAAOzD,GAAS;AAExD,QAAM4lB,IAAU,0BADK,UAAUwzB,IAAWA,EAAS,OAAOA,CACJ,IAChDxiB,IAAY,CAAC4b,MAAM;AACvB,QAAIA,KAAK,KAAM,QAAO;AACtB,QAAI,MAAM,QAAQA,CAAC;AACjB,aAAO,IAAIA,EAAE,IAAI5b,CAAS,EAAE,KAAK,IAAI,CAAC;AAExC,QAAI,OAAO4b,KAAM;AACf,aAAI,YAAYA,KAAK,OAAOA,EAAE,UAAW,aAChC,KAAK,UAAUA,EAAE,OAAM,CAAE,IAE9B,UAAUA,IACL,KAAK,UAAUA,EAAE,IAAI,IAEvB,KAAK,UAAUA,CAAC;AAEzB,QAAI,OAAOA,KAAM,YAAY,OAAOA,KAAM,YAAY,OAAOA,KAAM;AACjE,aAAO,KAAK,UAAUA,CAAC;AAEzB,QAAI,OAAOA,KAAM;AACf,aAAO,cAAcA,EAAE,QAAQ,WAAW;AAE5C,QAAI;AACF,aAAO,OAAOA,CAAC;AAAA,IACjB,QAAQ;AACN,aAAO;AAAA,IACT;AAAA,EACF,GACM6G,IAAiB,CAAC,iBAAiBzzB,CAAO,GAC1C0zB,IAAe,CAAC,gBAAgB71C,CAAK,GACrC81C,IAAiB;AAAA,IACrB;AAAA,KACCv5C,KAAW,CAAA,GAAI,IAAI,CAACgH,MACdA,IACD,OAAOA,KAAS,YAAY,UAAUA,IACjC,GAAGA,CAAI,KAET4vB,EAAU5vB,CAAI,IAJH,MAKnB;AAAA,EACL,GACQwyC,IAAW,CAACH,GAAgBC,GAAcC,CAAc,EAAE;AAAA,IAC9D,CAACE,GAAK,CAACC,GAAOhjD,CAAK,MAAM;AACvB,YAAMsW,IAAU,GAAG0sC,CAAK,KAAK9iB,EAAUlgC,CAAK,CAAC;AAC7C,aAAO+iD,EAAI,OAAOzsC,CAAO;AAAA,IAC3B;AAAA,IACA,CAAA;AAAA,EACJ;AACE,SAAO,IAAI6rC;AAAA,IACTF,GAAU;AAAA,IACVa,EAAS,KAAK;AAAA,CAAI;AAAA,EACtB;AACA;AACA,SAASG,KAAgB;AACvB,SAAO,IAAId;AAAA,IACTF,GAAU;AAAA,IACV;AAAA,EACJ;AACA;AACA,SAASiB,GAAiB5yC,GAAM;AAC9B,SAAO,IAAI6xC;AAAA,IACTF,GAAU;AAAA,IACV,wCAAwC9H,GAAU7pC,CAAI,CAAC;AAAA,EAC3D;AACA;AACA,SAAS6yC,GAAqB7yC,GAAM;AAClC,SAAO,IAAI6xC;AAAA,IACTF,GAAU;AAAA,IACV,4CAA4C9H,GAAU7pC,CAAI,CAAC;AAAA,EAC/D;AACA;AAOA,SAAS8yC,GAAmB9yC,GAAM;AAChC,SAAO,IAAI6xC;AAAA,IACTF,GAAU;AAAA,IACV,gCAAgC9H,GAAU7pC,CAAI,CAAC;AAAA,EACnD;AACA;AACA,SAAS+yC,KAA8B;AACrC,SAAO,IAAIlB;AAAA,IACTF,GAAU;AAAA,IACV;AAAA,EACJ;AACA;AAOA,SAASqB,GAAoB7xC,GAAM;AACjC,SAAO,IAAI0wC;AAAA,IACTF,GAAU;AAAA,IACV,iDAAiDxwC,CAAI;AAAA,EACzD;AACA;AACA,SAAS8xC,GAAoB9xC,GAAM;AACjC,SAAO,IAAI0wC;AAAA,IACTF,GAAU;AAAA,IACV,iDAAiDxwC,CAAI;AAAA,EACzD;AACA;AC7JA,MAAM+xC,GAAU;AAAA,EACd,cAAc;AACZ,SAAK,WAA2B,oBAAI,IAAG,GACvC,KAAK,MAAM,CAAC/+B,MAAU;AACpB,YAAMjG,IAAU,OAAOiG,KAAU,WAAW,CAAC,GAAG,KAAK,SAAS,OAAM,CAAE,EAAE,KAAK,CAACq3B,MAAMA,EAAE,KAAK,SAASr3B,CAAK,IAAI,KAAK,SAAS,IAAIA,EAAM,EAAE;AACvI,UAAI,CAACjG,GAAS;AACZ,cAAM/M,IAAO,OAAOgT,KAAU,WAAWA,IAAQA,EAAM;AACvD,cAAM69B,GAAgB7wC,CAAI;AAAA,MAC5B;AACA,aAAO+M;AAAA,IACT,GACA,KAAK,SAAS,CAACiG,MAAU;AACvB,YAAMjG,IAAU,OAAOiG,KAAU,WAAW,CAAC,GAAG,KAAK,SAAS,OAAM,CAAE,EAAE,KAAK,CAACq3B,MAAMA,EAAE,KAAK,SAASr3B,CAAK,IAAI,KAAK,SAAS,IAAIA,EAAM,EAAE;AACvI,MAAKjG,KACL,KAAK,SAAS,OAAOA,EAAQ,KAAK,EAAE;AAAA,IACtC,GACA,KAAK,MAAM,CAACiG,MACN,OAAOA,KAAU,WACZ,CAAC,GAAG,KAAK,SAAS,OAAM,CAAE,EAAE,KAAK,CAACq3B,MAAMA,EAAE,KAAK,SAASr3B,CAAK,IAC/D,KAAK,SAAS,IAAIA,EAAM,EAAE;AAAA,EAErC;AACF;AtOvBe,IAAAg/B,IAAAC,IAAAC,IAAA7jD;AsOwBf,IAAA8jD,MAAA9jD,KAAA,MAAY;AAAA;AAAA,EAEV,YAAY+jD,GAAW7jD,GAAOqM,GAAM;AAkBpC,IAAAy3C,EAAA,MAAAL;AAEA;AAAA,IAAAK,EAAA,MAAAJ;AACA,IAAAI,EAAA,MAAAH;AApBE,IAAAI,EAAA,MAAKN,IAAY,CAAA,IACjBM,EAAA,MAAKJ,IAAQ,MAAM;AACjB,MAAAK,EAAA,MAAKP,IAAU,QAAQ,CAACQ,MAAYA,EAAQD,EAAA,MAAKN,GAAM,CAAC;AAAA,IAC1D,IACA,KAAK,MAAM,CAACQ,MAAW;AACrB,MAAAH,EAAA,MAAKL,IAASQ,IACdF,EAAA,MAAKL,IAAL;AAAA,IACF,GACA,KAAK,MAAM,MAAMK,EAAA,MAAKN,KACtB,KAAK,SAAS,CAACS,MAAY;AACzB,MAAAJ,EAAA,MAAKL,IAASS,EAAQH,EAAA,MAAKN,GAAM,IACjCM,EAAA,MAAKL,IAAL;AAAA,IACF,GACA,KAAK,OAAOt3C,GACZ03C,EAAA,MAAKL,IAAS1jD,IACd6jD,EAAU,IAAIx3C,EAAK,IAAI,IAAI;AAAA,EAC7B;AAAA;AAAA;AAAA,EAOA,GAAG43C,GAAS;AACV,WAAAD,EAAA,MAAKP,IAAU,KAAKQ,CAAO,GACpB,MAAM;AACX,MAAAF,EAAA,MAAKN,IAAYO,EAAA,MAAKP,IAAU,OAAO,CAACW,MAAMA,MAAMH,CAAO;AAAA,IAC7D;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,KAAKA,GAAS;AACZ,UAAMI,IAAM,KAAK,GAAG,CAACrkD,MAAU;AAC7B,MAAAikD,EAAQjkD,CAAK,GACbqkD,EAAG;AAAA,IACL,CAAC;AACD,WAAOA;AAAA,EACT;AAAA;AAAA,EAEA,IAAIJ,GAAS;AACX,IAAAF,EAAA,MAAKN,IAAYO,EAAA,MAAKP,IAAU,OAAO,CAACW,MAAMA,MAAMH,CAAO;AAAA,EAC7D;AAAA;AAAA,EAEA,SAAS;AACP,IAAAF,EAAA,MAAKN,IAAY,CAAA;AAAA,EACnB;AACF,GA9BEA,KAAA,eAEAC,KAAA,eACAC,KAAA,eAvBF7jD;AAmDA,MAAMwkD,GAAU;AAAA;AAAA;AAAA,EAGd,YAAYtkD,GAAOyR,GAAM;AACvB,SAAK,KAAK,OAAO,WAAWA,CAAI,EAAE,GAClC,KAAK,OAAOA,GACZ,KAAK,gBAAgBzR,GACrB,KAAK,YAAY,MAAM;AACrB,YAAMwiD,GAAiB;AAAA,IACzB;AAAA,EACF;AAAA;AAAA;AAAA,EAGA,OAAOqB,GAAW7jD,IAAQ,KAAK,eAAe;AAC5C,WAAO,IAAIukD,GAAMV,GAAW7jD,GAAO,IAAI;AAAA,EACzC;AACF;AACA,MAAMwkD,IAAc,CAACxkD,GAAOyR,MAAS,IAAI6yC,GAAUtkD,GAAOyR,CAAI;AtO5F/C,IAAAgzC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC;AsO6Ff,MAAMC,GAAU;AAAA;AAAA,EAEd,YAAYrB,GAAWsB,GAAOxjC,GAAM;AAmEpC;AAAA,IAAAmiC,EAAA,MAAAW;AAEA;AAAA,IAAAX,EAAA,MAAAY;AAEA;AAAA,IAAAZ,EAAA,MAAAa;AACA,IAAAb,EAAA,MAAAc;AACA,IAAAd,EAAA,MAAAe;AACA,IAAAf,EAAA,MAAAgB;AACA,IAAAhB,EAAA,MAAAiB;AACA,IAAAjB,EAAA,MAAAkB;AACA,IAAAlB,EAAA,MAAAmB;AA5EE,IAAAlB,EAAA,MAAKa,IAAkC,oBAAI,IAAG,IAC9Cb,EAAA,MAAKc,IAAkC,oBAAI,IAAG,IAC9Cd,EAAA,MAAKe,IAAkC,oBAAI,IAAG,IAC9Cf,EAAA,MAAKgB,IAA8B,oBAAI,IAAG,IAC1C,KAAK,OAAO,OACH;AAAA,MACL,UAAUf,EAAA,MAAKS;AAAA,MACf,gBAAgB,CAAC,GAAGT,EAAA,MAAKY,GAAe,EAAE,IAAI,CAACngC,OAAW;AAAA,QACxD,MAAM,OAAOA,KAAU,WAAWA,IAAQA,EAAM;AAAA,QAChD,OAAOu/B,EAAA,MAAKgB,IAAL,WAAevgC;AAAA,MAChC,EAAU;AAAA,MACF,gBAAgB,CAAC,GAAGu/B,EAAA,MAAKa,GAAe,EAAE,IAAI,CAACpgC,OAAW;AAAA,QACxD,MAAM,OAAOA,KAAU,WAAWA,IAAQA,EAAM;AAAA,QAChD,OAAOu/B,EAAA,MAAKgB,IAAL,WAAevgC;AAAA,MAChC,EAAU;AAAA,MACF,gBAAgB,CAAC,GAAGu/B,EAAA,MAAKc,GAAe,EAAE;AAAA,QACxC,CAAC,CAACM,GAAO,EAAE,UAAAC,EAAQ,CAAE,OAAO;AAAA,UAC1B,MAAMD,EAAM;AAAA,UACZ,UAAAC;AAAA,UACA,QAAQrB,EAAA,MAAKiB,IAAL,WAAeG;AAAA,QACnC;AAAA,MACA;AAAA,MACQ,YAAY,CAAC,GAAGpB,EAAA,MAAKe,GAAW,EAAE,IAAI,CAAC,CAACK,GAAO,EAAE,UAAAC,EAAQ,CAAE,OAAO;AAAA,QAChE,MAAMD,EAAM;AAAA,QACZ,UAAAC;AAAA,QACA,QAAQrB,EAAA,MAAKiB,IAAL,WAAeG;AAAA,MACjC,EAAU;AAAA,IACV,IAEI,KAAK,WAAW,CAACE,MAAc;AAC7B,MAAAtB,EAAA,MAAKc,IAAgB,IAAIQ,GAAW,EAAE,OAAO,KAAK,IAAG,GAAI,UAAU,GAAG;AAAA,IACxE,GACA,KAAK,UAAU,CAACA,MAAc;AAC5B,MAAAtB,EAAA,MAAKc,IAAgB,OAAOQ,CAAS;AAAA,IACvC,GACA,KAAK,SAAS,CAACA,MAAc;AAC3B,YAAMF,IAAQpB,EAAA,MAAKc,IAAgB,IAAIQ,CAAS;AAChD,MAAKF,MACLA,EAAM,WAAW,KAAK,IAAG,IAAKA,EAAM;AAAA,IACtC,GACA,KAAK,SAAS,CAACE,GAAWC,MAAY;AACpC,YAAM1xC,IAAQ,KAAK,IAAG;AACtB,MAAA0xC,EAAQ,QAAQ,MAAM;AACpB,QAAAvB,EAAA,MAAKe,IAAY,IAAIO,GAAW,EAAE,UAAU,KAAK,QAAQzxC,GAAO;AAAA,MAClE,CAAC,EAAE,MAAM,QAAQ,KAAK;AAAA,IACxB,GACA,KAAK,WAAW,CAAC2xC,MAAc;AAC7B,MAAAxB,EAAA,MAAKY,IAAgB,IAAIY,CAAS;AAAA,IACpC,GACA,KAAK,WAAW,CAACA,MAAc;AAC7B,MAAAxB,EAAA,MAAKY,IAAgB,OAAOY,CAAS;AAAA,IACvC,GACA,KAAK,QAAQ,CAACA,MAAc;AAC1B,MAAAxB,EAAA,MAAKa,IAAgB,IAAIW,CAAS;AAAA,IACpC,GACAzB,EAAA,MAAKiB,IAAY,CAACQ,MACTxB,EAAA,MAAKU,IAAW,IAAIc,CAAS,EAAE,IAAG,IAE3CzB,EAAA,MAAKkB,IAAY,CAACK,MACTtB,EAAA,MAAKW,IAAO,IAAIW,CAAS,EAAE,SAEpCvB,EAAA,MAAKW,IAAab,IAClBE,EAAA,MAAKY,IAASQ,IACdpB,EAAA,MAAKU,IAAQ9iC;AAAA,EACf;AAaF;AAXE8iC,KAAA,eAEAC,KAAA,eAEAC,KAAA,eACAC,KAAA,eACAC,KAAA,eACAC,KAAA,eACAC,KAAA,eACAC,KAAA,eACAC,KAAA;AtO5Ka,IAAAP,IAAAC,IAAAF,IAAAgB;AsO8Kf,MAAMC,KAAN,MAAMA,GAAI;AAAA;AAAA,EAER,YAAY7B,GAAWsB,GAAOxjC,GAAM;AAuDpC;AAAA,IAAAmiC,EAAA,MAAAY;AAEA;AAAA,IAAAZ,EAAA,MAAAa;AAEA;AAAA,IAAAb,EAAA,MAAAW;AAEA;AAAA,IAAAX,EAAA,MAAA2B;AA5DE,SAAK,UAAU,CAACE,MACVA,KAAS,OAAO,KAAKA,CAAK,EAAE,SACvB,IAAID,GAAI1B,EAAA,MAAKU,KAAYV,EAAA,MAAKW,KAAQ,EAAE,GAAGgB,GAAO,IACpD,MAET,KAAK,SAAS,CAACH,GAAWxlD,MAAU;AAClC,YAAMykB,IAAQ+gC,EAAU,OAAOxB,EAAA,MAAKU,IAAW,QAAQ;AACvD,aAAI1kD,KAAS,QAAMykB,EAAM,IAAIzkB,CAAK,GAClCgkD,EAAA,MAAKyB,KAAY,SAASD,CAAS,GAC5B;AAAA,IACT,GACA,KAAK,SAAS,CAACA,OACbxB,EAAA,MAAKU,IAAW,OAAOc,CAAS,GAChCxB,EAAA,MAAKyB,KAAY,SAASD,CAAS,GAC5B,OAET,KAAK,SAAS,CAACF,OACbA,EAAU,OAAOtB,EAAA,MAAKW,IAAO,KAAK,GAClCX,EAAA,MAAKyB,KAAY,SAASH,CAAS,GAC5B,OAET,KAAK,aAAa,CAACA,OACjBtB,EAAA,MAAKW,IAAO,OAAOW,CAAS,GAC5BtB,EAAA,MAAKyB,KAAY,QAAQH,CAAS,GAC3B,OAET,KAAK,aAAa,CAACE,MAAcxB,EAAA,MAAKU,IAAW,IAAIc,CAAS,GAC9D,KAAK,aAAa,CAACF,MAActB,EAAA,MAAKW,IAAO,IAAIW,CAAS,GAC1D,KAAK,MAAM,CAACE,OACVxB,EAAA,MAAKyB,KAAY,MAAMD,CAAS,GACzBxB,EAAA,MAAKU,IAAW,IAAIc,CAAS,IAEtC,KAAK,MAAM,CAACA,MAAc,KAAK,IAAIA,CAAS,EAAE,IAAG,GACjD,KAAK,MAAM,CAACA,GAAWxlD,MAAU,KAAK,IAAIwlD,CAAS,EAAE,IAAIxlD,CAAK,GAC9D,KAAK,SAAS,CAACwlD,GAAWrB,MAAY,KAAK,IAAIqB,CAAS,EAAE,OAAOrB,CAAO,GACxE,KAAK,QAAQ,CAACiB,MAAUpB,EAAA,MAAKW,IAAO,IAAIS,CAAK,GAC7C,KAAK,OAAO,CAACA,MAAU;AACrB,WAAK,MAAMA,CAAK,EAAE,KAAI,GACtBpB,EAAA,MAAKyB,KAAY,OAAOL,CAAK;AAAA,IAC/B,GACA,KAAK,OAAO,CAACA,MAAU;AACrB,YAAMG,IAAU,KAAK,MAAMH,CAAK,EAAE,MAAK;AACvC,aAAApB,EAAA,MAAKyB,KAAY,OAAOL,GAAOG,CAAO,GAC/BA;AAAA,IACT,GACA,KAAK,aAAa,OAAO9gC,MAAU;AACjC,YAAM,QAAQ,IAAI,KAAK,IAAIA,CAAK,EAAE,IAAI,CAACq3B,MAAM,KAAK,KAAKA,CAAC,CAAC,CAAC;AAAA,IAC5D,GACAiI,EAAA,MAAKW,IAAab,IAClBE,EAAA,MAAKY,IAASQ,IACdpB,EAAA,MAAKU,IAAQ9iC,IACTA,KAAMoiC,EAAA,MAAK0B,IAAa,IAAIP,GAAUrB,GAAWsB,GAAOxjC,CAAI;AAAA,EAClE;AAAA;AAAA,EAUA,IAAI,OAAO;AACT,WAAOqiC,EAAA,MAAKS;AAAA,EACd;AAAA;AAAA,EAEA,IAAI,YAAY;AACd,WAAOT,EAAA,MAAKyB;AAAA,EACd;AACF;AAfEf,KAAA,eAEAC,KAAA,eAEAF,KAAA,eAEAgB,KAAA;AA/DF,IAAMG,KAANF;AAyEA,MAAMG,GAAM;AAAA,EACV,cAAc;AACZ,SAAK,QAAwB,oBAAI,IAAG,GACpC,KAAK,MAAM,CAACT,MAAU;AACpB,YAAMzjC,IAAO,KAAK,MAAM,IAAIyjC,EAAM,EAAE;AACpC,UAAI,CAACzjC,EAAM,OAAM4gC,GAAc6C,EAAM,IAAI;AACzC,aAAOzjC;AAAA,IACT,GACA,KAAK,SAAS,CAACyjC,MAAU;AACvB,WAAK,MAAM,OAAOA,EAAM,EAAE;AAAA,IAC5B,GACA,KAAK,MAAM,CAACA,MACH,KAAK,MAAM,IAAIA,EAAM,EAAE;AAAA,EAElC;AACF;AtOtQe,IAAAU,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC;AsOuQf,MAAMC,GAAM;AAAA;AAAA,EAEV,YAAYjB,GAAO94C,GAAM;AA2CzB,IAAAy3C,EAAA,MAAAgC;AACA,IAAAhC,EAAA,MAAAiC;AAEA;AAAA,IAAAjC,EAAA,MAAAkC;AACA,IAAAlC,EAAA,MAAAmC;AAMA,IAAAnC,EAAA,MAAAoC;AACA,IAAApC,EAAA,MAAAqC;AArDE,IAAApC,EAAA,MAAK+B,IAAW,OAChB/B,EAAA,MAAKgC,IAAY,OACjBhC,EAAA,MAAKkC,IAAU,YACf,KAAK,QAAQ,OACXjC,EAAA,MAAK8B,OAAL/B,EAAA,MAAK+B,IAAa,IAAI,QAAQ,CAACpuC,GAASC,MAAW;AACjD,MAAAosC,EAAA,MAAKgC,IAAY,CAACn3C,MAAM;AACtB,QAAMA,aAAa,eACfA,EAAE,OAAO,OAAOo1C,EAAA,MAAKgC,QACvBjC,EAAA,MAAKkC,IAAU,aACfjC,EAAA,MAAKkC,IAAL,YACAt3C,EAAE,yBAAwB,GAC1B8I,EAAO;AAAA,MAEX,IACAssC,EAAA,MAAKmC,IAAL,WAAkB,MAAM;AACtB,QAAInC,EAAA,MAAKiC,QAAY,aAAWlC,EAAA,MAAKkC,IAAU,aAC/CjC,EAAA,MAAKkC,IAAL,YACAvuC,EAAO,IAAI,MAAM,UAAU,KAAK,KAAK,IAAI,WAAW,CAAC;AAAA,MACvD,IACAosC,EAAA,MAAKkC,IAAU,YACf,iBAAiB,KAAK,KAAK,MAAMjC,EAAA,MAAK+B,GAAS;AAAA,IACjD,CAAC,IACM/B,EAAA,MAAK8B,MAEd,KAAK,OAAO,MAAM;AAChB,YAAMriC,IAAQ,IAAI,YAAY,KAAK,KAAK,MAAM;AAAA,QAC5C,QAAQ,EAAE,IAAIugC,EAAA,MAAKgC,IAAY;AAAA,MACvC,CAAO;AACD,oBAAcviC,CAAK;AAAA,IACrB,GACAsgC,EAAA,MAAKmC,IAAkB,MAAM;AAC3B,MAAIlC,EAAA,MAAK+B,OAAW,oBAAoB,KAAK,KAAK,MAAM/B,EAAA,MAAK+B,GAAS;AAAA,IACxE,IACAhC,EAAA,MAAKoC,IAAe,CAACE,MAAc;AACjC,iBAAW,MAAM;AACf,QAAAA,EAAS;AAAA,MACX,GAAG,KAAK,KAAK,OAAO;AAAA,IACtB,IACAtC,EAAA,MAAKiC,IAAe,OAAO35C,EAAK,IAAI,IACpC,KAAK,OAAOA,GACZ84C,EAAM,IAAI94C,EAAK,IAAI,IAAI;AAAA,EACzB;AAAA;AAAA;AAAA,EAQA,IAAI,SAAS;AACX,WAAO23C,EAAA,MAAKiC;AAAA,EACd;AAGF;AAZEH,KAAA,eACAC,KAAA,eAEAC,KAAA,eACAC,KAAA,eAMAC,KAAA,eACAC,KAAA;AAEF,MAAMG,GAAU;AAAA;AAAA;AAAA,EAGd,YAAY70C,GAAM80C,IAAU,KAAK;AAC/B,SAAK,SAAS,CAACpB,MACN,IAAIiB,GAAMjB,GAAO,IAAI,GAE9B,KAAK,KAAK,OAAO,SAAS1zC,CAAI,EAAE,GAChC,KAAK,OAAOA,GACZ,KAAK,UAAU80C;AAAA,EACjB;AACF;AACA,MAAMC,KAAc,CAAC/0C,GAAM80C,IAAU,QAAQ,IAAID,GAAU70C,GAAM80C,CAAO;AC3UxE,SAASE,GAAWn9C,GAAS;AAC3B,OAAK,UAAUA;AACjB;AAEAm9C,GAAW,YAAY;AAAA,EACrB,aAAaA;AAAA,EAEb,MAAM,SAASp1C,GAAK;AAClB,aAAStP,IAAI,GAAGA,IAAI,KAAK,QAAQ,QAAQA,KAAK;AAC5C,UAAI,KAAK,QAAQA,CAAC,MAAMsP,EAAK,QAAOtP;AACtC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,KAAK,SAASsP,GAAK;AACjB,QAAIq1C,IAAQ,KAAK,KAAKr1C,CAAG;AACzB,WAAOq1C,KAAS,KAAK,SAAY,KAAK,QAAQA,IAAQ,CAAC;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,QAAQ,SAASr1C,GAAKrR,GAAO2mD,GAAQ;AACnC,QAAI1vC,IAAO0vC,KAAUA,KAAUt1C,IAAM,KAAK,OAAOs1C,CAAM,IAAI,MACvDD,IAAQzvC,EAAK,KAAK5F,CAAG,GAAG/H,IAAU2N,EAAK,QAAQ,MAAK;AACxD,WAAIyvC,KAAS,KACXp9C,EAAQ,KAAKq9C,KAAUt1C,GAAKrR,CAAK,KAEjCsJ,EAAQo9C,IAAQ,CAAC,IAAI1mD,GACjB2mD,MAAQr9C,EAAQo9C,CAAK,IAAIC,KAExB,IAAIF,GAAWn9C,CAAO;AAAA,EAC/B;AAAA;AAAA;AAAA,EAIA,QAAQ,SAAS+H,GAAK;AACpB,QAAIq1C,IAAQ,KAAK,KAAKr1C,CAAG;AACzB,QAAIq1C,KAAS,GAAI,QAAO;AACxB,QAAIp9C,IAAU,KAAK,QAAQ,MAAK;AAChC,WAAAA,EAAQ,OAAOo9C,GAAO,CAAC,GAChB,IAAID,GAAWn9C,CAAO;AAAA,EAC/B;AAAA;AAAA;AAAA,EAIA,YAAY,SAAS+H,GAAKrR,GAAO;AAC/B,WAAO,IAAIymD,GAAW,CAACp1C,GAAKrR,CAAK,EAAE,OAAO,KAAK,OAAOqR,CAAG,EAAE,OAAO,CAAC;AAAA,EACrE;AAAA;AAAA;AAAA,EAIA,UAAU,SAASA,GAAKrR,GAAO;AAC7B,QAAIsJ,IAAU,KAAK,OAAO+H,CAAG,EAAE,QAAQ,MAAK;AAC5C,WAAA/H,EAAQ,KAAK+H,GAAKrR,CAAK,GAChB,IAAIymD,GAAWn9C,CAAO;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW,SAASs9C,GAAOv1C,GAAKrR,GAAO;AACrC,QAAI6mD,IAAU,KAAK,OAAOx1C,CAAG,GAAG/H,IAAUu9C,EAAQ,QAAQ,MAAK,GAC3DH,IAAQG,EAAQ,KAAKD,CAAK;AAC9B,WAAAt9C,EAAQ,OAAOo9C,KAAS,KAAKp9C,EAAQ,SAASo9C,GAAO,GAAGr1C,GAAKrR,CAAK,GAC3D,IAAIymD,GAAWn9C,CAAO;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS,SAASw9C,GAAG;AACnB,aAAS/kD,IAAI,GAAGA,IAAI,KAAK,QAAQ,QAAQA,KAAK;AAC5C,MAAA+kD,EAAE,KAAK,QAAQ/kD,CAAC,GAAG,KAAK,QAAQA,IAAI,CAAC,CAAC;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS,SAAS8K,GAAK;AAErB,WADAA,IAAM45C,GAAW,KAAK55C,CAAG,GACpBA,EAAI,OACF,IAAI45C,GAAW55C,EAAI,QAAQ,OAAO,KAAK,SAASA,CAAG,EAAE,OAAO,CAAC,IAD9C;AAAA,EAExB;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ,SAASA,GAAK;AAEpB,WADAA,IAAM45C,GAAW,KAAK55C,CAAG,GACpBA,EAAI,OACF,IAAI45C,GAAW,KAAK,SAAS55C,CAAG,EAAE,QAAQ,OAAOA,EAAI,OAAO,CAAC,IAD9C;AAAA,EAExB;AAAA;AAAA;AAAA;AAAA,EAKA,UAAU,SAASA,GAAK;AACtB,QAAIhI,IAAS;AACb,IAAAgI,IAAM45C,GAAW,KAAK55C,CAAG;AACzB,aAAS9K,IAAI,GAAGA,IAAI8K,EAAI,QAAQ,QAAQ9K,KAAK;AAC3C,MAAA8C,IAASA,EAAO,OAAOgI,EAAI,QAAQ9K,CAAC,CAAC;AACvC,WAAO8C;AAAA,EACT;AAAA;AAAA;AAAA,EAIA,UAAU,WAAW;AACnB,QAAIA,IAAS,CAAA;AACb,gBAAK,QAAQ,SAASwM,GAAKrR,GAAO;AAAE,MAAA6E,EAAOwM,CAAG,IAAIrR;AAAA,IAAO,CAAC,GACnD6E;AAAA,EACT;AAAA;AAAA;AAAA,EAIA,IAAI,OAAO;AACT,WAAO,KAAK,QAAQ,UAAU;AAAA,EAChC;AACF;AAMA4hD,GAAW,OAAO,SAASzmD,GAAO;AAChC,MAAIA,aAAiBymD,GAAY,QAAOzmD;AACxC,MAAIsJ,IAAU,CAAA;AACd,MAAItJ,EAAO,UAAS+mD,KAAQ/mD,EAAO,CAAAsJ,EAAQ,KAAKy9C,GAAM/mD,EAAM+mD,CAAI,CAAC;AACjE,SAAO,IAAIN,GAAWn9C,CAAO;AAC/B;ACpIA,SAAS09C,GAAcv7C,GAAGC,GAAG2H,GAAK;AAC9B,WAAStR,IAAI,KAAIA,KAAK;AAClB,QAAIA,KAAK0J,EAAE,cAAc1J,KAAK2J,EAAE;AAC5B,aAAOD,EAAE,cAAcC,EAAE,aAAa,OAAO2H;AACjD,QAAI4zC,IAASx7C,EAAE,MAAM1J,CAAC,GAAGmlD,IAASx7C,EAAE,MAAM3J,CAAC;AAC3C,QAAIklD,KAAUC,GAAQ;AAClB,MAAA7zC,KAAO4zC,EAAO;AACd;AAAA,IACJ;AACA,QAAI,CAACA,EAAO,WAAWC,CAAM;AACzB,aAAO7zC;AACX,QAAI4zC,EAAO,UAAUA,EAAO,QAAQC,EAAO,MAAM;AAC7C,eAAShhD,IAAI,GAAG+gD,EAAO,KAAK/gD,CAAC,KAAKghD,EAAO,KAAKhhD,CAAC,GAAGA;AAC9C,QAAAmN;AACJ,aAAOA;AAAA,IACX;AACA,QAAI4zC,EAAO,QAAQ,QAAQC,EAAO,QAAQ,MAAM;AAC5C,UAAIx8C,IAAQs8C,GAAcC,EAAO,SAASC,EAAO,SAAS7zC,IAAM,CAAC;AACjE,UAAI3I,KAAS;AACT,eAAOA;AAAA,IACf;AACA,IAAA2I,KAAO4zC,EAAO;AAAA,EAClB;AACJ;AACA,SAASE,GAAY17C,GAAGC,GAAG07C,GAAMC,GAAM;AACnC,WAASC,IAAK77C,EAAE,YAAY87C,IAAK77C,EAAE,gBAAc;AAC7C,QAAI47C,KAAM,KAAKC,KAAM;AACjB,aAAOD,KAAMC,IAAK,OAAO,EAAE,GAAGH,GAAM,GAAGC,EAAI;AAC/C,QAAIJ,IAASx7C,EAAE,MAAM,EAAE67C,CAAE,GAAGJ,IAASx7C,EAAE,MAAM,EAAE67C,CAAE,GAAGnrC,IAAO6qC,EAAO;AAClE,QAAIA,KAAUC,GAAQ;AAClB,MAAAE,KAAQhrC,GACRirC,KAAQjrC;AACR;AAAA,IACJ;AACA,QAAI,CAAC6qC,EAAO,WAAWC,CAAM;AACzB,aAAO,EAAE,GAAGE,GAAM,GAAGC,EAAI;AAC7B,QAAIJ,EAAO,UAAUA,EAAO,QAAQC,EAAO,MAAM;AAC7C,UAAIM,IAAO,GAAGC,IAAU,KAAK,IAAIR,EAAO,KAAK,QAAQC,EAAO,KAAK,MAAM;AACvE,aAAOM,IAAOC,KAAWR,EAAO,KAAKA,EAAO,KAAK,SAASO,IAAO,CAAC,KAAKN,EAAO,KAAKA,EAAO,KAAK,SAASM,IAAO,CAAC;AAC5G,QAAAA,KACAJ,KACAC;AAEJ,aAAO,EAAE,GAAGD,GAAM,GAAGC,EAAI;AAAA,IAC7B;AACA,QAAIJ,EAAO,QAAQ,QAAQC,EAAO,QAAQ,MAAM;AAC5C,UAAIx8C,IAAQy8C,GAAYF,EAAO,SAASC,EAAO,SAASE,IAAO,GAAGC,IAAO,CAAC;AAC1E,UAAI38C;AACA,eAAOA;AAAA,IACf;AACA,IAAA08C,KAAQhrC,GACRirC,KAAQjrC;AAAA,EACZ;AACJ;AASA,MAAMsrC,EAAS;AAAA;AAAA;AAAA;AAAA,EAIX,YAIAp+C,GAAS8S,GAAM;AAGX,QAFA,KAAK,UAAU9S,GACf,KAAK,OAAO8S,KAAQ,GAChBA,KAAQ;AACR,eAASra,IAAI,GAAGA,IAAIuH,EAAQ,QAAQvH;AAChC,aAAK,QAAQuH,EAAQvH,CAAC,EAAE;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,aAAa6uB,GAAMokB,GAAI8R,GAAGa,IAAY,GAAG/zC,GAAQ;AAC7C,aAAS7R,IAAI,GAAGsR,IAAM,GAAGA,IAAM2hC,GAAIjzC,KAAK;AACpC,UAAIiL,IAAQ,KAAK,QAAQjL,CAAC,GAAGqS,IAAMf,IAAMrG,EAAM;AAC/C,UAAIoH,IAAMwc,KAAQk2B,EAAE95C,GAAO26C,IAAYt0C,GAAKO,KAAU,MAAM7R,CAAC,MAAM,MAASiL,EAAM,QAAQ,MAAM;AAC5F,YAAI6G,IAAQR,IAAM;AAClB,QAAArG,EAAM,aAAa,KAAK,IAAI,GAAG4jB,IAAO/c,CAAK,GAAG,KAAK,IAAI7G,EAAM,QAAQ,MAAMgoC,IAAKnhC,CAAK,GAAGizC,GAAGa,IAAY9zC,CAAK;AAAA,MAChH;AACA,MAAAR,IAAMe;AAAA,IACV;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,YAAY0yC,GAAG;AACX,SAAK,aAAa,GAAG,KAAK,MAAMA,CAAC;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,YAAYl2B,GAAMokB,GAAI4S,GAAgBC,GAAU;AAC5C,QAAI3iD,IAAO,IAAI4iD,IAAQ;AACvB,gBAAK,aAAal3B,GAAMokB,GAAI,CAAC1kC,GAAM+C,MAAQ;AACvC,UAAI00C,IAAWz3C,EAAK,SAASA,EAAK,KAAK,MAAM,KAAK,IAAIsgB,GAAMvd,CAAG,IAAIA,GAAK2hC,IAAK3hC,CAAG,IACzE/C,EAAK,SACFu3C,IAAY,OAAOA,KAAa,aAAaA,EAASv3C,CAAI,IAAIu3C,IAC1Dv3C,EAAK,KAAK,KAAK,WAAWA,EAAK,KAAK,KAAK,SAASA,CAAI,IAClD,KAHG;AAIrB,MAAIA,EAAK,YAAYA,EAAK,UAAUy3C,KAAYz3C,EAAK,gBAAgBs3C,MAC7DE,IACAA,IAAQ,KAER5iD,KAAQ0iD,IAEhB1iD,KAAQ6iD;AAAA,IACZ,GAAG,CAAC,GACG7iD;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO8iD,GAAO;AACV,QAAI,CAACA,EAAM;AACP,aAAO;AACX,QAAI,CAAC,KAAK;AACN,aAAOA;AACX,QAAIvmD,IAAO,KAAK,WAAWqmD,IAAQE,EAAM,YAAY1+C,IAAU,KAAK,QAAQ,MAAK,GAAIvH,IAAI;AAKzF,SAJIN,EAAK,UAAUA,EAAK,WAAWqmD,CAAK,MACpCx+C,EAAQA,EAAQ,SAAS,CAAC,IAAI7H,EAAK,SAASA,EAAK,OAAOqmD,EAAM,IAAI,GAClE/lD,IAAI,IAEDA,IAAIimD,EAAM,QAAQ,QAAQjmD;AAC7B,MAAAuH,EAAQ,KAAK0+C,EAAM,QAAQjmD,CAAC,CAAC;AACjC,WAAO,IAAI2lD,EAASp+C,GAAS,KAAK,OAAO0+C,EAAM,IAAI;AAAA,EACvD;AAAA;AAAA;AAAA;AAAA,EAIA,IAAIp3B,GAAMokB,IAAK,KAAK,MAAM;AACtB,QAAIpkB,KAAQ,KAAKokB,KAAM,KAAK;AACxB,aAAO;AACX,QAAInwC,IAAS,IAAIuX,IAAO;AACxB,QAAI44B,IAAKpkB;AACL,eAAS7uB,IAAI,GAAGsR,IAAM,GAAGA,IAAM2hC,GAAIjzC,KAAK;AACpC,YAAIiL,IAAQ,KAAK,QAAQjL,CAAC,GAAGqS,IAAMf,IAAMrG,EAAM;AAC/C,QAAIoH,IAAMwc,OACFvd,IAAMud,KAAQxc,IAAM4gC,OAChBhoC,EAAM,SACNA,IAAQA,EAAM,IAAI,KAAK,IAAI,GAAG4jB,IAAOvd,CAAG,GAAG,KAAK,IAAIrG,EAAM,KAAK,QAAQgoC,IAAK3hC,CAAG,CAAC,IAEhFrG,IAAQA,EAAM,IAAI,KAAK,IAAI,GAAG4jB,IAAOvd,IAAM,CAAC,GAAG,KAAK,IAAIrG,EAAM,QAAQ,MAAMgoC,IAAK3hC,IAAM,CAAC,CAAC,IAEjGxO,EAAO,KAAKmI,CAAK,GACjBoP,KAAQpP,EAAM,WAElBqG,IAAMe;AAAA,MACV;AACJ,WAAO,IAAIszC,EAAS7iD,GAAQuX,CAAI;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA,EAIA,WAAWwU,GAAMokB,GAAI;AACjB,WAAIpkB,KAAQokB,IACD0S,EAAS,QAChB92B,KAAQ,KAAKokB,KAAM,KAAK,QAAQ,SACzB,OACJ,IAAI0S,EAAS,KAAK,QAAQ,MAAM92B,GAAMokB,CAAE,CAAC;AAAA,EACpD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa/tC,GAAOqJ,GAAM;AACtB,QAAIgU,IAAU,KAAK,QAAQrd,CAAK;AAChC,QAAIqd,KAAWhU;AACX,aAAO;AACX,QAAIsB,IAAO,KAAK,QAAQ,MAAK,GACzBwK,IAAO,KAAK,OAAO9L,EAAK,WAAWgU,EAAQ;AAC/C,WAAA1S,EAAK3K,CAAK,IAAIqJ,GACP,IAAIo3C,EAAS91C,GAAMwK,CAAI;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW9L,GAAM;AACb,WAAO,IAAIo3C,EAAS,CAACp3C,CAAI,EAAE,OAAO,KAAK,OAAO,GAAG,KAAK,OAAOA,EAAK,QAAQ;AAAA,EAC9E;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,SAASA,GAAM;AACX,WAAO,IAAIo3C,EAAS,KAAK,QAAQ,OAAOp3C,CAAI,GAAG,KAAK,OAAOA,EAAK,QAAQ;AAAA,EAC5E;AAAA;AAAA;AAAA;AAAA,EAIA,GAAG03C,GAAO;AACN,QAAI,KAAK,QAAQ,UAAUA,EAAM,QAAQ;AACrC,aAAO;AACX,aAASjmD,IAAI,GAAGA,IAAI,KAAK,QAAQ,QAAQA;AACrC,UAAI,CAAC,KAAK,QAAQA,CAAC,EAAE,GAAGimD,EAAM,QAAQjmD,CAAC,CAAC;AACpC,eAAO;AACf,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,aAAa;AAAE,WAAO,KAAK,QAAQ,SAAS,KAAK,QAAQ,CAAC,IAAI;AAAA,EAAM;AAAA;AAAA;AAAA;AAAA,EAIxE,IAAI,YAAY;AAAE,WAAO,KAAK,QAAQ,SAAS,KAAK,QAAQ,KAAK,QAAQ,SAAS,CAAC,IAAI;AAAA,EAAM;AAAA;AAAA;AAAA;AAAA,EAI7F,IAAI,aAAa;AAAE,WAAO,KAAK,QAAQ;AAAA,EAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,EAK/C,MAAMkF,GAAO;AACT,QAAIy/C,IAAQ,KAAK,QAAQz/C,CAAK;AAC9B,QAAI,CAACy/C;AACD,YAAM,IAAI,WAAW,WAAWz/C,IAAQ,uBAAuB,IAAI;AACvE,WAAOy/C;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,WAAWz/C,GAAO;AACd,WAAO,KAAK,QAAQA,CAAK,KAAK;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ6/C,GAAG;AACP,aAAS/kD,IAAI,GAAGm5C,IAAI,GAAGn5C,IAAI,KAAK,QAAQ,QAAQA,KAAK;AACjD,UAAIiL,IAAQ,KAAK,QAAQjL,CAAC;AAC1B,MAAA+kD,EAAE95C,GAAOkuC,GAAGn5C,CAAC,GACbm5C,KAAKluC,EAAM;AAAA,IACf;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,cAAcg7C,GAAO30C,IAAM,GAAG;AAC1B,WAAO2zC,GAAc,MAAMgB,GAAO30C,CAAG;AAAA,EACzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAY20C,GAAO30C,IAAM,KAAK,MAAM40C,IAAWD,EAAM,MAAM;AACvD,WAAOb,GAAY,MAAMa,GAAO30C,GAAK40C,CAAQ;AAAA,EACjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,UAAU50C,GAAK;AACX,QAAIA,KAAO;AACP,aAAO60C,GAAS,GAAG70C,CAAG;AAC1B,QAAIA,KAAO,KAAK;AACZ,aAAO60C,GAAS,KAAK,QAAQ,QAAQ70C,CAAG;AAC5C,QAAIA,IAAM,KAAK,QAAQA,IAAM;AACzB,YAAM,IAAI,WAAW,YAAYA,CAAG,yBAAyB,IAAI,GAAG;AACxE,aAAStR,IAAI,GAAGomD,IAAS,KAAIpmD,KAAK;AAC9B,UAAIqmD,IAAM,KAAK,MAAMrmD,CAAC,GAAGqS,IAAM+zC,IAASC,EAAI;AAC5C,UAAIh0C,KAAOf;AACP,eAAIe,KAAOf,IACA60C,GAASnmD,IAAI,GAAGqS,CAAG,IACvB8zC,GAASnmD,GAAGomD,CAAM;AAE7B,MAAAA,IAAS/zC;AAAA,IACb;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW;AAAE,WAAO,MAAM,KAAK,cAAa,IAAK;AAAA,EAAK;AAAA;AAAA;AAAA;AAAA,EAItD,gBAAgB;AAAE,WAAO,KAAK,QAAQ,KAAK,IAAI;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA,EAIlD,SAAS;AACL,WAAO,KAAK,QAAQ,SAAS,KAAK,QAAQ,IAAI,CAAA3O,MAAKA,EAAE,OAAM,CAAE,IAAI;AAAA,EACrE;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,SAASgyC,GAAQz3C,GAAO;AAC3B,QAAI,CAACA;AACD,aAAO0nD,EAAS;AACpB,QAAI,CAAC,MAAM,QAAQ1nD,CAAK;AACpB,YAAM,IAAI,WAAW,qCAAqC;AAC9D,WAAO,IAAI0nD,EAAS1nD,EAAM,IAAIy3C,EAAO,YAAY,CAAC;AAAA,EACtD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,UAAU31C,GAAO;AACpB,QAAI,CAACA,EAAM;AACP,aAAO4lD,EAAS;AACpB,QAAI7yC,GAAQuH,IAAO;AACnB,aAAS,IAAI,GAAG,IAAIta,EAAM,QAAQ,KAAK;AACnC,UAAIwO,IAAOxO,EAAM,CAAC;AAClB,MAAAsa,KAAQ9L,EAAK,UACT,KAAKA,EAAK,UAAUxO,EAAM,IAAI,CAAC,EAAE,WAAWwO,CAAI,KAC3CuE,MACDA,IAAS/S,EAAM,MAAM,GAAG,CAAC,IAC7B+S,EAAOA,EAAO,SAAS,CAAC,IAAIvE,EACvB,SAASuE,EAAOA,EAAO,SAAS,CAAC,EAAE,OAAOvE,EAAK,IAAI,KAEnDuE,KACLA,EAAO,KAAKvE,CAAI;AAAA,IAExB;AACA,WAAO,IAAIo3C,EAAS7yC,KAAU/S,GAAOsa,CAAI;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAO,KAAKuf,GAAO;AACf,QAAI,CAACA;AACD,aAAO+rB,EAAS;AACpB,QAAI/rB,aAAiB+rB;AACjB,aAAO/rB;AACX,QAAI,MAAM,QAAQA,CAAK;AACnB,aAAO,KAAK,UAAUA,CAAK;AAC/B,QAAIA,EAAM;AACN,aAAO,IAAI+rB,EAAS,CAAC/rB,CAAK,GAAGA,EAAM,QAAQ;AAC/C,UAAM,IAAI,WAAW,qBAAqBA,IAAQ,oBAC7CA,EAAM,eAAe,qEAAqE,GAAG;AAAA,EACtG;AACJ;AAMA+rB,EAAS,QAAQ,IAAIA,EAAS,CAAA,GAAI,CAAC;AACnC,MAAMhB,KAAQ,EAAE,OAAO,GAAG,QAAQ,EAAC;AACnC,SAASwB,GAASjhD,GAAOgY,GAAQ;AAC7B,SAAAynC,GAAM,QAAQz/C,GACdy/C,GAAM,SAASznC,GACRynC;AACX;AAEA,SAAS2B,GAAY58C,GAAGC,GAAG;AACvB,MAAID,MAAMC;AACN,WAAO;AACX,MAAI,EAAED,KAAK,OAAOA,KAAK,aACnB,EAAEC,KAAK,OAAOA,KAAK;AACnB,WAAO;AACX,MAAI5J,IAAQ,MAAM,QAAQ2J,CAAC;AAC3B,MAAI,MAAM,QAAQC,CAAC,KAAK5J;AACpB,WAAO;AACX,MAAIA,GAAO;AACP,QAAI2J,EAAE,UAAUC,EAAE;AACd,aAAO;AACX,aAAS3J,IAAI,GAAGA,IAAI0J,EAAE,QAAQ1J;AAC1B,UAAI,CAACsmD,GAAY58C,EAAE1J,CAAC,GAAG2J,EAAE3J,CAAC,CAAC;AACvB,eAAO;AAAA,EACnB,OACK;AACD,aAASm5C,KAAKzvC;AACV,UAAI,EAAEyvC,KAAKxvC,MAAM,CAAC28C,GAAY58C,EAAEyvC,CAAC,GAAGxvC,EAAEwvC,CAAC,CAAC;AACpC,eAAO;AACf,aAASA,KAAKxvC;AACV,UAAI,EAAEwvC,KAAKzvC;AACP,eAAO;AAAA,EACnB;AACA,SAAO;AACX;AAUA,MAAM68C,GAAK;AAAA;AAAA;AAAA;AAAA,EAIP,YAIAj8C,GAIAU,GAAO;AACH,SAAK,OAAOV,GACZ,KAAK,QAAQU;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,SAAS0lC,GAAK;AACV,QAAI7gC,GAAM22C,IAAS;AACnB,aAAS,IAAI,GAAG,IAAI9V,EAAI,QAAQ,KAAK;AACjC,UAAIuV,IAAQvV,EAAI,CAAC;AACjB,UAAI,KAAK,GAAGuV,CAAK;AACb,eAAOvV;AACX,UAAI,KAAK,KAAK,SAASuV,EAAM,IAAI;AAC7B,QAAKp2C,MACDA,IAAO6gC,EAAI,MAAM,GAAG,CAAC;AAAA,WAExB;AAAA,YAAIuV,EAAM,KAAK,SAAS,KAAK,IAAI;AAClC,iBAAOvV;AAGP,QAAI,CAAC8V,KAAUP,EAAM,KAAK,OAAO,KAAK,KAAK,SAClCp2C,MACDA,IAAO6gC,EAAI,MAAM,GAAG,CAAC,IACzB7gC,EAAK,KAAK,IAAI,GACd22C,IAAS,KAET32C,KACAA,EAAK,KAAKo2C,CAAK;AAAA;AAAA,IAE3B;AACA,WAAKp2C,MACDA,IAAO6gC,EAAI,MAAK,IACf8V,KACD32C,EAAK,KAAK,IAAI,GACXA;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,cAAc6gC,GAAK;AACf,aAAS1wC,IAAI,GAAGA,IAAI0wC,EAAI,QAAQ1wC;AAC5B,UAAI,KAAK,GAAG0wC,EAAI1wC,CAAC,CAAC;AACd,eAAO0wC,EAAI,MAAM,GAAG1wC,CAAC,EAAE,OAAO0wC,EAAI,MAAM1wC,IAAI,CAAC,CAAC;AACtD,WAAO0wC;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,QAAQA,GAAK;AACT,aAAS1wC,IAAI,GAAGA,IAAI0wC,EAAI,QAAQ1wC;AAC5B,UAAI,KAAK,GAAG0wC,EAAI1wC,CAAC,CAAC;AACd,eAAO;AACf,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,GAAGimD,GAAO;AACN,WAAO,QAAQA,KACV,KAAK,QAAQA,EAAM,QAAQK,GAAY,KAAK,OAAOL,EAAM,KAAK;AAAA,EACvE;AAAA;AAAA;AAAA;AAAA,EAIA,SAAS;AACL,QAAI92C,IAAM,EAAE,MAAM,KAAK,KAAK,KAAI;AAChC,aAASmhB,KAAK,KAAK,OAAO;AACtB,MAAAnhB,EAAI,QAAQ,KAAK;AACjB;AAAA,IACJ;AACA,WAAOA;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,SAASumC,GAAQrE,GAAM;AAC1B,QAAI,CAACA;AACD,YAAM,IAAI,WAAW,iCAAiC;AAC1D,QAAI/mC,IAAOorC,EAAO,MAAMrE,EAAK,IAAI;AACjC,QAAI,CAAC/mC;AACD,YAAM,IAAI,WAAW,yBAAyB+mC,EAAK,IAAI,iBAAiB;AAC5E,QAAIwD,IAAOvqC,EAAK,OAAO+mC,EAAK,KAAK;AACjC,WAAA/mC,EAAK,WAAWuqC,EAAK,KAAK,GACnBA;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,QAAQnrC,GAAGC,GAAG;AACjB,QAAID,KAAKC;AACL,aAAO;AACX,QAAID,EAAE,UAAUC,EAAE;AACd,aAAO;AACX,aAAS3J,IAAI,GAAGA,IAAI0J,EAAE,QAAQ1J;AAC1B,UAAI,CAAC0J,EAAE1J,CAAC,EAAE,GAAG2J,EAAE3J,CAAC,CAAC;AACb,eAAO;AACf,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,QAAQymD,GAAO;AAClB,QAAI,CAACA,KAAS,MAAM,QAAQA,CAAK,KAAKA,EAAM,UAAU;AAClD,aAAOF,GAAK;AAChB,QAAIE,aAAiBF;AACjB,aAAO,CAACE,CAAK;AACjB,QAAI52C,IAAO42C,EAAM,MAAK;AACtB,WAAA52C,EAAK,KAAK,CAACnG,GAAGC,MAAMD,EAAE,KAAK,OAAOC,EAAE,KAAK,IAAI,GACtCkG;AAAA,EACX;AACJ;AAIA02C,GAAK,OAAO,CAAA;AAMZ,MAAMG,WAAqB,MAAM;AACjC;AAiBA,MAAMlE,EAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaR,YAIAj7C,GAIAo/C,GAIAC,GAAS;AACL,SAAK,UAAUr/C,GACf,KAAK,YAAYo/C,GACjB,KAAK,UAAUC;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,OAAO;AACP,WAAO,KAAK,QAAQ,OAAO,KAAK,YAAY,KAAK;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA,EAIA,SAASt1C,GAAK0lB,GAAU;AACpB,QAAIzvB,IAAUs/C,GAAW,KAAK,SAASv1C,IAAM,KAAK,WAAW0lB,CAAQ;AACrE,WAAOzvB,KAAW,IAAIi7C,EAAMj7C,GAAS,KAAK,WAAW,KAAK,OAAO;AAAA,EACrE;AAAA;AAAA;AAAA;AAAA,EAIA,cAAcsnB,GAAMokB,GAAI;AACpB,WAAO,IAAIuP,EAAMsE,GAAY,KAAK,SAASj4B,IAAO,KAAK,WAAWokB,IAAK,KAAK,SAAS,GAAG,KAAK,WAAW,KAAK,OAAO;AAAA,EACxH;AAAA;AAAA;AAAA;AAAA,EAIA,GAAGgT,GAAO;AACN,WAAO,KAAK,QAAQ,GAAGA,EAAM,OAAO,KAAK,KAAK,aAAaA,EAAM,aAAa,KAAK,WAAWA,EAAM;AAAA,EACxG;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW;AACP,WAAO,KAAK,UAAU,MAAM,KAAK,YAAY,MAAM,KAAK,UAAU;AAAA,EACtE;AAAA;AAAA;AAAA;AAAA,EAIA,SAAS;AACL,QAAI,CAAC,KAAK,QAAQ;AACd,aAAO;AACX,QAAI5U,IAAO,EAAE,SAAS,KAAK,QAAQ,OAAM,EAAE;AAC3C,WAAI,KAAK,YAAY,MACjBA,EAAK,YAAY,KAAK,YACtB,KAAK,UAAU,MACfA,EAAK,UAAU,KAAK,UACjBA;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,SAASqE,GAAQrE,GAAM;AAC1B,QAAI,CAACA;AACD,aAAOmR,EAAM;AACjB,QAAImE,IAAYtV,EAAK,aAAa,GAAGuV,IAAUvV,EAAK,WAAW;AAC/D,QAAI,OAAOsV,KAAa,YAAY,OAAOC,KAAW;AAClD,YAAM,IAAI,WAAW,kCAAkC;AAC3D,WAAO,IAAIpE,EAAMmD,EAAS,SAASjQ,GAAQrE,EAAK,OAAO,GAAGsV,GAAWC,CAAO;AAAA,EAChF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,QAAQ5vB,GAAU+vB,IAAgB,IAAM;AAC3C,QAAIJ,IAAY,GAAGC,IAAU;AAC7B,aAASljD,IAAIszB,EAAS,YAAYtzB,KAAK,CAACA,EAAE,WAAWqjD,KAAiB,CAACrjD,EAAE,KAAK,KAAK,YAAYA,IAAIA,EAAE;AACjG,MAAAijD;AACJ,aAASjjD,IAAIszB,EAAS,WAAWtzB,KAAK,CAACA,EAAE,WAAWqjD,KAAiB,CAACrjD,EAAE,KAAK,KAAK,YAAYA,IAAIA,EAAE;AAChG,MAAAkjD;AACJ,WAAO,IAAIpE,EAAMxrB,GAAU2vB,GAAWC,CAAO;AAAA,EACjD;AACJ;AAIApE,EAAM,QAAQ,IAAIA,EAAMmD,EAAS,OAAO,GAAG,CAAC;AAC5C,SAASmB,GAAYv/C,GAASsnB,GAAMokB,GAAI;AACpC,MAAI,EAAE,OAAA/tC,GAAO,QAAAgY,EAAM,IAAK3V,EAAQ,UAAUsnB,CAAI,GAAG5jB,IAAQ1D,EAAQ,WAAWrC,CAAK,GAC7E,EAAE,OAAO8hD,GAAS,QAAQC,EAAQ,IAAK1/C,EAAQ,UAAU0rC,CAAE;AAC/D,MAAI/1B,KAAU2R,KAAQ5jB,EAAM,QAAQ;AAChC,QAAIg8C,KAAYhU,KAAM,CAAC1rC,EAAQ,MAAMy/C,CAAO,EAAE;AAC1C,YAAM,IAAI,WAAW,yBAAyB;AAClD,WAAOz/C,EAAQ,IAAI,GAAGsnB,CAAI,EAAE,OAAOtnB,EAAQ,IAAI0rC,CAAE,CAAC;AAAA,EACtD;AACA,MAAI/tC,KAAS8hD;AACT,UAAM,IAAI,WAAW,yBAAyB;AAClD,SAAOz/C,EAAQ,aAAarC,GAAO+F,EAAM,KAAK67C,GAAY77C,EAAM,SAAS4jB,IAAO3R,IAAS,GAAG+1B,IAAK/1B,IAAS,CAAC,CAAC,CAAC;AACjH;AACA,SAAS2pC,GAAWt/C,GAAS2/C,GAAMC,GAAQt1C,GAAQ;AAC/C,MAAI,EAAE,OAAA3M,GAAO,QAAAgY,EAAM,IAAK3V,EAAQ,UAAU2/C,CAAI,GAAGj8C,IAAQ1D,EAAQ,WAAWrC,CAAK;AACjF,MAAIgY,KAAUgqC,KAAQj8C,EAAM;AACxB,WAAI4G,KAAU,CAACA,EAAO,WAAW3M,GAAOA,GAAOiiD,CAAM,IAC1C,OACJ5/C,EAAQ,IAAI,GAAG2/C,CAAI,EAAE,OAAOC,CAAM,EAAE,OAAO5/C,EAAQ,IAAI2/C,CAAI,CAAC;AAEvE,MAAIv+C,IAAQk+C,GAAW57C,EAAM,SAASi8C,IAAOhqC,IAAS,GAAGiqC,GAAQl8C,CAAK;AACtE,SAAOtC,KAASpB,EAAQ,aAAarC,GAAO+F,EAAM,KAAKtC,CAAK,CAAC;AACjE;AACA,SAASqR,GAAQotC,GAAOC,GAAK3kC,GAAO;AAChC,MAAIA,EAAM,YAAY0kC,EAAM;AACxB,UAAM,IAAIV,GAAa,iDAAiD;AAC5E,MAAIU,EAAM,QAAQ1kC,EAAM,aAAa2kC,EAAI,QAAQ3kC,EAAM;AACnD,UAAM,IAAIgkC,GAAa,0BAA0B;AACrD,SAAOY,GAAaF,GAAOC,GAAK3kC,GAAO,CAAC;AAC5C;AACA,SAAS4kC,GAAaF,GAAOC,GAAK3kC,GAAOmU,GAAO;AAC5C,MAAI3xB,IAAQkiD,EAAM,MAAMvwB,CAAK,GAAGtoB,IAAO64C,EAAM,KAAKvwB,CAAK;AACvD,MAAI3xB,KAASmiD,EAAI,MAAMxwB,CAAK,KAAKA,IAAQuwB,EAAM,QAAQ1kC,EAAM,WAAW;AACpE,QAAI/Z,IAAQ2+C,GAAaF,GAAOC,GAAK3kC,GAAOmU,IAAQ,CAAC;AACrD,WAAOtoB,EAAK,KAAKA,EAAK,QAAQ,aAAarJ,GAAOyD,CAAK,CAAC;AAAA,EAC5D,WACU+Z,EAAM,QAAQ;AAGnB,QAAI,CAACA,EAAM,aAAa,CAACA,EAAM,WAAW0kC,EAAM,SAASvwB,KAASwwB,EAAI,SAASxwB,GAAO;AACvF,UAAIhlB,IAASu1C,EAAM,QAAQ7/C,IAAUsK,EAAO;AAC5C,aAAOyL,GAAMzL,GAAQtK,EAAQ,IAAI,GAAG6/C,EAAM,YAAY,EAAE,OAAO1kC,EAAM,OAAO,EAAE,OAAOnb,EAAQ,IAAI8/C,EAAI,YAAY,CAAC,CAAC;AAAA,IACvH,OACK;AACD,UAAI,EAAE,OAAAv1C,GAAO,KAAAO,EAAG,IAAKk1C,GAAuB7kC,GAAO0kC,CAAK;AACxD,aAAO9pC,GAAM/O,GAAMi5C,GAAgBJ,GAAOt1C,GAAOO,GAAKg1C,GAAKxwB,CAAK,CAAC;AAAA,IACrE;AAAA,MATI,QAAOvZ,GAAM/O,GAAMk5C,GAAcL,GAAOC,GAAKxwB,CAAK,CAAC;AAU3D;AACA,SAAS6wB,GAAUj4B,GAAMk4B,GAAK;AAC1B,MAAI,CAACA,EAAI,KAAK,kBAAkBl4B,EAAK,IAAI;AACrC,UAAM,IAAIi3B,GAAa,iBAAiBiB,EAAI,KAAK,OAAO,WAAWl4B,EAAK,KAAK,IAAI;AACzF;AACA,SAASm4B,GAASC,GAASC,GAAQjxB,GAAO;AACtC,MAAItoB,IAAOs5C,EAAQ,KAAKhxB,CAAK;AAC7B,SAAA6wB,GAAUn5C,GAAMu5C,EAAO,KAAKjxB,CAAK,CAAC,GAC3BtoB;AACX;AACA,SAASw5C,GAAQ98C,GAAOuE,GAAQ;AAC5B,MAAI9P,IAAO8P,EAAO,SAAS;AAC3B,EAAI9P,KAAQ,KAAKuL,EAAM,UAAUA,EAAM,WAAWuE,EAAO9P,CAAI,CAAC,IAC1D8P,EAAO9P,CAAI,IAAIuL,EAAM,SAASuE,EAAO9P,CAAI,EAAE,OAAOuL,EAAM,IAAI,IAE5DuE,EAAO,KAAKvE,CAAK;AACzB;AACA,SAAS+8C,GAASC,GAAQC,GAAMrxB,GAAOrnB,GAAQ;AAC3C,MAAIjB,KAAQ25C,KAAQD,GAAQ,KAAKpxB,CAAK,GAClCvF,IAAa,GAAGE,IAAW02B,IAAOA,EAAK,MAAMrxB,CAAK,IAAItoB,EAAK;AAC/D,EAAI05C,MACA32B,IAAa22B,EAAO,MAAMpxB,CAAK,GAC3BoxB,EAAO,QAAQpxB,IACfvF,MAEK22B,EAAO,eACZF,GAAQE,EAAO,WAAWz4C,CAAM,GAChC8hB;AAGR,WAAStxB,IAAIsxB,GAAYtxB,IAAIwxB,GAAUxxB;AACnC,IAAA+nD,GAAQx5C,EAAK,MAAMvO,CAAC,GAAGwP,CAAM;AACjC,EAAI04C,KAAQA,EAAK,SAASrxB,KAASqxB,EAAK,cACpCH,GAAQG,EAAK,YAAY14C,CAAM;AACvC;AACA,SAAS8N,GAAM/O,GAAMhH,GAAS;AAC1B,SAAAgH,EAAK,KAAK,aAAahH,CAAO,GACvBgH,EAAK,KAAKhH,CAAO;AAC5B;AACA,SAASigD,GAAgBJ,GAAOa,GAAQC,GAAMb,GAAKxwB,GAAO;AACtD,MAAI8vB,IAAYS,EAAM,QAAQvwB,KAAS+wB,GAASR,GAAOa,GAAQpxB,IAAQ,CAAC,GACpE+vB,IAAUS,EAAI,QAAQxwB,KAAS+wB,GAASM,GAAMb,GAAKxwB,IAAQ,CAAC,GAC5DtvB,IAAU,CAAA;AACd,SAAAygD,GAAS,MAAMZ,GAAOvwB,GAAOtvB,CAAO,GAChCo/C,KAAaC,KAAWqB,EAAO,MAAMpxB,CAAK,KAAKqxB,EAAK,MAAMrxB,CAAK,KAC/D6wB,GAAUf,GAAWC,CAAO,GAC5BmB,GAAQzqC,GAAMqpC,GAAWa,GAAgBJ,GAAOa,GAAQC,GAAMb,GAAKxwB,IAAQ,CAAC,CAAC,GAAGtvB,CAAO,MAGnFo/C,KACAoB,GAAQzqC,GAAMqpC,GAAWc,GAAcL,GAAOa,GAAQpxB,IAAQ,CAAC,CAAC,GAAGtvB,CAAO,GAC9EygD,GAASC,GAAQC,GAAMrxB,GAAOtvB,CAAO,GACjCq/C,KACAmB,GAAQzqC,GAAMspC,GAASa,GAAcS,GAAMb,GAAKxwB,IAAQ,CAAC,CAAC,GAAGtvB,CAAO,IAE5EygD,GAASX,GAAK,MAAMxwB,GAAOtvB,CAAO,GAC3B,IAAIo+C,EAASp+C,CAAO;AAC/B;AACA,SAASkgD,GAAcL,GAAOC,GAAKxwB,GAAO;AACtC,MAAItvB,IAAU,CAAA;AAEd,MADAygD,GAAS,MAAMZ,GAAOvwB,GAAOtvB,CAAO,GAChC6/C,EAAM,QAAQvwB,GAAO;AACrB,QAAIvsB,IAAOs9C,GAASR,GAAOC,GAAKxwB,IAAQ,CAAC;AACzC,IAAAkxB,GAAQzqC,GAAMhT,GAAMm9C,GAAcL,GAAOC,GAAKxwB,IAAQ,CAAC,CAAC,GAAGtvB,CAAO;AAAA,EACtE;AACA,SAAAygD,GAASX,GAAK,MAAMxwB,GAAOtvB,CAAO,GAC3B,IAAIo+C,EAASp+C,CAAO;AAC/B;AACA,SAASggD,GAAuB7kC,GAAOylC,GAAQ;AAC3C,MAAIC,IAAQD,EAAO,QAAQzlC,EAAM,WAC7BnU,IADiD45C,EAAO,KAAKC,CAAK,EACpD,KAAK1lC,EAAM,OAAO;AACpC,WAAS1iB,IAAIooD,IAAQ,GAAGpoD,KAAK,GAAGA;AAC5B,IAAAuO,IAAO45C,EAAO,KAAKnoD,CAAC,EAAE,KAAK2lD,EAAS,KAAKp3C,CAAI,CAAC;AAClD,SAAO;AAAA,IAAE,OAAOA,EAAK,eAAemU,EAAM,YAAY0lC,CAAK;AAAA,IACvD,KAAK75C,EAAK,eAAeA,EAAK,QAAQ,OAAOmU,EAAM,UAAU0lC,CAAK;AAAA,EAAC;AAC3E;AAYA,MAAMC,GAAY;AAAA;AAAA;AAAA;AAAA,EAId,YAIA/2C,GAIAhS,GAIAgpD,GAAc;AACV,SAAK,MAAMh3C,GACX,KAAK,OAAOhS,GACZ,KAAK,eAAegpD,GACpB,KAAK,QAAQhpD,EAAK,SAAS,IAAI;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA,EAIA,aAAaipD,GAAK;AACd,WAAIA,KAAO,OACA,KAAK,QACZA,IAAM,IACC,KAAK,QAAQA,IACjBA;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,SAAS;AAAE,WAAO,KAAK,KAAK,KAAK,KAAK;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA,EAI7C,IAAI,MAAM;AAAE,WAAO,KAAK,KAAK,CAAC;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA;AAAA,EAKjC,KAAK1xB,GAAO;AAAE,WAAO,KAAK,KAAK,KAAK,aAAaA,CAAK,IAAI,CAAC;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM9D,MAAMA,GAAO;AAAE,WAAO,KAAK,KAAK,KAAK,aAAaA,CAAK,IAAI,IAAI,CAAC;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA;AAAA,EAKnE,WAAWA,GAAO;AACd,WAAAA,IAAQ,KAAK,aAAaA,CAAK,GACxB,KAAK,MAAMA,CAAK,KAAKA,KAAS,KAAK,SAAS,CAAC,KAAK,aAAa,IAAI;AAAA,EAC9E;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,MAAMA,GAAO;AACT,WAAAA,IAAQ,KAAK,aAAaA,CAAK,GACxBA,KAAS,IAAI,IAAI,KAAK,KAAKA,IAAQ,IAAI,CAAC,IAAI;AAAA,EACvD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAIA,GAAO;AACP,WAAAA,IAAQ,KAAK,aAAaA,CAAK,GACxB,KAAK,MAAMA,CAAK,IAAI,KAAK,KAAKA,CAAK,EAAE,QAAQ;AAAA,EACxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAOA,GAAO;AAEV,QADAA,IAAQ,KAAK,aAAaA,CAAK,GAC3B,CAACA;AACD,YAAM,IAAI,WAAW,gDAAgD;AACzE,WAAOA,KAAS,KAAK,QAAQ,IAAI,KAAK,MAAM,KAAK,KAAKA,IAAQ,IAAI,CAAC;AAAA,EACvE;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,MAAMA,GAAO;AAET,QADAA,IAAQ,KAAK,aAAaA,CAAK,GAC3B,CAACA;AACD,YAAM,IAAI,WAAW,+CAA+C;AACxE,WAAOA,KAAS,KAAK,QAAQ,IAAI,KAAK,MAAM,KAAK,KAAKA,IAAQ,IAAI,CAAC,IAAI,KAAK,KAAKA,IAAQ,CAAC,EAAE;AAAA,EAChG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,aAAa;AAAE,WAAO,KAAK,MAAM,KAAK,KAAK,KAAK,KAAK,SAAS,CAAC;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMtE,IAAI,YAAY;AACZ,QAAIhlB,IAAS,KAAK,QAAQ3M,IAAQ,KAAK,MAAM,KAAK,KAAK;AACvD,QAAIA,KAAS2M,EAAO;AAChB,aAAO;AACX,QAAI22C,IAAO,KAAK,MAAM,KAAK,KAAK,KAAK,KAAK,SAAS,CAAC,GAAGv9C,IAAQ4G,EAAO,MAAM3M,CAAK;AACjF,WAAOsjD,IAAO32C,EAAO,MAAM3M,CAAK,EAAE,IAAIsjD,CAAI,IAAIv9C;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,aAAa;AACb,QAAI/F,IAAQ,KAAK,MAAM,KAAK,KAAK,GAC7BsjD,IAAO,KAAK,MAAM,KAAK,KAAK,KAAK,KAAK,SAAS,CAAC;AACpD,WAAIA,IACO,KAAK,OAAO,MAAMtjD,CAAK,EAAE,IAAI,GAAGsjD,CAAI,IACxCtjD,KAAS,IAAI,OAAO,KAAK,OAAO,MAAMA,IAAQ,CAAC;AAAA,EAC1D;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,WAAWA,GAAO2xB,GAAO;AACrB,IAAAA,IAAQ,KAAK,aAAaA,CAAK;AAC/B,QAAItoB,IAAO,KAAK,KAAKsoB,IAAQ,CAAC,GAAGvlB,IAAMulB,KAAS,IAAI,IAAI,KAAK,KAAKA,IAAQ,IAAI,CAAC,IAAI;AACnF,aAAS72B,IAAI,GAAGA,IAAIkF,GAAOlF;AACvB,MAAAsR,KAAO/C,EAAK,MAAMvO,CAAC,EAAE;AACzB,WAAOsR;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,QAAQ;AACJ,QAAIO,IAAS,KAAK,QAAQ3M,IAAQ,KAAK,MAAK;AAE5C,QAAI2M,EAAO,QAAQ,QAAQ;AACvB,aAAO00C,GAAK;AAEhB,QAAI,KAAK;AACL,aAAO10C,EAAO,MAAM3M,CAAK,EAAE;AAC/B,QAAIuqB,IAAO5d,EAAO,WAAW3M,IAAQ,CAAC,GAAG+gD,IAAQp0C,EAAO,WAAW3M,CAAK;AAGxE,QAAI,CAACuqB,GAAM;AACP,UAAIg5B,IAAMh5B;AACV,MAAAA,IAAOw2B,GACPA,IAAQwC;AAAA,IACZ;AAGA,QAAIhC,IAAQh3B,EAAK;AACjB,aAASzvB,IAAI,GAAGA,IAAIymD,EAAM,QAAQzmD;AAC9B,MAAIymD,EAAMzmD,CAAC,EAAE,KAAK,KAAK,cAAc,OAAU,CAACimD,KAAS,CAACQ,EAAMzmD,CAAC,EAAE,QAAQimD,EAAM,KAAK,OAClFQ,IAAQA,EAAMzmD,GAAG,EAAE,cAAcymD,CAAK;AAC9C,WAAOA;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,YAAYyB,GAAM;AACd,QAAIp+C,IAAQ,KAAK,OAAO,WAAW,KAAK,OAAO;AAC/C,QAAI,CAACA,KAAS,CAACA,EAAM;AACjB,aAAO;AACX,QAAI28C,IAAQ38C,EAAM,OAAO3H,IAAO+lD,EAAK,OAAO,WAAWA,EAAK,OAAO;AACnE,aAASloD,IAAI,GAAGA,IAAIymD,EAAM,QAAQzmD;AAC9B,MAAIymD,EAAMzmD,CAAC,EAAE,KAAK,KAAK,cAAc,OAAU,CAACmC,KAAQ,CAACskD,EAAMzmD,CAAC,EAAE,QAAQmC,EAAK,KAAK,OAChFskD,IAAQA,EAAMzmD,GAAG,EAAE,cAAcymD,CAAK;AAC9C,WAAOA;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,YAAYn1C,GAAK;AACb,aAASulB,IAAQ,KAAK,OAAOA,IAAQ,GAAGA;AACpC,UAAI,KAAK,MAAMA,CAAK,KAAKvlB,KAAO,KAAK,IAAIulB,CAAK,KAAKvlB;AAC/C,eAAOulB;AACf,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,WAAWovB,IAAQ,MAAMyC,GAAM;AAC3B,QAAIzC,EAAM,MAAM,KAAK;AACjB,aAAOA,EAAM,WAAW,IAAI;AAChC,aAAS/uB,IAAI,KAAK,SAAS,KAAK,OAAO,iBAAiB,KAAK,OAAO+uB,EAAM,MAAM,IAAI,IAAI/uB,KAAK,GAAGA;AAC5F,UAAI+uB,EAAM,OAAO,KAAK,IAAI/uB,CAAC,MAAM,CAACwxB,KAAQA,EAAK,KAAK,KAAKxxB,CAAC,CAAC;AACvD,eAAO,IAAIyxB,GAAU,MAAM1C,GAAO/uB,CAAC;AAC3C,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW+uB,GAAO;AACd,WAAO,KAAK,MAAM,KAAK,gBAAgBA,EAAM,MAAMA,EAAM;AAAA,EAC7D;AAAA;AAAA;AAAA;AAAA,EAIA,IAAIA,GAAO;AACP,WAAOA,EAAM,MAAM,KAAK,MAAMA,IAAQ;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA,EAIA,IAAIA,GAAO;AACP,WAAOA,EAAM,MAAM,KAAK,MAAMA,IAAQ;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW;AACP,QAAI2C,IAAM;AACV,aAAS5oD,IAAI,GAAGA,KAAK,KAAK,OAAOA;AAC7B,MAAA4oD,MAAQA,IAAM,MAAM,MAAM,KAAK,KAAK5oD,CAAC,EAAE,KAAK,OAAO,MAAM,KAAK,MAAMA,IAAI,CAAC;AAC7E,WAAO4oD,IAAM,MAAM,KAAK;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,QAAQvxB,GAAK/lB,GAAK;AACrB,QAAI,EAAEA,KAAO,KAAKA,KAAO+lB,EAAI,QAAQ;AACjC,YAAM,IAAI,WAAW,cAAc/lB,IAAM,eAAe;AAC5D,QAAIhS,IAAO,CAAA,GACPwS,IAAQ,GAAGw2C,IAAeh3C;AAC9B,aAAS/C,IAAO8oB,OAAO;AACnB,UAAI,EAAE,OAAAnyB,GAAO,QAAAgY,EAAM,IAAK3O,EAAK,QAAQ,UAAU+5C,CAAY,GACvDO,IAAMP,IAAeprC;AAKzB,UAJA5d,EAAK,KAAKiP,GAAMrJ,GAAO4M,IAAQoL,CAAM,GACjC,CAAC2rC,MAELt6C,IAAOA,EAAK,MAAMrJ,CAAK,GACnBqJ,EAAK;AACL;AACJ,MAAA+5C,IAAeO,IAAM,GACrB/2C,KAASoL,IAAS;AAAA,IACtB;AACA,WAAO,IAAImrC,GAAY/2C,GAAKhS,GAAMgpD,CAAY;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,cAAcjxB,GAAK/lB,GAAK;AAC3B,QAAIw3C,IAAQC,GAAa,IAAI1xB,CAAG;AAChC,QAAIyxB;AACA,eAAS9oD,IAAI,GAAGA,IAAI8oD,EAAM,KAAK,QAAQ9oD,KAAK;AACxC,YAAIgpD,IAAMF,EAAM,KAAK9oD,CAAC;AACtB,YAAIgpD,EAAI,OAAO13C;AACX,iBAAO03C;AAAA,MACf;AAAA;AAGA,MAAAD,GAAa,IAAI1xB,GAAKyxB,IAAQ,IAAIG,IAAY;AAElD,QAAInmD,IAASgmD,EAAM,KAAKA,EAAM,CAAC,IAAIT,GAAY,QAAQhxB,GAAK/lB,CAAG;AAC/D,WAAAw3C,EAAM,KAAKA,EAAM,IAAI,KAAKI,IACnBpmD;AAAA,EACX;AACJ;AACA,MAAMmmD,GAAa;AAAA,EACf,cAAc;AACV,SAAK,OAAO,CAAA,GACZ,KAAK,IAAI;AAAA,EACb;AACJ;AACA,MAAMC,KAAmB,IAAIH,KAAe,oBAAI,QAAO;AAKvD,MAAMJ,GAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMZ,YAOAvB,GAKAC,GAIAxwB,GAAO;AACH,SAAK,QAAQuwB,GACb,KAAK,MAAMC,GACX,KAAK,QAAQxwB;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,QAAQ;AAAE,WAAO,KAAK,MAAM,OAAO,KAAK,QAAQ,CAAC;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA,EAIxD,IAAI,MAAM;AAAE,WAAO,KAAK,IAAI,MAAM,KAAK,QAAQ,CAAC;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA,EAInD,IAAI,SAAS;AAAE,WAAO,KAAK,MAAM,KAAK,KAAK,KAAK;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA,EAInD,IAAI,aAAa;AAAE,WAAO,KAAK,MAAM,MAAM,KAAK,KAAK;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA,EAIxD,IAAI,WAAW;AAAE,WAAO,KAAK,IAAI,WAAW,KAAK,KAAK;AAAA,EAAG;AAC7D;AAEA,MAAMsyB,KAAa,uBAAO,OAAO,IAAI;AAerC,MAAMC,GAAK;AAAA;AAAA;AAAA;AAAA,EAIP,YAIA9+C,GAMAU,GAEAzD,GAKAk/C,IAAQF,GAAK,MAAM;AACf,SAAK,OAAOj8C,GACZ,KAAK,QAAQU,GACb,KAAK,QAAQy7C,GACb,KAAK,UAAUl/C,KAAWo+C,EAAS;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AAAE,WAAO,KAAK,QAAQ;AAAA,EAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ9C,IAAI,WAAW;AAAE,WAAO,KAAK,SAAS,IAAI,IAAI,KAAK,QAAQ;AAAA,EAAM;AAAA;AAAA;AAAA;AAAA,EAIjE,IAAI,aAAa;AAAE,WAAO,KAAK,QAAQ;AAAA,EAAY;AAAA;AAAA;AAAA;AAAA;AAAA,EAKnD,MAAMzgD,GAAO;AAAE,WAAO,KAAK,QAAQ,MAAMA,CAAK;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA,EAIjD,WAAWA,GAAO;AAAE,WAAO,KAAK,QAAQ,WAAWA,CAAK;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA;AAAA,EAK3D,QAAQ6/C,GAAG;AAAE,SAAK,QAAQ,QAAQA,CAAC;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWtC,aAAal2B,GAAMokB,GAAI8R,GAAGsE,IAAW,GAAG;AACpC,SAAK,QAAQ,aAAax6B,GAAMokB,GAAI8R,GAAGsE,GAAU,IAAI;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,YAAYtE,GAAG;AACX,SAAK,aAAa,GAAG,KAAK,QAAQ,MAAMA,CAAC;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,cAAc;AACd,WAAQ,KAAK,UAAU,KAAK,KAAK,KAAK,WAChC,KAAK,KAAK,KAAK,SAAS,IAAI,IAC5B,KAAK,YAAY,GAAG,KAAK,QAAQ,MAAM,EAAE;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,YAAYl2B,GAAMokB,GAAI4S,GAAgBC,GAAU;AAC5C,WAAO,KAAK,QAAQ,YAAYj3B,GAAMokB,GAAI4S,GAAgBC,CAAQ;AAAA,EACtE;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,aAAa;AAAE,WAAO,KAAK,QAAQ;AAAA,EAAY;AAAA;AAAA;AAAA;AAAA;AAAA,EAKnD,IAAI,YAAY;AAAE,WAAO,KAAK,QAAQ;AAAA,EAAW;AAAA;AAAA;AAAA;AAAA,EAIjD,GAAGG,GAAO;AACN,WAAO,QAAQA,KAAU,KAAK,WAAWA,CAAK,KAAK,KAAK,QAAQ,GAAGA,EAAM,OAAO;AAAA,EACpF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,WAAWA,GAAO;AACd,WAAO,KAAK,UAAUA,EAAM,MAAMA,EAAM,OAAOA,EAAM,KAAK;AAAA,EAC9D;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,UAAU37C,GAAMU,GAAOy7C,GAAO;AAC1B,WAAO,KAAK,QAAQn8C,KAChBg8C,GAAY,KAAK,OAAOt7C,KAASV,EAAK,gBAAgB6+C,EAAU,KAChE5C,GAAK,QAAQ,KAAK,OAAOE,KAASF,GAAK,IAAI;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,KAAKh/C,IAAU,MAAM;AACjB,WAAIA,KAAW,KAAK,UACT,OACJ,IAAI6hD,GAAK,KAAK,MAAM,KAAK,OAAO7hD,GAAS,KAAK,KAAK;AAAA,EAC9D;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,KAAKk/C,GAAO;AACR,WAAOA,KAAS,KAAK,QAAQ,OAAO,IAAI2C,GAAK,KAAK,MAAM,KAAK,OAAO,KAAK,SAAS3C,CAAK;AAAA,EAC3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI53B,GAAMokB,IAAK,KAAK,QAAQ,MAAM;AAC9B,WAAIpkB,KAAQ,KAAKokB,KAAM,KAAK,QAAQ,OACzB,OACJ,KAAK,KAAK,KAAK,QAAQ,IAAIpkB,GAAMokB,CAAE,CAAC;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,MAAMpkB,GAAMokB,IAAK,KAAK,QAAQ,MAAMqW,IAAiB,IAAO;AACxD,QAAIz6B,KAAQokB;AACR,aAAOuP,EAAM;AACjB,QAAI4E,IAAQ,KAAK,QAAQv4B,CAAI,GAAGw4B,IAAM,KAAK,QAAQpU,CAAE,GACjDpc,IAAQyyB,IAAiB,IAAIlC,EAAM,YAAYnU,CAAE,GACjDnhC,IAAQs1C,EAAM,MAAMvwB,CAAK,GACzBtvB,IADmC6/C,EAAM,KAAKvwB,CAAK,EACpC,QAAQ,IAAIuwB,EAAM,MAAMt1C,GAAOu1C,EAAI,MAAMv1C,CAAK;AACjE,WAAO,IAAI0wC,EAAMj7C,GAAS6/C,EAAM,QAAQvwB,GAAOwwB,EAAI,QAAQxwB,CAAK;AAAA,EACpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,QAAQhI,GAAMokB,GAAIvwB,GAAO;AACrB,WAAO1I,GAAQ,KAAK,QAAQ6U,CAAI,GAAG,KAAK,QAAQokB,CAAE,GAAGvwB,CAAK;AAAA,EAC9D;AAAA;AAAA;AAAA;AAAA,EAIA,OAAOpR,GAAK;AACR,aAAS/C,IAAO,UAAQ;AACpB,UAAI,EAAE,OAAArJ,GAAO,QAAAgY,EAAM,IAAK3O,EAAK,QAAQ,UAAU+C,CAAG;AAElD,UADA/C,IAAOA,EAAK,WAAWrJ,CAAK,GACxB,CAACqJ;AACD,eAAO;AACX,UAAI2O,KAAU5L,KAAO/C,EAAK;AACtB,eAAOA;AACX,MAAA+C,KAAO4L,IAAS;AAAA,IACpB;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW5L,GAAK;AACZ,QAAI,EAAE,OAAApM,GAAO,QAAAgY,EAAM,IAAK,KAAK,QAAQ,UAAU5L,CAAG;AAClD,WAAO,EAAE,MAAM,KAAK,QAAQ,WAAWpM,CAAK,GAAG,OAAAA,GAAO,QAAAgY,EAAM;AAAA,EAChE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,YAAY5L,GAAK;AACb,QAAIA,KAAO;AACP,aAAO,EAAE,MAAM,MAAM,OAAO,GAAG,QAAQ,EAAC;AAC5C,QAAI,EAAE,OAAApM,GAAO,QAAAgY,EAAM,IAAK,KAAK,QAAQ,UAAU5L,CAAG;AAClD,QAAI4L,IAAS5L;AACT,aAAO,EAAE,MAAM,KAAK,QAAQ,MAAMpM,CAAK,GAAG,OAAAA,GAAO,QAAAgY,EAAM;AAC3D,QAAI3O,IAAO,KAAK,QAAQ,MAAMrJ,IAAQ,CAAC;AACvC,WAAO,EAAE,MAAAqJ,GAAM,OAAOrJ,IAAQ,GAAG,QAAQgY,IAAS3O,EAAK,SAAQ;AAAA,EACnE;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ+C,GAAK;AAAE,WAAO+2C,GAAY,cAAc,MAAM/2C,CAAG;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA,EAI5D,eAAeA,GAAK;AAAE,WAAO+2C,GAAY,QAAQ,MAAM/2C,CAAG;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA;AAAA,EAK7D,aAAaud,GAAMokB,GAAI3oC,GAAM;AACzB,QAAIq6C,IAAQ;AACZ,WAAI1R,IAAKpkB,KACL,KAAK,aAAaA,GAAMokB,GAAI,CAAA1kC,OACpBjE,EAAK,QAAQiE,EAAK,KAAK,MACvBo2C,IAAQ,KACL,CAACA,EACX,GACEA;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,UAAU;AAAE,WAAO,KAAK,KAAK;AAAA,EAAS;AAAA;AAAA;AAAA;AAAA;AAAA,EAK1C,IAAI,cAAc;AAAE,WAAO,KAAK,KAAK;AAAA,EAAa;AAAA;AAAA;AAAA;AAAA,EAIlD,IAAI,gBAAgB;AAAE,WAAO,KAAK,KAAK;AAAA,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtD,IAAI,WAAW;AAAE,WAAO,KAAK,KAAK;AAAA,EAAU;AAAA;AAAA;AAAA;AAAA,EAI5C,IAAI,SAAS;AAAE,WAAO,KAAK,KAAK;AAAA,EAAQ;AAAA;AAAA;AAAA;AAAA,EAIxC,IAAI,SAAS;AAAE,WAAO,KAAK,KAAK;AAAA,EAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQxC,IAAI,SAAS;AAAE,WAAO,KAAK,KAAK;AAAA,EAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,EAKxC,WAAW;AACP,QAAI,KAAK,KAAK,KAAK;AACf,aAAO,KAAK,KAAK,KAAK,cAAc,IAAI;AAC5C,QAAIj1C,IAAO,KAAK,KAAK;AACrB,WAAI,KAAK,QAAQ,SACbA,KAAQ,MAAM,KAAK,QAAQ,cAAa,IAAK,MAC1C65C,GAAU,KAAK,OAAO75C,CAAI;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA,EAIA,eAAexK,GAAO;AAClB,QAAIiD,IAAQ,KAAK,KAAK,aAAa,cAAc,KAAK,SAAS,GAAGjD,CAAK;AACvE,QAAI,CAACiD;AACD,YAAM,IAAI,MAAM,sDAAsD;AAC1E,WAAOA;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,WAAW0mB,GAAMokB,GAAI7J,IAAcuc,EAAS,OAAO7zC,IAAQ,GAAGO,IAAM+2B,EAAY,YAAY;AACxF,QAAI96B,IAAM,KAAK,eAAeugB,CAAI,EAAE,cAAcua,GAAat3B,GAAOO,CAAG,GACrEm3C,IAAMl7C,KAAOA,EAAI,cAAc,KAAK,SAAS2kC,CAAE;AACnD,QAAI,CAACuW,KAAO,CAACA,EAAI;AACb,aAAO;AACX,aAASxpD,IAAI8R,GAAO9R,IAAIqS,GAAKrS;AACzB,UAAI,CAAC,KAAK,KAAK,YAAYopC,EAAY,MAAMppC,CAAC,EAAE,KAAK;AACjD,eAAO;AACf,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,eAAe6uB,GAAMokB,GAAI3oC,GAAMm8C,GAAO;AAClC,QAAIA,KAAS,CAAC,KAAK,KAAK,YAAYA,CAAK;AACrC,aAAO;AACX,QAAI30C,IAAQ,KAAK,eAAe+c,CAAI,EAAE,UAAUvkB,CAAI,GAChD+H,IAAMP,KAASA,EAAM,cAAc,KAAK,SAASmhC,CAAE;AACvD,WAAO5gC,IAAMA,EAAI,WAAW;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,UAAU4zC,GAAO;AACb,WAAIA,EAAM,QAAQ,OACP,KAAK,WAAW,KAAK,YAAY,KAAK,YAAYA,EAAM,OAAO,IAE/D,KAAK,KAAK,kBAAkBA,EAAM,IAAI;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ;AACJ,SAAK,KAAK,aAAa,KAAK,OAAO,GACnC,KAAK,KAAK,WAAW,KAAK,KAAK;AAC/B,QAAIp2C,IAAO02C,GAAK;AAChB,aAASvmD,IAAI,GAAGA,IAAI,KAAK,MAAM,QAAQA,KAAK;AACxC,UAAI60C,IAAO,KAAK,MAAM70C,CAAC;AACvB,MAAA60C,EAAK,KAAK,WAAWA,EAAK,KAAK,GAC/BhlC,IAAOglC,EAAK,SAAShlC,CAAI;AAAA,IAC7B;AACA,QAAI,CAAC02C,GAAK,QAAQ12C,GAAM,KAAK,KAAK;AAC9B,YAAM,IAAI,WAAW,wCAAwC,KAAK,KAAK,IAAI,KAAK,KAAK,MAAM,IAAI,CAAApM,MAAKA,EAAE,KAAK,IAAI,CAAC,EAAE;AACtH,SAAK,QAAQ,QAAQ,CAAA8K,MAAQA,EAAK,MAAK,CAAE;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA,EAIA,SAAS;AACL,QAAIY,IAAM,EAAE,MAAM,KAAK,KAAK,KAAI;AAChC,aAASmhB,KAAK,KAAK,OAAO;AACtB,MAAAnhB,EAAI,QAAQ,KAAK;AACjB;AAAA,IACJ;AACA,WAAI,KAAK,QAAQ,SACbA,EAAI,UAAU,KAAK,QAAQ,OAAM,IACjC,KAAK,MAAM,WACXA,EAAI,QAAQ,KAAK,MAAM,IAAI,CAAAzL,MAAKA,EAAE,QAAQ,IACvCyL;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,SAASumC,GAAQrE,GAAM;AAC1B,QAAI,CAACA;AACD,YAAM,IAAI,WAAW,iCAAiC;AAC1D,QAAIoV;AACJ,QAAIpV,EAAK,OAAO;AACZ,UAAI,CAAC,MAAM,QAAQA,EAAK,KAAK;AACzB,cAAM,IAAI,WAAW,qCAAqC;AAC9D,MAAAoV,IAAQpV,EAAK,MAAM,IAAIqE,EAAO,YAAY;AAAA,IAC9C;AACA,QAAIrE,EAAK,QAAQ,QAAQ;AACrB,UAAI,OAAOA,EAAK,QAAQ;AACpB,cAAM,IAAI,WAAW,2BAA2B;AACpD,aAAOqE,EAAO,KAAKrE,EAAK,MAAMoV,CAAK;AAAA,IACvC;AACA,QAAIl/C,IAAUo+C,EAAS,SAASjQ,GAAQrE,EAAK,OAAO,GAChD9iC,IAAOmnC,EAAO,SAASrE,EAAK,IAAI,EAAE,OAAOA,EAAK,OAAO9pC,GAASk/C,CAAK;AACvE,WAAAl4C,EAAK,KAAK,WAAWA,EAAK,KAAK,GACxBA;AAAA,EACX;AACJ;AACA66C,GAAK,UAAU,OAAO;AACtB,MAAMK,WAAiBL,GAAK;AAAA;AAAA;AAAA;AAAA,EAIxB,YAAY9+C,GAAMU,GAAOzD,GAASk/C,GAAO;AAErC,QADA,MAAMn8C,GAAMU,GAAO,MAAMy7C,CAAK,GAC1B,CAACl/C;AACD,YAAM,IAAI,WAAW,kCAAkC;AAC3D,SAAK,OAAOA;AAAA,EAChB;AAAA,EACA,WAAW;AACP,WAAI,KAAK,KAAK,KAAK,gBACR,KAAK,KAAK,KAAK,cAAc,IAAI,IACrCgiD,GAAU,KAAK,OAAO,KAAK,UAAU,KAAK,IAAI,CAAC;AAAA,EAC1D;AAAA,EACA,IAAI,cAAc;AAAE,WAAO,KAAK;AAAA,EAAM;AAAA,EACtC,YAAY16B,GAAMokB,GAAI;AAAE,WAAO,KAAK,KAAK,MAAMpkB,GAAMokB,CAAE;AAAA,EAAG;AAAA,EAC1D,IAAI,WAAW;AAAE,WAAO,KAAK,KAAK;AAAA,EAAQ;AAAA,EAC1C,KAAKwT,GAAO;AACR,WAAOA,KAAS,KAAK,QAAQ,OAAO,IAAIgD,GAAS,KAAK,MAAM,KAAK,OAAO,KAAK,MAAMhD,CAAK;AAAA,EAC5F;AAAA,EACA,SAAStjD,GAAM;AACX,WAAIA,KAAQ,KAAK,OACN,OACJ,IAAIsmD,GAAS,KAAK,MAAM,KAAK,OAAOtmD,GAAM,KAAK,KAAK;AAAA,EAC/D;AAAA,EACA,IAAI0rB,IAAO,GAAGokB,IAAK,KAAK,KAAK,QAAQ;AACjC,WAAIpkB,KAAQ,KAAKokB,KAAM,KAAK,KAAK,SACtB,OACJ,KAAK,SAAS,KAAK,KAAK,MAAMpkB,GAAMokB,CAAE,CAAC;AAAA,EAClD;AAAA,EACA,GAAGgT,GAAO;AACN,WAAO,KAAK,WAAWA,CAAK,KAAK,KAAK,QAAQA,EAAM;AAAA,EACxD;AAAA,EACA,SAAS;AACL,QAAIntC,IAAO,MAAM,OAAM;AACvB,WAAAA,EAAK,OAAO,KAAK,MACVA;AAAA,EACX;AACJ;AACA,SAASywC,GAAU9C,GAAOmC,GAAK;AAC3B,WAAS5oD,IAAIymD,EAAM,SAAS,GAAGzmD,KAAK,GAAGA;AACnC,IAAA4oD,IAAMnC,EAAMzmD,CAAC,EAAE,KAAK,OAAO,MAAM4oD,IAAM;AAC3C,SAAOA;AACX;AAQA,MAAMc,GAAa;AAAA;AAAA;AAAA;AAAA,EAIf,YAIAC,GAAU;AACN,SAAK,WAAWA,GAIhB,KAAK,OAAO,CAAA,GAIZ,KAAK,YAAY,CAAA;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,MAAMh8B,GAAQi8B,GAAW;AAC5B,QAAIztC,IAAS,IAAI0tC,GAAYl8B,GAAQi8B,CAAS;AAC9C,QAAIztC,EAAO,QAAQ;AACf,aAAOutC,GAAa;AACxB,QAAII,IAAOC,GAAU5tC,CAAM;AAC3B,IAAIA,EAAO,QACPA,EAAO,IAAI,0BAA0B;AACzC,QAAIhU,IAAQ6hD,GAAIC,GAAIH,CAAI,CAAC;AACzB,WAAAI,GAAiB/hD,GAAOgU,CAAM,GACvBhU;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,UAAUmC,GAAM;AACZ,aAAStK,IAAI,GAAGA,IAAI,KAAK,KAAK,QAAQA;AAClC,UAAI,KAAK,KAAKA,CAAC,EAAE,QAAQsK;AACrB,eAAO,KAAK,KAAKtK,CAAC,EAAE;AAC5B,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,cAAcmqD,GAAMr4C,IAAQ,GAAGO,IAAM83C,EAAK,YAAY;AAClD,QAAI9D,IAAM;AACV,aAASrmD,IAAI8R,GAAOu0C,KAAOrmD,IAAIqS,GAAKrS;AAChC,MAAAqmD,IAAMA,EAAI,UAAU8D,EAAK,MAAMnqD,CAAC,EAAE,IAAI;AAC1C,WAAOqmD;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,gBAAgB;AAChB,WAAO,KAAK,KAAK,UAAU,KAAK,KAAK,KAAK,CAAC,EAAE,KAAK;AAAA,EACtD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,cAAc;AACd,aAASrmD,IAAI,GAAGA,IAAI,KAAK,KAAK,QAAQA,KAAK;AACvC,UAAI,EAAE,MAAAsK,EAAI,IAAK,KAAK,KAAKtK,CAAC;AAC1B,UAAI,EAAEsK,EAAK,UAAUA,EAAK,iBAAgB;AACtC,eAAOA;AAAA,IACf;AACA,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW27C,GAAO;AACd,aAASjmD,IAAI,GAAGA,IAAI,KAAK,KAAK,QAAQA;AAClC,eAASmE,IAAI,GAAGA,IAAI8hD,EAAM,KAAK,QAAQ9hD;AACnC,YAAI,KAAK,KAAKnE,CAAC,EAAE,QAAQimD,EAAM,KAAK9hD,CAAC,EAAE;AACnC,iBAAO;AACnB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,WAAW2F,GAAOsgD,IAAQ,IAAO94B,IAAa,GAAG;AAC7C,QAAIlV,IAAO,CAAC,IAAI;AAChB,aAAS8V,EAAO/pB,GAAOusC,GAAO;AAC1B,UAAI2V,IAAWliD,EAAM,cAAc2B,GAAOwnB,CAAU;AACpD,UAAI+4B,MAAa,CAACD,KAASC,EAAS;AAChC,eAAO1E,EAAS,KAAKjR,EAAM,IAAI,CAAA4V,MAAMA,EAAG,cAAa,CAAE,CAAC;AAC5D,eAAStqD,IAAI,GAAGA,IAAImI,EAAM,KAAK,QAAQnI,KAAK;AACxC,YAAI,EAAE,MAAAsK,GAAM,MAAAnI,EAAI,IAAKgG,EAAM,KAAKnI,CAAC;AACjC,YAAI,EAAEsK,EAAK,UAAUA,EAAK,iBAAgB,MAAO8R,EAAK,QAAQja,CAAI,KAAK,IAAI;AACvE,UAAAia,EAAK,KAAKja,CAAI;AACd,cAAIwiD,IAAQzyB,EAAO/vB,GAAMuyC,EAAM,OAAOpqC,CAAI,CAAC;AAC3C,cAAIq6C;AACA,mBAAOA;AAAA,QACf;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AACA,WAAOzyB,EAAO,MAAM,EAAE;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,aAAa1iB,GAAQ;AACjB,aAASxP,IAAI,GAAGA,IAAI,KAAK,UAAU,QAAQA,KAAK;AAC5C,UAAI,KAAK,UAAUA,CAAC,KAAKwP;AACrB,eAAO,KAAK,UAAUxP,IAAI,CAAC;AACnC,QAAIuqD,IAAW,KAAK,gBAAgB/6C,CAAM;AAC1C,gBAAK,UAAU,KAAKA,GAAQ+6C,CAAQ,GAC7BA;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,gBAAgB/6C,GAAQ;AACpB,QAAI4M,IAAO,uBAAO,OAAO,IAAI,GAAGouC,IAAS,CAAC,EAAE,OAAO,MAAM,MAAM,MAAM,KAAK,KAAI,CAAE;AAChF,WAAOA,EAAO,UAAQ;AAClB,UAAIjoC,IAAUioC,EAAO,MAAK,GAAIriD,IAAQoa,EAAQ;AAC9C,UAAIpa,EAAM,UAAUqH,CAAM,GAAG;AACzB,YAAI1M,IAAS,CAAA;AACb,iBAASqM,IAAMoT,GAASpT,EAAI,MAAMA,IAAMA,EAAI;AACxC,UAAArM,EAAO,KAAKqM,EAAI,IAAI;AACxB,eAAOrM,EAAO,QAAO;AAAA,MACzB;AACA,eAAS9C,IAAI,GAAGA,IAAImI,EAAM,KAAK,QAAQnI,KAAK;AACxC,YAAI,EAAE,MAAAsK,GAAM,MAAAnI,EAAI,IAAKgG,EAAM,KAAKnI,CAAC;AACjC,QAAI,CAACsK,EAAK,UAAU,CAACA,EAAK,iBAAgB,KAAM,EAAEA,EAAK,QAAQ8R,OAAU,CAACmG,EAAQ,QAAQpgB,EAAK,cAC3FqoD,EAAO,KAAK,EAAE,OAAOlgD,EAAK,cAAc,MAAAA,GAAM,KAAKiY,GAAS,GAC5DnG,EAAK9R,EAAK,IAAI,IAAI;AAAA,MAE1B;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,YAAY;AACZ,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,KAAK5G,GAAG;AACJ,QAAIA,KAAK,KAAK,KAAK;AACf,YAAM,IAAI,WAAW,cAAcA,CAAC,+BAA+B;AACvE,WAAO,KAAK,KAAKA,CAAC;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW;AACP,QAAI0Y,IAAO,CAAA;AACX,aAASquC,EAAKhnD,GAAG;AACb,MAAA2Y,EAAK,KAAK3Y,CAAC;AACX,eAAS,IAAI,GAAG,IAAIA,EAAE,KAAK,QAAQ;AAC/B,QAAI2Y,EAAK,QAAQ3Y,EAAE,KAAK,CAAC,EAAE,IAAI,KAAK,MAChCgnD,EAAKhnD,EAAE,KAAK,CAAC,EAAE,IAAI;AAAA,IAC/B;AACA,WAAAgnD,EAAK,IAAI,GACFruC,EAAK,IAAI,CAAC3Y,GAAG,MAAM;AACtB,UAAI6sC,IAAM,KAAK7sC,EAAE,WAAW,MAAM,OAAO;AACzC,eAASzD,IAAI,GAAGA,IAAIyD,EAAE,KAAK,QAAQzD;AAC/B,QAAAswC,MAAQtwC,IAAI,OAAO,MAAMyD,EAAE,KAAKzD,CAAC,EAAE,KAAK,OAAO,OAAOoc,EAAK,QAAQ3Y,EAAE,KAAKzD,CAAC,EAAE,IAAI;AACrF,aAAOswC;AAAA,IACX,CAAC,EAAE,KAAK;AAAA,CAAI;AAAA,EAChB;AACJ;AAIAoZ,GAAa,QAAQ,IAAIA,GAAa,EAAI;AAC1C,MAAMG,GAAY;AAAA,EACd,YAAYl8B,GAAQi8B,GAAW;AAC3B,SAAK,SAASj8B,GACd,KAAK,YAAYi8B,GACjB,KAAK,SAAS,MACd,KAAK,MAAM,GACX,KAAK,SAASj8B,EAAO,MAAM,gBAAgB,GACvC,KAAK,OAAO,KAAK,OAAO,SAAS,CAAC,KAAK,MACvC,KAAK,OAAO,IAAG,GACf,KAAK,OAAO,CAAC,KAAK,MAClB,KAAK,OAAO,MAAK;AAAA,EACzB;AAAA,EACA,IAAI,OAAO;AAAE,WAAO,KAAK,OAAO,KAAK,GAAG;AAAA,EAAG;AAAA,EAC3C,IAAI+8B,GAAK;AAAE,WAAO,KAAK,QAAQA,MAAQ,KAAK,SAAS;AAAA,EAAO;AAAA,EAC5D,IAAI9B,GAAK;AAAE,UAAM,IAAI,YAAYA,IAAM,8BAA8B,KAAK,SAAS,IAAI;AAAA,EAAG;AAC9F;AACA,SAASmB,GAAU5tC,GAAQ;AACvB,MAAIwuC,IAAQ,CAAA;AACZ;AACI,IAAAA,EAAM,KAAKC,GAAazuC,CAAM,CAAC;AAAA,SAC1BA,EAAO,IAAI,GAAG;AACvB,SAAOwuC,EAAM,UAAU,IAAIA,EAAM,CAAC,IAAI,EAAE,MAAM,UAAU,OAAAA,EAAK;AACjE;AACA,SAASC,GAAazuC,GAAQ;AAC1B,MAAIwuC,IAAQ,CAAA;AACZ;AACI,IAAAA,EAAM,KAAKE,GAAmB1uC,CAAM,CAAC;AAAA,SAChCA,EAAO,QAAQA,EAAO,QAAQ,OAAOA,EAAO,QAAQ;AAC7D,SAAOwuC,EAAM,UAAU,IAAIA,EAAM,CAAC,IAAI,EAAE,MAAM,OAAO,OAAAA,EAAK;AAC9D;AACA,SAASE,GAAmB1uC,GAAQ;AAChC,MAAI2tC,IAAOgB,GAAc3uC,CAAM;AAC/B;AACI,QAAIA,EAAO,IAAI,GAAG;AACd,MAAA2tC,IAAO,EAAE,MAAM,QAAQ,MAAAA,EAAI;AAAA,aACtB3tC,EAAO,IAAI,GAAG;AACnB,MAAA2tC,IAAO,EAAE,MAAM,QAAQ,MAAAA,EAAI;AAAA,aACtB3tC,EAAO,IAAI,GAAG;AACnB,MAAA2tC,IAAO,EAAE,MAAM,OAAO,MAAAA,EAAI;AAAA,aACrB3tC,EAAO,IAAI,GAAG;AACnB,MAAA2tC,IAAOiB,GAAe5uC,GAAQ2tC,CAAI;AAAA;AAElC;AAER,SAAOA;AACX;AACA,SAASkB,GAAS7uC,GAAQ;AACtB,EAAI,KAAK,KAAKA,EAAO,IAAI,KACrBA,EAAO,IAAI,2BAA2BA,EAAO,OAAO,GAAG;AAC3D,MAAIrZ,IAAS,OAAOqZ,EAAO,IAAI;AAC/B,SAAAA,EAAO,OACArZ;AACX;AACA,SAASioD,GAAe5uC,GAAQ2tC,GAAM;AAClC,MAAImB,IAAMD,GAAS7uC,CAAM,GAAGnX,IAAMimD;AAClC,SAAI9uC,EAAO,IAAI,GAAG,MACVA,EAAO,QAAQ,MACfnX,IAAMgmD,GAAS7uC,CAAM,IAErBnX,IAAM,KAETmX,EAAO,IAAI,GAAG,KACfA,EAAO,IAAI,uBAAuB,GAC/B,EAAE,MAAM,SAAS,KAAA8uC,GAAK,KAAAjmD,GAAK,MAAA8kD,EAAI;AAC1C;AACA,SAASoB,GAAY/uC,GAAQzM,GAAM;AAC/B,MAAIglC,IAAQv4B,EAAO,WAAW7R,IAAOoqC,EAAMhlC,CAAI;AAC/C,MAAIpF;AACA,WAAO,CAACA,CAAI;AAChB,MAAIxH,IAAS,CAAA;AACb,WAASqoD,KAAYzW,GAAO;AACxB,QAAIpqC,IAAOoqC,EAAMyW,CAAQ;AACzB,IAAI7gD,EAAK,UAAUoF,CAAI,KACnB5M,EAAO,KAAKwH,CAAI;AAAA,EACxB;AACA,SAAIxH,EAAO,UAAU,KACjBqZ,EAAO,IAAI,4BAA4BzM,IAAO,SAAS,GACpD5M;AACX;AACA,SAASgoD,GAAc3uC,GAAQ;AAC3B,MAAIA,EAAO,IAAI,GAAG,GAAG;AACjB,QAAI2tC,IAAOC,GAAU5tC,CAAM;AAC3B,WAAKA,EAAO,IAAI,GAAG,KACfA,EAAO,IAAI,uBAAuB,GAC/B2tC;AAAA,EACX,WACU,KAAK,KAAK3tC,EAAO,IAAI;AAY3B,IAAAA,EAAO,IAAI,uBAAuBA,EAAO,OAAO,GAAG;AAAA,OAZrB;AAC9B,QAAIwuC,IAAQO,GAAY/uC,GAAQA,EAAO,IAAI,EAAE,IAAI,CAAA7R,OACzC6R,EAAO,UAAU,OACjBA,EAAO,SAAS7R,EAAK,WAChB6R,EAAO,UAAU7R,EAAK,YAC3B6R,EAAO,IAAI,iCAAiC,GACzC,EAAE,MAAM,QAAQ,OAAO7R,EAAI,EACrC;AACD,WAAA6R,EAAO,OACAwuC,EAAM,UAAU,IAAIA,EAAM,CAAC,IAAI,EAAE,MAAM,UAAU,OAAAA,EAAK;AAAA,EACjE;AAIJ;AASA,SAASV,GAAIH,GAAM;AACf,MAAIG,IAAM,CAAC,EAAE;AACb,SAAAmB,EAAQt1B,EAAQg0B,GAAM,CAAC,GAAGv7C,EAAI,CAAE,GACzB07C;AACP,WAAS17C,IAAO;AAAE,WAAO07C,EAAI,KAAK,CAAA,CAAE,IAAI;AAAA,EAAG;AAC3C,WAASoB,EAAKx8B,GAAMokB,GAAIqY,GAAM;AAC1B,QAAID,IAAO,EAAE,MAAAC,GAAM,IAAArY,EAAE;AACrB,WAAAgX,EAAIp7B,CAAI,EAAE,KAAKw8B,CAAI,GACZA;AAAA,EACX;AACA,WAASD,EAAQG,GAAOtY,GAAI;AACxB,IAAAsY,EAAM,QAAQ,CAAAF,MAAQA,EAAK,KAAKpY,CAAE;AAAA,EACtC;AACA,WAASnd,EAAQg0B,GAAMj7B,GAAM;AACzB,QAAIi7B,EAAK,QAAQ;AACb,aAAOA,EAAK,MAAM,OAAO,CAACxZ,GAAKwZ,MAASxZ,EAAI,OAAOxa,EAAQg0B,GAAMj7B,CAAI,CAAC,GAAG,CAAA,CAAE;AAE1E,QAAIi7B,EAAK,QAAQ;AAClB,eAAS9pD,IAAI,KAAIA,KAAK;AAClB,YAAImC,IAAO2zB,EAAQg0B,EAAK,MAAM9pD,CAAC,GAAG6uB,CAAI;AACtC,YAAI7uB,KAAK8pD,EAAK,MAAM,SAAS;AACzB,iBAAO3nD;AACX,QAAAipD,EAAQjpD,GAAM0sB,IAAOtgB,GAAM;AAAA,MAC/B;AAAA,aAEKu7C,EAAK,QAAQ,QAAQ;AAC1B,UAAI0B,IAAOj9C,EAAI;AACf,aAAA88C,EAAKx8B,GAAM28B,CAAI,GACfJ,EAAQt1B,EAAQg0B,EAAK,MAAM0B,CAAI,GAAGA,CAAI,GAC/B,CAACH,EAAKG,CAAI,CAAC;AAAA,IACtB,WACS1B,EAAK,QAAQ,QAAQ;AAC1B,UAAI0B,IAAOj9C,EAAI;AACf,aAAA68C,EAAQt1B,EAAQg0B,EAAK,MAAMj7B,CAAI,GAAG28B,CAAI,GACtCJ,EAAQt1B,EAAQg0B,EAAK,MAAM0B,CAAI,GAAGA,CAAI,GAC/B,CAACH,EAAKG,CAAI,CAAC;AAAA,IACtB,OACK;AAAA,UAAI1B,EAAK,QAAQ;AAClB,eAAO,CAACuB,EAAKx8B,CAAI,CAAC,EAAE,OAAOiH,EAAQg0B,EAAK,MAAMj7B,CAAI,CAAC;AAElD,UAAIi7B,EAAK,QAAQ,SAAS;AAC3B,YAAIzD,IAAMx3B;AACV,iBAAS7uB,IAAI,GAAGA,IAAI8pD,EAAK,KAAK9pD,KAAK;AAC/B,cAAImC,IAAOoM,EAAI;AACf,UAAA68C,EAAQt1B,EAAQg0B,EAAK,MAAMzD,CAAG,GAAGlkD,CAAI,GACrCkkD,IAAMlkD;AAAA,QACV;AACA,YAAI2nD,EAAK,OAAO;AACZ,UAAAsB,EAAQt1B,EAAQg0B,EAAK,MAAMzD,CAAG,GAAGA,CAAG;AAAA;AAGpC,mBAASrmD,IAAI8pD,EAAK,KAAK9pD,IAAI8pD,EAAK,KAAK9pD,KAAK;AACtC,gBAAImC,IAAOoM,EAAI;AACf,YAAA88C,EAAKhF,GAAKlkD,CAAI,GACdipD,EAAQt1B,EAAQg0B,EAAK,MAAMzD,CAAG,GAAGlkD,CAAI,GACrCkkD,IAAMlkD;AAAA,UACV;AAEJ,eAAO,CAACkpD,EAAKhF,CAAG,CAAC;AAAA,MACrB,OACK;AAAA,YAAIyD,EAAK,QAAQ;AAClB,iBAAO,CAACuB,EAAKx8B,GAAM,QAAWi7B,EAAK,KAAK,CAAC;AAGzC,cAAM,IAAI,MAAM,mBAAmB;AAAA;AAAA;AAAA,EAE3C;AACJ;AACA,SAAS2B,GAAI/hD,GAAGC,GAAG;AAAE,SAAOA,IAAID;AAAG;AAInC,SAASgiD,GAASzB,GAAK17C,GAAM;AACzB,MAAIzL,IAAS,CAAA;AACb,SAAA2nD,EAAKl8C,CAAI,GACFzL,EAAO,KAAK2oD,EAAG;AACtB,WAAShB,EAAKl8C,GAAM;AAChB,QAAIg9C,IAAQtB,EAAI17C,CAAI;AACpB,QAAIg9C,EAAM,UAAU,KAAK,CAACA,EAAM,CAAC,EAAE;AAC/B,aAAOd,EAAKc,EAAM,CAAC,EAAE,EAAE;AAC3B,IAAAzoD,EAAO,KAAKyL,CAAI;AAChB,aAASvO,IAAI,GAAGA,IAAIurD,EAAM,QAAQvrD,KAAK;AACnC,UAAI,EAAE,MAAAsrD,GAAM,IAAArY,MAAOsY,EAAMvrD,CAAC;AAC1B,MAAI,CAACsrD,KAAQxoD,EAAO,QAAQmwC,CAAE,KAAK,MAC/BwX,EAAKxX,CAAE;AAAA,IACf;AAAA,EACJ;AACJ;AAIA,SAAS+W,GAAIC,GAAK;AACd,MAAI0B,IAAU,uBAAO,OAAO,IAAI;AAChC,SAAOC,EAAQF,GAASzB,GAAK,CAAC,CAAC;AAC/B,WAAS2B,EAAQC,GAAQ;AACrB,QAAIvb,IAAM,CAAA;AACV,IAAAub,EAAO,QAAQ,CAAAt9C,MAAQ;AACnB,MAAA07C,EAAI17C,CAAI,EAAE,QAAQ,CAAC,EAAE,MAAA+8C,GAAM,IAAArY,QAAS;AAChC,YAAI,CAACqY;AACD;AACJ,YAAI5a;AACJ,iBAAS1wC,IAAI,GAAGA,IAAIswC,EAAI,QAAQtwC;AAC5B,UAAIswC,EAAItwC,CAAC,EAAE,CAAC,KAAKsrD,MACb5a,IAAMJ,EAAItwC,CAAC,EAAE,CAAC;AACtB,QAAA0rD,GAASzB,GAAKhX,CAAE,EAAE,QAAQ,CAAA1kC,MAAQ;AAC9B,UAAKmiC,KACDJ,EAAI,KAAK,CAACgb,GAAM5a,IAAM,CAAA,CAAE,CAAC,GACzBA,EAAI,QAAQniC,CAAI,KAAK,MACrBmiC,EAAI,KAAKniC,CAAI;AAAA,QACrB,CAAC;AAAA,MACL,CAAC;AAAA,IACL,CAAC;AACD,QAAIvB,IAAQ2+C,EAAQE,EAAO,KAAK,GAAG,CAAC,IAAI,IAAInC,GAAamC,EAAO,QAAQ5B,EAAI,SAAS,CAAC,IAAI,EAAE;AAC5F,aAASjqD,IAAI,GAAGA,IAAIswC,EAAI,QAAQtwC,KAAK;AACjC,UAAI6rD,IAASvb,EAAItwC,CAAC,EAAE,CAAC,EAAE,KAAKyrD,EAAG;AAC/B,MAAAz+C,EAAM,KAAK,KAAK,EAAE,MAAMsjC,EAAItwC,CAAC,EAAE,CAAC,GAAG,MAAM2rD,EAAQE,EAAO,KAAK,GAAG,CAAC,KAAKD,EAAQC,CAAM,GAAG;AAAA,IAC3F;AACA,WAAO7+C;AAAA,EACX;AACJ;AACA,SAASk9C,GAAiB/hD,GAAOgU,GAAQ;AACrC,WAASnc,IAAI,GAAG8rD,IAAO,CAAC3jD,CAAK,GAAGnI,IAAI8rD,EAAK,QAAQ9rD,KAAK;AAClD,QAAIgN,IAAQ8+C,EAAK9rD,CAAC,GAAG+rD,IAAO,CAAC/+C,EAAM,UAAU4sB,IAAQ,CAAA;AACrD,aAASz1B,IAAI,GAAGA,IAAI6I,EAAM,KAAK,QAAQ7I,KAAK;AACxC,UAAI,EAAE,MAAAmG,GAAM,MAAAnI,EAAI,IAAK6K,EAAM,KAAK7I,CAAC;AACjC,MAAAy1B,EAAM,KAAKtvB,EAAK,IAAI,GAChByhD,KAAQ,EAAEzhD,EAAK,UAAUA,EAAK,iBAAgB,OAC9CyhD,IAAO,KACPD,EAAK,QAAQ3pD,CAAI,KAAK,MACtB2pD,EAAK,KAAK3pD,CAAI;AAAA,IACtB;AACA,IAAI4pD,KACA5vC,EAAO,IAAI,iCAAiCyd,EAAM,KAAK,IAAI,IAAI,gFAAgF;AAAA,EACvJ;AACJ;AAMA,SAASoyB,GAAahhD,GAAO;AACzB,MAAIihD,IAAW,uBAAO,OAAO,IAAI;AACjC,WAASC,KAAYlhD,GAAO;AACxB,QAAIE,IAAOF,EAAMkhD,CAAQ;AACzB,QAAI,CAAChhD,EAAK;AACN,aAAO;AACX,IAAA+gD,EAASC,CAAQ,IAAIhhD,EAAK;AAAA,EAC9B;AACA,SAAO+gD;AACX;AACA,SAASE,GAAanhD,GAAO/M,GAAO;AAChC,MAAImuD,IAAQ,uBAAO,OAAO,IAAI;AAC9B,WAAS18C,KAAQ1E,GAAO;AACpB,QAAIqhD,IAAQpuD,KAASA,EAAMyR,CAAI;AAC/B,QAAI28C,MAAU,QAAW;AACrB,UAAInhD,IAAOF,EAAM0E,CAAI;AACrB,UAAIxE,EAAK;AACL,QAAAmhD,IAAQnhD,EAAK;AAAA;AAEb,cAAM,IAAI,WAAW,qCAAqCwE,CAAI;AAAA,IACtE;AACA,IAAA08C,EAAM18C,CAAI,IAAI28C;AAAA,EAClB;AACA,SAAOD;AACX;AACA,SAASE,GAAWthD,GAAOyD,GAAQnE,GAAMoF,GAAM;AAC3C,WAASA,KAAQjB;AACb,QAAI,EAAEiB,KAAQ1E;AACV,YAAM,IAAI,WAAW,yBAAyB0E,CAAI,QAAQpF,CAAI,YAAYoF,CAAI,EAAE;AACxF,WAASA,KAAQ1E,GAAO;AACpB,QAAIE,IAAOF,EAAM0E,CAAI;AACrB,IAAIxE,EAAK,YACLA,EAAK,SAASuD,EAAOiB,CAAI,CAAC;AAAA,EAClC;AACJ;AACA,SAAS68C,GAAUpB,GAAUngD,GAAO;AAChC,MAAIlI,IAAS,uBAAO,OAAO,IAAI;AAC/B,MAAIkI;AACA,aAAS0E,KAAQ1E;AACb,MAAAlI,EAAO4M,CAAI,IAAI,IAAI88C,GAAUrB,GAAUz7C,GAAM1E,EAAM0E,CAAI,CAAC;AAChE,SAAO5M;AACX;AAOA,IAAA2pD,KAAA,MAAMC,GAAS;AAAA;AAAA;AAAA;AAAA,EAIX,YAIAh9C,GAIAgmC,GAIAiX,GAAM;AACF,SAAK,OAAOj9C,GACZ,KAAK,SAASgmC,GACd,KAAK,OAAOiX,GAKZ,KAAK,UAAU,MACf,KAAK,SAASA,EAAK,QAAQA,EAAK,MAAM,MAAM,GAAG,IAAI,CAAA,GACnD,KAAK,QAAQJ,GAAU78C,GAAMi9C,EAAK,KAAK,GACvC,KAAK,eAAeX,GAAa,KAAK,KAAK,GAC3C,KAAK,eAAe,MACpB,KAAK,gBAAgB,MACrB,KAAK,UAAU,EAAEW,EAAK,UAAUj9C,KAAQ,SACxC,KAAK,SAASA,KAAQ;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AAAE,WAAO,CAAC,KAAK;AAAA,EAAS;AAAA;AAAA;AAAA;AAAA;AAAA,EAKvC,IAAI,cAAc;AAAE,WAAO,KAAK,WAAW,KAAK;AAAA,EAAe;AAAA;AAAA;AAAA;AAAA,EAI/D,IAAI,SAAS;AAAE,WAAO,KAAK,gBAAgBg6C,GAAa;AAAA,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAK/D,IAAI,SAAS;AAAE,WAAO,KAAK,UAAU,CAAC,CAAC,KAAK,KAAK;AAAA,EAAM;AAAA;AAAA;AAAA;AAAA;AAAA,EAKvD,UAAU5sC,GAAO;AACb,WAAO,KAAK,OAAO,QAAQA,CAAK,IAAI;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,aAAa;AACb,WAAO,KAAK,KAAK,eAAe,KAAK,KAAK,OAAO,QAAQ;AAAA,EAC7D;AAAA;AAAA;AAAA;AAAA,EAIA,mBAAmB;AACf,aAASpZ,KAAK,KAAK;AACf,UAAI,KAAK,MAAMA,CAAC,EAAE;AACd,eAAO;AACf,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,kBAAkBuiD,GAAO;AACrB,WAAO,QAAQA,KAAS,KAAK,aAAa,WAAWA,EAAM,YAAY;AAAA,EAC3E;AAAA;AAAA;AAAA;AAAA,EAIA,aAAaj7C,GAAO;AAChB,WAAI,CAACA,KAAS,KAAK,eACR,KAAK,eAELmhD,GAAa,KAAK,OAAOnhD,CAAK;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,OAAOA,IAAQ,MAAMzD,GAASk/C,GAAO;AACjC,QAAI,KAAK;AACL,YAAM,IAAI,MAAM,4CAA4C;AAChE,WAAO,IAAI2C,GAAK,MAAM,KAAK,aAAap+C,CAAK,GAAG26C,EAAS,KAAKp+C,CAAO,GAAGg/C,GAAK,QAAQE,CAAK,CAAC;AAAA,EAC/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,cAAcz7C,IAAQ,MAAMzD,GAASk/C,GAAO;AACxC,WAAAl/C,IAAUo+C,EAAS,KAAKp+C,CAAO,GAC/B,KAAK,aAAaA,CAAO,GAClB,IAAI6hD,GAAK,MAAM,KAAK,aAAap+C,CAAK,GAAGzD,GAASg/C,GAAK,QAAQE,CAAK,CAAC;AAAA,EAChF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,cAAcz7C,IAAQ,MAAMzD,GAASk/C,GAAO;AAGxC,QAFAz7C,IAAQ,KAAK,aAAaA,CAAK,GAC/BzD,IAAUo+C,EAAS,KAAKp+C,CAAO,GAC3BA,EAAQ,MAAM;AACd,UAAIsC,IAAS,KAAK,aAAa,WAAWtC,CAAO;AACjD,UAAI,CAACsC;AACD,eAAO;AACX,MAAAtC,IAAUsC,EAAO,OAAOtC,CAAO;AAAA,IACnC;AACA,QAAIqlD,IAAU,KAAK,aAAa,cAAcrlD,CAAO,GACjDuC,IAAQ8iD,KAAWA,EAAQ,WAAWjH,EAAS,OAAO,EAAI;AAC9D,WAAK77C,IAEE,IAAIs/C,GAAK,MAAMp+C,GAAOzD,EAAQ,OAAOuC,CAAK,GAAGy8C,GAAK,QAAQE,CAAK,CAAC,IAD5D;AAAA,EAEf;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,aAAal/C,GAAS;AAClB,QAAIzE,IAAS,KAAK,aAAa,cAAcyE,CAAO;AACpD,QAAI,CAACzE,KAAU,CAACA,EAAO;AACnB,aAAO;AACX,aAAS9C,IAAI,GAAGA,IAAIuH,EAAQ,YAAYvH;AACpC,UAAI,CAAC,KAAK,YAAYuH,EAAQ,MAAMvH,CAAC,EAAE,KAAK;AACxC,eAAO;AACf,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,aAAauH,GAAS;AAClB,QAAI,CAAC,KAAK,aAAaA,CAAO;AAC1B,YAAM,IAAI,WAAW,4BAA4B,KAAK,IAAI,KAAKA,EAAQ,SAAQ,EAAG,MAAM,GAAG,EAAE,CAAC,EAAE;AAAA,EACxG;AAAA;AAAA;AAAA;AAAA,EAIA,WAAWyD,GAAO;AACd,IAAAshD,GAAW,KAAK,OAAOthD,GAAO,QAAQ,KAAK,IAAI;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA,EAIA,eAAe6hD,GAAU;AACrB,WAAO,KAAK,WAAW,QAAQ,KAAK,QAAQ,QAAQA,CAAQ,IAAI;AAAA,EACpE;AAAA;AAAA;AAAA;AAAA,EAIA,YAAYpG,GAAO;AACf,QAAI,KAAK,WAAW;AAChB,aAAO;AACX,aAASzmD,IAAI,GAAGA,IAAIymD,EAAM,QAAQzmD;AAC9B,UAAI,CAAC,KAAK,eAAeymD,EAAMzmD,CAAC,EAAE,IAAI;AAClC,eAAO;AACf,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,aAAaymD,GAAO;AAChB,QAAI,KAAK,WAAW;AAChB,aAAOA;AACX,QAAI52C;AACJ,aAAS7P,IAAI,GAAGA,IAAIymD,EAAM,QAAQzmD;AAC9B,MAAK,KAAK,eAAeymD,EAAMzmD,CAAC,EAAE,IAAI,IAI7B6P,KACLA,EAAK,KAAK42C,EAAMzmD,CAAC,CAAC,IAJb6P,MACDA,IAAO42C,EAAM,MAAM,GAAGzmD,CAAC;AAMnC,WAAQ6P,IAAeA,EAAK,SAASA,IAAO02C,GAAK,OAAlCE;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,QAAQ7sB,GAAO8b,GAAQ;AAC1B,QAAI5yC,IAAS,uBAAO,OAAO,IAAI;AAC/B,IAAA82B,EAAM,QAAQ,CAAClqB,GAAMi9C,MAAS7pD,EAAO4M,CAAI,IAAI,IAAIg9C,GAASh9C,GAAMgmC,GAAQiX,CAAI,CAAC;AAC7E,QAAIG,IAAUpX,EAAO,KAAK,WAAW;AACrC,QAAI,CAAC5yC,EAAOgqD,CAAO;AACf,YAAM,IAAI,WAAW,2CAA2CA,IAAU,IAAI;AAClF,QAAI,CAAChqD,EAAO;AACR,YAAM,IAAI,WAAW,kCAAkC;AAC3D,aAASwtB,KAAKxtB,EAAO,KAAK;AACtB,YAAM,IAAI,WAAW,+CAA+C;AACxE,WAAOA;AAAA,EACX;AACJ;AACA,SAASiqD,GAAa5B,GAAUe,GAAU5hD,GAAM;AAC5C,MAAIoqC,IAAQpqC,EAAK,MAAM,GAAG;AAC1B,SAAO,CAACrM,MAAU;AACd,QAAIyR,IAAOzR,MAAU,OAAO,SAAS,OAAOA;AAC5C,QAAIy2C,EAAM,QAAQhlC,CAAI,IAAI;AACtB,YAAM,IAAI,WAAW,0BAA0BglC,CAAK,kBAAkBwX,CAAQ,YAAYf,CAAQ,SAASz7C,CAAI,EAAE;AAAA,EACzH;AACJ;AAEA,MAAM88C,GAAU;AAAA,EACZ,YAAYrB,GAAUe,GAAUzuD,GAAS;AACrC,SAAK,aAAa,OAAO,UAAU,eAAe,KAAKA,GAAS,SAAS,GACzE,KAAK,UAAUA,EAAQ,SACvB,KAAK,WAAW,OAAOA,EAAQ,YAAY,WAAWsvD,GAAa5B,GAAUe,GAAUzuD,EAAQ,QAAQ,IAAIA,EAAQ;AAAA,EACvH;AAAA,EACA,IAAI,aAAa;AACb,WAAO,CAAC,KAAK;AAAA,EACjB;AACJ;AAQA,MAAMuvD,GAAS;AAAA;AAAA;AAAA;AAAA,EAIX,YAIAt9C,GAIAywB,GAIAuV,GAIAiX,GAAM;AACF,SAAK,OAAOj9C,GACZ,KAAK,OAAOywB,GACZ,KAAK,SAASuV,GACd,KAAK,OAAOiX,GACZ,KAAK,QAAQJ,GAAU78C,GAAMi9C,EAAK,KAAK,GACvC,KAAK,WAAW;AAChB,QAAIV,IAAWD,GAAa,KAAK,KAAK;AACtC,SAAK,WAAWC,IAAW,IAAI1F,GAAK,MAAM0F,CAAQ,IAAI;AAAA,EAC1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAOjhD,IAAQ,MAAM;AACjB,WAAI,CAACA,KAAS,KAAK,WACR,KAAK,WACT,IAAIu7C,GAAK,MAAM4F,GAAa,KAAK,OAAOnhD,CAAK,CAAC;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,QAAQy7C,GAAO/Q,GAAQ;AAC1B,QAAI5yC,IAAS,uBAAO,OAAO,IAAI,GAAGq9B,IAAO;AACzC,WAAAsmB,EAAM,QAAQ,CAAC/2C,GAAMi9C,MAAS7pD,EAAO4M,CAAI,IAAI,IAAIs9C,GAASt9C,GAAMywB,KAAQuV,GAAQiX,CAAI,CAAC,GAC9E7pD;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,cAAc4tC,GAAK;AACf,aAAS1wC,IAAI,GAAGA,IAAI0wC,EAAI,QAAQ1wC;AAC5B,MAAI0wC,EAAI1wC,CAAC,EAAE,QAAQ,SACf0wC,IAAMA,EAAI,MAAM,GAAG1wC,CAAC,EAAE,OAAO0wC,EAAI,MAAM1wC,IAAI,CAAC,CAAC,GAC7CA;AAER,WAAO0wC;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,QAAQA,GAAK;AACT,aAAS1wC,IAAI,GAAGA,IAAI0wC,EAAI,QAAQ1wC;AAC5B,UAAI0wC,EAAI1wC,CAAC,EAAE,QAAQ;AACf,eAAO0wC,EAAI1wC,CAAC;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA,EAIA,WAAWgL,GAAO;AACd,IAAAshD,GAAW,KAAK,OAAOthD,GAAO,QAAQ,KAAK,IAAI;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,SAASi7C,GAAO;AACZ,WAAO,KAAK,SAAS,QAAQA,CAAK,IAAI;AAAA,EAC1C;AACJ;AAUA,MAAMrS,GAAO;AAAA;AAAA;AAAA;AAAA,EAIT,YAAY+Y,GAAM;AAMd,SAAK,uBAAuB,MAM5B,KAAK,SAAS,uBAAO,OAAO,IAAI;AAChC,QAAIM,IAAe,KAAK,OAAO,CAAA;AAC/B,aAASjI,KAAQ2H;AACb,MAAAM,EAAajI,CAAI,IAAI2H,EAAK3H,CAAI;AAClC,IAAAiI,EAAa,QAAQvI,GAAW,KAAKiI,EAAK,KAAK,GAC3CM,EAAa,QAAQvI,GAAW,KAAKiI,EAAK,SAAS,EAAE,GACrD,KAAK,QAAQD,GAAS,QAAQ,KAAK,KAAK,OAAO,IAAI,GACvD,KAAK,QAAQM,GAAS,QAAQ,KAAK,KAAK,OAAO,IAAI;AACnD,QAAIE,IAAmB,uBAAO,OAAO,IAAI;AACzC,aAASlI,KAAQ,KAAK,OAAO;AACzB,UAAIA,KAAQ,KAAK;AACb,cAAM,IAAI,WAAWA,IAAO,oCAAoC;AACpE,UAAI16C,IAAO,KAAK,MAAM06C,CAAI,GAAGmI,IAAc7iD,EAAK,KAAK,WAAW,IAAI8iD,IAAW9iD,EAAK,KAAK;AAIzF,UAHAA,EAAK,eAAe4iD,EAAiBC,CAAW,MAC3CD,EAAiBC,CAAW,IAAIzD,GAAa,MAAMyD,GAAa,KAAK,KAAK,IAC/E7iD,EAAK,gBAAgBA,EAAK,aAAa,eACnCA,EAAK,KAAK,sBAAsB;AAChC,YAAI,KAAK;AACL,gBAAM,IAAI,WAAW,kCAAkC;AAC3D,YAAI,CAACA,EAAK,YAAY,CAACA,EAAK;AACxB,gBAAM,IAAI,WAAW,uDAAuD;AAChF,aAAK,uBAAuBA;AAAA,MAChC;AACA,MAAAA,EAAK,UAAU8iD,KAAY,MAAM,OAC7BA,IAAWC,GAAY,MAAMD,EAAS,MAAM,GAAG,CAAC,IAC5CA,KAAY,MAAM,CAAC9iD,EAAK,gBAAgB,CAAA,IAAK;AAAA,IACzD;AACA,aAAS06C,KAAQ,KAAK,OAAO;AACzB,UAAI16C,IAAO,KAAK,MAAM06C,CAAI,GAAGsI,IAAOhjD,EAAK,KAAK;AAC9C,MAAAA,EAAK,WAAWgjD,KAAQ,OAAO,CAAChjD,CAAI,IAAIgjD,KAAQ,KAAK,CAAA,IAAKD,GAAY,MAAMC,EAAK,MAAM,GAAG,CAAC;AAAA,IAC/F;AACA,SAAK,eAAe,CAAAjc,MAAQ+X,GAAK,SAAS,MAAM/X,CAAI,GACpD,KAAK,eAAe,CAAAA,MAAQkV,GAAK,SAAS,MAAMlV,CAAI,GACpD,KAAK,cAAc,KAAK,MAAM,KAAK,KAAK,WAAW,KAAK,GACxD,KAAK,OAAO,YAAY,uBAAO,OAAO,IAAI;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,KAAK/mC,GAAMU,IAAQ,MAAMzD,GAASk/C,GAAO;AACrC,QAAI,OAAOn8C,KAAQ;AACf,MAAAA,IAAO,KAAK,SAASA,CAAI;AAAA,aAClBA,aAAgBoiD;AAEtB,UAAIpiD,EAAK,UAAU;AACpB,cAAM,IAAI,WAAW,2CAA2CA,EAAK,OAAO,GAAG;AAAA,UAF/E,OAAM,IAAI,WAAW,wBAAwBA,CAAI;AAGrD,WAAOA,EAAK,cAAcU,GAAOzD,GAASk/C,CAAK;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,KAAKtjD,GAAMsjD,GAAO;AACd,QAAIn8C,IAAO,KAAK,MAAM;AACtB,WAAO,IAAIm/C,GAASn/C,GAAMA,EAAK,cAAcnH,GAAMojD,GAAK,QAAQE,CAAK,CAAC;AAAA,EAC1E;AAAA;AAAA;AAAA;AAAA,EAIA,KAAKn8C,GAAMU,GAAO;AACd,WAAI,OAAOV,KAAQ,aACfA,IAAO,KAAK,MAAMA,CAAI,IACnBA,EAAK,OAAOU,CAAK;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA,EAIA,SAAS0E,GAAM;AACX,QAAIi1C,IAAQ,KAAK,MAAMj1C,CAAI;AAC3B,QAAI,CAACi1C;AACD,YAAM,IAAI,WAAW,wBAAwBj1C,CAAI;AACrD,WAAOi1C;AAAA,EACX;AACJ;AACA,SAAS0I,GAAY3X,GAAQ+Q,GAAO;AAChC,MAAI9B,IAAQ,CAAA;AACZ,WAAS3kD,IAAI,GAAGA,IAAIymD,EAAM,QAAQzmD,KAAK;AACnC,QAAI0P,IAAO+2C,EAAMzmD,CAAC,GAAG60C,IAAOa,EAAO,MAAMhmC,CAAI,GAAGyK,IAAK06B;AACrD,QAAIA;AACA,MAAA8P,EAAM,KAAK9P,CAAI;AAAA;AAGf,eAASmQ,KAAQtP,EAAO,OAAO;AAC3B,YAAIb,IAAOa,EAAO,MAAMsP,CAAI;AAC5B,SAAIt1C,KAAQ,OAAQmlC,EAAK,KAAK,SAASA,EAAK,KAAK,MAAM,MAAM,GAAG,EAAE,QAAQnlC,CAAI,IAAI,OAC9Ei1C,EAAM,KAAKxqC,IAAK06B,CAAI;AAAA,MAC5B;AAEJ,QAAI,CAAC16B;AACD,YAAM,IAAI,YAAY,yBAAyBssC,EAAMzmD,CAAC,IAAI,GAAG;AAAA,EACrE;AACA,SAAO2kD;AACX;AAEA,SAAS4I,GAAUC,GAAM;AAAE,SAAOA,EAAK,OAAO;AAAM;AACpD,SAASC,GAAYD,GAAM;AAAE,SAAOA,EAAK,SAAS;AAAM;AAMxD,MAAME,GAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKZ,YAIAhY,GAKAiY,GAAO;AACH,SAAK,SAASjY,GACd,KAAK,QAAQiY,GAIb,KAAK,OAAO,CAAA,GAIZ,KAAK,SAAS,CAAA;AACd,QAAIC,IAAgB,KAAK,gBAAgB,CAAA;AACzC,IAAAD,EAAM,QAAQ,CAAAH,MAAQ;AAClB,UAAID,GAAUC,CAAI;AACd,aAAK,KAAK,KAAKA,CAAI;AAAA,eAEdC,GAAYD,CAAI,GAAG;AACxB,YAAIxI,IAAO,QAAQ,KAAKwI,EAAK,KAAK,EAAE,CAAC;AACrC,QAAII,EAAc,QAAQ5I,CAAI,IAAI,KAC9B4I,EAAc,KAAK5I,CAAI,GAC3B,KAAK,OAAO,KAAKwI,CAAI;AAAA,MACzB;AAAA,IACJ,CAAC,GAED,KAAK,iBAAiB,CAAC,KAAK,KAAK,KAAK,CAAAK,MAAK;AACvC,UAAI,CAAC,aAAa,KAAKA,EAAE,GAAG,KAAK,CAACA,EAAE;AAChC,eAAO;AACX,UAAIt/C,IAAOmnC,EAAO,MAAMmY,EAAE,IAAI;AAC9B,aAAOt/C,EAAK,aAAa,UAAUA,CAAI;AAAA,IAC3C,CAAC;AAAA,EACL;AAAA;AAAA;AAAA;AAAA,EAIA,MAAMu/C,GAAKrwD,IAAU,IAAI;AACrB,QAAIgf,IAAU,IAAIsxC,GAAa,MAAMtwD,GAAS,EAAK;AACnD,WAAAgf,EAAQ,OAAOqxC,GAAKvH,GAAK,MAAM9oD,EAAQ,MAAMA,EAAQ,EAAE,GAChDgf,EAAQ,OAAM;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,WAAWqxC,GAAKrwD,IAAU,IAAI;AAC1B,QAAIgf,IAAU,IAAIsxC,GAAa,MAAMtwD,GAAS,EAAI;AAClD,WAAAgf,EAAQ,OAAOqxC,GAAKvH,GAAK,MAAM9oD,EAAQ,MAAMA,EAAQ,EAAE,GAChD+kD,EAAM,QAAQ/lC,EAAQ,OAAM,CAAE;AAAA,EACzC;AAAA;AAAA;AAAA;AAAA,EAIA,SAASqxC,GAAKrxC,GAAS3S,GAAO;AAC1B,aAAS,IAAIA,IAAQ,KAAK,KAAK,QAAQA,CAAK,IAAI,IAAI,GAAG,IAAI,KAAK,KAAK,QAAQ,KAAK;AAC9E,UAAI0jD,IAAO,KAAK,KAAK,CAAC;AACtB,UAAI5P,GAAQkQ,GAAKN,EAAK,GAAG,MACpBA,EAAK,cAAc,UAAaM,EAAI,gBAAgBN,EAAK,eACzD,CAACA,EAAK,WAAW/wC,EAAQ,eAAe+wC,EAAK,OAAO,IAAI;AACzD,YAAIA,EAAK,UAAU;AACf,cAAI1qD,IAAS0qD,EAAK,SAASM,CAAG;AAC9B,cAAIhrD,MAAW;AACX;AACJ,UAAA0qD,EAAK,QAAQ1qD,KAAU;AAAA,QAC3B;AACA,eAAO0qD;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAIA,WAAWxI,GAAM/mD,GAAOwe,GAAS3S,GAAO;AACpC,aAAS9J,IAAI8J,IAAQ,KAAK,OAAO,QAAQA,CAAK,IAAI,IAAI,GAAG9J,IAAI,KAAK,OAAO,QAAQA,KAAK;AAClF,UAAIwtD,IAAO,KAAK,OAAOxtD,CAAC,GAAG2hC,IAAQ6rB,EAAK;AACxC,UAAI,EAAA7rB,EAAM,QAAQqjB,CAAI,KAAK,KACvBwI,EAAK,WAAW,CAAC/wC,EAAQ,eAAe+wC,EAAK,OAAO;AAAA;AAAA;AAAA,MAIpD7rB,EAAM,SAASqjB,EAAK,WACfrjB,EAAM,WAAWqjB,EAAK,MAAM,KAAK,MAAMrjB,EAAM,MAAMqjB,EAAK,SAAS,CAAC,KAAK/mD,KAEhF;AAAA,YAAIuvD,EAAK,UAAU;AACf,cAAI1qD,IAAS0qD,EAAK,SAASvvD,CAAK;AAChC,cAAI6E,MAAW;AACX;AACJ,UAAA0qD,EAAK,QAAQ1qD,KAAU;AAAA,QAC3B;AACA,eAAO0qD;AAAA;AAAA,IACX;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,YAAY9X,GAAQ;AACvB,QAAI5yC,IAAS,CAAA;AACb,aAASqkD,EAAOqG,GAAM;AAClB,UAAIQ,IAAWR,EAAK,YAAY,OAAO,KAAKA,EAAK,UAAUxtD,IAAI;AAC/D,aAAOA,IAAI8C,EAAO,QAAQ9C,KAAK;AAC3B,YAAImC,IAAOW,EAAO9C,CAAC;AACnB,aADqCmC,EAAK,YAAY,OAAO,KAAKA,EAAK,YACpD6rD;AACf;AAAA,MACR;AACA,MAAAlrD,EAAO,OAAO9C,GAAG,GAAGwtD,CAAI;AAAA,IAC5B;AACA,aAAS99C,KAAQgmC,EAAO,OAAO;AAC3B,UAAIiY,IAAQjY,EAAO,MAAMhmC,CAAI,EAAE,KAAK;AACpC,MAAIi+C,KACAA,EAAM,QAAQ,CAAAH,MAAQ;AAClB,QAAArG,EAAOqG,IAAO39C,GAAK29C,CAAI,CAAC,GAClBA,EAAK,QAAQA,EAAK,UAAUA,EAAK,cACnCA,EAAK,OAAO99C;AAAA,MACpB,CAAC;AAAA,IACT;AACA,aAASA,KAAQgmC,EAAO,OAAO;AAC3B,UAAIiY,IAAQjY,EAAO,MAAMhmC,CAAI,EAAE,KAAK;AACpC,MAAIi+C,KACAA,EAAM,QAAQ,CAAAH,MAAQ;AAClB,QAAArG,EAAOqG,IAAO39C,GAAK29C,CAAI,CAAC,GAClBA,EAAK,QAAQA,EAAK,UAAUA,EAAK,SACnCA,EAAK,OAAO99C;AAAA,MACpB,CAAC;AAAA,IACT;AACA,WAAO5M;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,WAAW4yC,GAAQ;AACtB,WAAOA,EAAO,OAAO,cAChBA,EAAO,OAAO,YAAY,IAAIgY,GAAUhY,GAAQgY,GAAU,YAAYhY,CAAM,CAAC;AAAA,EACtF;AACJ;AACA,MAAMuY,KAAY;AAAA,EACd,SAAS;AAAA,EAAM,SAAS;AAAA,EAAM,OAAO;AAAA,EAAM,YAAY;AAAA,EAAM,QAAQ;AAAA,EACrE,IAAI;AAAA,EAAM,KAAK;AAAA,EAAM,IAAI;AAAA,EAAM,UAAU;AAAA,EAAM,YAAY;AAAA,EAAM,QAAQ;AAAA,EACzE,QAAQ;AAAA,EAAM,MAAM;AAAA,EAAM,IAAI;AAAA,EAAM,IAAI;AAAA,EAAM,IAAI;AAAA,EAAM,IAAI;AAAA,EAAM,IAAI;AAAA,EACtE,IAAI;AAAA,EAAM,QAAQ;AAAA,EAAM,QAAQ;AAAA,EAAM,IAAI;AAAA,EAAM,IAAI;AAAA,EAAM,UAAU;AAAA,EAAM,IAAI;AAAA,EAC9E,QAAQ;AAAA,EAAM,GAAG;AAAA,EAAM,KAAK;AAAA,EAAM,SAAS;AAAA,EAAM,OAAO;AAAA,EAAM,OAAO;AAAA,EAAM,IAAI;AACnF,GACMC,KAAa;AAAA,EACf,MAAM;AAAA,EAAM,UAAU;AAAA,EAAM,QAAQ;AAAA,EAAM,QAAQ;AAAA,EAAM,OAAO;AAAA,EAAM,OAAO;AAChF,GACMC,KAAW,EAAE,IAAI,IAAM,IAAI,GAAI,GAE/BC,KAAkB,GAAGC,KAAuB,GAAGC,KAAgB;AACrE,SAASC,GAAajkD,GAAMkkD,GAAoB11C,GAAM;AAClD,SAAI01C,KAAsB,QACdA,IAAqBJ,KAAkB,MAC1CI,MAAuB,SAASH,KAAuB,KACzD/jD,KAAQA,EAAK,cAAc,QAAQ8jD,KAAkBC,KAAuBv1C,IAAO,CAACw1C;AAC/F;AACA,MAAMG,GAAY;AAAA,EACd,YAAYnkD,GAAMU,GAAOy7C,GAAOiI,GAAOvmD,GAAO1K,GAAS;AACnD,SAAK,OAAO6M,GACZ,KAAK,QAAQU,GACb,KAAK,QAAQy7C,GACb,KAAK,QAAQiI,GACb,KAAK,UAAUjxD,GACf,KAAK,UAAU,CAAA,GAEf,KAAK,cAAc8oD,GAAK,MACxB,KAAK,QAAQp+C,MAAU1K,IAAU6wD,KAAgB,OAAOhkD,EAAK;AAAA,EACjE;AAAA,EACA,aAAaiE,GAAM;AACf,QAAI,CAAC,KAAK,OAAO;AACb,UAAI,CAAC,KAAK;AACN,eAAO,CAAA;AACX,UAAIogD,IAAO,KAAK,KAAK,aAAa,WAAWhJ,EAAS,KAAKp3C,CAAI,CAAC;AAChE,UAAIogD;AACA,aAAK,QAAQ,KAAK,KAAK,aAAa,cAAcA,CAAI;AAAA,WAErD;AACD,YAAI78C,IAAQ,KAAK,KAAK,cAAcnB;AACpC,gBAAIA,IAAOmB,EAAM,aAAavD,EAAK,IAAI,MACnC,KAAK,QAAQuD,GACNnB,KAGA;AAAA,MAEf;AAAA,IACJ;AACA,WAAO,KAAK,MAAM,aAAapC,EAAK,IAAI;AAAA,EAC5C;AAAA,EACA,OAAOq4C,GAAS;AACZ,QAAI,EAAE,KAAK,UAAUwH,KAAkB;AACnC,UAAI1uD,IAAO,KAAK,QAAQ,KAAK,QAAQ,SAAS,CAAC,GAAG+D;AAClD,UAAI/D,KAAQA,EAAK,WAAW+D,IAAI,oBAAoB,KAAK/D,EAAK,IAAI,IAAI;AAClE,YAAIyD,IAAOzD;AACX,QAAIA,EAAK,KAAK,UAAU+D,EAAE,CAAC,EAAE,SACzB,KAAK,QAAQ,IAAG,IAEhB,KAAK,QAAQ,KAAK,QAAQ,SAAS,CAAC,IAAIN,EAAK,SAASA,EAAK,KAAK,MAAM,GAAGA,EAAK,KAAK,SAASM,EAAE,CAAC,EAAE,MAAM,CAAC;AAAA,MAChH;AAAA,IACJ;AACA,QAAI8D,IAAUo+C,EAAS,KAAK,KAAK,OAAO;AACxC,WAAI,CAACiB,KAAW,KAAK,UACjBr/C,IAAUA,EAAQ,OAAO,KAAK,MAAM,WAAWo+C,EAAS,OAAO,EAAI,CAAC,IACjE,KAAK,OAAO,KAAK,KAAK,OAAO,KAAK,OAAOp+C,GAAS,KAAK,KAAK,IAAIA;AAAA,EAC3E;AAAA,EACA,cAAcgH,GAAM;AAChB,WAAI,KAAK,OACE,KAAK,KAAK,gBACjB,KAAK,QAAQ,SACN,KAAK,QAAQ,CAAC,EAAE,WACpBA,EAAK,cAAc,CAAC0/C,GAAU,eAAe1/C,EAAK,WAAW,SAAS,aAAa;AAAA,EAC9F;AACJ;AACA,MAAMw/C,GAAa;AAAA,EACf,YAEAx4C,GAEA9X,GAASmxD,GAAQ;AACb,SAAK,SAASr5C,GACd,KAAK,UAAU9X,GACf,KAAK,SAASmxD,GACd,KAAK,OAAO,GACZ,KAAK,kBAAkB;AACvB,QAAIC,IAAUpxD,EAAQ,SAASqxD,GAC3BC,IAAaR,GAAa,MAAM9wD,EAAQ,oBAAoB,CAAC,KAAKmxD,IAASN,KAAgB;AAC/F,IAAIO,IACAC,IAAa,IAAIL,GAAYI,EAAQ,MAAMA,EAAQ,OAAOtI,GAAK,MAAM,IAAM9oD,EAAQ,YAAYoxD,EAAQ,KAAK,cAAcE,CAAU,IAC/HH,IACLE,IAAa,IAAIL,GAAY,MAAM,MAAMlI,GAAK,MAAM,IAAM,MAAMwI,CAAU,IAE1ED,IAAa,IAAIL,GAAYl5C,EAAO,OAAO,aAAa,MAAMgxC,GAAK,MAAM,IAAM,MAAMwI,CAAU,GACnG,KAAK,QAAQ,CAACD,CAAU,GACxB,KAAK,OAAOrxD,EAAQ,eACpB,KAAK,aAAa;AAAA,EACtB;AAAA,EACA,IAAI,MAAM;AACN,WAAO,KAAK,MAAM,KAAK,IAAI;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA,EAIA,OAAOqwD,GAAKrH,GAAO;AACf,IAAIqH,EAAI,YAAY,IAChB,KAAK,YAAYA,GAAKrH,CAAK,IACtBqH,EAAI,YAAY,KACrB,KAAK,WAAWA,GAAKrH,CAAK;AAAA,EAClC;AAAA,EACA,YAAYqH,GAAKrH,GAAO;AACpB,QAAIxoD,IAAQ6vD,EAAI,WACZkB,IAAM,KAAK,KAAKC,IAAcD,EAAI,UAAUX,KAAwB,SAClE,KAAK,oBAAoBW,EAAI,UAAUZ,MAAmB,GAC5D,EAAE,QAAA1Y,MAAW,KAAK;AACtB,QAAIuZ,MAAe,UACfD,EAAI,cAAclB,CAAG,KACrB,mBAAmB,KAAK7vD,CAAK,GAAG;AAChC,UAAKgxD;AAcA,YAAIA,MAAe;AACpB,UAAAhxD,IAAQA,EAAM,QAAQ,UAAU;AAAA,CAAI;AAAA,iBAE/By3C,EAAO,wBAAwB,SAAS,KAAKz3C,CAAK,KAAK,KAAK,IAAI,aAAay3C,EAAO,qBAAqB,OAAM,CAAE,GAAG;AACzH,cAAI9sC,IAAQ3K,EAAM,MAAM,UAAU;AAClC,mBAAS+B,IAAI,GAAGA,IAAI4I,EAAM,QAAQ5I;AAC9B,YAAIA,KACA,KAAK,WAAW01C,EAAO,qBAAqB,OAAM,GAAI+Q,GAAO,EAAI,GACjE79C,EAAM5I,CAAC,KACP,KAAK,WAAW01C,EAAO,KAAK9sC,EAAM5I,CAAC,CAAC,GAAGymD,GAAO,CAAC,KAAK,KAAK79C,EAAM5I,CAAC,CAAC,CAAC;AAE1E,UAAA/B,IAAQ;AAAA,QACZ;AAEI,UAAAA,IAAQA,EAAM,QAAQ,aAAa,GAAG;AAAA,eA3BtCA,IAAQA,EAAM,QAAQ,qBAAqB,GAAG,GAI1C,mBAAmB,KAAKA,CAAK,KAAK,KAAK,QAAQ,KAAK,MAAM,SAAS,GAAG;AACtE,YAAIixD,IAAaF,EAAI,QAAQA,EAAI,QAAQ,SAAS,CAAC,GAC/CG,IAAgBrB,EAAI;AACxB,SAAI,CAACoB,KACAC,KAAiBA,EAAc,YAAY,QAC3CD,EAAW,UAAU,mBAAmB,KAAKA,EAAW,IAAI,OAC7DjxD,IAAQA,EAAM,MAAM,CAAC;AAAA,MAC7B;AAkBJ,MAAIA,KACA,KAAK,WAAWy3C,EAAO,KAAKz3C,CAAK,GAAGwoD,GAAO,CAAC,KAAK,KAAKxoD,CAAK,CAAC,GAChE,KAAK,WAAW6vD,CAAG;AAAA,IACvB;AAEI,WAAK,WAAWA,CAAG;AAAA,EAE3B;AAAA;AAAA;AAAA,EAGA,WAAWA,GAAKrH,GAAO2I,GAAY;AAC/B,QAAIC,IAAU,KAAK,iBAAiBL,IAAM,KAAK;AAC/C,KAAIlB,EAAI,WAAW,SAAS,MAAM,KAAKA,EAAI,SAASA,EAAI,MAAM,UAAU,OACpE,KAAK,kBAAkB;AAC3B,QAAIp+C,IAAOo+C,EAAI,SAAS,YAAW,GAAIwB;AACvC,IAAInB,GAAS,eAAez+C,CAAI,KAAK,KAAK,OAAO,kBAC7C6/C,GAAczB,CAAG;AACrB,QAAIN,IAAQ,KAAK,QAAQ,gBAAgB,KAAK,QAAQ,aAAaM,CAAG,MACjEwB,IAAS,KAAK,OAAO,SAASxB,GAAK,MAAMsB,CAAU;AACxD,IAAA9e,EAAK,KAAIkd,IAAOA,EAAK,SAASU,GAAW,eAAex+C,CAAI;AACxD,WAAK,WAAWo+C,CAAG,GACnB,KAAK,eAAeA,GAAKrH,CAAK;AAAA,aAEzB,CAAC+G,KAAQA,EAAK,QAAQA,EAAK,aAAa;AAC7C,MAAIA,KAAQA,EAAK,cACb,KAAK,OAAO,KAAK,IAAI,GAAG,KAAK,OAAO,CAAC,IAChCA,KAAQA,EAAK,KAAK,aACvBM,IAAMN,EAAK;AACf,UAAIgC,GAAMC,IAAgB,KAAK;AAC/B,UAAIxB,GAAU,eAAev+C,CAAI;AAC7B,QAAIs/C,EAAI,QAAQ,UAAUA,EAAI,QAAQ,CAAC,EAAE,YAAY,KAAK,SACtD,KAAK,QACLA,IAAM,KAAK,MAEfQ,IAAO,IACFR,EAAI,SACL,KAAK,aAAa;AAAA,eAEjB,CAAClB,EAAI,YAAY;AACtB,aAAK,aAAaA,GAAKrH,CAAK;AAC5B,cAAMnW;AAAA,MACV;AACA,UAAIof,IAAalC,KAAQA,EAAK,OAAO/G,IAAQ,KAAK,WAAWqH,GAAKrH,CAAK;AACvE,MAAIiJ,KACA,KAAK,OAAO5B,GAAK4B,CAAU,GAC3BF,KACA,KAAK,KAAKR,CAAG,GACjB,KAAK,aAAaS;AAAA,IACtB,OACK;AACD,UAAIC,IAAa,KAAK,WAAW5B,GAAKrH,CAAK;AAC3C,MAAIiJ,KACA,KAAK,iBAAiB5B,GAAKN,GAAMkC,GAAYlC,EAAK,cAAc,KAAQ8B,IAAS,MAAS;AAAA,IAClG;AACA,SAAK,kBAAkBD;AAAA,EAC3B;AAAA;AAAA,EAEA,aAAavB,GAAKrH,GAAO;AACrB,IAAIqH,EAAI,YAAY,QAAQ,KAAK,IAAI,QAAQ,KAAK,IAAI,KAAK,iBACvD,KAAK,YAAYA,EAAI,cAAc,eAAe;AAAA,CAAI,GAAGrH,CAAK;AAAA,EACtE;AAAA;AAAA,EAEA,eAAeqH,GAAKrH,GAAO;AAEvB,IAAIqH,EAAI,YAAY,SAAS,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,IAAI,KAAK,kBAC1D,KAAK,UAAU,KAAK,OAAO,OAAO,KAAK,GAAG,GAAGrH,GAAO,EAAI;AAAA,EAChE;AAAA;AAAA;AAAA;AAAA,EAIA,WAAWqH,GAAKrH,GAAO;AACnB,QAAIkJ,IAAS7B,EAAI;AAMjB,QAAI6B,KAAUA,EAAO;AACjB,eAAS,IAAI,GAAG,IAAI,KAAK,OAAO,cAAc,QAAQ,KAAK;AACvD,YAAIjgD,IAAO,KAAK,OAAO,cAAc,CAAC,GAAGzR,IAAQ0xD,EAAO,iBAAiBjgD,CAAI;AAC7E,YAAIzR;AACA,mBAAS6L,IAAQ,YAAa;AAC1B,gBAAI0jD,IAAO,KAAK,OAAO,WAAW99C,GAAMzR,GAAO,MAAM6L,CAAK;AAC1D,gBAAI,CAAC0jD;AACD;AACJ,gBAAIA,EAAK;AACL,qBAAO;AAKX,gBAJIA,EAAK,YACL/G,IAAQA,EAAM,OAAO,CAAAhjD,MAAK,CAAC+pD,EAAK,UAAU/pD,CAAC,CAAC,IAE5CgjD,IAAQA,EAAM,OAAO,KAAK,OAAO,OAAO,MAAM+G,EAAK,IAAI,EAAE,OAAOA,EAAK,KAAK,CAAC,GAC3EA,EAAK,cAAc;AACnB,cAAA1jD,IAAQ0jD;AAAA;AAER;AAAA,UACR;AAAA,MACR;AACJ,WAAO/G;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,iBAAiBqH,GAAKN,GAAM/G,GAAOmJ,GAAe;AAC9C,QAAIJ,GAAM7O;AACV,QAAI6M,EAAK;AAEL,UADA7M,IAAW,KAAK,OAAO,OAAO,MAAM6M,EAAK,IAAI,GACxC7M,EAAS;AAOT,QAAK,KAAK,WAAWA,EAAS,OAAO6M,EAAK,KAAK,GAAG/G,GAAOqH,EAAI,YAAY,IAAI,KAC9E,KAAK,aAAaA,GAAKrH,CAAK;AAAA,WARV;AAClB,YAAI99C,IAAQ,KAAK,MAAMg4C,GAAU6M,EAAK,SAAS,MAAM/G,GAAO+G,EAAK,kBAAkB;AACnF,QAAI7kD,MACA6mD,IAAO,IACP/I,IAAQ99C;AAAA,MAEhB;AAAA,SAKC;AACD,UAAIkkD,IAAW,KAAK,OAAO,OAAO,MAAMW,EAAK,IAAI;AACjD,MAAA/G,IAAQA,EAAM,OAAOoG,EAAS,OAAOW,EAAK,KAAK,CAAC;AAAA,IACpD;AACA,QAAIqC,IAAU,KAAK;AACnB,QAAIlP,KAAYA,EAAS;AACrB,WAAK,WAAWmN,CAAG;AAAA,aAEd8B;AACL,WAAK,WAAW9B,GAAKrH,GAAOmJ,CAAa;AAAA,aAEpCpC,EAAK;AACV,WAAK,WAAWM,CAAG,GACnBN,EAAK,WAAWM,GAAK,KAAK,OAAO,MAAM,EAAE,QAAQ,CAAAv/C,MAAQ,KAAK,WAAWA,GAAMk4C,GAAO,EAAK,CAAC;AAAA,SAE3F;AACD,UAAIqJ,IAAahC;AACjB,MAAI,OAAON,EAAK,kBAAkB,WAC9BsC,IAAahC,EAAI,cAAcN,EAAK,cAAc,IAC7C,OAAOA,EAAK,kBAAkB,aACnCsC,IAAatC,EAAK,eAAeM,CAAG,IAC/BN,EAAK,mBACVsC,IAAatC,EAAK,iBACtB,KAAK,WAAWM,GAAKgC,GAAY,EAAI,GACrC,KAAK,OAAOA,GAAYrJ,CAAK,GAC7B,KAAK,WAAWqH,GAAKgC,GAAY,EAAK;AAAA,IAC1C;AACA,IAAIN,KAAQ,KAAK,KAAKK,CAAO,KACzB,KAAK;AAAA,EACb;AAAA;AAAA;AAAA;AAAA,EAIA,OAAOh+C,GAAQ40C,GAAOn1B,GAAYE,GAAU;AACxC,QAAItsB,IAAQosB,KAAc;AAC1B,aAASw8B,IAAMx8B,IAAazf,EAAO,WAAWyf,CAAU,IAAIzf,EAAO,YAAYQ,IAAMmf,KAAY,OAAO,OAAO3f,EAAO,WAAW2f,CAAQ,GAAGs8B,KAAOz7C,GAAKy7C,IAAMA,EAAI,aAAa,EAAE5oD;AAC7K,WAAK,YAAY2M,GAAQ3M,CAAK,GAC9B,KAAK,OAAO4oD,GAAKrH,CAAK;AAE1B,SAAK,YAAY50C,GAAQ3M,CAAK;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA,EAIA,UAAUqJ,GAAMk4C,GAAOsJ,GAAU;AAC7B,QAAIC,GAAOR;AACX,aAAS34B,IAAQ,KAAK,MAAMo5B,IAAU,GAAGp5B,KAAS,GAAGA,KAAS;AAC1D,UAAIq5B,IAAK,KAAK,MAAMr5B,CAAK,GACrB8tB,IAAQuL,EAAG,aAAa3hD,CAAI;AAChC,UAAIo2C,MAAU,CAACqL,KAASA,EAAM,SAASrL,EAAM,SAASsL,OAClDD,IAAQrL,GACR6K,IAAOU,GACH,CAACvL,EAAM;AACP;AAER,UAAIuL,EAAG,OAAO;AACV,YAAIH;AACA;AACJ,QAAAE,KAAW;AAAA,MACf;AAAA,IACJ;AACA,QAAI,CAACD;AACD,aAAO;AACX,SAAK,KAAKR,CAAI;AACd,aAASxvD,IAAI,GAAGA,IAAIgwD,EAAM,QAAQhwD;AAC9B,MAAAymD,IAAQ,KAAK,WAAWuJ,EAAMhwD,CAAC,GAAG,MAAMymD,GAAO,EAAK;AACxD,WAAOA;AAAA,EACX;AAAA;AAAA,EAEA,WAAWl4C,GAAMk4C,GAAOsJ,GAAU;AAC9B,QAAIxhD,EAAK,YAAY,KAAK,cAAc,CAAC,KAAK,IAAI,MAAM;AACpD,UAAI3K,IAAQ,KAAK,qBAAoB;AACrC,MAAIA,MACA6iD,IAAQ,KAAK,WAAW7iD,GAAO,MAAM6iD,CAAK;AAAA,IAClD;AACA,QAAIiJ,IAAa,KAAK,UAAUnhD,GAAMk4C,GAAOsJ,CAAQ;AACrD,QAAIL,GAAY;AACZ,WAAK,WAAU;AACf,UAAIV,IAAM,KAAK;AACf,MAAIA,EAAI,UACJA,EAAI,QAAQA,EAAI,MAAM,UAAUzgD,EAAK,IAAI;AAC7C,UAAI4hD,IAAY5J,GAAK;AACrB,eAAS9iD,KAAKisD,EAAW,OAAOnhD,EAAK,KAAK;AACtC,SAAIygD,EAAI,OAAOA,EAAI,KAAK,eAAevrD,EAAE,IAAI,IAAI2sD,GAAa3sD,EAAE,MAAM8K,EAAK,IAAI,OAC3E4hD,IAAY1sD,EAAE,SAAS0sD,CAAS;AACxC,aAAAnB,EAAI,QAAQ,KAAKzgD,EAAK,KAAK4hD,CAAS,CAAC,GAC9B;AAAA,IACX;AACA,WAAO;AAAA,EACX;AAAA;AAAA;AAAA,EAGA,MAAM7lD,GAAMU,GAAOy7C,GAAOwI,GAAY;AAClC,QAAIS,IAAa,KAAK,UAAUplD,EAAK,OAAOU,CAAK,GAAGy7C,GAAO,EAAK;AAChE,WAAIiJ,MACAA,IAAa,KAAK,WAAWplD,GAAMU,GAAOy7C,GAAO,IAAMwI,CAAU,IAC9DS;AAAA,EACX;AAAA;AAAA,EAEA,WAAWplD,GAAMU,GAAOy7C,GAAOiI,IAAQ,IAAOO,GAAY;AACtD,SAAK,WAAU;AACf,QAAID,IAAM,KAAK;AACf,IAAAA,EAAI,QAAQA,EAAI,SAASA,EAAI,MAAM,UAAU1kD,CAAI;AACjD,QAAI7M,IAAU8wD,GAAajkD,GAAM2kD,GAAYD,EAAI,OAAO;AACxD,IAAKA,EAAI,UAAUV,MAAkBU,EAAI,QAAQ,UAAU,MACvDvxD,KAAW6wD;AACf,QAAI+B,IAAa9J,GAAK;AACtB,WAAAE,IAAQA,EAAM,OAAO,CAAAhjD,OACburD,EAAI,OAAOA,EAAI,KAAK,eAAevrD,EAAE,IAAI,IAAI2sD,GAAa3sD,EAAE,MAAM6G,CAAI,MACtE+lD,IAAa5sD,EAAE,SAAS4sD,CAAU,GAC3B,MAEJ,EACV,GACD,KAAK,MAAM,KAAK,IAAI5B,GAAYnkD,GAAMU,GAAOqlD,GAAY3B,GAAO,MAAMjxD,CAAO,CAAC,GAC9E,KAAK,QACEgpD;AAAA,EACX;AAAA;AAAA;AAAA,EAGA,WAAWG,IAAU,IAAO;AACxB,QAAI5mD,IAAI,KAAK,MAAM,SAAS;AAC5B,QAAIA,IAAI,KAAK,MAAM;AACf,aAAOA,IAAI,KAAK,MAAMA;AAClB,aAAK,MAAMA,IAAI,CAAC,EAAE,QAAQ,KAAK,KAAK,MAAMA,CAAC,EAAE,OAAO4mD,CAAO,CAAC;AAChE,WAAK,MAAM,SAAS,KAAK,OAAO;AAAA,IACpC;AAAA,EACJ;AAAA,EACA,SAAS;AACL,gBAAK,OAAO,GACZ,KAAK,WAAW,KAAK,MAAM,GACpB,KAAK,MAAM,CAAC,EAAE,OAAO,CAAC,EAAE,KAAK,UAAU,KAAK,QAAQ,QAAQ;AAAA,EACvE;AAAA,EACA,KAAK3T,GAAI;AACL,aAASjzC,IAAI,KAAK,MAAMA,KAAK,GAAGA,KAAK;AACjC,UAAI,KAAK,MAAMA,CAAC,KAAKizC;AACjB,oBAAK,OAAOjzC,GACL;AAEN,MAAI,KAAK,oBACV,KAAK,MAAMA,CAAC,EAAE,WAAWouD;AAAA,IAEjC;AACA,WAAO;AAAA,EACX;AAAA,EACA,IAAI,aAAa;AACb,SAAK,WAAU;AACf,QAAI98C,IAAM;AACV,aAAStR,IAAI,KAAK,MAAMA,KAAK,GAAGA,KAAK;AACjC,UAAIuH,IAAU,KAAK,MAAMvH,CAAC,EAAE;AAC5B,eAASmE,IAAIoD,EAAQ,SAAS,GAAGpD,KAAK,GAAGA;AACrC,QAAAmN,KAAO/J,EAAQpD,CAAC,EAAE;AACtB,MAAInE,KACAsR;AAAA,IACR;AACA,WAAOA;AAAA,EACX;AAAA,EACA,YAAYO,GAAQqL,GAAQ;AACxB,QAAI,KAAK;AACL,eAASld,IAAI,GAAGA,IAAI,KAAK,KAAK,QAAQA;AAClC,QAAI,KAAK,KAAKA,CAAC,EAAE,QAAQ6R,KAAU,KAAK,KAAK7R,CAAC,EAAE,UAAUkd,MACtD,KAAK,KAAKld,CAAC,EAAE,MAAM,KAAK;AAAA,EAExC;AAAA,EACA,WAAW6R,GAAQ;AACf,QAAI,KAAK;AACL,eAAS7R,IAAI,GAAGA,IAAI,KAAK,KAAK,QAAQA;AAClC,QAAI,KAAK,KAAKA,CAAC,EAAE,OAAO,QAAQ6R,EAAO,YAAY,KAAKA,EAAO,SAAS,KAAK,KAAK7R,CAAC,EAAE,IAAI,MACrF,KAAK,KAAKA,CAAC,EAAE,MAAM,KAAK;AAAA,EAExC;AAAA,EACA,WAAW6R,GAAQtK,GAASsC,GAAQ;AAChC,QAAIgI,KAAUtK,KAAW,KAAK;AAC1B,eAAS,IAAI,GAAG,IAAI,KAAK,KAAK,QAAQ;AAClC,QAAI,KAAK,KAAK,CAAC,EAAE,OAAO,QAAQsK,EAAO,YAAY,KAAKA,EAAO,SAAS,KAAK,KAAK,CAAC,EAAE,IAAI,KAC3EtK,EAAQ,wBAAwB,KAAK,KAAK,CAAC,EAAE,IAAI,KAChDsC,IAAS,IAAI,OACpB,KAAK,KAAK,CAAC,EAAE,MAAM,KAAK;AAAA,EAG5C;AAAA,EACA,WAAWymD,GAAU;AACjB,QAAI,KAAK;AACL,eAAStwD,IAAI,GAAGA,IAAI,KAAK,KAAK,QAAQA;AAClC,QAAI,KAAK,KAAKA,CAAC,EAAE,QAAQswD,MACrB,KAAK,KAAKtwD,CAAC,EAAE,MAAM,KAAK,cAAcswD,EAAS,UAAU,SAAS,KAAK,KAAKtwD,CAAC,EAAE;AAAA,EAE/F;AAAA;AAAA,EAEA,eAAeyc,GAAS;AACpB,QAAIA,EAAQ,QAAQ,GAAG,IAAI;AACvB,aAAOA,EAAQ,MAAM,UAAU,EAAE,KAAK,KAAK,gBAAgB,IAAI;AACnE,QAAI7Z,IAAQ6Z,EAAQ,MAAM,GAAG,GACzBy8B,IAAS,KAAK,QAAQ,SACtBqX,IAAU,CAAC,KAAK,WAAW,CAACrX,KAAUA,EAAO,OAAO,QAAQ,KAAK,MAAM,CAAC,EAAE,OAC1EsX,IAAW,EAAEtX,IAASA,EAAO,QAAQ,IAAI,MAAMqX,IAAU,IAAI,IAC7DpoD,IAAQ,CAACnI,GAAG62B,MAAU;AACtB,aAAO72B,KAAK,GAAGA,KAAK;AAChB,YAAIkC,IAAOU,EAAM5C,CAAC;AAClB,YAAIkC,KAAQ,IAAI;AACZ,cAAIlC,KAAK4C,EAAM,SAAS,KAAK5C,KAAK;AAC9B;AACJ,iBAAO62B,KAAS25B,GAAU35B;AACtB,gBAAI1uB,EAAMnI,IAAI,GAAG62B,CAAK;AAClB,qBAAO;AACf,iBAAO;AAAA,QACX,OACK;AACD,cAAI10B,IAAO00B,IAAQ,KAAMA,KAAS,KAAK05B,IAAW,KAAK,MAAM15B,CAAK,EAAE,OAC9DqiB,KAAUriB,KAAS25B,IAAWtX,EAAO,KAAKriB,IAAQ25B,CAAQ,EAAE,OACxD;AACV,cAAI,CAACruD,KAASA,EAAK,QAAQD,KAAQ,CAACC,EAAK,UAAUD,CAAI;AACnD,mBAAO;AACX,UAAA20B;AAAA,QACJ;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AACA,WAAO1uB,EAAMvF,EAAM,SAAS,GAAG,KAAK,IAAI;AAAA,EAC5C;AAAA,EACA,uBAAuB;AACnB,QAAI6tD,IAAW,KAAK,QAAQ;AAC5B,QAAIA;AACA,eAASv5B,IAAIu5B,EAAS,OAAOv5B,KAAK,GAAGA,KAAK;AACtC,YAAIw5B,IAAQD,EAAS,KAAKv5B,CAAC,EAAE,eAAeu5B,EAAS,WAAWv5B,CAAC,CAAC,EAAE;AACpE,YAAIw5B,KAASA,EAAM,eAAeA,EAAM;AACpC,iBAAOA;AAAA,MACf;AACJ,aAAShhD,KAAQ,KAAK,OAAO,OAAO,OAAO;AACvC,UAAIpF,IAAO,KAAK,OAAO,OAAO,MAAMoF,CAAI;AACxC,UAAIpF,EAAK,eAAeA,EAAK;AACzB,eAAOA;AAAA,IACf;AAAA,EACJ;AACJ;AAIA,SAASilD,GAAczB,GAAK;AACxB,WAAS7iD,IAAQ6iD,EAAI,YAAY6C,IAAW,MAAM1lD,GAAOA,IAAQA,EAAM,aAAa;AAChF,QAAIyE,IAAOzE,EAAM,YAAY,IAAIA,EAAM,SAAS,YAAW,IAAK;AAChE,IAAIyE,KAAQy+C,GAAS,eAAez+C,CAAI,KAAKihD,KACzCA,EAAS,YAAY1lD,CAAK,GAC1BA,IAAQ0lD,KAEHjhD,KAAQ,OACbihD,IAAW1lD,IAENyE,MACLihD,IAAW;AAAA,EAEnB;AACJ;AAEA,SAAS/S,GAAQkQ,GAAK8C,GAAU;AAC5B,UAAQ9C,EAAI,WAAWA,EAAI,qBAAqBA,EAAI,yBAAyBA,EAAI,oBAAoB,KAAKA,GAAK8C,CAAQ;AAC3H;AACA,SAAS/gD,GAAKV,GAAK;AACf,MAAIU,IAAO,CAAA;AACX,WAASm1C,KAAQ71C;AACb,IAAAU,EAAKm1C,CAAI,IAAI71C,EAAI61C,CAAI;AACzB,SAAOn1C;AACX;AAIA,SAASugD,GAAavD,GAAUlM,GAAU;AACtC,MAAI/mB,IAAQ+mB,EAAS,OAAO;AAC5B,WAASjxC,KAAQkqB,GAAO;AACpB,QAAI/nB,IAAS+nB,EAAMlqB,CAAI;AACvB,QAAI,CAACmC,EAAO,eAAeg7C,CAAQ;AAC/B;AACJ,QAAIzwC,IAAO,CAAA,GAAIquC,IAAO,CAACtiD,MAAU;AAC7B,MAAAiU,EAAK,KAAKjU,CAAK;AACf,eAASnI,IAAI,GAAGA,IAAImI,EAAM,WAAWnI,KAAK;AACtC,YAAI,EAAE,MAAAsK,GAAM,MAAAnI,EAAI,IAAKgG,EAAM,KAAKnI,CAAC;AAGjC,YAFIsK,KAAQq2C,KAERvkC,EAAK,QAAQja,CAAI,IAAI,KAAKsoD,EAAKtoD,CAAI;AACnC,iBAAO;AAAA,MACf;AAAA,IACJ;AACA,QAAIsoD,EAAK54C,EAAO,YAAY;AACxB,aAAO;AAAA,EACf;AACJ;AAMA,MAAMg/C,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUhB,YAIAj3B,GAIA6sB,GAAO;AACH,SAAK,QAAQ7sB,GACb,KAAK,QAAQ6sB;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,kBAAkBzvB,GAAUv5B,IAAU,CAAA,GAAI+R,GAAQ;AAC9C,IAAKA,MACDA,IAAS6nB,GAAI55B,CAAO,EAAE,uBAAsB;AAChD,QAAIuxD,IAAMx/C,GAAQg7C,IAAS,CAAA;AAC3B,WAAAxzB,EAAS,QAAQ,CAAAzoB,MAAQ;AACrB,UAAIi8C,EAAO,UAAUj8C,EAAK,MAAM,QAAQ;AACpC,YAAIuiD,IAAO,GAAGC,IAAW;AACzB,eAAOD,IAAOtG,EAAO,UAAUuG,IAAWxiD,EAAK,MAAM,UAAQ;AACzD,cAAIpM,IAAOoM,EAAK,MAAMwiD,CAAQ;AAC9B,cAAI,CAAC,KAAK,MAAM5uD,EAAK,KAAK,IAAI,GAAG;AAC7B,YAAA4uD;AACA;AAAA,UACJ;AACA,cAAI,CAAC5uD,EAAK,GAAGqoD,EAAOsG,CAAI,EAAE,CAAC,CAAC,KAAK3uD,EAAK,KAAK,KAAK,aAAa;AACzD;AACJ,UAAA2uD,KACAC;AAAA,QACJ;AACA,eAAOD,IAAOtG,EAAO;AACjB,UAAAwE,IAAMxE,EAAO,IAAG,EAAG,CAAC;AACxB,eAAOuG,IAAWxiD,EAAK,MAAM,UAAQ;AACjC,cAAIwI,IAAMxI,EAAK,MAAMwiD,GAAU,GAC3BC,IAAU,KAAK,cAAcj6C,GAAKxI,EAAK,UAAU9Q,CAAO;AAC5D,UAAIuzD,MACAxG,EAAO,KAAK,CAACzzC,GAAKi4C,CAAG,CAAC,GACtBA,EAAI,YAAYgC,EAAQ,GAAG,GAC3BhC,IAAMgC,EAAQ,cAAcA,EAAQ;AAAA,QAE5C;AAAA,MACJ;AACA,MAAAhC,EAAI,YAAY,KAAK,mBAAmBzgD,GAAM9Q,CAAO,CAAC;AAAA,IAC1D,CAAC,GACM+R;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,mBAAmBjB,GAAM9Q,GAAS;AAC9B,QAAI,EAAE,KAAAqwD,GAAK,YAAAgC,EAAU,IAAKmB,GAAW55B,GAAI55B,CAAO,GAAG,KAAK,MAAM8Q,EAAK,KAAK,IAAI,EAAEA,CAAI,GAAG,MAAMA,EAAK,KAAK;AACrG,QAAIuhD,GAAY;AACZ,UAAIvhD,EAAK;AACL,cAAM,IAAI,WAAW,8CAA8C;AACvE,WAAK,kBAAkBA,EAAK,SAAS9Q,GAASqyD,CAAU;AAAA,IAC5D;AACA,WAAOhC;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,cAAcv/C,GAAM9Q,IAAU,IAAI;AAC9B,QAAIqwD,IAAM,KAAK,mBAAmBv/C,GAAM9Q,CAAO;AAC/C,aAAS,IAAI8Q,EAAK,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AAC7C,UAAIoC,IAAO,KAAK,cAAcpC,EAAK,MAAM,CAAC,GAAGA,EAAK,UAAU9Q,CAAO;AACnE,MAAIkT,OACCA,EAAK,cAAcA,EAAK,KAAK,YAAYm9C,CAAG,GAC7CA,IAAMn9C,EAAK;AAAA,IAEnB;AACA,WAAOm9C;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,cAAcjZ,GAAMqc,GAAQzzD,IAAU,CAAA,GAAI;AACtC,QAAI0zD,IAAQ,KAAK,MAAMtc,EAAK,KAAK,IAAI;AACrC,WAAOsc,KAASF,GAAW55B,GAAI55B,CAAO,GAAG0zD,EAAMtc,GAAMqc,CAAM,GAAG,MAAMrc,EAAK,KAAK;AAAA,EAClF;AAAA,EACA,OAAO,WAAWxd,GAAK+5B,GAAWC,IAAQ,MAAMC,GAAe;AAC3D,WAAOL,GAAW55B,GAAK+5B,GAAWC,GAAOC,CAAa;AAAA,EAC1D;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,WAAW5b,GAAQ;AACtB,WAAOA,EAAO,OAAO,kBAChBA,EAAO,OAAO,gBAAgB,IAAImb,GAAc,KAAK,gBAAgBnb,CAAM,GAAG,KAAK,gBAAgBA,CAAM,CAAC;AAAA,EACnH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,gBAAgBA,GAAQ;AAC3B,QAAI5yC,IAASyuD,GAAY7b,EAAO,KAAK;AACrC,WAAK5yC,EAAO,SACRA,EAAO,OAAO,CAAAyL,MAAQA,EAAK,OACxBzL;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,gBAAgB4yC,GAAQ;AAC3B,WAAO6b,GAAY7b,EAAO,KAAK;AAAA,EACnC;AACJ;AACA,SAAS6b,GAAYpiD,GAAK;AACtB,MAAIrM,IAAS,CAAA;AACb,WAAS4M,KAAQP,GAAK;AAClB,QAAIgiD,IAAQhiD,EAAIO,CAAI,EAAE,KAAK;AAC3B,IAAIyhD,MACAruD,EAAO4M,CAAI,IAAIyhD;AAAA,EACvB;AACA,SAAOruD;AACX;AACA,SAASu0B,GAAI55B,GAAS;AAClB,SAAOA,EAAQ,YAAY,OAAO;AACtC;AACA,MAAM+zD,KAA2B,oBAAI,QAAO;AAC5C,SAASC,GAAqBzmD,GAAO;AACjC,MAAI/M,IAAQuzD,GAAyB,IAAIxmD,CAAK;AAC9C,SAAI/M,MAAU,UACVuzD,GAAyB,IAAIxmD,GAAO/M,IAAQyzD,GAA0B1mD,CAAK,CAAC,GACzE/M;AACX;AACA,SAASyzD,GAA0B1mD,GAAO;AACtC,MAAIlI,IAAS;AACb,WAAS2nD,EAAKxsD,GAAO;AACjB,QAAIA,KAAS,OAAOA,KAAS;AACzB,UAAI,MAAM,QAAQA,CAAK;AACnB,YAAI,OAAOA,EAAM,CAAC,KAAK;AACnB,UAAK6E,MACDA,IAAS,CAAA,IACbA,EAAO,KAAK7E,CAAK;AAAA;AAGjB,mBAAS,IAAI,GAAG,IAAIA,EAAM,QAAQ;AAC9B,YAAAwsD,EAAKxsD,EAAM,CAAC,CAAC;AAAA;AAIrB,iBAAS+mD,KAAQ/mD;AACb,UAAAwsD,EAAKxsD,EAAM+mD,CAAI,CAAC;AAAA,EAGhC;AACA,SAAAyF,EAAKz/C,CAAK,GACHlI;AACX;AACA,SAASmuD,GAAW55B,GAAK+5B,GAAWC,GAAOC,GAAe;AACtD,MAAI,OAAOF,KAAa;AACpB,WAAO,EAAE,KAAK/5B,EAAI,eAAe+5B,CAAS,EAAC;AAC/C,MAAIA,EAAU,YAAY;AACtB,WAAO,EAAE,KAAKA,EAAS;AAC3B,MAAIA,EAAU,OAAOA,EAAU,IAAI,YAAY;AAC3C,WAAOA;AACX,MAAI5qC,IAAU4qC,EAAU,CAAC,GAAGO;AAC5B,MAAI,OAAOnrC,KAAW;AAClB,UAAM,IAAI,WAAW,oCAAoC;AAC7D,MAAI8qC,MAAkBK,IAAaF,GAAqBH,CAAa,MACjEK,EAAW,QAAQP,CAAS,IAAI;AAChC,UAAM,IAAI,WAAW,8GAA8G;AACvI,MAAIhiB,IAAQ5oB,EAAQ,QAAQ,GAAG;AAC/B,EAAI4oB,IAAQ,MACRiiB,IAAQ7qC,EAAQ,MAAM,GAAG4oB,CAAK,GAC9B5oB,IAAUA,EAAQ,MAAM4oB,IAAQ,CAAC;AAErC,MAAI0gB,GACAhC,IAAOuD,IAAQh6B,EAAI,gBAAgBg6B,GAAO7qC,CAAO,IAAI6Q,EAAI,cAAc7Q,CAAO,GAC9Exb,IAAQomD,EAAU,CAAC,GAAGt/C,IAAQ;AAClC,MAAI9G,KAAS,OAAOA,KAAS,YAAYA,EAAM,YAAY,QAAQ,CAAC,MAAM,QAAQA,CAAK,GAAG;AACtF,IAAA8G,IAAQ;AACR,aAASpC,KAAQ1E;AACb,UAAIA,EAAM0E,CAAI,KAAK,MAAM;AACrB,YAAI0/B,IAAQ1/B,EAAK,QAAQ,GAAG;AAC5B,QAAI0/B,IAAQ,IACR0e,EAAI,eAAep+C,EAAK,MAAM,GAAG0/B,CAAK,GAAG1/B,EAAK,MAAM0/B,IAAQ,CAAC,GAAGpkC,EAAM0E,CAAI,CAAC,IACtEA,KAAQ,WAAWo+C,EAAI,QAC5BA,EAAI,MAAM,UAAU9iD,EAAM0E,CAAI,IAE9Bo+C,EAAI,aAAap+C,GAAM1E,EAAM0E,CAAI,CAAC;AAAA,MAC1C;AAAA,EACR;AACA,WAAS1P,IAAI8R,GAAO9R,IAAIoxD,EAAU,QAAQpxD,KAAK;AAC3C,QAAIiL,IAAQmmD,EAAUpxD,CAAC;AACvB,QAAIiL,MAAU,GAAG;AACb,UAAIjL,IAAIoxD,EAAU,SAAS,KAAKpxD,IAAI8R;AAChC,cAAM,IAAI,WAAW,wDAAwD;AACjF,aAAO,EAAE,KAAAg8C,GAAK,YAAYA,EAAG;AAAA,IACjC,OACK;AACD,UAAI,EAAE,KAAKnlD,GAAO,YAAYipD,EAAY,IAAKX,GAAW55B,GAAKpsB,GAAOomD,GAAOC,CAAa;AAE1F,UADAxD,EAAI,YAAYnlD,CAAK,GACjBipD,GAAc;AACd,YAAI9B;AACA,gBAAM,IAAI,WAAW,wBAAwB;AACjD,QAAAA,IAAa8B;AAAA,MACjB;AAAA,IACJ;AAAA,EACJ;AACA,SAAO,EAAE,KAAA9D,GAAK,YAAAgC,EAAU;AAC5B;ACh3Ge,SAAS+B,GAAgBp0D,GAAS;AAG/C,QAAMyX,IAAO;AAEb,EAAAA,EAAK,WAAWuB;AAKhB,WAASA,EAASX,GAAM;AACtB,WAAO8tB,GAAW9tB,GAAM;AAAA,MACtB,GAAGZ,EAAK,KAAK,UAAU;AAAA,MACvB,GAAGzX;AAAA;AAAA;AAAA;AAAA,MAIH,YAAYyX,EAAK,KAAK,sBAAsB,KAAK,CAAA;AAAA,IACvD,CAAK;AAAA,EACH;AACF;ACzCA,IAAI48C,KAAc,CAACC,MAAQ;AACzB,QAAM,UAAUA,CAAG;AACrB,GACIC,KAAgB,CAAC7iD,GAAK8iD,GAAQF,MAAQE,EAAO,IAAI9iD,CAAG,KAAK2iD,GAAY,YAAYC,CAAG,GACpF9P,IAAe,CAAC9yC,GAAK8iD,GAAQC,OAAYF,GAAc7iD,GAAK8iD,GAAQ,yBAAyB,GAAGC,IAASA,EAAO,KAAK/iD,CAAG,IAAI8iD,EAAO,IAAI9iD,CAAG,IAC1I4yC,KAAe,CAAC5yC,GAAK8iD,GAAQh0D,MAAUg0D,EAAO,IAAI9iD,CAAG,IAAI2iD,GAAY,mDAAmD,IAAIG,aAAkB,UAAUA,EAAO,IAAI9iD,CAAG,IAAI8iD,EAAO,IAAI9iD,GAAKlR,CAAK,GAC/L+jD,KAAe,CAAC7yC,GAAK8iD,GAAQh0D,GAAOk0D,OAAYH,GAAc7iD,GAAK8iD,GAAQ,wBAAwB,GAAsCA,EAAO,IAAI9iD,GAAKlR,CAAK,GAAGA,IACjKm0D,IAAQC,IAAUC,IAAaC,IAAcC,IAAUC,IAAmBC,IAAiBC,IAASC,IAAeC,IAAeC,IAAeC,IAAWC,IAAaC,IAAqBC,IAAqBC,IAAaC,IAAoBC,IAAkBC,IAAWC;AAGrR,MAAMC,GAAa;AACnB;AACA,MAAMC,GAAM;AAAA,EACV,cAAc;AACZ,SAAK,WAAW,CAAA,GAChB,KAAK,OAAO,MACH,KAAK,SAAS,QAEvB,KAAK,MAAM,MACF,KAAK,SAAS,GAAG,EAAE,GAE5B,KAAK,OAAO,CAACllD,MAAS;AACpB,WAAK,IAAG,GAAI,KAAKA,CAAI;AAAA,IACvB,GACA,KAAK,OAAO,CAACA,MAAS;AACpB,WAAK,SAAS,KAAKA,CAAI;AAAA,IACzB,GACA,KAAK,QAAQ,MAAM;AACjB,YAAMrB,IAAK,KAAK,SAAS,IAAG;AAC5B,UAAI,CAACA,EAAI,OAAMg0C,GAAa;AAC5B,aAAOh0C;AAAA,IACT;AAAA,EACF;AACF;AACA,MAAMwmD,WAA2BF,GAAa;AAAA,EAC5C,YAAYlpD,GAAM/C,GAASyD,GAAO;AAChC,UAAK,GACL,KAAK,OAAOV,GACZ,KAAK,UAAU/C,GACf,KAAK,QAAQyD;AAAA,EACf;AAAA,EACA,KAAKuD,MAAS8I,GAAM;AAClB,SAAK,QAAQ,KAAK9I,GAAM,GAAG8I,CAAI;AAAA,EACjC;AAAA,EACA,MAAM;AACJ,WAAO,KAAK,QAAQ,IAAG;AAAA,EACzB;AAAA,EACA,OAAO,OAAO/M,GAAM/C,GAASyD,GAAO;AAClC,WAAO,IAAI0oD,GAAmBppD,GAAM/C,GAASyD,CAAK;AAAA,EACpD;AACF;AACA,MAAM2oD,KAAe,cAA2BF,GAAM;AAAA;AAAA,EAEpD,YAAY/d,GAAQ;AAClB,UAAK,GACLqM,GAAa,MAAMqQ,EAAM,GACzBrQ,GAAa,MAAMsQ,EAAQ,GAC3BtQ,GAAa,MAAMuQ,EAAW,GAC9BvQ,GAAa,MAAMwQ,EAAY,GAC/BxQ,GAAa,MAAMyQ,EAAQ,GAC3BzQ,GAAa,MAAM0Q,EAAiB,GACpC1Q,GAAa,MAAM2Q,EAAe,GAClC1Q,GAAa,MAAMoQ,IAAQ7L,GAAK,IAAI,GACpCvE,GAAa,MAAMqQ,IAAU,CAAC9jD,MAASA,EAAK,MAAM,GAClDyzC,GAAa,MAAMsQ,IAAa,CAAC5oD,GAAGC,MAAM;AACxC,UAAIs4C,EAAa,MAAMoQ,EAAQ,EAAE,KAAK,MAAM3oD,CAAC,KAAKu4C,EAAa,MAAMoQ,EAAQ,EAAE,KAAK,MAAM1oD,CAAC,KAAK48C,GAAK,QAAQ78C,EAAE,OAAOC,EAAE,KAAK;AAC3H,eAAO,KAAK,OAAO,KAAKD,EAAE,OAAOC,EAAE,MAAMD,EAAE,KAAK;AAAA,IAEpD,CAAC,GACDs4C,GAAa,MAAMuQ,IAAc,CAAChkD,MAAS;AACzC,YAAMzL,IAAS,OAAO,OAAO;AAAA,QAC3B,GAAG,KAAK,OAAO;AAAA,QACf,GAAG,KAAK,OAAO;AAAA,MACvB,CAAO,EAAE,KAAK,CAACi3C,MACMA,EAAE,KACH,cAAc,MAAMxrC,CAAI,CACrC;AACD,UAAI,CAACzL,EAAQ,OAAMq+C,GAAiB5yC,CAAI;AACxC,aAAOzL;AAAA,IACT,CAAC,GACDk/C,GAAa,MAAMwQ,IAAU,CAACjkD,MAAS;AACrC,YAAMjE,IAAO23C,EAAa,MAAMsQ,EAAY,EAAE,KAAK,MAAMhkD,CAAI;AAE7D,MADajE,EAAK,KACb,cAAc,OAAO,MAAMiE,GAAMjE,CAAI;AAAA,IAC5C,CAAC,GACD,KAAK,aAAa,CAACiE,GAAMoyC,GAAU31C,OACjC,KAAK,SAAS21C,GAAU31C,CAAK,GAC7B,KAAK,KAAKuD,EAAK,QAAQ,GAChB,OAET,KAAK,WAAW,CAACoyC,GAAU31C,OACzB,KAAK,KAAK0oD,GAAmB,OAAO/S,GAAU,CAAA,GAAI31C,CAAK,CAAC,GACjD,OAETg3C,GAAa,MAAMyQ,IAAmB,MAAM;AAC1C,MAAAzQ,GAAa,MAAMoQ,IAAQ7L,GAAK,IAAI;AACpC,YAAM57C,IAAU,KAAK,MAAK;AAC1B,aAAOs3C,EAAa,MAAMyQ,EAAe,EAAE,KAAK,MAAM/nD,EAAQ,MAAMA,EAAQ,OAAOA,EAAQ,OAAO;AAAA,IACpG,CAAC,GACD,KAAK,YAAY,MAAM;AACrB,UAAI;AACF,QAAAs3C,EAAa,MAAMwQ,EAAiB,EAAE,KAAK,IAAI;AAAA,MACjD,SAAS5lD,GAAG;AACV,gBAAQ,MAAMA,CAAC;AAAA,MACjB;AACA,aAAO;AAAA,IACT,GACAm1C,GAAa,MAAM0Q,IAAiB,CAAC/R,GAAU31C,GAAOzD,MAAY;AAChE,YAAMgH,IAAOoyC,EAAS,cAAc31C,GAAOzD,GAAS06C,EAAa,MAAMmQ,EAAM,CAAC;AAC9E,UAAI,CAAC7jD,EAAM,OAAMmyC,GAAuBC,GAAU31C,GAAOzD,CAAO;AAChE,kBAAK,KAAKgH,CAAI,GACPA;AAAA,IACT,CAAC,GACD,KAAK,UAAU,CAACoyC,GAAU31C,GAAOzD,MAAY;AAC3C,UAAI;AACF,QAAA06C,EAAa,MAAMyQ,EAAe,EAAE,KAAK,MAAM/R,GAAU31C,GAAOzD,CAAO;AAAA,MACzE,SAASsF,GAAG;AACV,gBAAQ,MAAMA,CAAC;AAAA,MACjB;AACA,aAAO;AAAA,IACT,GACA,KAAK,WAAW,CAACggD,GAAU7hD,MAAU;AACnC,YAAM6pC,IAAOgY,EAAS,OAAO7hD,CAAK;AAClC,aAAAg3C,GAAa,MAAMoQ,IAAQvd,EAAK,SAASoN,EAAa,MAAMmQ,EAAM,CAAC,CAAC,GAC7D;AAAA,IACT,GACA,KAAK,YAAY,CAACvF,OAChB7K,GAAa,MAAMoQ,IAAQvF,EAAS,cAAc5K,EAAa,MAAMmQ,EAAM,CAAC,CAAC,GACtE,OAET,KAAK,UAAU,CAACjvD,MAAS;AACvB,UAAI;AACF,cAAMywD,IAAa,KAAK,IAAG;AAC3B,YAAI,CAACA,EAAY,OAAM1S,GAAa;AACpC,cAAM2S,IAAWD,EAAW,IAAG,GACzBE,IAAW,KAAK,OAAO,KAAK3wD,GAAM8+C,EAAa,MAAMmQ,EAAM,CAAC;AAClE,YAAI,CAACyB;AACH,iBAAAD,EAAW,KAAKE,CAAQ,GACjB;AAET,cAAM3V,IAAS8D,EAAa,MAAMqQ,EAAW,EAAE,KAAK,MAAMuB,GAAUC,CAAQ;AAC5E,eAAI3V,KACFyV,EAAW,KAAKzV,CAAM,GACf,SAETyV,EAAW,KAAKC,GAAUC,CAAQ,GAC3B;AAAA,MACT,SAASjnD,GAAG;AACV,uBAAQ,MAAMA,CAAC,GACR;AAAA,MACT;AAAA,IACF,GACA,KAAK,QAAQ,MAAM;AACjB,UAAIwqB;AACJ;AACE,QAAAA,IAAM4qB,EAAa,MAAMwQ,EAAiB,EAAE,KAAK,IAAI;AAAA,aAChD,KAAK,KAAI;AAChB,aAAOp7B;AAAA,IACT,GACA,KAAK,OAAO,CAACuC,IAAQ,QACnB,CAACA,CAAK,EAAE,OAAO,QAAQ,CAACrrB,MAAS0zC,EAAa,MAAMuQ,EAAQ,EAAE,KAAK,MAAMjkD,CAAI,CAAC,GACvE,OAET,KAAK,QAAQ,MAAM,KAAK,MAAK,GAC7B,KAAK,MAAM,CAACwlD,GAAQlpD,MAAa;AAC/B,YAAMiL,IAAOi+C,EAAO;AAAA,QAClBA,EAAO,MAAMlpD,CAAQ;AAAA,QACrBA;AAAA,MACR;AACM,kBAAK,KAAKiL,CAAI,GACP;AAAA,IACT,GACA,KAAK,SAAS4/B;AAAA,EAChB;AACF;AACA0c,KAAS,oBAAI,QAAO;AACpBC,KAAW,oBAAI,QAAO;AACtBC,KAAc,oBAAI,QAAO;AACzBC,KAAe,oBAAI,QAAO;AAC1BC,KAAW,oBAAI,QAAO;AACtBC,KAAoB,oBAAI,QAAO;AAC/BC,KAAkB,oBAAI,QAAO;AAC7BiB,GAAa,SAAS,CAACje,GAAQqe,MAAW;AACxC,QAAM/mD,IAAQ,IAAI2mD,GAAaje,CAAM;AACrC,SAAO,CAACvyC,OACN6J,EAAM,IAAI+mD,GAAQ5wD,CAAI,GACf6J,EAAM,MAAK;AAEtB;AACA,IAAIgnD,KAAcL;AAClB,MAAMM,KAA0B,cAAsCT,GAAa;AAAA,EACjF,YAAYlpD,GAAM2sB,GAAUh5B,GAAOi2D,IAAQ,CAAA,GAAI;AAC7C,UAAK,GACL,KAAK,OAAO5pD,GACZ,KAAK,WAAW2sB,GAChB,KAAK,QAAQh5B,GACb,KAAK,QAAQi2D,GACb,KAAK,OAAO,CAAC3lD,MAAS8I,MAAS;AAC7B,MAAK,KAAK,aAAU,KAAK,WAAW,CAAA,IACpC,KAAK,SAAS,KAAK9I,GAAM,GAAG8I,CAAI;AAAA,IAClC,GACA,KAAK,MAAM,MAAM,KAAK,UAAU,IAAG;AAAA,EACrC;AACF;AACA48C,GAAwB,SAAS,CAAC3pD,GAAM2sB,GAAUh5B,GAAOi2D,IAAQ,OAAO,IAAID,GAAwB3pD,GAAM2sB,GAAUh5B,GAAOi2D,CAAK;AAChI,IAAIC,KAAyBF;AAC7B,MAAMG,KAAa,CAACra,MAAM,OAAO,UAAU,eAAe,KAAKA,GAAG,MAAM,GAClEsa,KAAmB,cAA+BZ,GAAM;AAAA;AAAA,EAE5D,YAAY/d,GAAQ;AAClB,UAAK,GACLqM,GAAa,MAAM4Q,EAAO,GAC1B5Q,GAAa,MAAM6Q,EAAa,GAChC7Q,GAAa,MAAM8Q,EAAa,GAChC9Q,GAAa,MAAM+Q,EAAa,GAChC/Q,GAAa,MAAMgR,EAAS,GAC5BhR,GAAa,MAAMiR,EAAW,GAC9BjR,GAAa,MAAMkR,EAAmB,GACtClR,GAAa,MAAMmR,EAAmB,GACtCnR,GAAa,MAAMoR,EAAW,GAC9BpR,GAAa,MAAMqR,EAAkB,GACrCrR,GAAa,MAAMsR,EAAgB,GACnCtR,GAAa,MAAMuR,EAAS,GAC5BvR,GAAa,MAAMwR,EAAU,GAC7BvR,GAAa,MAAM2Q,IAASpM,GAAK,IAAI,GACrCvE,GAAa,MAAM4Q,IAAe,CAACrkD,MAAS;AAC1C,YAAMzL,IAAS,OAAO,OAAO;AAAA,QAC3B,GAAG,KAAK,OAAO;AAAA,QACf,GAAG,KAAK,OAAO;AAAA,MACvB,CAAO,EAAE,KAAK,CAACi3C,MACMA,EAAE,KACH,WAAW,MAAMxrC,CAAI,CAClC;AACD,UAAI,CAACzL,EAAQ,OAAMs+C,GAAqB7yC,EAAK,IAAI;AACjD,aAAOzL;AAAA,IACT,CAAC,GACDk/C,GAAa,MAAM6Q,IAAe,CAACtkD,MACpB0zC,EAAa,MAAM2Q,EAAa,EAAE,KAAK,MAAMrkD,CAAI,EAC5C,KACN,WAAW,OAAO,MAAMA,CAAI,CACzC,GACDyzC,GAAa,MAAM8Q,IAAe,CAACje,GAAMtmC,MAC1B0zC,EAAa,MAAM2Q,EAAa,EAAE,KAAK,MAAM/d,CAAI,EAC5C,KACN,WAAW,OAAO,MAAMA,GAAMtmC,CAAI,CAC/C,GACDyzC,GAAa,MAAM+Q,IAAW,CAACxkD,MAAS;AACtC,YAAM,EAAE,OAAAk4C,EAAK,IAAKl4C,GACZ+lD,IAAc,CAACva,MAAMA,EAAE,KAAK,KAAK,YAAY;AAGnD,MAFY,CAAC,GAAG0M,CAAK,EAAE,KAAK,CAAC/8C,GAAGC,MAAM2qD,EAAY5qD,CAAC,IAAI4qD,EAAY3qD,CAAC,CAAC,EAC3C,MAAM,CAACkrC,MAAS,CAACoN,EAAa,MAAM6Q,EAAa,EAAE,KAAK,MAAMje,GAAMtmC,CAAI,CAAC,KAChF0zC,EAAa,MAAM4Q,EAAa,EAAE,KAAK,MAAMtkD,CAAI,GACpEk4C,EAAM,QAAQ,CAAC5R,MAASoN,EAAa,MAAMsR,EAAU,EAAE,KAAK,MAAM1e,CAAI,CAAC;AAAA,IACzE,CAAC,GACDmN,GAAa,MAAMgR,IAAa,CAAC/nD,GAAOX,MAAS;AAE/C,UADIW,EAAM,SAASX,KACfW,EAAM,UAAU,WAAW,EAAG,QAAOA;AACzC,YAAMspD,IAAa,CAACC,MAAU;AAC5B,YAAIA,EAAM,SAASlqD,EAAM,QAAOkqD;AAChC,YAAIA,EAAM,UAAU,WAAW,EAAG,QAAO;AACzC,cAAM,CAACC,CAAU,IAAID,EAAM;AAC3B,eAAKC,IACEF,EAAWE,CAAU,IADJ;AAAA,MAE1B,GACMjlD,IAAS+kD,EAAWtpD,CAAK;AAC/B,UAAI,CAACuE,EAAQ,QAAOvE;AACpB,YAAMw9C,IAAMj5C,EAAO,WAAW,CAAC,GAAGA,EAAO,QAAQ,IAAI,QAC/CjB,IAAO,EAAE,GAAGtD,GAAO,UAAUw9C,EAAG;AACtC,aAAAl6C,EAAK,WAAWk6C,GAChBj5C,EAAO,WAAW,CAACjB,CAAI,GAChBiB;AAAA,IACT,CAAC,GACDwyC,GAAa,MAAMiR,IAAqB,CAAC1kD,MAAS;AAChD,YAAM,EAAE,UAAA0oB,EAAQ,IAAK1oB;AACrB,aAAK0oB,MACL1oB,EAAK,WAAW0oB,EAAS,OAAO,CAACmkB,GAAcnwC,GAAO/F,MAAU;AAC9D,YAAIA,MAAU,EAAG,QAAO,CAAC+F,CAAK;AAC9B,cAAMvL,IAAO07C,EAAa,GAAG,EAAE;AAC/B,YAAI17C,KAAQA,EAAK,UAAUuL,EAAM,QAAQ;AACvC,UAAAA,IAAQg3C,EAAa,MAAM+Q,EAAW,EAAE,KAAK,MAAM/nD,GAAOvL,EAAK,IAAI;AACnE,gBAAM,EAAE,UAAUg1D,GAAc,GAAGC,EAAQ,IAAK1pD,GAC1C,EAAE,UAAU2pD,GAAc,GAAGC,EAAQ,IAAKn1D;AAChD,cAAIuL,EAAM,SAASvL,EAAK,QAAQg1D,KAAgBE,KAAgB,KAAK,UAAUD,CAAQ,MAAM,KAAK,UAAUE,CAAQ,GAAG;AACrH,kBAAM1yD,IAAO;AAAA,cACX,GAAG0yD;AAAA,cACH,UAAU,CAAC,GAAGD,GAAc,GAAGF,CAAY;AAAA,YACzD;AACY,mBAAOtZ,EAAa,MAAM,GAAG,EAAE,EAAE,OAAO6G,EAAa,MAAMgR,EAAmB,EAAE,KAAK,MAAM9wD,CAAI,CAAC;AAAA,UAClG;AAAA,QACF;AACA,eAAOi5C,EAAa,OAAOnwC,CAAK;AAAA,MAClC,GAAG,CAAA,CAAE,IACEsD;AAAA,IACT,CAAC,GACDyzC,GAAa,MAAMkR,IAAqB,CAACvoD,MAAY;AACnD,YAAM4D,IAAO;AAAA,QACX,GAAG5D,EAAQ;AAAA,QACX,MAAMA,EAAQ;AAAA,MACtB;AACM,aAAIA,EAAQ,aAAU4D,EAAK,WAAW5D,EAAQ,WAC1CA,EAAQ,UAAO4D,EAAK,QAAQ5D,EAAQ,QACjC4D;AAAA,IACT,CAAC,GACD,KAAK,WAAW,CAACjE,GAAMrM,GAAOi2D,OAC5B,KAAK,KAAKC,GAAuB,OAAO7pD,GAAM,QAAQrM,GAAOi2D,CAAK,CAAC,GAC5D,OAETlS,GAAa,MAAMmR,IAAa,CAACxoD,GAASmqD,MAAW;AACnD,UAAIC,IAAc,IACdC,IAAY;AAChB,YAAM/9B,IAAWtsB,EAAQ;AACzB,UAAIo7C,IAAQ,IACRrmD,IAAO;AACX,YAAMu1D,IAAY,CAAC1mD,MAAS;AAC1B,QAAKA,KACLA,EAAK,QAAQ,CAACtD,GAAO/F,MAAU;AAC7B,UAAI+F,EAAM,SAAS,UAAUA,EAAM,UAC7B86C,IAAQ,MAAGA,IAAQ7gD,IACvBxF,IAAOwF;AAAA,QAEX,CAAC;AAAA,MACH;AACA,UAAI+xB,GAAU;AACZ,QAAAg+B,EAAUh+B,CAAQ;AAClB,cAAMi+B,IAAYj+B,IAAWv3B,CAAI,GAC3B+0D,IAAax9B,IAAW8uB,CAAK;AACnC,YAAImP,KAAaA,EAAU,MAAM,SAAS,GAAG,GAAG;AAC9C,gBAAM/xD,IAAO+xD,EAAU,OACjB3sD,IAAUpF,EAAK,QAAO;AAC5B,UAAA6xD,IAAY7xD,EAAK,MAAMoF,EAAQ,MAAM,GACrC2sD,EAAU,QAAQ3sD;AAAA,QACpB;AACA,YAAIksD,KAAcA,EAAW,MAAM,WAAW,GAAG,GAAG;AAClD,gBAAMtxD,IAAOsxD,EAAW,OAClBlsD,IAAUpF,EAAK,UAAS;AAC9B,UAAA4xD,IAAc5xD,EAAK,MAAM,GAAGA,EAAK,SAASoF,EAAQ,MAAM,GACxDksD,EAAW,QAAQlsD;AAAA,QACrB;AAAA,MACF;AACA,MAAIwsD,EAAY,UAAQ9S,EAAa,MAAMoR,EAAgB,EAAE,KAAK,MAAM,QAAQ,QAAQ0B,CAAW;AACnG,YAAMjyD,IAASgyD,EAAM;AACrB,aAAIE,EAAU,UAAQ/S,EAAa,MAAMoR,EAAgB,EAAE,KAAK,MAAM,QAAQ,QAAQ2B,CAAS,GACxFlyD;AAAA,IACT,CAAC,GACDk/C,GAAa,MAAMoR,IAAoB,CAAC+B,IAAO,OAAU;AACvD,YAAMxqD,IAAU,KAAK,MAAK,GACpBmqD,IAAS,MAAM7S,EAAa,MAAMoR,EAAgB,EAAE,KAAK,MAAM1oD,EAAQ,MAAMA,EAAQ,UAAUA,EAAQ,OAAOA,EAAQ,KAAK;AACjI,aAAIwqD,IAAalT,EAAa,MAAMkR,EAAW,EAAE,KAAK,MAAMxoD,GAASmqD,CAAM,IACpEA,EAAM;AAAA,IACf,CAAC,GACD,KAAK,YAAY,OACf7S,EAAa,MAAMmR,EAAkB,EAAE,KAAK,IAAI,GACzC,OAETpR,GAAa,MAAMqR,IAAkB,CAAC/oD,GAAM2sB,GAAUh5B,GAAOi2D,MAAU;AACrE,YAAMvpD,IAAUwpD,GAAuB,OAAO7pD,GAAM2sB,GAAUh5B,GAAOi2D,CAAK,GACpE3lD,IAAO0zC,EAAa,MAAMgR,EAAmB,EAAE,KAAK,MAAMhR,EAAa,MAAMiR,EAAmB,EAAE,KAAK,MAAMvoD,CAAO,CAAC;AAC3H,kBAAK,KAAK4D,CAAI,GACPA;AAAA,IACT,CAAC,GACD,KAAK,UAAU,CAACjE,GAAM2sB,GAAUh5B,GAAOi2D,OACrCjS,EAAa,MAAMoR,EAAgB,EAAE,KAAK,MAAM/oD,GAAM2sB,GAAUh5B,GAAOi2D,CAAK,GACrE,OAETlS,GAAa,MAAMsR,IAAW,CAACze,GAAMvqC,GAAMrM,GAAOi2D,MACnCrf,EAAK,QAAQoN,EAAa,MAAM0Q,EAAO,CAAC,IACpC,QACjB3Q,GAAa,MAAM2Q,IAAS9d,EAAK,SAASoN,EAAa,MAAM0Q,EAAO,CAAC,CAAC,GAC/D,KAAK,SAASroD,GAAMrM,GAAO,EAAE,GAAGi2D,GAAO,QAAQ,IAAM,EAC7D,GACDlS,GAAa,MAAMuR,IAAY,CAAC1e,MAAS;AAEvC,MADaA,EAAK,QAAQoN,EAAa,MAAM0Q,EAAO,CAAC,MAErD3Q,GAAa,MAAM2Q,IAAS9d,EAAK,KAAK,cAAcoN,EAAa,MAAM0Q,EAAO,CAAC,CAAC,GAChF1Q,EAAa,MAAMmR,EAAkB,EAAE,KAAK,MAAM,EAAI;AAAA,IACxD,CAAC,GACD,KAAK,WAAW,CAACve,GAAMvqC,GAAMrM,GAAOi2D,OAClCjS,EAAa,MAAMqR,EAAS,EAAE,KAAK,MAAMze,GAAMvqC,GAAMrM,GAAOi2D,CAAK,GAC1D,OAET,KAAK,YAAY,CAACrf,OAChBoN,EAAa,MAAMsR,EAAU,EAAE,KAAK,MAAM1e,CAAI,GACvC,OAET,KAAK,QAAQ,MAAM;AACjB,UAAIxd,IAAM;AACV;AACE,QAAAA,IAAM4qB,EAAa,MAAMmR,EAAkB,EAAE,KAAK,IAAI;AAAA,aACjD,KAAK,KAAI;AAChB,aAAO/7B;AAAA,IACT,GACA,KAAK,OAAO,CAACuC,MACPw6B,GAAWx6B,CAAK,KAClBA,EAAM,QAAQ,CAACrrB,MAAS;AACtB,MAAA0zC,EAAa,MAAM8Q,EAAS,EAAE,KAAK,MAAMxkD,CAAI;AAAA,IAC/C,CAAC,GACM,SAET0zC,EAAa,MAAM8Q,EAAS,EAAE,KAAK,MAAMn5B,CAAK,GACvC,OAET,KAAK,WAAW,CAACm6B,MAAWA,EAAO,UAAU,KAAK,OAAO,GACzD,KAAK,MAAM,CAACj+C,OACV,KAAK,KAAKA,CAAI,GACP,OAET,KAAK,SAAS4/B;AAAA,EAChB;AACF;AACAid,KAAU,oBAAI,QAAO;AACrBC,KAAgB,oBAAI,QAAO;AAC3BC,KAAgB,oBAAI,QAAO;AAC3BC,KAAgB,oBAAI,QAAO;AAC3BC,KAAY,oBAAI,QAAO;AACvBC,KAAc,oBAAI,QAAO;AACzBC,KAAsB,oBAAI,QAAO;AACjCC,KAAsB,oBAAI,QAAO;AACjCC,KAAc,oBAAI,QAAO;AACzBC,KAAqB,oBAAI,QAAO;AAChCC,KAAmB,oBAAI,QAAO;AAC9BC,KAAY,oBAAI,QAAO;AACvBC,KAAa,oBAAI,QAAO;AACxBc,GAAiB,SAAS,CAAC3e,GAAQqe,MAAW;AAC5C,QAAM/mD,IAAQ,IAAIqnD,GAAiB3e,CAAM;AACzC,SAAO,CAACnuC,OACNyF,EAAM,IAAIzF,CAAO,GACVyF,EAAM,SAAS+mD,CAAM;AAEhC;AACA,IAAIqB,KAAkBf;AClatB,MAAMgB,KAAU,OACVC,KAAW,KAAK,IAAI,GAAG,EAAE;AAC/B,SAASC,GAAYrwD,GAAOgY,GAAQ;AAAE,SAAOhY,IAAQgY,IAASo4C;AAAU;AACxE,SAASE,GAAav3D,GAAO;AAAE,SAAOA,IAAQo3D;AAAS;AACvD,SAASI,GAAcx3D,GAAO;AAAE,UAAQA,KAASA,IAAQo3D,OAAYC;AAAU;AAC/E,MAAMI,KAAa,GAAGC,KAAY,GAAGC,KAAa,GAAGC,KAAW;AAKhE,MAAMC,GAAU;AAAA;AAAA;AAAA;AAAA,EAIZ,YAIAxkD,GAIAykD,GAIAC,GAAS;AACL,SAAK,MAAM1kD,GACX,KAAK,UAAUykD,GACf,KAAK,UAAUC;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,UAAU;AAAE,YAAQ,KAAK,UAAUH,MAAY;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA,EAItD,IAAI,gBAAgB;AAAE,YAAQ,KAAK,WAAWH,KAAaE,OAAe;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA,EAI7E,IAAI,eAAe;AAAE,YAAQ,KAAK,WAAWD,KAAYC,OAAe;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM3E,IAAI,gBAAgB;AAAE,YAAQ,KAAK,UAAUA,MAAc;AAAA,EAAG;AAClE;AAOA,MAAMK,GAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMV,YAIAlY,GAIAmY,IAAW,IAAO;AAGd,QAFA,KAAK,SAASnY,GACd,KAAK,WAAWmY,GACZ,CAACnY,EAAO,UAAUkY,GAAQ;AAC1B,aAAOA,GAAQ;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA,EAIA,QAAQh4D,GAAO;AACX,QAAIuE,IAAO,GAAG0C,IAAQswD,GAAav3D,CAAK;AACxC,QAAI,CAAC,KAAK;AACN,eAAS,IAAI,GAAG,IAAIiH,GAAO;AACvB,QAAA1C,KAAQ,KAAK,OAAO,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,IAAI,IAAI,CAAC;AAC9D,WAAO,KAAK,OAAO0C,IAAQ,CAAC,IAAI1C,IAAOizD,GAAcx3D,CAAK;AAAA,EAC9D;AAAA,EACA,UAAUqT,GAAK6kD,IAAQ,GAAG;AAAE,WAAO,KAAK,KAAK7kD,GAAK6kD,GAAO,EAAK;AAAA,EAAG;AAAA,EACjE,IAAI7kD,GAAK6kD,IAAQ,GAAG;AAAE,WAAO,KAAK,KAAK7kD,GAAK6kD,GAAO,EAAI;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA,EAI1D,KAAK7kD,GAAK6kD,GAAOC,GAAQ;AACrB,QAAI5zD,IAAO,GAAG6zD,IAAW,KAAK,WAAW,IAAI,GAAGC,IAAW,KAAK,WAAW,IAAI;AAC/E,aAASt2D,IAAI,GAAGA,IAAI,KAAK,OAAO,QAAQA,KAAK,GAAG;AAC5C,UAAI8R,IAAQ,KAAK,OAAO9R,CAAC,KAAK,KAAK,WAAWwC,IAAO;AACrD,UAAIsP,IAAQR;AACR;AACJ,UAAIilD,IAAU,KAAK,OAAOv2D,IAAIq2D,CAAQ,GAAGG,IAAU,KAAK,OAAOx2D,IAAIs2D,CAAQ,GAAGjkD,IAAMP,IAAQykD;AAC5F,UAAIjlD,KAAOe,GAAK;AACZ,YAAI86B,IAAQopB,IAAkBjlD,KAAOQ,IAAQ,KAAKR,KAAOe,IAAM,IAAI8jD,IAA7CA,GAClBrzD,IAASgP,IAAQtP,KAAQ2qC,IAAO,IAAI,IAAIqpB;AAC5C,YAAIJ;AACA,iBAAOtzD;AACX,YAAIkzD,IAAU1kD,MAAQ6kD,IAAQ,IAAIrkD,IAAQO,KAAO,OAAOkjD,GAAYv1D,IAAI,GAAGsR,IAAMQ,CAAK,GAClF2kD,IAAMnlD,KAAOQ,IAAQ6jD,KAAYrkD,KAAOe,IAAMqjD,KAAaE;AAC/D,gBAAIO,IAAQ,IAAI7kD,KAAOQ,IAAQR,KAAOe,OAClCokD,KAAOZ,KACJ,IAAIC,GAAUhzD,GAAQ2zD,GAAKT,CAAO;AAAA,MAC7C;AACA,MAAAxzD,KAAQg0D,IAAUD;AAAA,IACtB;AACA,WAAOH,IAAS9kD,IAAM9O,IAAO,IAAIszD,GAAUxkD,IAAM9O,GAAM,GAAG,IAAI;AAAA,EAClE;AAAA;AAAA;AAAA;AAAA,EAIA,QAAQ8O,GAAK0kD,GAAS;AAClB,QAAIxzD,IAAO,GAAG0C,IAAQswD,GAAaQ,CAAO,GACtCK,IAAW,KAAK,WAAW,IAAI,GAAGC,IAAW,KAAK,WAAW,IAAI;AACrE,aAASt2D,IAAI,GAAGA,IAAI,KAAK,OAAO,QAAQA,KAAK,GAAG;AAC5C,UAAI8R,IAAQ,KAAK,OAAO9R,CAAC,KAAK,KAAK,WAAWwC,IAAO;AACrD,UAAIsP,IAAQR;AACR;AACJ,UAAIilD,IAAU,KAAK,OAAOv2D,IAAIq2D,CAAQ,GAAGhkD,IAAMP,IAAQykD;AACvD,UAAIjlD,KAAOe,KAAOrS,KAAKkF,IAAQ;AAC3B,eAAO;AACX,MAAA1C,KAAQ,KAAK,OAAOxC,IAAIs2D,CAAQ,IAAIC;AAAA,IACxC;AACA,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQxR,GAAG;AACP,QAAIsR,IAAW,KAAK,WAAW,IAAI,GAAGC,IAAW,KAAK,WAAW,IAAI;AACrE,aAAS,IAAI,GAAG9zD,IAAO,GAAG,IAAI,KAAK,OAAO,QAAQ,KAAK,GAAG;AACtD,UAAIsP,IAAQ,KAAK,OAAO,CAAC,GAAG4kD,IAAW5kD,KAAS,KAAK,WAAWtP,IAAO,IAAIm0D,IAAW7kD,KAAS,KAAK,WAAW,IAAItP,IAC/G+zD,IAAU,KAAK,OAAO,IAAIF,CAAQ,GAAGG,IAAU,KAAK,OAAO,IAAIF,CAAQ;AAC3E,MAAAvR,EAAE2R,GAAUA,IAAWH,GAASI,GAAUA,IAAWH,CAAO,GAC5Dh0D,KAAQg0D,IAAUD;AAAA,IACtB;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS;AACL,WAAO,IAAIN,GAAQ,KAAK,QAAQ,CAAC,KAAK,QAAQ;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW;AACP,YAAQ,KAAK,WAAW,MAAM,MAAM,KAAK,UAAU,KAAK,MAAM;AAAA,EAClE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,OAAOvyD,GAAG;AACb,WAAOA,KAAK,IAAIuyD,GAAQ,QAAQ,IAAIA,GAAQvyD,IAAI,IAAI,CAAC,GAAG,CAACA,GAAG,CAAC,IAAI,CAAC,GAAG,GAAGA,CAAC,CAAC;AAAA,EAC9E;AACJ;AAIAuyD,GAAQ,QAAQ,IAAIA,GAAQ,EAAE;AAS9B,MAAMW,GAAQ;AAAA;AAAA;AAAA;AAAA,EAIV,YAAYC,GAIZC,GAKAjoC,IAAO,GAIPokB,IAAK4jB,IAAOA,EAAK,SAAS,GAAG;AACzB,SAAK,SAASC,GACd,KAAK,OAAOjoC,GACZ,KAAK,KAAKokB,GACV,KAAK,QAAQ4jB,KAAQ,CAAA,GACrB,KAAK,UAAU,EAAEA,KAAQC;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,OAAO;AAAE,WAAO,KAAK;AAAA,EAAO;AAAA;AAAA;AAAA;AAAA,EAIhC,MAAMjoC,IAAO,GAAGokB,IAAK,KAAK,KAAK,QAAQ;AACnC,WAAO,IAAI2jB,GAAQ,KAAK,OAAO,KAAK,QAAQ/nC,GAAMokB,CAAE;AAAA,EACxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,UAAUnoC,GAAKisD,GAAS;AACpB,IAAK,KAAK,YACN,KAAK,QAAQ,KAAK,MAAM,MAAK,GAC7B,KAAK,SAAS,KAAK,UAAU,KAAK,OAAO,MAAK,GAC9C,KAAK,UAAU,KAEnB,KAAK,KAAK,KAAK,MAAM,KAAKjsD,CAAG,GACzBisD,KAAW,QACX,KAAK,UAAU,KAAK,MAAM,SAAS,GAAGA,CAAO;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,cAAcC,GAAS;AACnB,aAASh3D,IAAI,GAAGi3D,IAAY,KAAK,MAAM,QAAQj3D,IAAIg3D,EAAQ,MAAM,QAAQh3D,KAAK;AAC1E,UAAIk3D,IAAOF,EAAQ,UAAUh3D,CAAC;AAC9B,WAAK,UAAUg3D,EAAQ,MAAMh3D,CAAC,GAAGk3D,KAAQ,QAAQA,IAAOl3D,IAAIi3D,IAAYC,IAAO,MAAS;AAAA,IAC5F;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,UAAUxzD,GAAG;AACT,QAAI,KAAK;AACL,eAAS1D,IAAI,GAAGA,IAAI,KAAK,OAAO,QAAQA;AACpC,YAAI,KAAK,OAAOA,CAAC,KAAK0D;AAClB,iBAAO,KAAK,OAAO1D,KAAKA,IAAI,IAAI,KAAK,EAAE;AAAA;AAAA,EACvD;AAAA;AAAA;AAAA;AAAA,EAIA,UAAU0D,GAAGD,GAAG;AACZ,IAAK,KAAK,WACN,KAAK,SAAS,CAAA,IAClB,KAAK,OAAO,KAAKC,GAAGD,CAAC;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA,EAIA,sBAAsBuzD,GAAS;AAC3B,aAASh3D,IAAIg3D,EAAQ,KAAK,SAAS,GAAGG,IAAY,KAAK,MAAM,SAASH,EAAQ,MAAM,QAAQh3D,KAAK,GAAGA,KAAK;AACrG,UAAIk3D,IAAOF,EAAQ,UAAUh3D,CAAC;AAC9B,WAAK,UAAUg3D,EAAQ,MAAMh3D,CAAC,EAAE,OAAM,GAAIk3D,KAAQ,QAAQA,IAAOl3D,IAAIm3D,IAAYD,IAAO,IAAI,MAAS;AAAA,IACzG;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAIA,SAAS;AACL,QAAIE,IAAU,IAAIR;AAClB,WAAAQ,EAAQ,sBAAsB,IAAI,GAC3BA;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI9lD,GAAK6kD,IAAQ,GAAG;AAChB,QAAI,KAAK;AACL,aAAO,KAAK,KAAK7kD,GAAK6kD,GAAO,EAAI;AACrC,aAASn2D,IAAI,KAAK,MAAMA,IAAI,KAAK,IAAIA;AACjC,MAAAsR,IAAM,KAAK,MAAMtR,CAAC,EAAE,IAAIsR,GAAK6kD,CAAK;AACtC,WAAO7kD;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,UAAUA,GAAK6kD,IAAQ,GAAG;AAAE,WAAO,KAAK,KAAK7kD,GAAK6kD,GAAO,EAAK;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA,EAIjE,KAAK7kD,GAAK6kD,GAAOC,GAAQ;AACrB,QAAIL,IAAU;AACd,aAAS/1D,IAAI,KAAK,MAAMA,IAAI,KAAK,IAAIA,KAAK;AACtC,UAAI8K,IAAM,KAAK,MAAM9K,CAAC,GAAG8C,IAASgI,EAAI,UAAUwG,GAAK6kD,CAAK;AAC1D,UAAIrzD,EAAO,WAAW,MAAM;AACxB,YAAIu0D,IAAO,KAAK,UAAUr3D,CAAC;AAC3B,YAAIq3D,KAAQ,QAAQA,IAAOr3D,KAAKq3D,IAAO,KAAK,IAAI;AAC5C,UAAAr3D,IAAIq3D,GACJ/lD,IAAM,KAAK,MAAM+lD,CAAI,EAAE,QAAQv0D,EAAO,OAAO;AAC7C;AAAA,QACJ;AAAA,MACJ;AACA,MAAAizD,KAAWjzD,EAAO,SAClBwO,IAAMxO,EAAO;AAAA,IACjB;AACA,WAAOszD,IAAS9kD,IAAM,IAAIwkD,GAAUxkD,GAAKykD,GAAS,IAAI;AAAA,EAC1D;AACJ;AAEA,MAAMuB,KAAY,uBAAO,OAAO,IAAI;AAYpC,MAAMC,GAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMP,SAAS;AAAE,WAAOtB,GAAQ;AAAA,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMjC,MAAMhQ,GAAO;AAAE,WAAO;AAAA,EAAM;AAAA;AAAA;AAAA;AAAA;AAAA,EAK5B,OAAO,SAASvQ,GAAQrE,GAAM;AAC1B,QAAI,CAACA,KAAQ,CAACA,EAAK;AACf,YAAM,IAAI,WAAW,iCAAiC;AAC1D,QAAI/mC,IAAOgtD,GAAUjmB,EAAK,QAAQ;AAClC,QAAI,CAAC/mC;AACD,YAAM,IAAI,WAAW,gBAAgB+mC,EAAK,QAAQ,UAAU;AAChE,WAAO/mC,EAAK,SAASorC,GAAQrE,CAAI;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAO,OAAOhnC,GAAImtD,GAAW;AACzB,QAAIntD,KAAMitD;AACN,YAAM,IAAI,WAAW,mCAAmCjtD,CAAE;AAC9D,WAAAitD,GAAUjtD,CAAE,IAAImtD,GAChBA,EAAU,UAAU,SAASntD,GACtBmtD;AAAA,EACX;AACJ;AAKA,MAAMC,GAAW;AAAA;AAAA;AAAA;AAAA,EAIb,YAIApgC,GAIAqgC,GAAQ;AACJ,SAAK,MAAMrgC,GACX,KAAK,SAASqgC;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,GAAGrgC,GAAK;AAAE,WAAO,IAAIogC,GAAWpgC,GAAK,IAAI;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA,EAInD,OAAO,KAAK9iB,GAAS;AAAE,WAAO,IAAIkjD,GAAW,MAAMljD,CAAO;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM7D,OAAO,YAAY8iB,GAAKxI,GAAMokB,GAAIvwB,GAAO;AACrC,QAAI;AACA,aAAO+0C,GAAW,GAAGpgC,EAAI,QAAQxI,GAAMokB,GAAIvwB,CAAK,CAAC;AAAA,IACrD,SACO7V,GAAG;AACN,UAAIA,aAAa65C;AACb,eAAO+Q,GAAW,KAAK5qD,EAAE,OAAO;AACpC,YAAMA;AAAA,IACV;AAAA,EACJ;AACJ;AAEA,SAAS8qD,GAAY3gC,GAAU+tB,GAAGlzC,GAAQ;AACtC,MAAI+lD,IAAS,CAAA;AACb,WAAS,IAAI,GAAG,IAAI5gC,EAAS,YAAY,KAAK;AAC1C,QAAI/rB,IAAQ+rB,EAAS,MAAM,CAAC;AAC5B,IAAI/rB,EAAM,QAAQ,SACdA,IAAQA,EAAM,KAAK0sD,GAAY1sD,EAAM,SAAS85C,GAAG95C,CAAK,CAAC,IACvDA,EAAM,aACNA,IAAQ85C,EAAE95C,GAAO4G,GAAQ,CAAC,IAC9B+lD,EAAO,KAAK3sD,CAAK;AAAA,EACrB;AACA,SAAO06C,EAAS,UAAUiS,CAAM;AACpC;AAIA,MAAMC,WAAoBN,GAAK;AAAA;AAAA;AAAA;AAAA,EAI3B,YAIA1oC,GAIAokB,GAIA4B,GAAM;AACF,UAAK,GACL,KAAK,OAAOhmB,GACZ,KAAK,KAAKokB,GACV,KAAK,OAAO4B;AAAA,EAChB;AAAA,EACA,MAAMxd,GAAK;AACP,QAAIygC,IAAWzgC,EAAI,MAAM,KAAK,MAAM,KAAK,EAAE,GAAG+vB,IAAQ/vB,EAAI,QAAQ,KAAK,IAAI,GACvExlB,IAASu1C,EAAM,KAAKA,EAAM,YAAY,KAAK,EAAE,CAAC,GAC9C1kC,IAAQ,IAAI8/B,EAAMmV,GAAYG,EAAS,SAAS,CAACvpD,GAAMsD,MACnD,CAACtD,EAAK,UAAU,CAACsD,EAAO,KAAK,eAAe,KAAK,KAAK,IAAI,IACnDtD,IACJA,EAAK,KAAK,KAAK,KAAK,SAASA,EAAK,KAAK,CAAC,GAChDsD,CAAM,GAAGimD,EAAS,WAAWA,EAAS,OAAO;AAChD,WAAOL,GAAW,YAAYpgC,GAAK,KAAK,MAAM,KAAK,IAAI3U,CAAK;AAAA,EAChE;AAAA,EACA,SAAS;AACL,WAAO,IAAIq1C,GAAe,KAAK,MAAM,KAAK,IAAI,KAAK,IAAI;AAAA,EAC3D;AAAA,EACA,IAAIf,GAAS;AACT,QAAInoC,IAAOmoC,EAAQ,UAAU,KAAK,MAAM,CAAC,GAAG/jB,IAAK+jB,EAAQ,UAAU,KAAK,IAAI,EAAE;AAC9E,WAAInoC,EAAK,WAAWokB,EAAG,WAAWpkB,EAAK,OAAOokB,EAAG,MACtC,OACJ,IAAI4kB,GAAYhpC,EAAK,KAAKokB,EAAG,KAAK,KAAK,IAAI;AAAA,EACtD;AAAA,EACA,MAAMgT,GAAO;AACT,WAAIA,aAAiB4R,MACjB5R,EAAM,KAAK,GAAG,KAAK,IAAI,KACvB,KAAK,QAAQA,EAAM,MAAM,KAAK,MAAMA,EAAM,OACnC,IAAI4R,GAAY,KAAK,IAAI,KAAK,MAAM5R,EAAM,IAAI,GAAG,KAAK,IAAI,KAAK,IAAIA,EAAM,EAAE,GAAG,KAAK,IAAI,IAC3F;AAAA,EACX;AAAA,EACA,SAAS;AACL,WAAO;AAAA,MAAE,UAAU;AAAA,MAAW,MAAM,KAAK,KAAK,OAAM;AAAA,MAChD,MAAM,KAAK;AAAA,MAAM,IAAI,KAAK;AAAA,IAAE;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,SAASvQ,GAAQrE,GAAM;AAC1B,QAAI,OAAOA,EAAK,QAAQ,YAAY,OAAOA,EAAK,MAAM;AAClD,YAAM,IAAI,WAAW,wCAAwC;AACjE,WAAO,IAAIwmB,GAAYxmB,EAAK,MAAMA,EAAK,IAAIqE,EAAO,aAAarE,EAAK,IAAI,CAAC;AAAA,EAC7E;AACJ;AACAkmB,GAAK,OAAO,WAAWM,EAAW;AAIlC,MAAME,WAAuBR,GAAK;AAAA;AAAA;AAAA;AAAA,EAI9B,YAIA1oC,GAIAokB,GAIA4B,GAAM;AACF,UAAK,GACL,KAAK,OAAOhmB,GACZ,KAAK,KAAKokB,GACV,KAAK,OAAO4B;AAAA,EAChB;AAAA,EACA,MAAMxd,GAAK;AACP,QAAIygC,IAAWzgC,EAAI,MAAM,KAAK,MAAM,KAAK,EAAE,GACvC3U,IAAQ,IAAI8/B,EAAMmV,GAAYG,EAAS,SAAS,CAAAvpD,MACzCA,EAAK,KAAK,KAAK,KAAK,cAAcA,EAAK,KAAK,CAAC,GACrD8oB,CAAG,GAAGygC,EAAS,WAAWA,EAAS,OAAO;AAC7C,WAAOL,GAAW,YAAYpgC,GAAK,KAAK,MAAM,KAAK,IAAI3U,CAAK;AAAA,EAChE;AAAA,EACA,SAAS;AACL,WAAO,IAAIm1C,GAAY,KAAK,MAAM,KAAK,IAAI,KAAK,IAAI;AAAA,EACxD;AAAA,EACA,IAAIb,GAAS;AACT,QAAInoC,IAAOmoC,EAAQ,UAAU,KAAK,MAAM,CAAC,GAAG/jB,IAAK+jB,EAAQ,UAAU,KAAK,IAAI,EAAE;AAC9E,WAAInoC,EAAK,WAAWokB,EAAG,WAAWpkB,EAAK,OAAOokB,EAAG,MACtC,OACJ,IAAI8kB,GAAelpC,EAAK,KAAKokB,EAAG,KAAK,KAAK,IAAI;AAAA,EACzD;AAAA,EACA,MAAMgT,GAAO;AACT,WAAIA,aAAiB8R,MACjB9R,EAAM,KAAK,GAAG,KAAK,IAAI,KACvB,KAAK,QAAQA,EAAM,MAAM,KAAK,MAAMA,EAAM,OACnC,IAAI8R,GAAe,KAAK,IAAI,KAAK,MAAM9R,EAAM,IAAI,GAAG,KAAK,IAAI,KAAK,IAAIA,EAAM,EAAE,GAAG,KAAK,IAAI,IAC9F;AAAA,EACX;AAAA,EACA,SAAS;AACL,WAAO;AAAA,MAAE,UAAU;AAAA,MAAc,MAAM,KAAK,KAAK,OAAM;AAAA,MACnD,MAAM,KAAK;AAAA,MAAM,IAAI,KAAK;AAAA,IAAE;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,SAASvQ,GAAQrE,GAAM;AAC1B,QAAI,OAAOA,EAAK,QAAQ,YAAY,OAAOA,EAAK,MAAM;AAClD,YAAM,IAAI,WAAW,2CAA2C;AACpE,WAAO,IAAI0mB,GAAe1mB,EAAK,MAAMA,EAAK,IAAIqE,EAAO,aAAarE,EAAK,IAAI,CAAC;AAAA,EAChF;AACJ;AACAkmB,GAAK,OAAO,cAAcQ,EAAc;AAIxC,MAAMC,WAAwBT,GAAK;AAAA;AAAA;AAAA;AAAA,EAI/B,YAIAjmD,GAIAujC,GAAM;AACF,UAAK,GACL,KAAK,MAAMvjC,GACX,KAAK,OAAOujC;AAAA,EAChB;AAAA,EACA,MAAMxd,GAAK;AACP,QAAI9oB,IAAO8oB,EAAI,OAAO,KAAK,GAAG;AAC9B,QAAI,CAAC9oB;AACD,aAAOkpD,GAAW,KAAK,iCAAiC;AAC5D,QAAInqD,IAAUiB,EAAK,KAAK,OAAOA,EAAK,OAAO,MAAM,KAAK,KAAK,SAASA,EAAK,KAAK,CAAC;AAC/E,WAAOkpD,GAAW,YAAYpgC,GAAK,KAAK,KAAK,KAAK,MAAM,GAAG,IAAImrB,EAAMmD,EAAS,KAAKr4C,CAAO,GAAG,GAAGiB,EAAK,SAAS,IAAI,CAAC,CAAC;AAAA,EACxH;AAAA,EACA,OAAO8oB,GAAK;AACR,QAAI9oB,IAAO8oB,EAAI,OAAO,KAAK,GAAG;AAC9B,QAAI9oB,GAAM;AACN,UAAI0pD,IAAS,KAAK,KAAK,SAAS1pD,EAAK,KAAK;AAC1C,UAAI0pD,EAAO,UAAU1pD,EAAK,MAAM,QAAQ;AACpC,iBAAS,IAAI,GAAG,IAAIA,EAAK,MAAM,QAAQ;AACnC,cAAI,CAACA,EAAK,MAAM,CAAC,EAAE,QAAQ0pD,CAAM;AAC7B,mBAAO,IAAID,GAAgB,KAAK,KAAKzpD,EAAK,MAAM,CAAC,CAAC;AAC1D,eAAO,IAAIypD,GAAgB,KAAK,KAAK,KAAK,IAAI;AAAA,MAClD;AAAA,IACJ;AACA,WAAO,IAAIE,GAAmB,KAAK,KAAK,KAAK,IAAI;AAAA,EACrD;AAAA,EACA,IAAIlB,GAAS;AACT,QAAI1lD,IAAM0lD,EAAQ,UAAU,KAAK,KAAK,CAAC;AACvC,WAAO1lD,EAAI,eAAe,OAAO,IAAI0mD,GAAgB1mD,EAAI,KAAK,KAAK,IAAI;AAAA,EAC3E;AAAA,EACA,SAAS;AACL,WAAO,EAAE,UAAU,eAAe,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,SAAQ;AAAA,EAC7E;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,SAASokC,GAAQrE,GAAM;AAC1B,QAAI,OAAOA,EAAK,OAAO;AACnB,YAAM,IAAI,WAAW,4CAA4C;AACrE,WAAO,IAAI2mB,GAAgB3mB,EAAK,KAAKqE,EAAO,aAAarE,EAAK,IAAI,CAAC;AAAA,EACvE;AACJ;AACAkmB,GAAK,OAAO,eAAeS,EAAe;AAI1C,MAAME,WAA2BX,GAAK;AAAA;AAAA;AAAA;AAAA,EAIlC,YAIAjmD,GAIAujC,GAAM;AACF,UAAK,GACL,KAAK,MAAMvjC,GACX,KAAK,OAAOujC;AAAA,EAChB;AAAA,EACA,MAAMxd,GAAK;AACP,QAAI9oB,IAAO8oB,EAAI,OAAO,KAAK,GAAG;AAC9B,QAAI,CAAC9oB;AACD,aAAOkpD,GAAW,KAAK,iCAAiC;AAC5D,QAAInqD,IAAUiB,EAAK,KAAK,OAAOA,EAAK,OAAO,MAAM,KAAK,KAAK,cAAcA,EAAK,KAAK,CAAC;AACpF,WAAOkpD,GAAW,YAAYpgC,GAAK,KAAK,KAAK,KAAK,MAAM,GAAG,IAAImrB,EAAMmD,EAAS,KAAKr4C,CAAO,GAAG,GAAGiB,EAAK,SAAS,IAAI,CAAC,CAAC;AAAA,EACxH;AAAA,EACA,OAAO8oB,GAAK;AACR,QAAI9oB,IAAO8oB,EAAI,OAAO,KAAK,GAAG;AAC9B,WAAI,CAAC9oB,KAAQ,CAAC,KAAK,KAAK,QAAQA,EAAK,KAAK,IAC/B,OACJ,IAAIypD,GAAgB,KAAK,KAAK,KAAK,IAAI;AAAA,EAClD;AAAA,EACA,IAAIhB,GAAS;AACT,QAAI1lD,IAAM0lD,EAAQ,UAAU,KAAK,KAAK,CAAC;AACvC,WAAO1lD,EAAI,eAAe,OAAO,IAAI4mD,GAAmB5mD,EAAI,KAAK,KAAK,IAAI;AAAA,EAC9E;AAAA,EACA,SAAS;AACL,WAAO,EAAE,UAAU,kBAAkB,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,SAAQ;AAAA,EAChF;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,SAASokC,GAAQrE,GAAM;AAC1B,QAAI,OAAOA,EAAK,OAAO;AACnB,YAAM,IAAI,WAAW,+CAA+C;AACxE,WAAO,IAAI6mB,GAAmB7mB,EAAK,KAAKqE,EAAO,aAAarE,EAAK,IAAI,CAAC;AAAA,EAC1E;AACJ;AACAkmB,GAAK,OAAO,kBAAkBW,EAAkB;AAKhD,MAAMC,WAAoBZ,GAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAU3B,YAIA1oC,GAIAokB,GAIAvwB,GAIA0uC,IAAY,IAAO;AACf,UAAK,GACL,KAAK,OAAOviC,GACZ,KAAK,KAAKokB,GACV,KAAK,QAAQvwB,GACb,KAAK,YAAY0uC;AAAA,EACrB;AAAA,EACA,MAAM/5B,GAAK;AACP,WAAI,KAAK,aAAa+gC,GAAe/gC,GAAK,KAAK,MAAM,KAAK,EAAE,IACjDogC,GAAW,KAAK,2CAA2C,IAC/DA,GAAW,YAAYpgC,GAAK,KAAK,MAAM,KAAK,IAAI,KAAK,KAAK;AAAA,EACrE;AAAA,EACA,SAAS;AACL,WAAO,IAAI4+B,GAAQ,CAAC,KAAK,MAAM,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM,IAAI,CAAC;AAAA,EACxE;AAAA,EACA,OAAO5+B,GAAK;AACR,WAAO,IAAI8gC,GAAY,KAAK,MAAM,KAAK,OAAO,KAAK,MAAM,MAAM9gC,EAAI,MAAM,KAAK,MAAM,KAAK,EAAE,CAAC;AAAA,EAChG;AAAA,EACA,IAAI2/B,GAAS;AACT,QAAInoC,IAAOmoC,EAAQ,UAAU,KAAK,MAAM,CAAC,GAAG/jB,IAAK+jB,EAAQ,UAAU,KAAK,IAAI,EAAE;AAC9E,WAAInoC,EAAK,iBAAiBokB,EAAG,gBAClB,OACJ,IAAIklB,GAAYtpC,EAAK,KAAK,KAAK,IAAIA,EAAK,KAAKokB,EAAG,GAAG,GAAG,KAAK,OAAO,KAAK,SAAS;AAAA,EAC3F;AAAA,EACA,MAAMgT,GAAO;AACT,QAAI,EAAEA,aAAiBkS,OAAgBlS,EAAM,aAAa,KAAK;AAC3D,aAAO;AACX,QAAI,KAAK,OAAO,KAAK,MAAM,QAAQA,EAAM,QAAQ,CAAC,KAAK,MAAM,WAAW,CAACA,EAAM,MAAM,WAAW;AAC5F,UAAIvjC,IAAQ,KAAK,MAAM,OAAOujC,EAAM,MAAM,QAAQ,IAAIzD,EAAM,QACtD,IAAIA,EAAM,KAAK,MAAM,QAAQ,OAAOyD,EAAM,MAAM,OAAO,GAAG,KAAK,MAAM,WAAWA,EAAM,MAAM,OAAO;AACzG,aAAO,IAAIkS,GAAY,KAAK,MAAM,KAAK,MAAMlS,EAAM,KAAKA,EAAM,OAAOvjC,GAAO,KAAK,SAAS;AAAA,IAC9F,WACSujC,EAAM,MAAM,KAAK,QAAQ,CAAC,KAAK,MAAM,aAAa,CAACA,EAAM,MAAM,SAAS;AAC7E,UAAIvjC,IAAQ,KAAK,MAAM,OAAOujC,EAAM,MAAM,QAAQ,IAAIzD,EAAM,QACtD,IAAIA,EAAMyD,EAAM,MAAM,QAAQ,OAAO,KAAK,MAAM,OAAO,GAAGA,EAAM,MAAM,WAAW,KAAK,MAAM,OAAO;AACzG,aAAO,IAAIkS,GAAYlS,EAAM,MAAM,KAAK,IAAIvjC,GAAO,KAAK,SAAS;AAAA,IACrE;AAEI,aAAO;AAAA,EAEf;AAAA,EACA,SAAS;AACL,QAAI2uB,IAAO,EAAE,UAAU,WAAW,MAAM,KAAK,MAAM,IAAI,KAAK,GAAE;AAC9D,WAAI,KAAK,MAAM,SACXA,EAAK,QAAQ,KAAK,MAAM,OAAM,IAC9B,KAAK,cACLA,EAAK,YAAY,KACdA;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,SAASqE,GAAQrE,GAAM;AAC1B,QAAI,OAAOA,EAAK,QAAQ,YAAY,OAAOA,EAAK,MAAM;AAClD,YAAM,IAAI,WAAW,wCAAwC;AACjE,WAAO,IAAI8mB,GAAY9mB,EAAK,MAAMA,EAAK,IAAImR,EAAM,SAAS9M,GAAQrE,EAAK,KAAK,GAAG,CAAC,CAACA,EAAK,SAAS;AAAA,EACnG;AACJ;AACAkmB,GAAK,OAAO,WAAWY,EAAW;AAMlC,MAAME,WAA0Bd,GAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOjC,YAIA1oC,GAIAokB,GAIAqlB,GAIAC,GAIA71C,GAKAykC,GAIAiK,IAAY,IAAO;AACf,UAAK,GACL,KAAK,OAAOviC,GACZ,KAAK,KAAKokB,GACV,KAAK,UAAUqlB,GACf,KAAK,QAAQC,GACb,KAAK,QAAQ71C,GACb,KAAK,SAASykC,GACd,KAAK,YAAYiK;AAAA,EACrB;AAAA,EACA,MAAM/5B,GAAK;AACP,QAAI,KAAK,cAAc+gC,GAAe/gC,GAAK,KAAK,MAAM,KAAK,OAAO,KAC9D+gC,GAAe/gC,GAAK,KAAK,OAAO,KAAK,EAAE;AACvC,aAAOogC,GAAW,KAAK,+CAA+C;AAC1E,QAAIe,IAAMnhC,EAAI,MAAM,KAAK,SAAS,KAAK,KAAK;AAC5C,QAAImhC,EAAI,aAAaA,EAAI;AACrB,aAAOf,GAAW,KAAK,yBAAyB;AACpD,QAAIgB,IAAW,KAAK,MAAM,SAAS,KAAK,QAAQD,EAAI,OAAO;AAC3D,WAAKC,IAEEhB,GAAW,YAAYpgC,GAAK,KAAK,MAAM,KAAK,IAAIohC,CAAQ,IADpDhB,GAAW,KAAK,6BAA6B;AAAA,EAE5D;AAAA,EACA,SAAS;AACL,WAAO,IAAIxB,GAAQ;AAAA,MAAC,KAAK;AAAA,MAAM,KAAK,UAAU,KAAK;AAAA,MAAM,KAAK;AAAA,MAC1D,KAAK;AAAA,MAAO,KAAK,KAAK,KAAK;AAAA,MAAO,KAAK,MAAM,OAAO,KAAK;AAAA,IAAM,CAAC;AAAA,EACxE;AAAA,EACA,OAAO5+B,GAAK;AACR,QAAImhC,IAAM,KAAK,QAAQ,KAAK;AAC5B,WAAO,IAAIH,GAAkB,KAAK,MAAM,KAAK,OAAO,KAAK,MAAM,OAAOG,GAAK,KAAK,OAAO,KAAK,QAAQ,KAAK,OAAO,KAAK,SAASA,GAAKnhC,EAAI,MAAM,KAAK,MAAM,KAAK,EAAE,EAAE,cAAc,KAAK,UAAU,KAAK,MAAM,KAAK,QAAQ,KAAK,IAAI,GAAG,KAAK,UAAU,KAAK,MAAM,KAAK,SAAS;AAAA,EAC9Q;AAAA,EACA,IAAI2/B,GAAS;AACT,QAAInoC,IAAOmoC,EAAQ,UAAU,KAAK,MAAM,CAAC,GAAG/jB,IAAK+jB,EAAQ,UAAU,KAAK,IAAI,EAAE,GAC1EsB,IAAU,KAAK,QAAQ,KAAK,UAAUzpC,EAAK,MAAMmoC,EAAQ,IAAI,KAAK,SAAS,EAAE,GAC7EuB,IAAQ,KAAK,MAAM,KAAK,QAAQtlB,EAAG,MAAM+jB,EAAQ,IAAI,KAAK,OAAO,CAAC;AACtE,WAAKnoC,EAAK,iBAAiBokB,EAAG,iBAAkBqlB,IAAUzpC,EAAK,OAAO0pC,IAAQtlB,EAAG,MACtE,OACJ,IAAIolB,GAAkBxpC,EAAK,KAAKokB,EAAG,KAAKqlB,GAASC,GAAO,KAAK,OAAO,KAAK,QAAQ,KAAK,SAAS;AAAA,EAC1G;AAAA,EACA,SAAS;AACL,QAAIlnB,IAAO;AAAA,MAAE,UAAU;AAAA,MAAiB,MAAM,KAAK;AAAA,MAAM,IAAI,KAAK;AAAA,MAC9D,SAAS,KAAK;AAAA,MAAS,OAAO,KAAK;AAAA,MAAO,QAAQ,KAAK;AAAA,IAAM;AACjE,WAAI,KAAK,MAAM,SACXA,EAAK,QAAQ,KAAK,MAAM,OAAM,IAC9B,KAAK,cACLA,EAAK,YAAY,KACdA;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,SAASqE,GAAQrE,GAAM;AAC1B,QAAI,OAAOA,EAAK,QAAQ,YAAY,OAAOA,EAAK,MAAM,YAClD,OAAOA,EAAK,WAAW,YAAY,OAAOA,EAAK,SAAS,YAAY,OAAOA,EAAK,UAAU;AAC1F,YAAM,IAAI,WAAW,8CAA8C;AACvE,WAAO,IAAIgnB,GAAkBhnB,EAAK,MAAMA,EAAK,IAAIA,EAAK,SAASA,EAAK,OAAOmR,EAAM,SAAS9M,GAAQrE,EAAK,KAAK,GAAGA,EAAK,QAAQ,CAAC,CAACA,EAAK,SAAS;AAAA,EAChJ;AACJ;AACAkmB,GAAK,OAAO,iBAAiBc,EAAiB;AAC9C,SAASD,GAAe/gC,GAAKxI,GAAMokB,GAAI;AACnC,MAAImU,IAAQ/vB,EAAI,QAAQxI,CAAI,GAAGq4B,IAAOjU,IAAKpkB,GAAMgI,IAAQuwB,EAAM;AAC/D,SAAOF,IAAO,KAAKrwB,IAAQ,KAAKuwB,EAAM,WAAWvwB,CAAK,KAAKuwB,EAAM,KAAKvwB,CAAK,EAAE;AACzE,IAAAA,KACAqwB;AAEJ,MAAIA,IAAO,GAAG;AACV,QAAI/kD,IAAOilD,EAAM,KAAKvwB,CAAK,EAAE,WAAWuwB,EAAM,WAAWvwB,CAAK,CAAC;AAC/D,WAAOqwB,IAAO,KAAG;AACb,UAAI,CAAC/kD,KAAQA,EAAK;AACd,eAAO;AACX,MAAAA,IAAOA,EAAK,YACZ+kD;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX;AAEA,SAASwR,GAAQlf,GAAI3qB,GAAMokB,GAAI4B,GAAM;AACjC,MAAIr1C,IAAU,IAAID,IAAQ,CAAA,GACtBo5D,GAAUC;AACd,EAAApf,EAAG,IAAI,aAAa3qB,GAAMokB,GAAI,CAAC1kC,GAAM+C,GAAKO,MAAW;AACjD,QAAI,CAACtD,EAAK;AACN;AACJ,QAAIk4C,IAAQl4C,EAAK;AACjB,QAAI,CAACsmC,EAAK,QAAQ4R,CAAK,KAAK50C,EAAO,KAAK,eAAegjC,EAAK,IAAI,GAAG;AAC/D,UAAI/iC,IAAQ,KAAK,IAAIR,GAAKud,CAAI,GAAGxc,IAAM,KAAK,IAAIf,IAAM/C,EAAK,UAAU0kC,CAAE,GACnEglB,IAASpjB,EAAK,SAAS4R,CAAK;AAChC,eAASzmD,IAAI,GAAGA,IAAIymD,EAAM,QAAQzmD;AAC9B,QAAKymD,EAAMzmD,CAAC,EAAE,QAAQi4D,CAAM,MACpBU,KAAYA,EAAS,MAAM7mD,KAAS6mD,EAAS,KAAK,GAAGlS,EAAMzmD,CAAC,CAAC,IAC7D24D,EAAS,KAAKtmD,IAEd7S,EAAQ,KAAKm5D,IAAW,IAAIZ,GAAejmD,GAAOO,GAAKo0C,EAAMzmD,CAAC,CAAC,CAAC;AAG5E,MAAI44D,KAAUA,EAAO,MAAM9mD,IACvB8mD,EAAO,KAAKvmD,IAEZ9S,EAAM,KAAKq5D,IAAS,IAAIf,GAAY/lD,GAAOO,GAAKwiC,CAAI,CAAC;AAAA,IAC7D;AAAA,EACJ,CAAC,GACDr1C,EAAQ,QAAQ,CAAAq5D,MAAKrf,EAAG,KAAKqf,CAAC,CAAC,GAC/Bt5D,EAAM,QAAQ,CAAAs5D,MAAKrf,EAAG,KAAKqf,CAAC,CAAC;AACjC;AACA,SAASC,GAAWtf,GAAI3qB,GAAMokB,GAAI4B,GAAM;AACpC,MAAI+X,IAAU,IAAI/zB,IAAO;AACzB,EAAA2gB,EAAG,IAAI,aAAa3qB,GAAMokB,GAAI,CAAC1kC,GAAM+C,MAAQ;AACzC,QAAI,CAAC/C,EAAK;AACN;AACJ,IAAAsqB;AACA,QAAIkgC,IAAW;AACf,QAAIlkB,aAAgBmY,IAAU;AAC1B,UAAItc,IAAMniC,EAAK,OAAOo2C;AACtB,aAAOA,IAAQ9P,EAAK,QAAQnE,CAAG;AAC3B,SAACqoB,MAAaA,IAAW,CAAA,IAAK,KAAKpU,CAAK,GACxCjU,IAAMiU,EAAM,cAAcjU,CAAG;AAAA,IAErC,MACK,CAAImE,IACDA,EAAK,QAAQtmC,EAAK,KAAK,MACvBwqD,IAAW,CAAClkB,CAAI,KAGpBkkB,IAAWxqD,EAAK;AAEpB,QAAIwqD,KAAYA,EAAS,QAAQ;AAC7B,UAAI1mD,IAAM,KAAK,IAAIf,IAAM/C,EAAK,UAAU0kC,CAAE;AAC1C,eAASjzC,IAAI,GAAGA,IAAI+4D,EAAS,QAAQ/4D,KAAK;AACtC,YAAI2hC,IAAQo3B,EAAS/4D,CAAC,GAAG2kD;AACzB,iBAASxgD,IAAI,GAAGA,IAAIyoD,EAAQ,QAAQzoD,KAAK;AACrC,cAAIV,IAAImpD,EAAQzoD,CAAC;AACjB,UAAIV,EAAE,QAAQo1B,IAAO,KAAK8I,EAAM,GAAGirB,EAAQzoD,CAAC,EAAE,KAAK,MAC/CwgD,IAAQlhD;AAAA,QAChB;AACA,QAAIkhD,KACAA,EAAM,KAAKtyC,GACXsyC,EAAM,OAAO9rB,KAGb+zB,EAAQ,KAAK,EAAE,OAAAjrB,GAAO,MAAM,KAAK,IAAIrwB,GAAKud,CAAI,GAAG,IAAIxc,GAAK,MAAAwmB,EAAI,CAAE;AAAA,MAExE;AAAA,IACJ;AAAA,EACJ,CAAC,GACD+zB,EAAQ,QAAQ,CAAAnpD,MAAK+1C,EAAG,KAAK,IAAIue,GAAet0D,EAAE,MAAMA,EAAE,IAAIA,EAAE,KAAK,CAAC,CAAC;AAC3E;AACA,SAASu1D,GAAkBxf,GAAIloC,GAAK2nD,GAAY9wD,IAAQ8wD,EAAW,cAAcC,IAAgB,IAAM;AACnG,MAAI3qD,IAAOirC,EAAG,IAAI,OAAOloC,CAAG,GACxB6nD,IAAY,CAAA,GAAI9S,IAAM/0C,IAAM;AAChC,WAAStR,IAAI,GAAGA,IAAIuO,EAAK,YAAYvO,KAAK;AACtC,QAAIiL,IAAQsD,EAAK,MAAMvO,CAAC,GAAGqS,IAAMg0C,IAAMp7C,EAAM,UACzCmuD,IAAUjxD,EAAM,UAAU8C,EAAM,IAAI;AACxC,QAAI,CAACmuD;AACD,MAAAD,EAAU,KAAK,IAAIhB,GAAY9R,GAAKh0C,GAAKmwC,EAAM,KAAK,CAAC;AAAA,SAEpD;AACD,MAAAr6C,IAAQixD;AACR,eAASj1D,IAAI,GAAGA,IAAI8G,EAAM,MAAM,QAAQ9G;AACpC,QAAK80D,EAAW,eAAehuD,EAAM,MAAM9G,CAAC,EAAE,IAAI,KAC9Cq1C,EAAG,KAAK,IAAIue,GAAe1R,GAAKh0C,GAAKpH,EAAM,MAAM9G,CAAC,CAAC,CAAC;AAC5D,UAAI+0D,KAAiBjuD,EAAM,UAAUguD,EAAW,cAAc,OAAO;AACjE,YAAIx1D,GAAGgD,IAAU,aAAaic;AAC9B,eAAOjf,IAAIgD,EAAQ,KAAKwE,EAAM,IAAI;AAC9B,UAAKyX,MACDA,IAAQ,IAAI8/B,EAAMmD,EAAS,KAAKsT,EAAW,OAAO,KAAK,KAAKA,EAAW,aAAahuD,EAAM,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,IAC5GkuD,EAAU,KAAK,IAAIhB,GAAY9R,IAAM5iD,EAAE,OAAO4iD,IAAM5iD,EAAE,QAAQA,EAAE,CAAC,EAAE,QAAQif,CAAK,CAAC;AAAA,MAEzF;AAAA,IACJ;AACA,IAAA2jC,IAAMh0C;AAAA,EACV;AACA,MAAI,CAAClK,EAAM,UAAU;AACjB,QAAIwmD,IAAOxmD,EAAM,WAAWw9C,EAAS,OAAO,EAAI;AAChD,IAAAnM,EAAG,QAAQ6M,GAAKA,GAAK,IAAI7D,EAAMmM,GAAM,GAAG,CAAC,CAAC;AAAA,EAC9C;AACA,WAAS3uD,IAAIm5D,EAAU,SAAS,GAAGn5D,KAAK,GAAGA;AACvC,IAAAw5C,EAAG,KAAK2f,EAAUn5D,CAAC,CAAC;AAC5B;AAEA,SAASq5D,GAAO9qD,GAAMuD,GAAOO,GAAK;AAC9B,UAAQP,KAAS,KAAKvD,EAAK,WAAWuD,GAAOvD,EAAK,UAAU,OACvD8D,KAAO9D,EAAK,cAAcA,EAAK,WAAW,GAAG8D,CAAG;AACzD;AAMA,SAASinD,GAAW/sB,GAAO;AAEvB,MAAIhlC,IADSglC,EAAM,OACE,QAAQ,WAAWA,EAAM,YAAYA,EAAM,QAAQ;AACxE,WAAS1V,IAAQ0V,EAAM,SAAQ,EAAE1V,GAAO;AACpC,QAAItoB,IAAOg+B,EAAM,MAAM,KAAK1V,CAAK,GAC7B3xB,IAAQqnC,EAAM,MAAM,MAAM1V,CAAK,GAAGrF,IAAW+a,EAAM,IAAI,WAAW1V,CAAK;AAC3E,QAAIA,IAAQ0V,EAAM,SAASh+B,EAAK,WAAWrJ,GAAOssB,GAAUjqB,CAAO;AAC/D,aAAOsvB;AACX,QAAIA,KAAS,KAAKtoB,EAAK,KAAK,KAAK,aAAa,CAAC8qD,GAAO9qD,GAAMrJ,GAAOssB,CAAQ;AACvE;AAAA,EACR;AACA,SAAO;AACX;AACA,SAAS+nC,GAAK/f,GAAIjN,GAAO/8B,GAAQ;AAC7B,MAAI,EAAE,OAAA43C,GAAO,KAAAC,GAAK,OAAAxwB,EAAK,IAAK0V,GACxBitB,IAAWpS,EAAM,OAAOvwB,IAAQ,CAAC,GAAG4iC,IAASpS,EAAI,MAAMxwB,IAAQ,CAAC,GAChE/kB,IAAQ0nD,GAAUnnD,IAAMonD,GACxB5vD,IAAS87C,EAAS,OAAOgB,IAAY;AACzC,WAASzvB,IAAIL,GAAO6iC,IAAY,IAAOxiC,IAAI1nB,GAAQ0nB;AAC/C,IAAIwiC,KAAatS,EAAM,MAAMlwB,CAAC,IAAI,KAC9BwiC,IAAY,IACZ7vD,IAAS87C,EAAS,KAAKyB,EAAM,KAAKlwB,CAAC,EAAE,KAAKrtB,CAAM,CAAC,GACjD88C,OAGA70C;AAER,MAAIhI,IAAQ67C,EAAS,OAAOiB,IAAU;AACtC,WAAS1vB,IAAIL,GAAO6iC,IAAY,IAAOxiC,IAAI1nB,GAAQ0nB;AAC/C,IAAIwiC,KAAarS,EAAI,MAAMnwB,IAAI,CAAC,IAAImwB,EAAI,IAAInwB,CAAC,KACzCwiC,IAAY,IACZ5vD,IAAQ67C,EAAS,KAAK0B,EAAI,KAAKnwB,CAAC,EAAE,KAAKptB,CAAK,CAAC,GAC7C88C,OAGAv0C;AAER,EAAAmnC,EAAG,KAAK,IAAI6e,GAAkBvmD,GAAOO,GAAKmnD,GAAUC,GAAQ,IAAIjX,EAAM34C,EAAO,OAAOC,CAAK,GAAG68C,GAAWC,CAAO,GAAG/8C,EAAO,OAAO88C,GAAW,EAAI,CAAC;AACnJ;AASA,SAASgT,GAAaptB,GAAOoU,GAAU31C,IAAQ,MAAM4uD,IAAartB,GAAO;AACrE,MAAI3H,IAASi1B,GAAoBttB,GAAOoU,CAAQ,GAC5Ch4C,IAAQi8B,KAAUk1B,GAAmBF,GAAYjZ,CAAQ;AAC7D,SAAKh4C,IAEEi8B,EAAO,IAAIm1B,EAAS,EACtB,OAAO,EAAE,MAAMpZ,GAAU,OAAA31C,EAAK,CAAE,EAAE,OAAOrC,EAAM,IAAIoxD,EAAS,CAAC,IAFvD;AAGf;AACA,SAASA,GAAUzvD,GAAM;AAAE,SAAO,EAAE,MAAAA,GAAM,OAAO,KAAI;AAAI;AACzD,SAASuvD,GAAoBttB,GAAOjiC,GAAM;AACtC,MAAI,EAAE,QAAAuH,GAAQ,YAAAyf,GAAY,UAAAE,EAAQ,IAAK+a,GACnC3H,IAAS/yB,EAAO,eAAeyf,CAAU,EAAE,aAAahnB,CAAI;AAChE,MAAI,CAACs6B;AACD,WAAO;AACX,MAAIo1B,IAAQp1B,EAAO,SAASA,EAAO,CAAC,IAAIt6B;AACxC,SAAOuH,EAAO,eAAeyf,GAAYE,GAAUwoC,CAAK,IAAIp1B,IAAS;AACzE;AACA,SAASk1B,GAAmBvtB,GAAOjiC,GAAM;AACrC,MAAI,EAAE,QAAAuH,GAAQ,YAAAyf,GAAY,UAAAE,EAAQ,IAAK+a,GACnC5jC,IAAQkJ,EAAO,MAAMyf,CAAU,GAC/BjU,IAAS/S,EAAK,aAAa,aAAa3B,EAAM,IAAI;AACtD,MAAI,CAAC0U;AACD,WAAO;AAEX,MAAI48C,KADW58C,EAAO,SAASA,EAAOA,EAAO,SAAS,CAAC,IAAI/S,GACjC;AAC1B,WAAStK,IAAIsxB,GAAY2oC,KAAcj6D,IAAIwxB,GAAUxxB;AACjD,IAAAi6D,IAAaA,EAAW,UAAUpoD,EAAO,MAAM7R,CAAC,EAAE,IAAI;AAC1D,SAAI,CAACi6D,KAAc,CAACA,EAAW,WACpB,OACJ58C;AACX;AACA,SAAS1M,GAAK6oC,GAAIjN,GAAO2tB,GAAU;AAC/B,MAAI3yD,IAAUo+C,EAAS;AACvB,WAAS3lD,IAAIk6D,EAAS,SAAS,GAAGl6D,KAAK,GAAGA,KAAK;AAC3C,QAAIuH,EAAQ,MAAM;AACd,UAAIY,IAAQ+xD,EAASl6D,CAAC,EAAE,KAAK,aAAa,cAAcuH,CAAO;AAC/D,UAAI,CAACY,KAAS,CAACA,EAAM;AACjB,cAAM,IAAI,WAAW,wFAAwF;AAAA,IACrH;AACA,IAAAZ,IAAUo+C,EAAS,KAAKuU,EAASl6D,CAAC,EAAE,KAAK,OAAOk6D,EAASl6D,CAAC,EAAE,OAAOuH,CAAO,CAAC;AAAA,EAC/E;AACA,MAAIuK,IAAQy6B,EAAM,OAAOl6B,IAAMk6B,EAAM;AACrC,EAAAiN,EAAG,KAAK,IAAI6e,GAAkBvmD,GAAOO,GAAKP,GAAOO,GAAK,IAAImwC,EAAMj7C,GAAS,GAAG,CAAC,GAAG2yD,EAAS,QAAQ,EAAI,CAAC;AAC1G;AACA,SAASC,GAAa3gB,GAAI3qB,GAAMokB,GAAI3oC,GAAMU,GAAO;AAC7C,MAAI,CAACV,EAAK;AACN,UAAM,IAAI,WAAW,kDAAkD;AAC3E,MAAI8vD,IAAU5gB,EAAG,MAAM;AACvB,EAAAA,EAAG,IAAI,aAAa3qB,GAAMokB,GAAI,CAAC1kC,GAAM+C,MAAQ;AACzC,QAAI+oD,IAAY,OAAOrvD,KAAS,aAAaA,EAAMuD,CAAI,IAAIvD;AAC3D,QAAIuD,EAAK,eAAe,CAACA,EAAK,UAAUjE,GAAM+vD,CAAS,KACnDC,GAAc9gB,EAAG,KAAKA,EAAG,QAAQ,MAAM4gB,CAAO,EAAE,IAAI9oD,CAAG,GAAGhH,CAAI,GAAG;AACjE,UAAIiwD,IAAkB;AACtB,UAAIjwD,EAAK,OAAO,sBAAsB;AAClC,YAAIkwD,IAAMlwD,EAAK,cAAc,OAAOmwD,IAAmB,CAAC,CAACnwD,EAAK,aAAa,UAAUA,EAAK,OAAO,oBAAoB;AACrH,QAAIkwD,KAAO,CAACC,IACRF,IAAkB,KACb,CAACC,KAAOC,MACbF,IAAkB;AAAA,MAC1B;AAEA,MAAIA,MAAoB,MACpBG,GAAkBlhB,GAAIjrC,GAAM+C,GAAK8oD,CAAO,GAC5CpB,GAAkBxf,GAAIA,EAAG,QAAQ,MAAM4gB,CAAO,EAAE,IAAI9oD,GAAK,CAAC,GAAGhH,GAAM,QAAWiwD,MAAoB,IAAI;AACtG,UAAIvD,IAAUxd,EAAG,QAAQ,MAAM4gB,CAAO,GAClCO,IAAS3D,EAAQ,IAAI1lD,GAAK,CAAC,GAAGspD,IAAO5D,EAAQ,IAAI1lD,IAAM/C,EAAK,UAAU,CAAC;AAC3E,aAAAirC,EAAG,KAAK,IAAI6e,GAAkBsC,GAAQC,GAAMD,IAAS,GAAGC,IAAO,GAAG,IAAIpY,EAAMmD,EAAS,KAAKr7C,EAAK,OAAO+vD,GAAW,MAAM9rD,EAAK,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAI,CAAC,GAChJgsD,MAAoB,MACpBM,GAAgBrhB,GAAIjrC,GAAM+C,GAAK8oD,CAAO,GACnC;AAAA,IACX;AAAA,EACJ,CAAC;AACL;AACA,SAASS,GAAgBrhB,GAAIjrC,GAAM+C,GAAK8oD,GAAS;AAC7C,EAAA7rD,EAAK,QAAQ,CAACtD,GAAOiS,MAAW;AAC5B,QAAIjS,EAAM,QAAQ;AACd,UAAIxH,GAAGgD,IAAU;AACjB,aAAOhD,IAAIgD,EAAQ,KAAKwE,EAAM,IAAI,KAAG;AACjC,YAAI6G,IAAQ0nC,EAAG,QAAQ,MAAM4gB,CAAO,EAAE,IAAI9oD,IAAM,IAAI4L,IAASzZ,EAAE,KAAK;AACpE,QAAA+1C,EAAG,YAAY1nC,GAAOA,IAAQ,GAAGvD,EAAK,KAAK,OAAO,qBAAqB,QAAQ;AAAA,MACnF;AAAA,IACJ;AAAA,EACJ,CAAC;AACL;AACA,SAASmsD,GAAkBlhB,GAAIjrC,GAAM+C,GAAK8oD,GAAS;AAC/C,EAAA7rD,EAAK,QAAQ,CAACtD,GAAOiS,MAAW;AAC5B,QAAIjS,EAAM,QAAQA,EAAM,KAAK,OAAO,sBAAsB;AACtD,UAAI6G,IAAQ0nC,EAAG,QAAQ,MAAM4gB,CAAO,EAAE,IAAI9oD,IAAM,IAAI4L,CAAM;AAC1D,MAAAs8B,EAAG,YAAY1nC,GAAOA,IAAQ,GAAGvD,EAAK,KAAK,OAAO,KAAK;AAAA,CAAI,CAAC;AAAA,IAChE;AAAA,EACJ,CAAC;AACL;AACA,SAAS+rD,GAAcjjC,GAAK/lB,GAAKhH,GAAM;AACnC,MAAIwwD,IAAOzjC,EAAI,QAAQ/lB,CAAG,GAAGpM,IAAQ41D,EAAK,MAAK;AAC/C,SAAOA,EAAK,OAAO,eAAe51D,GAAOA,IAAQ,GAAGoF,CAAI;AAC5D;AAKA,SAASywD,GAAcvhB,GAAIloC,GAAKhH,GAAMU,GAAOy7C,GAAO;AAChD,MAAIl4C,IAAOirC,EAAG,IAAI,OAAOloC,CAAG;AAC5B,MAAI,CAAC/C;AACD,UAAM,IAAI,WAAW,2BAA2B;AACpD,EAAKjE,MACDA,IAAOiE,EAAK;AAChB,MAAIysD,IAAU1wD,EAAK,OAAOU,GAAO,MAAMy7C,KAASl4C,EAAK,KAAK;AAC1D,MAAIA,EAAK;AACL,WAAOirC,EAAG,YAAYloC,GAAKA,IAAM/C,EAAK,UAAUysD,CAAO;AAC3D,MAAI,CAAC1wD,EAAK,aAAaiE,EAAK,OAAO;AAC/B,UAAM,IAAI,WAAW,mCAAmCjE,EAAK,IAAI;AACrE,EAAAkvC,EAAG,KAAK,IAAI6e,GAAkB/mD,GAAKA,IAAM/C,EAAK,UAAU+C,IAAM,GAAGA,IAAM/C,EAAK,WAAW,GAAG,IAAIi0C,EAAMmD,EAAS,KAAKqV,CAAO,GAAG,GAAG,CAAC,GAAG,GAAG,EAAI,CAAC;AAC/I;AAIA,SAASC,GAAS5jC,GAAK/lB,GAAKulB,IAAQ,GAAGqkC,GAAY;AAC/C,MAAIJ,IAAOzjC,EAAI,QAAQ/lB,CAAG,GAAGwH,IAAOgiD,EAAK,QAAQjkC,GAC7CskC,IAAaD,KAAcA,EAAWA,EAAW,SAAS,CAAC,KAAMJ,EAAK;AAC1E,MAAIhiD,IAAO,KAAKgiD,EAAK,OAAO,KAAK,KAAK,aAClC,CAACA,EAAK,OAAO,WAAWA,EAAK,SAASA,EAAK,OAAO,UAAU,KAC5D,CAACK,EAAU,KAAK,aAAaL,EAAK,OAAO,QAAQ,WAAWA,EAAK,MAAK,GAAIA,EAAK,OAAO,UAAU,CAAC;AACjG,WAAO;AACX,WAAS5jC,IAAI4jC,EAAK,QAAQ,GAAG96D,IAAI62B,IAAQ,GAAGK,IAAIpe,GAAMoe,KAAKl3B,KAAK;AAC5D,QAAIuO,IAAOusD,EAAK,KAAK5jC,CAAC,GAAGhyB,IAAQ41D,EAAK,MAAM5jC,CAAC;AAC7C,QAAI3oB,EAAK,KAAK,KAAK;AACf,aAAO;AACX,QAAI8I,IAAO9I,EAAK,QAAQ,WAAWrJ,GAAOqJ,EAAK,UAAU,GACrD6sD,IAAgBF,KAAcA,EAAWl7D,IAAI,CAAC;AAClD,IAAIo7D,MACA/jD,IAAOA,EAAK,aAAa,GAAG+jD,EAAc,KAAK,OAAOA,EAAc,KAAK,CAAC;AAC9E,QAAItxD,IAASoxD,KAAcA,EAAWl7D,CAAC,KAAMuO;AAC7C,QAAI,CAACA,EAAK,WAAWrJ,IAAQ,GAAGqJ,EAAK,UAAU,KAAK,CAACzE,EAAM,KAAK,aAAauN,CAAI;AAC7E,aAAO;AAAA,EACf;AACA,MAAInS,IAAQ41D,EAAK,WAAWhiD,CAAI,GAC5BuiD,IAAWH,KAAcA,EAAW,CAAC;AACzC,SAAOJ,EAAK,KAAKhiD,CAAI,EAAE,eAAe5T,GAAOA,GAAOm2D,IAAWA,EAAS,OAAOP,EAAK,KAAKhiD,IAAO,CAAC,EAAE,IAAI;AAC3G;AACA,SAASwiD,GAAM9hB,GAAIloC,GAAKulB,IAAQ,GAAGqkC,GAAY;AAC3C,MAAIJ,IAAOthB,EAAG,IAAI,QAAQloC,CAAG,GAAGzH,IAAS87C,EAAS,OAAO77C,IAAQ67C,EAAS;AAC1E,WAASzuB,IAAI4jC,EAAK,OAAOjuD,IAAIiuD,EAAK,QAAQjkC,GAAO72B,IAAI62B,IAAQ,GAAGK,IAAIrqB,GAAGqqB,KAAKl3B,KAAK;AAC7E,IAAA6J,IAAS87C,EAAS,KAAKmV,EAAK,KAAK5jC,CAAC,EAAE,KAAKrtB,CAAM,CAAC;AAChD,QAAI0xD,IAAYL,KAAcA,EAAWl7D,CAAC;AAC1C,IAAA8J,IAAQ67C,EAAS,KAAK4V,IAAYA,EAAU,KAAK,OAAOA,EAAU,OAAOzxD,CAAK,IAAIgxD,EAAK,KAAK5jC,CAAC,EAAE,KAAKptB,CAAK,CAAC;AAAA,EAC9G;AACA,EAAA0vC,EAAG,KAAK,IAAI2e,GAAY7mD,GAAKA,GAAK,IAAIkxC,EAAM34C,EAAO,OAAOC,CAAK,GAAG+sB,GAAOA,CAAK,GAAG,EAAI,CAAC;AAC1F;AAKA,SAAS2kC,GAAQnkC,GAAK/lB,GAAK;AACvB,MAAIwpD,IAAOzjC,EAAI,QAAQ/lB,CAAG,GAAGpM,IAAQ41D,EAAK,MAAK;AAC/C,SAAOlT,GAASkT,EAAK,YAAYA,EAAK,SAAS,KAC3CA,EAAK,OAAO,WAAW51D,GAAOA,IAAQ,CAAC;AAC/C;AACA,SAASu2D,GAAmC/xD,GAAGC,GAAG;AAC9C,EAAKA,EAAE,QAAQ,QACXD,EAAE,KAAK,kBAAkBC,EAAE,IAAI;AACnC,MAAIxB,IAAQuB,EAAE,eAAeA,EAAE,UAAU,GACrC,EAAE,sBAAAgyD,EAAoB,IAAKhyD,EAAE,KAAK;AACtC,WAAS,IAAI,GAAG,IAAIC,EAAE,YAAY,KAAK;AACnC,QAAIsB,IAAQtB,EAAE,MAAM,CAAC,GACjBW,IAAOW,EAAM,QAAQywD,IAAuBhyD,EAAE,KAAK,OAAO,MAAM,OAAOuB,EAAM;AAIjF,QAHA9C,IAAQA,EAAM,UAAUmC,CAAI,GACxB,CAACnC,KAED,CAACuB,EAAE,KAAK,YAAYuB,EAAM,KAAK;AAC/B,aAAO;AAAA,EACf;AACA,SAAO9C,EAAM;AACjB;AACA,SAASy/C,GAASl+C,GAAGC,GAAG;AACpB,SAAO,CAAC,EAAED,KAAKC,KAAK,CAACD,EAAE,UAAU+xD,GAAmC/xD,GAAGC,CAAC;AAC5E;AA+BA,SAASwI,GAAKqnC,GAAIloC,GAAKulB,GAAO;AAC1B,MAAI0jC,IAAkB,MAClB,EAAE,sBAAAmB,EAAoB,IAAKliB,EAAG,IAAI,KAAK,QACvCqO,IAAUrO,EAAG,IAAI,QAAQloC,IAAMulB,CAAK,GAAG8kC,IAAa9T,EAAQ,KAAI,EAAG;AACvE,MAAI6T,KAAwBC,EAAW,eAAe;AAClD,QAAInB,IAAMmB,EAAW,cAAc,OAC/BlB,IAAmB,CAAC,CAACkB,EAAW,aAAa,UAAUD,CAAoB;AAC/E,IAAIlB,KAAO,CAACC,IACRF,IAAkB,KACb,CAACC,KAAOC,MACbF,IAAkB;AAAA,EAC1B;AACA,MAAIH,IAAU5gB,EAAG,MAAM;AACvB,MAAI+gB,MAAoB,IAAO;AAC3B,QAAIzS,IAAStO,EAAG,IAAI,QAAQloC,IAAMulB,CAAK;AACvC,IAAA6jC,GAAkBlhB,GAAIsO,EAAO,KAAI,GAAIA,EAAO,OAAM,GAAIsS,CAAO;AAAA,EACjE;AACA,EAAIuB,EAAW,iBACX3C,GAAkBxf,GAAIloC,IAAMulB,IAAQ,GAAG8kC,GAAY9T,EAAQ,KAAI,EAAG,eAAeA,EAAQ,MAAK,CAAE,GAAG0S,KAAmB,IAAI;AAC9H,MAAIvD,IAAUxd,EAAG,QAAQ,MAAM4gB,CAAO,GAAGtoD,IAAQklD,EAAQ,IAAI1lD,IAAMulB,CAAK;AAExE,MADA2iB,EAAG,KAAK,IAAI2e,GAAYrmD,GAAOklD,EAAQ,IAAI1lD,IAAMulB,GAAO,EAAE,GAAG2rB,EAAM,OAAO,EAAI,CAAC,GAC3E+X,MAAoB,IAAM;AAC1B,QAAIqB,IAAQpiB,EAAG,IAAI,QAAQ1nC,CAAK;AAChC,IAAA+oD,GAAgBrhB,GAAIoiB,EAAM,KAAI,GAAIA,EAAM,UAAUpiB,EAAG,MAAM,MAAM;AAAA,EACrE;AACA,SAAOA;AACX;AAOA,SAASqiB,GAAYxkC,GAAK/lB,GAAKqvC,GAAU;AACrC,MAAIma,IAAOzjC,EAAI,QAAQ/lB,CAAG;AAC1B,MAAIwpD,EAAK,OAAO,eAAeA,EAAK,MAAK,GAAIA,EAAK,MAAK,GAAIna,CAAQ;AAC/D,WAAOrvC;AACX,MAAIwpD,EAAK,gBAAgB;AACrB,aAAS5jC,IAAI4jC,EAAK,QAAQ,GAAG5jC,KAAK,GAAGA,KAAK;AACtC,UAAIhyB,IAAQ41D,EAAK,MAAM5jC,CAAC;AACxB,UAAI4jC,EAAK,KAAK5jC,CAAC,EAAE,eAAehyB,GAAOA,GAAOy7C,CAAQ;AAClD,eAAOma,EAAK,OAAO5jC,IAAI,CAAC;AAC5B,UAAIhyB,IAAQ;AACR,eAAO;AAAA,IACf;AACJ,MAAI41D,EAAK,gBAAgBA,EAAK,OAAO,QAAQ;AACzC,aAAS5jC,IAAI4jC,EAAK,QAAQ,GAAG5jC,KAAK,GAAGA,KAAK;AACtC,UAAIhyB,IAAQ41D,EAAK,WAAW5jC,CAAC;AAC7B,UAAI4jC,EAAK,KAAK5jC,CAAC,EAAE,eAAehyB,GAAOA,GAAOy7C,CAAQ;AAClD,eAAOma,EAAK,MAAM5jC,IAAI,CAAC;AAC3B,UAAIhyB,IAAQ41D,EAAK,KAAK5jC,CAAC,EAAE;AACrB,eAAO;AAAA,IACf;AACJ,SAAO;AACX;AAOA,SAAS4kC,GAAUzkC,GAAK/lB,GAAKoR,GAAO;AAChC,MAAIo4C,IAAOzjC,EAAI,QAAQ/lB,CAAG;AAC1B,MAAI,CAACoR,EAAM,QAAQ;AACf,WAAOpR;AACX,MAAI/J,IAAUmb,EAAM;AACpB,WAAS1iB,IAAI,GAAGA,IAAI0iB,EAAM,WAAW1iB;AACjC,IAAAuH,IAAUA,EAAQ,WAAW;AACjC,WAASw0D,IAAO,GAAGA,MAASr5C,EAAM,aAAa,KAAKA,EAAM,OAAO,IAAI,IAAIq5C;AACrE,aAAS7kC,IAAI4jC,EAAK,OAAO5jC,KAAK,GAAGA,KAAK;AAClC,UAAI8kC,IAAO9kC,KAAK4jC,EAAK,QAAQ,IAAIA,EAAK,QAAQA,EAAK,MAAM5jC,IAAI,CAAC,IAAI4jC,EAAK,IAAI5jC,IAAI,CAAC,KAAK,IAAI,KAAK,GAC1F+kC,IAAYnB,EAAK,MAAM5jC,CAAC,KAAK8kC,IAAO,IAAI,IAAI,IAC5CnqD,IAASipD,EAAK,KAAK5jC,CAAC,GAAGglC,IAAO;AAClC,UAAIH,KAAQ;AACR,QAAAG,IAAOrqD,EAAO,WAAWoqD,GAAWA,GAAW10D,CAAO;AAAA,WAErD;AACD,YAAI40D,IAAWtqD,EAAO,eAAeoqD,CAAS,EAAE,aAAa10D,EAAQ,WAAW,IAAI;AACpF,QAAA20D,IAAOC,KAAYtqD,EAAO,eAAeoqD,GAAWA,GAAWE,EAAS,CAAC,CAAC;AAAA,MAC9E;AACA,UAAID;AACA,eAAOF,KAAQ,IAAIlB,EAAK,MAAMkB,IAAO,IAAIlB,EAAK,OAAO5jC,IAAI,CAAC,IAAI4jC,EAAK,MAAM5jC,IAAI,CAAC;AAAA,IACtF;AAEJ,SAAO;AACX;AAQA,SAASklC,GAAY/kC,GAAKxI,GAAMokB,IAAKpkB,GAAMnM,IAAQ8/B,EAAM,OAAO;AAC5D,MAAI3zB,KAAQokB,KAAM,CAACvwB,EAAM;AACrB,WAAO;AACX,MAAI0kC,IAAQ/vB,EAAI,QAAQxI,CAAI,GAAGw4B,IAAMhwB,EAAI,QAAQ4b,CAAE;AAEnD,SAAIopB,GAAcjV,GAAOC,GAAK3kC,CAAK,IACxB,IAAIy1C,GAAYtpC,GAAMokB,GAAIvwB,CAAK,IACnC,IAAI45C,GAAOlV,GAAOC,GAAK3kC,CAAK,EAAE,IAAG;AAC5C;AACA,SAAS25C,GAAcjV,GAAOC,GAAK3kC,GAAO;AACtC,SAAO,CAACA,EAAM,aAAa,CAACA,EAAM,WAAW0kC,EAAM,MAAK,KAAMC,EAAI,MAAK,KACnED,EAAM,OAAO,WAAWA,EAAM,SAASC,EAAI,MAAK,GAAI3kC,EAAM,OAAO;AACzE;AAqBA,MAAM45C,GAAO;AAAA,EACT,YAAYlV,GAAOC,GAAKkV,GAAU;AAC9B,SAAK,QAAQnV,GACb,KAAK,MAAMC,GACX,KAAK,WAAWkV,GAChB,KAAK,WAAW,CAAA,GAChB,KAAK,SAAS5W,EAAS;AACvB,aAAS,IAAI,GAAG,KAAKyB,EAAM,OAAO,KAAK;AACnC,UAAI74C,IAAO64C,EAAM,KAAK,CAAC;AACvB,WAAK,SAAS,KAAK;AAAA,QACf,MAAM74C,EAAK;AAAA,QACX,OAAOA,EAAK,eAAe64C,EAAM,WAAW,CAAC,CAAC;AAAA,MAC9D,CAAa;AAAA,IACL;AACA,aAAS,IAAIA,EAAM,OAAO,IAAI,GAAG;AAC7B,WAAK,SAASzB,EAAS,KAAKyB,EAAM,KAAK,CAAC,EAAE,KAAK,KAAK,MAAM,CAAC;AAAA,EACnE;AAAA,EACA,IAAI,QAAQ;AAAE,WAAO,KAAK,SAAS,SAAS;AAAA,EAAG;AAAA,EAC/C,MAAM;AAIF,WAAO,KAAK,SAAS,QAAM;AACvB,UAAIoV,IAAM,KAAK,aAAY;AAC3B,MAAIA,IACA,KAAK,WAAWA,CAAG,IAEnB,KAAK,SAAQ,KAAM,KAAK,SAAQ;AAAA,IACxC;AAMA,QAAIC,IAAa,KAAK,eAAc,GAAIC,IAAa,KAAK,OAAO,OAAO,KAAK,QAAQ,KAAK,MAAM,OAC5FtV,IAAQ,KAAK,OAAOC,IAAM,KAAK,MAAMoV,IAAa,IAAI,KAAK,MAAMrV,EAAM,IAAI,QAAQqV,CAAU,CAAC;AAClG,QAAI,CAACpV;AACD,aAAO;AAEX,QAAI9/C,IAAU,KAAK,QAAQo/C,IAAYS,EAAM,OAAOR,IAAUS,EAAI;AAClE,WAAOV,KAAaC,KAAWr/C,EAAQ,cAAc;AACjD,MAAAA,IAAUA,EAAQ,WAAW,SAC7Bo/C,KACAC;AAEJ,QAAIlkC,IAAQ,IAAI8/B,EAAMj7C,GAASo/C,GAAWC,CAAO;AACjD,WAAI6V,IAAa,KACN,IAAIpE,GAAkBjR,EAAM,KAAKqV,GAAY,KAAK,IAAI,KAAK,KAAK,IAAI,IAAG,GAAI/5C,GAAOg6C,CAAU,IACnGh6C,EAAM,QAAQ0kC,EAAM,OAAO,KAAK,IAAI,MAC7B,IAAI+Q,GAAY/Q,EAAM,KAAKC,EAAI,KAAK3kC,CAAK,IAC7C;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,eAAe;AACX,QAAIi6C,IAAa,KAAK,SAAS;AAC/B,aAAStW,IAAM,KAAK,SAAS,SAASnvB,IAAI,GAAG0vB,IAAU,KAAK,SAAS,SAAS1vB,IAAIylC,GAAYzlC,KAAK;AAC/F,UAAI3oB,IAAO83C,EAAI;AAGf,UAFIA,EAAI,aAAa,MACjBO,IAAU,IACVr4C,EAAK,KAAK,KAAK,aAAaq4C,KAAW1vB,GAAG;AAC1C,QAAAylC,IAAazlC;AACb;AAAA,MACJ;AACA,MAAAmvB,IAAM93C,EAAK;AAAA,IACf;AAGA,aAASwtD,IAAO,GAAGA,KAAQ,GAAGA;AAC1B,eAASa,IAAab,KAAQ,IAAIY,IAAa,KAAK,SAAS,WAAWC,KAAc,GAAGA,KAAc;AACnG,YAAI5lC,GAAUnlB,IAAS;AACvB,QAAI+qD,KACA/qD,IAASgrD,GAAU,KAAK,SAAS,SAASD,IAAa,CAAC,EAAE,YAC1D5lC,IAAWnlB,EAAO,WAGlBmlB,IAAW,KAAK,SAAS;AAE7B,YAAI+uB,IAAQ/uB,EAAS;AACrB,iBAAS8lC,IAAgB,KAAK,OAAOA,KAAiB,GAAGA,KAAiB;AACtE,cAAI,EAAE,MAAAxyD,GAAM,OAAAnC,EAAK,IAAK,KAAK,SAAS20D,CAAa,GAAGnsD,GAAMosD,IAAS;AAInE,cAAIhB,KAAQ,MAAMhW,IAAQ59C,EAAM,UAAU49C,EAAM,IAAI,MAAMgX,IAAS50D,EAAM,WAAWw9C,EAAS,KAAKI,CAAK,GAAG,EAAK,KACzGl0C,KAAUvH,EAAK,kBAAkBuH,EAAO,IAAI;AAC9C,mBAAO,EAAE,YAAA+qD,GAAY,eAAAE,GAAe,QAAAjrD,GAAQ,QAAAkrD,EAAM;AAGjD,cAAIhB,KAAQ,KAAKhW,MAAUp1C,IAAOxI,EAAM,aAAa49C,EAAM,IAAI;AAChE,mBAAO,EAAE,YAAA6W,GAAY,eAAAE,GAAe,QAAAjrD,GAAQ,MAAAlB,EAAI;AAGpD,cAAIkB,KAAU1J,EAAM,UAAU0J,EAAO,IAAI;AACrC;AAAA,QACR;AAAA,MACJ;AAAA,EAER;AAAA,EACA,WAAW;AACP,QAAI,EAAE,SAAAtK,GAAS,WAAAo/C,GAAW,SAAAC,EAAO,IAAK,KAAK,UACvCj+C,IAAQk0D,GAAUt1D,GAASo/C,CAAS;AACxC,WAAI,CAACh+C,EAAM,cAAcA,EAAM,WAAW,SAC/B,MACX,KAAK,WAAW,IAAI65C,EAAMj7C,GAASo/C,IAAY,GAAG,KAAK,IAAIC,GAASj+C,EAAM,OAAOg+C,KAAap/C,EAAQ,OAAOq/C,IAAUD,IAAY,IAAI,CAAC,CAAC,GAClI;AAAA,EACX;AAAA,EACA,WAAW;AACP,QAAI,EAAE,SAAAp/C,GAAS,WAAAo/C,GAAW,SAAAC,EAAO,IAAK,KAAK,UACvCj+C,IAAQk0D,GAAUt1D,GAASo/C,CAAS;AACxC,QAAIh+C,EAAM,cAAc,KAAKg+C,IAAY,GAAG;AACxC,UAAIqW,IAAYz1D,EAAQ,OAAOo/C,KAAaA,IAAYh+C,EAAM;AAC9D,WAAK,WAAW,IAAI65C,EAAMya,GAAiB11D,GAASo/C,IAAY,GAAG,CAAC,GAAGA,IAAY,GAAGqW,IAAYrW,IAAY,IAAIC,CAAO;AAAA,IAC7H;AAEI,WAAK,WAAW,IAAIpE,EAAMya,GAAiB11D,GAASo/C,GAAW,CAAC,GAAGA,GAAWC,CAAO;AAAA,EAE7F;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW,EAAE,YAAAgW,GAAY,eAAAE,GAAe,QAAAjrD,GAAQ,QAAAkrD,GAAQ,MAAApsD,KAAQ;AAC5D,WAAO,KAAK,QAAQmsD;AAChB,WAAK,kBAAiB;AAC1B,QAAInsD;AACA,eAAS3Q,IAAI,GAAGA,IAAI2Q,EAAK,QAAQ3Q;AAC7B,aAAK,iBAAiB2Q,EAAK3Q,CAAC,CAAC;AACrC,QAAI0iB,IAAQ,KAAK,UAAUsU,IAAWnlB,IAASA,EAAO,UAAU6Q,EAAM,SAClEikC,IAAYjkC,EAAM,YAAYk6C,GAC9BM,IAAQ,GAAGnmD,IAAM,CAAA,GACjB,EAAE,OAAA5O,GAAO,MAAAmC,EAAI,IAAK,KAAK,SAASwyD,CAAa;AACjD,QAAIC,GAAQ;AACR,eAAS/8D,IAAI,GAAGA,IAAI+8D,EAAO,YAAY/8D;AACnC,QAAA+W,EAAI,KAAKgmD,EAAO,MAAM/8D,CAAC,CAAC;AAC5B,MAAAmI,IAAQA,EAAM,cAAc40D,CAAM;AAAA,IACtC;AAIA,QAAII,IAAgBnmC,EAAS,OAAO4lC,KAAel6C,EAAM,QAAQ,OAAOA,EAAM;AAG9E,WAAOw6C,IAAQlmC,EAAS,cAAY;AAChC,UAAI70B,IAAO60B,EAAS,MAAMkmC,CAAK,GAAGtf,IAAUz1C,EAAM,UAAUhG,EAAK,IAAI;AACrE,UAAI,CAACy7C;AACD;AACJ,MAAAsf,MACIA,IAAQ,KAAKvW,KAAa,KAAKxkD,EAAK,QAAQ,UAC5CgG,IAAQy1C,GACR7mC,EAAI,KAAKqmD,GAAej7D,EAAK,KAAKmI,EAAK,aAAanI,EAAK,KAAK,CAAC,GAAG+6D,KAAS,IAAIvW,IAAY,GAAGuW,KAASlmC,EAAS,aAAammC,IAAe,EAAE,CAAC;AAAA,IAEvJ;AACA,QAAI/S,IAAQ8S,KAASlmC,EAAS;AAC9B,IAAKozB,MACD+S,IAAe,KACnB,KAAK,SAASE,GAAc,KAAK,QAAQP,GAAenX,EAAS,KAAK5uC,CAAG,CAAC,GAC1E,KAAK,SAAS+lD,CAAa,EAAE,QAAQ30D,GAGjCiiD,KAAS+S,IAAe,KAAKtrD,KAAUA,EAAO,QAAQ,KAAK,SAAS,KAAK,KAAK,EAAE,QAAQ,KAAK,SAAS,SAAS,KAC/G,KAAK,kBAAiB;AAE1B,aAAS7R,IAAI,GAAGqmD,IAAMrvB,GAAUh3B,IAAIm9D,GAAcn9D,KAAK;AACnD,UAAIuO,IAAO83C,EAAI;AACf,WAAK,SAAS,KAAK,EAAE,MAAM93C,EAAK,MAAM,OAAOA,EAAK,eAAeA,EAAK,UAAU,EAAC,CAAE,GACnF83C,IAAM93C,EAAK;AAAA,IACf;AAIA,SAAK,WAAY67C,IACXwS,KAAc,IAAIpa,EAAM,QACpB,IAAIA,EAAMya,GAAiBv6C,EAAM,SAASk6C,IAAa,GAAG,CAAC,GAAGA,IAAa,GAAGO,IAAe,IAAIz6C,EAAM,UAAUk6C,IAAa,CAAC,IAFhH,IAAIpa,EAAMya,GAAiBv6C,EAAM,SAASk6C,GAAYM,CAAK,GAAGx6C,EAAM,WAAWA,EAAM,OAAO;AAAA,EAGzH;AAAA,EACA,iBAAiB;AACb,QAAI,CAAC,KAAK,IAAI,OAAO;AACjB,aAAO;AACX,QAAIssC,IAAM,KAAK,SAAS,KAAK,KAAK,GAAGzkD;AACrC,QAAI,CAACykD,EAAI,KAAK,eAAe,CAACsO,GAAiB,KAAK,KAAK,KAAK,IAAI,OAAOtO,EAAI,MAAMA,EAAI,OAAO,EAAK,KAC9F,KAAK,IAAI,SAAS,KAAK,UAAUzkD,IAAQ,KAAK,eAAe,KAAK,GAAG,MAAMA,EAAM,SAAS,KAAK;AAChG,aAAO;AACX,QAAI,EAAE,OAAAssB,MAAU,KAAK,KAAK/sB,IAAQ,KAAK,IAAI,MAAM+sB,CAAK;AACtD,WAAOA,IAAQ,KAAK/sB,KAAS,KAAK,IAAI,IAAI,EAAE+sB,CAAK;AAC7C,QAAE/sB;AACN,WAAOA;AAAA,EACX;AAAA,EACA,eAAeu9C,GAAK;AAChB,IAAAoD,EAAM,UAASzqD,IAAI,KAAK,IAAI,KAAK,OAAOqnD,EAAI,KAAK,GAAGrnD,KAAK,GAAGA,KAAK;AAC7D,UAAI,EAAE,OAAAmI,GAAO,MAAAmC,EAAI,IAAK,KAAK,SAAStK,CAAC,GACjCu9D,IAAYv9D,IAAIqnD,EAAI,SAASA,EAAI,IAAIrnD,IAAI,CAAC,KAAKqnD,EAAI,OAAOA,EAAI,SAASrnD,IAAI,KAC3Ew8D,IAAMc,GAAiBjW,GAAKrnD,GAAGsK,GAAMnC,GAAOo1D,CAAS;AACzD,UAAKf,GAEL;AAAA,iBAAStlC,IAAIl3B,IAAI,GAAGk3B,KAAK,GAAGA,KAAK;AAC7B,cAAI,EAAE,OAAA/uB,GAAO,MAAAmC,EAAI,IAAK,KAAK,SAAS4sB,CAAC,GACjC0mB,IAAU0f,GAAiBjW,GAAKnwB,GAAG5sB,GAAMnC,GAAO,EAAI;AACxD,cAAI,CAACy1C,KAAWA,EAAQ;AACpB,qBAAS6M;AAAA,QACjB;AACA,eAAO,EAAE,OAAOzqD,GAAG,KAAAw8D,GAAK,MAAMe,IAAYlW,EAAI,IAAI,QAAQA,EAAI,MAAMrnD,IAAI,CAAC,CAAC,IAAIqnD,EAAG;AAAA;AAAA,IACrF;AAAA,EACJ;AAAA,EACA,MAAMA,GAAK;AACP,QAAI/pC,IAAQ,KAAK,eAAe+pC,CAAG;AACnC,QAAI,CAAC/pC;AACD,aAAO;AACX,WAAO,KAAK,QAAQA,EAAM;AACtB,WAAK,kBAAiB;AAC1B,IAAIA,EAAM,IAAI,eACV,KAAK,SAAS+/C,GAAc,KAAK,QAAQ//C,EAAM,OAAOA,EAAM,GAAG,IACnE+pC,IAAM/pC,EAAM;AACZ,aAAS4Z,IAAI5Z,EAAM,QAAQ,GAAG4Z,KAAKmwB,EAAI,OAAOnwB,KAAK;AAC/C,UAAI3oB,IAAO84C,EAAI,KAAKnwB,CAAC,GAAGngB,IAAMxI,EAAK,KAAK,aAAa,WAAWA,EAAK,SAAS,IAAM84C,EAAI,MAAMnwB,CAAC,CAAC;AAChG,WAAK,iBAAiB3oB,EAAK,MAAMA,EAAK,OAAOwI,CAAG;AAAA,IACpD;AACA,WAAOswC;AAAA,EACX;AAAA,EACA,iBAAiB/8C,GAAMU,IAAQ,MAAMzD,GAAS;AAC1C,QAAIynD,IAAM,KAAK,SAAS,KAAK,KAAK;AAClC,IAAAA,EAAI,QAAQA,EAAI,MAAM,UAAU1kD,CAAI,GACpC,KAAK,SAAS+yD,GAAc,KAAK,QAAQ,KAAK,OAAO1X,EAAS,KAAKr7C,EAAK,OAAOU,GAAOzD,CAAO,CAAC,CAAC,GAC/F,KAAK,SAAS,KAAK,EAAE,MAAA+C,GAAM,OAAOA,EAAK,cAAc;AAAA,EACzD;AAAA,EACA,oBAAoB;AAEhB,QAAIyM,IADO,KAAK,SAAS,IAAG,EACb,MAAM,WAAW4uC,EAAS,OAAO,EAAI;AACpD,IAAI5uC,EAAI,eACJ,KAAK,SAASsmD,GAAc,KAAK,QAAQ,KAAK,SAAS,QAAQtmD,CAAG;AAAA,EAC1E;AACJ;AACA,SAASkmD,GAAiBjmC,GAAUH,GAAOxV,GAAO;AAC9C,SAAIwV,KAAS,IACFG,EAAS,WAAW3V,GAAO2V,EAAS,UAAU,IAClDA,EAAS,aAAa,GAAGA,EAAS,WAAW,KAAKimC,GAAiBjmC,EAAS,WAAW,SAASH,IAAQ,GAAGxV,CAAK,CAAC,CAAC;AAC7H;AACA,SAASg8C,GAAcrmC,GAAUH,GAAOtvB,GAAS;AAC7C,SAAIsvB,KAAS,IACFG,EAAS,OAAOzvB,CAAO,IAC3ByvB,EAAS,aAAaA,EAAS,aAAa,GAAGA,EAAS,UAAU,KAAKqmC,GAAcrmC,EAAS,UAAU,SAASH,IAAQ,GAAGtvB,CAAO,CAAC,CAAC;AAChJ;AACA,SAASs1D,GAAU7lC,GAAUH,GAAO;AAChC,WAAS72B,IAAI,GAAGA,IAAI62B,GAAO72B;AACvB,IAAAg3B,IAAWA,EAAS,WAAW;AACnC,SAAOA;AACX;AACA,SAASomC,GAAe7uD,GAAMo4C,GAAWC,GAAS;AAC9C,MAAID,KAAa;AACb,WAAOp4C;AACX,MAAI47C,IAAO57C,EAAK;AAChB,SAAIo4C,IAAY,MACZwD,IAAOA,EAAK,aAAa,GAAGiT,GAAejT,EAAK,YAAYxD,IAAY,GAAGwD,EAAK,cAAc,IAAIvD,IAAU,IAAI,CAAC,CAAC,IAClHD,IAAY,MACZwD,IAAO57C,EAAK,KAAK,aAAa,WAAW47C,CAAI,EAAE,OAAOA,CAAI,GACtDvD,KAAW,MACXuD,IAAOA,EAAK,OAAO57C,EAAK,KAAK,aAAa,cAAc47C,CAAI,EAAE,WAAWxE,EAAS,OAAO,EAAI,CAAC,KAE/Fp3C,EAAK,KAAK47C,CAAI;AACzB;AACA,SAASmT,GAAiBjW,GAAKxwB,GAAOvsB,GAAMnC,GAAO0U,GAAM;AACrD,MAAItO,IAAO84C,EAAI,KAAKxwB,CAAK,GAAG3xB,IAAQ2X,IAAOwqC,EAAI,WAAWxwB,CAAK,IAAIwwB,EAAI,MAAMxwB,CAAK;AAClF,MAAI3xB,KAASqJ,EAAK,cAAc,CAACjE,EAAK,kBAAkBiE,EAAK,IAAI;AAC7D,WAAO;AACX,MAAIiuD,IAAMr0D,EAAM,WAAWoG,EAAK,SAAS,IAAMrJ,CAAK;AACpD,SAAOs3D,KAAO,CAACgB,GAAalzD,GAAMiE,EAAK,SAASrJ,CAAK,IAAIs3D,IAAM;AACnE;AACA,SAASgB,GAAalzD,GAAM0sB,GAAUllB,GAAO;AACzC,WAAS9R,IAAI8R,GAAO9R,IAAIg3B,EAAS,YAAYh3B;AACzC,QAAI,CAACsK,EAAK,YAAY0sB,EAAS,MAAMh3B,CAAC,EAAE,KAAK;AACzC,aAAO;AACf,SAAO;AACX;AACA,SAASy9D,GAAenzD,GAAM;AAC1B,SAAOA,EAAK,KAAK,YAAYA,EAAK,KAAK;AAC3C;AACA,SAASozD,GAAalkB,GAAI3qB,GAAMokB,GAAIvwB,GAAO;AACvC,MAAI,CAACA,EAAM;AACP,WAAO82B,EAAG,YAAY3qB,GAAMokB,CAAE;AAClC,MAAImU,IAAQ5N,EAAG,IAAI,QAAQ3qB,CAAI,GAAGw4B,IAAM7N,EAAG,IAAI,QAAQvG,CAAE;AACzD,MAAIopB,GAAcjV,GAAOC,GAAK3kC,CAAK;AAC/B,WAAO82B,EAAG,KAAK,IAAI2e,GAAYtpC,GAAMokB,GAAIvwB,CAAK,CAAC;AACnD,MAAIi7C,IAAeC,GAAcxW,GAAO5N,EAAG,IAAI,QAAQvG,CAAE,CAAC;AAE1D,EAAI0qB,EAAaA,EAAa,SAAS,CAAC,KAAK,KACzCA,EAAa,IAAG;AAGpB,MAAIE,IAAkB,EAAEzW,EAAM,QAAQ;AACtC,EAAAuW,EAAa,QAAQE,CAAe;AAKpC,WAAS3mC,IAAIkwB,EAAM,OAAO91C,IAAM81C,EAAM,MAAM,GAAGlwB,IAAI,GAAGA,KAAK5lB,KAAO;AAC9D,QAAIq7C,IAAOvF,EAAM,KAAKlwB,CAAC,EAAE,KAAK;AAC9B,QAAIy1B,EAAK,YAAYA,EAAK,qBAAqBA,EAAK;AAChD;AACJ,IAAIgR,EAAa,QAAQzmC,CAAC,IAAI,KAC1B2mC,IAAkB3mC,IACbkwB,EAAM,OAAOlwB,CAAC,KAAK5lB,KACxBqsD,EAAa,OAAO,GAAG,GAAG,CAACzmC,CAAC;AAAA,EACpC;AAGA,MAAI4mC,IAAuBH,EAAa,QAAQE,CAAe,GAC3DE,IAAY,CAAA,GAAIC,IAAiBt7C,EAAM;AAC3C,WAASnb,IAAUmb,EAAM,SAAS1iB,IAAI,KAAIA,KAAK;AAC3C,QAAIuO,IAAOhH,EAAQ;AAEnB,QADAw2D,EAAU,KAAKxvD,CAAI,GACfvO,KAAK0iB,EAAM;AACX;AACJ,IAAAnb,IAAUgH,EAAK;AAAA,EACnB;AAGA,WAAS2oB,IAAI8mC,IAAiB,GAAG9mC,KAAK,GAAGA,KAAK;AAC1C,QAAI+mC,IAAWF,EAAU7mC,CAAC,GAAGgnC,IAAMT,GAAeQ,EAAS,IAAI;AAC/D,QAAIC,KAAO,CAACD,EAAS,WAAW7W,EAAM,KAAK,KAAK,IAAIyW,CAAe,IAAI,CAAC,CAAC;AACrE,MAAAG,IAAiB9mC;AAAA,aACZgnC,KAAO,CAACD,EAAS,KAAK;AAC3B;AAAA,EACR;AACA,WAAS95D,IAAIue,EAAM,WAAWve,KAAK,GAAGA,KAAK;AACvC,QAAIg6D,KAAah6D,IAAI65D,IAAiB,MAAMt7C,EAAM,YAAY,IAC1DykC,IAAS4W,EAAUI,CAAS;AAChC,QAAKhX;AAEL,eAASnnD,IAAI,GAAGA,IAAI29D,EAAa,QAAQ39D,KAAK;AAG1C,YAAIo+D,IAAcT,GAAc39D,IAAI89D,KAAwBH,EAAa,MAAM,GAAGU,IAAS;AAC3F,QAAID,IAAc,MACdC,IAAS,IACTD,IAAc,CAACA;AAEnB,YAAIvsD,IAASu1C,EAAM,KAAKgX,IAAc,CAAC,GAAGl5D,IAAQkiD,EAAM,MAAMgX,IAAc,CAAC;AAC7E,YAAIvsD,EAAO,eAAe3M,GAAOA,GAAOiiD,EAAO,MAAMA,EAAO,KAAK;AAC7D,iBAAO3N,EAAG,QAAQ4N,EAAM,OAAOgX,CAAW,GAAGC,IAAShX,EAAI,MAAM+W,CAAW,IAAInrB,GAAI,IAAIuP,EAAM8b,GAAc57C,EAAM,SAAS,GAAGA,EAAM,WAAWy7C,CAAS,GAAGA,GAAWz7C,EAAM,OAAO,CAAC;AAAA,MAC3L;AAAA,EACJ;AACA,MAAI67C,IAAa/kB,EAAG,MAAM;AAC1B,WAASx5C,IAAI29D,EAAa,SAAS,GAAG39D,KAAK,MACvCw5C,EAAG,QAAQ3qB,GAAMokB,GAAIvwB,CAAK,GACtB,EAAA82B,EAAG,MAAM,SAAS+kB,KAFoBv+D,KAAK;AAI/C,QAAI62B,IAAQ8mC,EAAa39D,CAAC;AAC1B,IAAI62B,IAAQ,MAEZhI,IAAOu4B,EAAM,OAAOvwB,CAAK,GACzBoc,IAAKoU,EAAI,MAAMxwB,CAAK;AAAA,EACxB;AACJ;AACA,SAASynC,GAActnC,GAAUH,GAAO2nC,GAASC,GAAS5sD,GAAQ;AAC9D,MAAIglB,IAAQ2nC,GAAS;AACjB,QAAIzY,IAAQ/uB,EAAS;AACrB,IAAAA,IAAWA,EAAS,aAAa,GAAG+uB,EAAM,KAAKuY,GAAcvY,EAAM,SAASlvB,IAAQ,GAAG2nC,GAASC,GAAS1Y,CAAK,CAAC,CAAC;AAAA,EACpH;AACA,MAAIlvB,IAAQ4nC,GAAS;AACjB,QAAIt2D,IAAQ0J,EAAO,eAAe,CAAC,GAC/BC,IAAQ3J,EAAM,WAAW6uB,CAAQ,EAAE,OAAOA,CAAQ;AACtD,IAAAA,IAAWllB,EAAM,OAAO3J,EAAM,cAAc2J,CAAK,EAAE,WAAW6zC,EAAS,OAAO,EAAI,CAAC;AAAA,EACvF;AACA,SAAO3uB;AACX;AACA,SAAS0nC,GAAiBllB,GAAI3qB,GAAMokB,GAAI1kC,GAAM;AAC1C,MAAI,CAACA,EAAK,YAAYsgB,KAAQokB,KAAMuG,EAAG,IAAI,QAAQ3qB,CAAI,EAAE,OAAO,QAAQ,MAAM;AAC1E,QAAIxd,IAAQwqD,GAAYriB,EAAG,KAAK3qB,GAAMtgB,EAAK,IAAI;AAC/C,IAAI8C,KAAS,SACTwd,IAAOokB,IAAK5hC;AAAA,EACpB;AACA,EAAAmoC,EAAG,aAAa3qB,GAAMokB,GAAI,IAAIuP,EAAMmD,EAAS,KAAKp3C,CAAI,GAAG,GAAG,CAAC,CAAC;AAClE;AACA,SAASowD,GAAYnlB,GAAI3qB,GAAMokB,GAAI;AAC/B,MAAImU,IAAQ5N,EAAG,IAAI,QAAQ3qB,CAAI,GAAGw4B,IAAM7N,EAAG,IAAI,QAAQvG,CAAE,GACrD2rB,IAAUhB,GAAcxW,GAAOC,CAAG;AACtC,WAASrnD,IAAI,GAAGA,IAAI4+D,EAAQ,QAAQ5+D,KAAK;AACrC,QAAI62B,IAAQ+nC,EAAQ5+D,CAAC,GAAGN,IAAOM,KAAK4+D,EAAQ,SAAS;AACrD,QAAKl/D,KAAQm3B,KAAS,KAAMuwB,EAAM,KAAKvwB,CAAK,EAAE,KAAK,aAAa;AAC5D,aAAO2iB,EAAG,OAAO4N,EAAM,MAAMvwB,CAAK,GAAGwwB,EAAI,IAAIxwB,CAAK,CAAC;AACvD,QAAIA,IAAQ,MAAMn3B,KAAQ0nD,EAAM,KAAKvwB,IAAQ,CAAC,EAAE,WAAWuwB,EAAM,MAAMvwB,IAAQ,CAAC,GAAGwwB,EAAI,WAAWxwB,IAAQ,CAAC,CAAC;AACxG,aAAO2iB,EAAG,OAAO4N,EAAM,OAAOvwB,CAAK,GAAGwwB,EAAI,MAAMxwB,CAAK,CAAC;AAAA,EAC9D;AACA,WAASK,IAAI,GAAGA,KAAKkwB,EAAM,SAASlwB,KAAKmwB,EAAI,OAAOnwB;AAChD,QAAIrI,IAAOu4B,EAAM,MAAMlwB,CAAC,KAAKkwB,EAAM,QAAQlwB,KAAK+b,IAAKmU,EAAM,IAAIlwB,CAAC,KAAKmwB,EAAI,IAAInwB,CAAC,IAAI+b,KAAMoU,EAAI,QAAQnwB,KAChGkwB,EAAM,MAAMlwB,IAAI,CAAC,KAAKmwB,EAAI,MAAMnwB,IAAI,CAAC,KAAKkwB,EAAM,KAAKlwB,IAAI,CAAC,EAAE,WAAWkwB,EAAM,MAAMlwB,IAAI,CAAC,GAAGmwB,EAAI,MAAMnwB,IAAI,CAAC,CAAC;AAC3G,aAAOsiB,EAAG,OAAO4N,EAAM,OAAOlwB,CAAC,GAAG+b,CAAE;AAE5C,EAAAuG,EAAG,OAAO3qB,GAAMokB,CAAE;AACtB;AAGA,SAAS2qB,GAAcxW,GAAOC,GAAK;AAC/B,MAAIvkD,IAAS,IAAI0tD,IAAW,KAAK,IAAIpJ,EAAM,OAAOC,EAAI,KAAK;AAC3D,WAASnwB,IAAIs5B,GAAUt5B,KAAK,GAAGA,KAAK;AAChC,QAAIplB,IAAQs1C,EAAM,MAAMlwB,CAAC;AACzB,QAAIplB,IAAQs1C,EAAM,OAAOA,EAAM,QAAQlwB,MACnCmwB,EAAI,IAAInwB,CAAC,IAAImwB,EAAI,OAAOA,EAAI,QAAQnwB,MACpCkwB,EAAM,KAAKlwB,CAAC,EAAE,KAAK,KAAK,aACxBmwB,EAAI,KAAKnwB,CAAC,EAAE,KAAK,KAAK;AACtB;AACJ,KAAIplB,KAASu1C,EAAI,MAAMnwB,CAAC,KACnBA,KAAKkwB,EAAM,SAASlwB,KAAKmwB,EAAI,SAASD,EAAM,OAAO,iBAAiBC,EAAI,OAAO,iBAC5EnwB,KAAKmwB,EAAI,MAAMnwB,IAAI,CAAC,KAAKplB,IAAQ,MACrChP,EAAO,KAAKo0B,CAAC;AAAA,EACrB;AACA,SAAOp0B;AACX;AAKA,MAAM+7D,WAAiBtH,GAAK;AAAA;AAAA;AAAA;AAAA,EAIxB,YAIAjmD,GAIApG,GAEAjN,GAAO;AACH,UAAK,GACL,KAAK,MAAMqT,GACX,KAAK,OAAOpG,GACZ,KAAK,QAAQjN;AAAA,EACjB;AAAA,EACA,MAAMo5B,GAAK;AACP,QAAI9oB,IAAO8oB,EAAI,OAAO,KAAK,GAAG;AAC9B,QAAI,CAAC9oB;AACD,aAAOkpD,GAAW,KAAK,sCAAsC;AACjE,QAAIzsD,IAAQ,uBAAO,OAAO,IAAI;AAC9B,aAAS0E,KAAQnB,EAAK;AAClB,MAAAvD,EAAM0E,CAAI,IAAInB,EAAK,MAAMmB,CAAI;AACjC,IAAA1E,EAAM,KAAK,IAAI,IAAI,KAAK;AACxB,QAAIsC,IAAUiB,EAAK,KAAK,OAAOvD,GAAO,MAAMuD,EAAK,KAAK;AACtD,WAAOkpD,GAAW,YAAYpgC,GAAK,KAAK,KAAK,KAAK,MAAM,GAAG,IAAImrB,EAAMmD,EAAS,KAAKr4C,CAAO,GAAG,GAAGiB,EAAK,SAAS,IAAI,CAAC,CAAC;AAAA,EACxH;AAAA,EACA,SAAS;AACL,WAAO0nD,GAAQ;AAAA,EACnB;AAAA,EACA,OAAO5+B,GAAK;AACR,WAAO,IAAIwnC,GAAS,KAAK,KAAK,KAAK,MAAMxnC,EAAI,OAAO,KAAK,GAAG,EAAE,MAAM,KAAK,IAAI,CAAC;AAAA,EAClF;AAAA,EACA,IAAI2/B,GAAS;AACT,QAAI1lD,IAAM0lD,EAAQ,UAAU,KAAK,KAAK,CAAC;AACvC,WAAO1lD,EAAI,eAAe,OAAO,IAAIutD,GAASvtD,EAAI,KAAK,KAAK,MAAM,KAAK,KAAK;AAAA,EAChF;AAAA,EACA,SAAS;AACL,WAAO,EAAE,UAAU,QAAQ,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM,OAAO,KAAK,MAAK;AAAA,EAChF;AAAA,EACA,OAAO,SAASokC,GAAQrE,GAAM;AAC1B,QAAI,OAAOA,EAAK,OAAO,YAAY,OAAOA,EAAK,QAAQ;AACnD,YAAM,IAAI,WAAW,qCAAqC;AAC9D,WAAO,IAAIwtB,GAASxtB,EAAK,KAAKA,EAAK,MAAMA,EAAK,KAAK;AAAA,EACvD;AACJ;AACAkmB,GAAK,OAAO,QAAQsH,EAAQ;AAI5B,MAAMC,WAAoBvH,GAAK;AAAA;AAAA;AAAA;AAAA,EAI3B,YAIArsD,GAEAjN,GAAO;AACH,UAAK,GACL,KAAK,OAAOiN,GACZ,KAAK,QAAQjN;AAAA,EACjB;AAAA,EACA,MAAMo5B,GAAK;AACP,QAAIrsB,IAAQ,uBAAO,OAAO,IAAI;AAC9B,aAAS0E,KAAQ2nB,EAAI;AACjB,MAAArsB,EAAM0E,CAAI,IAAI2nB,EAAI,MAAM3nB,CAAI;AAChC,IAAA1E,EAAM,KAAK,IAAI,IAAI,KAAK;AACxB,QAAIsC,IAAU+pB,EAAI,KAAK,OAAOrsB,GAAOqsB,EAAI,SAASA,EAAI,KAAK;AAC3D,WAAOogC,GAAW,GAAGnqD,CAAO;AAAA,EAChC;AAAA,EACA,SAAS;AACL,WAAO2oD,GAAQ;AAAA,EACnB;AAAA,EACA,OAAO5+B,GAAK;AACR,WAAO,IAAIynC,GAAY,KAAK,MAAMznC,EAAI,MAAM,KAAK,IAAI,CAAC;AAAA,EAC1D;AAAA,EACA,IAAI2/B,GAAS;AACT,WAAO;AAAA,EACX;AAAA,EACA,SAAS;AACL,WAAO,EAAE,UAAU,WAAW,MAAM,KAAK,MAAM,OAAO,KAAK,MAAK;AAAA,EACpE;AAAA,EACA,OAAO,SAASthB,GAAQrE,GAAM;AAC1B,QAAI,OAAOA,EAAK,QAAQ;AACpB,YAAM,IAAI,WAAW,wCAAwC;AACjE,WAAO,IAAIytB,GAAYztB,EAAK,MAAMA,EAAK,KAAK;AAAA,EAChD;AACJ;AACAkmB,GAAK,OAAO,WAAWuH,EAAW;AAKlC,IAAIC,KAAiB,cAAc,MAAM;AACzC;AACAA,KAAiB,SAASA,EAAexqD,GAAS;AAC9C,MAAIyqD,IAAM,MAAM,KAAK,MAAMzqD,CAAO;AAClC,SAAAyqD,EAAI,YAAYD,EAAe,WACxBC;AACX;AACAD,GAAe,YAAY,OAAO,OAAO,MAAM,SAAS;AACxDA,GAAe,UAAU,cAAcA;AACvCA,GAAe,UAAU,OAAO;AAQhC,MAAME,GAAU;AAAA;AAAA;AAAA;AAAA,EAIZ,YAKA5nC,GAAK;AACD,SAAK,MAAMA,GAIX,KAAK,QAAQ,CAAA,GAIb,KAAK,OAAO,CAAA,GAIZ,KAAK,UAAU,IAAIu/B;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,SAAS;AAAE,WAAO,KAAK,KAAK,SAAS,KAAK,KAAK,CAAC,IAAI,KAAK;AAAA,EAAK;AAAA;AAAA;AAAA;AAAA;AAAA,EAKlE,KAAK/9B,GAAM;AACP,QAAI/1B,IAAS,KAAK,UAAU+1B,CAAI;AAChC,QAAI/1B,EAAO;AACP,YAAM,IAAIi8D,GAAej8D,EAAO,MAAM;AAC1C,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,UAAU+1B,GAAM;AACZ,QAAI/1B,IAAS+1B,EAAK,MAAM,KAAK,GAAG;AAChC,WAAK/1B,EAAO,UACR,KAAK,QAAQ+1B,GAAM/1B,EAAO,GAAG,GAC1BA;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,aAAa;AACb,WAAO,KAAK,MAAM,SAAS;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA,EAIA,QAAQ+1B,GAAMxB,GAAK;AACf,SAAK,KAAK,KAAK,KAAK,GAAG,GACvB,KAAK,MAAM,KAAKwB,CAAI,GACpB,KAAK,QAAQ,UAAUA,EAAK,OAAM,CAAE,GACpC,KAAK,MAAMxB;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQxI,GAAMokB,IAAKpkB,GAAMnM,IAAQ8/B,EAAM,OAAO;AAC1C,QAAI3pB,IAAOujC,GAAY,KAAK,KAAKvtC,GAAMokB,GAAIvwB,CAAK;AAChD,WAAImW,KACA,KAAK,KAAKA,CAAI,GACX;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,YAAYhK,GAAMokB,GAAI1rC,GAAS;AAC3B,WAAO,KAAK,QAAQsnB,GAAMokB,GAAI,IAAIuP,EAAMmD,EAAS,KAAKp+C,CAAO,GAAG,GAAG,CAAC,CAAC;AAAA,EACzE;AAAA;AAAA;AAAA;AAAA,EAIA,OAAOsnB,GAAMokB,GAAI;AACb,WAAO,KAAK,QAAQpkB,GAAMokB,GAAIuP,EAAM,KAAK;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA,EAIA,OAAOlxC,GAAK/J,GAAS;AACjB,WAAO,KAAK,YAAY+J,GAAKA,GAAK/J,CAAO;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAoBA,aAAasnB,GAAMokB,GAAIvwB,GAAO;AAC1B,WAAAg7C,GAAa,MAAM7uC,GAAMokB,GAAIvwB,CAAK,GAC3B;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,iBAAiBmM,GAAMokB,GAAI1kC,GAAM;AAC7B,WAAAmwD,GAAiB,MAAM7vC,GAAMokB,GAAI1kC,CAAI,GAC9B;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,YAAYsgB,GAAMokB,GAAI;AAClB,WAAA0rB,GAAY,MAAM9vC,GAAMokB,CAAE,GACnB;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,KAAK1G,GAAO/8B,GAAQ;AAChB,WAAA+pD,GAAK,MAAMhtB,GAAO/8B,CAAM,GACjB;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,KAAK8B,GAAKulB,IAAQ,GAAG;AACjB,WAAA1kB,GAAK,MAAMb,GAAKulB,CAAK,GACd;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,KAAK0V,GAAO2tB,GAAU;AAClB,WAAAvpD,GAAK,MAAM47B,GAAO2tB,CAAQ,GACnB;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,aAAarrC,GAAMokB,IAAKpkB,GAAMvkB,GAAMU,IAAQ,MAAM;AAC9CmvD,WAAAA,GAAa,MAAMtrC,GAAMokB,GAAI3oC,GAAMU,CAAK,GACjC;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,cAAcsG,GAAKhH,GAAMU,IAAQ,MAAMy7C,GAAO;AAC1C,WAAAsU,GAAc,MAAMzpD,GAAKhH,GAAMU,GAAOy7C,CAAK,GACpC;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,iBAAiBn1C,GAAKpG,GAAMjN,GAAO;AAC/B,gBAAK,KAAK,IAAI4gE,GAASvtD,GAAKpG,GAAMjN,CAAK,CAAC,GACjC;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,gBAAgBiN,GAAMjN,GAAO;AACzB,gBAAK,KAAK,IAAI6gE,GAAY5zD,GAAMjN,CAAK,CAAC,GAC/B;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,YAAYqT,GAAKujC,GAAM;AACnB,gBAAK,KAAK,IAAImjB,GAAgB1mD,GAAKujC,CAAI,CAAC,GACjC;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,eAAevjC,GAAKujC,GAAM;AACtB,QAAItmC,IAAO,KAAK,IAAI,OAAO+C,CAAG;AAC9B,QAAI,CAAC/C;AACD,YAAM,IAAI,WAAW,yBAAyB+C,CAAG;AACrD,QAAIujC,aAAgB0R;AAChB,MAAI1R,EAAK,QAAQtmC,EAAK,KAAK,KACvB,KAAK,KAAK,IAAI2pD,GAAmB5mD,GAAKujC,CAAI,CAAC;AAAA,SAE9C;AACD,UAAInE,IAAMniC,EAAK,OAAOo2C,GAAOua,IAAQ,CAAA;AACrC,aAAOva,IAAQ9P,EAAK,QAAQnE,CAAG;AAC3B,QAAAwuB,EAAM,KAAK,IAAIhH,GAAmB5mD,GAAKqzC,CAAK,CAAC,GAC7CjU,IAAMiU,EAAM,cAAcjU,CAAG;AAEjC,eAAS1wC,IAAIk/D,EAAM,SAAS,GAAGl/D,KAAK,GAAGA;AACnC,aAAK,KAAKk/D,EAAMl/D,CAAC,CAAC;AAAA,IAC1B;AACA,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAMsR,GAAKulB,IAAQ,GAAGqkC,GAAY;AAC9B,WAAAI,GAAM,MAAMhqD,GAAKulB,GAAOqkC,CAAU,GAC3B;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,QAAQrsC,GAAMokB,GAAI4B,GAAM;AACpB,WAAA6jB,GAAQ,MAAM7pC,GAAMokB,GAAI4B,CAAI,GACrB;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,WAAWhmB,GAAMokB,GAAI4B,GAAM;AACvB,WAAAikB,GAAW,MAAMjqC,GAAMokB,GAAI4B,CAAI,GACxB;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,kBAAkBvjC,GAAK2nD,GAAY9wD,GAAO;AACtC,WAAA6wD,GAAkB,MAAM1nD,GAAK2nD,GAAY9wD,CAAK,GACvC;AAAA,EACX;AACJ;ACtmEA,MAAMg3D,KAAc,uBAAO,OAAO,IAAI;AAKtC,MAAMC,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMZ,YAKAC,GAKAC,GAAOvhB,GAAQ;AACX,SAAK,UAAUshB,GACf,KAAK,QAAQC,GACb,KAAK,SAASvhB,KAAU,CAAC,IAAIwhB,GAAeF,EAAQ,IAAIC,CAAK,GAAGD,EAAQ,IAAIC,CAAK,CAAC,CAAC;AAAA,EACvF;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,SAAS;AAAE,WAAO,KAAK,QAAQ;AAAA,EAAK;AAAA;AAAA;AAAA;AAAA,EAIxC,IAAI,OAAO;AAAE,WAAO,KAAK,MAAM;AAAA,EAAK;AAAA;AAAA;AAAA;AAAA,EAIpC,IAAI,OAAO;AAAE,WAAO,KAAK,MAAM;AAAA,EAAK;AAAA;AAAA;AAAA;AAAA,EAIpC,IAAI,KAAK;AAAE,WAAO,KAAK,IAAI;AAAA,EAAK;AAAA;AAAA;AAAA;AAAA,EAIhC,IAAI,QAAQ;AACR,WAAO,KAAK,OAAO,CAAC,EAAE;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,MAAM;AACN,WAAO,KAAK,OAAO,CAAC,EAAE;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,QAAQ;AACR,QAAIvhB,IAAS,KAAK;AAClB,aAAS/9C,IAAI,GAAGA,IAAI+9C,EAAO,QAAQ/9C;AAC/B,UAAI+9C,EAAO/9C,CAAC,EAAE,MAAM,OAAO+9C,EAAO/9C,CAAC,EAAE,IAAI;AACrC,eAAO;AACf,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,UAAU;AACN,WAAO,KAAK,MAAM,IAAI,MAAM,KAAK,MAAM,KAAK,IAAI,EAAI;AAAA,EACxD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQw5C,GAAIjyC,IAAUi7C,EAAM,OAAO;AAI/B,QAAIgd,IAAWj4D,EAAQ,QAAQ,WAAWk4D,IAAa;AACvD,aAASz/D,IAAI,GAAGA,IAAIuH,EAAQ,SAASvH;AACjC,MAAAy/D,IAAaD,GACbA,IAAWA,EAAS;AAExB,QAAIpF,IAAU5gB,EAAG,MAAM,QAAQuE,IAAS,KAAK;AAC7C,aAAS/9C,IAAI,GAAGA,IAAI+9C,EAAO,QAAQ/9C,KAAK;AACpC,UAAI,EAAE,OAAAonD,GAAO,KAAAC,EAAG,IAAKtJ,EAAO/9C,CAAC,GAAGg3D,IAAUxd,EAAG,QAAQ,MAAM4gB,CAAO;AAClE,MAAA5gB,EAAG,aAAawd,EAAQ,IAAI5P,EAAM,GAAG,GAAG4P,EAAQ,IAAI3P,EAAI,GAAG,GAAGrnD,IAAIwiD,EAAM,QAAQj7C,CAAO,GACnFvH,KAAK,KACL0/D,GAAwBlmB,GAAI4gB,IAAUoF,IAAWA,EAAS,WAAWC,KAAcA,EAAW,eAAe,KAAK,CAAC;AAAA,IAC3H;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,YAAYjmB,GAAIjrC,GAAM;AAClB,QAAI6rD,IAAU5gB,EAAG,MAAM,QAAQuE,IAAS,KAAK;AAC7C,aAAS/9C,IAAI,GAAGA,IAAI+9C,EAAO,QAAQ/9C,KAAK;AACpC,UAAI,EAAE,OAAAonD,GAAO,KAAAC,EAAG,IAAKtJ,EAAO/9C,CAAC,GAAGg3D,IAAUxd,EAAG,QAAQ,MAAM4gB,CAAO,GAC9DvrC,IAAOmoC,EAAQ,IAAI5P,EAAM,GAAG,GAAGnU,IAAK+jB,EAAQ,IAAI3P,EAAI,GAAG;AAC3D,MAAIrnD,IACAw5C,EAAG,YAAY3qB,GAAMokB,CAAE,KAGvBuG,EAAG,iBAAiB3qB,GAAMokB,GAAI1kC,CAAI,GAClCmxD,GAAwBlmB,GAAI4gB,GAAS7rD,EAAK,WAAW,KAAK,CAAC;AAAA,IAEnE;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAO,SAASusD,GAAM6E,GAAKC,IAAW,IAAO;AACzC,QAAIj3D,IAAQmyD,EAAK,OAAO,gBAAgB,IAAI+E,EAAc/E,CAAI,IACxDgF,GAAgBhF,EAAK,KAAK,CAAC,GAAGA,EAAK,QAAQA,EAAK,KAAKA,EAAK,MAAK,GAAI6E,GAAKC,CAAQ;AACtF,QAAIj3D;AACA,aAAOA;AACX,aAASkuB,IAAQikC,EAAK,QAAQ,GAAGjkC,KAAS,GAAGA,KAAS;AAClD,UAAI8tB,IAAQgb,IAAM,IACZG,GAAgBhF,EAAK,KAAK,CAAC,GAAGA,EAAK,KAAKjkC,CAAK,GAAGikC,EAAK,OAAOjkC,IAAQ,CAAC,GAAGikC,EAAK,MAAMjkC,CAAK,GAAG8oC,GAAKC,CAAQ,IACxGE,GAAgBhF,EAAK,KAAK,CAAC,GAAGA,EAAK,KAAKjkC,CAAK,GAAGikC,EAAK,MAAMjkC,IAAQ,CAAC,GAAGikC,EAAK,MAAMjkC,CAAK,IAAI,GAAG8oC,GAAKC,CAAQ;AACjH,UAAIjb;AACA,eAAOA;AAAA,IACf;AACA,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,KAAKmW,GAAMkB,IAAO,GAAG;AACxB,WAAO,KAAK,SAASlB,GAAMkB,CAAI,KAAK,KAAK,SAASlB,GAAM,CAACkB,CAAI,KAAK,IAAI+D,GAAajF,EAAK,KAAK,CAAC,CAAC;AAAA,EACnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAO,QAAQzjC,GAAK;AAChB,WAAOyoC,GAAgBzoC,GAAKA,GAAK,GAAG,GAAG,CAAC,KAAK,IAAI0oC,GAAa1oC,CAAG;AAAA,EACrE;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,MAAMA,GAAK;AACd,WAAOyoC,GAAgBzoC,GAAKA,GAAKA,EAAI,QAAQ,MAAMA,EAAI,YAAY,EAAE,KAAK,IAAI0oC,GAAa1oC,CAAG;AAAA,EAClG;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,SAASA,GAAKga,GAAM;AACvB,QAAI,CAACA,KAAQ,CAACA,EAAK;AACf,YAAM,IAAI,WAAW,sCAAsC;AAC/D,QAAIlmC,IAAMg0D,GAAY9tB,EAAK,IAAI;AAC/B,QAAI,CAAClmC;AACD,YAAM,IAAI,WAAW,qBAAqBkmC,EAAK,IAAI,UAAU;AACjE,WAAOlmC,EAAI,SAASksB,GAAKga,CAAI;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAO,OAAOhnC,GAAI21D,GAAgB;AAC9B,QAAI31D,KAAM80D;AACN,YAAM,IAAI,WAAW,wCAAwC90D,CAAE;AACnE,WAAA80D,GAAY90D,CAAE,IAAI21D,GAClBA,EAAe,UAAU,SAAS31D,GAC3B21D;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,cAAc;AACV,WAAOH,EAAc,QAAQ,KAAK,SAAS,KAAK,KAAK,EAAE,YAAW;AAAA,EACtE;AACJ;AACAT,EAAU,UAAU,UAAU;AAI9B,MAAMG,GAAe;AAAA;AAAA;AAAA;AAAA,EAIjB,YAIAnY,GAIAC,GAAK;AACD,SAAK,QAAQD,GACb,KAAK,MAAMC;AAAA,EACf;AACJ;AACA,IAAI4Y,KAA2B;AAC/B,SAASC,GAAmBpF,GAAM;AAC9B,EAAI,CAACmF,MAA4B,CAACnF,EAAK,OAAO,kBAC1CmF,KAA2B,IAC3B,QAAQ,KAAQ,0EAA0EnF,EAAK,OAAO,KAAK,OAAO,GAAG;AAE7H;AAOA,MAAM+E,UAAsBT,EAAU;AAAA;AAAA;AAAA;AAAA,EAIlC,YAAYC,GAASC,IAAQD,GAAS;AAClC,IAAAa,GAAmBb,CAAO,GAC1Ba,GAAmBZ,CAAK,GACxB,MAAMD,GAASC,CAAK;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,UAAU;AAAE,WAAO,KAAK,QAAQ,OAAO,KAAK,MAAM,MAAM,KAAK,QAAQ;AAAA,EAAM;AAAA,EAC/E,IAAIjoC,GAAK2/B,GAAS;AACd,QAAIsI,IAAQjoC,EAAI,QAAQ2/B,EAAQ,IAAI,KAAK,IAAI,CAAC;AAC9C,QAAI,CAACsI,EAAM,OAAO;AACd,aAAOF,EAAU,KAAKE,CAAK;AAC/B,QAAID,IAAUhoC,EAAI,QAAQ2/B,EAAQ,IAAI,KAAK,MAAM,CAAC;AAClD,WAAO,IAAI6I,EAAcR,EAAQ,OAAO,gBAAgBA,IAAUC,GAAOA,CAAK;AAAA,EAClF;AAAA,EACA,QAAQ9lB,GAAIjyC,IAAUi7C,EAAM,OAAO;AAE/B,QADA,MAAM,QAAQhJ,GAAIjyC,CAAO,GACrBA,KAAWi7C,EAAM,OAAO;AACxB,UAAIiE,IAAQ,KAAK,MAAM,YAAY,KAAK,GAAG;AAC3C,MAAIA,KACAjN,EAAG,YAAYiN,CAAK;AAAA,IAC5B;AAAA,EACJ;AAAA,EACA,GAAGR,GAAO;AACN,WAAOA,aAAiB4Z,KAAiB5Z,EAAM,UAAU,KAAK,UAAUA,EAAM,QAAQ,KAAK;AAAA,EAC/F;AAAA,EACA,cAAc;AACV,WAAO,IAAIka,GAAa,KAAK,QAAQ,KAAK,IAAI;AAAA,EAClD;AAAA,EACA,SAAS;AACL,WAAO,EAAE,MAAM,QAAQ,QAAQ,KAAK,QAAQ,MAAM,KAAK,KAAI;AAAA,EAC/D;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,SAAS9oC,GAAKga,GAAM;AACvB,QAAI,OAAOA,EAAK,UAAU,YAAY,OAAOA,EAAK,QAAQ;AACtD,YAAM,IAAI,WAAW,0CAA0C;AACnE,WAAO,IAAIwuB,EAAcxoC,EAAI,QAAQga,EAAK,MAAM,GAAGha,EAAI,QAAQga,EAAK,IAAI,CAAC;AAAA,EAC7E;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,OAAOha,GAAK+oC,GAAQzuC,IAAOyuC,GAAQ;AACtC,QAAIf,IAAUhoC,EAAI,QAAQ+oC,CAAM;AAChC,WAAO,IAAI,KAAKf,GAAS1tC,KAAQyuC,IAASf,IAAUhoC,EAAI,QAAQ1F,CAAI,CAAC;AAAA,EACzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,OAAO,QAAQ0tC,GAASC,GAAOtD,GAAM;AACjC,QAAIqE,IAAOhB,EAAQ,MAAMC,EAAM;AAG/B,SAFI,CAACtD,KAAQqE,OACTrE,IAAOqE,KAAQ,IAAI,IAAI,KACvB,CAACf,EAAM,OAAO,eAAe;AAC7B,UAAI3a,IAAQya,EAAU,SAASE,GAAOtD,GAAM,EAAI,KAAKoD,EAAU,SAASE,GAAO,CAACtD,GAAM,EAAI;AAC1F,UAAIrX;AACA,QAAA2a,IAAQ3a,EAAM;AAAA;AAEd,eAAOya,EAAU,KAAKE,GAAOtD,CAAI;AAAA,IACzC;AACA,WAAKqD,EAAQ,OAAO,kBACZgB,KAAQ,IACRhB,IAAUC,KAGVD,KAAWD,EAAU,SAASC,GAAS,CAACrD,GAAM,EAAI,KAAKoD,EAAU,SAASC,GAASrD,GAAM,EAAI,GAAG,SAC3FqD,EAAQ,MAAMC,EAAM,OAASe,IAAO,MACrChB,IAAUC,MAGf,IAAIO,EAAcR,GAASC,CAAK;AAAA,EAC3C;AACJ;AACAF,EAAU,OAAO,QAAQS,CAAa;AACtC,MAAMM,GAAa;AAAA,EACf,YAAYC,GAAQzuC,GAAM;AACtB,SAAK,SAASyuC,GACd,KAAK,OAAOzuC;AAAA,EAChB;AAAA,EACA,IAAIqlC,GAAS;AACT,WAAO,IAAImJ,GAAanJ,EAAQ,IAAI,KAAK,MAAM,GAAGA,EAAQ,IAAI,KAAK,IAAI,CAAC;AAAA,EAC5E;AAAA,EACA,QAAQ3/B,GAAK;AACT,WAAOwoC,EAAc,QAAQxoC,EAAI,QAAQ,KAAK,MAAM,GAAGA,EAAI,QAAQ,KAAK,IAAI,CAAC;AAAA,EACjF;AACJ;AAQA,MAAMipC,UAAsBlB,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKlC,YAAYtE,GAAM;AACd,QAAIvsD,IAAOusD,EAAK,WACZ5S,IAAO4S,EAAK,KAAK,CAAC,EAAE,QAAQA,EAAK,MAAMvsD,EAAK,QAAQ;AACxD,UAAMusD,GAAM5S,CAAI,GAChB,KAAK,OAAO35C;AAAA,EAChB;AAAA,EACA,IAAI8oB,GAAK2/B,GAAS;AACd,QAAI,EAAE,SAAAuJ,GAAS,KAAAjvD,EAAG,IAAK0lD,EAAQ,UAAU,KAAK,MAAM,GAChD8D,IAAOzjC,EAAI,QAAQ/lB,CAAG;AAC1B,WAAIivD,IACOnB,EAAU,KAAKtE,CAAI,IACvB,IAAIwF,EAAcxF,CAAI;AAAA,EACjC;AAAA,EACA,UAAU;AACN,WAAO,IAAItY,EAAMmD,EAAS,KAAK,KAAK,IAAI,GAAG,GAAG,CAAC;AAAA,EACnD;AAAA,EACA,GAAGM,GAAO;AACN,WAAOA,aAAiBqa,KAAiBra,EAAM,UAAU,KAAK;AAAA,EAClE;AAAA,EACA,SAAS;AACL,WAAO,EAAE,MAAM,QAAQ,QAAQ,KAAK,OAAM;AAAA,EAC9C;AAAA,EACA,cAAc;AAAE,WAAO,IAAIua,GAAa,KAAK,MAAM;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA,EAItD,OAAO,SAASnpC,GAAKga,GAAM;AACvB,QAAI,OAAOA,EAAK,UAAU;AACtB,YAAM,IAAI,WAAW,0CAA0C;AACnE,WAAO,IAAIivB,EAAcjpC,EAAI,QAAQga,EAAK,MAAM,CAAC;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,OAAOha,GAAKxI,GAAM;AACrB,WAAO,IAAIyxC,EAAcjpC,EAAI,QAAQxI,CAAI,CAAC;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,aAAatgB,GAAM;AACtB,WAAO,CAACA,EAAK,UAAUA,EAAK,KAAK,KAAK,eAAe;AAAA,EACzD;AACJ;AACA+xD,EAAc,UAAU,UAAU;AAClClB,EAAU,OAAO,QAAQkB,CAAa;AACtC,MAAME,GAAa;AAAA,EACf,YAAYJ,GAAQ;AAChB,SAAK,SAASA;AAAA,EAClB;AAAA,EACA,IAAIpJ,GAAS;AACT,QAAI,EAAE,SAAAuJ,GAAS,KAAAjvD,EAAG,IAAK0lD,EAAQ,UAAU,KAAK,MAAM;AACpD,WAAOuJ,IAAU,IAAIJ,GAAa7uD,GAAKA,CAAG,IAAI,IAAIkvD,GAAalvD,CAAG;AAAA,EACtE;AAAA,EACA,QAAQ+lB,GAAK;AACT,QAAIyjC,IAAOzjC,EAAI,QAAQ,KAAK,MAAM,GAAG9oB,IAAOusD,EAAK;AACjD,WAAIvsD,KAAQ+xD,EAAc,aAAa/xD,CAAI,IAChC,IAAI+xD,EAAcxF,CAAI,IAC1BsE,EAAU,KAAKtE,CAAI;AAAA,EAC9B;AACJ;AAOA,MAAMiF,WAAqBX,EAAU;AAAA;AAAA;AAAA;AAAA,EAIjC,YAAY/nC,GAAK;AACb,UAAMA,EAAI,QAAQ,CAAC,GAAGA,EAAI,QAAQA,EAAI,QAAQ,IAAI,CAAC;AAAA,EACvD;AAAA,EACA,QAAQmiB,GAAIjyC,IAAUi7C,EAAM,OAAO;AAC/B,QAAIj7C,KAAWi7C,EAAM,OAAO;AACxB,MAAAhJ,EAAG,OAAO,GAAGA,EAAG,IAAI,QAAQ,IAAI;AAChC,UAAIinB,IAAMrB,EAAU,QAAQ5lB,EAAG,GAAG;AAClC,MAAKinB,EAAI,GAAGjnB,EAAG,SAAS,KACpBA,EAAG,aAAainB,CAAG;AAAA,IAC3B;AAEI,YAAM,QAAQjnB,GAAIjyC,CAAO;AAAA,EAEjC;AAAA,EACA,SAAS;AAAE,WAAO,EAAE,MAAM,MAAK;AAAA,EAAI;AAAA;AAAA;AAAA;AAAA,EAInC,OAAO,SAAS8vB,GAAK;AAAE,WAAO,IAAI0oC,GAAa1oC,CAAG;AAAA,EAAG;AAAA,EACrD,IAAIA,GAAK;AAAE,WAAO,IAAI0oC,GAAa1oC,CAAG;AAAA,EAAG;AAAA,EACzC,GAAG4uB,GAAO;AAAE,WAAOA,aAAiB8Z;AAAA,EAAc;AAAA,EAClD,cAAc;AAAE,WAAOW;AAAA,EAAa;AACxC;AACAtB,EAAU,OAAO,OAAOW,EAAY;AACpC,MAAMW,KAAc;AAAA,EAChB,MAAM;AAAE,WAAO;AAAA,EAAM;AAAA,EACrB,QAAQrpC,GAAK;AAAE,WAAO,IAAI0oC,GAAa1oC,CAAG;AAAA,EAAG;AACjD;AAKA,SAASyoC,GAAgBzoC,GAAK9oB,GAAM+C,GAAKpM,GAAOy6D,GAAKx8D,IAAO,IAAO;AAC/D,MAAIoL,EAAK;AACL,WAAOsxD,EAAc,OAAOxoC,GAAK/lB,CAAG;AACxC,WAAStR,IAAIkF,KAASy6D,IAAM,IAAI,IAAI,IAAIA,IAAM,IAAI3/D,IAAIuO,EAAK,aAAavO,KAAK,GAAGA,KAAK2/D,GAAK;AACtF,QAAI10D,IAAQsD,EAAK,MAAMvO,CAAC;AACxB,QAAKiL,EAAM;AAKN,UAAI,CAAC9H,KAAQm9D,EAAc,aAAar1D,CAAK;AAC9C,eAAOq1D,EAAc,OAAOjpC,GAAK/lB,KAAOquD,IAAM,IAAI10D,EAAM,WAAW,EAAE;AAAA,WANtD;AACf,UAAItC,IAAQm3D,GAAgBzoC,GAAKpsB,GAAOqG,IAAMquD,GAAKA,IAAM,IAAI10D,EAAM,aAAa,GAAG00D,GAAKx8D,CAAI;AAC5F,UAAIwF;AACA,eAAOA;AAAA,IACf;AAIA,IAAA2I,KAAOrG,EAAM,WAAW00D;AAAA,EAC5B;AACA,SAAO;AACX;AACA,SAASD,GAAwBlmB,GAAImnB,GAAU3E,GAAM;AACjD,MAAIt8D,IAAO85C,EAAG,MAAM,SAAS;AAC7B,MAAI95C,IAAOihE;AACP;AACJ,MAAI9nC,IAAO2gB,EAAG,MAAM95C,CAAI;AACxB,MAAI,EAAEm5B,aAAgBs/B,MAAet/B,aAAgBw/B;AACjD;AACJ,MAAIvtD,IAAM0uC,EAAG,QAAQ,KAAK95C,CAAI,GAAG2S;AACjC,EAAAvH,EAAI,QAAQ,CAAC81D,GAAOC,GAAKC,GAAUC,MAAU;AAAE,IAAI1uD,KAAO,SACtDA,IAAM0uD;AAAA,EAAO,CAAC,GAClBvnB,EAAG,aAAa4lB,EAAU,KAAK5lB,EAAG,IAAI,QAAQnnC,CAAG,GAAG2pD,CAAI,CAAC;AAC7D;AAEA,MAAMgF,KAAc,GAAGC,KAAgB,GAAGC,KAAiB;AAuB3D,MAAMC,WAAoBlC,GAAU;AAAA;AAAA;AAAA;AAAA,EAIhC,YAAYjyD,GAAO;AACf,UAAMA,EAAM,GAAG,GAEf,KAAK,kBAAkB,GAGvB,KAAK,UAAU,GAEf,KAAK,OAAO,uBAAO,OAAO,IAAI,GAC9B,KAAK,OAAO,KAAK,IAAG,GACpB,KAAK,eAAeA,EAAM,WAC1B,KAAK,cAAcA,EAAM;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,IAAI,YAAY;AACZ,WAAI,KAAK,kBAAkB,KAAK,MAAM,WAClC,KAAK,eAAe,KAAK,aAAa,IAAI,KAAK,KAAK,KAAK,QAAQ,MAAM,KAAK,eAAe,CAAC,GAC5F,KAAK,kBAAkB,KAAK,MAAM,SAE/B,KAAK;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,aAAao0D,GAAW;AACpB,QAAIA,EAAU,MAAM,OAAO,KAAK;AAC5B,YAAM,IAAI,WAAW,qEAAqE;AAC9F,gBAAK,eAAeA,GACpB,KAAK,kBAAkB,KAAK,MAAM,QAClC,KAAK,WAAW,KAAK,UAAUJ,MAAe,CAACC,IAC/C,KAAK,cAAc,MACZ;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,eAAe;AACf,YAAQ,KAAK,UAAUD,MAAe;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA,EAIA,eAAeva,GAAO;AAClB,gBAAK,cAAcA,GACnB,KAAK,WAAWwa,IACT;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,YAAYxa,GAAO;AACf,WAAKF,GAAK,QAAQ,KAAK,eAAe,KAAK,UAAU,MAAM,MAAK,GAAIE,CAAK,KACrE,KAAK,eAAeA,CAAK,GACtB;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,cAAc5R,GAAM;AAChB,WAAO,KAAK,YAAYA,EAAK,SAAS,KAAK,eAAe,KAAK,UAAU,MAAM,MAAK,CAAE,CAAC;AAAA,EAC3F;AAAA;AAAA;AAAA;AAAA,EAIA,iBAAiBA,GAAM;AACnB,WAAO,KAAK,YAAYA,EAAK,cAAc,KAAK,eAAe,KAAK,UAAU,MAAM,MAAK,CAAE,CAAC;AAAA,EAChG;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,iBAAiB;AACjB,YAAQ,KAAK,UAAUosB,MAAiB;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA,EAIA,QAAQpoC,GAAMxB,GAAK;AACf,UAAM,QAAQwB,GAAMxB,CAAG,GACvB,KAAK,UAAU,KAAK,UAAU,CAAC4pC,IAC/B,KAAK,cAAc;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA,EAIA,QAAQI,GAAM;AACV,gBAAK,OAAOA,GACL;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,iBAAiB3+C,GAAO;AACpB,gBAAK,UAAU,QAAQ,MAAMA,CAAK,GAC3B;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,qBAAqBnU,GAAM+yD,IAAe,IAAM;AAC5C,QAAIF,IAAY,KAAK;AACrB,WAAIE,MACA/yD,IAAOA,EAAK,KAAK,KAAK,gBAAgB6yD,EAAU,QAAQA,EAAU,MAAM,MAAK,IAAMA,EAAU,MAAM,YAAYA,EAAU,GAAG,KAAK7a,GAAK,KAAM,IAChJ6a,EAAU,YAAY,MAAM7yD,CAAI,GACzB;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,kBAAkB;AACd,gBAAK,UAAU,QAAQ,IAAI,GACpB;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,WAAWpL,GAAM0rB,GAAMokB,GAAI;AACvB,QAAIyC,IAAS,KAAK,IAAI,KAAK;AAC3B,QAAI7mB,KAAQ;AACR,aAAK1rB,IAEE,KAAK,qBAAqBuyC,EAAO,KAAKvyC,CAAI,GAAG,EAAI,IAD7C,KAAK,gBAAe;AAG9B;AAGD,UAFI8vC,KAAM,SACNA,IAAKpkB,IACL,CAAC1rB;AACD,eAAO,KAAK,YAAY0rB,GAAMokB,CAAE;AACpC,UAAIwT,IAAQ,KAAK;AACjB,UAAI,CAACA,GAAO;AACR,YAAIW,IAAQ,KAAK,IAAI,QAAQv4B,CAAI;AACjC,QAAA43B,IAAQxT,KAAMpkB,IAAOu4B,EAAM,MAAK,IAAKA,EAAM,YAAY,KAAK,IAAI,QAAQnU,CAAE,CAAC;AAAA,MAC/E;AACA,kBAAK,iBAAiBpkB,GAAMokB,GAAIyC,EAAO,KAAKvyC,GAAMsjD,CAAK,CAAC,GACpD,CAAC,KAAK,UAAU,SAAS,KAAK,UAAU,MAAM53B,IAAO1rB,EAAK,UAC1D,KAAK,aAAai8D,EAAU,KAAK,KAAK,UAAU,GAAG,CAAC,GACjD;AAAA,IACX;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ9vD,GAAKrR,GAAO;AAChB,gBAAK,KAAK,OAAOqR,KAAO,WAAWA,IAAMA,EAAI,GAAG,IAAIrR,GAC7C;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,QAAQqR,GAAK;AACT,WAAO,KAAK,KAAK,OAAOA,KAAO,WAAWA,IAAMA,EAAI,GAAG;AAAA,EAC3D;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,YAAY;AACZ,aAASghB,KAAK,KAAK;AACf,aAAO;AACX,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,iBAAiB;AACb,gBAAK,WAAW4wC,IACT;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,mBAAmB;AACnB,YAAQ,KAAK,UAAUA,MAAkB;AAAA,EAC7C;AACJ;AAEA,SAASK,GAAKxc,GAAG7vC,GAAM;AACnB,SAAO,CAACA,KAAQ,CAAC6vC,IAAIA,IAAIA,EAAE,KAAK7vC,CAAI;AACxC;AACA,MAAMssD,GAAU;AAAA,EACZ,YAAY9xD,GAAM+xD,GAAMvsD,GAAM;AAC1B,SAAK,OAAOxF,GACZ,KAAK,OAAO6xD,GAAKE,EAAK,MAAMvsD,CAAI,GAChC,KAAK,QAAQqsD,GAAKE,EAAK,OAAOvsD,CAAI;AAAA,EACtC;AACJ;AACA,MAAMwsD,KAAa;AAAA,EACf,IAAIF,GAAU,OAAO;AAAA,IACjB,KAAKzuC,GAAQ;AAAE,aAAOA,EAAO,OAAOA,EAAO,OAAO,YAAY,cAAa;AAAA,IAAI;AAAA,IAC/E,MAAMymB,GAAI;AAAE,aAAOA,EAAG;AAAA,IAAK;AAAA,EACnC,CAAK;AAAA,EACD,IAAIgoB,GAAU,aAAa;AAAA,IACvB,KAAKzuC,GAAQ4uC,GAAU;AAAE,aAAO5uC,EAAO,aAAaqsC,EAAU,QAAQuC,EAAS,GAAG;AAAA,IAAG;AAAA,IACrF,MAAMnoB,GAAI;AAAE,aAAOA,EAAG;AAAA,IAAW;AAAA,EACzC,CAAK;AAAA,EACD,IAAIgoB,GAAU,eAAe;AAAA,IACzB,KAAKzuC,GAAQ;AAAE,aAAOA,EAAO,eAAe;AAAA,IAAM;AAAA,IAClD,MAAMymB,GAAI4Y,GAAQwP,GAAM50D,GAAO;AAAE,aAAOA,EAAM,UAAU,UAAUwsC,EAAG,cAAc;AAAA,IAAM;AAAA,EACjG,CAAK;AAAA,EACD,IAAIgoB,GAAU,qBAAqB;AAAA,IAC/B,OAAO;AAAE,aAAO;AAAA,IAAG;AAAA,IACnB,MAAMhoB,GAAIqoB,GAAM;AAAE,aAAOroB,EAAG,mBAAmBqoB,IAAO,IAAIA;AAAA,IAAM;AAAA,EACxE,CAAK;AACL;AAGA,MAAMC,GAAc;AAAA,EAChB,YAAYpsB,GAAQz+B,GAAS;AACzB,SAAK,SAASy+B,GACd,KAAK,UAAU,CAAA,GACf,KAAK,eAAe,uBAAO,OAAO,IAAI,GACtC,KAAK,SAASgsB,GAAW,MAAK,GAC1BzqD,KACAA,EAAQ,QAAQ,CAAAD,MAAU;AACtB,UAAI,KAAK,aAAaA,EAAO,GAAG;AAC5B,cAAM,IAAI,WAAW,mDAAmDA,EAAO,MAAM,GAAG;AAC5F,WAAK,QAAQ,KAAKA,CAAM,GACxB,KAAK,aAAaA,EAAO,GAAG,IAAIA,GAC5BA,EAAO,KAAK,SACZ,KAAK,OAAO,KAAK,IAAIwqD,GAAUxqD,EAAO,KAAKA,EAAO,KAAK,OAAOA,CAAM,CAAC;AAAA,IAC7E,CAAC;AAAA,EACT;AACJ;AAUA,MAAM+qD,GAAY;AAAA;AAAA;AAAA;AAAA,EAId,YAIAhvC,GAAQ;AACJ,SAAK,SAASA;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,SAAS;AACT,WAAO,KAAK,OAAO;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,UAAU;AACV,WAAO,KAAK,OAAO;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA,EAIA,MAAMymB,GAAI;AACN,WAAO,KAAK,iBAAiBA,CAAE,EAAE;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA,EAIA,kBAAkBA,GAAIjK,IAAS,IAAI;AAC/B,aAASvvC,IAAI,GAAGA,IAAI,KAAK,OAAO,QAAQ,QAAQA;AAC5C,UAAIA,KAAKuvC,GAAQ;AACb,YAAIv4B,IAAS,KAAK,OAAO,QAAQhX,CAAC;AAClC,YAAIgX,EAAO,KAAK,qBAAqB,CAACA,EAAO,KAAK,kBAAkB,KAAKA,GAAQwiC,GAAI,IAAI;AACrF,iBAAO;AAAA,MACf;AACJ,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,iBAAiBwoB,GAAQ;AACrB,QAAI,CAAC,KAAK,kBAAkBA,CAAM;AAC9B,aAAO,EAAE,OAAO,MAAM,cAAc,CAAA,EAAE;AAC1C,QAAIC,IAAM,CAACD,CAAM,GAAGE,IAAW,KAAK,WAAWF,CAAM,GAAG5lD,IAAO;AAI/D,eAAS;AACL,UAAI+lD,IAAU;AACd,eAASniE,IAAI,GAAGA,IAAI,KAAK,OAAO,QAAQ,QAAQA,KAAK;AACjD,YAAIgX,IAAS,KAAK,OAAO,QAAQhX,CAAC;AAClC,YAAIgX,EAAO,KAAK,mBAAmB;AAC/B,cAAItT,IAAI0Y,IAAOA,EAAKpc,CAAC,EAAE,IAAI,GAAGoiE,IAAWhmD,IAAOA,EAAKpc,CAAC,EAAE,QAAQ,MAC5Dw5C,IAAK91C,IAAIu+D,EAAI,UACbjrD,EAAO,KAAK,kBAAkB,KAAKA,GAAQtT,IAAIu+D,EAAI,MAAMv+D,CAAC,IAAIu+D,GAAKG,GAAUF,CAAQ;AACzF,cAAI1oB,KAAM0oB,EAAS,kBAAkB1oB,GAAIx5C,CAAC,GAAG;AAEzC,gBADAw5C,EAAG,QAAQ,uBAAuBwoB,CAAM,GACpC,CAAC5lD,GAAM;AACP,cAAAA,IAAO,CAAA;AACP,uBAASjY,IAAI,GAAGA,IAAI,KAAK,OAAO,QAAQ,QAAQA;AAC5C,gBAAAiY,EAAK,KAAKjY,IAAInE,IAAI,EAAE,OAAOkiE,GAAU,GAAGD,EAAI,OAAM,IAAK,EAAE,OAAO,MAAM,GAAG,GAAG;AAAA,YACpF;AACA,YAAAA,EAAI,KAAKzoB,CAAE,GACX0oB,IAAWA,EAAS,WAAW1oB,CAAE,GACjC2oB,IAAU;AAAA,UACd;AACA,UAAI/lD,MACAA,EAAKpc,CAAC,IAAI,EAAE,OAAOkiE,GAAU,GAAGD,EAAI,OAAM;AAAA,QAClD;AAAA,MACJ;AACA,UAAI,CAACE;AACD,eAAO,EAAE,OAAOD,GAAU,cAAcD,EAAG;AAAA,IACnD;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAIA,WAAWzoB,GAAI;AACX,QAAI,CAACA,EAAG,OAAO,GAAG,KAAK,GAAG;AACtB,YAAM,IAAI,WAAW,mCAAmC;AAC5D,QAAI6oB,IAAc,IAAIN,GAAY,KAAK,MAAM,GAAG3xC,IAAS,KAAK,OAAO;AACrE,aAAS,IAAI,GAAG,IAAIA,EAAO,QAAQ,KAAK;AACpC,UAAIjc,IAAQic,EAAO,CAAC;AACpB,MAAAiyC,EAAYluD,EAAM,IAAI,IAAIA,EAAM,MAAMqlC,GAAI,KAAKrlC,EAAM,IAAI,GAAG,MAAMkuD,CAAW;AAAA,IACjF;AACA,WAAOA;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,KAAK;AAAE,WAAO,IAAIlB,GAAY,IAAI;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA,EAIzC,OAAO,OAAOpuC,GAAQ;AAClB,QAAIuvC,IAAU,IAAIR,GAAc/uC,EAAO,MAAMA,EAAO,IAAI,KAAK,SAASA,EAAO,QAAQA,EAAO,OAAO,GAC/F4uC,IAAW,IAAII,GAAYO,CAAO;AACtC,aAAS,IAAI,GAAG,IAAIA,EAAQ,OAAO,QAAQ;AACvC,MAAAX,EAASW,EAAQ,OAAO,CAAC,EAAE,IAAI,IAAIA,EAAQ,OAAO,CAAC,EAAE,KAAKvvC,GAAQ4uC,CAAQ;AAC9E,WAAOA;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,YAAY5uC,GAAQ;AAChB,QAAIuvC,IAAU,IAAIR,GAAc,KAAK,QAAQ/uC,EAAO,OAAO,GACvD3C,IAASkyC,EAAQ,QAAQX,IAAW,IAAII,GAAYO,CAAO;AAC/D,aAAStiE,IAAI,GAAGA,IAAIowB,EAAO,QAAQpwB,KAAK;AACpC,UAAI0P,IAAO0gB,EAAOpwB,CAAC,EAAE;AACrB,MAAA2hE,EAASjyD,CAAI,IAAI,KAAK,eAAeA,CAAI,IAAI,KAAKA,CAAI,IAAI0gB,EAAOpwB,CAAC,EAAE,KAAK+yB,GAAQ4uC,CAAQ;AAAA,IAC7F;AACA,WAAOA;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAOY,GAAc;AACjB,QAAIz/D,IAAS,EAAE,KAAK,KAAK,IAAI,OAAM,GAAI,WAAW,KAAK,UAAU,OAAM,EAAE;AAGzE,QAFI,KAAK,gBACLA,EAAO,cAAc,KAAK,YAAY,IAAI,CAAAW,MAAKA,EAAE,QAAQ,IACzD8+D,KAAgB,OAAOA,KAAgB;AACvC,eAASvd,KAAQud,GAAc;AAC3B,YAAIvd,KAAQ,SAASA,KAAQ;AACzB,gBAAM,IAAI,WAAW,oDAAoD;AAC7E,YAAIhuC,IAASurD,EAAavd,CAAI,GAAGh4C,IAAQgK,EAAO,KAAK;AACrD,QAAIhK,KAASA,EAAM,WACflK,EAAOkiD,CAAI,IAAIh4C,EAAM,OAAO,KAAKgK,GAAQ,KAAKA,EAAO,GAAG,CAAC;AAAA,MACjE;AACJ,WAAOlU;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAO,SAASiwB,GAAQse,GAAMkxB,GAAc;AACxC,QAAI,CAAClxB;AACD,YAAM,IAAI,WAAW,wCAAwC;AACjE,QAAI,CAACte,EAAO;AACR,YAAM,IAAI,WAAW,wCAAwC;AACjE,QAAIuvC,IAAU,IAAIR,GAAc/uC,EAAO,QAAQA,EAAO,OAAO,GACzD4uC,IAAW,IAAII,GAAYO,CAAO;AACtC,WAAAA,EAAQ,OAAO,QAAQ,CAAAnuD,MAAS;AAC5B,UAAIA,EAAM,QAAQ;AACd,QAAAwtD,EAAS,MAAMvY,GAAK,SAASr2B,EAAO,QAAQse,EAAK,GAAG;AAAA,eAE/Cl9B,EAAM,QAAQ;AACnB,QAAAwtD,EAAS,YAAYvC,EAAU,SAASuC,EAAS,KAAKtwB,EAAK,SAAS;AAAA,eAE/Dl9B,EAAM,QAAQ;AACnB,QAAIk9B,EAAK,gBACLswB,EAAS,cAActwB,EAAK,YAAY,IAAIte,EAAO,OAAO,YAAY;AAAA,WAEzE;AACD,YAAIwvC;AACA,mBAASvd,KAAQud,GAAc;AAC3B,gBAAIvrD,IAASurD,EAAavd,CAAI,GAAGh4C,IAAQgK,EAAO,KAAK;AACrD,gBAAIA,EAAO,OAAO7C,EAAM,QAAQnH,KAASA,EAAM,YAC3C,OAAO,UAAU,eAAe,KAAKqkC,GAAM2T,CAAI,GAAG;AAClD,cAAA2c,EAASxtD,EAAM,IAAI,IAAInH,EAAM,SAAS,KAAKgK,GAAQ+b,GAAQse,EAAK2T,CAAI,GAAG2c,CAAQ;AAC/E;AAAA,YACJ;AAAA,UACJ;AACJ,QAAAA,EAASxtD,EAAM,IAAI,IAAIA,EAAM,KAAK4e,GAAQ4uC,CAAQ;AAAA,MACtD;AAAA,IACJ,CAAC,GACMA;AAAA,EACX;AACJ;AAEA,SAASa,GAAUrzD,GAAK+F,GAAM1F,GAAQ;AAClC,WAASw1C,KAAQ71C,GAAK;AAClB,QAAIo5C,IAAMp5C,EAAI61C,CAAI;AAClB,IAAIuD,aAAe,WACfA,IAAMA,EAAI,KAAKrzC,CAAI,IACd8vC,KAAQ,sBACbuD,IAAMia,GAAUja,GAAKrzC,GAAM,CAAA,CAAE,IACjC1F,EAAOw1C,CAAI,IAAIuD;AAAA,EACnB;AACA,SAAO/4C;AACX;AAMA,MAAMizD,GAAO;AAAA;AAAA;AAAA;AAAA,EAIT,YAIA9V,GAAM;AACF,SAAK,OAAOA,GAIZ,KAAK,QAAQ,CAAA,GACTA,EAAK,SACL6V,GAAU7V,EAAK,OAAO,MAAM,KAAK,KAAK,GAC1C,KAAK,MAAMA,EAAK,MAAMA,EAAK,IAAI,MAAM+V,GAAU,QAAQ;AAAA,EAC3D;AAAA;AAAA;AAAA;AAAA,EAIA,SAAS11D,GAAO;AAAE,WAAOA,EAAM,KAAK,GAAG;AAAA,EAAG;AAC9C;AACA,MAAM8jC,KAAO,uBAAO,OAAO,IAAI;AAC/B,SAAS4xB,GAAUhzD,GAAM;AACrB,SAAIA,KAAQohC,KACDphC,IAAO,MAAM,EAAEohC,GAAKphC,CAAI,KACnCohC,GAAKphC,CAAI,IAAI,GACNA,IAAO;AAClB;AAOA,MAAMizD,GAAU;AAAA;AAAA;AAAA;AAAA,EAIZ,YAAYjzD,IAAO,OAAO;AAAE,SAAK,MAAMgzD,GAAUhzD,CAAI;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA;AAAA,EAKxD,IAAI1C,GAAO;AAAE,WAAOA,EAAM,OAAO,aAAa,KAAK,GAAG;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA,EAIzD,SAASA,GAAO;AAAE,WAAOA,EAAM,KAAK,GAAG;AAAA,EAAG;AAC9C;ACh+BA,MAAM41D,KAAkB,CAAC51D,GAAO61D,MACxB71D,EAAM,UAAU,QACT,MACP61D,KACAA,EAAS71D,EAAM,GAAG,gBAAe,EAAG,eAAc,CAAE,GACjD;AAEX,SAAS81D,GAAa91D,GAAO0kB,GAAM;AAC/B,MAAI,EAAE,SAAAqxC,MAAY/1D,EAAM;AACxB,SAAI,CAAC+1D,MAAYrxC,IAAO,CAACA,EAAK,eAAe,YAAY1kB,CAAK,IACxD+1D,EAAQ,eAAe,KAClB,OACJA;AACX;AAUA,MAAMC,KAAe,CAACh2D,GAAO61D,GAAUnxC,MAAS;AAC5C,MAAIqxC,IAAUD,GAAa91D,GAAO0kB,CAAI;AACtC,MAAI,CAACqxC;AACD,WAAO;AACX,MAAIE,IAAOC,GAAcH,CAAO;AAEhC,MAAI,CAACE,GAAM;AACP,QAAI12B,IAAQw2B,EAAQ,WAAU,GAAIvzD,IAAS+8B,KAAS+sB,GAAW/sB,CAAK;AACpE,WAAI/8B,KAAU,OACH,MACPqzD,KACAA,EAAS71D,EAAM,GAAG,KAAKu/B,GAAO/8B,CAAM,EAAE,gBAAgB,GACnD;AAAA,EACX;AACA,MAAI3F,IAASo5D,EAAK;AAElB,MAAIE,GAAcn2D,GAAOi2D,GAAMJ,GAAU,EAAE;AACvC,WAAO;AAGX,MAAIE,EAAQ,OAAO,QAAQ,QAAQ,MAC9BK,GAAYv5D,GAAQ,KAAK,KAAKy2D,EAAc,aAAaz2D,CAAM;AAChE,aAASgtB,IAAQksC,EAAQ,SAAQlsC,KAAS;AACtC,UAAIwsC,IAAUjH,GAAYpvD,EAAM,KAAK+1D,EAAQ,OAAOlsC,CAAK,GAAGksC,EAAQ,MAAMlsC,CAAK,GAAG2rB,EAAM,KAAK;AAC7F,UAAI6gB,KAAWA,EAAQ,MAAM,OAAOA,EAAQ,KAAKA,EAAQ,MAAM;AAC3D,YAAIR,GAAU;AACV,cAAIrpB,IAAKxsC,EAAM,GAAG,KAAKq2D,CAAO;AAC9B,UAAA7pB,EAAG,aAAa4pB,GAAYv5D,GAAQ,KAAK,IACnCu1D,EAAU,SAAS5lB,EAAG,IAAI,QAAQA,EAAG,QAAQ,IAAIypB,EAAK,KAAK,EAAE,CAAC,GAAG,EAAE,IACnE3C,EAAc,OAAO9mB,EAAG,KAAKypB,EAAK,MAAMp5D,EAAO,QAAQ,CAAC,GAC9Dg5D,EAASrpB,EAAG,gBAAgB;AAAA,QAChC;AACA,eAAO;AAAA,MACX;AACA,UAAI3iB,KAAS,KAAKksC,EAAQ,KAAKlsC,IAAQ,CAAC,EAAE,aAAa;AACnD;AAAA,IACR;AAGJ,SAAIhtB,EAAO,UAAUo5D,EAAK,SAASF,EAAQ,QAAQ,KAC3CF,KACAA,EAAS71D,EAAM,GAAG,OAAOi2D,EAAK,MAAMp5D,EAAO,UAAUo5D,EAAK,GAAG,EAAE,eAAc,CAAE,GAC5E,MAEJ;AACX,GAMMK,KAAwB,CAACt2D,GAAO61D,GAAUnxC,MAAS;AACrD,MAAIqxC,IAAUD,GAAa91D,GAAO0kB,CAAI;AACtC,MAAI,CAACqxC;AACD,WAAO;AACX,MAAIE,IAAOC,GAAcH,CAAO;AAChC,SAAOE,IAAOM,GAAqBv2D,GAAOi2D,GAAMJ,CAAQ,IAAI;AAChE;AAaA,SAASU,GAAqBv2D,GAAOi2D,GAAMJ,GAAU;AACjD,MAAIh5D,IAASo5D,EAAK,YAAYO,IAAa35D,GAAQ45D,IAAYR,EAAK,MAAM;AAC1E,SAAO,CAACO,EAAW,aAAaC,KAAa;AACzC,QAAID,EAAW,KAAK,KAAK;AACrB,aAAO;AACX,QAAIv4D,IAAQu4D,EAAW;AACvB,QAAI,CAACv4D;AACD,aAAO;AACX,IAAAu4D,IAAav4D;AAAA,EACjB;AACA,MAAInB,IAAQm5D,EAAK,WAAWS,IAAY55D,GAAO65D,IAAWV,EAAK,MAAM;AACrE,SAAO,CAACS,EAAU,aAAaC,KAAY;AACvC,QAAID,EAAU,KAAK,KAAK;AACpB,aAAO;AACX,QAAIz4D,IAAQy4D,EAAU;AACtB,QAAI,CAACz4D;AACD,aAAO;AACX,IAAAy4D,IAAYz4D;AAAA,EAChB;AACA,MAAI4tB,IAAOujC,GAAYpvD,EAAM,KAAKy2D,GAAWE,GAAUnhB,EAAM,KAAK;AAClE,MAAI,CAAC3pB,KAAQA,EAAK,QAAQ4qC,KACtB5qC,aAAgBs/B,MAAet/B,EAAK,MAAM,QAAQ8qC,IAAWF;AAC7D,WAAO;AACX,MAAIZ,GAAU;AACV,QAAIrpB,IAAKxsC,EAAM,GAAG,KAAK6rB,CAAI;AAC3B,IAAA2gB,EAAG,aAAaqmB,EAAc,OAAOrmB,EAAG,KAAKiqB,CAAS,CAAC,GACvDZ,EAASrpB,EAAG,gBAAgB;AAAA,EAChC;AACA,SAAO;AACX;AACA,SAAS4pB,GAAY70D,GAAM4+B,GAAMy2B,IAAO,IAAO;AAC3C,WAASnZ,IAAOl8C,GAAMk8C,GAAMA,IAAQtd,KAAQ,UAAUsd,EAAK,aAAaA,EAAK,WAAY;AACrF,QAAIA,EAAK;AACL,aAAO;AACX,QAAImZ,KAAQnZ,EAAK,cAAc;AAC3B,aAAO;AAAA,EACf;AACA,SAAO;AACX;AASA,MAAMoZ,KAAqB,CAAC72D,GAAO61D,GAAUnxC,MAAS;AAClD,MAAI,EAAE,OAAA4tC,GAAO,OAAAjnC,EAAK,IAAKrrB,EAAM,WAAWi2D,IAAO3D;AAC/C,MAAI,CAACjnC;AACD,WAAO;AACX,MAAIinC,EAAM,OAAO,aAAa;AAC1B,QAAI5tC,IAAO,CAACA,EAAK,eAAe,YAAY1kB,CAAK,IAAIsyD,EAAM,eAAe;AACtE,aAAO;AACX,IAAA2D,IAAOC,GAAc5D,CAAK;AAAA,EAC9B;AACA,MAAI/wD,IAAO00D,KAAQA,EAAK;AACxB,SAAI,CAAC10D,KAAQ,CAAC+xD,EAAc,aAAa/xD,CAAI,IAClC,MACPs0D,KACAA,EAAS71D,EAAM,GAAG,aAAaszD,EAAc,OAAOtzD,EAAM,KAAKi2D,EAAK,MAAM10D,EAAK,QAAQ,CAAC,EAAE,eAAc,CAAE,GACvG;AACX;AACA,SAAS20D,GAAcpI,GAAM;AACzB,MAAI,CAACA,EAAK,OAAO,KAAK,KAAK;AACvB,aAAS96D,IAAI86D,EAAK,QAAQ,GAAG96D,KAAK,GAAGA,KAAK;AACtC,UAAI86D,EAAK,MAAM96D,CAAC,IAAI;AAChB,eAAO86D,EAAK,IAAI,QAAQA,EAAK,OAAO96D,IAAI,CAAC,CAAC;AAC9C,UAAI86D,EAAK,KAAK96D,CAAC,EAAE,KAAK,KAAK;AACvB;AAAA,IACR;AACJ,SAAO;AACX;AACA,SAAS8jE,GAAW92D,GAAO0kB,GAAM;AAC7B,MAAI,EAAE,SAAAqxC,MAAY/1D,EAAM;AACxB,SAAI,CAAC+1D,MAAYrxC,IAAO,CAACA,EAAK,eAAe,WAAW1kB,CAAK,IACvD+1D,EAAQ,eAAeA,EAAQ,OAAO,QAAQ,QACzC,OACJA;AACX;AAQA,MAAMgB,KAAc,CAAC/2D,GAAO61D,GAAUnxC,MAAS;AAC3C,MAAIqxC,IAAUe,GAAW92D,GAAO0kB,CAAI;AACpC,MAAI,CAACqxC;AACD,WAAO;AACX,MAAIE,IAAOe,GAAajB,CAAO;AAE/B,MAAI,CAACE;AACD,WAAO;AACX,MAAIn5D,IAAQm5D,EAAK;AAEjB,MAAIE,GAAcn2D,GAAOi2D,GAAMJ,GAAU,CAAC;AACtC,WAAO;AAGX,MAAIE,EAAQ,OAAO,QAAQ,QAAQ,MAC9BK,GAAYt5D,GAAO,OAAO,KAAKw2D,EAAc,aAAax2D,CAAK,IAAI;AACpE,QAAIu5D,IAAUjH,GAAYpvD,EAAM,KAAK+1D,EAAQ,OAAM,GAAIA,EAAQ,SAASvgB,EAAM,KAAK;AACnF,QAAI6gB,KAAWA,EAAQ,MAAM,OAAOA,EAAQ,KAAKA,EAAQ,MAAM;AAC3D,UAAIR,GAAU;AACV,YAAIrpB,IAAKxsC,EAAM,GAAG,KAAKq2D,CAAO;AAC9B,QAAA7pB,EAAG,aAAa4pB,GAAYt5D,GAAO,OAAO,IAAIs1D,EAAU,SAAS5lB,EAAG,IAAI,QAAQA,EAAG,QAAQ,IAAIypB,EAAK,GAAG,CAAC,GAAG,CAAC,IACtG3C,EAAc,OAAO9mB,EAAG,KAAKA,EAAG,QAAQ,IAAIypB,EAAK,GAAG,CAAC,CAAC,GAC5DJ,EAASrpB,EAAG,gBAAgB;AAAA,MAChC;AACA,aAAO;AAAA,IACX;AAAA,EACJ;AAEA,SAAI1vC,EAAM,UAAUm5D,EAAK,SAASF,EAAQ,QAAQ,KAC1CF,KACAA,EAAS71D,EAAM,GAAG,OAAOi2D,EAAK,KAAKA,EAAK,MAAMn5D,EAAM,QAAQ,EAAE,eAAc,CAAE,GAC3E,MAEJ;AACX,GASMm6D,KAAoB,CAACj3D,GAAO61D,GAAUnxC,MAAS;AACjD,MAAI,EAAE,OAAA4tC,GAAO,OAAAjnC,EAAK,IAAKrrB,EAAM,WAAWi2D,IAAO3D;AAC/C,MAAI,CAACjnC;AACD,WAAO;AACX,MAAIinC,EAAM,OAAO,aAAa;AAC1B,QAAI5tC,IAAO,CAACA,EAAK,eAAe,WAAW1kB,CAAK,IAAIsyD,EAAM,eAAeA,EAAM,OAAO,QAAQ;AAC1F,aAAO;AACX,IAAA2D,IAAOe,GAAa1E,CAAK;AAAA,EAC7B;AACA,MAAI/wD,IAAO00D,KAAQA,EAAK;AACxB,SAAI,CAAC10D,KAAQ,CAAC+xD,EAAc,aAAa/xD,CAAI,IAClC,MACPs0D,KACAA,EAAS71D,EAAM,GAAG,aAAaszD,EAAc,OAAOtzD,EAAM,KAAKi2D,EAAK,GAAG,CAAC,EAAE,eAAc,CAAE,GACvF;AACX;AACA,SAASe,GAAalJ,GAAM;AACxB,MAAI,CAACA,EAAK,OAAO,KAAK,KAAK;AACvB,aAAS96D,IAAI86D,EAAK,QAAQ,GAAG96D,KAAK,GAAGA,KAAK;AACtC,UAAI6R,IAASipD,EAAK,KAAK96D,CAAC;AACxB,UAAI86D,EAAK,MAAM96D,CAAC,IAAI,IAAI6R,EAAO;AAC3B,eAAOipD,EAAK,IAAI,QAAQA,EAAK,MAAM96D,IAAI,CAAC,CAAC;AAC7C,UAAI6R,EAAO,KAAK,KAAK;AACjB;AAAA,IACR;AACJ,SAAO;AACX;AAgEA,MAAMqyD,KAAgB,CAACl3D,GAAO61D,MAAa;AACvC,MAAI,EAAE,OAAAvD,GAAO,SAAAD,EAAO,IAAKryD,EAAM;AAC/B,SAAI,CAACsyD,EAAM,OAAO,KAAK,KAAK,QAAQ,CAACA,EAAM,WAAWD,CAAO,IAClD,MACPwD,KACAA,EAAS71D,EAAM,GAAG,WAAW;AAAA,CAAI,EAAE,gBAAgB,GAChD;AACX;AACA,SAASm3D,GAAeh8D,GAAO;AAC3B,WAASnI,IAAI,GAAGA,IAAImI,EAAM,WAAWnI,KAAK;AACtC,QAAI,EAAE,MAAAsK,EAAI,IAAKnC,EAAM,KAAKnI,CAAC;AAC3B,QAAIsK,EAAK,eAAe,CAACA,EAAK,iBAAgB;AAC1C,aAAOA;AAAA,EACf;AACA,SAAO;AACX;AAMA,MAAM85D,KAAW,CAACp3D,GAAO61D,MAAa;AAClC,MAAI,EAAE,OAAAvD,GAAO,SAAAD,EAAO,IAAKryD,EAAM;AAC/B,MAAI,CAACsyD,EAAM,OAAO,KAAK,KAAK,QAAQ,CAACA,EAAM,WAAWD,CAAO;AACzD,WAAO;AACX,MAAIgF,IAAQ/E,EAAM,KAAK,EAAE,GAAGx1D,IAAQw1D,EAAM,WAAW,EAAE,GAAGh1D,IAAO65D,GAAeE,EAAM,eAAev6D,CAAK,CAAC;AAC3G,MAAI,CAACQ,KAAQ,CAAC+5D,EAAM,eAAev6D,GAAOA,GAAOQ,CAAI;AACjD,WAAO;AACX,MAAIu4D,GAAU;AACV,QAAIvxD,IAAMguD,EAAM,MAAK,GAAI9lB,IAAKxsC,EAAM,GAAG,YAAYsE,GAAKA,GAAKhH,EAAK,cAAa,CAAE;AACjF,IAAAkvC,EAAG,aAAa4lB,EAAU,KAAK5lB,EAAG,IAAI,QAAQloC,CAAG,GAAG,CAAC,CAAC,GACtDuxD,EAASrpB,EAAG,gBAAgB;AAAA,EAChC;AACA,SAAO;AACX,GAKM8qB,KAAsB,CAACt3D,GAAO61D,MAAa;AAC7C,MAAIpC,IAAMzzD,EAAM,WAAW,EAAE,OAAAo6C,GAAO,KAAAC,EAAG,IAAKoZ;AAC5C,MAAIA,aAAeV,MAAgB3Y,EAAM,OAAO,iBAAiBC,EAAI,OAAO;AACxE,WAAO;AACX,MAAI/8C,IAAO65D,GAAe9c,EAAI,OAAO,eAAeA,EAAI,WAAU,CAAE,CAAC;AACrE,MAAI,CAAC/8C,KAAQ,CAACA,EAAK;AACf,WAAO;AACX,MAAIu4D,GAAU;AACV,QAAI11B,KAAQ,CAACia,EAAM,gBAAgBC,EAAI,UAAUA,EAAI,OAAO,aAAaD,IAAQC,GAAK,KAClF7N,IAAKxsC,EAAM,GAAG,OAAOmgC,GAAM7iC,EAAK,eAAe;AACnD,IAAAkvC,EAAG,aAAaqmB,EAAc,OAAOrmB,EAAG,KAAKrM,IAAO,CAAC,CAAC,GACtD01B,EAASrpB,EAAG,gBAAgB;AAAA,EAChC;AACA,SAAO;AACX,GAKM+qB,KAAiB,CAACv3D,GAAO61D,MAAa;AACxC,MAAI,EAAE,SAAAE,MAAY/1D,EAAM;AACxB,MAAI,CAAC+1D,KAAWA,EAAQ,OAAO,QAAQ;AACnC,WAAO;AACX,MAAIA,EAAQ,QAAQ,KAAKA,EAAQ,MAAK,KAAMA,EAAQ,IAAI,EAAE,GAAG;AACzD,QAAIl5D,IAASk5D,EAAQ,OAAM;AAC3B,QAAI9H,GAASjuD,EAAM,KAAKnD,CAAM;AAC1B,aAAIg5D,KACAA,EAAS71D,EAAM,GAAG,MAAMnD,CAAM,EAAE,gBAAgB,GAC7C;AAAA,EAEf;AACA,MAAI0iC,IAAQw2B,EAAQ,WAAU,GAAIvzD,IAAS+8B,KAAS+sB,GAAW/sB,CAAK;AACpE,SAAI/8B,KAAU,OACH,MACPqzD,KACAA,EAAS71D,EAAM,GAAG,KAAKu/B,GAAO/8B,CAAM,EAAE,gBAAgB,GACnD;AACX;AAKA,SAASg1D,GAAaC,GAAW;AAC7B,SAAO,CAACz3D,GAAO61D,MAAa;AACxB,QAAI,EAAE,OAAAzb,GAAO,KAAAC,EAAG,IAAKr6C,EAAM;AAC3B,QAAIA,EAAM,qBAAqBszD,KAAiBtzD,EAAM,UAAU,KAAK;AACjE,aAAI,CAACo6C,EAAM,gBAAgB,CAAC6T,GAASjuD,EAAM,KAAKo6C,EAAM,GAAG,IAC9C,MACPyb,KACAA,EAAS71D,EAAM,GAAG,MAAMo6C,EAAM,GAAG,EAAE,gBAAgB,GAChD;AAEX,QAAI,CAACA,EAAM;AACP,aAAO;AACX,QAAI1S,IAAQ,CAAA,GACRgwB,GAAYhU,GAAOiU,IAAQ,IAAOC,IAAU;AAChD,aAAS1tC,IAAIkwB,EAAM,SAAQlwB;AAEvB,UADWkwB,EAAM,KAAKlwB,CAAC,EACd,SAAS;AACd,QAAAytC,IAAQvd,EAAM,IAAIlwB,CAAC,KAAKkwB,EAAM,OAAOA,EAAM,QAAQlwB,IACnD0tC,IAAUxd,EAAM,MAAMlwB,CAAC,KAAKkwB,EAAM,OAAOA,EAAM,QAAQlwB,IACvDw5B,IAAQyT,GAAe/c,EAAM,KAAKlwB,IAAI,CAAC,EAAE,eAAekwB,EAAM,WAAWlwB,IAAI,CAAC,CAAC,CAAC,GAEhFwd,EAAM,QAAsBiwB,KAASjU,IAAQ,EAAE,MAAMA,MAAU,IAAK,GACpEgU,IAAaxtC;AACb;AAAA,MACJ,OACK;AACD,YAAIA,KAAK;AACL,iBAAO;AACX,QAAAwd,EAAM,QAAQ,IAAI;AAAA,MACtB;AAEJ,QAAI8E,IAAKxsC,EAAM;AACf,KAAIA,EAAM,qBAAqB6yD,KAAiB7yD,EAAM,qBAAqB+yD,OACvEvmB,EAAG,gBAAe;AACtB,QAAIqrB,IAAWrrB,EAAG,QAAQ,IAAI4N,EAAM,GAAG,GACnC0d,IAAM7J,GAASzhB,EAAG,KAAKqrB,GAAUnwB,EAAM,QAAQA,CAAK;AAKxD,QAJKowB,MACDpwB,EAAM,CAAC,IAAIgc,IAAQ,EAAE,MAAMA,EAAK,IAAK,MACrCoU,IAAM7J,GAASzhB,EAAG,KAAKqrB,GAAUnwB,EAAM,QAAQA,CAAK,IAEpD,CAACowB;AACD,aAAO;AAEX,QADAtrB,EAAG,MAAMqrB,GAAUnwB,EAAM,QAAQA,CAAK,GAClC,CAACiwB,KAASC,KAAWxd,EAAM,KAAKsd,CAAU,EAAE,QAAQhU,GAAO;AAC3D,UAAI3K,IAAQvM,EAAG,QAAQ,IAAI4N,EAAM,OAAOsd,CAAU,CAAC,GAAGK,IAASvrB,EAAG,IAAI,QAAQuM,CAAK;AACnF,MAAI2K,KAAStJ,EAAM,KAAKsd,IAAa,CAAC,EAAE,eAAeK,EAAO,MAAK,GAAIA,EAAO,MAAK,IAAK,GAAGrU,CAAK,KAC5FlX,EAAG,cAAcA,EAAG,QAAQ,IAAI4N,EAAM,OAAOsd,CAAU,CAAC,GAAGhU,CAAK;AAAA,IACxE;AACA,WAAImS,KACAA,EAASrpB,EAAG,gBAAgB,GACzB;AAAA,EACX;AACJ;AAKA,MAAMwrB,KAAaR,GAAY,GA8BzBS,KAAY,CAACj4D,GAAO61D,OAClBA,KACAA,EAAS71D,EAAM,GAAG,aAAa,IAAI+yD,GAAa/yD,EAAM,GAAG,CAAC,CAAC,GACxD;AAEX,SAASk4D,GAAel4D,GAAO8tD,GAAM+H,GAAU;AAC3C,MAAIh5D,IAASixD,EAAK,YAAYhxD,IAAQgxD,EAAK,WAAW51D,IAAQ41D,EAAK,MAAK;AACxE,SAAI,CAACjxD,KAAU,CAACC,KAAS,CAACD,EAAO,KAAK,kBAAkBC,EAAM,IAAI,IACvD,KACP,CAACD,EAAO,QAAQ,QAAQixD,EAAK,OAAO,WAAW51D,IAAQ,GAAGA,CAAK,KAC3D29D,KACAA,EAAS71D,EAAM,GAAG,OAAO8tD,EAAK,MAAMjxD,EAAO,UAAUixD,EAAK,GAAG,EAAE,eAAc,CAAE,GAC5E,MAEP,CAACA,EAAK,OAAO,WAAW51D,GAAOA,IAAQ,CAAC,KAAK,EAAE4E,EAAM,eAAe0xD,GAAQxuD,EAAM,KAAK8tD,EAAK,GAAG,KACxF,MACP+H,KACAA,EAAS71D,EAAM,GAAG,KAAK8tD,EAAK,GAAG,EAAE,gBAAgB,GAC9C;AACX;AACA,SAASqI,GAAcn2D,GAAOi2D,GAAMJ,GAAUlD,GAAK;AAC/C,MAAI91D,IAASo5D,EAAK,YAAYn5D,IAAQm5D,EAAK,WAAWkC,GAAMh9D,GACxDi9D,IAAWv7D,EAAO,KAAK,KAAK,aAAaC,EAAM,KAAK,KAAK;AAC7D,MAAI,CAACs7D,KAAYF,GAAel4D,GAAOi2D,GAAMJ,CAAQ;AACjD,WAAO;AACX,MAAIwC,IAAc,CAACD,KAAYnC,EAAK,OAAO,WAAWA,EAAK,MAAK,GAAIA,EAAK,MAAK,IAAK,CAAC;AACpF,MAAIoC,MACCF,KAAQh9D,IAAQ0B,EAAO,eAAeA,EAAO,UAAU,GAAG,aAAaC,EAAM,IAAI,MAClF3B,EAAM,UAAUg9D,EAAK,CAAC,KAAKr7D,EAAM,IAAI,EAAE,UAAU;AACjD,QAAI+4D,GAAU;AACV,UAAIxwD,IAAM4wD,EAAK,MAAMn5D,EAAM,UAAU6G,IAAOg1C,EAAS;AACrD,eAAS3lD,IAAImlE,EAAK,SAAS,GAAGnlE,KAAK,GAAGA;AAClC,QAAA2Q,IAAOg1C,EAAS,KAAKwf,EAAKnlE,CAAC,EAAE,OAAO,MAAM2Q,CAAI,CAAC;AACnD,MAAAA,IAAOg1C,EAAS,KAAK97C,EAAO,KAAK8G,CAAI,CAAC;AACtC,UAAI6oC,IAAKxsC,EAAM,GAAG,KAAK,IAAIqrD,GAAkB4K,EAAK,MAAM,GAAG5wD,GAAK4wD,EAAK,KAAK5wD,GAAK,IAAImwC,EAAM7xC,GAAM,GAAG,CAAC,GAAGw0D,EAAK,QAAQ,EAAI,CAAC,GACpHG,IAAU9rB,EAAG,IAAI,QAAQnnC,IAAM,IAAI8yD,EAAK,MAAM;AAClD,MAAIG,EAAQ,aAAaA,EAAQ,UAAU,QAAQz7D,EAAO,QACtD2xD,GAAQhiB,EAAG,KAAK8rB,EAAQ,GAAG,KAC3B9rB,EAAG,KAAK8rB,EAAQ,GAAG,GACvBzC,EAASrpB,EAAG,gBAAgB;AAAA,IAChC;AACA,WAAO;AAAA,EACX;AACA,MAAI+rB,IAAWz7D,EAAM,KAAK,KAAK,aAAc61D,IAAM,KAAKyF,IAAY,OAAOhG,EAAU,SAAS6D,GAAM,CAAC,GACjG12B,IAAQg5B,KAAYA,EAAS,MAAM,WAAWA,EAAS,GAAG,GAAG/1D,IAAS+8B,KAAS+sB,GAAW/sB,CAAK;AACnG,MAAI/8B,KAAU,QAAQA,KAAUyzD,EAAK;AACjC,WAAIJ,KACAA,EAAS71D,EAAM,GAAG,KAAKu/B,GAAO/8B,CAAM,EAAE,gBAAgB,GACnD;AAEX,MAAI61D,KAAejC,GAAYt5D,GAAO,SAAS,EAAI,KAAKs5D,GAAYv5D,GAAQ,KAAK,GAAG;AAChF,QAAIsgC,IAAKtgC,GAAQ8G,IAAO,CAAA;AACxB,WACIA,EAAK,KAAKw5B,CAAE,GACR,CAAAA,EAAG;AAEP,MAAAA,IAAKA,EAAG;AAEZ,QAAIu5B,IAAY55D,GAAO07D,IAAa;AACpC,WAAO,CAAC9B,EAAU,aAAaA,IAAYA,EAAU;AACjD,MAAA8B;AACJ,QAAIr7B,EAAG,WAAWA,EAAG,YAAYA,EAAG,YAAYu5B,EAAU,OAAO,GAAG;AAChE,UAAIb,GAAU;AACV,YAAIxwD,IAAMszC,EAAS;AACnB,iBAAS3lD,IAAI2Q,EAAK,SAAS,GAAG3Q,KAAK,GAAGA;AAClC,UAAAqS,IAAMszC,EAAS,KAAKh1C,EAAK3Q,CAAC,EAAE,KAAKqS,CAAG,CAAC;AACzC,YAAImnC,IAAKxsC,EAAM,GAAG,KAAK,IAAIqrD,GAAkB4K,EAAK,MAAMtyD,EAAK,QAAQsyD,EAAK,MAAMn5D,EAAM,UAAUm5D,EAAK,MAAMuC,GAAYvC,EAAK,MAAMn5D,EAAM,WAAW07D,GAAY,IAAIhjB,EAAMnwC,GAAK1B,EAAK,QAAQ,CAAC,GAAG,GAAG,EAAI,CAAC;AACvM,QAAAkyD,EAASrpB,EAAG,gBAAgB;AAAA,MAChC;AACA,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;AACA,SAASisB,GAAoBt4B,GAAM;AAC/B,SAAO,SAAUngC,GAAO61D,GAAU;AAC9B,QAAIpC,IAAMzzD,EAAM,WAAW8tD,IAAO3tB,IAAO,IAAIszB,EAAI,QAAQA,EAAI,KACzD5pC,IAAQikC,EAAK;AACjB,WAAOA,EAAK,KAAKjkC,CAAK,EAAE,YAAU;AAC9B,UAAI,CAACA;AACD,eAAO;AACX,MAAAA;AAAA,IACJ;AACA,WAAKikC,EAAK,KAAKjkC,CAAK,EAAE,eAElBgsC,KACAA,EAAS71D,EAAM,GAAG,aAAa6yD,EAAc,OAAO7yD,EAAM,KAAKmgC,IAAO,IAAI2tB,EAAK,MAAMjkC,CAAK,IAAIikC,EAAK,IAAIjkC,CAAK,CAAC,CAAC,CAAC,GAC5G,MAHI;AAAA,EAIf;AACJ;AAIA,MAAM6uC,KAAuBD,GAAoB,EAAE,GAI7CE,KAAqBF,GAAoB,CAAC;AAMhD,SAASG,GAAOjlB,GAAU31C,IAAQ,MAAM;AACpC,SAAO,SAAUgC,GAAO61D,GAAU;AAC9B,QAAI,EAAE,OAAAzb,GAAO,KAAAC,EAAG,IAAKr6C,EAAM,WACvBu/B,IAAQ6a,EAAM,WAAWC,CAAG,GAAG8U,IAAW5vB,KAASotB,GAAaptB,GAAOoU,GAAU31C,CAAK;AAC1F,WAAKmxD,KAED0G,KACAA,EAAS71D,EAAM,GAAG,KAAKu/B,GAAO4vB,CAAQ,EAAE,gBAAgB,GACrD,MAHI;AAAA,EAIf;AACJ;AAKA,SAAShC,GAAaxZ,GAAU31C,IAAQ,MAAM;AAC1C,SAAO,SAAUgC,GAAO61D,GAAU;AAC9B,QAAIgD,IAAa;AACjB,aAAS7lE,IAAI,GAAGA,IAAIgN,EAAM,UAAU,OAAO,UAAU,CAAC64D,GAAY7lE,KAAK;AACnE,UAAI,EAAE,OAAO,EAAE,KAAK6uB,EAAI,GAAI,KAAK,EAAE,KAAKokB,EAAE,EAAE,IAAKjmC,EAAM,UAAU,OAAOhN,CAAC;AACzE,MAAAgN,EAAM,IAAI,aAAa6hB,GAAMokB,GAAI,CAAC1kC,GAAM+C,MAAQ;AAC5C,YAAIu0D;AACA,iBAAO;AACX,YAAI,GAACt3D,EAAK,eAAeA,EAAK,UAAUoyC,GAAU31C,CAAK;AAEvD,cAAIuD,EAAK,QAAQoyC;AACb,YAAAklB,IAAa;AAAA,eAEZ;AACD,gBAAI/K,IAAO9tD,EAAM,IAAI,QAAQsE,CAAG,GAAGpM,IAAQ41D,EAAK,MAAK;AACrD,YAAA+K,IAAa/K,EAAK,OAAO,eAAe51D,GAAOA,IAAQ,GAAGy7C,CAAQ;AAAA,UACtE;AAAA,MACJ,CAAC;AAAA,IACL;AACA,QAAI,CAACklB;AACD,aAAO;AACX,QAAIhD,GAAU;AACV,UAAIrpB,IAAKxsC,EAAM;AACf,eAAShN,IAAI,GAAGA,IAAIgN,EAAM,UAAU,OAAO,QAAQhN,KAAK;AACpD,YAAI,EAAE,OAAO,EAAE,KAAK6uB,EAAI,GAAI,KAAK,EAAE,KAAKokB,EAAE,EAAE,IAAKjmC,EAAM,UAAU,OAAOhN,CAAC;AACzE,QAAAw5C,EAAG,aAAa3qB,GAAMokB,GAAI0N,GAAU31C,CAAK;AAAA,MAC7C;AACA,MAAA63D,EAASrpB,EAAG,gBAAgB;AAAA,IAChC;AACA,WAAO;AAAA,EACX;AACJ;AACA,SAASssB,GAAYzuC,GAAK0mB,GAAQzzC,GAAMy7D,GAAY;AAChD,WAAS,IAAI,GAAG,IAAIhoB,EAAO,QAAQ,KAAK;AACpC,QAAI,EAAE,OAAAqJ,GAAO,KAAAC,MAAQtJ,EAAO,CAAC,GACzB+mB,IAAM1d,EAAM,SAAS,IAAI/vB,EAAI,iBAAiBA,EAAI,KAAK,eAAe/sB,CAAI,IAAI;AAMlF,QALA+sB,EAAI,aAAa+vB,EAAM,KAAKC,EAAI,KAAK,CAAC94C,GAAM+C,MAAQ;AAChD,UAAIwzD;AACA,eAAO;AACX,MAAAA,IAAMv2D,EAAK,iBAAiBA,EAAK,KAAK,eAAejE,CAAI;AAAA,IAC7D,CAAC,GACGw6D;AACA,aAAO;AAAA,EACf;AACA,SAAO;AACX;AA2BA,SAASkB,GAAWnZ,GAAU7hD,IAAQ,MAAMvN,GAAS;AAIjD,SAAO,SAAUuP,GAAO61D,GAAU;AAC9B,QAAI,EAAE,OAAAxqC,GAAO,SAAA0qC,GAAS,QAAAhlB,EAAM,IAAK/wC,EAAM;AACvC,QAAKqrB,KAAS,CAAC0qC,KAAY,CAAC+C,GAAY94D,EAAM,KAAK+wC,GAAQ8O,CAAoB;AAC3E,aAAO;AACX,QAAIgW;AACA,UAAIE;AACA,QAAIlW,EAAS,QAAQ7/C,EAAM,eAAe+1D,EAAQ,OAAO,IACrDF,EAAS71D,EAAM,GAAG,iBAAiB6/C,CAAQ,CAAC,IAE5CgW,EAAS71D,EAAM,GAAG,cAAc6/C,EAAS,OAAO7hD,CAAK,CAAC,CAAC;AAAA,WAE1D;AACD,YAAI+L,GAAKyiC,IAAKxsC,EAAM;AAIhB,QAAA+J,IAAM,CAACgnC,EAAO,KAAK,CAAA8P,MAAK7gD,EAAM,IAAI,aAAa6gD,EAAE,MAAM,KAAKA,EAAE,IAAI,KAAKhB,CAAQ,CAAC;AAcpF,iBAAS7sD,IAAI,GAAGA,IAAI+9C,EAAO,QAAQ/9C,KAAK;AACpC,cAAI,EAAE,OAAAonD,GAAO,KAAAC,MAAQtJ,EAAO/9C,CAAC;AAC7B,cAAI,CAAC+W;AACD,YAAAyiC,EAAG,WAAW4N,EAAM,KAAKC,EAAI,KAAKwF,CAAQ;AAAA,eAEzC;AACD,gBAAIh+B,IAAOu4B,EAAM,KAAKnU,IAAKoU,EAAI,KAAKv1C,IAAQs1C,EAAM,WAAW/0C,IAAMg1C,EAAI,YACnE4e,IAA0Bn0D,KAASA,EAAM,SAAS,OAAO,KAAKA,EAAM,IAAI,EAAE,CAAC,EAAE,SAAS,GACtFo0D,IAAwB7zD,KAAOA,EAAI,SAAS,OAAO,KAAKA,EAAI,IAAI,EAAE,CAAC,EAAE,SAAS;AAClF,YAAIwc,IAAOo3C,IAAahzB,MACpBpkB,KAAQo3C,GACRhzB,KAAMizB,IAEV1sB,EAAG,QAAQ3qB,GAAMokB,GAAI4Z,EAAS,OAAO7hD,CAAK,CAAC;AAAA,UAC/C;AAAA,QACJ;AACA,QAAA63D,EAASrpB,EAAG,gBAAgB;AAAA,MAChC;AAEJ,WAAO;AAAA,EACX;AACJ;AAwDA,SAAS2sB,MAAiBC,GAAU;AAChC,SAAO,SAAUp5D,GAAO61D,GAAUnxC,GAAM;AACpC,aAAS,IAAI,GAAG,IAAI00C,EAAS,QAAQ;AACjC,UAAIA,EAAS,CAAC,EAAEp5D,GAAO61D,GAAUnxC,CAAI;AACjC,eAAO;AACf,WAAO;AAAA,EACX;AACJ;AACA,IAAI20C,KAAYF,GAAcvD,IAAiBI,IAAca,EAAkB,GAC3EpN,KAAM0P,GAAcvD,IAAiBmB,IAAaE,EAAiB;AAavE,MAAMqC,KAAe;AAAA,EACjB,OAASH,GAAcjC,IAAeI,IAAqBC,IAAgBS,EAAU;AAAA,EACrF,aAAaZ;AAAA,EACb,WAAaiC;AAAA,EACb,iBAAiBA;AAAA,EACjB,mBAAmBA;AAAA,EACnB,QAAU5P;AAAA,EACV,cAAcA;AAAA,EACd,SAASwO;AACb,GAOMsB,KAAgB;AAAA,EAClB,UAAUD,GAAa;AAAA,EACvB,iBAAiBA,GAAa,eAAe;AAAA,EAC7C,UAAUA,GAAa;AAAA,EACvB,sBAAsBA,GAAa,YAAY;AAAA,EAC/C,cAAcA,GAAa,YAAY;AAAA,EACvC,SAASA,GAAa,YAAY;AAAA,EAClC,UAAUZ;AAAA,EACV,UAAUC;AACd;AACA,SAASr2D,KAAOg3D;AACZ,EAAAC,GAAcj3D,CAAG,IAAIg3D,GAAah3D,CAAG;AACzC,MAAMk3D,KAAM,OAAO,YAAa,MAAc,qBAAqB,KAAK,UAAU,QAAQ,IAEpF,OAAO,KAAM,OAAe,GAAG,WAAW,GAAG,SAAQ,KAAM,WAAW,IAMtEC,KAAaD,KAAMD,KAAgBD;ACt0BzC,MAAMI,GAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBZ,YAIAv+D,GAAO+tB,GAASz4B,IAAU,IAAI;AAC1B,SAAK,QAAQ0K,GACb,KAAK,QAAQA,GACb,KAAK,UAAU,OAAO+tB,KAAW,WAAWywC,GAAczwC,CAAO,IAAIA,GACrE,KAAK,WAAWz4B,EAAQ,aAAa,IACrC,KAAK,SAASA,EAAQ,UAAU,IAChC,KAAK,aAAaA,EAAQ,eAAe;AAAA,EAC7C;AACJ;AACA,SAASkpE,GAAch5C,GAAQ;AAC3B,SAAO,SAAU3gB,GAAO7E,GAAO2J,GAAOO,GAAK;AACvC,QAAI80C,IAASx5B;AACb,QAAIxlB,EAAM,CAAC,GAAG;AACV,UAAI+U,IAAS/U,EAAM,CAAC,EAAE,YAAYA,EAAM,CAAC,CAAC;AAC1C,MAAAg/C,KAAUh/C,EAAM,CAAC,EAAE,MAAM+U,IAAS/U,EAAM,CAAC,EAAE,MAAM,GACjD2J,KAASoL;AACT,UAAI0pD,IAAS90D,IAAQO;AACrB,MAAIu0D,IAAS,MACTzf,IAASh/C,EAAM,CAAC,EAAE,MAAM+U,IAAS0pD,GAAQ1pD,CAAM,IAAIiqC,GACnDr1C,IAAQO;AAAA,IAEhB;AACA,WAAOrF,EAAM,GAAG,WAAWm6C,GAAQr1C,GAAOO,CAAG;AAAA,EACjD;AACJ;AA+EA,MAAMw0D,KAAgB,CAAC75D,GAAO61D,MAAa;AACvC,MAAI5rD,IAAUjK,EAAM;AACpB,WAAShN,IAAI,GAAGA,IAAIiX,EAAQ,QAAQjX,KAAK;AACrC,QAAIgX,IAASC,EAAQjX,CAAC,GAAG8mE;AACzB,QAAI9vD,EAAO,KAAK,iBAAiB8vD,IAAW9vD,EAAO,SAAShK,CAAK,IAAI;AACjE,UAAI61D,GAAU;AACV,YAAIrpB,IAAKxsC,EAAM,IAAI+5D,IAASD,EAAS;AACrC,iBAAS3iE,IAAI4iE,EAAO,MAAM,SAAS,GAAG5iE,KAAK,GAAGA;AAC1C,UAAAq1C,EAAG,KAAKutB,EAAO,MAAM5iE,CAAC,EAAE,OAAO4iE,EAAO,KAAK5iE,CAAC,CAAC,CAAC;AAClD,YAAI2iE,EAAS,MAAM;AACf,cAAIrgB,IAAQjN,EAAG,IAAI,QAAQstB,EAAS,IAAI,EAAE,MAAK;AAC/C,UAAAttB,EAAG,YAAYstB,EAAS,MAAMA,EAAS,IAAI95D,EAAM,OAAO,KAAK85D,EAAS,MAAMrgB,CAAK,CAAC;AAAA,QACtF;AAEI,UAAAjN,EAAG,OAAOstB,EAAS,MAAMA,EAAS,EAAE;AAExC,QAAAjE,EAASrpB,CAAE;AAAA,MACf;AACA,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;AAKe,IAAIktB,GAAU,OAAO,KAAK,EAAE,YAAY,GAAK,CAAE;AAI7C,IAAIA,GAAU,WAAW,KAAK,EAAE,YAAY,GAAK,CAAE;AAI5C,IAAIA,GAAU,wCAAwC,KAAK,EAAE,YAAY,GAAK,CAAE;AAI/E,IAAIA,GAAU,MAAM,KAAK,EAAE,YAAY,GAAK,CAAE;AAI/C,IAAIA,GAAU,wCAAwC,KAAK,EAAE,YAAY,GAAK,CAAE;AAI/E,IAAIA,GAAU,MAAM,KAAK,EAAE,YAAY,GAAK,CAAE;AAuBvE,SAASM,GAAkBC,GAAQtmB,GAAUumB,IAAW,MAAMC,GAAe;AACzE,SAAO,IAAIT,GAAUO,GAAQ,CAACj6D,GAAO7E,GAAO2J,GAAOO,MAAQ;AACvD,QAAIrH,IAAQk8D,aAAoB,WAAWA,EAAS/+D,CAAK,IAAI++D,GACzD1tB,IAAKxsC,EAAM,GAAG,OAAO8E,GAAOO,CAAG,GAC/B41C,IAASzO,EAAG,IAAI,QAAQ1nC,CAAK,GAAGy6B,IAAQ0b,EAAO,WAAU,GAAIkU,IAAW5vB,KAASotB,GAAaptB,GAAOoU,GAAU31C,CAAK;AACxH,QAAI,CAACmxD;AACD,aAAO;AACX,IAAA3iB,EAAG,KAAKjN,GAAO4vB,CAAQ;AACvB,QAAItyD,IAAS2vC,EAAG,IAAI,QAAQ1nC,IAAQ,CAAC,EAAE;AACvC,WAAIjI,KAAUA,EAAO,QAAQ82C,KAAY6a,GAAQhiB,EAAG,KAAK1nC,IAAQ,CAAC,MAC7D,CAACq1D,KAAiBA,EAAch/D,GAAO0B,CAAM,MAC9C2vC,EAAG,KAAK1nC,IAAQ,CAAC,GACd0nC;AAAA,EACX,CAAC;AACL;AASA,SAAS4tB,GAAuBH,GAAQtmB,GAAUumB,IAAW,MAAM;AAC/D,SAAO,IAAIR,GAAUO,GAAQ,CAACj6D,GAAO7E,GAAO2J,GAAOO,MAAQ;AACvD,QAAI41C,IAASj7C,EAAM,IAAI,QAAQ8E,CAAK,GAChC9G,IAAQk8D,aAAoB,WAAWA,EAAS/+D,CAAK,IAAI++D;AAC7D,WAAKjf,EAAO,KAAK,EAAE,EAAE,eAAeA,EAAO,MAAM,EAAE,GAAGA,EAAO,WAAW,EAAE,GAAGtH,CAAQ,IAE9E3zC,EAAM,GACR,OAAO8E,GAAOO,CAAG,EACjB,aAAaP,GAAOA,GAAO6uC,GAAU31C,CAAK,IAHpC;AAAA,EAIf,CAAC;AACL;ACxOA,MAAMq8D,KAAM,OAAO,YAAa,MAAc,YAAY,MACpDhwC,KAAM,OAAO,WAAY,MAAc,WAAW,MAClDiwC,KAAQD,MAAOA,GAAI,aAAa,IAChCE,KAAU,cAAc,KAAKD,EAAK,GAClCE,KAAY,UAAU,KAAKF,EAAK,GAChCG,KAAU,wCAAwC,KAAKH,EAAK,GAC5DI,KAAK,CAAC,EAAEF,MAAaC,MAAWF;AACnBC,KAAY,SAAS,eAAeC,KAAU,CAACA,GAAQ,CAAC,IAAIF,MAAU,CAACA,GAAQ,CAAC;AACnG,MAAMI,KAAQ,CAACD,MAAM,gBAAgB,KAAKJ,EAAK;AACzBK,MAAS,EAAE,iBAAiB,KAAKL,EAAK,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;AAC1E,MAAMM,KAAU,CAACF,MAAM,gBAAgB,KAAKJ,EAAK;AAE1BM,MAAU,CAACA,GAAQ,CAAC;AAC3C,MAAMC,KAAS,CAACH,MAAM,CAAC,CAACL,MAAO,iBAAiB,KAAKA,GAAI,MAAM,GACzDS,KAAMD,OAAW,cAAc,KAAKP,EAAK,KAAK,CAAC,CAACD,MAAOA,GAAI,iBAAiB;AACtES,MAAQT,MAAM,MAAM,KAAKA,GAAI,QAAQ;AAEjD,MAAMU,KAAS,CAAC,CAAC1wC,MAAO,yBAAyBA,GAAI,gBAAgB;AAC9C0wC,MAAS,EAAE,uBAAuB,KAAK,UAAU,SAAS,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;AAkB/F,SAASz3D,GAAIohB,GAAM7C,GAAMokB,GAAI9vC,GAAMwqD,GAAO32C,GAAQ;AAChD,MAAI0a,EAAK,UAAW,QAAO;AAC3B,QAAM1kB,IAAQ0kB,EAAK,OACb01B,IAAQp6C,EAAM,IAAI,QAAQ6hB,CAAI;AACpC,MAAIu4B,EAAM,OAAO,KAAK,KAAK,KAAM,QAAO;AACxC,QAAM4gB,IAAa5gB,EAAM,OAAO;AAAA,IAC9B,KAAK,IAAI,GAAGA,EAAM,eAAe,GAAG;AAAA,IACpCA,EAAM;AAAA,IACN;AAAA,IACA;AAAA,EACJ,IAAMjkD;AACJ,WAAS8kE,KAAYta,GAAO;AAC1B,UAAMua,IAAUD,GACV9/D,IAAQ+/D,EAAQ,MAAM,KAAKF,CAAU,GACrCxuB,IAAKrxC,KAASA,EAAM,CAAC,KAAK+/D,EAAQ,QAAQl7D,GAAO7E,GAAO0mB,KAAQ1mB,EAAM,CAAC,EAAE,SAAShF,EAAK,SAAS8vC,CAAE;AACxG,QAAKuG;AACL,aAAI0uB,EAAQ,aAAa,MACvB1uB,EAAG,QAAQxiC,GAAQ,EAAE,WAAWwiC,GAAI,MAAA3qB,GAAM,IAAAokB,GAAI,MAAA9vC,GAAM,GACtDuuB,EAAK,SAAS8nB,CAAE,GACT;AAAA,EACT;AACA,SAAO;AACT;AACA,MAAM2uB,KAAsB,IAAIxF,GAAU,4BAA4B;AACtE,SAASyF,GAAiB,EAAE,OAAAza,KAAS;AACnC,QAAM32C,IAAS,IAAIyrD,GAAO;AAAA,IACxB,KAAK0F;AAAA,IACL,cAAc;AAAA,IACd,OAAO;AAAA,MACL,OAAO;AACL,eAAO;AAAA,MACT;AAAA,MACA,MAAM3uB,GAAIqoB,GAAM;AACd,cAAMwG,IAAS7uB,EAAG,QAAQ,IAAI;AAC9B,eAAI6uB,MACG7uB,EAAG,gBAAgBA,EAAG,aAAa,OAAOqoB;AAAA,MACnD;AAAA,IACN;AAAA,IACI,OAAO;AAAA,MACL,gBAAgBnwC,GAAM7C,GAAMokB,GAAI9vC,GAAM;AACpC,eAAOmN,GAAIohB,GAAM7C,GAAMokB,GAAI9vC,GAAMwqD,GAAO32C,CAAM;AAAA,MAChD;AAAA,MACA,iBAAiB;AAAA,QACf,gBAAgB,CAAC0a,OACf,WAAW,MAAM;AACf,gBAAM,EAAE,SAAAqxC,EAAO,IAAKrxC,EAAK,MAAM;AAC/B,UAAIqxC,KAASzyD,GAAIohB,GAAMqxC,EAAQ,KAAKA,EAAQ,KAAK,IAAIpV,GAAO32C,CAAM;AAAA,QACpE,CAAC,GACM;AAAA,MAEjB;AAAA,MACM,cAAc0a,GAAMhQ,GAAO;AACzB,YAAIA,EAAM,QAAQ,QAAS,QAAO;AAClC,cAAM,EAAE,SAAAqhD,EAAO,IAAKrxC,EAAK,MAAM;AAC/B,eAAIqxC,IACKzyD,GAAIohB,GAAMqxC,EAAQ,KAAKA,EAAQ,KAAK;AAAA,GAAMpV,GAAO32C,CAAM,IACzD;AAAA,MACT;AAAA,IACN;AAAA,EACA,CAAG;AACD,SAAOA;AACT;AAEA,SAASsxD,GAASrB,GAAQpa,GAAUpvD,IAAU,CAAA,GAAI;AAChD,SAAO,IAAIipE,GAAUO,GAAQ,CAACj6D,GAAO7E,GAAO2J,GAAOO,MAAQ;AACzD,QAAItU,GAAIwqE,GAAIC,GAAIC;AAChB,UAAM,EAAE,IAAAjvB,EAAE,IAAKxsC,GACT07D,IAAcvgE,EAAM;AAC1B,QAAI2U,IAAQ3U,EAAMugE,IAAc,CAAC,GAC7BprB,IAAYn1C,EAAM,CAAC,GACnBwgE,IAAqB,CAAA,GACrBC,IAAUv2D;AACd,UAAMw2D,IAAW;AAAA,MACf,OAAA/rD;AAAA,MACA,WAAAwgC;AAAA,MACA,OAAAxrC;AAAA,MACA,KAAAO;AAAA,IACN,GACUvP,KAAU/E,IAAKN,EAAQ,mBAAmB,OAAO,SAASM,EAAG,KAAKN,GAASorE,CAAQ;AAIzF,QAHA,OAAO,OAAOA,GAAU/lE,CAAM,GAC7B,EAAE,OAAAga,GAAO,WAAAwgC,GAAW,OAAAxrC,GAAO,KAAAO,EAAG,IAAKw2D,GAChCvrB,MAAc,QACYxgC,GAAM,KAAI,MAAQ,GAAI,QAAO;AAC3D,QAAIA,GAAO;AACT,YAAMi4C,IAAczX,EAAU,OAAO,IAAI,GACnCwrB,IAAYh3D,IAAQwrC,EAAU,QAAQxgC,CAAK,GAC3CisD,IAAUD,IAAYhsD,EAAM;AAClC,MAAA6rD,KAAsBJ,IAAK/uB,EAAG,gBAAgB,OAAO+uB,IAAK,CAAA,GACtDQ,IAAU12D,KAAKmnC,EAAG,OAAOuvB,GAAS12D,CAAG,GACrCy2D,IAAYh3D,KAAO0nC,EAAG,OAAO1nC,IAAQijD,GAAa+T,CAAS,GAC/DF,IAAU92D,IAAQijD,IAAcj4C,EAAM;AACtC,YAAM9R,KAASw9D,IAAK/qE,EAAQ,YAAY,OAAO,SAAS+qE,EAAG,KAAK/qE,GAAS0K,CAAK;AAC9E,MAAAqxC,EAAG,QAAQ1nC,GAAO82D,GAAS/b,EAAS,OAAO7hD,CAAK,CAAC,GACjDwuC,EAAG,eAAemvB,CAAkB,IACnCF,IAAKhrE,EAAQ,mBAAmB,QAAgBgrE,EAAG,KAAKhrE,GAAS,EAAE,OAAA0K,GAAO,OAAA2J,GAAO,KAAAO,GAAK,IAAAmnC,EAAE,CAAE;AAAA,IAC7F;AACA,WAAOA;AAAA,EACT,CAAC;AACH;AAsHA,SAASwvB,GAAQxvB,GAAI;AACnB,SAAO,OAAO,OAAO,OAAO,OAAOA,CAAE,GAAGA,CAAE,EAAE,QAAQ,KAAK,IAAG,CAAE;AAChE;AACA,SAASyvB,GAActoB,GAAUpyC,GAAM;AACrC,SAAO,MAAM,QAAQoyC,CAAQ,KAAKA,EAAS,SAASpyC,EAAK,IAAI,KAAKA,EAAK,SAASoyC;AAClF;AA+BA,SAASuoB,GAAWC,GAAW;AAC7B,SAAO,CAACrO,MAAS;AACf,aAASjkC,IAAQikC,EAAK,OAAOjkC,IAAQ,GAAGA,KAAS,GAAG;AAClD,YAAMtoB,IAAOusD,EAAK,KAAKjkC,CAAK;AAC5B,UAAIsyC,EAAU56D,CAAI,GAAG;AACnB,cAAMsgB,IAAOisC,EAAK,OAAOjkC,CAAK,GACxBoc,IAAK6nB,EAAK,MAAMjkC,CAAK;AAC3B,eAAO;AAAA,UACL,MAAAhI;AAAA,UACA,IAAAokB;AAAA,UACA,MAAA1kC;AAAA,QACV;AAAA,MACM;AAAA,IACF;AAAA,EAEF;AACF;AACA,SAAS66D,GAAmBtO,GAAMna,GAAU;AAC1C,SAAOuoB,GAAW,CAAC36D,MAASA,EAAK,SAASoyC,CAAQ,EAAEma,CAAI;AAC1D;AAaA,SAASuO,GAA2BF,GAAW;AAC7C,SAAO,CAACrO,MAAS;AACf,aAAS96D,IAAI86D,EAAK,OAAO96D,IAAI,GAAGA,KAAK;AACnC,YAAMuO,IAAOusD,EAAK,KAAK96D,CAAC;AACxB,UAAImpE,EAAU56D,CAAI;AAChB,eAAO;AAAA,UACL,KAAKvO,IAAI,IAAI86D,EAAK,OAAO96D,CAAC,IAAI;AAAA,UAC9B,OAAO86D,EAAK,MAAM96D,CAAC;AAAA,UACnB,OAAOA;AAAA,UACP,MAAAuO;AAAA,QACV;AAAA,IAEI;AAAA,EAEF;AACF;AAMA,SAAS+6D,GAAuBlI,GAAWzgB,GAAU;AACnD,MAAI,EAAEygB,aAAqBd,GAAgB;AAC3C,QAAM,EAAE,MAAA/xD,GAAM,OAAA64C,EAAK,IAAKga;AACxB,MAAI6H,GAActoB,GAAUpyC,CAAI;AAC9B,WAAO;AAAA,MACL,MAAAA;AAAA,MACA,KAAK64C,EAAM;AAAA,MACX,OAAOA,EAAM,MAAMA,EAAM,KAAK;AAAA,MAC9B,OAAOA,EAAM;AAAA,IACnB;AAEA;AACA,MAAMmiB,KAAsB,CAACv8D,GAAOuB,MAAS;AAC3C,QAAM,EAAE,WAAA6yD,GAAW,KAAA/pC,EAAG,IAAKrqB;AAC3B,MAAIo0D,aAAqBd;AACvB,WAAO;AAAA,MACL,SAASc,EAAU,KAAK,SAAS7yD;AAAA,MACjC,KAAK6yD,EAAU;AAAA,MACf,QAAQA,EAAU;AAAA,IACxB;AAEE,QAAM,EAAE,MAAAvyC,GAAM,IAAAokB,EAAE,IAAKmuB;AACrB,MAAIoI,IAAU,IACVl4D,IAAM,IACN9B,IAAS;AACb,SAAA6nB,EAAI,aAAaxI,GAAMokB,GAAI,CAACvvC,GAAGy1C,MACzB3pC,IAAe,KACf9L,EAAE,SAAS6K,KACbi7D,IAAU,IACVl4D,IAAM6nC,GACN3pC,IAAS9L,GACF,MAEF,EACR,GACM;AAAA,IACL,SAAA8lE;AAAA,IACA,KAAAl4D;AAAA,IACA,QAAA9B;AAAA,EACJ;AACA;ACjYO,IAAIsJ,KAAO;AAAA,EAChB,GAAG;AAAA,EACH,GAAG;AAAA,EACH,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AACP,GAEW6qB,KAAQ;AAAA,EACjB,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AACP,GAEI6iC,KAAM,OAAO,YAAa,OAAe,MAAM,KAAK,UAAU,QAAQ,GACtEkB,KAAK,OAAO,YAAa,OAAe,gDAAgD,KAAK,UAAU,SAAS;AAGpH,SAAS1nE,KAAI,GAAGA,KAAI,IAAIA,KAAK,CAAA8Y,GAAK,KAAK9Y,EAAC,IAAI8Y,GAAK,KAAK9Y,EAAC,IAAI,OAAOA,EAAC;AAGnE,SAASA,KAAI,GAAGA,MAAK,IAAIA,KAAK,CAAA8Y,GAAK9Y,KAAI,GAAG,IAAI,MAAMA;AAGpD,SAASA,KAAI,IAAIA,MAAK,IAAIA;AACxB,EAAA8Y,GAAK9Y,EAAC,IAAI,OAAO,aAAaA,KAAI,EAAE,GACpC2jC,GAAM3jC,EAAC,IAAI,OAAO,aAAaA,EAAC;AAIlC,SAAS6S,MAAQiG,GAAM,CAAK6qB,GAAM,eAAe9wB,EAAI,MAAG8wB,GAAM9wB,EAAI,IAAIiG,GAAKjG,EAAI;AAExE,SAAS42D,GAAQ/nD,GAAO;AAG7B,MAAIgoD,IAAYlD,MAAO9kD,EAAM,WAAWA,EAAM,YAAY,CAACA,EAAM,WAAW,CAACA,EAAM,UAC/EgmD,MAAMhmD,EAAM,YAAYA,EAAM,OAAOA,EAAM,IAAI,UAAU,KACzDA,EAAM,OAAO,gBACbhS,IAAQ,CAACg6D,KAAahoD,EAAM,QAC7BA,EAAM,WAAWiiB,KAAQ7qB,IAAM4I,EAAM,OAAO,KAC7CA,EAAM,OAAO;AAEf,SAAIhS,KAAQ,UAAOA,IAAO,WACtBA,KAAQ,UAAOA,IAAO,WAEtBA,KAAQ,WAAQA,IAAO,cACvBA,KAAQ,SAAMA,IAAO,YACrBA,KAAQ,YAASA,IAAO,eACxBA,KAAQ,WAAQA,IAAO,cACpBA;AACT;ACnHA,MAAM82D,KAAM,OAAO,YAAa,OAAe,qBAAqB,KAAK,UAAU,QAAQ,GACrFmD,KAAU,OAAO,YAAa,OAAe,MAAM,KAAK,UAAU,QAAQ;AAChF,SAASC,GAAiBl6D,GAAM;AAC5B,MAAI9M,IAAQ8M,EAAK,MAAM,QAAQ,GAAG5M,IAASF,EAAMA,EAAM,SAAS,CAAC;AACjE,EAAIE,KAAU,YACVA,IAAS;AACb,MAAI09B,GAAKqpC,GAAMlmC,GAAO/jB;AACtB,WAAS5f,IAAI,GAAGA,IAAI4C,EAAM,SAAS,GAAG5C,KAAK;AACvC,QAAI8pE,IAAMlnE,EAAM5C,CAAC;AACjB,QAAI,kBAAkB,KAAK8pE,CAAG;AAC1B,MAAAlqD,IAAO;AAAA,aACF,YAAY,KAAKkqD,CAAG;AACzB,MAAAtpC,IAAM;AAAA,aACD,sBAAsB,KAAKspC,CAAG;AACnC,MAAAD,IAAO;AAAA,aACF,cAAc,KAAKC,CAAG;AAC3B,MAAAnmC,IAAQ;AAAA,aACH,SAAS,KAAKmmC,CAAG;AACtB,MAAItD,KACA5mD,IAAO,KAEPiqD,IAAO;AAAA;AAGX,YAAM,IAAI,MAAM,iCAAiCC,CAAG;AAAA,EAC5D;AACA,SAAItpC,MACA19B,IAAS,SAASA,IAClB+mE,MACA/mE,IAAS,UAAUA,IACnB8c,MACA9c,IAAS,UAAUA,IACnB6gC,MACA7gC,IAAS,WAAWA,IACjBA;AACX;AACA,SAASiQ,GAAUjI,GAAK;AACpB,MAAI+E,IAAO,uBAAO,OAAO,IAAI;AAC7B,WAASm1C,KAAQl6C;AACb,IAAA+E,EAAK+5D,GAAiB5kB,CAAI,CAAC,IAAIl6C,EAAIk6C,CAAI;AAC3C,SAAOn1C;AACX;AACA,SAASk6D,GAAUr6D,GAAMgS,GAAOiiB,IAAQ,IAAM;AAC1C,SAAIjiB,EAAM,WACNhS,IAAO,SAASA,IAChBgS,EAAM,YACNhS,IAAO,UAAUA,IACjBgS,EAAM,YACNhS,IAAO,UAAUA,IACjBi0B,KAASjiB,EAAM,aACfhS,IAAO,WAAWA,IACfA;AACX;AAgCA,SAASs6D,GAAOC,GAAU;AACtB,SAAO,IAAIxH,GAAO,EAAE,OAAO,EAAE,eAAeyH,GAAeD,CAAQ,EAAC,GAAI;AAC5E;AAMA,SAASC,GAAeD,GAAU;AAC9B,MAAIn/D,IAAMiI,GAAUk3D,CAAQ;AAC5B,SAAO,SAAUv4C,GAAMhQ,GAAO;AAC1B,QAAIhS,IAAO+5D,GAAQ/nD,CAAK,GAAGyoD,GAAUC,IAASt/D,EAAIi/D,GAAUr6D,GAAMgS,CAAK,CAAC;AACxE,QAAI0oD,KAAUA,EAAO14C,EAAK,OAAOA,EAAK,UAAUA,CAAI;AAChD,aAAO;AAEX,QAAIhiB,EAAK,UAAU,KAAKA,KAAQ,KAAK;AACjC,UAAIgS,EAAM,UAAU;AAGhB,YAAI2oD,IAAUv/D,EAAIi/D,GAAUr6D,GAAMgS,GAAO,EAAK,CAAC;AAC/C,YAAI2oD,KAAWA,EAAQ34C,EAAK,OAAOA,EAAK,UAAUA,CAAI;AAClD,iBAAO;AAAA,MACf;AACA,WAAKhQ,EAAM,UAAUA,EAAM,WAAWA,EAAM;AAAA,MAExC,EAAEioD,MAAWjoD,EAAM,WAAWA,EAAM,YACnCyoD,IAAWrxD,GAAK4I,EAAM,OAAO,MAAMyoD,KAAYz6D,GAAM;AAKtD,YAAI46D,IAAWx/D,EAAIi/D,GAAUI,GAAUzoD,CAAK,CAAC;AAC7C,YAAI4oD,KAAYA,EAAS54C,EAAK,OAAOA,EAAK,UAAUA,CAAI;AACpD,iBAAO;AAAA,MACf;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AACJ;ACzHA,MAAM64C,KAAW,SAAUh8D,GAAM;AAC7B,WAASrJ,IAAQ,KAAIA;AAEjB,QADAqJ,IAAOA,EAAK,iBACR,CAACA;AACD,aAAOrJ;AAEnB,GACMslE,KAAa,SAAUj8D,GAAM;AAC/B,MAAIsD,IAAStD,EAAK,gBAAgBA,EAAK;AACvC,SAAOsD,KAAUA,EAAO,YAAY,KAAKA,EAAO,OAAOA;AAC3D;AACA,IAAI44D,KAAc;AAIlB,MAAMC,KAAY,SAAUn8D,GAAMsgB,GAAMokB,GAAI;AACxC,MAAI1G,IAAQk+B,OAAgBA,KAAc,SAAS,YAAW;AAC9D,SAAAl+B,EAAM,OAAOh+B,GAAM0kC,KAAa1kC,EAAK,UAAU,MAAW,GAC1Dg+B,EAAM,SAASh+B,GAAMsgB,KAAQ,CAAC,GACvB0d;AACX,GACMo+B,KAAmB,WAAY;AACjC,EAAAF,KAAc;AAClB,GAIMG,KAAuB,SAAUr8D,GAAM+zC,GAAKuoB,GAAYC,GAAW;AACrE,SAAOD,MAAeE,GAAQx8D,GAAM+zC,GAAKuoB,GAAYC,GAAW,EAAE,KAC9DC,GAAQx8D,GAAM+zC,GAAKuoB,GAAYC,GAAW,CAAC;AACnD,GACME,KAAe;AACrB,SAASD,GAAQx8D,GAAM+zC,GAAKuoB,GAAYC,GAAWnL,GAAK;AAEpD,WADI5hE,OACK;AACL,QAAIwQ,KAAQs8D,KAAcvoB,KAAOwoB;AAC7B,aAAO;AACX,QAAIxoB,MAAQqd,IAAM,IAAI,IAAIsL,GAAS18D,CAAI,IAAI;AACvC,UAAIsD,IAAStD,EAAK;AAClB,UAAI,CAACsD,KAAUA,EAAO,YAAY,KAAKq5D,GAAa38D,CAAI,KAAKy8D,GAAa,KAAKz8D,EAAK,QAAQ,KACxFA,EAAK,mBAAmB;AACxB,eAAO;AACX,MAAA+zC,IAAMioB,GAASh8D,CAAI,KAAKoxD,IAAM,IAAI,IAAI,IACtCpxD,IAAOsD;AAAA,IACX,WACStD,EAAK,YAAY,GAAG;AACzB,UAAItD,IAAQsD,EAAK,WAAW+zC,KAAOqd,IAAM,IAAI,KAAK,EAAE;AACpD,UAAI10D,EAAM,YAAY,KAAKA,EAAM,mBAAmB;AAChD,YAAK,GAAAlN,IAAKkN,EAAM,gBAAgB,QAAQlN,MAAO,WAAkBA,EAAG;AAChE,UAAAukD,KAAOqd;AAAA;AAEP,iBAAO;AAAA;AAGX,QAAApxD,IAAOtD,GACPq3C,IAAMqd,IAAM,IAAIsL,GAAS18D,CAAI,IAAI;AAAA,IAEzC;AAEI,aAAO;AAAA,EAEf;AACJ;AACA,SAAS08D,GAAS18D,GAAM;AACpB,SAAOA,EAAK,YAAY,IAAIA,EAAK,UAAU,SAASA,EAAK,WAAW;AACxE;AACA,SAAS48D,GAAiB58D,GAAM2O,GAAQ;AACpC,aAAS;AACL,QAAI3O,EAAK,YAAY,KAAK2O;AACtB,aAAO3O;AACX,QAAIA,EAAK,YAAY,KAAK2O,IAAS,GAAG;AAClC,UAAI3O,EAAK,mBAAmB;AACxB,eAAO;AACX,MAAAA,IAAOA,EAAK,WAAW2O,IAAS,CAAC,GACjCA,IAAS+tD,GAAS18D,CAAI;AAAA,IAC1B,WACSA,EAAK,cAAc,CAAC28D,GAAa38D,CAAI;AAC1C,MAAA2O,IAASqtD,GAASh8D,CAAI,GACtBA,IAAOA,EAAK;AAAA;AAGZ,aAAO;AAAA,EAEf;AACJ;AACA,SAAS68D,GAAgB78D,GAAM2O,GAAQ;AACnC,aAAS;AACL,QAAI3O,EAAK,YAAY,KAAK2O,IAAS3O,EAAK,UAAU;AAC9C,aAAOA;AACX,QAAIA,EAAK,YAAY,KAAK2O,IAAS3O,EAAK,WAAW,QAAQ;AACvD,UAAIA,EAAK,mBAAmB;AACxB,eAAO;AACX,MAAAA,IAAOA,EAAK,WAAW2O,CAAM,GAC7BA,IAAS;AAAA,IACb,WACS3O,EAAK,cAAc,CAAC28D,GAAa38D,CAAI;AAC1C,MAAA2O,IAASqtD,GAASh8D,CAAI,IAAI,GAC1BA,IAAOA,EAAK;AAAA;AAGZ,aAAO;AAAA,EAEf;AACJ;AACA,SAAS88D,GAAS98D,GAAM2O,GAAQrL,GAAQ;AACpC,WAAS+yD,IAAU1nD,KAAU,GAAGynD,IAAQznD,KAAU+tD,GAAS18D,CAAI,GAAGq2D,KAAWD,KAAQ;AACjF,QAAIp2D,KAAQsD;AACR,aAAO;AACX,QAAI3M,IAAQqlE,GAASh8D,CAAI;AAEzB,QADAA,IAAOA,EAAK,YACR,CAACA;AACD,aAAO;AACX,IAAAq2D,IAAUA,KAAW1/D,KAAS,GAC9By/D,IAAQA,KAASz/D,KAAS+lE,GAAS18D,CAAI;AAAA,EAC3C;AACJ;AACA,SAAS28D,GAAapd,GAAK;AACvB,MAAI2T;AACJ,WAASpb,IAAMyH,GAAKzH,KACZ,EAAAob,IAAOpb,EAAI,aADMA,IAAMA,EAAI;AAC/B;AAEJ,SAAOob,KAAQA,EAAK,QAAQA,EAAK,KAAK,YAAYA,EAAK,OAAO3T,KAAO2T,EAAK,cAAc3T;AAC5F;AAGA,MAAMwd,KAAqB,SAAUC,GAAQ;AACzC,SAAOA,EAAO,aAAaX,GAAqBW,EAAO,WAAWA,EAAO,aAAaA,EAAO,YAAYA,EAAO,YAAY;AAChI;AACA,SAASC,GAASC,GAASn8D,GAAK;AAC5B,MAAIoS,IAAQ,SAAS,YAAY,OAAO;AACxC,SAAAA,EAAM,UAAU,WAAW,IAAM,EAAI,GACrCA,EAAM,UAAU+pD,GAChB/pD,EAAM,MAAMA,EAAM,OAAOpS,GAClBoS;AACX;AACA,SAASgqD,GAAkBr0C,GAAK;AAC5B,MAAI2xB,IAAM3xB,EAAI;AACd,SAAO2xB,KAAOA,EAAI;AACd,IAAAA,IAAMA,EAAI,WAAW;AACzB,SAAOA;AACX;AACA,SAAS2iB,GAAet0C,GAAK0iB,GAAGC,GAAG;AAC/B,MAAI3iB,EAAI;AACJ,QAAI;AACA,UAAI/lB,IAAM+lB,EAAI,uBAAuB0iB,GAAGC,CAAC;AAIzC,UAAI1oC;AACA,eAAO,EAAE,MAAMA,EAAI,YAAY,QAAQ,KAAK,IAAI25D,GAAS35D,EAAI,UAAU,GAAGA,EAAI,MAAM,EAAC;AAAA,IAC7F,QACU;AAAA,IAAE;AAEhB,MAAI+lB,EAAI,qBAAqB;AACzB,QAAIkV,IAAQlV,EAAI,oBAAoB0iB,GAAGC,CAAC;AACxC,QAAIzN;AACA,aAAO,EAAE,MAAMA,EAAM,gBAAgB,QAAQ,KAAK,IAAI0+B,GAAS1+B,EAAM,cAAc,GAAGA,EAAM,WAAW,EAAC;AAAA,EAChH;AACJ;AAEA,MAAM86B,KAAM,OAAO,YAAa,MAAc,YAAY,MACpDhwC,KAAM,OAAO,WAAY,MAAc,WAAW,MAClDiwC,KAASD,MAAOA,GAAI,aAAc,IAClCE,KAAU,cAAc,KAAKD,EAAK,GAClCE,KAAY,UAAU,KAAKF,EAAK,GAChCG,KAAU,wCAAwC,KAAKH,EAAK,GAC5DI,KAAK,CAAC,EAAEF,MAAaC,MAAWF,KAChCqE,KAAapE,KAAY,SAAS,eAAeC,KAAU,CAACA,GAAQ,CAAC,IAAIF,KAAU,CAACA,GAAQ,CAAC,IAAI,GACjGI,KAAQ,CAACD,MAAM,gBAAgB,KAAKJ,EAAK;AAC/CK,MAAS,EAAE,iBAAiB,KAAKL,EAAK,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;AACpD,MAAMM,KAAU,CAACF,MAAM,gBAAgB,KAAKJ,EAAK,GAC3CuE,KAAS,CAAC,CAACjE,IACXkE,KAAiBlE,KAAU,CAACA,GAAQ,CAAC,IAAI,GACzCC,KAAS,CAACH,MAAM,CAAC,CAACL,MAAO,iBAAiB,KAAKA,GAAI,MAAM,GAEzDS,KAAMD,OAAW,cAAc,KAAKP,EAAK,KAAK,CAAC,CAACD,MAAOA,GAAI,iBAAiB,IAC5Eb,KAAMsB,OAAQT,KAAM,MAAM,KAAKA,GAAI,QAAQ,IAAI,KAC/CsC,KAAUtC,KAAM,MAAM,KAAKA,GAAI,QAAQ,IAAI,IAC3C0E,KAAU,aAAa,KAAKzE,EAAK,GACjCS,KAAS,CAAC,CAAC1wC,MAAO,yBAAyBA,GAAI,gBAAgB,OAC/D20C,KAAiBjE,KAAS,EAAE,uBAAuB,KAAK,UAAU,SAAS,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI;AAEnG,SAASkE,GAAW50C,GAAK;AACrB,MAAI60C,IAAK70C,EAAI,eAAeA,EAAI,YAAY;AAC5C,SAAI60C,IACO;AAAA,IACH,MAAM;AAAA,IAAG,OAAOA,EAAG;AAAA,IACnB,KAAK;AAAA,IAAG,QAAQA,EAAG;AAAA,EAC/B,IACW;AAAA,IAAE,MAAM;AAAA,IAAG,OAAO70C,EAAI,gBAAgB;AAAA,IACzC,KAAK;AAAA,IAAG,QAAQA,EAAI,gBAAgB;AAAA,EAAY;AACxD;AACA,SAAS80C,GAAQluE,GAAOkvC,GAAM;AAC1B,SAAO,OAAOlvC,KAAS,WAAWA,IAAQA,EAAMkvC,CAAI;AACxD;AACA,SAASi/B,GAAW79D,GAAM;AACtB,MAAI89D,IAAO99D,EAAK,sBAAqB,GAEjC+9D,IAAUD,EAAK,QAAQ99D,EAAK,eAAgB,GAC5Cg+D,IAAUF,EAAK,SAAS99D,EAAK,gBAAiB;AAElD,SAAO;AAAA,IAAE,MAAM89D,EAAK;AAAA,IAAM,OAAOA,EAAK,OAAO99D,EAAK,cAAc+9D;AAAA,IAC5D,KAAKD,EAAK;AAAA,IAAK,QAAQA,EAAK,MAAM99D,EAAK,eAAeg+D;AAAA,EAAM;AACpE;AACA,SAASC,GAAmB96C,GAAM26C,GAAMI,GAAU;AAC9C,MAAIC,IAAkBh7C,EAAK,SAAS,iBAAiB,KAAK,GAAGi7C,IAAej7C,EAAK,SAAS,cAAc,KAAK,GACzG2F,IAAM3F,EAAK,IAAI;AACnB,WAAS7f,IAAS46D,KAAY/6C,EAAK,KAC1B7f,KADiC;AAGtC,QAAIA,EAAO,YAAY,GAAG;AACtB,MAAAA,IAAS24D,GAAW34D,CAAM;AAC1B;AAAA,IACJ;AACA,QAAIm3C,IAAMn3C,GACN+6D,IAAQ5jB,KAAO3xB,EAAI,MACnBw1C,IAAWD,IAAQX,GAAW50C,CAAG,IAAI+0C,GAAWpjB,CAAG,GACnD8jB,IAAQ,GAAGC,IAAQ;AAWvB,QAVIV,EAAK,MAAMQ,EAAS,MAAMV,GAAQO,GAAiB,KAAK,IACxDK,IAAQ,EAAEF,EAAS,MAAMR,EAAK,MAAMF,GAAQQ,GAAc,KAAK,KAC1DN,EAAK,SAASQ,EAAS,SAASV,GAAQO,GAAiB,QAAQ,MACtEK,IAAQV,EAAK,SAASA,EAAK,MAAMQ,EAAS,SAASA,EAAS,MACtDR,EAAK,MAAMF,GAAQQ,GAAc,KAAK,IAAIE,EAAS,MACnDR,EAAK,SAASQ,EAAS,SAASV,GAAQQ,GAAc,QAAQ,IACpEN,EAAK,OAAOQ,EAAS,OAAOV,GAAQO,GAAiB,MAAM,IAC3DI,IAAQ,EAAED,EAAS,OAAOR,EAAK,OAAOF,GAAQQ,GAAc,MAAM,KAC7DN,EAAK,QAAQQ,EAAS,QAAQV,GAAQO,GAAiB,OAAO,MACnEI,IAAQT,EAAK,QAAQQ,EAAS,QAAQV,GAAQQ,GAAc,OAAO,IACnEG,KAASC;AACT,UAAIH;AACA,QAAAv1C,EAAI,YAAY,SAASy1C,GAAOC,CAAK;AAAA,WAEpC;AACD,YAAIC,IAAShkB,EAAI,YAAYikB,IAASjkB,EAAI;AAC1C,QAAI+jB,MACA/jB,EAAI,aAAa+jB,IACjBD,MACA9jB,EAAI,cAAc8jB;AACtB,YAAII,IAAKlkB,EAAI,aAAagkB,GAAQG,IAAKnkB,EAAI,YAAYikB;AACvD,QAAAZ,IAAO,EAAE,MAAMA,EAAK,OAAOa,GAAI,KAAKb,EAAK,MAAMc,GAAI,OAAOd,EAAK,QAAQa,GAAI,QAAQb,EAAK,SAASc,EAAE;AAAA,MACvG;AAEJ,QAAI77D,IAAMs7D,IAAQ,UAAU,iBAAiB/6D,CAAM,EAAE;AACrD,QAAI,mBAAmB,KAAKP,CAAG;AAC3B;AACJ,IAAAO,IAASP,KAAO,aAAaO,EAAO,eAAe24D,GAAW34D,CAAM;AAAA,EACxE;AACJ;AAKA,SAASu7D,GAAe17C,GAAM;AAC1B,MAAI26C,IAAO36C,EAAK,IAAI,sBAAqB,GAAIu7C,IAAS,KAAK,IAAI,GAAGZ,EAAK,GAAG,GACtEgB,GAAQC;AACZ,WAASvzB,KAAKsyB,EAAK,OAAOA,EAAK,SAAS,GAAGryB,IAAIizB,IAAS,GAAGjzB,IAAI,KAAK,IAAI,aAAaqyB,EAAK,MAAM,GAAGryB,KAAK,GAAG;AACvG,QAAI8T,IAAMp8B,EAAK,KAAK,iBAAiBqoB,GAAGC,CAAC;AACzC,QAAI,CAAC8T,KAAOA,KAAOp8B,EAAK,OAAO,CAACA,EAAK,IAAI,SAASo8B,CAAG;AACjD;AACJ,QAAIyf,IAAYzf,EAAI,sBAAqB;AACzC,QAAIyf,EAAU,OAAON,IAAS,IAAI;AAC9B,MAAAI,IAASvf,GACTwf,IAASC,EAAU;AACnB;AAAA,IACJ;AAAA,EACJ;AACA,SAAO,EAAE,QAAQF,GAAQ,QAAQC,GAAQ,OAAOE,GAAY97C,EAAK,GAAG,EAAC;AACzE;AACA,SAAS87C,GAAY1f,GAAK;AACtB,MAAI/yC,IAAQ,CAAA,GAAIsc,IAAMy2B,EAAI;AAC1B,WAASzH,IAAMyH,GAAKzH,MAChBtrC,EAAM,KAAK,EAAE,KAAKsrC,GAAK,KAAKA,EAAI,WAAW,MAAMA,EAAI,WAAU,CAAE,GAC7DyH,KAAOz2B,IAFUgvB,IAAMmkB,GAAWnkB,CAAG;AAEzC;AAGJ,SAAOtrC;AACX;AAGA,SAAS0yD,GAAe,EAAE,QAAAJ,GAAQ,QAAAC,GAAQ,OAAAvyD,EAAK,GAAI;AAC/C,MAAI2yD,IAAYL,IAASA,EAAO,sBAAqB,EAAG,MAAM;AAC9D,EAAAM,GAAmB5yD,GAAO2yD,KAAa,IAAI,IAAIA,IAAYJ,CAAM;AACrE;AACA,SAASK,GAAmB5yD,GAAO6yD,GAAM;AACrC,WAAS5tE,IAAI,GAAGA,IAAI+a,EAAM,QAAQ/a,KAAK;AACnC,QAAI,EAAE,KAAA8tD,GAAK,KAAAkB,GAAK,MAAAnvD,EAAI,IAAKkb,EAAM/a,CAAC;AAChC,IAAI8tD,EAAI,aAAakB,IAAM4e,MACvB9f,EAAI,YAAYkB,IAAM4e,IACtB9f,EAAI,cAAcjuD,MAClBiuD,EAAI,aAAajuD;AAAA,EACzB;AACJ;AACA,IAAIguE,KAAyB;AAG7B,SAASC,GAAmBhgB,GAAK;AAC7B,MAAIA,EAAI;AACJ,WAAOA,EAAI;AACf,MAAI+f;AACA,WAAO/f,EAAI,MAAM+f,EAAsB;AAC3C,MAAIxF,IAASmF,GAAY1f,CAAG;AAC5B,EAAAA,EAAI,MAAM+f,MAA0B,OAAO;AAAA,IACvC,IAAI,gBAAgB;AAChB,aAAAA,KAAyB,EAAE,eAAe,GAAI,GACvC;AAAA,IACX;AAAA,EACR,IAAQ,MAAS,GACRA,OACDA,KAAyB,IACzBF,GAAmBtF,GAAQ,CAAC;AAEpC;AACA,SAAS0F,GAAiBx/D,GAAMy/D,GAAQ;AACpC,MAAIC,GAASC,IAAY,KAAKC,GAAejxD,IAAS,GAClDkxD,IAASJ,EAAO,KAAKK,IAASL,EAAO,KACrCM,GAAYC;AAChB,WAAStjE,IAAQsD,EAAK,YAAYigE,IAAa,GAAGvjE,GAAOA,IAAQA,EAAM,aAAaujE,KAAc;AAC9F,QAAIC;AACJ,QAAIxjE,EAAM,YAAY;AAClB,MAAAwjE,IAAQxjE,EAAM,eAAc;AAAA,aACvBA,EAAM,YAAY;AACvB,MAAAwjE,IAAQ/D,GAAUz/D,CAAK,EAAE,eAAc;AAAA;AAEvC;AACJ,aAASjL,IAAI,GAAGA,IAAIyuE,EAAM,QAAQzuE,KAAK;AACnC,UAAIqsE,IAAOoC,EAAMzuE,CAAC;AAClB,UAAIqsE,EAAK,OAAO+B,KAAU/B,EAAK,UAAUgC,GAAQ;AAC7C,QAAAD,IAAS,KAAK,IAAI/B,EAAK,QAAQ+B,CAAM,GACrCC,IAAS,KAAK,IAAIhC,EAAK,KAAKgC,CAAM;AAClC,YAAIK,IAAKrC,EAAK,OAAO2B,EAAO,OAAO3B,EAAK,OAAO2B,EAAO,OAChD3B,EAAK,QAAQ2B,EAAO,OAAOA,EAAO,OAAO3B,EAAK,QAAQ;AAC5D,YAAIqC,IAAKR,GAAW;AAChB,UAAAD,IAAUhjE,GACVijE,IAAYQ,GACZP,IAAgBO,KAAMT,EAAQ,YAAY,IAAI;AAAA,YAC1C,MAAM5B,EAAK,QAAQ2B,EAAO,OAAO3B,EAAK,QAAQA,EAAK;AAAA,YACnD,KAAK2B,EAAO;AAAA,UACpC,IAAwBA,GACA/iE,EAAM,YAAY,KAAKyjE,MACvBxxD,IAASsxD,KAAcR,EAAO,SAAS3B,EAAK,OAAOA,EAAK,SAAS,IAAI,IAAI;AAC7E;AAAA,QACJ;AAAA,MACJ,MACK,CAAIA,EAAK,MAAM2B,EAAO,OAAO,CAACM,KAAcjC,EAAK,QAAQ2B,EAAO,QAAQ3B,EAAK,SAAS2B,EAAO,SAC9FM,IAAarjE,GACbsjE,IAAc,EAAE,MAAM,KAAK,IAAIlC,EAAK,MAAM,KAAK,IAAIA,EAAK,OAAO2B,EAAO,IAAI,CAAC,GAAG,KAAK3B,EAAK,IAAG;AAE/F,MAAI,CAAC4B,MAAYD,EAAO,QAAQ3B,EAAK,SAAS2B,EAAO,OAAO3B,EAAK,OAC7D2B,EAAO,QAAQ3B,EAAK,QAAQ2B,EAAO,OAAO3B,EAAK,YAC/CnvD,IAASsxD,IAAa;AAAA,IAC9B;AAAA,EACJ;AAMA,SALI,CAACP,KAAWK,MACZL,IAAUK,GACVH,IAAgBI,GAChBL,IAAY,IAEZD,KAAWA,EAAQ,YAAY,IACxBU,GAAiBV,GAASE,CAAa,IAC9C,CAACF,KAAYC,KAAaD,EAAQ,YAAY,IACvC,EAAE,MAAA1/D,GAAM,QAAA2O,EAAM,IAClB6wD,GAAiBE,GAASE,CAAa;AAClD;AACA,SAASQ,GAAiBpgE,GAAMy/D,GAAQ;AACpC,MAAIY,IAAMrgE,EAAK,UAAU,QACrBg+B,IAAQ,SAAS,YAAW;AAChC,WAAS,IAAI,GAAG,IAAIqiC,GAAK,KAAK;AAC1B,IAAAriC,EAAM,OAAOh+B,GAAM,IAAI,CAAC,GACxBg+B,EAAM,SAASh+B,GAAM,CAAC;AACtB,QAAI89D,IAAOwC,GAAWtiC,GAAO,CAAC;AAC9B,QAAI8/B,EAAK,OAAOA,EAAK,UAEjByC,GAAOd,GAAQ3B,CAAI;AACnB,aAAO,EAAE,MAAA99D,GAAM,QAAQ,KAAKy/D,EAAO,SAAS3B,EAAK,OAAOA,EAAK,SAAS,IAAI,IAAI,GAAE;AAAA,EACxF;AACA,SAAO,EAAE,MAAA99D,GAAM,QAAQ,EAAC;AAC5B;AACA,SAASugE,GAAOd,GAAQ3B,GAAM;AAC1B,SAAO2B,EAAO,QAAQ3B,EAAK,OAAO,KAAK2B,EAAO,QAAQ3B,EAAK,QAAQ,KAC/D2B,EAAO,OAAO3B,EAAK,MAAM,KAAK2B,EAAO,OAAO3B,EAAK,SAAS;AAClE;AACA,SAAS0C,GAAajhB,GAAKkgB,GAAQ;AAC/B,MAAIn8D,IAASi8C,EAAI;AACjB,SAAIj8C,KAAU,QAAQ,KAAKA,EAAO,QAAQ,KAAKm8D,EAAO,OAAOlgB,EAAI,sBAAqB,EAAG,OAC9Ej8C,IACJi8C;AACX;AACA,SAASkhB,GAAet9C,GAAMs3B,GAAKglB,GAAQ;AACvC,MAAI,EAAE,MAAAz/D,GAAM,QAAA2O,MAAW6wD,GAAiB/kB,GAAKglB,CAAM,GAAGhS,IAAO;AAC7D,MAAIztD,EAAK,YAAY,KAAK,CAACA,EAAK,YAAY;AACxC,QAAI89D,IAAO99D,EAAK,sBAAqB;AACrC,IAAAytD,IAAOqQ,EAAK,QAAQA,EAAK,SAAS2B,EAAO,QAAQ3B,EAAK,OAAOA,EAAK,SAAS,IAAI,IAAI;AAAA,EACvF;AACA,SAAO36C,EAAK,QAAQ,WAAWnjB,GAAM2O,GAAQ8+C,CAAI;AACrD;AACA,SAASiT,GAAav9C,GAAMnjB,GAAM2O,GAAQ8wD,GAAQ;AAO9C,MAAIkB,IAAe;AACnB,WAAS7oB,IAAM93C,GAAM4gE,IAAW,IACxB9oB,KAAO30B,EAAK,OADqB;AAGrC,QAAI+vC,IAAO/vC,EAAK,QAAQ,YAAY20B,GAAK,EAAI,GAAGgmB;AAChD,QAAI,CAAC5K;AACD,aAAO;AACX,QAAIA,EAAK,IAAI,YAAY,MAAMA,EAAK,KAAK,WAAWA,EAAK,UAAU,CAACA,EAAK;AAAA,MAEnE4K,IAAO5K,EAAK,IAAI,sBAAqB,GAAI,SAAS4K,EAAK,YACrD5K,EAAK,KAAK,WAAWA,EAAK,UAAU,CAAC,wBAAwB,KAAKA,EAAK,IAAI,QAAQ,MAE/E,CAAC0N,KAAY9C,EAAK,OAAO2B,EAAO,QAAQ3B,EAAK,MAAM2B,EAAO,MAC1DkB,IAAezN,EAAK,aACf,CAAC0N,KAAY9C,EAAK,QAAQ2B,EAAO,QAAQ3B,EAAK,SAAS2B,EAAO,SACnEkB,IAAezN,EAAK,WACxB0N,IAAW,KAEX,CAAC1N,EAAK,cAAcyN,IAAe,KAAK,CAACzN,EAAK,KAAK;AAInD,cAFaA,EAAK,KAAK,UAAUuM,EAAO,OAAO3B,EAAK,MAAMA,EAAK,UAAU,IACnE2B,EAAO,QAAQ3B,EAAK,OAAOA,EAAK,SAAS,KAC/B5K,EAAK,YAAYA,EAAK;AAG9C,IAAApb,IAAMob,EAAK,IAAI;AAAA,EACnB;AACA,SAAOyN,IAAe,KAAKA,IAAex9C,EAAK,QAAQ,WAAWnjB,GAAM2O,GAAQ,EAAE;AACtF;AACA,SAASkyD,GAAiBzkE,GAASqjE,GAAQqB,GAAK;AAC5C,MAAIT,IAAMjkE,EAAQ,WAAW;AAC7B,MAAIikE,KAAOS,EAAI,MAAMA,EAAI;AACrB,aAASC,IAAS,KAAK,IAAI,GAAG,KAAK,IAAIV,IAAM,GAAG,KAAK,MAAMA,KAAOZ,EAAO,MAAMqB,EAAI,QAAQA,EAAI,SAASA,EAAI,IAAI,IAAI,CAAC,CAAC,GAAGrvE,IAAIsvE,OAAU;AACnI,UAAIrkE,IAAQN,EAAQ,WAAW3K,CAAC;AAChC,UAAIiL,EAAM,YAAY,GAAG;AACrB,YAAIwjE,IAAQxjE,EAAM,eAAc;AAChC,iBAAS9G,IAAI,GAAGA,IAAIsqE,EAAM,QAAQtqE,KAAK;AACnC,cAAIkoE,IAAOoC,EAAMtqE,CAAC;AAClB,cAAI2qE,GAAOd,GAAQ3B,CAAI;AACnB,mBAAO+C,GAAiBnkE,GAAO+iE,GAAQ3B,CAAI;AAAA,QACnD;AAAA,MACJ;AACA,WAAKrsE,KAAKA,IAAI,KAAK4uE,MAAQU;AACvB;AAAA,IACR;AAEJ,SAAO3kE;AACX;AAEA,SAAS4kE,GAAY79C,GAAMs8C,GAAQ;AAC/B,MAAI32C,IAAM3F,EAAK,IAAI,eAAenjB,GAAM2O,IAAS,GAC7CsyD,IAAQ7D,GAAet0C,GAAK22C,EAAO,MAAMA,EAAO,GAAG;AACvD,EAAIwB,MACC,EAAE,MAAAjhE,GAAM,QAAA2O,EAAM,IAAKsyD;AACxB,MAAIxmB,KAAOt3B,EAAK,KAAK,mBAAmBA,EAAK,OAAO2F,GAC/C,iBAAiB22C,EAAO,MAAMA,EAAO,GAAG,GACzC18D;AACJ,MAAI,CAAC03C,KAAO,CAACt3B,EAAK,IAAI,SAASs3B,EAAI,YAAY,IAAIA,EAAI,aAAaA,CAAG,GAAG;AACtE,QAAIqmB,IAAM39C,EAAK,IAAI,sBAAqB;AAIxC,QAHI,CAACo9C,GAAOd,GAAQqB,CAAG,MAEvBrmB,IAAMomB,GAAiB19C,EAAK,KAAKs8C,GAAQqB,CAAG,GACxC,CAACrmB;AACD,aAAO;AAAA,EACf;AAEA,MAAI6e;AACA,aAAS1uB,IAAI6P,GAAKz6C,KAAQ4qC,GAAGA,IAAIqxB,GAAWrxB,CAAC;AACzC,MAAIA,EAAE,cACF5qC,IAAO;AAGnB,MADAy6C,IAAM+lB,GAAa/lB,GAAKglB,CAAM,GAC1Bz/D,GAAM;AACN,QAAIo5D,MAASp5D,EAAK,YAAY,MAG1B2O,IAAS,KAAK,IAAIA,GAAQ3O,EAAK,WAAW,MAAM,GAG5C2O,IAAS3O,EAAK,WAAW,SAAQ;AACjC,UAAIpM,IAAOoM,EAAK,WAAW2O,CAAM,GAAGmyD;AACpC,MAAIltE,EAAK,YAAY,UAAUktE,IAAMltE,EAAK,sBAAqB,GAAI,SAAS6rE,EAAO,QAC/EqB,EAAI,SAASrB,EAAO,OACpB9wD;AAAA,IACR;AAEJ,QAAI2kD;AAEJ,IAAIkG,MAAU7qD,KAAU3O,EAAK,YAAY,MAAMszD,IAAOtzD,EAAK,WAAW2O,IAAS,CAAC,GAAG,YAAY,KAC3F2kD,EAAK,mBAAmB,WAAWA,EAAK,wBAAwB,OAAOmM,EAAO,OAC9E9wD,KAGA3O,KAAQmjB,EAAK,OAAOxU,KAAU3O,EAAK,WAAW,SAAS,KAAKA,EAAK,UAAU,YAAY,KACvFy/D,EAAO,MAAMz/D,EAAK,UAAU,sBAAqB,EAAG,SACpD+C,IAAMogB,EAAK,MAAM,IAAI,QAAQ,QAIxBxU,KAAU,KAAK3O,EAAK,YAAY,KAAKA,EAAK,WAAW2O,IAAS,CAAC,EAAE,YAAY,UAClF5L,IAAM29D,GAAav9C,GAAMnjB,GAAM2O,GAAQ8wD,CAAM;AAAA,EACrD;AACA,EAAI18D,KAAO,SACPA,IAAM09D,GAAet9C,GAAMs3B,GAAKglB,CAAM;AAC1C,MAAIvM,IAAO/vC,EAAK,QAAQ,YAAYs3B,GAAK,EAAI;AAC7C,SAAO,EAAE,KAAA13C,GAAK,QAAQmwD,IAAOA,EAAK,aAAaA,EAAK,SAAS,GAAE;AACnE;AACA,SAASgO,GAAQpD,GAAM;AACnB,SAAOA,EAAK,MAAMA,EAAK,UAAUA,EAAK,OAAOA,EAAK;AACtD;AACA,SAASwC,GAAWr/D,GAAQwsD,GAAM;AAC9B,MAAIyS,IAAQj/D,EAAO,eAAc;AACjC,MAAIi/D,EAAM,QAAQ;AACd,QAAI1oB,IAAQ0oB,EAAMzS,IAAO,IAAI,IAAIyS,EAAM,SAAS,CAAC;AACjD,QAAIgB,GAAQ1pB,CAAK;AACb,aAAOA;AAAA,EACf;AACA,SAAO,MAAM,UAAU,KAAK,KAAK0oB,GAAOgB,EAAO,KAAKjgE,EAAO,sBAAqB;AACpF;AACA,MAAMkgE,KAAO;AAGb,SAASC,GAAYj+C,GAAMpgB,GAAK67B,GAAM;AAClC,MAAI,EAAE,MAAA5+B,GAAM,QAAA2O,GAAQ,MAAA0yD,EAAI,IAAKl+C,EAAK,QAAQ,WAAWpgB,GAAK67B,IAAO,IAAI,KAAK,CAAC,GACvE0iC,IAAoB9H,MAAUJ;AAClC,MAAIp5D,EAAK,YAAY;AAGjB,QAAIshE,MAAsBH,GAAK,KAAKnhE,EAAK,SAAS,MAAM4+B,IAAO,IAAI,CAACjwB,IAASA,KAAU3O,EAAK,UAAU,UAAU;AAC5G,UAAI89D,IAAOwC,GAAWnE,GAAUn8D,GAAM2O,GAAQA,CAAM,GAAGiwB,CAAI;AAI3D,UAAIw6B,MAASzqD,KAAU,KAAK,KAAK3O,EAAK,UAAU2O,IAAS,CAAC,CAAC,KAAKA,IAAS3O,EAAK,UAAU,QAAQ;AAC5F,YAAIuhE,IAAajB,GAAWnE,GAAUn8D,GAAM2O,IAAS,GAAGA,IAAS,CAAC,GAAG,EAAE;AACvE,YAAI4yD,EAAW,OAAOzD,EAAK,KAAK;AAC5B,cAAI0D,IAAYlB,GAAWnE,GAAUn8D,GAAM2O,GAAQA,IAAS,CAAC,GAAG,EAAE;AAClE,cAAI6yD,EAAU,OAAO1D,EAAK;AACtB,mBAAO2D,GAASD,GAAWA,EAAU,OAAOD,EAAW,IAAI;AAAA,QACnE;AAAA,MACJ;AACA,aAAOzD;AAAA,IACX,OACK;AACD,UAAIx9C,IAAO3R,GAAQ+1B,IAAK/1B,GAAQ+yD,IAAW9iC,IAAO,IAAI,IAAI;AAC1D,aAAIA,IAAO,KAAK,CAACjwB,KACb+1B,KACAg9B,IAAW,MAEN9iC,KAAQ,KAAKjwB,KAAU3O,EAAK,UAAU,UAC3CsgB,KACAohD,IAAW,KAEN9iC,IAAO,IACZte,MAGAokB,KAEG+8B,GAASnB,GAAWnE,GAAUn8D,GAAMsgB,GAAMokB,CAAE,GAAGg9B,CAAQ,GAAGA,IAAW,CAAC;AAAA,IACjF;AAIJ,MAAI,CAFOv+C,EAAK,MAAM,IAAI,QAAQpgB,KAAOs+D,KAAQ,EAAE,EAEzC,OAAO,eAAe;AAC5B,QAAIA,KAAQ,QAAQ1yD,MAAWiwB,IAAO,KAAKjwB,KAAU+tD,GAAS18D,CAAI,IAAI;AAClE,UAAI1E,IAAS0E,EAAK,WAAW2O,IAAS,CAAC;AACvC,UAAIrT,EAAO,YAAY;AACnB,eAAOqmE,GAASrmE,EAAO,sBAAqB,GAAI,EAAK;AAAA,IAC7D;AACA,QAAI+lE,KAAQ,QAAQ1yD,IAAS+tD,GAAS18D,CAAI,GAAG;AACzC,UAAIzE,IAAQyE,EAAK,WAAW2O,CAAM;AAClC,UAAIpT,EAAM,YAAY;AAClB,eAAOomE,GAASpmE,EAAM,sBAAqB,GAAI,EAAI;AAAA,IAC3D;AACA,WAAOomE,GAAS3hE,EAAK,sBAAqB,GAAI4+B,KAAQ,CAAC;AAAA,EAC3D;AAEA,MAAIyiC,KAAQ,QAAQ1yD,MAAWiwB,IAAO,KAAKjwB,KAAU+tD,GAAS18D,CAAI,IAAI;AAClE,QAAI1E,IAAS0E,EAAK,WAAW2O,IAAS,CAAC,GACnC1N,IAAS3F,EAAO,YAAY,IAAI6gE,GAAU7gE,GAAQohE,GAASphE,CAAM,KAAKgmE,IAAoB,IAAI,EAAE,IAG9FhmE,EAAO,YAAY,MAAMA,EAAO,YAAY,QAAQ,CAACA,EAAO,eAAeA,IAAS;AAC1F,QAAI2F;AACA,aAAOwgE,GAASnB,GAAWr/D,GAAQ,CAAC,GAAG,EAAK;AAAA,EACpD;AACA,MAAIogE,KAAQ,QAAQ1yD,IAAS+tD,GAAS18D,CAAI,GAAG;AACzC,QAAIzE,IAAQyE,EAAK,WAAW2O,CAAM;AAClC,WAAOpT,EAAM,cAAcA,EAAM,WAAW;AACxC,MAAAA,IAAQA,EAAM;AAClB,QAAI0F,IAAU1F,IAAeA,EAAM,YAAY,IAAI4gE,GAAU5gE,GAAO,GAAI+lE,IAAoB,IAAI,CAAC,IAC3F/lE,EAAM,YAAY,IAAIA,IAAQ,OADd;AAEtB,QAAI0F;AACA,aAAOwgE,GAASnB,GAAWr/D,GAAQ,EAAE,GAAG,EAAI;AAAA,EACpD;AAEA,SAAOwgE,GAASnB,GAAWtgE,EAAK,YAAY,IAAIm8D,GAAUn8D,CAAI,IAAIA,GAAM,CAAC4+B,CAAI,GAAGA,KAAQ,CAAC;AAC7F;AACA,SAAS6iC,GAAS3D,GAAMxsE,GAAM;AAC1B,MAAIwsE,EAAK,SAAS;AACd,WAAOA;AACX,MAAItyB,IAAIl6C,IAAOwsE,EAAK,OAAOA,EAAK;AAChC,SAAO,EAAE,KAAKA,EAAK,KAAK,QAAQA,EAAK,QAAQ,MAAMtyB,GAAG,OAAOA,EAAC;AAClE;AACA,SAASm2B,GAAS7D,GAAMrd,GAAK;AACzB,MAAIqd,EAAK,UAAU;AACf,WAAOA;AACX,MAAIryB,IAAIgV,IAAMqd,EAAK,MAAMA,EAAK;AAC9B,SAAO,EAAE,KAAKryB,GAAG,QAAQA,GAAG,MAAMqyB,EAAK,MAAM,OAAOA,EAAK,MAAK;AAClE;AACA,SAAS8D,GAAiBz+C,GAAM1kB,GAAO+3C,GAAG;AACtC,MAAIqrB,IAAY1+C,EAAK,OAAO84B,IAAS94B,EAAK,KAAK;AAC/C,EAAI0+C,KAAapjE,KACb0kB,EAAK,YAAY1kB,CAAK,GACtBw9C,KAAU94B,EAAK,OACfA,EAAK,MAAK;AACd,MAAI;AACA,WAAOqzB,EAAC;AAAA,EACZ,UACJ;AACQ,IAAIqrB,KAAapjE,KACb0kB,EAAK,YAAY0+C,CAAS,GAC1B5lB,KAAU94B,EAAK,OAAO84B,KACtBA,EAAO,MAAK;AAAA,EACpB;AACJ;AAGA,SAAS6lB,GAAuB3+C,GAAM1kB,GAAO2yD,GAAK;AAC9C,MAAIc,IAAMzzD,EAAM,WACZ8tD,IAAO6E,KAAO,OAAOc,EAAI,QAAQA,EAAI;AACzC,SAAO0P,GAAiBz+C,GAAM1kB,GAAO,MAAM;AACvC,QAAI,EAAE,MAAM8gD,MAAQp8B,EAAK,QAAQ,WAAWopC,EAAK,KAAK6E,KAAO,OAAO,KAAK,CAAC;AAC1E,eAAS;AACL,UAAI2Q,IAAU5+C,EAAK,QAAQ,YAAYo8B,GAAK,EAAI;AAChD,UAAI,CAACwiB;AACD;AACJ,UAAIA,EAAQ,KAAK,SAAS;AACtB,QAAAxiB,IAAMwiB,EAAQ,cAAcA,EAAQ;AACpC;AAAA,MACJ;AACA,MAAAxiB,IAAMwiB,EAAQ,IAAI;AAAA,IACtB;AACA,QAAItC,IAAS2B,GAAYj+C,GAAMopC,EAAK,KAAK,CAAC;AAC1C,aAAS7vD,IAAQ6iD,EAAI,YAAY7iD,GAAOA,IAAQA,EAAM,aAAa;AAC/D,UAAIslE;AACJ,UAAItlE,EAAM,YAAY;AAClB,QAAAslE,IAAQtlE,EAAM,eAAc;AAAA,eACvBA,EAAM,YAAY;AACvB,QAAAslE,IAAQ7F,GAAUz/D,GAAO,GAAGA,EAAM,UAAU,MAAM,EAAE,eAAc;AAAA;AAElE;AACJ,eAASjL,IAAI,GAAGA,IAAIuwE,EAAM,QAAQvwE,KAAK;AACnC,YAAIqvE,IAAMkB,EAAMvwE,CAAC;AACjB,YAAIqvE,EAAI,SAASA,EAAI,MAAM,MACtB1P,KAAO,OAAOqO,EAAO,MAAMqB,EAAI,OAAOA,EAAI,SAASrB,EAAO,OAAO,IAC5DqB,EAAI,SAASrB,EAAO,UAAUA,EAAO,SAASqB,EAAI,OAAO;AAC/D,iBAAO;AAAA,MACf;AAAA,IACJ;AACA,WAAO;AAAA,EACX,CAAC;AACL;AACA,MAAMmB,KAAW;AACjB,SAASC,GAAyB/+C,GAAM1kB,GAAO2yD,GAAK;AAChD,MAAI,EAAE,OAAAL,MAAUtyD,EAAM;AACtB,MAAI,CAACsyD,EAAM,OAAO;AACd,WAAO;AACX,MAAIpiD,IAASoiD,EAAM,cAAcsF,IAAU,CAAC1nD,GAAQynD,IAAQznD,KAAUoiD,EAAM,OAAO,QAAQ,MACvFmB,IAAM/uC,EAAK,aAAY;AAC3B,SAAK+uC,IAID,CAAC+P,GAAS,KAAKlR,EAAM,OAAO,WAAW,KAAK,CAACmB,EAAI,SAC1Cd,KAAO,UAAUA,KAAO,aAAaiF,IAAUD,IACnDwL,GAAiBz+C,GAAM1kB,GAAO,MAAM;AAMvC,QAAI,EAAE,WAAW0jE,GAAS,aAAaC,GAAQ,YAAAC,GAAY,cAAAC,EAAY,IAAKn/C,EAAK,kBAAiB,GAC9Fo/C,IAAerQ,EAAI;AAEvB,IAAAA,EAAI,OAAO,QAAQd,GAAK,WAAW;AACnC,QAAIoR,IAAYzR,EAAM,QAAQ5tC,EAAK,QAAQ,YAAY4tC,EAAM,QAAQ,IAAI5tC,EAAK,KAC1E,EAAE,WAAWspC,GAAS,aAAagW,EAAM,IAAKt/C,EAAK,kBAAiB,GACpE5uB,IAASk4D,KAAW,CAAC+V,EAAU,SAAS/V,EAAQ,YAAY,IAAIA,IAAUA,EAAQ,UAAU,KAC3F0V,KAAW1V,KAAW2V,KAAUK;AAErC,QAAI;AACA,MAAAvQ,EAAI,SAASmQ,GAAYC,CAAY,GACjCH,MAAYA,KAAWE,KAAcD,KAAUE,MAAiBpQ,EAAI,UACpEA,EAAI,OAAOiQ,GAASC,CAAM;AAAA,IAClC,QACU;AAAA,IAAE;AACZ,WAAIG,KAAgB,SAChBrQ,EAAI,iBAAiBqQ,IAClBhuE;AAAA,EACX,CAAC,IA7BUw8D,EAAM,OAAOA,EAAM,MAAK,KAAMA,EAAM,OAAOA,EAAM,IAAG;AA8BnE;AACA,IAAI2R,KAAc,MACdC,KAAY,MACZC,KAAe;AACnB,SAASC,GAAe1/C,GAAM1kB,GAAO2yD,GAAK;AACtC,SAAIsR,MAAejkE,KAASkkE,MAAavR,IAC9BwR,MACXF,KAAcjkE,GACdkkE,KAAYvR,GACLwR,KAAexR,KAAO,QAAQA,KAAO,SACtC0Q,GAAuB3+C,GAAM1kB,GAAO2yD,CAAG,IACvC8Q,GAAyB/+C,GAAM1kB,GAAO2yD,CAAG;AACnD;AAcA,MAAM0R,KAAY,GAAGC,KAAc,GAAGC,KAAgB,GAAGC,KAAa;AAGtE,MAAMC,GAAS;AAAA,EACX,YAAY5/D,GAAQolB,GAAU62B,GAG9BgC,GAAY;AACR,SAAK,SAASj+C,GACd,KAAK,WAAWolB,GAChB,KAAK,MAAM62B,GACX,KAAK,aAAagC,GAClB,KAAK,QAAQuhB,IAGbvjB,EAAI,aAAa;AAAA,EACrB;AAAA;AAAA;AAAA,EAGA,cAAc4jB,GAAQ;AAAE,WAAO;AAAA,EAAO;AAAA,EACtC,YAAY78B,GAAM;AAAE,WAAO;AAAA,EAAO;AAAA,EAClC,YAAYtmC,GAAMojE,GAAWC,GAAW;AAAE,WAAO;AAAA,EAAO;AAAA,EACxD,YAAYC,GAAU;AAAE,WAAO;AAAA,EAAO;AAAA;AAAA;AAAA;AAAA,EAItC,YAAY;AAAE,WAAO;AAAA,EAAM;AAAA;AAAA;AAAA,EAG3B,UAAUnwD,GAAO;AAAE,WAAO;AAAA,EAAO;AAAA;AAAA,EAEjC,IAAI,OAAO;AACP,QAAIrH,IAAO;AACX,aAASra,IAAI,GAAGA,IAAI,KAAK,SAAS,QAAQA;AACtC,MAAAqa,KAAQ,KAAK,SAASra,CAAC,EAAE;AAC7B,WAAOqa;AAAA,EACX;AAAA;AAAA;AAAA,EAGA,IAAI,SAAS;AAAE,WAAO;AAAA,EAAG;AAAA,EACzB,UAAU;AACN,SAAK,SAAS,QACV,KAAK,IAAI,cAAc,SACvB,KAAK,IAAI,aAAa;AAC1B,aAASra,IAAI,GAAGA,IAAI,KAAK,SAAS,QAAQA;AACtC,WAAK,SAASA,CAAC,EAAE,QAAO;AAAA,EAChC;AAAA,EACA,eAAeiL,GAAO;AAClB,aAASjL,IAAI,GAAGsR,IAAM,KAAK,cAAatR,KAAK;AACzC,UAAIqmD,IAAM,KAAK,SAASrmD,CAAC;AACzB,UAAIqmD,KAAOp7C;AACP,eAAOqG;AACX,MAAAA,KAAO+0C,EAAI;AAAA,IACf;AAAA,EACJ;AAAA,EACA,IAAI,YAAY;AACZ,WAAO,KAAK,OAAO,eAAe,IAAI;AAAA,EAC1C;AAAA,EACA,IAAI,aAAa;AACb,WAAO,KAAK,SAAS,KAAK,OAAO,eAAe,IAAI,IAAI,KAAK,SAAS;AAAA,EAC1E;AAAA,EACA,IAAI,WAAW;AACX,WAAO,KAAK,YAAY,KAAK;AAAA,EACjC;AAAA,EACA,IAAI,WAAW;AACX,WAAO,KAAK,aAAa,KAAK,OAAO,IAAI,KAAK;AAAA,EAClD;AAAA,EACA,gBAAgByH,GAAK5wC,GAAQ8+C,GAAM;AAG/B,QAAI,KAAK,cAAc,KAAK,WAAW,SAASlO,EAAI,YAAY,IAAIA,IAAMA,EAAI,UAAU;AACpF,UAAIkO,IAAO,GAAG;AACV,YAAI8V,GAAWrQ;AACf,YAAI3T,KAAO,KAAK;AACZ,UAAAgkB,IAAYhkB,EAAI,WAAW5wC,IAAS,CAAC;AAAA,aAEpC;AACD,iBAAO4wC,EAAI,cAAc,KAAK;AAC1B,YAAAA,IAAMA,EAAI;AACd,UAAAgkB,IAAYhkB,EAAI;AAAA,QACpB;AACA,eAAOgkB,KAAa,GAAGrQ,IAAOqQ,EAAU,eAAerQ,EAAK,UAAU;AAClE,UAAAqQ,IAAYA,EAAU;AAC1B,eAAOA,IAAY,KAAK,eAAerQ,CAAI,IAAIA,EAAK,OAAO,KAAK;AAAA,MACpE,OACK;AACD,YAAIsQ,GAAUtQ;AACd,YAAI3T,KAAO,KAAK;AACZ,UAAAikB,IAAWjkB,EAAI,WAAW5wC,CAAM;AAAA,aAE/B;AACD,iBAAO4wC,EAAI,cAAc,KAAK;AAC1B,YAAAA,IAAMA,EAAI;AACd,UAAAikB,IAAWjkB,EAAI;AAAA,QACnB;AACA,eAAOikB,KAAY,GAAGtQ,IAAOsQ,EAAS,eAAetQ,EAAK,UAAU;AAChE,UAAAsQ,IAAWA,EAAS;AACxB,eAAOA,IAAW,KAAK,eAAetQ,CAAI,IAAI,KAAK;AAAA,MACvD;AAKJ,QAAIkD;AACJ,QAAI7W,KAAO,KAAK,OAAO,KAAK;AACxB,MAAA6W,IAAQznD,IAASqtD,GAAS,KAAK,UAAU;AAAA,aAEpC,KAAK,cAAc,KAAK,cAAc,KAAK,OAAO,KAAK,IAAI,SAAS,KAAK,UAAU;AACxF,MAAA5F,IAAQ7W,EAAI,wBAAwB,KAAK,UAAU,IAAI;AAAA,aAElD,KAAK,IAAI,YAAY;AAC1B,UAAI5wC,KAAU;AACV,iBAASgV,IAAS47B,KAAM57B,IAASA,EAAO,YAAY;AAChD,cAAIA,KAAU,KAAK,KAAK;AACpB,YAAAyyC,IAAQ;AACR;AAAA,UACJ;AACA,cAAIzyC,EAAO;AACP;AAAA,QACR;AACJ,UAAIyyC,KAAS,QAAQznD,KAAU4wC,EAAI,WAAW;AAC1C,iBAAS57B,IAAS47B,KAAM57B,IAASA,EAAO,YAAY;AAChD,cAAIA,KAAU,KAAK,KAAK;AACpB,YAAAyyC,IAAQ;AACR;AAAA,UACJ;AACA,cAAIzyC,EAAO;AACP;AAAA,QACR;AAAA,IACR;AACA,WAAQyyC,KAAgB3I,IAAO,IAAa,KAAK,WAAW,KAAK;AAAA,EACrE;AAAA,EACA,YAAYlO,GAAKkkB,IAAY,IAAO;AAChC,aAASjsB,IAAQ,IAAMM,IAAMyH,GAAKzH,GAAKA,IAAMA,EAAI,YAAY;AACzD,UAAIob,IAAO,KAAK,QAAQpb,CAAG,GAAG4rB;AAC9B,UAAIxQ,MAAS,CAACuQ,KAAavQ,EAAK;AAE5B,YAAI1b,MAAUksB,IAAUxQ,EAAK,YACzB,EAAEwQ,EAAQ,YAAY,IAAIA,EAAQ,SAASnkB,EAAI,YAAY,IAAIA,IAAMA,EAAI,UAAU,IAAImkB,KAAWnkB;AAClG,UAAA/H,IAAQ;AAAA;AAER,iBAAO0b;AAAA,IAEnB;AAAA,EACJ;AAAA,EACA,QAAQ3T,GAAK;AACT,QAAI2T,IAAO3T,EAAI;AACf,aAASzH,IAAMob,GAAMpb,GAAKA,IAAMA,EAAI;AAChC,UAAIA,KAAO;AACP,eAAOob;AAAA,EACnB;AAAA,EACA,WAAW3T,GAAK5wC,GAAQ8+C,GAAM;AAC1B,aAASvR,IAAOqD,GAAKrD,GAAMA,IAAOA,EAAK,YAAY;AAC/C,UAAIgX,IAAO,KAAK,QAAQhX,CAAI;AAC5B,UAAIgX;AACA,eAAOA,EAAK,gBAAgB3T,GAAK5wC,GAAQ8+C,CAAI;AAAA,IACrD;AACA,WAAO;AAAA,EACX;AAAA;AAAA;AAAA,EAGA,OAAO1qD,GAAK;AACR,aAAStR,IAAI,GAAGkd,IAAS,GAAGld,IAAI,KAAK,SAAS,QAAQA,KAAK;AACvD,UAAIiL,IAAQ,KAAK,SAASjL,CAAC,GAAGqS,IAAM6K,IAASjS,EAAM;AACnD,UAAIiS,KAAU5L,KAAOe,KAAO6K,GAAQ;AAChC,eAAO,CAACjS,EAAM,UAAUA,EAAM,SAAS;AACnC,mBAASjL,IAAI,GAAGA,IAAIiL,EAAM,SAAS,QAAQjL,KAAK;AAC5C,gBAAI2I,IAAQsC,EAAM,SAASjL,CAAC;AAC5B,gBAAI2I,EAAM,MAAM;AACZ,cAAAsC,IAAQtC;AACR;AAAA,YACJ;AAAA,UACJ;AAEJ,eAAOsC;AAAA,MACX;AACA,UAAIqG,IAAMe;AACN,eAAOpH,EAAM,OAAOqG,IAAM4L,IAASjS,EAAM,MAAM;AACnD,MAAAiS,IAAS7K;AAAA,IACb;AAAA,EACJ;AAAA,EACA,WAAWf,GAAK67B,GAAM;AAClB,QAAI,CAAC,KAAK;AACN,aAAO,EAAE,MAAM,KAAK,KAAK,QAAQ,GAAG,MAAM77B,IAAM,EAAC;AAErD,QAAItR,IAAI,GAAGkd,IAAS;AACpB,aAASkpC,IAAS,GAAGpmD,IAAI,KAAK,SAAS,QAAQA,KAAK;AAChD,UAAIiL,IAAQ,KAAK,SAASjL,CAAC,GAAGqS,IAAM+zC,IAASn7C,EAAM;AACnD,UAAIoH,IAAMf,KAAOrG,aAAiBinE,IAAsB;AACpD,QAAAh1D,IAAS5L,IAAM80C;AACf;AAAA,MACJ;AACA,MAAAA,IAAS/zC;AAAA,IACb;AAEA,QAAI6K;AACA,aAAO,KAAK,SAASld,CAAC,EAAE,WAAWkd,IAAS,KAAK,SAASld,CAAC,EAAE,QAAQmtC,CAAI;AAE7E,aAAS00B,GAAM7hE,KAAK,EAAE6hE,IAAO,KAAK,SAAS7hE,IAAI,CAAC,GAAG,QAAQ6hE,aAAgBsQ,MAAkBtQ,EAAK,QAAQ,GAAG7hE;AAAK;AAElH,QAAImtC,KAAQ,GAAG;AACX,UAAI00B,GAAM9gD,IAAQ;AAClB,aACI8gD,IAAO7hE,IAAI,KAAK,SAASA,IAAI,CAAC,IAAI,MAC9B,GAAC6hE,KAAQA,EAAK,IAAI,cAAc,KAAK,aAFrC7hE,KAAK+gB,IAAQ;AAEjB;AAGJ,aAAI8gD,KAAQ10B,KAAQpsB,KAAS,CAAC8gD,EAAK,UAAU,CAACA,EAAK,UACxCA,EAAK,WAAWA,EAAK,MAAM10B,CAAI,IACnC,EAAE,MAAM,KAAK,YAAY,QAAQ00B,IAAO0I,GAAS1I,EAAK,GAAG,IAAI,IAAI,EAAC;AAAA,IAC7E,OACK;AACD,UAAI1/D,GAAM4e,IAAQ;AAClB,aACI5e,IAAOnC,IAAI,KAAK,SAAS,SAAS,KAAK,SAASA,CAAC,IAAI,MACjD,GAACmC,KAAQA,EAAK,IAAI,cAAc,KAAK,aAFrCnC,KAAK+gB,IAAQ;AAEjB;AAGJ,aAAI5e,KAAQ4e,KAAS,CAAC5e,EAAK,UAAU,CAACA,EAAK,UAChCA,EAAK,WAAW,GAAGgrC,CAAI,IAC3B,EAAE,MAAM,KAAK,YAAY,QAAQhrC,IAAOooE,GAASpoE,EAAK,GAAG,IAAI,KAAK,WAAW,WAAW,OAAM;AAAA,IACzG;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,WAAW0sB,GAAMokB,GAAIn6B,IAAO,GAAG;AAC3B,QAAI,KAAK,SAAS,UAAU;AACxB,aAAO,EAAE,MAAM,KAAK,YAAY,MAAA+V,GAAM,IAAAokB,GAAI,YAAY,GAAG,UAAU,KAAK,WAAW,WAAW,OAAM;AACxG,QAAIm/B,IAAa,IAAIC,IAAW;AAChC,aAASn1D,IAASpE,GAAM9Y,IAAI,KAAIA,KAAK;AACjC,UAAIiL,IAAQ,KAAK,SAASjL,CAAC,GAAGqS,IAAM6K,IAASjS,EAAM;AACnD,UAAImnE,KAAc,MAAMvjD,KAAQxc,GAAK;AACjC,YAAIigE,IAAYp1D,IAASjS,EAAM;AAE/B,YAAI4jB,KAAQyjD,KAAar/B,KAAM5gC,IAAMpH,EAAM,UAAUA,EAAM,QACvDA,EAAM,cAAc,KAAK,WAAW,SAASA,EAAM,UAAU;AAC7D,iBAAOA,EAAM,WAAW4jB,GAAMokB,GAAIq/B,CAAS;AAC/C,QAAAzjD,IAAO3R;AACP,iBAAS/Y,IAAInE,GAAGmE,IAAI,GAAGA,KAAK;AACxB,cAAI09D,IAAO,KAAK,SAAS19D,IAAI,CAAC;AAC9B,cAAI09D,EAAK,QAAQA,EAAK,IAAI,cAAc,KAAK,cAAc,CAACA,EAAK,aAAa,CAAC,GAAG;AAC9E,YAAAuQ,IAAa7H,GAAS1I,EAAK,GAAG,IAAI;AAClC;AAAA,UACJ;AACA,UAAAhzC,KAAQgzC,EAAK;AAAA,QACjB;AACA,QAAIuQ,KAAc,OACdA,IAAa;AAAA,MACrB;AACA,UAAIA,IAAa,OAAO//D,IAAM4gC,KAAMjzC,KAAK,KAAK,SAAS,SAAS,IAAI;AAChE,QAAAizC,IAAK5gC;AACL,iBAASlO,IAAInE,IAAI,GAAGmE,IAAI,KAAK,SAAS,QAAQA,KAAK;AAC/C,cAAIhC,IAAO,KAAK,SAASgC,CAAC;AAC1B,cAAIhC,EAAK,QAAQA,EAAK,IAAI,cAAc,KAAK,cAAc,CAACA,EAAK,aAAa,EAAE,GAAG;AAC/E,YAAAkwE,IAAW9H,GAASpoE,EAAK,GAAG;AAC5B;AAAA,UACJ;AACA,UAAA8wC,KAAM9wC,EAAK;AAAA,QACf;AACA,QAAIkwE,KAAY,OACZA,IAAW,KAAK,WAAW,WAAW;AAC1C;AAAA,MACJ;AACA,MAAAn1D,IAAS7K;AAAA,IACb;AACA,WAAO,EAAE,MAAM,KAAK,YAAY,MAAAwc,GAAM,IAAAokB,GAAI,YAAAm/B,GAAY,UAAAC,EAAQ;AAAA,EAClE;AAAA,EACA,aAAallC,GAAM;AACf,QAAI,KAAK,UAAU,CAAC,KAAK,cAAc,CAAC,KAAK,SAAS;AAClD,aAAO;AACX,QAAIliC,IAAQ,KAAK,SAASkiC,IAAO,IAAI,IAAI,KAAK,SAAS,SAAS,CAAC;AACjE,WAAOliC,EAAM,QAAQ,KAAKA,EAAM,aAAakiC,CAAI;AAAA,EACrD;AAAA,EACA,YAAY77B,GAAK;AACb,QAAI,EAAE,MAAA/C,GAAM,QAAA2O,EAAM,IAAK,KAAK,WAAW5L,GAAK,CAAC;AAC7C,QAAI/C,EAAK,YAAY,KAAK2O,KAAU3O,EAAK,WAAW;AAChD,YAAM,IAAI,WAAW,uBAAuB+C,CAAG;AACnD,WAAO/C,EAAK,WAAW2O,CAAM;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,aAAakjD,GAAQzuC,GAAMD,GAAM6gD,IAAQ,IAAO;AAE5C,QAAI1jD,IAAO,KAAK,IAAIuxC,GAAQzuC,CAAI,GAAGshB,IAAK,KAAK,IAAImtB,GAAQzuC,CAAI;AAC7D,aAAS3xB,IAAI,GAAGkd,IAAS,GAAGld,IAAI,KAAK,SAAS,QAAQA,KAAK;AACvD,UAAIiL,IAAQ,KAAK,SAASjL,CAAC,GAAGqS,IAAM6K,IAASjS,EAAM;AACnD,UAAI4jB,IAAO3R,KAAU+1B,IAAK5gC;AACtB,eAAOpH,EAAM,aAAam1D,IAASljD,IAASjS,EAAM,QAAQ0mB,IAAOzU,IAASjS,EAAM,QAAQymB,GAAM6gD,CAAK;AACvG,MAAAr1D,IAAS7K;AAAA,IACb;AACA,QAAImgE,IAAY,KAAK,WAAWpS,GAAQA,IAAS,KAAK,CAAC,GACnDqS,IAAU9gD,KAAQyuC,IAASoS,IAAY,KAAK,WAAW7gD,GAAMA,IAAO,KAAK,CAAC,GAC1E45C,IAAS75C,EAAK,KAAK,aAAY,GAC/BghD,IAAWhhD,EAAK,kBAAiB,GACjCihD,IAAW;AAKf,SAAKhL,MAASE,OAAWzH,KAAUzuC,GAAM;AACrC,UAAI,EAAE,MAAApjB,GAAM,QAAA2O,EAAM,IAAKs1D;AACvB,UAAIjkE,EAAK,YAAY;AAGjB,YAFAokE,IAAW,CAAC,EAAEz1D,KAAU3O,EAAK,UAAU2O,IAAS,CAAC,KAAK;AAAA,IAElDy1D,KAAYz1D,KAAU3O,EAAK,UAAU;AACrC,mBAASk8C,IAAOl8C,GAAMzE,GAAO2gD,GAAMA,IAAOA,EAAK,YAAY;AACvD,gBAAI3gD,IAAQ2gD,EAAK,aAAa;AAC1B,cAAI3gD,EAAM,YAAY,SAClB0oE,IAAYC,IAAU,EAAE,MAAM3oE,EAAM,YAAY,QAAQygE,GAASzgE,CAAK,IAAI,EAAC;AAC/E;AAAA,YACJ;AACA,gBAAI23D,IAAOhX,EAAK;AAChB,gBAAIgX,KAAQA,EAAK,QAAQA,EAAK,KAAK;AAC/B;AAAA,UACR;AAAA,aAGH;AACD,YAAII,IAAOtzD,EAAK,WAAW2O,IAAS,CAAC;AACrC,QAAAy1D,IAAW9Q,MAASA,EAAK,YAAY,QAAQA,EAAK,mBAAmB;AAAA,MACzE;AAAA,IACJ;AAGA,QAAI8F,MAAS+K,EAAS,aAAaA,EAAS,aAAaD,EAAQ,QAAQC,EAAS,UAAU,YAAY,GAAG;AACvG,UAAI5oE,IAAQ4oE,EAAS,UAAU,WAAWA,EAAS,WAAW;AAC9D,MAAI5oE,KAASA,EAAM,mBAAmB,YAClCyoE,IAAQ;AAAA,IAChB;AACA,QAAI,EAAEA,KAASI,KAAY9K,OACvB+C,GAAqB4H,EAAU,MAAMA,EAAU,QAAQE,EAAS,YAAYA,EAAS,YAAY,KACjG9H,GAAqB6H,EAAQ,MAAMA,EAAQ,QAAQC,EAAS,WAAWA,EAAS,WAAW;AAC3F;AAIJ,QAAIE,IAAiB;AACrB,SAAKrH,EAAO,UAAUnL,KAAUzuC,MAAS,EAAEghD,KAAYhL,KAAQ;AAC3D,MAAA4D,EAAO,SAASiH,EAAU,MAAMA,EAAU,MAAM;AAChD,UAAI;AACA,QAAIpS,KAAUzuC,KACV45C,EAAO,OAAOkH,EAAQ,MAAMA,EAAQ,MAAM,GAC9CG,IAAiB;AAAA,MACrB,QACU;AAAA,MAOV;AAAA,IACJ;AACA,QAAI,CAACA,GAAgB;AACjB,UAAIxS,IAASzuC,GAAM;AACf,YAAI82B,IAAM+pB;AACV,QAAAA,IAAYC,GACZA,IAAUhqB;AAAA,MACd;AACA,UAAIlc,IAAQ,SAAS,YAAW;AAChC,MAAAA,EAAM,OAAOkmC,EAAQ,MAAMA,EAAQ,MAAM,GACzClmC,EAAM,SAASimC,EAAU,MAAMA,EAAU,MAAM,GAC/CjH,EAAO,gBAAe,GACtBA,EAAO,SAASh/B,CAAK;AAAA,IACzB;AAAA,EACJ;AAAA,EACA,eAAesmC,GAAU;AACrB,WAAO,CAAC,KAAK,cAAcA,EAAS,QAAQ;AAAA,EAChD;AAAA,EACA,IAAI,cAAc;AACd,WAAO,KAAK,cAAc,KAAK,cAAc,KAAK,OAAO,CAAC,KAAK,IAAI,SAAS,KAAK,UAAU;AAAA,EAC/F;AAAA;AAAA;AAAA,EAGA,UAAUhkD,GAAMokB,GAAI;AAChB,aAAS/1B,IAAS,GAAG,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AACvD,UAAIjS,IAAQ,KAAK,SAAS,CAAC,GAAGoH,IAAM6K,IAASjS,EAAM;AACnD,UAAIiS,KAAU7K,IAAMwc,KAAQxc,KAAO4gC,KAAM/1B,IAAS2R,IAAOxc,KAAO4gC,IAAK/1B,GAAQ;AACzE,YAAI41D,IAAc51D,IAASjS,EAAM,QAAQ8nE,IAAY1gE,IAAMpH,EAAM;AACjE,YAAI4jB,KAAQikD,KAAe7/B,KAAM8/B,GAAW;AACxC,eAAK,QAAQlkD,KAAQ3R,KAAU+1B,KAAM5gC,IAAMk/D,KAAgBD,IACvDziD,KAAQikD,KAAe7/B,KAAM8/B,MAC5B9nE,EAAM,eAAeA,EAAM,IAAI,cAAc,KAAK,cACnDA,EAAM,QAAQumE,KAEdvmE,EAAM,UAAU4jB,IAAOikD,GAAa7/B,IAAK6/B,CAAW;AACxD;AAAA,QACJ;AAEI,UAAA7nE,EAAM,QAAQA,EAAM,OAAOA,EAAM,cAAcA,EAAM,IAAI,cAAc,KAAK,cAAc,CAACA,EAAM,SAAS,SACpGsmE,KAAgBC;AAAA,MAE9B;AACA,MAAAt0D,IAAS7K;AAAA,IACb;AACA,SAAK,QAAQk/D;AAAA,EACjB;AAAA,EACA,mBAAmB;AACf,QAAIhnE,IAAQ;AACZ,aAASgE,IAAO,KAAK,QAAQA,GAAMA,IAAOA,EAAK,QAAQhE,KAAS;AAC5D,UAAIyoE,IAAQzoE,KAAS,IAAIgnE,KAAgBD;AACzC,MAAI/iE,EAAK,QAAQykE,MACbzkE,EAAK,QAAQykE;AAAA,IACrB;AAAA,EACJ;AAAA,EACA,IAAI,UAAU;AAAE,WAAO;AAAA,EAAO;AAAA,EAC9B,IAAI,kBAAkB;AAAE,WAAO;AAAA,EAAO;AAAA,EACtC,IAAI,qBAAqB;AAAE,WAAO;AAAA,EAAO;AAAA,EACzC,OAAO7vE,GAAM;AAAE,WAAO;AAAA,EAAO;AACjC;AAGA,MAAMgvE,WAAuBV,GAAS;AAAA,EAClC,YAAY5/D,GAAQ6/D,GAAQhgD,GAAMpgB,GAAK;AACnC,QAAI4D,GAAM44C,IAAM4jB,EAAO,KAAK;AAQ5B,QAPI,OAAO5jB,KAAO,eACdA,IAAMA,EAAIp8B,GAAM,MAAM;AAClB,UAAI,CAACxc;AACD,eAAO5D;AACX,UAAI4D,EAAK;AACL,eAAOA,EAAK,OAAO,eAAeA,CAAI;AAAA,IAC9C,CAAC,IACD,CAACw8D,EAAO,KAAK,KAAK,KAAK;AACvB,UAAI5jB,EAAI,YAAY,GAAG;AACnB,YAAIn9C,IAAO,SAAS,cAAc,MAAM;AACxC,QAAAA,EAAK,YAAYm9C,CAAG,GACpBA,IAAMn9C;AAAA,MACV;AACA,MAAAm9C,EAAI,kBAAkB,SACtBA,EAAI,UAAU,IAAI,oBAAoB;AAAA,IAC1C;AACA,UAAMj8C,GAAQ,IAAIi8C,GAAK,IAAI,GAC3B,KAAK,SAAS4jB,GACd,KAAK,SAASA,GACdx8D,IAAO;AAAA,EACX;AAAA,EACA,cAAcw8D,GAAQ;AAClB,WAAO,KAAK,SAASL,MAAaK,EAAO,KAAK,GAAG,KAAK,OAAO,IAAI;AAAA,EACrE;AAAA,EACA,YAAY;AAAE,WAAO,EAAE,QAAQ,GAAI;AAAA,EAAI;AAAA,EACvC,UAAUhwD,GAAO;AACb,QAAIP,IAAO,KAAK,OAAO,KAAK;AAC5B,WAAOA,IAAOA,EAAKO,CAAK,IAAI;AAAA,EAChC;AAAA,EACA,eAAemxD,GAAU;AACrB,WAAOA,EAAS,QAAQ,eAAe,KAAK,OAAO,KAAK;AAAA,EAC5D;AAAA,EACA,UAAU;AACN,SAAK,OAAO,KAAK,QAAQ,KAAK,GAAG,GACjC,MAAM,QAAO;AAAA,EACjB;AAAA,EACA,IAAI,UAAU;AAAE,WAAO;AAAA,EAAM;AAAA,EAC7B,IAAI,qBAAqB;AAAE,WAAO,CAAC,CAAC,KAAK,OAAO,KAAK,KAAK;AAAA,EAAa;AAAA,EACvE,IAAI,OAAO;AAAE,WAAO,KAAK,OAAO,KAAK;AAAA,EAAM;AAC/C;AACA,MAAMI,WAA4BxB,GAAS;AAAA,EACvC,YAAY5/D,GAAQi8C,GAAKolB,GAAS/vE,GAAM;AACpC,UAAM0O,GAAQ,IAAIi8C,GAAK,IAAI,GAC3B,KAAK,UAAUolB,GACf,KAAK,OAAO/vE;AAAA,EAChB;AAAA,EACA,IAAI,OAAO;AAAE,WAAO,KAAK,KAAK;AAAA,EAAQ;AAAA,EACtC,gBAAgB2qD,GAAK5wC,GAAQ;AACzB,WAAI4wC,KAAO,KAAK,UACL,KAAK,cAAc5wC,IAAS,KAAK,OAAO,KAC5C,KAAK,aAAaA;AAAA,EAC7B;AAAA,EACA,WAAW5L,GAAK;AACZ,WAAO,EAAE,MAAM,KAAK,SAAS,QAAQA,EAAG;AAAA,EAC5C;AAAA,EACA,eAAe6hE,GAAK;AAChB,WAAOA,EAAI,SAAS,mBAAmBA,EAAI,OAAO,aAAaA,EAAI;AAAA,EACvE;AACJ;AAMA,MAAMC,WAAqB3B,GAAS;AAAA,EAChC,YAAY5/D,GAAQgjC,GAAMiZ,GAAKgC,GAAYnD,GAAM;AAC7C,UAAM96C,GAAQ,IAAIi8C,GAAKgC,CAAU,GACjC,KAAK,OAAOjb,GACZ,KAAK,OAAO8X;AAAA,EAChB;AAAA,EACA,OAAO,OAAO96C,GAAQgjC,GAAMqc,GAAQx/B,GAAM;AACtC,QAAI2hD,IAAS3hD,EAAK,UAAUmjB,EAAK,KAAK,IAAI,GACtC8X,IAAO0mB,KAAUA,EAAOx+B,GAAMnjB,GAAMw/B,CAAM;AAC9C,YAAI,CAACvE,KAAQ,CAACA,EAAK,SACfA,IAAOkE,GAAc,WAAW,UAAUhc,EAAK,KAAK,KAAK,MAAMA,GAAMqc,CAAM,GAAG,MAAMrc,EAAK,KAAK,IAC3F,IAAIu+B,GAAavhE,GAAQgjC,GAAM8X,EAAK,KAAKA,EAAK,cAAcA,EAAK,KAAKA,CAAI;AAAA,EACrF;AAAA,EACA,YAAY;AACR,WAAK,KAAK,QAAQ6kB,MAAe,KAAK,KAAK,KAAK,KAAK,gBAC1C,OACJ,EAAE,MAAM,KAAK,KAAK,KAAK,MAAM,OAAO,KAAK,KAAK,OAAO,gBAAgB,KAAK,WAAU;AAAA,EAC/F;AAAA,EACA,YAAY38B,GAAM;AAAE,WAAO,KAAK,SAAS28B,MAAc,KAAK,KAAK,GAAG38B,CAAI;AAAA,EAAG;AAAA,EAC3E,UAAUhmB,GAAMokB,GAAI;AAGhB,QAFA,MAAM,UAAUpkB,GAAMokB,CAAE,GAEpB,KAAK,SAASo+B,IAAW;AACzB,UAAIx/D,IAAS,KAAK;AAClB,aAAO,CAACA,EAAO;AACX,QAAAA,IAASA,EAAO;AACpB,MAAIA,EAAO,QAAQ,KAAK,UACpBA,EAAO,QAAQ,KAAK,QACxB,KAAK,QAAQw/D;AAAA,IACjB;AAAA,EACJ;AAAA,EACA,MAAMxiD,GAAMokB,GAAIvhB,GAAM;AAClB,QAAI7hB,IAAOujE,GAAa,OAAO,KAAK,QAAQ,KAAK,MAAM,IAAM1hD,CAAI,GAC7DkI,IAAQ,KAAK,UAAUvf,IAAO,KAAK;AACvC,IAAI44B,IAAK54B,MACLuf,IAAQ05C,GAAa15C,GAAOqZ,GAAI54B,GAAMqX,CAAI,IAC1C7C,IAAO,MACP+K,IAAQ05C,GAAa15C,GAAO,GAAG/K,GAAM6C,CAAI;AAC7C,aAAS1xB,IAAI,GAAGA,IAAI45B,EAAM,QAAQ55B;AAC9B,MAAA45B,EAAM55B,CAAC,EAAE,SAAS6P;AACtB,WAAAA,EAAK,WAAW+pB,GACT/pB;AAAA,EACX;AAAA,EACA,eAAegjE,GAAU;AACrB,WAAO,KAAK,KAAK,iBAAiB,KAAK,KAAK,eAAeA,CAAQ,IAAI,MAAM,eAAeA,CAAQ;AAAA,EACxG;AAAA,EACA,UAAU;AACN,IAAI,KAAK,KAAK,WACV,KAAK,KAAK,QAAO,GACrB,MAAM,QAAO;AAAA,EACjB;AACJ;AAIA,MAAMU,WAAqB9B,GAAS;AAAA,EAChC,YAAY5/D,GAAQtD,GAAMojE,GAAWC,GAAW9jB,GAAKgC,GAAYmiB,GAASvgD,GAAMpgB,GAAK;AACjF,UAAMO,GAAQ,IAAIi8C,GAAKgC,CAAU,GACjC,KAAK,OAAOvhD,GACZ,KAAK,YAAYojE,GACjB,KAAK,YAAYC,GACjB,KAAK,UAAUK;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,OAAO,OAAOpgE,GAAQtD,GAAMojE,GAAWC,GAAWlgD,GAAMpgB,GAAK;AACzD,QAAI+hE,IAAS3hD,EAAK,UAAUnjB,EAAK,KAAK,IAAI,GAAGilE,GACzC7mB,IAAO0mB,KAAUA,EAAO9kE,GAAMmjB,GAAM,MAAM;AAG1C,UAAI,CAAC8hD;AACD,eAAOliE;AACX,UAAIkiE,EAAQ;AACR,eAAOA,EAAQ,OAAO,eAAeA,CAAO;AAAA,IACpD,GAAG7B,GAAWC,CAAS,GACnB9jB,IAAMnB,KAAQA,EAAK,KAAKmD,IAAanD,KAAQA,EAAK;AACtD,QAAIp+C,EAAK;AACL,UAAI,CAACu/C;AACD,QAAAA,IAAM,SAAS,eAAev/C,EAAK,IAAI;AAAA,eAClCu/C,EAAI,YAAY;AACrB,cAAM,IAAI,WAAW,0CAA0C;AAAA,UAElE,CAAKA,MAEL,EAAE,KAAAA,GAAK,YAAAgC,EAAU,IADPe,GAAc,WAAW,UAAUtiD,EAAK,KAAK,KAAK,MAAMA,CAAI,GAAG,MAAMA,EAAK,KAAK;AAG9F,IAAI,CAACuhD,KAAc,CAACvhD,EAAK,UAAUu/C,EAAI,YAAY,SAC1CA,EAAI,aAAa,iBAAiB,MACnCA,EAAI,kBAAkB,UACtBv/C,EAAK,KAAK,KAAK,cACfu/C,EAAI,YAAY;AAExB,QAAImkB,IAAUnkB;AAEd,WADAA,IAAM2lB,GAAe3lB,GAAK6jB,GAAWpjE,CAAI,GACrCo+C,IACO6mB,IAAU,IAAIE,GAAmB7hE,GAAQtD,GAAMojE,GAAWC,GAAW9jB,GAAKgC,KAAc,MAAMmiB,GAAStlB,GAAMj7B,GAAMpgB,IAAM,CAAC,IAC5H/C,EAAK,SACH,IAAIolE,GAAa9hE,GAAQtD,GAAMojE,GAAWC,GAAW9jB,GAAKmkB,GAASvgD,CAAI,IAEvE,IAAI6hD,GAAa1hE,GAAQtD,GAAMojE,GAAWC,GAAW9jB,GAAKgC,KAAc,MAAMmiB,GAASvgD,GAAMpgB,IAAM,CAAC;AAAA,EACnH;AAAA,EACA,YAAY;AAER,QAAI,KAAK,KAAK,KAAK,KAAK;AACpB,aAAO;AAKX,QAAIk8C,IAAO,EAAE,MAAM,KAAK,KAAK,KAAK,MAAM,OAAO,KAAK,KAAK,MAAK;AAG9D,QAFI,KAAK,KAAK,KAAK,cAAc,UAC7BA,EAAK,qBAAqB,SAC1B,CAAC,KAAK;AACN,MAAAA,EAAK,aAAa,MAAM,KAAK,KAAK;AAAA,aAE7B,CAAC,KAAK;AACX,MAAAA,EAAK,iBAAiB,KAAK;AAAA,SAE1B;AAID,eAASxtD,IAAI,KAAK,SAAS,SAAS,GAAGA,KAAK,GAAGA,KAAK;AAChD,YAAIiL,IAAQ,KAAK,SAASjL,CAAC;AAC3B,YAAI,KAAK,IAAI,SAASiL,EAAM,IAAI,UAAU,GAAG;AACzC,UAAAuiD,EAAK,iBAAiBviD,EAAM,IAAI;AAChC;AAAA,QACJ;AAAA,MACJ;AACA,MAAKuiD,EAAK,mBACNA,EAAK,aAAa,MAAM7H,EAAS;AAAA,IACzC;AACA,WAAO6H;AAAA,EACX;AAAA,EACA,YAAYj/C,GAAMojE,GAAWC,GAAW;AACpC,WAAO,KAAK,SAASP,MAAa9iE,EAAK,GAAG,KAAK,IAAI,KAC/CqlE,GAAcjC,GAAW,KAAK,SAAS,KAAKC,EAAU,GAAG,KAAK,SAAS;AAAA,EAC/E;AAAA,EACA,IAAI,OAAO;AAAE,WAAO,KAAK,KAAK;AAAA,EAAU;AAAA,EACxC,IAAI,SAAS;AAAE,WAAO,KAAK,KAAK,SAAS,IAAI;AAAA,EAAG;AAAA;AAAA;AAAA;AAAA;AAAA,EAKhD,eAAelgD,GAAMpgB,GAAK;AACtB,QAAI4/C,IAAS,KAAK,KAAK,eAAe5O,IAAMhxC,GACxCuiE,IAAcniD,EAAK,YAAY,KAAK,qBAAqBA,GAAMpgB,CAAG,IAAI,MACtEwiE,IAAmBD,KAAeA,EAAY,MAAM,KAAKA,IAAc,MACvEE,IAAqBF,KAAeA,EAAY,MAAM,GACtDzxB,IAAU,IAAI4xB,GAAgB,MAAMF,KAAoBA,EAAiB,MAAMpiD,CAAI;AACvF,IAAAuiD,GAAS,KAAK,MAAM,KAAK,WAAW,CAACvC,GAAQ1xE,GAAGk0E,MAAe;AAC3D,MAAIxC,EAAO,KAAK,QACZtvB,EAAQ,YAAYsvB,EAAO,KAAK,OAAOxgB,GAAQx/B,CAAI,IAC9CggD,EAAO,KAAK,QAAQ,KAAK,CAACwC,KAC/B9xB,EAAQ,YAAYpiD,KAAK,KAAK,KAAK,aAAaumD,GAAK,OAAO,KAAK,KAAK,MAAMvmD,CAAC,EAAE,OAAOkxD,GAAQx/B,CAAI,GAGtG0wB,EAAQ,YAAYsvB,GAAQhgD,GAAM4wB,CAAG;AAAA,IACzC,GAAG,CAACr3C,GAAO0mE,GAAWC,GAAW5xE,MAAM;AAEnC,MAAAoiD,EAAQ,YAAYn3C,EAAM,OAAOimD,GAAQx/B,CAAI;AAE7C,UAAIyiD;AACJ,MAAI/xB,EAAQ,cAAcn3C,GAAO0mE,GAAWC,GAAW5xE,CAAC,KAC/C+zE,KAAsBriD,EAAK,MAAM,UAAU,OAAO4wB,KACvD5wB,EAAK,MAAM,UAAU,KAAK4wB,IAAMr3C,EAAM,aACrCkpE,IAAY/xB,EAAQ,mBAAmByxB,EAAY,IAAI,KAAK,MAC7DzxB,EAAQ,aAAan3C,GAAO0mE,GAAWC,GAAWuC,GAAWziD,CAAI,KAC5D0wB,EAAQ,eAAen3C,GAAO0mE,GAAWC,GAAWlgD,GAAM1xB,GAAGsiD,CAAG,KAGrEF,EAAQ,QAAQn3C,GAAO0mE,GAAWC,GAAWlgD,GAAM4wB,CAAG,GAE1DA,KAAOr3C,EAAM;AAAA,IACjB,CAAC,GAEDm3C,EAAQ,YAAY,IAAI8O,GAAQx/B,CAAI,GAChC,KAAK,KAAK,eACV0wB,EAAQ,kBAAiB,GAC7BA,EAAQ,YAAW,IAEfA,EAAQ,WAAW,KAAK,SAASmvB,QAE7BuC,KACA,KAAK,wBAAwBpiD,GAAMoiD,CAAgB,GACvDM,GAAY,KAAK,YAAY,KAAK,UAAU1iD,CAAI,GAC5Co2C,MACAuM,GAAS,KAAK,GAAG;AAAA,EAE7B;AAAA,EACA,qBAAqB3iD,GAAMpgB,GAAK;AAG5B,QAAI,EAAE,MAAAud,GAAM,IAAAokB,EAAE,IAAKvhB,EAAK,MAAM;AAC9B,QAAI,EAAEA,EAAK,MAAM,qBAAqBmuC,MAAkBhxC,IAAOvd,KAAO2hC,IAAK3hC,IAAM,KAAK,KAAK,QAAQ;AAC/F,aAAO;AACX,QAAIg/C,IAAW5+B,EAAK,MAAM;AAC1B,QAAI,CAAC4+B,KAAY,CAAC,KAAK,IAAI,SAASA,EAAS,UAAU;AACnD,aAAO;AACX,QAAI,KAAK,KAAK,eAAe;AAIzB,UAAIntD,IAAOmtD,EAAS,WAChBgkB,IAAUC,GAAmB,KAAK,KAAK,SAASpxE,GAAM0rB,IAAOvd,GAAK2hC,IAAK3hC,CAAG;AAC9E,aAAOgjE,IAAU,IAAI,OAAO,EAAE,MAAMhkB,GAAU,KAAKgkB,GAAS,MAAAnxE,EAAI;AAAA,IACpE;AAEI,aAAO,EAAE,MAAMmtD,GAAU,KAAK,IAAI,MAAM,GAAE;AAAA,EAElD;AAAA,EACA,wBAAwB5+B,GAAM,EAAE,MAAAnjB,GAAM,KAAA+C,GAAK,MAAAnO,EAAI,GAAI;AAE/C,QAAI,KAAK,QAAQoL,CAAI;AACjB;AAEJ,QAAIsgD,IAAUtgD;AACd,WACQsgD,EAAQ,cAAc,KAAK,YAD3BA,IAAUA,EAAQ,YAAY;AAGlC,aAAOA,EAAQ;AACX,QAAAA,EAAQ,WAAW,YAAYA,EAAQ,eAAe;AAC1D,aAAOA,EAAQ;AACX,QAAAA,EAAQ,WAAW,YAAYA,EAAQ,WAAW;AACtD,MAAIA,EAAQ,eACRA,EAAQ,aAAa;AAAA,IAC7B;AACA,QAAI4S,IAAO,IAAIwR,GAAoB,MAAMpkB,GAAStgD,GAAMpL,CAAI;AAC5D,IAAAuuB,EAAK,MAAM,iBAAiB,KAAK+vC,CAAI,GAErC,KAAK,WAAW6R,GAAa,KAAK,UAAUhiE,GAAKA,IAAMnO,EAAK,QAAQuuB,GAAM+vC,CAAI;AAAA,EAClF;AAAA;AAAA;AAAA,EAGA,OAAOlzD,GAAMojE,GAAWC,GAAWlgD,GAAM;AACrC,WAAI,KAAK,SAAS8/C,MACd,CAACjjE,EAAK,WAAW,KAAK,IAAI,IACnB,MACX,KAAK,YAAYA,GAAMojE,GAAWC,GAAWlgD,CAAI,GAC1C;AAAA,EACX;AAAA,EACA,YAAYnjB,GAAMojE,GAAWC,GAAWlgD,GAAM;AAC1C,SAAK,gBAAgBigD,CAAS,GAC9B,KAAK,OAAOpjE,GACZ,KAAK,YAAYqjE,GACb,KAAK,cACL,KAAK,eAAelgD,GAAM,KAAK,UAAU,GAC7C,KAAK,QAAQ2/C;AAAA,EACjB;AAAA,EACA,gBAAgBM,GAAW;AACvB,QAAIiC,GAAcjC,GAAW,KAAK,SAAS;AACvC;AACJ,QAAI6C,IAAY,KAAK,QAAQ,YAAY,GACrCC,IAAS,KAAK;AAClB,SAAK,MAAMC,GAAe,KAAK,KAAK,KAAK,SAASC,GAAiB,KAAK,WAAW,KAAK,MAAMH,CAAS,GAAGG,GAAiBhD,GAAW,KAAK,MAAM6C,CAAS,CAAC,GACvJ,KAAK,OAAOC,MACZA,EAAO,aAAa,QACpB,KAAK,IAAI,aAAa,OAE1B,KAAK,YAAY9C;AAAA,EACrB;AAAA;AAAA,EAEA,aAAa;AACT,IAAI,KAAK,QAAQ,YAAY,MACzB,KAAK,QAAQ,UAAU,IAAI,0BAA0B,IACjD,KAAK,cAAc,CAAC,KAAK,KAAK,KAAK,KAAK,eACxC,KAAK,QAAQ,YAAY;AAAA,EAErC;AAAA;AAAA,EAEA,eAAe;AACX,IAAI,KAAK,QAAQ,YAAY,MACzB,KAAK,QAAQ,UAAU,OAAO,0BAA0B,IACpD,KAAK,cAAc,CAAC,KAAK,KAAK,KAAK,KAAK,cACxC,KAAK,QAAQ,gBAAgB,WAAW;AAAA,EAEpD;AAAA,EACA,IAAI,UAAU;AAAE,WAAO,KAAK,KAAK;AAAA,EAAQ;AAC7C;AAGA,SAASiD,GAAYv9C,GAAKs6C,GAAWC,GAAW9jB,GAAKp8B,GAAM;AACvD,EAAA+hD,GAAe3lB,GAAK6jB,GAAWt6C,CAAG;AAClC,MAAIw9C,IAAU,IAAItB,GAAa,QAAWl8C,GAAKs6C,GAAWC,GAAW9jB,GAAKA,GAAKA,GAAKp8B,GAAM,CAAC;AAC3F,SAAImjD,EAAQ,cACRA,EAAQ,eAAenjD,GAAM,CAAC,GAC3BmjD;AACX;AACA,MAAMlB,WAAqBJ,GAAa;AAAA,EACpC,YAAY1hE,GAAQtD,GAAMojE,GAAWC,GAAW9jB,GAAKmkB,GAASvgD,GAAM;AAChE,UAAM7f,GAAQtD,GAAMojE,GAAWC,GAAW9jB,GAAK,MAAMmkB,GAASvgD,GAAM,CAAC;AAAA,EACzE;AAAA,EACA,YAAY;AACR,QAAI3X,IAAO,KAAK,QAAQ;AACxB,WAAOA,KAAQA,KAAQ,KAAK,OAAO,CAACA,EAAK;AACrC,MAAAA,IAAOA,EAAK;AAChB,WAAO,EAAE,MAAOA,KAAQ,GAAK;AAAA,EACjC;AAAA,EACA,OAAOxL,GAAMojE,GAAWC,GAAWlgD,GAAM;AACrC,WAAI,KAAK,SAAS8/C,MAAe,KAAK,SAASH,MAAa,CAAC,KAAK,cAC9D,CAAC9iE,EAAK,WAAW,KAAK,IAAI,IACnB,MACX,KAAK,gBAAgBojE,CAAS,IACzB,KAAK,SAASN,MAAa9iE,EAAK,QAAQ,KAAK,KAAK,SAASA,EAAK,QAAQ,KAAK,QAAQ,cACtF,KAAK,QAAQ,YAAYA,EAAK,MAC1BmjB,EAAK,eAAe,KAAK,YACzBA,EAAK,cAAc,QAE3B,KAAK,OAAOnjB,GACZ,KAAK,QAAQ8iE,IACN;AAAA,EACX;AAAA,EACA,WAAW;AACP,QAAIN,IAAY,KAAK,OAAO;AAC5B,aAASrtE,IAAI,KAAK,SAASA,GAAGA,IAAIA,EAAE;AAChC,UAAIA,KAAKqtE;AACL,eAAO;AACf,WAAO;AAAA,EACX;AAAA,EACA,WAAWz/D,GAAK;AACZ,WAAO,EAAE,MAAM,KAAK,SAAS,QAAQA,EAAG;AAAA,EAC5C;AAAA,EACA,gBAAgBw8C,GAAK5wC,GAAQ8+C,GAAM;AAC/B,WAAIlO,KAAO,KAAK,UACL,KAAK,aAAa,KAAK,IAAI5wC,GAAQ,KAAK,KAAK,KAAK,MAAM,IAC5D,MAAM,gBAAgB4wC,GAAK5wC,GAAQ8+C,CAAI;AAAA,EAClD;AAAA,EACA,eAAe6W,GAAU;AACrB,WAAOA,EAAS,QAAQ,mBAAmBA,EAAS,QAAQ;AAAA,EAChE;AAAA,EACA,MAAMhkD,GAAMokB,GAAIvhB,GAAM;AAClB,QAAInjB,IAAO,KAAK,KAAK,IAAIsgB,GAAMokB,CAAE,GAAG6a,IAAM,SAAS,eAAev/C,EAAK,IAAI;AAC3E,WAAO,IAAIolE,GAAa,KAAK,QAAQplE,GAAM,KAAK,WAAW,KAAK,WAAWu/C,GAAKA,GAAKp8B,CAAI;AAAA,EAC7F;AAAA,EACA,UAAU7C,GAAMokB,GAAI;AAChB,UAAM,UAAUpkB,GAAMokB,CAAE,GACpB,KAAK,OAAO,KAAK,YAAYpkB,KAAQ,KAAKokB,KAAM,KAAK,QAAQ,UAAU,YACvE,KAAK,QAAQu+B;AAAA,EACrB;AAAA,EACA,IAAI,UAAU;AAAE,WAAO;AAAA,EAAO;AAAA,EAC9B,OAAOruE,GAAM;AAAE,WAAO,KAAK,KAAK,QAAQA;AAAA,EAAM;AAClD;AAGA,MAAM+uE,WAA6BT,GAAS;AAAA,EACxC,YAAY;AAAE,WAAO,EAAE,QAAQ,GAAI;AAAA,EAAI;AAAA,EACvC,YAAYI,GAAU;AAAE,WAAO,KAAK,SAASR,MAAa,KAAK,IAAI,YAAYQ;AAAA,EAAU;AAAA,EACzF,IAAI,UAAU;AAAE,WAAO;AAAA,EAAM;AAAA,EAC7B,IAAI,kBAAkB;AAAE,WAAO,KAAK,IAAI,YAAY;AAAA,EAAO;AAC/D;AAIA,MAAM6B,WAA2BH,GAAa;AAAA,EAC1C,YAAY1hE,GAAQtD,GAAMojE,GAAWC,GAAW9jB,GAAKgC,GAAYmiB,GAAStlB,GAAMj7B,GAAMpgB,GAAK;AACvF,UAAMO,GAAQtD,GAAMojE,GAAWC,GAAW9jB,GAAKgC,GAAYmiB,GAASvgD,GAAMpgB,CAAG,GAC7E,KAAK,OAAOq7C;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA,EAIA,OAAOp+C,GAAMojE,GAAWC,GAAWlgD,GAAM;AACrC,QAAI,KAAK,SAAS8/C;AACd,aAAO;AACX,QAAI,KAAK,KAAK,WAAW,KAAK,KAAK,QAAQjjE,EAAK,QAAQ,KAAK,KAAK,YAAY;AAC1E,UAAIzL,IAAS,KAAK,KAAK,OAAOyL,GAAMojE,GAAWC,CAAS;AACxD,aAAI9uE,KACA,KAAK,YAAYyL,GAAMojE,GAAWC,GAAWlgD,CAAI,GAC9C5uB;AAAA,IACX,MACK,QAAI,CAAC,KAAK,cAAc,CAACyL,EAAK,SACxB,KAGA,MAAM,OAAOA,GAAMojE,GAAWC,GAAWlgD,CAAI;AAAA,EAE5D;AAAA,EACA,aAAa;AACT,SAAK,KAAK,aAAa,KAAK,KAAK,WAAU,IAAK,MAAM,WAAU;AAAA,EACpE;AAAA,EACA,eAAe;AACX,SAAK,KAAK,eAAe,KAAK,KAAK,aAAY,IAAK,MAAM,aAAY;AAAA,EAC1E;AAAA,EACA,aAAa0uC,GAAQzuC,GAAMD,GAAM6gD,GAAO;AACpC,SAAK,KAAK,eAAe,KAAK,KAAK,aAAanS,GAAQzuC,GAAMD,EAAK,IAAI,IACjE,MAAM,aAAa0uC,GAAQzuC,GAAMD,GAAM6gD,CAAK;AAAA,EACtD;AAAA,EACA,UAAU;AACN,IAAI,KAAK,KAAK,WACV,KAAK,KAAK,QAAO,GACrB,MAAM,QAAO;AAAA,EACjB;AAAA,EACA,UAAU7wD,GAAO;AACb,WAAO,KAAK,KAAK,YAAY,KAAK,KAAK,UAAUA,CAAK,IAAI;AAAA,EAC9D;AAAA,EACA,eAAemxD,GAAU;AACrB,WAAO,KAAK,KAAK,iBAAiB,KAAK,KAAK,eAAeA,CAAQ,IAAI,MAAM,eAAeA,CAAQ;AAAA,EACxG;AACJ;AAIA,SAASuB,GAAYrD,GAAW+D,GAAOpjD,GAAM;AACzC,MAAIo8B,IAAMijB,EAAU,YAAYgE,IAAU;AAC1C,WAAS/0E,IAAI,GAAGA,IAAI80E,EAAM,QAAQ90E,KAAK;AACnC,QAAIyhE,IAAOqT,EAAM90E,CAAC,GAAGg1E,IAAWvT,EAAK;AACrC,QAAIuT,EAAS,cAAcjE,GAAW;AAClC,aAAOiE,KAAYlnB;AACf,QAAAA,IAAMmnB,GAAGnnB,CAAG,GACZinB,IAAU;AAEd,MAAAjnB,IAAMA,EAAI;AAAA,IACd;AAEI,MAAAinB,IAAU,IACVhE,EAAU,aAAaiE,GAAUlnB,CAAG;AAExC,QAAI2T,aAAgB2R,IAAc;AAC9B,UAAI9hE,IAAMw8C,IAAMA,EAAI,kBAAkBijB,EAAU;AAChD,MAAAqD,GAAY3S,EAAK,YAAYA,EAAK,UAAU/vC,CAAI,GAChDo8B,IAAMx8C,IAAMA,EAAI,cAAcy/D,EAAU;AAAA,IAC5C;AAAA,EACJ;AACA,SAAOjjB;AACH,IAAAA,IAAMmnB,GAAGnnB,CAAG,GACZinB,IAAU;AAEd,EAAIA,KAAWrjD,EAAK,eAAeq/C,MAC/Br/C,EAAK,cAAc;AAC3B;AACA,MAAMwjD,KAAiB,SAAUrD,GAAU;AACvC,EAAIA,MACA,KAAK,WAAWA;AACxB;AACAqD,GAAe,YAAY,uBAAO,OAAO,IAAI;AAC7C,MAAMC,KAAS,CAAC,IAAID,IAAc;AAClC,SAASP,GAAiBhD,GAAWpjE,GAAMimE,GAAW;AAClD,MAAI7C,EAAU,UAAU;AACpB,WAAOwD;AACX,MAAInmB,IAAMwlB,IAAYW,GAAO,CAAC,IAAI,IAAID,MAAgBpyE,IAAS,CAACksD,CAAG;AACnE,WAAShvD,IAAI,GAAGA,IAAI2xE,EAAU,QAAQ3xE,KAAK;AACvC,QAAIgL,IAAQ2mE,EAAU3xE,CAAC,EAAE,KAAK;AAC9B,QAAKgL,GAEL;AAAA,MAAIA,EAAM,YACNlI,EAAO,KAAKksD,IAAM,IAAIkmB,GAAelqE,EAAM,QAAQ,CAAC;AACxD,eAAS0E,KAAQ1E,GAAO;AACpB,YAAIu9C,IAAMv9C,EAAM0E,CAAI;AACpB,QAAI64C,KAAO,SAEPisB,KAAa1xE,EAAO,UAAU,KAC9BA,EAAO,KAAKksD,IAAM,IAAIkmB,GAAe3mE,EAAK,WAAW,SAAS,KAAK,CAAC,GACpEmB,KAAQ,UACRs/C,EAAI,SAASA,EAAI,QAAQA,EAAI,QAAQ,MAAM,MAAMzG,IAC5C74C,KAAQ,UACbs/C,EAAI,SAASA,EAAI,QAAQA,EAAI,QAAQ,MAAM,MAAMzG,IAC5C74C,KAAQ,eACbs/C,EAAIt/C,CAAI,IAAI64C;AAAA,MACpB;AAAA;AAAA,EACJ;AACA,SAAOzlD;AACX;AACA,SAAS4xE,GAAeU,GAAUnD,GAASoD,GAAcC,GAAa;AAElE,MAAID,KAAgBF,MAAUG,KAAeH;AACzC,WAAOlD;AACX,MAAIsD,IAAStD;AACb,WAASjyE,IAAI,GAAGA,IAAIs1E,EAAY,QAAQt1E,KAAK;AACzC,QAAIw1E,IAAOF,EAAYt1E,CAAC,GAAG6hE,IAAOwT,EAAar1E,CAAC;AAChD,QAAIA,GAAG;AACH,UAAI6R;AACJ,MAAIgwD,KAAQA,EAAK,YAAY2T,EAAK,YAAYD,KAAUH,MACnDvjE,IAAS0jE,EAAO,eAAe1jE,EAAO,SAAS,YAAW,KAAM2jE,EAAK,aAItE3jE,IAAS,SAAS,cAAc2jE,EAAK,QAAQ,GAC7C3jE,EAAO,WAAW,IAClBA,EAAO,YAAY0jE,CAAM,GACzB1T,IAAOsT,GAAO,CAAC,IACfI,IAAS1jE;AAAA,IAEjB;AACA,IAAA4jE,GAAgBF,GAAQ1T,KAAQsT,GAAO,CAAC,GAAGK,CAAI;AAAA,EACnD;AACA,SAAOD;AACX;AACA,SAASE,GAAgB3nB,GAAK+T,GAAMxb,GAAK;AACrC,WAAS32C,KAAQmyD;AACb,IAAInyD,KAAQ,WAAWA,KAAQ,WAAWA,KAAQ,cAAc,EAAEA,KAAQ22C,MACtEyH,EAAI,gBAAgBp+C,CAAI;AAChC,WAASA,KAAQ22C;AACb,IAAI32C,KAAQ,WAAWA,KAAQ,WAAWA,KAAQ,cAAc22C,EAAI32C,CAAI,KAAKmyD,EAAKnyD,CAAI,KAClFo+C,EAAI,aAAap+C,GAAM22C,EAAI32C,CAAI,CAAC;AACxC,MAAImyD,EAAK,SAASxb,EAAI,OAAO;AACzB,QAAIqvB,IAAW7T,EAAK,QAAQA,EAAK,MAAM,MAAM,GAAG,EAAE,OAAO,OAAO,IAAI,CAAA,GAChE8T,IAAUtvB,EAAI,QAAQA,EAAI,MAAM,MAAM,GAAG,EAAE,OAAO,OAAO,IAAI,CAAA;AACjE,aAASrmD,IAAI,GAAGA,IAAI01E,EAAS,QAAQ11E;AACjC,MAAI21E,EAAQ,QAAQD,EAAS11E,CAAC,CAAC,KAAK,MAChC8tD,EAAI,UAAU,OAAO4nB,EAAS11E,CAAC,CAAC;AACxC,aAASA,IAAI,GAAGA,IAAI21E,EAAQ,QAAQ31E;AAChC,MAAI01E,EAAS,QAAQC,EAAQ31E,CAAC,CAAC,KAAK,MAChC8tD,EAAI,UAAU,IAAI6nB,EAAQ31E,CAAC,CAAC;AACpC,IAAI8tD,EAAI,UAAU,UAAU,KACxBA,EAAI,gBAAgB,OAAO;AAAA,EACnC;AACA,MAAI+T,EAAK,SAASxb,EAAI,OAAO;AACzB,QAAIwb,EAAK,OAAO;AACZ,UAAI7c,IAAO,iFAAiFvhD;AAC5F,aAAOA,IAAIuhD,EAAK,KAAK6c,EAAK,KAAK;AAC3B,QAAA/T,EAAI,MAAM,eAAerqD,EAAE,CAAC,CAAC;AAAA,IACrC;AACA,IAAI4iD,EAAI,UACJyH,EAAI,MAAM,WAAWzH,EAAI;AAAA,EACjC;AACJ;AACA,SAASotB,GAAe3lB,GAAK0nB,GAAMjnE,GAAM;AACrC,SAAOmmE,GAAe5mB,GAAKA,GAAKqnB,IAAQR,GAAiBa,GAAMjnE,GAAMu/C,EAAI,YAAY,CAAC,CAAC;AAC3F;AACA,SAAS8lB,GAAclqE,GAAGC,GAAG;AACzB,MAAID,EAAE,UAAUC,EAAE;AACd,WAAO;AACX,WAAS3J,IAAI,GAAGA,IAAI0J,EAAE,QAAQ1J;AAC1B,QAAI,CAAC0J,EAAE1J,CAAC,EAAE,KAAK,GAAG2J,EAAE3J,CAAC,EAAE,IAAI;AACvB,aAAO;AACf,SAAO;AACX;AAEA,SAASi1E,GAAGnnB,GAAK;AACb,MAAI3rD,IAAO2rD,EAAI;AACf,SAAAA,EAAI,WAAW,YAAYA,CAAG,GACvB3rD;AACX;AAGA,MAAM6xE,GAAgB;AAAA,EAClB,YAAYhlB,GAAK4mB,GAAMlkD,GAAM;AACzB,SAAK,OAAOkkD,GACZ,KAAK,OAAOlkD,GAGZ,KAAK,QAAQ,GAGb,KAAK,QAAQ,CAAA,GAEb,KAAK,UAAU,IACf,KAAK,MAAMs9B,GACX,KAAK,WAAW6mB,GAAS7mB,EAAI,KAAK,SAASA,CAAG;AAAA,EAClD;AAAA;AAAA;AAAA,EAGA,eAAel9C,GAAOO,GAAK;AACvB,QAAIP,KAASO,GAEb;AAAA,eAASrS,IAAI8R,GAAO9R,IAAIqS,GAAKrS;AACzB,aAAK,IAAI,SAASA,CAAC,EAAE,QAAO;AAChC,WAAK,IAAI,SAAS,OAAO8R,GAAOO,IAAMP,CAAK,GAC3C,KAAK,UAAU;AAAA;AAAA,EACnB;AAAA;AAAA,EAEA,cAAc;AACV,SAAK,eAAe,KAAK,OAAO,KAAK,IAAI,SAAS,MAAM;AAAA,EAC5D;AAAA;AAAA;AAAA,EAGA,YAAY20C,GAAOyK,GAAQx/B,GAAM;AAC7B,QAAIo/B,IAAO,GAAGj6B,IAAQ,KAAK,MAAM,UAAU,GACvCi/C,IAAU,KAAK,IAAIj/C,GAAO4vB,EAAM,MAAM;AAC1C,WAAOqK,IAAOglB,MACThlB,KAAQj6B,IAAQ,IAAI,KAAK,MAAM,KAAK,MAAOi6B,IAAO,KAAM,CAAC,GACrD,YAAYrK,EAAMqK,CAAI,CAAC,KAAKrK,EAAMqK,CAAI,EAAE,KAAK,KAAK,aAAa;AACpE,MAAAA;AACJ,WAAOA,IAAOj6B;AACV,WAAK,YAAW,GAChB,KAAK,IAAI,QAAQw6C,IACjB,KAAK,QAAQ,KAAK,MAAM,IAAG,GAC3B,KAAK,MAAM,KAAK,MAAM,IAAG,GACzBx6C;AAEJ,WAAOA,IAAQ4vB,EAAM,UAAQ;AACzB,WAAK,MAAM,KAAK,KAAK,KAAK,KAAK,QAAQ,CAAC;AACxC,UAAI9B,IAAQ;AACZ,eAAS3kD,IAAI,KAAK,OAAOA,IAAI,KAAK,IAAI,KAAK,QAAQ,GAAG,KAAK,IAAI,SAAS,MAAM,GAAGA,KAAK;AAClF,YAAImC,IAAO,KAAK,IAAI,SAASnC,CAAC;AAC9B,YAAImC,EAAK,YAAYskD,EAAM5vB,CAAK,CAAC,KAAK,CAAC,KAAK,SAAS10B,EAAK,GAAG,GAAG;AAC5D,UAAAwiD,IAAQ3kD;AACR;AAAA,QACJ;AAAA,MACJ;AACA,UAAI2kD,IAAQ;AACR,QAAIA,IAAQ,KAAK,UACb,KAAK,UAAU,IACf,KAAK,eAAe,KAAK,OAAOA,CAAK,IAEzC,KAAK,MAAM,KAAK,IAAI,SAAS,KAAK,KAAK;AAAA,WAEtC;AACD,YAAIoxB,IAAW3C,GAAa,OAAO,KAAK,KAAK3sB,EAAM5vB,CAAK,GAAGq6B,GAAQx/B,CAAI;AACvE,aAAK,IAAI,SAAS,OAAO,KAAK,OAAO,GAAGqkD,CAAQ,GAChD,KAAK,MAAMA,GACX,KAAK,UAAU;AAAA,MACnB;AACA,WAAK,QAAQ,GACbl/C;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,cAActoB,GAAMojE,GAAWC,GAAW1sE,GAAO;AAC7C,QAAIy/C,IAAQ,IAAIqxB;AAChB,QAAI9wE,KAAS,KAAK,SAAS,UACtB8wE,IAAa,KAAK,SAAS,QAAQ9wE,IAAQ,KAAK,SAAS,KAAK,GAAG,UAAU,KAAK,OACjF8wE,EAAW,YAAYznE,GAAMojE,GAAWC,CAAS;AACjD,MAAAjtB,IAAQ,KAAK,IAAI,SAAS,QAAQqxB,GAAY,KAAK,KAAK;AAAA;AAGxD,eAASh2E,IAAI,KAAK,OAAO6M,IAAI,KAAK,IAAI,KAAK,IAAI,SAAS,QAAQ7M,IAAI,CAAC,GAAGA,IAAI6M,GAAG7M,KAAK;AAChF,YAAIiL,IAAQ,KAAK,IAAI,SAASjL,CAAC;AAC/B,YAAIiL,EAAM,YAAYsD,GAAMojE,GAAWC,CAAS,KAAK,CAAC,KAAK,SAAS,QAAQ,IAAI3mE,CAAK,GAAG;AACpF,UAAA05C,IAAQ3kD;AACR;AAAA,QACJ;AAAA,MACJ;AAEJ,WAAI2kD,IAAQ,IACD,MACX,KAAK,eAAe,KAAK,OAAOA,CAAK,GACrC,KAAK,SACE;AAAA,EACX;AAAA,EACA,aAAap2C,GAAMojE,GAAWC,GAAW1sE,GAAOwsB,GAAM;AAClD,QAAIzmB,IAAQ,KAAK,IAAI,SAAS/F,CAAK;AAGnC,WAFI+F,EAAM,SAASumE,MAAcvmE,EAAM,OAAOA,EAAM,eAChDA,EAAM,QAAQsmE,KACbtmE,EAAM,OAAOsD,GAAMojE,GAAWC,GAAWlgD,CAAI,KAElD,KAAK,eAAe,KAAK,OAAOxsB,CAAK,GACrC,KAAK,SACE,MAHI;AAAA,EAIf;AAAA,EACA,mBAAmB+wE,GAAS;AACxB,eAAS;AACL,UAAIpkE,IAASokE,EAAQ;AACrB,UAAI,CAACpkE;AACD,eAAO;AACX,UAAIA,KAAU,KAAK,IAAI,YAAY;AAC/B,YAAI4vD,IAAOwU,EAAQ;AACnB,YAAIxU;AACA,mBAAS,IAAI,KAAK,OAAO,IAAI,KAAK,IAAI,SAAS,QAAQ;AACnD,gBAAI,KAAK,IAAI,SAAS,CAAC,KAAKA;AACxB,qBAAO;AAAA;AAEnB,eAAO;AAAA,MACX;AACA,MAAAwU,IAAUpkE;AAAA,IACd;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,eAAetD,GAAMojE,GAAWC,GAAWlgD,GAAMxsB,GAAOoM,GAAK;AACzD,aAAStR,IAAI,KAAK,OAAOA,IAAI,KAAK,IAAI,SAAS,QAAQA,KAAK;AACxD,UAAImC,IAAO,KAAK,IAAI,SAASnC,CAAC;AAC9B,UAAImC,aAAgBoxE,IAAc;AAC9B,YAAIsC,IAAW,KAAK,SAAS,QAAQ,IAAI1zE,CAAI;AAC7C,YAAI0zE,KAAY,QAAQA,KAAY3wE;AAChC,iBAAO;AACX,YAAIgxE,IAAU/zE,EAAK,KAAKmL,GAIpB6oE,IAAS,KAAK,SAASD,CAAO,KAC9B,EAAE3nE,EAAK,UAAUpM,EAAK,QAAQA,EAAK,KAAK,UAAUA,EAAK,QAAQ,aAAaoM,EAAK,QAC7EpM,EAAK,SAASqvE,MAAcoC,GAAcjC,GAAWxvE,EAAK,SAAS;AAC3E,YAAI,CAACg0E,KAAUh0E,EAAK,OAAOoM,GAAMojE,GAAWC,GAAWlgD,CAAI;AACvD,sBAAK,eAAe,KAAK,OAAO1xB,CAAC,GAC7BmC,EAAK,OAAO+zE,MACZ,KAAK,UAAU,KACnB,KAAK,SACE;AAEN,YAAI,CAACC,MAAW7oE,IAAU,KAAK,gBAAgBnL,GAAMoM,GAAMojE,GAAWC,GAAWlgD,GAAMpgB,CAAG;AAC3F,sBAAK,eAAe,KAAK,OAAOtR,CAAC,GACjC,KAAK,IAAI,SAAS,KAAK,KAAK,IAAIsN,GAC5BA,EAAQ,eACRA,EAAQ,QAAQikE,IAChBjkE,EAAQ,eAAeokB,GAAMpgB,IAAM,CAAC,GACpChE,EAAQ,QAAQ+jE,KAEpB,KAAK,UAAU,IACf,KAAK,SACE;AAEX;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA;AAAA;AAAA,EAGA,gBAAgBlvE,GAAMoM,GAAMojE,GAAWC,GAAWlgD,GAAMpgB,GAAK;AACzD,QAAInP,EAAK,SAASoM,EAAK,UAAU,CAACpM,EAAK,SAAS,UAC5C,CAACA,EAAK,KAAK,QAAQ,GAAGoM,EAAK,OAAO,KAClC,CAACqlE,GAAcjC,GAAWxvE,EAAK,SAAS,KAAK,CAACyvE,EAAU,GAAGzvE,EAAK,SAAS;AACzE,aAAO;AACX,QAAIi0E,IAAU7C,GAAa,OAAO,KAAK,KAAKhlE,GAAMojE,GAAWC,GAAWlgD,GAAMpgB,CAAG;AACjF,QAAI8kE,EAAQ,YAAY;AACpB,MAAAA,EAAQ,WAAWj0E,EAAK,UACxBA,EAAK,WAAW,CAAA;AAChB,eAASk0E,KAAMD,EAAQ;AACnB,QAAAC,EAAG,SAASD;AAAA,IACpB;AACA,WAAAj0E,EAAK,QAAO,GACLi0E;AAAA,EACX;AAAA;AAAA,EAEA,QAAQ7nE,GAAMojE,GAAWC,GAAWlgD,GAAMpgB,GAAK;AAC3C,QAAImwD,IAAO8R,GAAa,OAAO,KAAK,KAAKhlE,GAAMojE,GAAWC,GAAWlgD,GAAMpgB,CAAG;AAC9E,IAAImwD,EAAK,cACLA,EAAK,eAAe/vC,GAAMpgB,IAAM,CAAC,GACrC,KAAK,IAAI,SAAS,OAAO,KAAK,SAAS,GAAGmwD,CAAI,GAC9C,KAAK,UAAU;AAAA,EACnB;AAAA,EACA,YAAYiQ,GAAQhgD,GAAMpgB,GAAK;AAC3B,QAAInP,IAAO,KAAK,QAAQ,KAAK,IAAI,SAAS,SAAS,KAAK,IAAI,SAAS,KAAK,KAAK,IAAI;AACnF,QAAIA,KAAQA,EAAK,cAAcuvE,CAAM,MAChCA,KAAUvvE,EAAK,UAAU,CAACA,EAAK,OAAO,KAAK,MAAM;AAClD,WAAK;AAAA,SAEJ;AACD,UAAIs/D,IAAO,IAAI0Q,GAAe,KAAK,KAAKT,GAAQhgD,GAAMpgB,CAAG;AACzD,WAAK,IAAI,SAAS,OAAO,KAAK,SAAS,GAAGmwD,CAAI,GAC9C,KAAK,UAAU;AAAA,IACnB;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,oBAAoB;AAChB,QAAIvM,IAAY,KAAK,IAAI,SAAS,KAAK,QAAQ,CAAC,GAAGrjD,IAAS,KAAK;AACjE,WAAOqjD,aAAqBke;AACxB,MAAAvhE,IAASqjD,GACTA,IAAYrjD,EAAO,SAASA,EAAO,SAAS,SAAS,CAAC;AAE1D,KAAI,CAACqjD;AAAA,IACD,EAAEA,aAAqBye,OACvB,MAAM,KAAKze,EAAU,KAAK,IAAI,KAC7B,KAAK,KAAK,yBAAyB,MAAM,KAAKA,EAAU,KAAK,IAAI,QAE7D2S,MAAUgE,OAAW3W,KAAaA,EAAU,IAAI,mBAAmB,WACpE,KAAK,YAAY,OAAOrjD,CAAM,GAClC,KAAK,YAAY,MAAM,KAAK,GAAG;AAAA,EAEvC;AAAA,EACA,YAAYggE,GAAUhgE,GAAQ;AAC1B,QAAIA,KAAU,KAAK,OAAO,KAAK,QAAQA,EAAO,SAAS,UAAUA,EAAO,SAAS,KAAK,KAAK,EAAE,YAAYggE,CAAQ;AAC7G,WAAK;AAAA,SAEJ;AACD,UAAI/jB,IAAM,SAAS,cAAc+jB,CAAQ;AACzC,MAAIA,KAAY,UACZ/jB,EAAI,YAAY,yBAChBA,EAAI,MAAM,KAEV+jB,KAAY,SACZ/jB,EAAI,YAAY;AACpB,UAAIwoB,IAAO,IAAIpE,GAAqB,KAAK,KAAK,CAAA,GAAIpkB,GAAK,IAAI;AAC3D,MAAIj8C,KAAU,KAAK,MACfA,EAAO,SAAS,KAAKykE,CAAI,IAEzBzkE,EAAO,SAAS,OAAO,KAAK,SAAS,GAAGykE,CAAI,GAChD,KAAK,UAAU;AAAA,IACnB;AAAA,EACJ;AAAA,EACA,SAAS/nE,GAAM;AACX,WAAO,KAAK,SAASA,KAAQ,KAAK,QAAQA,EAAK,YAAY,KAAKA,EAAK,SAAS,KAAK,KAAK,UAAU;AAAA,EACtG;AACJ;AAMA,SAASsnE,GAAS1rB,GAAMosB,GAAY;AAChC,MAAIC,IAAUD,GAAYE,IAAQD,EAAQ,SAAS,QAC/CE,IAAKvsB,EAAK,YAAYyC,IAAU,oBAAI,OAAKhP,IAAU,CAAA;AACvD,EAAAoc,EAAO,QAAO0c,IAAK,KAAG;AAClB,QAAIjV;AACJ;AACI,UAAIgV,GAAO;AACP,YAAIt0E,IAAOq0E,EAAQ,SAASC,IAAQ,CAAC;AACrC,YAAIt0E,aAAgBixE;AAChB,UAAAoD,IAAUr0E,GACVs0E,IAAQt0E,EAAK,SAAS;AAAA,aAErB;AACD,UAAAs/D,IAAOt/D,GACPs0E;AACA;AAAA,QACJ;AAAA,MACJ,OACK;AAAA,YAAID,KAAWD;AAChB,gBAAMvc;AAIN,QAAAyc,IAAQD,EAAQ,OAAO,SAAS,QAAQA,CAAO,GAC/CA,IAAUA,EAAQ;AAAA;AAG1B,QAAIjoE,IAAOkzD,EAAK;AAChB,QAAKlzD,GAEL;AAAA,UAAIA,KAAQ47C,EAAK,MAAMusB,IAAK,CAAC;AACzB;AACJ,QAAEA,GACF9pB,EAAQ,IAAI6U,GAAMiV,CAAE,GACpB94B,EAAQ,KAAK6jB,CAAI;AAAA;AAAA,EACrB;AACA,SAAO,EAAE,OAAOiV,GAAI,SAAA9pB,GAAS,SAAShP,EAAQ,UAAS;AAC3D;AACA,SAAS+4B,GAAYjtE,GAAGC,GAAG;AACvB,SAAOD,EAAE,KAAK,OAAOC,EAAE,KAAK;AAChC;AAKA,SAASsqE,GAASpiE,GAAQ2jE,GAAMoB,GAAUC,GAAQ;AAC9C,MAAIC,IAAStB,EAAK,OAAO3jE,CAAM,GAAGqL,IAAS;AAE3C,MAAI45D,EAAO,UAAU,GAAG;AACpB,aAAS92E,IAAI,GAAGA,IAAI6R,EAAO,YAAY7R,KAAK;AACxC,UAAIiL,IAAQ4G,EAAO,MAAM7R,CAAC;AAC1B,MAAA62E,EAAO5rE,GAAO6rE,GAAQtB,EAAK,SAASt4D,GAAQjS,CAAK,GAAGjL,CAAC,GACrDkd,KAAUjS,EAAM;AAAA,IACpB;AACA;AAAA,EACJ;AACA,MAAI8rE,IAAY,GAAGvsB,IAAS,CAAA,GAAIwsB,IAAW;AAC3C,WAAS/pE,IAAc,OAAK;AACxB,QAAIykE,GAAQuF;AACZ,WAAOF,IAAYD,EAAO,UAAUA,EAAOC,CAAS,EAAE,MAAM75D,KAAQ;AAChE,UAAI/a,IAAO20E,EAAOC,GAAW;AAC7B,MAAI50E,EAAK,WACAuvE,KAGAuF,MAAYA,IAAU,CAACvF,CAAM,IAAI,KAAKvvE,CAAI,IAF3CuvE,IAASvvE;AAAA,IAIrB;AACA,QAAIuvE;AACA,UAAIuF,GAAS;AACT,QAAAA,EAAQ,KAAKN,EAAW;AACxB,iBAAS32E,IAAI,GAAGA,IAAIi3E,EAAQ,QAAQj3E;AAChC,UAAA42E,EAASK,EAAQj3E,CAAC,GAAGiN,GAAa,CAAC,CAAC+pE,CAAQ;AAAA,MACpD;AAEI,QAAAJ,EAASlF,GAAQzkE,GAAa,CAAC,CAAC+pE,CAAQ;AAGhD,QAAI/rE,GAAO/F;AACX,QAAI8xE;AACA,MAAA9xE,IAAQ,IACR+F,IAAQ+rE,GACRA,IAAW;AAAA,aAEN/pE,IAAc4E,EAAO;AAC1B,MAAA3M,IAAQ+H,GACRhC,IAAQ4G,EAAO,MAAM5E,GAAa;AAAA;AAGlC;AAEJ,aAASjN,IAAI,GAAGA,IAAIwqD,EAAO,QAAQxqD;AAC/B,MAAIwqD,EAAOxqD,CAAC,EAAE,MAAMkd,KAChBstC,EAAO,OAAOxqD,KAAK,CAAC;AAC5B,WAAO+2E,IAAYD,EAAO,UAAUA,EAAOC,CAAS,EAAE,QAAQ75D,KAAU45D,EAAOC,CAAS,EAAE,KAAK75D;AAC3F,MAAAstC,EAAO,KAAKssB,EAAOC,GAAW,CAAC;AACnC,QAAI1kE,IAAM6K,IAASjS,EAAM;AACzB,QAAIA,EAAM,QAAQ;AACd,UAAIisE,IAAQ7kE;AACZ,MAAI0kE,IAAYD,EAAO,UAAUA,EAAOC,CAAS,EAAE,OAAOG,MACtDA,IAAQJ,EAAOC,CAAS,EAAE;AAC9B,eAAS/2E,IAAI,GAAGA,IAAIwqD,EAAO,QAAQxqD;AAC/B,QAAIwqD,EAAOxqD,CAAC,EAAE,KAAKk3E,MACfA,IAAQ1sB,EAAOxqD,CAAC,EAAE;AAC1B,MAAIk3E,IAAQ7kE,MACR2kE,IAAW/rE,EAAM,IAAIisE,IAAQh6D,CAAM,GACnCjS,IAAQA,EAAM,IAAI,GAAGisE,IAAQh6D,CAAM,GACnC7K,IAAM6kE,GACNhyE,IAAQ;AAAA,IAEhB;AAEI,aAAO6xE,IAAYD,EAAO,UAAUA,EAAOC,CAAS,EAAE,KAAK1kE;AACvD,QAAA0kE;AAER,QAAIpF,IAAY1mE,EAAM,YAAY,CAACA,EAAM,SAASu/C,EAAO,OAAO,CAAAtzB,MAAK,CAACA,EAAE,MAAM,IAAIszB,EAAO,MAAK;AAC9F,IAAAqsB,EAAO5rE,GAAO0mE,GAAW6D,EAAK,SAASt4D,GAAQjS,CAAK,GAAG/F,CAAK,GAC5DgY,IAAS7K;AAAA,EACb;AACJ;AAGA,SAASgiE,GAASvmB,GAAK;AACnB,MAAIA,EAAI,YAAY,QAAQA,EAAI,YAAY,MAAM;AAC9C,QAAIqpB,IAASrpB,EAAI,MAAM;AACvB,IAAAA,EAAI,MAAM,UAAUqpB,IAAS,mCAC7B,OAAO,iBAAiBrpB,CAAG,EAAE,WAC7BA,EAAI,MAAM,UAAUqpB;AAAA,EACxB;AACJ;AAEA,SAAS5C,GAAmBpqB,GAAMhnD,GAAM0rB,GAAMokB,GAAI;AAC9C,WAAS,IAAI,GAAG3hC,IAAM,GAAG,IAAI64C,EAAK,cAAc74C,KAAO2hC,KAAK;AACxD,QAAIhoC,IAAQk/C,EAAK,MAAM,GAAG,GAAGitB,IAAa9lE;AAE1C,QADAA,KAAOrG,EAAM,UACT,CAACA,EAAM;AACP;AACJ,QAAI29C,IAAM39C,EAAM;AAChB,WAAO,IAAIk/C,EAAK,cAAY;AACxB,UAAIhoD,IAAOgoD,EAAK,MAAM,GAAG;AAEzB,UADA74C,KAAOnP,EAAK,UACR,CAACA,EAAK;AACN;AACJ,MAAAymD,KAAOzmD,EAAK;AAAA,IAChB;AACA,QAAImP,KAAOud,GAAM;AACb,UAAIvd,KAAO2hC,KAAM2V,EAAI,MAAM3V,IAAK9vC,EAAK,SAASi0E,GAAYnkC,IAAKmkC,CAAU,KAAKj0E;AAC1E,eAAO8vC,IAAK9vC,EAAK;AACrB,UAAIwhD,IAAQyyB,IAAankC,IAAK2V,EAAI,YAAYzlD,GAAM8vC,IAAKmkC,IAAa,CAAC,IAAI;AAC3E,UAAIzyB,KAAS,KAAKA,IAAQxhD,EAAK,SAASi0E,KAAcvoD;AAClD,eAAOuoD,IAAazyB;AACxB,UAAI91B,KAAQokB,KAAM2V,EAAI,UAAW3V,IAAK9vC,EAAK,SAAUi0E,KACjDxuB,EAAI,MAAM3V,IAAKmkC,GAAYnkC,IAAKmkC,IAAaj0E,EAAK,MAAM,KAAKA;AAC7D,eAAO8vC;AAAA,IACf;AAAA,EACJ;AACA,SAAO;AACX;AAMA,SAASqgC,GAAa15C,GAAO/K,GAAMokB,GAAIvhB,GAAM0X,GAAa;AACtD,MAAItmC,IAAS,CAAA;AACb,WAAS9C,IAAI,GAAGsiD,IAAM,GAAGtiD,IAAI45B,EAAM,QAAQ55B,KAAK;AAC5C,QAAIiL,IAAQ2uB,EAAM55B,CAAC,GAAG8R,IAAQwwC,GAAKjwC,IAAMiwC,KAAOr3C,EAAM;AACtD,IAAI6G,KAASmhC,KAAM5gC,KAAOwc,IACtB/rB,EAAO,KAAKmI,CAAK,KAGb6G,IAAQ+c,KACR/rB,EAAO,KAAKmI,EAAM,MAAM,GAAG4jB,IAAO/c,GAAO4f,CAAI,CAAC,GAC9C0X,MACAtmC,EAAO,KAAKsmC,CAAW,GACvBA,IAAc,SAEd/2B,IAAM4gC,KACNnwC,EAAO,KAAKmI,EAAM,MAAMgoC,IAAKnhC,GAAO7G,EAAM,MAAMymB,CAAI,CAAC;AAAA,EAEjE;AACA,SAAO5uB;AACX;AAEA,SAASu0E,GAAiB3lD,GAAMhgB,IAAS,MAAM;AAC3C,MAAI65D,IAAS75C,EAAK,kBAAiB,GAAI2F,IAAM3F,EAAK,MAAM;AACxD,MAAI,CAAC65C,EAAO;AACR,WAAO;AACX,MAAI+L,IAAc5lD,EAAK,QAAQ,YAAY65C,EAAO,SAAS,GAAGgM,IAAWD,KAAeA,EAAY,QAAQ,GACxG3lD,IAAOD,EAAK,QAAQ,WAAW65C,EAAO,WAAWA,EAAO,aAAa,CAAC;AAC1E,MAAI55C,IAAO;AACP,WAAO;AACX,MAAI2tC,IAAQjoC,EAAI,QAAQ1F,CAAI,GAAGyuC,GAAQgB;AACvC,MAAIkK,GAAmBC,CAAM,GAAG;AAE5B,SADAnL,IAASzuC,GACF2lD,KAAe,CAACA,EAAY;AAC/B,MAAAA,IAAcA,EAAY;AAC9B,QAAIE,IAAkBF,EAAY;AAClC,QAAIA,KAAeE,EAAgB,UAAUlX,EAAc,aAAakX,CAAe,KAAKF,EAAY,UACjG,EAAEE,EAAgB,YAAYnM,GAASE,EAAO,WAAWA,EAAO,aAAa+L,EAAY,GAAG,IAAI;AACnG,UAAIhmE,IAAMgmE,EAAY;AACtB,MAAAlW,IAAY,IAAId,EAAc3uC,KAAQrgB,IAAMguD,IAAQjoC,EAAI,QAAQ/lB,CAAG,CAAC;AAAA,IACxE;AAAA,EACJ,OACK;AACD,QAAIi6D,aAAkB75C,EAAK,IAAI,cAAc,YAAY,aAAa65C,EAAO,aAAa,GAAG;AACzF,UAAItgB,IAAMt5B,GAAM3sB,IAAM2sB;AACtB,eAAS3xB,IAAI,GAAGA,IAAIurE,EAAO,YAAYvrE,KAAK;AACxC,YAAIusC,IAAQg/B,EAAO,WAAWvrE,CAAC;AAC/B,QAAAirD,IAAM,KAAK,IAAIA,GAAKv5B,EAAK,QAAQ,WAAW6a,EAAM,gBAAgBA,EAAM,aAAa,CAAC,CAAC,GACvFvnC,IAAM,KAAK,IAAIA,GAAK0sB,EAAK,QAAQ,WAAW6a,EAAM,cAAcA,EAAM,WAAW,EAAE,CAAC;AAAA,MACxF;AACA,UAAI0e,IAAM;AACN,eAAO;AACX,OAACmV,GAAQzuC,CAAI,IAAI3sB,KAAO0sB,EAAK,MAAM,UAAU,SAAS,CAAC1sB,GAAKimD,CAAG,IAAI,CAACA,GAAKjmD,CAAG,GAC5Es6D,IAAQjoC,EAAI,QAAQ1F,CAAI;AAAA,IAC5B;AAEI,MAAAyuC,IAAS1uC,EAAK,QAAQ,WAAW65C,EAAO,YAAYA,EAAO,cAAc,CAAC;AAE9E,QAAInL,IAAS;AACT,aAAO;AAAA,EACf;AACA,MAAIf,IAAUhoC,EAAI,QAAQ+oC,CAAM;AAChC,MAAI,CAACgB,GAAW;AACZ,QAAIpF,IAAOtqD,KAAU,aAAcggB,EAAK,MAAM,UAAU,OAAO4tC,EAAM,OAAO,CAACiY,IAAY,IAAI;AAC7F,IAAAnW,IAAYqW,GAAiB/lD,GAAM2tC,GAASC,GAAOtD,CAAI;AAAA,EAC3D;AACA,SAAOoF;AACX;AACA,SAASsW,GAAoBhmD,GAAM;AAC/B,SAAOA,EAAK,WAAWA,EAAK,SAAQ,IAChCimD,GAAajmD,CAAI,KAAK,SAAS,iBAAiB,SAAS,cAAc,SAASA,EAAK,GAAG;AAChG;AACA,SAASkmD,GAAelmD,GAAM6gD,IAAQ,IAAO;AACzC,MAAI9R,IAAM/uC,EAAK,MAAM;AAErB,MADAmmD,GAAkBnmD,GAAM+uC,CAAG,GACvB,EAACiX,GAAoBhmD,CAAI,GAK7B;AAAA,QAAI,CAAC6gD,KAAS7gD,EAAK,MAAM,aAAaA,EAAK,MAAM,UAAU,gBAAgBm6C,IAAQ;AAC/E,UAAIN,IAAS75C,EAAK,kBAAiB,GAAIomD,IAASpmD,EAAK,YAAY;AACjE,UAAI65C,EAAO,cAAcuM,EAAO,cAC5BlN,GAAqBW,EAAO,YAAYA,EAAO,cAAcuM,EAAO,YAAYA,EAAO,YAAY,GAAG;AACtG,QAAApmD,EAAK,MAAM,UAAU,uBAAuB,IAC5CA,EAAK,YAAY,gBAAe;AAChC;AAAA,MACJ;AAAA,IACJ;AAEA,QADAA,EAAK,YAAY,oBAAmB,GAChCA,EAAK;AACL,MAAAqmD,GAAoBrmD,CAAI;AAAA,SAEvB;AACD,UAAI,EAAE,QAAA0uC,GAAQ,MAAAzuC,EAAI,IAAK8uC,GAAKuX,GAAmBC;AAC/C,MAAIC,MAAiC,EAAEzX,aAAeZ,OAC7CY,EAAI,MAAM,OAAO,kBAClBuX,IAAoBG,GAAwBzmD,GAAM+uC,EAAI,IAAI,IAC1D,CAACA,EAAI,SAAS,CAACA,EAAI,MAAM,OAAO,kBAChCwX,IAAkBE,GAAwBzmD,GAAM+uC,EAAI,EAAE,KAE9D/uC,EAAK,QAAQ,aAAa0uC,GAAQzuC,GAAMD,GAAM6gD,CAAK,GAC/C2F,OACIF,KACAI,GAAcJ,CAAiB,GAC/BC,KACAG,GAAcH,CAAe,IAEjCxX,EAAI,UACJ/uC,EAAK,IAAI,UAAU,OAAO,2BAA2B,KAGrDA,EAAK,IAAI,UAAU,IAAI,2BAA2B,GAC9C,uBAAuB,YACvB2mD,GAA6B3mD,CAAI;AAAA,IAE7C;AACA,IAAAA,EAAK,YAAY,gBAAe,GAChCA,EAAK,YAAY,iBAAgB;AAAA;AACrC;AAIA,MAAMwmD,KAAgCrQ,MAAUgE,MAAUC,KAAiB;AAC3E,SAASqM,GAAwBzmD,GAAMpgB,GAAK;AACxC,MAAI,EAAE,MAAA/C,GAAM,QAAA2O,MAAWwU,EAAK,QAAQ,WAAWpgB,GAAK,CAAC,GACjDxH,IAAQoT,IAAS3O,EAAK,WAAW,SAASA,EAAK,WAAW2O,CAAM,IAAI,MACpErT,IAASqT,IAAS3O,EAAK,WAAW2O,IAAS,CAAC,IAAI;AACpD,MAAI2qD,MAAU/9D,KAASA,EAAM,mBAAmB;AAC5C,WAAOwuE,GAAYxuE,CAAK;AAC5B,OAAK,CAACA,KAASA,EAAM,mBAAmB,aACnC,CAACD,KAAUA,EAAO,mBAAmB,UAAU;AAChD,QAAIC;AACA,aAAOwuE,GAAYxuE,CAAK;AACvB,QAAID;AACL,aAAOyuE,GAAYzuE,CAAM;AAAA,EACjC;AACJ;AACA,SAASyuE,GAAY3tE,GAAS;AAC1B,SAAAA,EAAQ,kBAAkB,QACtBk9D,MAAUl9D,EAAQ,cAClBA,EAAQ,YAAY,IACpBA,EAAQ,eAAe,KAEpBA;AACX;AACA,SAASytE,GAAcztE,GAAS;AAC5B,EAAAA,EAAQ,kBAAkB,SACtBA,EAAQ,iBACRA,EAAQ,YAAY,IACpBA,EAAQ,eAAe;AAE/B;AACA,SAAS0tE,GAA6B3mD,GAAM;AACxC,MAAI2F,IAAM3F,EAAK,IAAI;AACnB,EAAA2F,EAAI,oBAAoB,mBAAmB3F,EAAK,MAAM,kBAAkB;AACxE,MAAI65C,IAAS75C,EAAK,kBAAiB,GAC/BnjB,IAAOg9D,EAAO,YAAYruD,IAASquD,EAAO;AAC9C,EAAAl0C,EAAI,iBAAiB,mBAAmB3F,EAAK,MAAM,qBAAqB,MAAM;AAC1E,KAAI65C,EAAO,cAAch9D,KAAQg9D,EAAO,gBAAgBruD,OACpDma,EAAI,oBAAoB,mBAAmB3F,EAAK,MAAM,kBAAkB,GACxE,WAAW,MAAM;AACb,OAAI,CAACgmD,GAAoBhmD,CAAI,KAAKA,EAAK,MAAM,UAAU,YACnDA,EAAK,IAAI,UAAU,OAAO,2BAA2B;AAAA,IAC7D,GAAG,EAAE;AAAA,EAEb,CAAC;AACL;AACA,SAASqmD,GAAoBrmD,GAAM;AAC/B,MAAI65C,IAAS75C,EAAK,aAAY;AAC9B,MAAI,CAAC65C;AACD;AACJ,MAAIh9D,IAAOmjB,EAAK,cAAc,KAAK6mD,IAAMhqE,EAAK,YAAY;AAC1D,EAAIgqE,IACAhN,EAAO,SAASh9D,EAAK,YAAYg8D,GAASh8D,CAAI,IAAI,CAAC,IAEnDg9D,EAAO,SAASh9D,GAAM,CAAC,GAMvB,CAACgqE,KAAO,CAAC7mD,EAAK,MAAM,UAAU,WAAWg2C,MAAMkE,MAAc,OAC7Dr9D,EAAK,WAAW,IAChBA,EAAK,WAAW;AAExB;AACA,SAASspE,GAAkBnmD,GAAM+uC,GAAK;AAClC,MAAIA,aAAeH,GAAe;AAC9B,QAAImB,IAAO/vC,EAAK,QAAQ,OAAO+uC,EAAI,IAAI;AACvC,IAAIgB,KAAQ/vC,EAAK,yBACb8mD,GAAmB9mD,CAAI,GACnB+vC,KACAA,EAAK,WAAU,GACnB/vC,EAAK,uBAAuB+vC;AAAA,EAEpC;AAEI,IAAA+W,GAAmB9mD,CAAI;AAE/B;AAEA,SAAS8mD,GAAmB9mD,GAAM;AAC9B,EAAIA,EAAK,yBACDA,EAAK,qBAAqB,UAC1BA,EAAK,qBAAqB,aAAY,GAC1CA,EAAK,uBAAuB;AAEpC;AACA,SAAS+lD,GAAiB/lD,GAAM2tC,GAASC,GAAOtD,GAAM;AAClD,SAAOtqC,EAAK,SAAS,0BAA0B,CAAAqzB,MAAKA,EAAErzB,GAAM2tC,GAASC,CAAK,CAAC,KACpEO,EAAc,QAAQR,GAASC,GAAOtD,CAAI;AACrD;AACA,SAASyc,GAAqB/mD,GAAM;AAChC,SAAIA,EAAK,YAAY,CAACA,EAAK,SAAQ,IACxB,KACJimD,GAAajmD,CAAI;AAC5B;AACA,SAASimD,GAAajmD,GAAM;AACxB,MAAI+uC,IAAM/uC,EAAK,kBAAiB;AAChC,MAAI,CAAC+uC,EAAI;AACL,WAAO;AACX,MAAI;AAIA,WAAO/uC,EAAK,IAAI,SAAS+uC,EAAI,WAAW,YAAY,IAAIA,EAAI,WAAW,aAAaA,EAAI,UAAU,MAC7F/uC,EAAK,YAAYA,EAAK,IAAI,SAAS+uC,EAAI,UAAU,YAAY,IAAIA,EAAI,UAAU,aAAaA,EAAI,SAAS;AAAA,EAClH,QACU;AACN,WAAO;AAAA,EACX;AACJ;AACA,SAASiY,GAAmBhnD,GAAM;AAC9B,MAAI8gD,IAAY9gD,EAAK,QAAQ,WAAWA,EAAK,MAAM,UAAU,QAAQ,CAAC,GAClE65C,IAAS75C,EAAK,kBAAiB;AACnC,SAAOk5C,GAAqB4H,EAAU,MAAMA,EAAU,QAAQjH,EAAO,YAAYA,EAAO,YAAY;AACxG;AAEA,SAASoN,GAAmB3rE,GAAO2yD,GAAK;AACpC,MAAI,EAAE,SAAAN,GAAS,OAAAC,EAAK,IAAKtyD,EAAM,WAC3B4rE,IAAQjZ,IAAM,IAAIN,EAAQ,IAAIC,CAAK,IAAID,EAAQ,IAAIC,CAAK,GACxDrX,IAAU2wB,EAAM,OAAO,gBAAwBA,EAAM,QAAQ5rE,EAAM,IAAI,QAAQ2yD,IAAM,IAAIiZ,EAAM,MAAK,IAAKA,EAAM,OAAM,CAAE,IAAI,OAApFA;AAC3C,SAAO3wB,KAAUmX,EAAU,SAASnX,GAAQ0X,CAAG;AACnD;AACA,SAAS/qD,GAAM8c,GAAM+uC,GAAK;AACtB,SAAA/uC,EAAK,SAASA,EAAK,MAAM,GAAG,aAAa+uC,CAAG,EAAE,gBAAgB,GACvD;AACX;AACA,SAASoY,GAAmBnnD,GAAMiuC,GAAKmZ,GAAM;AACzC,MAAIrY,IAAM/uC,EAAK,MAAM;AACrB,MAAI+uC,aAAeZ;AACf,QAAIiZ,EAAK,QAAQ,GAAG,IAAI,IAAI;AACxB,UAAI,EAAE,OAAAxZ,EAAK,IAAKmB,GAAKlyD,IAAO+wD,EAAM,aAAa,OAAOK,IAAM,IAAIL,EAAM,aAAaA,EAAM;AACzF,UAAI,CAAC/wD,KAAQA,EAAK,UAAU,CAACA,EAAK;AAC9B,eAAO;AACX,UAAIwqE,IAAWrnD,EAAK,MAAM,IAAI,QAAQ4tC,EAAM,MAAM/wD,EAAK,YAAYoxD,IAAM,IAAI,KAAK,EAAE;AACpF,aAAO/qD,GAAM8c,GAAM,IAAImuC,EAAcY,EAAI,SAASsY,CAAQ,CAAC;AAAA,IAC/D,WACUtY,EAAI;AAGT,UAAI/uC,EAAK,eAAeiuC,IAAM,IAAI,YAAY,UAAU,GAAG;AAC5D,YAAIx9D,IAAOw2E,GAAmBjnD,EAAK,OAAOiuC,CAAG;AAC7C,eAAIx9D,KAASA,aAAgBm+D,IAClB1rD,GAAM8c,GAAMvvB,CAAI,IACpB;AAAA,MACX,WACS,EAAEqkE,MAAOsS,EAAK,QAAQ,GAAG,IAAI,KAAK;AACvC,YAAIxZ,IAAQmB,EAAI,OAAOlyD,IAAO+wD,EAAM,aAAa,OAAOK,IAAM,IAAIL,EAAM,aAAaA,EAAM,WAAWmC;AACtG,YAAI,CAAClzD,KAAQA,EAAK;AACd,iBAAO;AACX,YAAIyqE,IAAUrZ,IAAM,IAAIL,EAAM,MAAM/wD,EAAK,WAAW+wD,EAAM;AAC1D,eAAM/wD,EAAK,WAAWkzD,IAAO/vC,EAAK,QAAQ,OAAOsnD,CAAO,MAAM,CAACvX,EAAK,aAEhEnB,EAAc,aAAa/xD,CAAI,IACxBqG,GAAM8c,GAAM,IAAI4uC,EAAcX,IAAM,IAAIjuC,EAAK,MAAM,IAAI,QAAQ4tC,EAAM,MAAM/wD,EAAK,QAAQ,IAAI+wD,CAAK,CAAC,IAEpGyI,KAIEnzD,GAAM8c,GAAM,IAAImuC,EAAcnuC,EAAK,MAAM,IAAI,QAAQiuC,IAAM,IAAIqZ,IAAUA,IAAUzqE,EAAK,QAAQ,CAAC,CAAC,IAGlG,KAXA;AAAA,MAaf;AAAA,UA3BI,QAAO;AAAA,OA6BV;AAAA,QAAIkyD,aAAeH,KAAiBG,EAAI,KAAK;AAC9C,aAAO7rD,GAAM8c,GAAM,IAAImuC,EAAcF,IAAM,IAAIc,EAAI,MAAMA,EAAI,KAAK,CAAC;AAElE;AACD,UAAIt+D,IAAOw2E,GAAmBjnD,EAAK,OAAOiuC,CAAG;AAC7C,aAAIx9D,IACOyS,GAAM8c,GAAMvvB,CAAI,IACpB;AAAA,IACX;AAAA;AACJ;AACA,SAAS82E,GAAQ1qE,GAAM;AACnB,SAAOA,EAAK,YAAY,IAAIA,EAAK,UAAU,SAASA,EAAK,WAAW;AACxE;AACA,SAAS2qE,GAAYprB,GAAK6R,GAAK;AAC3B,MAAI8B,IAAO3T,EAAI;AACf,SAAO2T,KAAQA,EAAK,QAAQ,MAAM9B,IAAM,KAAK7R,EAAI,eAAeA,EAAI,YAAY;AACpF;AACA,SAASqrB,GAAiBznD,GAAMiuC,GAAK;AACjC,SAAOA,IAAM,IAAIyZ,GAAuB1nD,CAAI,IAAI2nD,GAAsB3nD,CAAI;AAC9E;AAGA,SAAS0nD,GAAuB1nD,GAAM;AAClC,MAAI+uC,IAAM/uC,EAAK,kBAAiB,GAC5BnjB,IAAOkyD,EAAI,WAAWvjD,IAASujD,EAAI;AACvC,MAAI,CAAClyD;AACD;AACJ,MAAI+qE,GAAUC,GAAYhH,IAAQ;AAMlC,OAFI5K,MAASp5D,EAAK,YAAY,KAAK2O,IAAS+7D,GAAQ1qE,CAAI,KAAK2qE,GAAY3qE,EAAK,WAAW2O,CAAM,GAAG,EAAE,MAChGq1D,IAAQ;AAER,QAAIr1D,IAAS,GAAG;AACZ,UAAI3O,EAAK,YAAY;AACjB;AAEC;AACD,YAAI1E,IAAS0E,EAAK,WAAW2O,IAAS,CAAC;AACvC,YAAIg8D,GAAYrvE,GAAQ,EAAE;AACtB,UAAAyvE,IAAW/qE,GACXgrE,IAAa,EAAEr8D;AAAA,iBAEVrT,EAAO,YAAY;AACxB,UAAA0E,IAAO1E,GACPqT,IAAS3O,EAAK,UAAU;AAAA;AAGxB;AAAA,MACR;AAAA,IACJ,OACK;AAAA,UAAIirE,GAAYjrE,CAAI;AACrB;AAEC;AACD,YAAIszD,IAAOtzD,EAAK;AAChB,eAAOszD,KAAQqX,GAAYrX,GAAM,EAAE;AAC/B,UAAAyX,IAAW/qE,EAAK,YAChBgrE,IAAahP,GAAS1I,CAAI,GAC1BA,IAAOA,EAAK;AAEhB,YAAKA;AAOD,UAAAtzD,IAAOszD,GACP3kD,IAAS+7D,GAAQ1qE,CAAI;AAAA,aARd;AAEP,cADAA,IAAOA,EAAK,YACRA,KAAQmjB,EAAK;AACb;AACJ,UAAAxU,IAAS;AAAA,QACb;AAAA,MAKJ;AAAA;AAEJ,EAAIq1D,IACAkH,GAAY/nD,GAAMnjB,GAAM2O,CAAM,IACzBo8D,KACLG,GAAY/nD,GAAM4nD,GAAUC,CAAU;AAC9C;AAGA,SAASF,GAAsB3nD,GAAM;AACjC,MAAI+uC,IAAM/uC,EAAK,kBAAiB,GAC5BnjB,IAAOkyD,EAAI,WAAWvjD,IAASujD,EAAI;AACvC,MAAI,CAAClyD;AACD;AACJ,MAAIqgE,IAAMqK,GAAQ1qE,CAAI,GAClB+qE,GAAUC;AACd;AACI,QAAIr8D,IAAS0xD,GAAK;AACd,UAAIrgE,EAAK,YAAY;AACjB;AACJ,UAAIzE,IAAQyE,EAAK,WAAW2O,CAAM;AAClC,UAAIg8D,GAAYpvE,GAAO,CAAC;AACpB,QAAAwvE,IAAW/qE,GACXgrE,IAAa,EAAEr8D;AAAA;AAGf;AAAA,IACR,OACK;AAAA,UAAIs8D,GAAYjrE,CAAI;AACrB;AAEC;AACD,YAAIpM,IAAOoM,EAAK;AAChB,eAAOpM,KAAQ+2E,GAAY/2E,GAAM,CAAC;AAC9B,UAAAm3E,IAAWn3E,EAAK,YAChBo3E,IAAahP,GAASpoE,CAAI,IAAI,GAC9BA,IAAOA,EAAK;AAEhB,YAAKA;AAOD,UAAAoM,IAAOpM,GACP+a,IAAS,GACT0xD,IAAMqK,GAAQ1qE,CAAI;AAAA,aATX;AAEP,cADAA,IAAOA,EAAK,YACRA,KAAQmjB,EAAK;AACb;AACJ,UAAAxU,IAAS0xD,IAAM;AAAA,QACnB;AAAA,MAMJ;AAAA;AAEJ,EAAI0K,KACAG,GAAY/nD,GAAM4nD,GAAUC,CAAU;AAC9C;AACA,SAASC,GAAY1rB,GAAK;AACtB,MAAI2T,IAAO3T,EAAI;AACf,SAAO2T,KAAQA,EAAK,QAAQA,EAAK,KAAK;AAC1C;AACA,SAASiY,GAAcnrE,GAAM2O,GAAQ;AACjC,SAAO3O,KAAQ2O,KAAU3O,EAAK,WAAW,UAAU,CAAC28D,GAAa38D,CAAI;AACjE,IAAA2O,IAASqtD,GAASh8D,CAAI,IAAI,GAC1BA,IAAOA,EAAK;AAEhB,SAAOA,KAAQ2O,IAAS3O,EAAK,WAAW,UAAQ;AAC5C,QAAIpM,IAAOoM,EAAK,WAAW2O,CAAM;AACjC,QAAI/a,EAAK,YAAY;AACjB,aAAOA;AACX,QAAIA,EAAK,YAAY,KAAKA,EAAK,mBAAmB;AAC9C;AACJ,IAAAoM,IAAOpM,GACP+a,IAAS;AAAA,EACb;AACJ;AACA,SAASy8D,GAAeprE,GAAM2O,GAAQ;AAClC,SAAO3O,KAAQ,CAAC2O,KAAU,CAACguD,GAAa38D,CAAI;AACxC,IAAA2O,IAASqtD,GAASh8D,CAAI,GACtBA,IAAOA,EAAK;AAEhB,SAAOA,KAAQ2O,KAAQ;AACnB,QAAI/a,IAAOoM,EAAK,WAAW2O,IAAS,CAAC;AACrC,QAAI/a,EAAK,YAAY;AACjB,aAAOA;AACX,QAAIA,EAAK,YAAY,KAAKA,EAAK,mBAAmB;AAC9C;AACJ,IAAAoM,IAAOpM,GACP+a,IAAS3O,EAAK,WAAW;AAAA,EAC7B;AACJ;AACA,SAASkrE,GAAY/nD,GAAMnjB,GAAM2O,GAAQ;AACrC,MAAI3O,EAAK,YAAY,GAAG;AACpB,QAAI1E,GAAQC;AACZ,KAAIA,IAAQ4vE,GAAcnrE,GAAM2O,CAAM,MAClC3O,IAAOzE,GACPoT,IAAS,MAEJrT,IAAS8vE,GAAeprE,GAAM2O,CAAM,OACzC3O,IAAO1E,GACPqT,IAASrT,EAAO,UAAU;AAAA,EAElC;AACA,MAAI42D,IAAM/uC,EAAK,aAAY;AAC3B,MAAI,CAAC+uC;AACD;AACJ,MAAI6K,GAAmB7K,CAAG,GAAG;AACzB,QAAIl0B,IAAQ,SAAS,YAAW;AAChC,IAAAA,EAAM,OAAOh+B,GAAM2O,CAAM,GACzBqvB,EAAM,SAASh+B,GAAM2O,CAAM,GAC3BujD,EAAI,gBAAe,GACnBA,EAAI,SAASl0B,CAAK;AAAA,EACtB,MACK,CAAIk0B,EAAI,UACTA,EAAI,OAAOlyD,GAAM2O,CAAM;AAE3B,EAAAwU,EAAK,YAAY,gBAAe;AAChC,MAAI,EAAE,OAAA1kB,EAAK,IAAK0kB;AAEhB,aAAW,MAAM;AACb,IAAIA,EAAK,SAAS1kB,KACd4qE,GAAelmD,CAAI;AAAA,EAC3B,GAAG,EAAE;AACT;AACA,SAASkoD,GAAcloD,GAAMpgB,GAAK;AAC9B,MAAIwpD,IAAOppC,EAAK,MAAM,IAAI,QAAQpgB,CAAG;AACrC,MAAI,EAAEu6D,MAAUlC,OAAY7O,EAAK,OAAO,eAAe;AACnD,QAAIkT,IAASt8C,EAAK,YAAYpgB,CAAG;AACjC,QAAIA,IAAMwpD,EAAK,SAAS;AACpB,UAAIjxD,IAAS6nB,EAAK,YAAYpgB,IAAM,CAAC,GACjCuoE,KAAOhwE,EAAO,MAAMA,EAAO,UAAU;AACzC,UAAIgwE,IAAM7L,EAAO,OAAO6L,IAAM7L,EAAO,UAAU,KAAK,IAAInkE,EAAO,OAAOmkE,EAAO,IAAI,IAAI;AACjF,eAAOnkE,EAAO,OAAOmkE,EAAO,OAAO,QAAQ;AAAA,IACnD;AACA,QAAI18D,IAAMwpD,EAAK,OAAO;AAClB,UAAIhxD,IAAQ4nB,EAAK,YAAYpgB,IAAM,CAAC,GAChCuoE,KAAO/vE,EAAM,MAAMA,EAAM,UAAU;AACvC,UAAI+vE,IAAM7L,EAAO,OAAO6L,IAAM7L,EAAO,UAAU,KAAK,IAAIlkE,EAAM,OAAOkkE,EAAO,IAAI,IAAI;AAChF,eAAOlkE,EAAM,OAAOkkE,EAAO,OAAO,QAAQ;AAAA,IAClD;AAAA,EACJ;AAEA,SADe,iBAAiBt8C,EAAK,GAAG,EAAE,aACvB,QAAQ,QAAQ;AACvC;AAIA,SAASooD,GAAiBpoD,GAAMiuC,GAAKmZ,GAAM;AACvC,MAAIrY,IAAM/uC,EAAK,MAAM;AAGrB,MAFI+uC,aAAeZ,KAAiB,CAACY,EAAI,SAASqY,EAAK,QAAQ,GAAG,IAAI,MAElEtS,MAAOsS,EAAK,QAAQ,GAAG,IAAI;AAC3B,WAAO;AACX,MAAI,EAAE,OAAA1xB,GAAO,KAAAC,EAAG,IAAKoZ;AACrB,MAAI,CAACrZ,EAAM,OAAO,iBAAiB11B,EAAK,eAAeiuC,IAAM,IAAI,OAAO,MAAM,GAAG;AAC7E,QAAIx9D,IAAOw2E,GAAmBjnD,EAAK,OAAOiuC,CAAG;AAC7C,QAAIx9D,KAASA,aAAgBm+D;AACzB,aAAO1rD,GAAM8c,GAAMvvB,CAAI;AAAA,EAC/B;AACA,MAAI,CAACilD,EAAM,OAAO,eAAe;AAC7B,QAAIja,IAAOwyB,IAAM,IAAIvY,IAAQC,GACzB0yB,IAAStZ,aAAeV,KAAeX,EAAU,KAAKjyB,GAAMwyB,CAAG,IAAIP,EAAU,SAASjyB,GAAMwyB,CAAG;AACnG,WAAOoa,IAASnlE,GAAM8c,GAAMqoD,CAAM,IAAI;AAAA,EAC1C;AACA,SAAO;AACX;AACA,SAASC,GAA2BtoD,GAAMiuC,GAAK;AAC3C,MAAI,EAAEjuC,EAAK,MAAM,qBAAqBmuC;AAClC,WAAO;AACX,MAAI,EAAE,OAAAP,GAAO,SAAAD,GAAS,OAAAhnC,EAAK,IAAK3G,EAAK,MAAM;AAC3C,MAAI,CAAC4tC,EAAM,WAAWD,CAAO;AACzB,WAAO;AACX,MAAI,CAAChnC;AACD,WAAO;AACX,MAAI3G,EAAK,eAAeiuC,IAAM,IAAI,YAAY,UAAU;AACpD,WAAO;AACX,MAAIsa,IAAW,CAAC3a,EAAM,eAAeK,IAAM,IAAIL,EAAM,aAAaA,EAAM;AACxE,MAAI2a,KAAY,CAACA,EAAS,QAAQ;AAC9B,QAAIzgC,IAAK9nB,EAAK,MAAM;AACpB,WAAIiuC,IAAM,IACNnmB,EAAG,OAAO8lB,EAAM,MAAM2a,EAAS,UAAU3a,EAAM,GAAG,IAElD9lB,EAAG,OAAO8lB,EAAM,KAAKA,EAAM,MAAM2a,EAAS,QAAQ,GACtDvoD,EAAK,SAAS8nB,CAAE,GACT;AAAA,EACX;AACA,SAAO;AACX;AACA,SAAS0gC,GAAexoD,GAAMnjB,GAAMvB,GAAO;AACvC,EAAA0kB,EAAK,YAAY,KAAI,GACrBnjB,EAAK,kBAAkBvB,GACvB0kB,EAAK,YAAY,MAAK;AAC1B;AAMA,SAASyoD,GAAmBzoD,GAAM;AAC9B,MAAI,CAACm2C,MAAUn2C,EAAK,MAAM,UAAU,MAAM,eAAe;AACrD,WAAO;AACX,MAAI,EAAE,WAAA0oD,GAAW,aAAAC,MAAgB3oD,EAAK,kBAAiB;AACvD,MAAI0oD,KAAaA,EAAU,YAAY,KAAKC,KAAe,KACvDD,EAAU,cAAcA,EAAU,WAAW,mBAAmB,SAAS;AACzE,QAAInvE,IAAQmvE,EAAU;AACtB,IAAAF,GAAexoD,GAAMzmB,GAAO,MAAM,GAClC,WAAW,MAAMivE,GAAexoD,GAAMzmB,GAAO,OAAO,GAAG,EAAE;AAAA,EAC7D;AACA,SAAO;AACX;AAOA,SAASqvE,GAAQ54D,GAAO;AACpB,MAAI5e,IAAS;AACb,SAAI4e,EAAM,YACN5e,KAAU,MACV4e,EAAM,YACN5e,KAAU,MACV4e,EAAM,WACN5e,KAAU,MACV4e,EAAM,aACN5e,KAAU,MACPA;AACX;AACA,SAASy3E,GAAe7oD,GAAMhQ,GAAO;AACjC,MAAI7O,IAAO6O,EAAM,SAASo3D,IAAOwB,GAAQ54D,CAAK;AAC9C,MAAI7O,KAAQ,KAAM2zD,MAAO3zD,KAAQ,MAAMimE,KAAQ;AAC3C,WAAOkB,GAA2BtoD,GAAM,EAAE,KAAKynD,GAAiBznD,GAAM,EAAE;AAEvE,MAAK7e,KAAQ,MAAM,CAAC6O,EAAM,YAAc8kD,MAAO3zD,KAAQ,MAAMimE,KAAQ;AACtE,WAAOkB,GAA2BtoD,GAAM,CAAC,KAAKynD,GAAiBznD,GAAM,CAAC;AAErE,MAAI7e,KAAQ,MAAMA,KAAQ;AAC3B,WAAO;AAEN,MAAIA,KAAQ,MAAO2zD,MAAO3zD,KAAQ,MAAMimE,KAAQ,KAAM;AACvD,QAAInZ,IAAM9sD,KAAQ,KAAM+mE,GAAcloD,GAAMA,EAAK,MAAM,UAAU,IAAI,KAAK,QAAQ,KAAK,IAAK;AAC5F,WAAOmnD,GAAmBnnD,GAAMiuC,GAAKmZ,CAAI,KAAKK,GAAiBznD,GAAMiuC,CAAG;AAAA,EAC5E,WACS9sD,KAAQ,MAAO2zD,MAAO3zD,KAAQ,MAAMimE,KAAQ,KAAM;AACvD,QAAInZ,IAAM9sD,KAAQ,KAAM+mE,GAAcloD,GAAMA,EAAK,MAAM,UAAU,IAAI,KAAK,QAAQ,IAAI,KAAM;AAC5F,WAAOmnD,GAAmBnnD,GAAMiuC,GAAKmZ,CAAI,KAAKK,GAAiBznD,GAAMiuC,CAAG;AAAA,EAC5E,OACK;AAAA,QAAI9sD,KAAQ,MAAO2zD,MAAO3zD,KAAQ,MAAMimE,KAAQ;AACjD,aAAOgB,GAAiBpoD,GAAM,IAAIonD,CAAI,KAAKK,GAAiBznD,GAAM,EAAE;AAEnE,QAAI7e,KAAQ,MAAO2zD,MAAO3zD,KAAQ,MAAMimE,KAAQ;AACjD,aAAOqB,GAAmBzoD,CAAI,KAAKooD,GAAiBpoD,GAAM,GAAGonD,CAAI,KAAKK,GAAiBznD,GAAM,CAAC;AAE7F,QAAIonD,MAAStS,KAAM,MAAM,SACzB3zD,KAAQ,MAAMA,KAAQ,MAAMA,KAAQ,MAAMA,KAAQ;AACnD,aAAO;AAAA;AAEX,SAAO;AACX;AAEA,SAAS2nE,GAAsB9oD,GAAMhP,GAAO;AACxC,EAAAgP,EAAK,SAAS,mBAAmB,OAAK;AAAE,IAAAhP,IAAQ,EAAEA,GAAOgP,CAAI;AAAA,EAAG,CAAC;AACjE,MAAIjV,IAAU,CAAA,GAAI,EAAE,SAAAlV,GAAS,WAAAo/C,GAAW,SAAAC,EAAO,IAAKlkC;AACpD,SAAOikC,IAAY,KAAKC,IAAU,KAAKr/C,EAAQ,cAAc,KAAKA,EAAQ,WAAW,cAAc,KAAG;AAClG,IAAAo/C,KACAC;AACA,QAAIr4C,IAAOhH,EAAQ;AACnB,IAAAkV,EAAQ,KAAKlO,EAAK,KAAK,MAAMA,EAAK,SAASA,EAAK,KAAK,eAAeA,EAAK,QAAQ,IAAI,GACrFhH,IAAUgH,EAAK;AAAA,EACnB;AACA,MAAI4iC,IAAazf,EAAK,SAAS,qBAAqB,KAAKm/B,GAAc,WAAWn/B,EAAK,MAAM,MAAM,GAC/F2F,IAAMojD,GAAW,GAAI9pE,IAAO0mB,EAAI,cAAc,KAAK;AACvD,EAAA1mB,EAAK,YAAYwgC,EAAW,kBAAkB5pC,GAAS,EAAE,UAAU8vB,EAAG,CAAE,CAAC;AACzE,MAAIo9B,IAAa9jD,EAAK,YAAY6jE,GAAWta,IAAW;AACxD,SAAOzF,KAAcA,EAAW,YAAY,MAAM+f,IAAYkG,GAAQjmB,EAAW,SAAS,YAAW,CAAE,MAAI;AACvG,aAASz0D,IAAIw0E,EAAU,SAAS,GAAGx0E,KAAK,GAAGA,KAAK;AAC5C,UAAIo2E,IAAU/+C,EAAI,cAAcm9C,EAAUx0E,CAAC,CAAC;AAC5C,aAAO2Q,EAAK;AACR,QAAAylE,EAAQ,YAAYzlE,EAAK,UAAU;AACvC,MAAAA,EAAK,YAAYylE,CAAO,GACxBlc;AAAA,IACJ;AACA,IAAAzF,IAAa9jD,EAAK;AAAA,EACtB;AACA,EAAI8jD,KAAcA,EAAW,YAAY,KACrCA,EAAW,aAAa,iBAAiB,GAAG9N,CAAS,IAAIC,CAAO,GAAGsT,IAAW,KAAKA,CAAQ,KAAK,EAAE,IAAI,KAAK,UAAUz9C,CAAO,CAAC,EAAE;AACnI,MAAItZ,IAAOuuB,EAAK,SAAS,2BAA2B,OAAK,EAAEhP,GAAOgP,CAAI,CAAC,KACnEhP,EAAM,QAAQ,YAAY,GAAGA,EAAM,QAAQ,MAAM;AAAA;AAAA,CAAM;AAC3D,SAAO,EAAE,KAAK/R,GAAM,MAAAxN,GAAM,OAAAuf,EAAK;AACnC;AAEA,SAASi4D,GAAmBjpD,GAAMvuB,GAAMmwB,GAAMsnD,GAAWnqB,GAAU;AAC/D,MAAIoqB,IAASpqB,EAAS,OAAO,KAAK,KAAK,MACnC3C,GAAKprC;AACT,MAAI,CAAC4Q,KAAQ,CAACnwB;AACV,WAAO;AACX,MAAI23E,IAAS,CAAC,CAAC33E,MAASy3E,KAAaC,KAAU,CAACvnD;AAChD,MAAIwnD,GAAQ;AAER,QADAppD,EAAK,SAAS,uBAAuB,CAAAqzB,MAAK;AAAE,MAAA5hD,IAAO4hD,EAAE5hD,GAAM03E,KAAUD,GAAWlpD,CAAI;AAAA,IAAG,CAAC,GACpFmpD;AACA,aAAAn4D,IAAQ,IAAI8/B,EAAMmD,EAAS,KAAKj0B,EAAK,MAAM,OAAO,KAAKvuB,EAAK,QAAQ,UAAU;AAAA,CAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAC3FuuB,EAAK,SAAS,mBAAmB,CAAAqzB,MAAK;AAAE,QAAAriC,IAAQqiC,EAAEriC,GAAOgP,GAAM,EAAI;AAAA,MAAG,CAAC,GAChEhP;AAEX,QAAIq4D,IAASrpD,EAAK,SAAS,uBAAuB,CAAAqzB,MAAKA,EAAE5hD,GAAMstD,GAAUmqB,GAAWlpD,CAAI,CAAC;AACzF,QAAIqpD;AACA,MAAAr4D,IAAQq4D;AAAA,SAEP;AACD,UAAIt0B,IAAQgK,EAAS,MAAK,GACtB,EAAE,QAAA/a,EAAM,IAAKhkB,EAAK,OAAOyf,IAAa0f,GAAc,WAAWnb,CAAM;AACzE,MAAAoY,IAAM,SAAS,cAAc,KAAK,GAClC3qD,EAAK,MAAM,eAAe,EAAE,QAAQ,CAAAS,MAAS;AACzC,YAAIu1C,IAAI2U,EAAI,YAAY,SAAS,cAAc,GAAG,CAAC;AACnD,QAAIlqD,KACAu1C,EAAE,YAAYhI,EAAW,cAAcuE,EAAO,KAAK9xC,GAAO6iD,CAAK,CAAC,CAAC;AAAA,MACzE,CAAC;AAAA,IACL;AAAA,EACJ;AAEI,IAAA/0B,EAAK,SAAS,uBAAuB,CAAAqzB,MAAK;AAAE,MAAAzxB,IAAOyxB,EAAEzxB,GAAM5B,CAAI;AAAA,IAAG,CAAC,GACnEo8B,IAAMktB,GAAS1nD,CAAI,GACfy0C,MACAkT,GAAsBntB,CAAG;AAEjC,MAAIotB,IAAcptB,KAAOA,EAAI,cAAc,iBAAiB,GACxDqtB,IAAYD,KAAe,gCAAgC,KAAKA,EAAY,aAAa,eAAe,KAAK,EAAE;AACnH,MAAIC,KAAaA,EAAU,CAAC;AACxB,aAASn7E,IAAI,CAACm7E,EAAU,CAAC,GAAGn7E,IAAI,GAAGA,KAAK;AACpC,UAAIiL,IAAQ6iD,EAAI;AAChB,aAAO7iD,KAASA,EAAM,YAAY;AAC9B,QAAAA,IAAQA,EAAM;AAClB,UAAI,CAACA;AACD;AACJ,MAAA6iD,IAAM7iD;AAAA,IACV;AAcJ,MAbKyX,MAEDA,KADagP,EAAK,SAAS,iBAAiB,KAAKA,EAAK,SAAS,WAAW,KAAKg8B,GAAU,WAAWh8B,EAAK,MAAM,MAAM,GACtG,WAAWo8B,GAAK;AAAA,IAC3B,oBAAoB,CAAC,EAAEgtB,KAAUK;AAAA,IACjC,SAAS1qB;AAAA,IACT,aAAa3C,GAAK;AACd,aAAIA,EAAI,YAAY,QAAQ,CAACA,EAAI,eAC7BA,EAAI,cAAc,CAACstB,GAAc,KAAKttB,EAAI,WAAW,QAAQ,IACtD,EAAE,QAAQ,GAAI,IAClB;AAAA,IACX;AAAA,EACZ,CAAS,IAEDqtB;AACA,IAAAz4D,IAAQ24D,GAAWC,GAAW54D,GAAO,CAACy4D,EAAU,CAAC,GAAG,CAACA,EAAU,CAAC,CAAC,GAAGA,EAAU,CAAC,CAAC;AAAA,WAGhFz4D,IAAQ8/B,EAAM,QAAQ+4B,GAAkB74D,EAAM,SAAS+tC,CAAQ,GAAG,EAAI,GAClE/tC,EAAM,aAAaA,EAAM,SAAS;AAClC,QAAIikC,IAAY,GAAGC,IAAU;AAC7B,aAASr4C,IAAOmU,EAAM,QAAQ,YAAYikC,IAAYjkC,EAAM,aAAa,CAACnU,EAAK,KAAK,KAAK,WAAWo4C,KAAap4C,IAAOA,EAAK;AAAY;AACzI,aAASA,IAAOmU,EAAM,QAAQ,WAAWkkC,IAAUlkC,EAAM,WAAW,CAACnU,EAAK,KAAK,KAAK,WAAWq4C,KAAWr4C,IAAOA,EAAK;AAAW;AACjI,IAAAmU,IAAQ44D,GAAW54D,GAAOikC,GAAWC,CAAO;AAAA,EAChD;AAEJ,SAAAl1B,EAAK,SAAS,mBAAmB,CAAAqzB,MAAK;AAAE,IAAAriC,IAAQqiC,EAAEriC,GAAOgP,GAAMopD,CAAM;AAAA,EAAG,CAAC,GAClEp4D;AACX;AACA,MAAM04D,KAAgB;AAStB,SAASG,GAAkBvkD,GAAUy5B,GAAU;AAC3C,MAAIz5B,EAAS,aAAa;AACtB,WAAOA;AACX,WAASE,IAAIu5B,EAAS,OAAOv5B,KAAK,GAAGA,KAAK;AAEtC,QAAI/uB,IADSsoD,EAAS,KAAKv5B,CAAC,EACT,eAAeu5B,EAAS,MAAMv5B,CAAC,CAAC,GAC/CskD,GAAU14E,IAAS,CAAA;AAmBvB,QAlBAk0B,EAAS,QAAQ,CAAAzoB,MAAQ;AACrB,UAAI,CAACzL;AACD;AACJ,UAAI6N,IAAOxI,EAAM,aAAaoG,EAAK,IAAI,GAAGktE;AAC1C,UAAI,CAAC9qE;AACD,eAAO7N,IAAS;AACpB,UAAI24E,IAAS34E,EAAO,UAAU04E,EAAS,UAAUE,GAAa/qE,GAAM6qE,GAAUjtE,GAAMzL,EAAOA,EAAO,SAAS,CAAC,GAAG,CAAC;AAC5G,QAAAA,EAAOA,EAAO,SAAS,CAAC,IAAI24E;AAAA,WAE3B;AACD,QAAI34E,EAAO,WACPA,EAAOA,EAAO,SAAS,CAAC,IAAI64E,GAAW74E,EAAOA,EAAO,SAAS,CAAC,GAAG04E,EAAS,MAAM;AACrF,YAAIzqE,IAAU6qE,GAAartE,GAAMoC,CAAI;AACrC,QAAA7N,EAAO,KAAKiO,CAAO,GACnB5I,IAAQA,EAAM,UAAU4I,EAAQ,IAAI,GACpCyqE,IAAW7qE;AAAA,MACf;AAAA,IACJ,CAAC,GACG7N;AACA,aAAO6iD,EAAS,KAAK7iD,CAAM;AAAA,EACnC;AACA,SAAOk0B;AACX;AACA,SAAS4kD,GAAartE,GAAMoC,GAAMke,IAAO,GAAG;AACxC,WAAS7uB,IAAI2Q,EAAK,SAAS,GAAG3Q,KAAK6uB,GAAM7uB;AACrC,IAAAuO,IAAOoC,EAAK3Q,CAAC,EAAE,OAAO,MAAM2lD,EAAS,KAAKp3C,CAAI,CAAC;AACnD,SAAOA;AACX;AAGA,SAASmtE,GAAa/qE,GAAM6qE,GAAUjtE,GAAMq3B,GAAS/O,GAAO;AACxD,MAAIA,IAAQlmB,EAAK,UAAUkmB,IAAQ2kD,EAAS,UAAU7qE,EAAKkmB,CAAK,KAAK2kD,EAAS3kD,CAAK,GAAG;AAClF,QAAIluB,IAAQ+yE,GAAa/qE,GAAM6qE,GAAUjtE,GAAMq3B,EAAQ,WAAW/O,IAAQ,CAAC;AAC3E,QAAIluB;AACA,aAAOi9B,EAAQ,KAAKA,EAAQ,QAAQ,aAAaA,EAAQ,aAAa,GAAGj9B,CAAK,CAAC;AAEnF,QADYi9B,EAAQ,eAAeA,EAAQ,UAAU,EAC3C,UAAU/O,KAASlmB,EAAK,SAAS,IAAIpC,EAAK,OAAOoC,EAAKkmB,IAAQ,CAAC,CAAC;AACtE,aAAO+O,EAAQ,KAAKA,EAAQ,QAAQ,OAAO+f,EAAS,KAAKi2B,GAAartE,GAAMoC,GAAMkmB,IAAQ,CAAC,CAAC,CAAC,CAAC;AAAA,EACtG;AACJ;AACA,SAAS8kD,GAAWptE,GAAMsoB,GAAO;AAC7B,MAAIA,KAAS;AACT,WAAOtoB;AACX,MAAIyoB,IAAWzoB,EAAK,QAAQ,aAAaA,EAAK,aAAa,GAAGotE,GAAWptE,EAAK,WAAWsoB,IAAQ,CAAC,CAAC,GAC/F83B,IAAOpgD,EAAK,eAAeA,EAAK,UAAU,EAAE,WAAWo3C,EAAS,OAAO,EAAI;AAC/E,SAAOp3C,EAAK,KAAKyoB,EAAS,OAAO23B,CAAI,CAAC;AAC1C;AACA,SAASktB,GAAW7kD,GAAUmW,GAAMte,GAAMokB,GAAIpc,GAAO+vB,GAAS;AAC1D,MAAIr4C,IAAO4+B,IAAO,IAAInW,EAAS,aAAaA,EAAS,WAAWruB,IAAQ4F,EAAK;AAC7E,SAAIyoB,EAAS,aAAa,MACtB4vB,IAAU,IACV/vB,IAAQoc,IAAK,MACbtqC,IAAQkzE,GAAWlzE,GAAOwkC,GAAMte,GAAMokB,GAAIpc,IAAQ,GAAG+vB,CAAO,IAC5D/vB,KAAShI,MACTlmB,IAAQwkC,IAAO,IAAI5+B,EAAK,eAAe,CAAC,EAAE,WAAW5F,GAAOi+C,KAAW/vB,CAAK,EAAE,OAAOluB,CAAK,IACpFA,EAAM,OAAO4F,EAAK,eAAeA,EAAK,UAAU,EAAE,WAAWo3C,EAAS,OAAO,EAAI,CAAC,IACrF3uB,EAAS,aAAamW,IAAO,IAAI,IAAInW,EAAS,aAAa,GAAGzoB,EAAK,KAAK5F,CAAK,CAAC;AACzF;AACA,SAAS2yE,GAAW54D,GAAOikC,GAAWC,GAAS;AAC3C,SAAID,IAAYjkC,EAAM,cAClBA,IAAQ,IAAI8/B,EAAMq5B,GAAWn5D,EAAM,SAAS,IAAIikC,GAAWjkC,EAAM,WAAW,GAAGA,EAAM,OAAO,GAAGikC,GAAWjkC,EAAM,OAAO,IACvHkkC,IAAUlkC,EAAM,YAChBA,IAAQ,IAAI8/B,EAAMq5B,GAAWn5D,EAAM,SAAS,GAAGkkC,GAASlkC,EAAM,SAAS,GAAG,CAAC,GAAGA,EAAM,WAAWkkC,CAAO,IACnGlkC;AACX;AAIA,MAAMg4D,KAAU;AAAA,EACZ,OAAO,CAAC,OAAO;AAAA,EACf,OAAO,CAAC,OAAO;AAAA,EACf,OAAO,CAAC,OAAO;AAAA,EACf,SAAS,CAAC,OAAO;AAAA,EACjB,UAAU,CAAC,OAAO;AAAA,EAClB,KAAK,CAAC,SAAS,UAAU;AAAA,EACzB,IAAI,CAAC,SAAS,OAAO;AAAA,EACrB,IAAI,CAAC,SAAS,SAAS,IAAI;AAAA,EAC3B,IAAI,CAAC,SAAS,SAAS,IAAI;AAC/B;AACA,IAAIoB,KAAe;AACnB,SAASrB,KAAc;AACnB,SAAOqB,OAAiBA,KAAe,SAAS,eAAe,mBAAmB,OAAO;AAC7F;AACA,IAAIC,KAAU;AACd,SAASC,GAAiB1oD,GAAM;AAC5B,MAAI2oD,IAAe,OAAO;AAC1B,SAAKA,KAKAF,OACDA,KAAUE,EAAa,iBAAiBA,EAAa,aAAa,wBAAwB,EAAE,YAAY,CAACpjB,MAAMA,GAAG,IAC/GkjB,GAAQ,WAAWzoD,CAAI,KANnBA;AAOf;AACA,SAAS0nD,GAAS1nD,GAAM;AACpB,MAAI4oD,IAAQ,sBAAsB,KAAK5oD,CAAI;AAC3C,EAAI4oD,MACA5oD,IAAOA,EAAK,MAAM4oD,EAAM,CAAC,EAAE,MAAM;AACrC,MAAIlzB,IAAMyxB,KAAc,cAAc,KAAK,GACvC0B,IAAW,mBAAmB,KAAK7oD,CAAI,GAAG3iB;AAI9C,OAHIA,IAAOwrE,KAAYzB,GAAQyB,EAAS,CAAC,EAAE,aAAa,OACpD7oD,IAAO3iB,EAAK,IAAI,CAAAjN,MAAK,MAAMA,IAAI,GAAG,EAAE,KAAK,EAAE,IAAI4vB,IAAO3iB,EAAK,IAAI,CAAAjN,MAAK,OAAOA,IAAI,GAAG,EAAE,QAAO,EAAG,KAAK,EAAE,IACzGslD,EAAI,YAAYgzB,GAAiB1oD,CAAI,GACjC3iB;AACA,aAAS3Q,IAAI,GAAGA,IAAI2Q,EAAK,QAAQ3Q;AAC7B,MAAAgpD,IAAMA,EAAI,cAAcr4C,EAAK3Q,CAAC,CAAC,KAAKgpD;AAC5C,SAAOA;AACX;AAMA,SAASiyB,GAAsBntB,GAAK;AAChC,MAAIl0B,IAAQk0B,EAAI,iBAAiB+d,KAAS,mCAAmC,4BAA4B;AACzG,WAAS7rE,IAAI,GAAGA,IAAI45B,EAAM,QAAQ55B,KAAK;AACnC,QAAIuO,IAAOqrB,EAAM55B,CAAC;AAClB,IAAIuO,EAAK,WAAW,UAAU,KAAKA,EAAK,eAAe,OAAYA,EAAK,cACpEA,EAAK,WAAW,aAAau/C,EAAI,cAAc,eAAe,GAAG,GAAGv/C,CAAI;AAAA,EAChF;AACJ;AACA,SAAS8sE,GAAW34D,GAAOjG,GAAS;AAChC,MAAI,CAACiG,EAAM;AACP,WAAOA;AACX,MAAIgzB,IAAShzB,EAAM,QAAQ,WAAW,KAAK,QAAQ3iB;AACnD,MAAI;AACA,IAAAA,IAAQ,KAAK,MAAM0c,CAAO;AAAA,EAC9B,QACU;AACN,WAAOiG;AAAA,EACX;AACA,MAAI,EAAE,SAAAnb,GAAS,WAAAo/C,GAAW,SAAAC,EAAO,IAAKlkC;AACtC,WAAS1iB,IAAID,EAAM,SAAS,GAAGC,KAAK,GAAGA,KAAK,GAAG;AAC3C,QAAIsK,IAAOorC,EAAO,MAAM31C,EAAMC,CAAC,CAAC;AAChC,QAAI,CAACsK,KAAQA,EAAK,iBAAgB;AAC9B;AACJ,IAAA/C,IAAUo+C,EAAS,KAAKr7C,EAAK,OAAOvK,EAAMC,IAAI,CAAC,GAAGuH,CAAO,CAAC,GAC1Do/C,KACAC;AAAA,EACJ;AACA,SAAO,IAAIpE,EAAMj7C,GAASo/C,GAAWC,CAAO;AAChD;AAIA,MAAMtoB,KAAW,CAAA,GACX89C,KAAe,CAAA,GACfC,KAAkB,EAAE,YAAY,IAAM,WAAW,GAAI;AAC3D,MAAMC,GAAW;AAAA,EACb,cAAc;AACV,SAAK,WAAW,IAChB,KAAK,YAAY,MACjB,KAAK,cAAc,MACnB,KAAK,kBAAkB,GACvB,KAAK,YAAY,EAAE,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,MAAM,IAAI,QAAQ,EAAC,GAC3D,KAAK,sBAAsB,MAC3B,KAAK,oBAAoB,GACzB,KAAK,eAAe,GACpB,KAAK,8BAA8B,IACnC,KAAK,YAAY,GACjB,KAAK,YAAY,GACjB,KAAK,mBAAmB,GACxB,KAAK,YAAY,IACjB,KAAK,kBAAkB,MACvB,KAAK,mBAAmB,IACxB,KAAK,mBAAmB,CAAA,GACxB,KAAK,qBAAqB,MAC1B,KAAK,gBAAgB,GAErB,KAAK,4BAA4B,GACjC,KAAK,iBAAiB,GACtB,KAAK,gBAAgB,uBAAO,OAAO,IAAI,GACvC,KAAK,qBAAqB;AAAA,EAC9B;AACJ;AACA,SAASC,GAAU7qD,GAAM;AACrB,WAAShQ,KAAS4c,IAAU;AACxB,QAAIpI,IAAUoI,GAAS5c,CAAK;AAC5B,IAAAgQ,EAAK,IAAI,iBAAiBhQ,GAAOgQ,EAAK,MAAM,cAAchQ,CAAK,IAAI,CAACA,MAAU;AAC1E,MAAI86D,GAAmB9qD,GAAMhQ,CAAK,KAAK,CAAC+6D,GAAiB/qD,GAAMhQ,CAAK,MAC/DgQ,EAAK,YAAY,EAAEhQ,EAAM,QAAQ06D,QAClClmD,EAAQxE,GAAMhQ,CAAK;AAAA,IAC3B,GAAG26D,GAAgB36D,CAAK,IAAI,EAAE,SAAS,GAAI,IAAK,MAAS;AAAA,EAC7D;AAIA,EAAImmD,MACAn2C,EAAK,IAAI,iBAAiB,SAAS,MAAM,IAAI,GACjDgrD,GAAgBhrD,CAAI;AACxB;AACA,SAASirD,GAAmBjrD,GAAMhgB,GAAQ;AACtC,EAAAggB,EAAK,MAAM,sBAAsBhgB,GACjCggB,EAAK,MAAM,oBAAoB,KAAK,IAAG;AAC3C;AACA,SAASkrD,GAAalrD,GAAM;AACxB,EAAAA,EAAK,YAAY,KAAI;AACrB,WAASpnB,KAAQonB,EAAK,MAAM;AACxB,IAAAA,EAAK,IAAI,oBAAoBpnB,GAAMonB,EAAK,MAAM,cAAcpnB,CAAI,CAAC;AACrE,eAAaonB,EAAK,MAAM,gBAAgB,GACxC,aAAaA,EAAK,MAAM,2BAA2B;AACvD;AACA,SAASgrD,GAAgBhrD,GAAM;AAC3B,EAAAA,EAAK,SAAS,mBAAmB,CAAAmrD,MAAmB;AAChD,aAASvyE,KAAQuyE;AACb,MAAKnrD,EAAK,MAAM,cAAcpnB,CAAI,KAC9BonB,EAAK,IAAI,iBAAiBpnB,GAAMonB,EAAK,MAAM,cAAcpnB,CAAI,IAAI,CAAAoX,MAAS+6D,GAAiB/qD,GAAMhQ,CAAK,CAAC;AAAA,EACnH,CAAC;AACL;AACA,SAAS+6D,GAAiB/qD,GAAMhQ,GAAO;AACnC,SAAOgQ,EAAK,SAAS,mBAAmB,CAAA4M,MAAY;AAChD,QAAIpI,IAAUoI,EAAS5c,EAAM,IAAI;AACjC,WAAOwU,IAAUA,EAAQxE,GAAMhQ,CAAK,KAAKA,EAAM,mBAAmB;AAAA,EACtE,CAAC;AACL;AACA,SAAS86D,GAAmB9qD,GAAMhQ,GAAO;AACrC,MAAI,CAACA,EAAM;AACP,WAAO;AACX,MAAIA,EAAM;AACN,WAAO;AACX,WAASnT,IAAOmT,EAAM,QAAQnT,KAAQmjB,EAAK,KAAKnjB,IAAOA,EAAK;AACxD,QAAI,CAACA,KAAQA,EAAK,YAAY,MACzBA,EAAK,cAAcA,EAAK,WAAW,UAAUmT,CAAK;AACnD,aAAO;AACf,SAAO;AACX;AACA,SAASo7D,GAAcprD,GAAMhQ,GAAO;AAChC,EAAI,CAAC+6D,GAAiB/qD,GAAMhQ,CAAK,KAAK4c,GAAS5c,EAAM,IAAI,MACpDgQ,EAAK,YAAY,EAAEhQ,EAAM,QAAQ06D,QAClC99C,GAAS5c,EAAM,IAAI,EAAEgQ,GAAMhQ,CAAK;AACxC;AACA06D,GAAa,UAAU,CAAC1qD,GAAMqrD,MAAW;AACrC,MAAIr7D,IAAQq7D;AAEZ,MADArrD,EAAK,MAAM,WAAWhQ,EAAM,WAAW,MAAMA,EAAM,UAC/C,CAAAs7D,GAAoBtrD,GAAMhQ,CAAK,MAEnCgQ,EAAK,MAAM,cAAchQ,EAAM,SAC/BgQ,EAAK,MAAM,kBAAkB,KAAK,IAAG,GAIjC,EAAAq6C,MAAWF,MAAUnqD,EAAM,WAAW;AAQ1C,QANIA,EAAM,WAAW,OACjBgQ,EAAK,YAAY,WAAU,GAK3Bo2C,MAAOpmD,EAAM,WAAW,MAAM,CAACA,EAAM,WAAW,CAACA,EAAM,UAAU,CAACA,EAAM,SAAS;AACjF,UAAI2N,IAAM,KAAK,IAAG;AAClB,MAAAqC,EAAK,MAAM,eAAerC,GAC1BqC,EAAK,MAAM,8BAA8B,WAAW,MAAM;AACtD,QAAIA,EAAK,MAAM,gBAAgBrC,MAC3BqC,EAAK,SAAS,iBAAiB,CAAAqzB,MAAKA,EAAErzB,GAAM85C,GAAS,IAAI,OAAO,CAAC,CAAC,GAClE95C,EAAK,MAAM,eAAe;AAAA,MAElC,GAAG,GAAG;AAAA,IACV,MACK,CAAIA,EAAK,SAAS,iBAAiB,CAAAqzB,MAAKA,EAAErzB,GAAMhQ,CAAK,CAAC,KAAK64D,GAAe7oD,GAAMhQ,CAAK,IACtFA,EAAM,eAAc,IAGpBi7D,GAAmBjrD,GAAM,KAAK;AAEtC;AACA0qD,GAAa,QAAQ,CAAC1qD,GAAMhQ,MAAU;AAClC,EAAIA,EAAM,WAAW,OACjBgQ,EAAK,MAAM,WAAW;AAC9B;AACA0qD,GAAa,WAAW,CAAC1qD,GAAMqrD,MAAW;AACtC,MAAIr7D,IAAQq7D;AACZ,MAAIC,GAAoBtrD,GAAMhQ,CAAK,KAAK,CAACA,EAAM,YAC3CA,EAAM,WAAW,CAACA,EAAM,UAAU8kD,MAAO9kD,EAAM;AAC/C;AACJ,MAAIgQ,EAAK,SAAS,kBAAkB,CAAAqzB,MAAKA,EAAErzB,GAAMhQ,CAAK,CAAC,GAAG;AACtD,IAAAA,EAAM,eAAc;AACpB;AAAA,EACJ;AACA,MAAI++C,IAAM/uC,EAAK,MAAM;AACrB,MAAI,EAAE+uC,aAAeZ,MAAkB,CAACY,EAAI,MAAM,WAAWA,EAAI,GAAG,GAAG;AACnE,QAAIt9D,IAAO,OAAO,aAAaue,EAAM,QAAQ,GACzCgvC,IAAQ,MAAMh/B,EAAK,MAAM,GAAG,WAAWvuB,CAAI,EAAE,eAAc;AAC/D,IAAI,CAAC,SAAS,KAAKA,CAAI,KAAK,CAACuuB,EAAK,SAAS,mBAAmB,CAAAqzB,MAAKA,EAAErzB,GAAM+uC,EAAI,MAAM,KAAKA,EAAI,IAAI,KAAKt9D,GAAMutD,CAAK,CAAC,KAC/Gh/B,EAAK,SAASg/B,GAAO,GACzBhvC,EAAM,eAAc;AAAA,EACxB;AACJ;AACA,SAASu7D,GAAYv7D,GAAO;AAAE,SAAO,EAAE,MAAMA,EAAM,SAAS,KAAKA,EAAM,QAAO;AAAI;AAClF,SAASw7D,GAAOx7D,GAAOy7D,GAAO;AAC1B,MAAIzO,IAAKyO,EAAM,IAAIz7D,EAAM,SAAS07D,IAAKD,EAAM,IAAIz7D,EAAM;AACvD,SAAOgtD,IAAKA,IAAK0O,IAAKA,IAAK;AAC/B;AACA,SAASC,GAAoB3rD,GAAM4rD,GAAUhsE,GAAK+L,GAAQqE,GAAO;AAC7D,MAAIrE,KAAU;AACV,WAAO;AACX,MAAIy9C,IAAOppC,EAAK,MAAM,IAAI,QAAQrU,CAAM;AACxC,WAASrd,IAAI86D,EAAK,QAAQ,GAAG96D,IAAI,GAAGA;AAChC,QAAI0xB,EAAK,SAAS4rD,GAAU,CAAAv4B,MAAK/kD,IAAI86D,EAAK,QAAQ/V,EAAErzB,GAAMpgB,GAAKwpD,EAAK,WAAWA,EAAK,OAAO96D,CAAC,GAAG0hB,GAAO,EAAI,IACpGqjC,EAAErzB,GAAMpgB,GAAKwpD,EAAK,KAAK96D,CAAC,GAAG86D,EAAK,OAAO96D,CAAC,GAAG0hB,GAAO,EAAK,CAAC;AAC1D,aAAO;AAEf,SAAO;AACX;AACA,SAAS67D,GAAgB7rD,GAAM0vC,GAAW1vD,GAAQ;AAG9C,MAFKggB,EAAK,WACNA,EAAK,MAAK,GACVA,EAAK,MAAM,UAAU,GAAG0vC,CAAS;AACjC;AACJ,MAAI5nB,IAAK9nB,EAAK,MAAM,GAAG,aAAa0vC,CAAS;AAEzC,EAAA5nB,EAAG,QAAQ,WAAW,EAAI,GAC9B9nB,EAAK,SAAS8nB,CAAE;AACpB;AACA,SAASgkC,GAAkB9rD,GAAMrU,GAAQ;AACrC,MAAIA,KAAU;AACV,WAAO;AACX,MAAIy9C,IAAOppC,EAAK,MAAM,IAAI,QAAQrU,CAAM,GAAG9O,IAAOusD,EAAK;AACvD,SAAIvsD,KAAQA,EAAK,UAAU+xD,EAAc,aAAa/xD,CAAI,KACtDgvE,GAAgB7rD,GAAM,IAAI4uC,EAAcxF,CAAI,CAAY,GACjD,MAEJ;AACX;AACA,SAAS2iB,GAAkB/rD,GAAMrU,GAAQ;AACrC,MAAIA,KAAU;AACV,WAAO;AACX,MAAIojD,IAAM/uC,EAAK,MAAM,WAAWgsD,GAAcC;AAC9C,EAAIld,aAAeH,MACfod,IAAejd,EAAI;AACvB,MAAI3F,IAAOppC,EAAK,MAAM,IAAI,QAAQrU,CAAM;AACxC,WAASrd,IAAI86D,EAAK,QAAQ,GAAG96D,IAAI,GAAGA,KAAK;AACrC,QAAIuO,IAAOvO,IAAI86D,EAAK,QAAQA,EAAK,YAAYA,EAAK,KAAK96D,CAAC;AACxD,QAAIsgE,EAAc,aAAa/xD,CAAI,GAAG;AAClC,MAAImvE,KAAgBjd,EAAI,MAAM,QAAQ,KAClCzgE,KAAKygE,EAAI,MAAM,SAAS3F,EAAK,OAAO2F,EAAI,MAAM,QAAQ,CAAC,KAAKA,EAAI,MAAM,MACtEkd,IAAW7iB,EAAK,OAAO2F,EAAI,MAAM,KAAK,IAEtCkd,IAAW7iB,EAAK,OAAO96D,CAAC;AAC5B;AAAA,IACJ;AAAA,EACJ;AACA,SAAI29E,KAAY,QACZJ,GAAgB7rD,GAAM4uC,EAAc,OAAO5uC,EAAK,MAAM,KAAKisD,CAAQ,CAAY,GACxE,MAGA;AAEf;AACA,SAASC,GAAkBlsD,GAAMpgB,GAAK+L,GAAQqE,GAAOm8D,GAAY;AAC7D,SAAOR,GAAoB3rD,GAAM,iBAAiBpgB,GAAK+L,GAAQqE,CAAK,KAChEgQ,EAAK,SAAS,eAAe,CAAAqzB,MAAKA,EAAErzB,GAAMpgB,GAAKoQ,CAAK,CAAC,MACpDm8D,IAAaJ,GAAkB/rD,GAAMrU,CAAM,IAAImgE,GAAkB9rD,GAAMrU,CAAM;AACtF;AACA,SAASygE,GAAkBpsD,GAAMpgB,GAAK+L,GAAQqE,GAAO;AACjD,SAAO27D,GAAoB3rD,GAAM,uBAAuBpgB,GAAK+L,GAAQqE,CAAK,KACtEgQ,EAAK,SAAS,qBAAqB,CAAAqzB,MAAKA,EAAErzB,GAAMpgB,GAAKoQ,CAAK,CAAC;AACnE;AACA,SAASq8D,GAAkBrsD,GAAMpgB,GAAK+L,GAAQqE,GAAO;AACjD,SAAO27D,GAAoB3rD,GAAM,uBAAuBpgB,GAAK+L,GAAQqE,CAAK,KACtEgQ,EAAK,SAAS,qBAAqB,CAAAqzB,MAAKA,EAAErzB,GAAMpgB,GAAKoQ,CAAK,CAAC,KAC3Ds8D,GAAmBtsD,GAAMrU,GAAQqE,CAAK;AAC9C;AACA,SAASs8D,GAAmBtsD,GAAMrU,GAAQqE,GAAO;AAC7C,MAAIA,EAAM,UAAU;AAChB,WAAO;AACX,MAAI2V,IAAM3F,EAAK,MAAM;AACrB,MAAIrU,KAAU;AACV,WAAIga,EAAI,iBACJkmD,GAAgB7rD,GAAMmuC,EAAc,OAAOxoC,GAAK,GAAGA,EAAI,QAAQ,IAAI,CAAY,GACxE,MAEJ;AAEX,MAAIyjC,IAAOzjC,EAAI,QAAQha,CAAM;AAC7B,WAASrd,IAAI86D,EAAK,QAAQ,GAAG96D,IAAI,GAAGA,KAAK;AACrC,QAAIuO,IAAOvO,IAAI86D,EAAK,QAAQA,EAAK,YAAYA,EAAK,KAAK96D,CAAC,GACpDg5E,IAAUle,EAAK,OAAO96D,CAAC;AAC3B,QAAIuO,EAAK;AACL,MAAAgvE,GAAgB7rD,GAAMmuC,EAAc,OAAOxoC,GAAK2hD,IAAU,GAAGA,IAAU,IAAIzqE,EAAK,QAAQ,IAAI,CAAY;AAAA,aACnG+xD,EAAc,aAAa/xD,CAAI;AACpC,MAAAgvE,GAAgB7rD,GAAM4uC,EAAc,OAAOjpC,GAAK2hD,CAAO,CAAY;AAAA;AAEnE;AACJ,WAAO;AAAA,EACX;AACJ;AACA,SAASiF,GAAcvsD,GAAM;AACzB,SAAOwsD,GAAexsD,CAAI;AAC9B;AACA,MAAMysD,KAAqB3X,KAAM,YAAY;AAC7CloC,GAAS,YAAY,CAAC5M,GAAMqrD,MAAW;AACnC,MAAIr7D,IAAQq7D;AACZ,EAAArrD,EAAK,MAAM,WAAWhQ,EAAM;AAC5B,MAAI08D,IAAUH,GAAcvsD,CAAI,GAC5BrC,IAAM,KAAK,IAAG,GAAI/kB,IAAO;AAC7B,EAAI+kB,IAAMqC,EAAK,MAAM,UAAU,OAAO,OAAOwrD,GAAOx7D,GAAOgQ,EAAK,MAAM,SAAS,KAAK,CAAChQ,EAAMy8D,EAAkB,KACzGzsD,EAAK,MAAM,UAAU,UAAUhQ,EAAM,WACjCgQ,EAAK,MAAM,UAAU,QAAQ,gBAC7BpnB,IAAO,gBACFonB,EAAK,MAAM,UAAU,QAAQ,kBAClCpnB,IAAO,iBAEfonB,EAAK,MAAM,YAAY,EAAE,MAAMrC,GAAK,GAAG3N,EAAM,SAAS,GAAGA,EAAM,SAAS,MAAApX,GAAM,QAAQoX,EAAM,OAAM;AAClG,MAAIpQ,IAAMogB,EAAK,YAAYurD,GAAYv7D,CAAK,CAAC;AAC7C,EAAKpQ,MAEDhH,KAAQ,iBACJonB,EAAK,MAAM,aACXA,EAAK,MAAM,UAAU,KAAI,GAC7BA,EAAK,MAAM,YAAY,IAAI2sD,GAAU3sD,GAAMpgB,GAAKoQ,GAAO,CAAC,CAAC08D,CAAO,MAE1D9zE,KAAQ,gBAAgBwzE,KAAoBC,IAAmBrsD,GAAMpgB,EAAI,KAAKA,EAAI,QAAQoQ,CAAK,IACrGA,EAAM,eAAc,IAGpBi7D,GAAmBjrD,GAAM,SAAS;AAE1C;AACA,MAAM2sD,GAAU;AAAA,EACZ,YAAY3sD,GAAMpgB,GAAKoQ,GAAO08D,GAAS;AACnC,SAAK,OAAO1sD,GACZ,KAAK,MAAMpgB,GACX,KAAK,QAAQoQ,GACb,KAAK,UAAU08D,GACf,KAAK,uBAAuB,IAC5B,KAAK,YAAY,MACjB,KAAK,WAAW1sD,EAAK,MAAM,KAC3B,KAAK,aAAa,CAAC,CAAChQ,EAAMy8D,EAAkB,GAC5C,KAAK,eAAez8D,EAAM;AAC1B,QAAImpD,GAAYyT;AAChB,QAAIhtE,EAAI,SAAS;AACb,MAAAu5D,IAAan5C,EAAK,MAAM,IAAI,OAAOpgB,EAAI,MAAM,GAC7CgtE,IAAYhtE,EAAI;AAAA,SAEf;AACD,UAAIwpD,IAAOppC,EAAK,MAAM,IAAI,QAAQpgB,EAAI,GAAG;AACzC,MAAAu5D,IAAa/P,EAAK,QAClBwjB,IAAYxjB,EAAK,QAAQA,EAAK,OAAM,IAAK;AAAA,IAC7C;AACA,UAAMtrD,IAAS4uE,IAAU,OAAO18D,EAAM,QAChCs0D,IAAaxmE,IAASkiB,EAAK,QAAQ,YAAYliB,GAAQ,EAAI,IAAI;AACrE,SAAK,SAASwmE,KAAcA,EAAW,QAAQ,YAAY,IAAIA,EAAW,UAAU;AACpF,QAAI,EAAE,WAAA5U,MAAc1vC,EAAK;AACzB,KAAIhQ,EAAM,UAAU,KAChBmpD,EAAW,KAAK,KAAK,aAAaA,EAAW,KAAK,KAAK,eAAe,MACtEzJ,aAAqBd,KAAiBc,EAAU,QAAQkd,KAAald,EAAU,KAAKkd,OACpF,KAAK,YAAY;AAAA,MACb,MAAMzT;AAAA,MACN,KAAKyT;AAAA,MACL,SAAS,CAAC,EAAE,KAAK,UAAU,CAAC,KAAK,OAAO;AAAA,MACxC,eAAe,CAAC,EAAE,KAAK,UAAU3W,MAAS,CAAC,KAAK,OAAO,aAAa,iBAAiB;AAAA,IACrG,IACY,KAAK,UAAU,KAAK,cAAc,KAAK,UAAU,WAAW,KAAK,UAAU,mBAC3E,KAAK,KAAK,YAAY,KAAI,GACtB,KAAK,UAAU,YACf,KAAK,OAAO,YAAY,KACxB,KAAK,UAAU,iBACf,WAAW,MAAM;AACb,MAAI,KAAK,KAAK,MAAM,aAAa,QAC7B,KAAK,OAAO,aAAa,mBAAmB,OAAO;AAAA,IAC3D,GAAG,EAAE,GACT,KAAK,KAAK,YAAY,MAAK,IAE/Bj2C,EAAK,KAAK,iBAAiB,WAAW,KAAK,KAAK,KAAK,GAAG,KAAK,IAAI,CAAC,GAClEA,EAAK,KAAK,iBAAiB,aAAa,KAAK,OAAO,KAAK,KAAK,KAAK,IAAI,CAAC,GACxEirD,GAAmBjrD,GAAM,SAAS;AAAA,EACtC;AAAA,EACA,OAAO;AACH,SAAK,KAAK,KAAK,oBAAoB,WAAW,KAAK,EAAE,GACrD,KAAK,KAAK,KAAK,oBAAoB,aAAa,KAAK,IAAI,GACrD,KAAK,aAAa,KAAK,WACvB,KAAK,KAAK,YAAY,KAAI,GACtB,KAAK,UAAU,WACf,KAAK,OAAO,gBAAgB,WAAW,GACvC,KAAK,UAAU,iBACf,KAAK,OAAO,gBAAgB,iBAAiB,GACjD,KAAK,KAAK,YAAY,MAAK,IAE3B,KAAK,wBACL,WAAW,MAAMkmD,GAAe,KAAK,IAAI,CAAC,GAC9C,KAAK,KAAK,MAAM,YAAY;AAAA,EAChC;AAAA,EACA,GAAGl2D,GAAO;AAEN,QADA,KAAK,KAAI,GACL,CAAC,KAAK,KAAK,IAAI,SAASA,EAAM,MAAM;AACpC;AACJ,QAAIpQ,IAAM,KAAK;AACf,IAAI,KAAK,KAAK,MAAM,OAAO,KAAK,aAC5BA,IAAM,KAAK,KAAK,YAAY2rE,GAAYv7D,CAAK,CAAC,IAClD,KAAK,mBAAmBA,CAAK,GACzB,KAAK,gBAAgB,CAACpQ,IACtBqrE,GAAmB,KAAK,MAAM,SAAS,IAElCiB,GAAkB,KAAK,MAAMtsE,EAAI,KAAKA,EAAI,QAAQoQ,GAAO,KAAK,UAAU,IAC7EA,EAAM,eAAc,IAEfA,EAAM,UAAU,MACpB,KAAK;AAAA,IAEDmmD,MAAU,KAAK,aAAa,CAAC,KAAK,UAAU,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQjDgE,MAAU,CAAC,KAAK,KAAK,MAAM,UAAU,WAClC,KAAK,IAAI,KAAK,IAAIv6D,EAAI,MAAM,KAAK,KAAK,MAAM,UAAU,IAAI,GAAG,KAAK,IAAIA,EAAI,MAAM,KAAK,KAAK,MAAM,UAAU,EAAE,CAAC,KAAK,MAC1HisE,GAAgB,KAAK,MAAMne,EAAU,KAAK,KAAK,KAAK,MAAM,IAAI,QAAQ9tD,EAAI,GAAG,CAAC,CAAY,GAC1FoQ,EAAM,eAAc,KAGpBi7D,GAAmB,KAAK,MAAM,SAAS;AAAA,EAE/C;AAAA,EACA,KAAKj7D,GAAO;AACR,SAAK,mBAAmBA,CAAK,GAC7Bi7D,GAAmB,KAAK,MAAM,SAAS,GACnCj7D,EAAM,WAAW,KACjB,KAAK,KAAI;AAAA,EACjB;AAAA,EACA,mBAAmBA,GAAO;AACtB,IAAI,CAAC,KAAK,iBAAiB,KAAK,IAAI,KAAK,MAAM,IAAIA,EAAM,OAAO,IAAI,KAChE,KAAK,IAAI,KAAK,MAAM,IAAIA,EAAM,OAAO,IAAI,OACzC,KAAK,eAAe;AAAA,EAC5B;AACJ;AACA4c,GAAS,aAAa,CAAA5M,MAAQ;AAC1B,EAAAA,EAAK,MAAM,YAAY,KAAK,IAAG,GAC/BusD,GAAcvsD,CAAI,GAClBirD,GAAmBjrD,GAAM,SAAS;AACtC;AACA4M,GAAS,YAAY,CAAA5M,MAAQ;AACzB,EAAAA,EAAK,MAAM,YAAY,KAAK,IAAG,GAC/BirD,GAAmBjrD,GAAM,SAAS;AACtC;AACA4M,GAAS,cAAc,CAAA5M,MAAQusD,GAAcvsD,CAAI;AACjD,SAASsrD,GAAoBtrD,GAAMhQ,GAAO;AACtC,SAAIgQ,EAAK,YACE,KAWPm2C,MAAU,KAAK,IAAInmD,EAAM,YAAYgQ,EAAK,MAAM,kBAAkB,IAAI,OACtEA,EAAK,MAAM,qBAAqB,MACzB,MAEJ;AACX;AAEA,MAAM6sD,KAAqBxS,KAAU,MAAO;AAC5CqQ,GAAa,mBAAmBA,GAAa,oBAAoB,CAAA1qD,MAAQ;AACrE,MAAI,CAACA,EAAK,WAAW;AACjB,IAAAA,EAAK,YAAY,MAAK;AACtB,QAAI,EAAE,OAAA1kB,EAAK,IAAK0kB,GAAMopC,IAAO9tD,EAAM,UAAU;AAC7C,QAAIA,EAAM,qBAAqB6yD,MAC1B7yD,EAAM,eACF,CAAC8tD,EAAK,cAAcA,EAAK,gBAAgBA,EAAK,WAAW,MAAM,KAAK,CAAAr3D,MAAKA,EAAE,KAAK,KAAK,cAAc,EAAK;AAE7G,MAAAiuB,EAAK,aAAaA,EAAK,MAAM,eAAeopC,EAAK,MAAK,GACtDojB,GAAexsD,GAAM,EAAI,GACzBA,EAAK,aAAa;AAAA,aAGlBwsD,GAAexsD,GAAM,CAAC1kB,EAAM,UAAU,KAAK,GAIvC26D,MAAS36D,EAAM,UAAU,SAAS8tD,EAAK,gBAAgB,CAACA,EAAK,cAAcA,EAAK,WAAW,MAAM,QAAQ;AACzG,UAAI2F,IAAM/uC,EAAK,kBAAiB;AAChC,eAASnjB,IAAOkyD,EAAI,WAAWvjD,IAASujD,EAAI,aAAalyD,KAAQA,EAAK,YAAY,KAAK2O,KAAU,KAAI;AACjG,YAAIrT,IAASqT,IAAS,IAAI3O,EAAK,YAAYA,EAAK,WAAW2O,IAAS,CAAC;AACrE,YAAI,CAACrT;AACD;AACJ,YAAIA,EAAO,YAAY,GAAG;AACtB,cAAI42D,IAAM/uC,EAAK,aAAY;AAC3B,UAAI+uC,KACAA,EAAI,SAAS52D,GAAQA,EAAO,UAAU,MAAM;AAChD;AAAA,QACJ;AAEI,UAAA0E,IAAO1E,GACPqT,IAAS;AAAA,MAEjB;AAAA,IACJ;AAEJ,IAAAwU,EAAK,MAAM,YAAY;AAAA,EAC3B;AACA,EAAA8sD,GAAmB9sD,GAAM6sD,EAAkB;AAC/C;AACAnC,GAAa,iBAAiB,CAAC1qD,GAAMhQ,MAAU;AAC3C,EAAIgQ,EAAK,cACLA,EAAK,MAAM,YAAY,IACvBA,EAAK,MAAM,qBAAqBhQ,EAAM,WACtCgQ,EAAK,MAAM,4BAA4BA,EAAK,YAAY,eAAc,EAAG,SAASA,EAAK,MAAM,gBAAgB,GAC7GA,EAAK,MAAM,kBAAkB,MACzBA,EAAK,MAAM,6BACX,QAAQ,QAAO,EAAG,KAAK,MAAMA,EAAK,YAAY,OAAO,GACzDA,EAAK,MAAM,iBACX8sD,GAAmB9sD,GAAM,EAAE;AAEnC;AACA,SAAS8sD,GAAmB9sD,GAAM+sD,GAAO;AACrC,eAAa/sD,EAAK,MAAM,gBAAgB,GACpC+sD,IAAQ,OACR/sD,EAAK,MAAM,mBAAmB,WAAW,MAAMwsD,GAAexsD,CAAI,GAAG+sD,CAAK;AAClF;AACA,SAASC,GAAiBhtD,GAAM;AAK5B,OAJIA,EAAK,cACLA,EAAK,MAAM,YAAY,IACvBA,EAAK,MAAM,qBAAqBitD,GAAwB,IAErDjtD,EAAK,MAAM,iBAAiB,SAAS;AACxC,IAAAA,EAAK,MAAM,iBAAiB,IAAG,EAAG,iBAAgB;AAC1D;AACA,SAASktD,GAAoBltD,GAAM;AAC/B,MAAI+uC,IAAM/uC,EAAK,kBAAiB;AAChC,MAAI,CAAC+uC,EAAI;AACL,WAAO;AACX,MAAIuH,IAAamD,GAAiB1K,EAAI,WAAWA,EAAI,WAAW,GAC5Doe,IAAYzT,GAAgB3K,EAAI,WAAWA,EAAI,WAAW;AAC9D,MAAIuH,KAAc6W,KAAa7W,KAAc6W,GAAW;AACpD,QAAIC,IAAYD,EAAU,YAAYE,IAAcrtD,EAAK,YAAY;AACrE,QAAIs2C,KAAc+W,KAAeF,KAAaE;AAC1C,aAAOA;AACX,QAAI,CAACD,KAAa,CAACA,EAAU,OAAOD,EAAU,SAAS;AACnD,aAAOA;AAEN,QAAIntD,EAAK,MAAM,mBAAmBmtD,GAAW;AAC9C,UAAIG,IAAahX,EAAW;AAC5B,UAAI,EAAE,CAACgX,KAAc,CAACA,EAAW,OAAOhX,EAAW,SAAS;AACxD,eAAO6W;AAAA,IACf;AAAA,EACJ;AACA,SAAO7W,KAAc6W;AACzB;AACA,SAASF,KAA2B;AAChC,MAAIj9D,IAAQ,SAAS,YAAY,OAAO;AACxC,SAAAA,EAAM,UAAU,SAAS,IAAM,EAAI,GAC5BA,EAAM;AACjB;AAIA,SAASw8D,GAAexsD,GAAMutD,IAAa,IAAO;AAC9C,MAAI,EAAAlT,MAAWr6C,EAAK,YAAY,gBAAgB,IAIhD;AAAA,QAFAA,EAAK,YAAY,WAAU,GAC3BgtD,GAAiBhtD,CAAI,GACjButD,KAAcvtD,EAAK,WAAWA,EAAK,QAAQ,OAAO;AAClD,UAAI+uC,IAAM4W,GAAiB3lD,CAAI,GAAG20B,IAAM30B,EAAK,MAAM;AACnD,aAAI+uC,KAAO,CAACA,EAAI,GAAGpa,CAAG,IAClB30B,EAAK,SAASA,EAAK,MAAM,GAAG,aAAa+uC,CAAG,CAAC,KACvC/uC,EAAK,cAAcutD,MAAe,CAAC54B,EAAI,MAAM,KAAKA,EAAI,MAAM,YAAYA,EAAI,EAAE,CAAC,EAAE,gBACvF30B,EAAK,SAASA,EAAK,MAAM,GAAG,gBAAe,CAAE,IAE7CA,EAAK,YAAYA,EAAK,KAAK,GACxB;AAAA,IACX;AACA,WAAO;AAAA;AACX;AACA,SAASwtD,GAAYxtD,GAAMo8B,GAAK;AAG5B,MAAI,CAACp8B,EAAK,IAAI;AACV;AACJ,MAAI/gB,IAAO+gB,EAAK,IAAI,WAAW,YAAY,SAAS,cAAc,KAAK,CAAC;AACxE,EAAA/gB,EAAK,YAAYm9C,CAAG,GACpBn9C,EAAK,MAAM,UAAU;AACrB,MAAI8vD,IAAM,aAAY,GAAIl0B,IAAQ,SAAS,YAAW;AACtD,EAAAA,EAAM,mBAAmBuhB,CAAG,GAI5Bp8B,EAAK,IAAI,KAAI,GACb+uC,EAAI,gBAAe,GACnBA,EAAI,SAASl0B,CAAK,GAClB,WAAW,MAAM;AACb,IAAI57B,EAAK,cACLA,EAAK,WAAW,YAAYA,CAAI,GACpC+gB,EAAK,MAAK;AAAA,EACd,GAAG,EAAE;AACT;AAIA,MAAMytD,KAAsBzX,MAAMkE,KAAa,MAC1C9D,MAAOkE,KAAiB;AAC7B1tC,GAAS,OAAO89C,GAAa,MAAM,CAAC1qD,GAAMqrD,MAAW;AACjD,MAAIr7D,IAAQq7D,GACRtc,IAAM/uC,EAAK,MAAM,WAAW0tD,IAAM19D,EAAM,QAAQ;AACpD,MAAI++C,EAAI;AACJ;AAEJ,MAAIp1D,IAAO8zE,KAAqB,OAAOz9D,EAAM,eACzCgB,IAAQ+9C,EAAI,WAAW,EAAE,KAAA3S,GAAK,MAAA3qD,MAASq3E,GAAsB9oD,GAAMhP,CAAK;AAC5E,EAAIrX,KACAqW,EAAM,eAAc,GACpBrW,EAAK,UAAS,GACdA,EAAK,QAAQ,aAAayiD,EAAI,SAAS,GACvCziD,EAAK,QAAQ,cAAclI,CAAI,KAG/B+7E,GAAYxtD,GAAMo8B,CAAG,GAErBsxB,KACA1tD,EAAK,SAASA,EAAK,MAAM,GAAG,kBAAkB,iBAAiB,QAAQ,WAAW,KAAK,CAAC;AAChG;AACA,SAAS2tD,GAAgB38D,GAAO;AAC5B,SAAOA,EAAM,aAAa,KAAKA,EAAM,WAAW,KAAKA,EAAM,QAAQ,cAAc,IAAIA,EAAM,QAAQ,aAAa;AACpH;AACA,SAAS48D,GAAa5tD,GAAMhQ,GAAO;AAC/B,MAAI,CAACgQ,EAAK,IAAI;AACV;AACJ,MAAIkpD,IAAYlpD,EAAK,MAAM,YAAYA,EAAK,MAAM,UAAU,MAAM,OAAO,KAAK,KAAK,MAC/EliB,IAASkiB,EAAK,IAAI,WAAW,YAAY,SAAS,cAAckpD,IAAY,aAAa,KAAK,CAAC;AACnG,EAAKA,MACDprE,EAAO,kBAAkB,SAC7BA,EAAO,MAAM,UAAU,8CACvBA,EAAO,MAAK;AACZ,MAAI+vE,IAAQ7tD,EAAK,MAAM,YAAYA,EAAK,MAAM,eAAe;AAC7D,aAAW,MAAM;AACb,IAAAA,EAAK,MAAK,GACNliB,EAAO,cACPA,EAAO,WAAW,YAAYA,CAAM,GACpCorE,IACA4E,GAAQ9tD,GAAMliB,EAAO,OAAO,MAAM+vE,GAAO79D,CAAK,IAE9C89D,GAAQ9tD,GAAMliB,EAAO,aAAaA,EAAO,WAAW+vE,GAAO79D,CAAK;AAAA,EACxE,GAAG,EAAE;AACT;AACA,SAAS89D,GAAQ9tD,GAAMvuB,GAAMmwB,GAAMmsD,GAAa/9D,GAAO;AACnD,MAAIgB,IAAQi4D,GAAmBjpD,GAAMvuB,GAAMmwB,GAAMmsD,GAAa/tD,EAAK,MAAM,UAAU,KAAK;AACxF,MAAIA,EAAK,SAAS,eAAe,CAAAqzB,MAAKA,EAAErzB,GAAMhQ,GAAOgB,KAAS8/B,EAAM,KAAK,CAAC;AACtE,WAAO;AACX,MAAI,CAAC9/B;AACD,WAAO;AACX,MAAIg9D,IAAaL,GAAgB38D,CAAK,GAClC82B,IAAKkmC,IACHhuD,EAAK,MAAM,GAAG,qBAAqBguD,GAAYD,CAAW,IAC1D/tD,EAAK,MAAM,GAAG,iBAAiBhP,CAAK;AAC1C,SAAAgP,EAAK,SAAS8nB,EAAG,eAAc,EAAG,QAAQ,SAAS,EAAI,EAAE,QAAQ,WAAW,OAAO,CAAC,GAC7E;AACX;AACA,SAASmmC,GAAQC,GAAe;AAC5B,MAAIz8E,IAAOy8E,EAAc,QAAQ,YAAY,KAAKA,EAAc,QAAQ,MAAM;AAC9E,MAAIz8E;AACA,WAAOA;AACX,MAAI08E,IAAOD,EAAc,QAAQ,eAAe;AAChD,SAAOC,IAAOA,EAAK,QAAQ,UAAU,GAAG,IAAI;AAChD;AACAzD,GAAa,QAAQ,CAAC1qD,GAAMqrD,MAAW;AACnC,MAAIr7D,IAAQq7D;AAKZ,MAAIrrD,EAAK,aAAa,CAACq6C;AACnB;AACJ,MAAI1gE,IAAO8zE,KAAqB,OAAOz9D,EAAM,eACzC69D,IAAQ7tD,EAAK,MAAM,YAAYA,EAAK,MAAM,eAAe;AAC7D,EAAIrmB,KAAQm0E,GAAQ9tD,GAAMiuD,GAAQt0E,CAAI,GAAGA,EAAK,QAAQ,WAAW,GAAGk0E,GAAO79D,CAAK,IAC5EA,EAAM,eAAc,IAEpB49D,GAAa5tD,GAAMhQ,CAAK;AAChC;AACA,MAAMo+D,GAAS;AAAA,EACX,YAAYp9D,GAAOghB,GAAMn1B,GAAM;AAC3B,SAAK,QAAQmU,GACb,KAAK,OAAOghB,GACZ,KAAK,OAAOn1B;AAAA,EAChB;AACJ;AACA,MAAMwxE,KAAmBvZ,KAAM,WAAW;AAC1C,SAASwZ,GAAUtuD,GAAMhQ,GAAO;AAC5B,MAAIu+D,IAAQvuD,EAAK,SAAS,cAAc,CAAA/S,MAAQ,CAACA,EAAK+C,CAAK,CAAC;AAC5D,SAAOu+D,KAAwB,CAACv+D,EAAMq+D,EAAgB;AAC1D;AACAzhD,GAAS,YAAY,CAAC5M,GAAMqrD,MAAW;AACnC,MAAIr7D,IAAQq7D,GACRmD,IAAYxuD,EAAK,MAAM;AAG3B,MAFIwuD,KACAA,EAAU,KAAI,GACd,CAACx+D,EAAM;AACP;AACJ,MAAI++C,IAAM/uC,EAAK,MAAM,WACjBpgB,IAAMmvD,EAAI,QAAQ,OAAO/uC,EAAK,YAAYurD,GAAYv7D,CAAK,CAAC,GAC5DnT;AACJ,MAAI,EAAA+C,KAAOA,EAAI,OAAOmvD,EAAI,QAAQnvD,EAAI,QAAQmvD,aAAeH,IAAgBG,EAAI,KAAK,IAAIA,EAAI;AACzF,QAAIyf,KAAaA,EAAU;AAC5B,MAAA3xE,IAAO+xD,EAAc,OAAO5uC,EAAK,MAAM,KAAKwuD,EAAU,UAAU,GAAG;AAAA,aAE9Dx+D,EAAM,UAAUA,EAAM,OAAO,YAAY,GAAG;AACjD,UAAI+/C,IAAO/vC,EAAK,QAAQ,YAAYhQ,EAAM,QAAQ,EAAI;AACtD,MAAI+/C,KAAQA,EAAK,KAAK,KAAK,KAAK,aAAaA,KAAQ/vC,EAAK,YACtDnjB,IAAO+xD,EAAc,OAAO5uC,EAAK,MAAM,KAAK+vC,EAAK,SAAS;AAAA,IAClE;AAAA;AACA,MAAI0e,KAAgB5xE,KAAQmjB,EAAK,MAAM,WAAW,QAAO,GACrD,EAAE,KAAAo8B,GAAK,MAAA3qD,GAAM,OAAAuf,EAAK,IAAK83D,GAAsB9oD,GAAMyuD,CAAY;AAEnE,GAAI,CAACz+D,EAAM,aAAa,MAAM,UAAU,CAACmqD,MAAUC,KAAiB,QAChEpqD,EAAM,aAAa,UAAS,GAChCA,EAAM,aAAa,QAAQy9D,KAAqB,SAAS,aAAarxB,EAAI,SAAS,GAEnFpsC,EAAM,aAAa,gBAAgB,YAC9By9D,MACDz9D,EAAM,aAAa,QAAQ,cAAcve,CAAI,GACjDuuB,EAAK,WAAW,IAAIouD,GAASp9D,GAAOs9D,GAAUtuD,GAAMhQ,CAAK,GAAGnT,CAAI;AACpE;AACA+vB,GAAS,UAAU,CAAA5M,MAAQ;AACvB,MAAI0uD,IAAW1uD,EAAK;AACpB,SAAO,WAAW,MAAM;AACpB,IAAIA,EAAK,YAAY0uD,MACjB1uD,EAAK,WAAW;AAAA,EACxB,GAAG,EAAE;AACT;AACA0qD,GAAa,WAAWA,GAAa,YAAY,CAAC9rD,GAAG,MAAM,EAAE,eAAc;AAC3E8rD,GAAa,OAAO,CAAC1qD,GAAMqrD,MAAW;AAClC,MAAIr7D,IAAQq7D,GACRqD,IAAW1uD,EAAK;AAEpB,MADAA,EAAK,WAAW,MACZ,CAAChQ,EAAM;AACP;AACJ,MAAI2+D,IAAW3uD,EAAK,YAAYurD,GAAYv7D,CAAK,CAAC;AAClD,MAAI,CAAC2+D;AACD;AACJ,MAAIC,IAAS5uD,EAAK,MAAM,IAAI,QAAQ2uD,EAAS,GAAG,GAC5C39D,IAAQ09D,KAAYA,EAAS;AACjC,EAAI19D,IACAgP,EAAK,SAAS,mBAAmB,CAAAqzB,MAAK;AAAE,IAAAriC,IAAQqiC,EAAEriC,GAAOgP,GAAM,EAAK;AAAA,EAAG,CAAC,IAGxEhP,IAAQi4D,GAAmBjpD,GAAMiuD,GAAQj+D,EAAM,YAAY,GAAGy9D,KAAqB,OAAOz9D,EAAM,aAAa,QAAQ,WAAW,GAAG,IAAO4+D,CAAM;AAEpJ,MAAI58C,IAAO,CAAC,EAAE08C,KAAYJ,GAAUtuD,GAAMhQ,CAAK;AAC/C,MAAIgQ,EAAK,SAAS,cAAc,CAAAqzB,MAAKA,EAAErzB,GAAMhQ,GAAOgB,KAAS8/B,EAAM,OAAO9e,CAAI,CAAC,GAAG;AAC9E,IAAAhiB,EAAM,eAAc;AACpB;AAAA,EACJ;AACA,MAAI,CAACgB;AACD;AACJ,EAAAhB,EAAM,eAAc;AACpB,MAAIu6C,IAAYv5C,IAAQo5C,GAAUpqC,EAAK,MAAM,KAAK4uD,EAAO,KAAK59D,CAAK,IAAI49D,EAAO;AAC9E,EAAIrkB,KAAa,SACbA,IAAYqkB,EAAO;AACvB,MAAI9mC,IAAK9nB,EAAK,MAAM;AACpB,MAAIgS,GAAM;AACN,QAAI,EAAE,MAAAn1B,EAAI,IAAK6xE;AACf,IAAI7xE,IACAA,EAAK,QAAQirC,CAAE,IAEfA,EAAG,gBAAe;AAAA,EAC1B;AACA,MAAIloC,IAAMkoC,EAAG,QAAQ,IAAIyiB,CAAS,GAC9BskB,IAAS79D,EAAM,aAAa,KAAKA,EAAM,WAAW,KAAKA,EAAM,QAAQ,cAAc,GACnF89D,IAAehnC,EAAG;AAKtB,MAJI+mC,IACA/mC,EAAG,iBAAiBloC,GAAKA,GAAKoR,EAAM,QAAQ,UAAU,IAEtD82B,EAAG,aAAaloC,GAAKA,GAAKoR,CAAK,GAC/B82B,EAAG,IAAI,GAAGgnC,CAAY;AACtB;AACJ,MAAI1lB,IAAOthB,EAAG,IAAI,QAAQloC,CAAG;AAC7B,MAAIivE,KAAUjgB,EAAc,aAAa59C,EAAM,QAAQ,UAAU,KAC7Do4C,EAAK,aAAaA,EAAK,UAAU,WAAWp4C,EAAM,QAAQ,UAAU;AACpE,IAAA82B,EAAG,aAAa,IAAI8mB,EAAcxF,CAAI,CAAC;AAAA,OAEtC;AACD,QAAIzoD,IAAMmnC,EAAG,QAAQ,IAAIyiB,CAAS;AAClC,IAAAziB,EAAG,QAAQ,KAAKA,EAAG,QAAQ,KAAK,SAAS,CAAC,EAAE,QAAQ,CAAConB,GAAOC,GAAKC,GAAUC,MAAU1uD,IAAM0uD,CAAK,GAChGvnB,EAAG,aAAai+B,GAAiB/lD,GAAMopC,GAAMthB,EAAG,IAAI,QAAQnnC,CAAG,CAAC,CAAC;AAAA,EACrE;AACA,EAAAqf,EAAK,MAAK,GACVA,EAAK,SAAS8nB,EAAG,QAAQ,WAAW,MAAM,CAAC;AAC/C;AACAlb,GAAS,QAAQ,CAAA5M,MAAQ;AACrB,EAAAA,EAAK,MAAM,YAAY,KAAK,IAAG,GAC1BA,EAAK,YACNA,EAAK,YAAY,KAAI,GACrBA,EAAK,IAAI,UAAU,IAAI,qBAAqB,GAC5CA,EAAK,YAAY,MAAK,GACtBA,EAAK,UAAU,IACf,WAAW,MAAM;AACb,IAAIA,EAAK,WAAWA,EAAK,SAAQ,KAAM,CAACA,EAAK,YAAY,iBAAiB,GAAGA,EAAK,kBAAiB,CAAE,KACjGkmD,GAAelmD,CAAI;AAAA,EAC3B,GAAG,EAAE;AAEb;AACA4M,GAAS,OAAO,CAAC5M,GAAMqrD,MAAW;AAC9B,MAAIr7D,IAAQq7D;AACZ,EAAIrrD,EAAK,YACLA,EAAK,YAAY,KAAI,GACrBA,EAAK,IAAI,UAAU,OAAO,qBAAqB,GAC/CA,EAAK,YAAY,MAAK,GAClBhQ,EAAM,iBAAiBgQ,EAAK,IAAI,SAAShQ,EAAM,aAAa,KAC5DgQ,EAAK,YAAY,iBAAiB,MAAK,GAC3CA,EAAK,UAAU;AAEvB;AACA4M,GAAS,cAAc,CAAC5M,GAAMqrD,MAAW;AAMrC,MAAIlR,MAAUE,MALFgR,EAKmB,aAAa,yBAAyB;AACjE,IAAArrD,EAAK,YAAY,UAAS;AAC1B,QAAI,EAAE,gBAAA+uD,MAAmB/uD,EAAK;AAC9B,eAAW,MAAM;AAMb,UALIA,EAAK,MAAM,kBAAkB+uD,MAGjC/uD,EAAK,IAAI,KAAI,GACbA,EAAK,MAAK,GACNA,EAAK,SAAS,iBAAiB,CAAAqzB,MAAKA,EAAErzB,GAAM85C,GAAS,GAAG,WAAW,CAAC,CAAC;AACrE;AACJ,UAAI,EAAE,SAAAzI,EAAO,IAAKrxC,EAAK,MAAM;AAE7B,MAAIqxC,KAAWA,EAAQ,MAAM,KACzBrxC,EAAK,SAASA,EAAK,MAAM,GAAG,OAAOqxC,EAAQ,MAAM,GAAGA,EAAQ,GAAG,EAAE,eAAc,CAAE;AAAA,IACzF,GAAG,EAAE;AAAA,EACT;AACJ;AAEA,SAAS/d,KAAQo3B;AACb,EAAA99C,GAAS0mB,CAAI,IAAIo3B,GAAap3B,CAAI;AAEtC,SAAS07B,GAAYh3E,GAAGC,GAAG;AACvB,MAAID,KAAKC;AACL,WAAO;AACX,WAASwvC,KAAKzvC;AACV,QAAIA,EAAEyvC,CAAC,MAAMxvC,EAAEwvC,CAAC;AACZ,aAAO;AACf,WAASA,KAAKxvC;AACV,QAAI,EAAEwvC,KAAKzvC;AACP,aAAO;AACf,SAAO;AACX;AACA,MAAMi3E,GAAW;AAAA,EACb,YAAYxvB,GAAOxE,GAAM;AACrB,SAAK,QAAQwE,GACb,KAAK,OAAOxE,KAAQi0B,IACpB,KAAK,OAAO,KAAK,KAAK,QAAQ;AAAA,EAClC;AAAA,EACA,IAAI5pB,GAAS6pB,GAAM3jE,GAAQ4jE,GAAW;AAClC,QAAI,EAAE,KAAAxvE,GAAK,SAAAivD,EAAO,IAAKvJ,EAAQ,UAAU6pB,EAAK,OAAOC,GAAW,KAAK,OAAO,IAAI,KAAK,CAAC;AACtF,WAAOvgB,IAAU,OAAO,IAAIwgB,GAAWzvE,IAAM4L,GAAQ5L,IAAM4L,GAAQ,IAAI;AAAA,EAC3E;AAAA,EACA,QAAQ;AAAE,WAAO;AAAA,EAAM;AAAA,EACvB,GAAG+oC,GAAO;AACN,WAAO,QAAQA,KACVA,aAAiB06B,OACb,KAAK,KAAK,OAAO,KAAK,KAAK,OAAO16B,EAAM,KAAK,OAC1C,KAAK,SAASA,EAAM,SAASy6B,GAAY,KAAK,MAAMz6B,EAAM,IAAI;AAAA,EAC9E;AAAA,EACA,QAAQ13C,GAAM;AACV,IAAI,KAAK,KAAK,WACV,KAAK,KAAK,QAAQA,CAAI;AAAA,EAC9B;AACJ;AACA,MAAMyyE,GAAW;AAAA,EACb,YAAYh2E,GAAO2hD,GAAM;AACrB,SAAK,QAAQ3hD,GACb,KAAK,OAAO2hD,KAAQi0B;AAAA,EACxB;AAAA,EACA,IAAI5pB,GAAS6pB,GAAM3jE,GAAQ4jE,GAAW;AAClC,QAAIjyD,IAAOmoC,EAAQ,IAAI6pB,EAAK,OAAOC,GAAW,KAAK,KAAK,iBAAiB,KAAK,CAAC,IAAI5jE,GAC/E+1B,IAAK+jB,EAAQ,IAAI6pB,EAAK,KAAKC,GAAW,KAAK,KAAK,eAAe,IAAI,EAAE,IAAI5jE;AAC7E,WAAO2R,KAAQokB,IAAK,OAAO,IAAI8tC,GAAWlyD,GAAMokB,GAAI,IAAI;AAAA,EAC5D;AAAA,EACA,MAAM3iB,GAAGuwD,GAAM;AAAE,WAAOA,EAAK,OAAOA,EAAK;AAAA,EAAI;AAAA,EAC7C,GAAG56B,GAAO;AACN,WAAO,QAAQA,KACVA,aAAiB+6B,MAAcN,GAAY,KAAK,OAAOz6B,EAAM,KAAK,KAC/Dy6B,GAAY,KAAK,MAAMz6B,EAAM,IAAI;AAAA,EAC7C;AAAA,EACA,OAAO,GAAG46B,GAAM;AAAE,WAAOA,EAAK,gBAAgBG;AAAA,EAAY;AAAA,EAC1D,UAAU;AAAA,EAAE;AAChB;AACA,MAAMt0B,GAAS;AAAA,EACX,YAAY1hD,GAAO2hD,GAAM;AACrB,SAAK,QAAQ3hD,GACb,KAAK,OAAO2hD,KAAQi0B;AAAA,EACxB;AAAA,EACA,IAAI5pB,GAAS6pB,GAAM3jE,GAAQ4jE,GAAW;AAClC,QAAIjyD,IAAOmoC,EAAQ,UAAU6pB,EAAK,OAAOC,GAAW,CAAC;AACrD,QAAIjyD,EAAK;AACL,aAAO;AACX,QAAIokB,IAAK+jB,EAAQ,UAAU6pB,EAAK,KAAKC,GAAW,EAAE;AAClD,WAAI7tC,EAAG,WAAWA,EAAG,OAAOpkB,EAAK,MACtB,OACJ,IAAIkyD,GAAWlyD,EAAK,MAAM3R,GAAQ+1B,EAAG,MAAM/1B,GAAQ,IAAI;AAAA,EAClE;AAAA,EACA,MAAM3O,GAAMsyE,GAAM;AACd,QAAI,EAAE,OAAA37E,GAAO,QAAAgY,EAAM,IAAK3O,EAAK,QAAQ,UAAUsyE,EAAK,IAAI,GAAG51E;AAC3D,WAAOiS,KAAU2jE,EAAK,QAAQ,EAAE51E,IAAQsD,EAAK,MAAMrJ,CAAK,GAAG,UAAUgY,IAASjS,EAAM,YAAY41E,EAAK;AAAA,EACzG;AAAA,EACA,GAAG56B,GAAO;AACN,WAAO,QAAQA,KACVA,aAAiByG,MAAYg0B,GAAY,KAAK,OAAOz6B,EAAM,KAAK,KAC7Dy6B,GAAY,KAAK,MAAMz6B,EAAM,IAAI;AAAA,EAC7C;AAAA,EACA,UAAU;AAAA,EAAE;AAChB;AAMA,MAAM86B,GAAW;AAAA;AAAA;AAAA;AAAA,EAIb,YAIAlyD,GAKAokB,GAIA3oC,GAAM;AACF,SAAK,OAAOukB,GACZ,KAAK,KAAKokB,GACV,KAAK,OAAO3oC;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA,EAIA,KAAKukB,GAAMokB,GAAI;AACX,WAAO,IAAI8tC,GAAWlyD,GAAMokB,GAAI,KAAK,IAAI;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA,EAIA,GAAGgT,GAAO/oC,IAAS,GAAG;AAClB,WAAO,KAAK,KAAK,GAAG+oC,EAAM,IAAI,KAAK,KAAK,OAAO/oC,KAAU+oC,EAAM,QAAQ,KAAK,KAAK/oC,KAAU+oC,EAAM;AAAA,EACrG;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI+Q,GAAS95C,GAAQ4jE,GAAW;AAC5B,WAAO,KAAK,KAAK,IAAI9pB,GAAS,MAAM95C,GAAQ4jE,CAAS;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,OAAO,OAAOxvE,GAAK6/C,GAAOxE,GAAM;AAC5B,WAAO,IAAIo0B,GAAWzvE,GAAKA,GAAK,IAAIqvE,GAAWxvB,GAAOxE,CAAI,CAAC;AAAA,EAC/D;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,OAAO99B,GAAMokB,GAAIjoC,GAAO2hD,GAAM;AACjC,WAAO,IAAIo0B,GAAWlyD,GAAMokB,GAAI,IAAI+tC,GAAWh2E,GAAO2hD,CAAI,CAAC;AAAA,EAC/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,KAAK99B,GAAMokB,GAAIjoC,GAAO2hD,GAAM;AAC/B,WAAO,IAAIo0B,GAAWlyD,GAAMokB,GAAI,IAAIyZ,GAAS1hD,GAAO2hD,CAAI,CAAC;AAAA,EAC7D;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,OAAO;AAAE,WAAO,KAAK,KAAK;AAAA,EAAM;AAAA;AAAA;AAAA;AAAA,EAIpC,IAAI,SAAS;AAAE,WAAO,KAAK,gBAAgBq0B;AAAA,EAAY;AAAA;AAAA;AAAA;AAAA,EAIvD,IAAI,SAAS;AAAE,WAAO,KAAK,gBAAgBL;AAAA,EAAY;AAC3D;AACA,MAAMjiD,KAAO,CAAA,GAAIkiD,KAAS,CAAA;AAO1B,MAAMK,GAAc;AAAA;AAAA;AAAA;AAAA,EAIhB,YAAYC,GAAOjqD,GAAU;AACzB,SAAK,QAAQiqD,EAAM,SAASA,IAAQxiD,IACpC,KAAK,WAAWzH,EAAS,SAASA,IAAWyH;AAAA,EACjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,OAAOrH,GAAK8pD,GAAa;AAC5B,WAAOA,EAAY,SAASC,GAAUD,GAAa9pD,GAAK,GAAGupD,EAAM,IAAIvoD;AAAA,EACzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,KAAKvmB,GAAOO,GAAK82D,GAAW;AACxB,QAAIrmE,IAAS,CAAA;AACb,gBAAK,UAAUgP,KAAgB,GAAWO,KAAc,KAAWvP,GAAQ,GAAGqmE,CAAS,GAChFrmE;AAAA,EACX;AAAA,EACA,UAAUgP,GAAOO,GAAKvP,GAAQoa,GAAQisD,GAAW;AAC7C,aAASnpE,IAAI,GAAGA,IAAI,KAAK,MAAM,QAAQA,KAAK;AACxC,UAAI6gF,IAAO,KAAK,MAAM7gF,CAAC;AACvB,MAAI6gF,EAAK,QAAQxuE,KAAOwuE,EAAK,MAAM/uE,MAAU,CAACq3D,KAAaA,EAAU0X,EAAK,IAAI,MAC1E/9E,EAAO,KAAK+9E,EAAK,KAAKA,EAAK,OAAO3jE,GAAQ2jE,EAAK,KAAK3jE,CAAM,CAAC;AAAA,IACnE;AACA,aAASld,IAAI,GAAGA,IAAI,KAAK,SAAS,QAAQA,KAAK;AAC3C,UAAI,KAAK,SAASA,CAAC,IAAIqS,KAAO,KAAK,SAASrS,IAAI,CAAC,IAAI8R,GAAO;AACxD,YAAIuvE,IAAW,KAAK,SAASrhF,CAAC,IAAI;AAClC,aAAK,SAASA,IAAI,CAAC,EAAE,UAAU8R,IAAQuvE,GAAUhvE,IAAMgvE,GAAUv+E,GAAQoa,IAASmkE,GAAUlY,CAAS;AAAA,MACzG;AAAA,EAER;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAInS,GAAS3/B,GAAK55B,GAAS;AACvB,WAAI,QAAQ46B,MAAS2+B,EAAQ,KAAK,UAAU,IACjC,OACJ,KAAK,SAASA,GAAS3/B,GAAK,GAAG,GAAG55B,KAAWmjF,EAAM;AAAA,EAC9D;AAAA;AAAA;AAAA;AAAA,EAIA,SAAS5pB,GAASzoD,GAAM2O,GAAQ4jE,GAAWrjF,GAAS;AAChD,QAAI6jF;AACJ,aAASthF,IAAI,GAAGA,IAAI,KAAK,MAAM,QAAQA,KAAK;AACxC,UAAI43D,IAAS,KAAK,MAAM53D,CAAC,EAAE,IAAIg3D,GAAS95C,GAAQ4jE,CAAS;AACzD,MAAIlpB,KAAUA,EAAO,KAAK,MAAMrpD,GAAMqpD,CAAM,KACvC0pB,MAAaA,IAAW,CAAA,IAAK,KAAK1pB,CAAM,IACpCn6D,EAAQ,YACbA,EAAQ,SAAS,KAAK,MAAMuC,CAAC,EAAE,IAAI;AAAA,IAC3C;AACA,WAAI,KAAK,SAAS,SACPuhF,GAAY,KAAK,UAAUD,KAAY,CAAA,GAAItqB,GAASzoD,GAAM2O,GAAQ4jE,GAAWrjF,CAAO,IAEpF6jF,IAAW,IAAIL,GAAcK,EAAS,KAAKE,EAAK,GAAG9iD,EAAI,IAAIrG;AAAA,EAC1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,IAAIhB,GAAK8pD,GAAa;AAClB,WAAKA,EAAY,SAEb,QAAQ9oD,KACD4oD,GAAc,OAAO5pD,GAAK8pD,CAAW,IACzC,KAAK,SAAS9pD,GAAK8pD,GAAa,CAAC,IAH7B;AAAA,EAIf;AAAA,EACA,SAAS9pD,GAAK8pD,GAAajkE,GAAQ;AAC/B,QAAI+Z,GAAUu3C,IAAa;AAC3B,IAAAn3C,EAAI,QAAQ,CAACoqD,GAAWC,MAAgB;AACpC,UAAIC,IAAaD,IAAcxkE,GAAQynC;AACvC,UAAMA,IAAQi9B,GAAiBT,GAAaM,GAAWE,CAAU,GAIjE;AAAA,aAFK1qD,MACDA,IAAW,KAAK,SAAS,MAAK,IAC3Bu3C,IAAav3C,EAAS,UAAUA,EAASu3C,CAAU,IAAIkT;AAC1D,UAAAlT,KAAc;AAClB,QAAIv3C,EAASu3C,CAAU,KAAKkT,IACxBzqD,EAASu3C,IAAa,CAAC,IAAIv3C,EAASu3C,IAAa,CAAC,EAAE,SAASiT,GAAW98B,GAAOg9B,IAAa,CAAC,IAE7F1qD,EAAS,OAAOu3C,GAAY,GAAGkT,GAAaA,IAAcD,EAAU,UAAUL,GAAUz8B,GAAO88B,GAAWE,IAAa,GAAGf,EAAM,CAAC,GACrIpS,KAAc;AAAA;AAAA,IAClB,CAAC;AACD,QAAI0S,IAAQW,GAAUrT,IAAasT,GAAaX,CAAW,IAAIA,GAAa,CAACjkE,CAAM;AACnF,aAASld,IAAI,GAAGA,IAAIkhF,EAAM,QAAQlhF;AAC9B,MAAKkhF,EAAMlhF,CAAC,EAAE,KAAK,MAAMq3B,GAAK6pD,EAAMlhF,CAAC,CAAC,KAClCkhF,EAAM,OAAOlhF,KAAK,CAAC;AAC3B,WAAO,IAAIihF,GAAcC,EAAM,SAAS,KAAK,MAAM,OAAOA,CAAK,EAAE,KAAKM,EAAK,IAAI,KAAK,OAAOvqD,KAAY,KAAK,QAAQ;AAAA,EACxH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAOkqD,GAAa;AAChB,WAAIA,EAAY,UAAU,KAAK,QAAQ9oD,KAC5B,OACJ,KAAK,YAAY8oD,GAAa,CAAC;AAAA,EAC1C;AAAA,EACA,YAAYA,GAAajkE,GAAQ;AAC7B,QAAI+Z,IAAW,KAAK,UAAUiqD,IAAQ,KAAK;AAC3C,aAASlhF,IAAI,GAAGA,IAAIi3B,EAAS,QAAQj3B,KAAK,GAAG;AACzC,UAAI2kD,GACA91B,IAAOoI,EAASj3B,CAAC,IAAIkd,GAAQ+1B,IAAKhc,EAASj3B,IAAI,CAAC,IAAIkd;AACxD,eAAS/Y,IAAI,GAAG08E,GAAM18E,IAAIg9E,EAAY,QAAQh9E;AAC1C,SAAI08E,IAAOM,EAAYh9E,CAAC,MAChB08E,EAAK,OAAOhyD,KAAQgyD,EAAK,KAAK5tC,MAC9BkuC,EAAYh9E,CAAC,IAAI,OAChBwgD,MAAUA,IAAQ,CAAA,IAAK,KAAKk8B,CAAI;AAG7C,UAAI,CAACl8B;AACD;AACJ,MAAI1tB,KAAY,KAAK,aACjBA,IAAW,KAAK,SAAS,MAAK;AAClC,UAAIz3B,IAAUy3B,EAASj3B,IAAI,CAAC,EAAE,YAAY2kD,GAAO91B,IAAO,CAAC;AACzD,MAAIrvB,KAAW64B,KACXpB,EAASj3B,IAAI,CAAC,IAAIR,KAGlBy3B,EAAS,OAAOj3B,GAAG,CAAC,GACpBA,KAAK;AAAA,IAEb;AACA,QAAIkhF,EAAM;AACN,eAASlhF,IAAI,GAAG6gF,GAAM7gF,IAAImhF,EAAY,QAAQnhF;AAC1C,YAAI6gF,IAAOM,EAAYnhF,CAAC;AACpB,mBAASmE,IAAI,GAAGA,IAAI+8E,EAAM,QAAQ/8E;AAC9B,YAAI+8E,EAAM/8E,CAAC,EAAE,GAAG08E,GAAM3jE,CAAM,MACpBgkE,KAAS,KAAK,UACdA,IAAQ,KAAK,MAAM,MAAK,IAC5BA,EAAM,OAAO/8E,KAAK,CAAC;AAAA;AAGvC,WAAI8yB,KAAY,KAAK,YAAYiqD,KAAS,KAAK,QACpC,OACJA,EAAM,UAAUjqD,EAAS,SAAS,IAAIgqD,GAAcC,GAAOjqD,CAAQ,IAAIoB;AAAA,EAClF;AAAA,EACA,SAASnb,GAAQ3O,GAAM;AACnB,QAAI,QAAQ8pB;AACR,aAAO;AACX,QAAI9pB,EAAK;AACL,aAAO0yE,GAAc;AACzB,QAAIh2E,GAAOi2E;AACX,aAASlhF,IAAI,GAAGA,IAAI,KAAK,SAAS,QAAQA,KAAK;AAC3C,UAAI,KAAK,SAASA,CAAC,KAAKkd,GAAQ;AAC5B,QAAI,KAAK,SAASld,CAAC,KAAKkd,MACpBjS,IAAQ,KAAK,SAASjL,IAAI,CAAC;AAC/B;AAAA,MACJ;AACJ,QAAI8R,IAAQoL,IAAS,GAAG7K,IAAMP,IAAQvD,EAAK,QAAQ;AACnD,aAASvO,IAAI,GAAGA,IAAI,KAAK,MAAM,QAAQA,KAAK;AACxC,UAAI+hF,IAAM,KAAK,MAAM/hF,CAAC;AACtB,UAAI+hF,EAAI,OAAO1vE,KAAO0vE,EAAI,KAAKjwE,KAAUiwE,EAAI,gBAAgBf,IAAa;AACtE,YAAInyD,IAAO,KAAK,IAAI/c,GAAOiwE,EAAI,IAAI,IAAIjwE,GAAOmhC,IAAK,KAAK,IAAI5gC,GAAK0vE,EAAI,EAAE,IAAIjwE;AAC3E,QAAI+c,IAAOokB,MACNiuC,MAAUA,IAAQ,CAAA,IAAK,KAAKa,EAAI,KAAKlzD,GAAMokB,CAAE,CAAC;AAAA,MACvD;AAAA,IACJ;AACA,QAAIiuC,GAAO;AACP,UAAIc,IAAW,IAAIf,GAAcC,EAAM,KAAKM,EAAK,GAAG9iD,EAAI;AACxD,aAAOzzB,IAAQ,IAAIg3E,GAAgB,CAACD,GAAU/2E,CAAK,CAAC,IAAI+2E;AAAA,IAC5D;AACA,WAAO/2E,KAASotB;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA,EAIA,GAAG4tB,GAAO;AACN,QAAI,QAAQA;AACR,aAAO;AACX,QAAI,EAAEA,aAAiBg7B,OACnB,KAAK,MAAM,UAAUh7B,EAAM,MAAM,UACjC,KAAK,SAAS,UAAUA,EAAM,SAAS;AACvC,aAAO;AACX,aAASjmD,IAAI,GAAGA,IAAI,KAAK,MAAM,QAAQA;AACnC,UAAI,CAAC,KAAK,MAAMA,CAAC,EAAE,GAAGimD,EAAM,MAAMjmD,CAAC,CAAC;AAChC,eAAO;AACf,aAASA,IAAI,GAAGA,IAAI,KAAK,SAAS,QAAQA,KAAK;AAC3C,UAAI,KAAK,SAASA,CAAC,KAAKimD,EAAM,SAASjmD,CAAC,KACpC,KAAK,SAASA,IAAI,CAAC,KAAKimD,EAAM,SAASjmD,IAAI,CAAC,KAC5C,CAAC,KAAK,SAASA,IAAI,CAAC,EAAE,GAAGimD,EAAM,SAASjmD,IAAI,CAAC,CAAC;AAC9C,eAAO;AACf,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,OAAOuO,GAAM;AACT,WAAO2zE,GAAc,KAAK,YAAY3zE,CAAI,CAAC;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA,EAIA,YAAYA,GAAM;AACd,QAAI,QAAQ8pB;AACR,aAAOqG;AACX,QAAInwB,EAAK,iBAAiB,CAAC,KAAK,MAAM,KAAKyyE,GAAW,EAAE;AACpD,aAAO,KAAK;AAChB,QAAIl+E,IAAS,CAAA;AACb,aAAS9C,IAAI,GAAGA,IAAI,KAAK,MAAM,QAAQA;AACnC,MAAM,KAAK,MAAMA,CAAC,EAAE,gBAAgBghF,MAChCl+E,EAAO,KAAK,KAAK,MAAM9C,CAAC,CAAC;AAEjC,WAAO8C;AAAA,EACX;AAAA,EACA,WAAWiiD,GAAG;AAAE,IAAAA,EAAE,IAAI;AAAA,EAAG;AAC7B;AAIAk8B,GAAc,QAAQ,IAAIA,GAAc,CAAA,GAAI,CAAA,CAAE;AAI9CA,GAAc,gBAAgBiB;AAC9B,MAAM7pD,KAAQ4oD,GAAc;AAI5B,MAAMgB,GAAgB;AAAA,EAClB,YAAYE,GAAS;AACjB,SAAK,UAAUA;AAAA,EACnB;AAAA,EACA,IAAInrB,GAAS3/B,GAAK;AACd,UAAM+qD,IAAc,KAAK,QAAQ,IAAI,CAAAnwB,MAAUA,EAAO,IAAI+E,GAAS3/B,GAAKupD,EAAM,CAAC;AAC/E,WAAOqB,GAAgB,KAAKG,CAAW;AAAA,EAC3C;AAAA,EACA,SAASllE,GAAQjS,GAAO;AACpB,QAAIA,EAAM;AACN,aAAOg2E,GAAc;AACzB,QAAIt8B,IAAQ,CAAA;AACZ,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,QAAQ,KAAK;AAC1C,UAAI7hD,IAAS,KAAK,QAAQ,CAAC,EAAE,SAASoa,GAAQjS,CAAK;AACnD,MAAInI,KAAUu1B,OAEVv1B,aAAkBm/E,KAClBt9B,IAAQA,EAAM,OAAO7hD,EAAO,OAAO,IAEnC6hD,EAAM,KAAK7hD,CAAM;AAAA,IACzB;AACA,WAAOm/E,GAAgB,KAAKt9B,CAAK;AAAA,EACrC;AAAA,EACA,GAAGsB,GAAO;AACN,QAAI,EAAEA,aAAiBg8B,OACnBh8B,EAAM,QAAQ,UAAU,KAAK,QAAQ;AACrC,aAAO;AACX,aAASjmD,IAAI,GAAGA,IAAI,KAAK,QAAQ,QAAQA;AACrC,UAAI,CAAC,KAAK,QAAQA,CAAC,EAAE,GAAGimD,EAAM,QAAQjmD,CAAC,CAAC;AACpC,eAAO;AACf,WAAO;AAAA,EACX;AAAA,EACA,OAAOuO,GAAM;AACT,QAAIzL,GAAQu/E,IAAS;AACrB,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,QAAQ,KAAK;AAC1C,UAAIvL,IAAS,KAAK,QAAQ,CAAC,EAAE,YAAYvoE,CAAI;AAC7C,UAAKuoE,EAAO;AAEZ,YAAI,CAACh0E;AACD,UAAAA,IAASg0E;AAAA,aAER;AACD,UAAIuL,MACAv/E,IAASA,EAAO,MAAK,GACrBu/E,IAAS;AAEb,mBAASl+E,IAAI,GAAGA,IAAI2yE,EAAO,QAAQ3yE;AAC/B,YAAArB,EAAO,KAAKg0E,EAAO3yE,CAAC,CAAC;AAAA,QAC7B;AAAA,IACJ;AACA,WAAOrB,IAASo/E,GAAcG,IAASv/E,IAASA,EAAO,KAAK0+E,EAAK,CAAC,IAAI9iD;AAAA,EAC1E;AAAA;AAAA;AAAA,EAGA,OAAO,KAAKyjD,GAAS;AACjB,YAAQA,EAAQ,QAAM;AAAA,MAClB,KAAK;AAAG,eAAO9pD;AAAA,MACf,KAAK;AAAG,eAAO8pD,EAAQ,CAAC;AAAA,MACxB;AAAS,eAAO,IAAIF,GAAgBE,EAAQ,MAAM,CAAA1+E,MAAKA,aAAaw9E,EAAa,IAAIkB,IACjFA,EAAQ,OAAO,CAACt0B,GAAGpqD,MAAMoqD,EAAE,OAAOpqD,aAAaw9E,KAAgBx9E,IAAIA,EAAE,OAAO,GAAG,CAAA,CAAE,CAAC;AAAA,IAClG;AAAA,EACI;AAAA,EACA,WAAWshD,GAAG;AACV,aAAS/kD,IAAI,GAAGA,IAAI,KAAK,QAAQ,QAAQA;AACrC,WAAK,QAAQA,CAAC,EAAE,WAAW+kD,CAAC;AAAA,EACpC;AACJ;AACA,SAASw8B,GAAYe,GAAahB,GAAUtqB,GAASzoD,GAAM2O,GAAQ4jE,GAAWrjF,GAAS;AACnF,MAAIw5B,IAAWqrD,EAAY,MAAK;AAGhC,WAAStiF,IAAI,GAAG2hF,IAAab,GAAW9gF,IAAIg3D,EAAQ,KAAK,QAAQh3D,KAAK;AAClE,QAAIuiF,IAAQ;AACZ,IAAAvrB,EAAQ,KAAKh3D,CAAC,EAAE,QAAQ,CAAC02D,GAAU8rB,GAAQ7rB,GAAU8rB,MAAW;AAC5D,UAAIC,IAASD,IAAS9rB,KAAa6rB,IAAS9rB;AAC5C,eAAS12D,IAAI,GAAGA,IAAIi3B,EAAS,QAAQj3B,KAAK,GAAG;AACzC,YAAIqS,IAAM4kB,EAASj3B,IAAI,CAAC;AACxB,YAAIqS,IAAM,KAAKqkD,IAAWrkD,IAAMsvE,IAAaY;AACzC;AACJ,YAAIzwE,IAAQmlB,EAASj3B,CAAC,IAAI2hF,IAAaY;AACvC,QAAIC,KAAU1wE,IACVmlB,EAASj3B,IAAI,CAAC,IAAI02D,KAAY5kD,IAAQ,KAAK,KAEtC4kD,KAAYirB,KAAce,MAC/BzrD,EAASj3B,CAAC,KAAK0iF,GACfzrD,EAASj3B,IAAI,CAAC,KAAK0iF;AAAA,MAE3B;AACA,MAAAH,KAASG;AAAA,IACb,CAAC,GACDf,IAAa3qB,EAAQ,KAAKh3D,CAAC,EAAE,IAAI2hF,GAAY,EAAE;AAAA,EACnD;AAGA,MAAIgB,IAAc;AAClB,WAAS3iF,IAAI,GAAGA,IAAIi3B,EAAS,QAAQj3B,KAAK;AACtC,QAAIi3B,EAASj3B,IAAI,CAAC,IAAI,GAAG;AACrB,UAAIi3B,EAASj3B,IAAI,CAAC,KAAK,IAAI;AACvB,QAAA2iF,IAAc,IACd1rD,EAASj3B,IAAI,CAAC,IAAI;AAClB;AAAA,MACJ;AACA,UAAI6uB,IAAOmoC,EAAQ,IAAIsrB,EAAYtiF,CAAC,IAAI8gF,CAAS,GAAG8B,IAAY/zD,IAAO3R;AACvE,UAAI0lE,IAAY,KAAKA,KAAar0E,EAAK,QAAQ,MAAM;AACjD,QAAAo0E,IAAc;AACd;AAAA,MACJ;AAEA,UAAI1vC,IAAK+jB,EAAQ,IAAIsrB,EAAYtiF,IAAI,CAAC,IAAI8gF,GAAW,EAAE,GAAG+B,IAAU5vC,IAAK/1B,GACrE,EAAE,OAAAhY,GAAO,QAAQw8E,EAAW,IAAKnzE,EAAK,QAAQ,UAAUq0E,CAAS,GACjEnB,IAAYlzE,EAAK,WAAWrJ,CAAK;AACrC,UAAIu8E,KAAaC,KAAekB,KAAalB,IAAcD,EAAU,YAAYoB,GAAS;AACtF,YAAIjrB,IAAS3gC,EAASj3B,IAAI,CAAC,EACtB,SAASg3D,GAASyqB,GAAW5yD,IAAO,GAAGyzD,EAAYtiF,CAAC,IAAI8gF,IAAY,GAAGrjF,CAAO;AACnF,QAAIm6D,KAAUv/B,MACVpB,EAASj3B,CAAC,IAAI4iF,GACd3rD,EAASj3B,IAAI,CAAC,IAAI6iF,GAClB5rD,EAASj3B,IAAI,CAAC,IAAI43D,MAGlB3gC,EAASj3B,IAAI,CAAC,IAAI,IAClB2iF,IAAc;AAAA,MAEtB;AAEI,QAAAA,IAAc;AAAA,IAEtB;AAEJ,MAAIA,GAAa;AACb,QAAIxB,IAAc2B,GAAiC7rD,GAAUqrD,GAAahB,GAAUtqB,GAAS95C,GAAQ4jE,GAAWrjF,CAAO,GACnH2uD,IAAQg1B,GAAUD,GAAa5yE,GAAM,GAAG9Q,CAAO;AACnD,IAAA6jF,IAAWl1B,EAAM;AACjB,aAASpsD,IAAI,GAAGA,IAAIi3B,EAAS,QAAQj3B,KAAK;AACtC,MAAIi3B,EAASj3B,IAAI,CAAC,IAAI,MAClBi3B,EAAS,OAAOj3B,GAAG,CAAC,GACpBA,KAAK;AAEb,aAASA,IAAI,GAAGmE,IAAI,GAAGnE,IAAIosD,EAAM,SAAS,QAAQpsD,KAAK,GAAG;AACtD,UAAI6uB,IAAOu9B,EAAM,SAASpsD,CAAC;AAC3B,aAAOmE,IAAI8yB,EAAS,UAAUA,EAAS9yB,CAAC,IAAI0qB;AACxC,QAAA1qB,KAAK;AACT,MAAA8yB,EAAS,OAAO9yB,GAAG,GAAGioD,EAAM,SAASpsD,CAAC,GAAGosD,EAAM,SAASpsD,IAAI,CAAC,GAAGosD,EAAM,SAASpsD,IAAI,CAAC,CAAC;AAAA,IACzF;AAAA,EACJ;AACA,SAAO,IAAIihF,GAAcK,EAAS,KAAKE,EAAK,GAAGvqD,CAAQ;AAC3D;AACA,SAAS4qD,GAAUkB,GAAO7lE,GAAQ;AAC9B,MAAI,CAACA,KAAU,CAAC6lE,EAAM;AAClB,WAAOA;AACX,MAAIjgF,IAAS,CAAA;AACb,WAAS9C,IAAI,GAAGA,IAAI+iF,EAAM,QAAQ/iF,KAAK;AACnC,QAAI6gF,IAAOkC,EAAM/iF,CAAC;AAClB,IAAA8C,EAAO,KAAK,IAAIi+E,GAAWF,EAAK,OAAO3jE,GAAQ2jE,EAAK,KAAK3jE,GAAQ2jE,EAAK,IAAI,CAAC;AAAA,EAC/E;AACA,SAAO/9E;AACX;AACA,SAASggF,GAAiC7rD,GAAUqrD,GAAanB,GAAanqB,GAAS95C,GAAQ4jE,GAAWrjF,GAAS;AAE/G,WAASulF,EAAOtyC,GAAKowC,GAAW;AAC5B,aAAS9gF,IAAI,GAAGA,IAAI0wC,EAAI,MAAM,QAAQ1wC,KAAK;AACvC,UAAI43D,IAASlnB,EAAI,MAAM1wC,CAAC,EAAE,IAAIg3D,GAAS95C,GAAQ4jE,CAAS;AACxD,MAAIlpB,IACAupB,EAAY,KAAKvpB,CAAM,IAClBn6D,EAAQ,YACbA,EAAQ,SAASizC,EAAI,MAAM1wC,CAAC,EAAE,IAAI;AAAA,IAC1C;AACA,aAASA,IAAI,GAAGA,IAAI0wC,EAAI,SAAS,QAAQ1wC,KAAK;AAC1C,MAAAgjF,EAAOtyC,EAAI,SAAS1wC,IAAI,CAAC,GAAG0wC,EAAI,SAAS1wC,CAAC,IAAI8gF,IAAY,CAAC;AAAA,EACnE;AACA,WAAS9gF,IAAI,GAAGA,IAAIi3B,EAAS,QAAQj3B,KAAK;AACtC,IAAIi3B,EAASj3B,IAAI,CAAC,KAAK,MACnBgjF,EAAO/rD,EAASj3B,IAAI,CAAC,GAAGsiF,EAAYtiF,CAAC,IAAI8gF,IAAY,CAAC;AAC9D,SAAOK;AACX;AACA,SAASS,GAAiBmB,GAAOx0E,GAAM2O,GAAQ;AAC3C,MAAI3O,EAAK;AACL,WAAO;AACX,MAAI8D,IAAM6K,IAAS3O,EAAK,UAAUo2C,IAAQ;AAC1C,WAAS3kD,IAAI,GAAG6gF,GAAM7gF,IAAI+iF,EAAM,QAAQ/iF;AACpC,KAAK6gF,IAAOkC,EAAM/iF,CAAC,MAAM6gF,EAAK,OAAO3jE,KAAU2jE,EAAK,KAAKxuE,OACpDsyC,MAAUA,IAAQ,CAAA,IAAK,KAAKk8B,CAAI,GACjCkC,EAAM/iF,CAAC,IAAI;AAGnB,SAAO2kD;AACX;AACA,SAASm9B,GAAa/hF,GAAO;AACzB,MAAI+C,IAAS,CAAA;AACb,WAAS9C,IAAI,GAAGA,IAAID,EAAM,QAAQC;AAC9B,IAAID,EAAMC,CAAC,KAAK,QACZ8C,EAAO,KAAK/C,EAAMC,CAAC,CAAC;AAC5B,SAAO8C;AACX;AAKA,SAASs+E,GAAU2B,GAAOx0E,GAAM2O,GAAQzf,GAAS;AAC7C,MAAIw5B,IAAW,IAAIgsD,IAAW;AAC9B,EAAA10E,EAAK,QAAQ,CAACkzE,GAAWyB,MAAe;AACpC,QAAIv+B,IAAQi9B,GAAiBmB,GAAOtB,GAAWyB,IAAahmE,CAAM;AAClE,QAAIynC,GAAO;AACP,MAAAs+B,IAAW;AACX,UAAIE,IAAU/B,GAAUz8B,GAAO88B,GAAWvkE,IAASgmE,IAAa,GAAGzlF,CAAO;AAC1E,MAAI0lF,KAAW9qD,MACXpB,EAAS,KAAKisD,GAAYA,IAAazB,EAAU,UAAU0B,CAAO;AAAA,IAC1E;AAAA,EACJ,CAAC;AACD,MAAIrM,IAAS+K,GAAUoB,IAAWnB,GAAaiB,CAAK,IAAIA,GAAO,CAAC7lE,CAAM,EAAE,KAAKskE,EAAK;AAClF,WAASxhF,IAAI,GAAGA,IAAI82E,EAAO,QAAQ92E;AAC/B,IAAK82E,EAAO92E,CAAC,EAAE,KAAK,MAAMuO,GAAMuoE,EAAO92E,CAAC,CAAC,MACjCvC,EAAQ,YACRA,EAAQ,SAASq5E,EAAO92E,CAAC,EAAE,IAAI,GACnC82E,EAAO,OAAO92E,KAAK,CAAC;AAE5B,SAAO82E,EAAO,UAAU7/C,EAAS,SAAS,IAAIgqD,GAAcnK,GAAQ7/C,CAAQ,IAAIoB;AACpF;AAIA,SAASmpD,GAAM93E,GAAGC,GAAG;AACjB,SAAOD,EAAE,OAAOC,EAAE,QAAQD,EAAE,KAAKC,EAAE;AACvC;AAKA,SAASu4E,GAAca,GAAO;AAC1B,MAAI7lC,IAAU6lC;AACd,WAAS/iF,IAAI,GAAGA,IAAIk9C,EAAQ,SAAS,GAAGl9C,KAAK;AACzC,QAAI6gF,IAAO3jC,EAAQl9C,CAAC;AACpB,QAAI6gF,EAAK,QAAQA,EAAK;AAClB,eAAS18E,IAAInE,IAAI,GAAGmE,IAAI+4C,EAAQ,QAAQ/4C,KAAK;AACzC,YAAIhC,IAAO+6C,EAAQ/4C,CAAC;AACpB,YAAIhC,EAAK,QAAQ0+E,EAAK,MAAM;AACxB,UAAI1+E,EAAK,MAAM0+E,EAAK,OACZ3jC,KAAW6lC,MACX7lC,IAAU6lC,EAAM,MAAK,IAGzB7lC,EAAQ/4C,CAAC,IAAIhC,EAAK,KAAKA,EAAK,MAAM0+E,EAAK,EAAE,GACzCuC,GAAYlmC,GAAS/4C,IAAI,GAAGhC,EAAK,KAAK0+E,EAAK,IAAI1+E,EAAK,EAAE,CAAC;AAE3D;AAAA,QACJ,OACK;AACD,UAAIA,EAAK,OAAO0+E,EAAK,OACb3jC,KAAW6lC,MACX7lC,IAAU6lC,EAAM,MAAK,IAGzB7lC,EAAQl9C,CAAC,IAAI6gF,EAAK,KAAKA,EAAK,MAAM1+E,EAAK,IAAI,GAC3CihF,GAAYlmC,GAAS/4C,GAAG08E,EAAK,KAAK1+E,EAAK,MAAM0+E,EAAK,EAAE,CAAC;AAEzD;AAAA,QACJ;AAAA,MACJ;AAAA,EACR;AACA,SAAO3jC;AACX;AACA,SAASkmC,GAAYrjF,GAAOC,GAAGw1E,GAAM;AACjC,SAAOx1E,IAAID,EAAM,UAAUyhF,GAAMhM,GAAMz1E,EAAMC,CAAC,CAAC,IAAI;AAC/C,IAAAA;AACJ,EAAAD,EAAM,OAAOC,GAAG,GAAGw1E,CAAI;AAC3B;AAEA,SAAS6N,GAAgB3xD,GAAM;AAC3B,MAAIizB,IAAQ,CAAA;AACZ,SAAAjzB,EAAK,SAAS,eAAe,CAAAqzB,MAAK;AAC9B,QAAIjiD,IAASiiD,EAAErzB,EAAK,KAAK;AACzB,IAAI5uB,KAAUA,KAAUu1B,MACpBssB,EAAM,KAAK7hD,CAAM;AAAA,EACzB,CAAC,GACG4uB,EAAK,iBACLizB,EAAM,KAAKs8B,GAAc,OAAOvvD,EAAK,MAAM,KAAK,CAACA,EAAK,cAAc,IAAI,CAAC,CAAC,GACvEuwD,GAAgB,KAAKt9B,CAAK;AACrC;AAEA,MAAM2+B,KAAiB;AAAA,EACnB,WAAW;AAAA,EACX,eAAe;AAAA,EACf,uBAAuB;AAAA,EACvB,YAAY;AAAA,EACZ,mBAAmB;AAAA,EACnB,SAAS;AACb,GAEMC,KAAc7b,MAAMkE,MAAc;AACxC,MAAM4X,GAAe;AAAA,EACjB,cAAc;AACV,SAAK,aAAa,MAClB,KAAK,eAAe,GACpB,KAAK,YAAY,MACjB,KAAK,cAAc;AAAA,EACvB;AAAA,EACA,IAAI/iB,GAAK;AACL,SAAK,aAAaA,EAAI,YACtB,KAAK,eAAeA,EAAI,cACxB,KAAK,YAAYA,EAAI,WACrB,KAAK,cAAcA,EAAI;AAAA,EAC3B;AAAA,EACA,QAAQ;AACJ,SAAK,aAAa,KAAK,YAAY;AAAA,EACvC;AAAA,EACA,GAAGA,GAAK;AACJ,WAAOA,EAAI,cAAc,KAAK,cAAcA,EAAI,gBAAgB,KAAK,gBACjEA,EAAI,aAAa,KAAK,aAAaA,EAAI,eAAe,KAAK;AAAA,EACnE;AACJ;AACA,MAAMgjB,GAAY;AAAA,EACd,YAAY/xD,GAAMgyD,GAAiB;AAC/B,SAAK,OAAOhyD,GACZ,KAAK,kBAAkBgyD,GACvB,KAAK,QAAQ,CAAA,GACb,KAAK,eAAe,IACpB,KAAK,WAAW,MAChB,KAAK,mBAAmB,IAAIF,MAC5B,KAAK,aAAa,MAClB,KAAK,8BAA8B,IACnC,KAAK,sBAAsB,MAC3B,KAAK,WAAW,OAAO,oBACnB,IAAI,OAAO,iBAAiB,CAAAG,MAAa;AACrC,eAAS,IAAI,GAAG,IAAIA,EAAU,QAAQ;AAClC,aAAK,MAAM,KAAKA,EAAU,CAAC,CAAC;AAKhC,MAAIjc,MAAMkE,MAAc,MAAM+X,EAAU,KAAK,CAAAlgF,MAAKA,EAAE,QAAQ,eAAeA,EAAE,aAAa,UACtFA,EAAE,QAAQ,mBAAmBA,EAAE,SAAS,SAASA,EAAE,OAAO,UAAU,MAAM,IAC1E,KAAK,UAAS,IAEd,KAAK,MAAK;AAAA,IAClB,CAAC,GACD8/E,OACA,KAAK,aAAa,CAAA12E,MAAK;AACnB,WAAK,MAAM,KAAK,EAAE,QAAQA,EAAE,QAAQ,MAAM,iBAAiB,UAAUA,EAAE,UAAS,CAAE,GAClF,KAAK,UAAS;AAAA,IAClB,IAEJ,KAAK,oBAAoB,KAAK,kBAAkB,KAAK,IAAI;AAAA,EAC7D;AAAA,EACA,YAAY;AACR,IAAI,KAAK,eAAe,MACpB,KAAK,eAAe,OAAO,WAAW,MAAM;AAAE,WAAK,eAAe,IAAI,KAAK,MAAK;AAAA,IAAI,GAAG,EAAE;AAAA,EACjG;AAAA,EACA,aAAa;AACT,IAAI,KAAK,eAAe,OACpB,OAAO,aAAa,KAAK,YAAY,GACrC,KAAK,eAAe,IACpB,KAAK,MAAK;AAAA,EAElB;AAAA,EACA,QAAQ;AACJ,IAAI,KAAK,aACL,KAAK,SAAS,YAAW,GACzB,KAAK,SAAS,QAAQ,KAAK,KAAK,KAAKy2E,EAAc,IAEnD,KAAK,cACL,KAAK,KAAK,IAAI,iBAAiB,4BAA4B,KAAK,UAAU,GAC9E,KAAK,iBAAgB;AAAA,EACzB;AAAA,EACA,OAAO;AACH,QAAI,KAAK,UAAU;AACf,UAAIM,IAAO,KAAK,SAAS,YAAW;AACpC,UAAIA,EAAK,QAAQ;AACb,iBAAS5jF,IAAI,GAAGA,IAAI4jF,EAAK,QAAQ5jF;AAC7B,eAAK,MAAM,KAAK4jF,EAAK5jF,CAAC,CAAC;AAC3B,eAAO,WAAW,MAAM,KAAK,MAAK,GAAI,EAAE;AAAA,MAC5C;AACA,WAAK,SAAS,WAAU;AAAA,IAC5B;AACA,IAAI,KAAK,cACL,KAAK,KAAK,IAAI,oBAAoB,4BAA4B,KAAK,UAAU,GACjF,KAAK,oBAAmB;AAAA,EAC5B;AAAA,EACA,mBAAmB;AACf,SAAK,KAAK,IAAI,cAAc,iBAAiB,mBAAmB,KAAK,iBAAiB;AAAA,EAC1F;AAAA,EACA,sBAAsB;AAClB,SAAK,KAAK,IAAI,cAAc,oBAAoB,mBAAmB,KAAK,iBAAiB;AAAA,EAC7F;AAAA,EACA,2BAA2B;AACvB,SAAK,8BAA8B,IACnC,WAAW,MAAM,KAAK,8BAA8B,IAAO,EAAE;AAAA,EACjE;AAAA,EACA,oBAAoB;AAChB,QAAKy4E,GAAqB,KAAK,IAAI,GAEnC;AAAA,UAAI,KAAK;AACL,eAAOb,GAAe,KAAK,IAAI;AAInC,UAAIlQ,MAAMkE,MAAc,MAAM,CAAC,KAAK,KAAK,MAAM,UAAU,OAAO;AAC5D,YAAInL,IAAM,KAAK,KAAK,kBAAiB;AAErC,YAAIA,EAAI,aAAamK,GAAqBnK,EAAI,WAAWA,EAAI,aAAaA,EAAI,YAAYA,EAAI,YAAY;AACtG,iBAAO,KAAK,UAAS;AAAA,MAC7B;AACA,WAAK,MAAK;AAAA;AAAA,EACd;AAAA,EACA,kBAAkB;AACd,SAAK,iBAAiB,IAAI,KAAK,KAAK,kBAAiB,CAAE;AAAA,EAC3D;AAAA,EACA,sBAAsBA,GAAK;AACvB,QAAI,CAACA,EAAI;AACL,aAAO;AACX,QAAIojB,IAAY,oBAAI,OAAK/hC;AACzB,aAAS2I,IAAOgW,EAAI,WAAWhW,GAAMA,IAAO+f,GAAW/f,CAAI;AACvD,MAAAo5B,EAAU,IAAIp5B,CAAI;AACtB,aAASA,IAAOgW,EAAI,YAAYhW,GAAMA,IAAO+f,GAAW/f,CAAI;AACxD,UAAIo5B,EAAU,IAAIp5B,CAAI,GAAG;AACrB,QAAA3I,IAAY2I;AACZ;AAAA,MACJ;AACJ,QAAIgX,IAAO3f,KAAa,KAAK,KAAK,QAAQ,YAAYA,CAAS;AAC/D,QAAI2f,KAAQA,EAAK,eAAe;AAAA,MAC5B,MAAM;AAAA,MACN,QAAQ3f,EAAU,YAAY,IAAIA,EAAU,aAAaA;AAAA,IACrE,CAAS;AACG,kBAAK,gBAAe,GACb;AAAA,EAEf;AAAA,EACA,iBAAiB;AACb,QAAI,KAAK;AACL,eAASqxB,KAAO,KAAK,SAAS,YAAW;AACrC,aAAK,MAAM,KAAKA,CAAG;AAC3B,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,QAAQ;AACJ,QAAI,EAAE,MAAAzhD,EAAI,IAAK;AACf,QAAI,CAACA,EAAK,WAAW,KAAK,eAAe;AACrC;AACJ,QAAIiyD,IAAY,KAAK,eAAc;AACnC,IAAIA,EAAU,WACV,KAAK,QAAQ,CAAA;AACjB,QAAIljB,IAAM/uC,EAAK,kBAAiB,GAC5BoyD,IAAS,CAAC,KAAK,+BAA+B,CAAC,KAAK,iBAAiB,GAAGrjB,CAAG,KAAKgY,GAAqB/mD,CAAI,KAAK,CAAC,KAAK,sBAAsB+uC,CAAG,GAC7I5xC,IAAO,IAAIokB,IAAK,IAAI8wC,IAAW,IAAOxkF,IAAQ,CAAA;AAClD,QAAImyB,EAAK;AACL,eAAS1xB,IAAI,GAAGA,IAAI2jF,EAAU,QAAQ3jF,KAAK;AACvC,YAAI8C,IAAS,KAAK,iBAAiB6gF,EAAU3jF,CAAC,GAAGT,CAAK;AACtD,QAAIuD,MACA+rB,IAAOA,IAAO,IAAI/rB,EAAO,OAAO,KAAK,IAAIA,EAAO,MAAM+rB,CAAI,GAC1DokB,IAAKA,IAAK,IAAInwC,EAAO,KAAK,KAAK,IAAIA,EAAO,IAAImwC,CAAE,GAC5CnwC,EAAO,aACPihF,IAAW;AAAA,MAEvB;AAEJ,QAAIpc,MAASpoE,EAAM,QAAQ;AACvB,UAAIykF,IAAMzkF,EAAM,OAAO,CAAAmE,MAAKA,EAAE,YAAY,IAAI;AAC9C,UAAIsgF,EAAI,UAAU,GAAG;AACjB,YAAI,CAACt6E,GAAGC,CAAC,IAAIq6E;AACb,QAAIt6E,EAAE,cAAcA,EAAE,WAAW,cAAcC,EAAE,aAC7CA,EAAE,OAAM,IAERD,EAAE,OAAM;AAAA,MAChB,OACK;AACD,YAAI,EAAE,WAAA0wE,MAAc,KAAK;AACzB,iBAAS6J,KAAMD,GAAK;AAChB,cAAInyE,IAASoyE,EAAG;AAChB,UAAIpyE,KAAUA,EAAO,YAAY,SAAS,CAACuoE,KAAa8J,GAAYxyD,GAAM0oD,CAAS,KAAKvoE,MACpFoyE,EAAG,OAAM;AAAA,QACjB;AAAA,MACJ;AAAA,IACJ;AACA,QAAIE,IAAU;AAId,IAAIt1D,IAAO,KAAKi1D,KAAUpyD,EAAK,MAAM,YAAY,KAAK,IAAG,IAAK,OAC1D,KAAK,IAAIA,EAAK,MAAM,WAAWA,EAAK,MAAM,UAAU,IAAI,IAAI,KAAK,IAAG,IAAK,OACzE45C,GAAmB7K,CAAG,MAAM0jB,IAAU9M,GAAiB3lD,CAAI,MAC3DyyD,EAAQ,GAAG/kB,EAAU,KAAK1tC,EAAK,MAAM,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,KACvDA,EAAK,MAAM,YAAY,GACvBkmD,GAAelmD,CAAI,GACnB,KAAK,iBAAiB,IAAI+uC,CAAG,GAC7B/uC,EAAK,kBAAiB,MAEjB7C,IAAO,MAAMi1D,OACdj1D,IAAO,OACP6C,EAAK,QAAQ,UAAU7C,GAAMokB,CAAE,GAC/BmxC,GAAS1yD,CAAI,IAEjB,KAAK,gBAAgB7C,GAAMokB,GAAI8wC,GAAUxkF,CAAK,GAC1CmyB,EAAK,WAAWA,EAAK,QAAQ,QAC7BA,EAAK,YAAYA,EAAK,KAAK,IACrB,KAAK,iBAAiB,GAAG+uC,CAAG,KAClCmX,GAAelmD,CAAI,GACvB,KAAK,iBAAiB,IAAI+uC,CAAG;AAAA,EAErC;AAAA,EACA,iBAAiB0S,GAAK5zE,GAAO;AAEzB,QAAIA,EAAM,QAAQ4zE,EAAI,MAAM,IAAI;AAC5B,aAAO;AACX,QAAI1R,IAAO,KAAK,KAAK,QAAQ,YAAY0R,EAAI,MAAM;AAMnD,QALIA,EAAI,QAAQ,iBACX1R,KAAQ,KAAK,KAAK,WAAW0R,EAAI,iBAAiB;AAAA,IAE9CA,EAAI,iBAAiB,WAAW,CAACA,EAAI,YAAY,CAACA,EAAI,OAAO,aAAa,OAAO,MAEtF,CAAC1R,KAAQA,EAAK,eAAe0R,CAAG;AAChC,aAAO;AACX,QAAIA,EAAI,QAAQ,aAAa;AACzB,eAASnzE,IAAI,GAAGA,IAAImzE,EAAI,WAAW,QAAQnzE,KAAK;AAC5C,YAAIuO,IAAO4kE,EAAI,WAAWnzE,CAAC;AAC3B,QAAAT,EAAM,KAAKgP,CAAI,GACXA,EAAK,YAAY,MACjB,KAAK,sBAAsBA;AAAA,MACnC;AACA,UAAIkzD,EAAK,cAAcA,EAAK,cAAcA,EAAK,OAAO,CAACA,EAAK,WAAW,SAAS0R,EAAI,MAAM;AACtF,eAAO,EAAE,MAAM1R,EAAK,WAAW,IAAIA,EAAK,SAAQ;AACpD,UAAII,IAAOsR,EAAI,iBAAiBhxE,IAAOgxE,EAAI;AAC3C,UAAIzL,MAAMkE,MAAc,MAAMuH,EAAI,WAAW;AAGzC,iBAASnzE,IAAI,GAAGA,IAAImzE,EAAI,WAAW,QAAQnzE,KAAK;AAC5C,cAAI,EAAE,iBAAAqkF,GAAiB,aAAAhpC,EAAW,IAAK83B,EAAI,WAAWnzE,CAAC;AACvD,WAAI,CAACqkF,KAAmB,MAAM,UAAU,QAAQ,KAAKlR,EAAI,YAAYkR,CAAe,IAAI,OACpFxiB,IAAOwiB,KACP,CAAChpC,KAAe,MAAM,UAAU,QAAQ,KAAK83B,EAAI,YAAY93B,CAAW,IAAI,OAC5El5C,IAAOk5C;AAAA,QACf;AAEJ,UAAI+2B,IAAavQ,KAAQA,EAAK,cAAcsR,EAAI,SAC1C5I,GAAS1I,CAAI,IAAI,IAAI,GACvBhzC,IAAO4yC,EAAK,gBAAgB0R,EAAI,QAAQf,GAAY,EAAE,GACtDC,IAAWlwE,KAAQA,EAAK,cAAcgxE,EAAI,SACxC5I,GAASpoE,CAAI,IAAIgxE,EAAI,OAAO,WAAW,QACzClgC,IAAKwuB,EAAK,gBAAgB0R,EAAI,QAAQd,GAAU,CAAC;AACrD,aAAO,EAAE,MAAAxjD,GAAM,IAAAokB,EAAE;AAAA,IACrB,MACK,QAAIkgC,EAAI,QAAQ,eACV,EAAE,MAAM1R,EAAK,aAAaA,EAAK,QAAQ,IAAIA,EAAK,WAAWA,EAAK,OAAM,KAG7E,KAAK,sBAAsB0R,EAAI,QACxB;AAAA,MACH,MAAM1R,EAAK;AAAA,MACX,IAAIA,EAAK;AAAA;AAAA;AAAA;AAAA;AAAA,MAKT,UAAU0R,EAAI,OAAO,aAAaA,EAAI;AAAA,IACtD;AAAA,EAEI;AACJ;AACA,IAAImR,KAAa,oBAAI,QAAO,GACxBC,KAAiB;AACrB,SAASH,GAAS1yD,GAAM;AACpB,MAAI,CAAA4yD,GAAW,IAAI5yD,CAAI,MAEvB4yD,GAAW,IAAI5yD,GAAM,IAAI,GACrB,CAAC,UAAU,UAAU,UAAU,EAAE,QAAQ,iBAAiBA,EAAK,GAAG,EAAE,UAAU,MAAM,KAAI;AAExF,QADAA,EAAK,wBAAwBi2C,IACzB4c;AACA;AACJ,YAAQ,KAAQ,0KAA0K,GAC1LA,KAAiB;AAAA,EACrB;AACJ;AACA,SAASC,GAAsB9yD,GAAM6a,GAAO;AACxC,MAAIqkC,IAAarkC,EAAM,gBAAgBskC,IAAetkC,EAAM,aACxD6tC,IAAY7tC,EAAM,cAAc8tC,IAAc9tC,EAAM,WACpDk4C,IAAgB/yD,EAAK,SAASA,EAAK,MAAM,UAAU,MAAM;AAI7D,SAAIk5C,GAAqB6Z,EAAc,MAAMA,EAAc,QAAQrK,GAAWC,CAAW,MACrF,CAACzJ,GAAYC,GAAcuJ,GAAWC,CAAW,IAAI,CAACD,GAAWC,GAAazJ,GAAYC,CAAY,IACnG,EAAE,YAAAD,GAAY,cAAAC,GAAc,WAAAuJ,GAAW,aAAAC,EAAW;AAC7D;AAGA,SAASqK,GAA2BhzD,GAAM0vC,GAAW;AACjD,MAAIA,EAAU,mBAAmB;AAC7B,QAAI70B,IAAQ60B,EAAU,kBAAkB1vC,EAAK,IAAI,EAAE,CAAC;AACpD,QAAI6a;AACA,aAAOi4C,GAAsB9yD,GAAM6a,CAAK;AAAA,EAChD;AACA,MAAIoY;AACJ,WAASggC,EAAKjjE,GAAO;AACjB,IAAAA,EAAM,eAAc,GACpBA,EAAM,yBAAwB,GAC9BijC,IAAQjjC,EAAM,gBAAe,EAAG,CAAC;AAAA,EACrC;AAMA,SAAAgQ,EAAK,IAAI,iBAAiB,eAAeizD,GAAM,EAAI,GACnD,SAAS,YAAY,QAAQ,GAC7BjzD,EAAK,IAAI,oBAAoB,eAAeizD,GAAM,EAAI,GAC/ChgC,IAAQ6/B,GAAsB9yD,GAAMizB,CAAK,IAAI;AACxD;AACA,SAASu/B,GAAYxyD,GAAMnjB,GAAM;AAC7B,WAAS4qC,IAAI5qC,EAAK,YAAY4qC,KAAKA,KAAKznB,EAAK,KAAKynB,IAAIA,EAAE,YAAY;AAChE,QAAIsoB,IAAO/vC,EAAK,QAAQ,YAAYynB,GAAG,EAAI;AAC3C,QAAIsoB,KAAQA,EAAK,KAAK;AAClB,aAAOtoB;AAAA,EACf;AACA,SAAO;AACX;AAOA,SAASyrC,GAAalzD,GAAMmzD,GAAOC,GAAK;AACpC,MAAI,EAAE,MAAMjzE,GAAQ,YAAAugE,GAAY,UAAAC,GAAU,MAAAxjD,GAAM,IAAAokB,EAAE,IAAKvhB,EAAK,QAAQ,WAAWmzD,GAAOC,CAAG,GACrFvZ,IAAS75C,EAAK,kBAAiB,GAC/BiI,GACAymC,IAASmL,EAAO;AAQpB,MAPInL,KAAU1uC,EAAK,IAAI,SAAS0uC,EAAO,YAAY,IAAIA,IAASA,EAAO,UAAU,MAC7EzmC,IAAO,CAAC,EAAE,MAAMymC,GAAQ,QAAQmL,EAAO,cAAc,GAChDD,GAAmBC,CAAM,KAC1B5xC,EAAK,KAAK,EAAE,MAAM4xC,EAAO,WAAW,QAAQA,EAAO,aAAa,IAIpEM,MAAUn6C,EAAK,MAAM,gBAAgB;AACrC,aAAS4wB,IAAM+vB,GAAU/vB,IAAM8vB,GAAY9vB,KAAO;AAC9C,UAAI/zC,IAAOsD,EAAO,WAAWywC,IAAM,CAAC,GAAGmf,IAAOlzD,EAAK;AACnD,UAAIA,EAAK,YAAY,QAAQ,CAACkzD,GAAM;AAChC,QAAA4Q,IAAW/vB;AACX;AAAA,MACJ;AACA,UAAI,CAACmf,KAAQA,EAAK;AACd;AAAA,IACR;AAEJ,MAAIsjB,IAAWrzD,EAAK,MAAM,KACtBnc,IAASmc,EAAK,SAAS,WAAW,KAAKg8B,GAAU,WAAWh8B,EAAK,MAAM,MAAM,GAC7E01B,IAAQ29B,EAAS,QAAQl2D,CAAI,GAC7B4xC,IAAM,MAAMppC,IAAM9hB,EAAO,MAAM1D,GAAQ;AAAA,IACvC,SAASu1C,EAAM;AAAA,IACf,UAAUA,EAAM,OAAO,eAAeA,EAAM,MAAK,CAAE;AAAA,IACnD,SAAS;AAAA,IACT,MAAMgrB;AAAA,IACN,IAAIC;AAAA,IACJ,oBAAoBjrB,EAAM,OAAO,KAAK,cAAc,QAAQ,SAAS;AAAA,IACrE,eAAeztB;AAAA,IACf,cAAAqrD;AAAA,IACA,SAAS59B;AAAA,EACjB,CAAK;AACD,MAAIztB,KAAQA,EAAK,CAAC,EAAE,OAAO,MAAM;AAC7B,QAAIymC,IAASzmC,EAAK,CAAC,EAAE,KAAKhI,IAAOgI,EAAK,CAAC,KAAKA,EAAK,CAAC,EAAE;AACpD,IAAIhI,KAAQ,SACRA,IAAOyuC,IACXK,IAAM,EAAE,QAAQL,IAASvxC,GAAM,MAAM8C,IAAO9C,EAAI;AAAA,EACpD;AACA,SAAO,EAAE,KAAAwI,GAAK,KAAAopC,GAAK,MAAA5xC,GAAM,IAAAokB,EAAE;AAC/B;AACA,SAAS+xC,GAAal3B,GAAK;AACvB,MAAI2T,IAAO3T,EAAI;AACf,MAAI2T;AACA,WAAOA,EAAK,UAAS;AAEpB,MAAI3T,EAAI,YAAY,QAAQA,EAAI;AAIjC,QAAI+Z,MAAU,aAAa,KAAK/Z,EAAI,WAAW,QAAQ,GAAG;AACtD,UAAI/zC,IAAO,SAAS,cAAc,KAAK;AACvC,aAAAA,EAAK,YAAY,SAAS,cAAc,IAAI,CAAC,GACtC,EAAE,MAAAA,EAAI;AAAA,IACjB,WACS+zC,EAAI,WAAW,aAAaA,KAAO+Z,MAAU,gBAAgB,KAAK/Z,EAAI,WAAW,QAAQ;AAC9F,aAAO,EAAE,QAAQ,GAAI;AAAA,aAGpBA,EAAI,YAAY,SAASA,EAAI,aAAa,kBAAkB;AACjE,WAAO,EAAE,QAAQ,GAAI;AAEzB,SAAO;AACX;AACA,MAAMm3B,KAAW;AACjB,SAASC,GAAcxzD,GAAM7C,GAAMokB,GAAI8wC,GAAUoB,GAAY;AACzD,MAAIC,IAAgB1zD,EAAK,MAAM,8BAA8BA,EAAK,YAAYA,EAAK,MAAM,gBAAgB;AAEzG,MADAA,EAAK,MAAM,4BAA4B,GACnC7C,IAAO,GAAG;AACV,QAAInd,IAASggB,EAAK,MAAM,oBAAoB,KAAK,IAAG,IAAK,KAAKA,EAAK,MAAM,sBAAsB,MAC3FoyD,IAASzM,GAAiB3lD,GAAMhgB,CAAM;AAC1C,QAAIoyE,KAAU,CAACpyD,EAAK,MAAM,UAAU,GAAGoyD,CAAM,GAAG;AAC5C,UAAIjY,MAAUE,MACVr6C,EAAK,MAAM,gBAAgB,MAAM,KAAK,IAAG,IAAK,MAAMA,EAAK,MAAM,mBAC/DA,EAAK,SAAS,iBAAiB,CAAAqzB,MAAKA,EAAErzB,GAAM85C,GAAS,IAAI,OAAO,CAAC,CAAC;AAClE;AACJ,UAAIhyB,IAAK9nB,EAAK,MAAM,GAAG,aAAaoyD,CAAM;AAC1C,MAAIpyE,KAAU,YACV8nC,EAAG,QAAQ,WAAW,EAAI,IACrB9nC,KAAU,SACf8nC,EAAG,eAAc,GACjB4rC,KACA5rC,EAAG,QAAQ,eAAe4rC,CAAa,GAC3C1zD,EAAK,SAAS8nB,CAAE;AAAA,IACpB;AACA;AAAA,EACJ;AACA,MAAIqO,IAAUn2B,EAAK,MAAM,IAAI,QAAQ7C,CAAI,GACrCw2D,IAASx9B,EAAQ,YAAY5U,CAAE;AACnC,EAAApkB,IAAOg5B,EAAQ,OAAOw9B,IAAS,CAAC,GAChCpyC,IAAKvhB,EAAK,MAAM,IAAI,QAAQuhB,CAAE,EAAE,MAAMoyC,IAAS,CAAC;AAChD,MAAI5kB,IAAM/uC,EAAK,MAAM,WACjBG,IAAQ+yD,GAAalzD,GAAM7C,GAAMokB,CAAE,GACnC5b,IAAM3F,EAAK,MAAM,KAAK4zD,IAAUjuD,EAAI,MAAMxF,EAAM,MAAMA,EAAM,EAAE,GAC9D0zD,GAAcC;AAElB,EAAI9zD,EAAK,MAAM,gBAAgB,KAAK,KAAK,IAAG,IAAK,MAAMA,EAAK,MAAM,mBAC9D6zD,IAAe7zD,EAAK,MAAM,UAAU,IACpC8zD,IAAgB,UAGhBD,IAAe7zD,EAAK,MAAM,UAAU,MACpC8zD,IAAgB,UAEpB9zD,EAAK,MAAM,cAAc;AACzB,MAAI9nB,IAAS67E,GAASH,EAAQ,SAASzzD,EAAM,IAAI,SAASA,EAAM,MAAM0zD,GAAcC,CAAa;AAGjG,MAFI57E,KACA8nB,EAAK,MAAM,mBACVo2C,MAAOp2C,EAAK,MAAM,eAAe,KAAK,QAAQ,OAAOq6C,OACtDoZ,EAAW,KAAK,CAAAzhF,MAAKA,EAAE,YAAY,KAAK,CAACuhF,GAAS,KAAKvhF,EAAE,QAAQ,CAAC,MACjE,CAACkG,KAAUA,EAAO,QAAQA,EAAO,SAClC8nB,EAAK,SAAS,iBAAiB,CAAAqzB,MAAKA,EAAErzB,GAAM85C,GAAS,IAAI,OAAO,CAAC,CAAC,GAAG;AACrE,IAAA95C,EAAK,MAAM,eAAe;AAC1B;AAAA,EACJ;AACA,MAAI,CAAC9nB;AACD,QAAIm6E,KAAYtjB,aAAeZ,KAAiB,CAACY,EAAI,SAASA,EAAI,MAAM,WAAWA,EAAI,OAAO,KAC1F,CAAC/uC,EAAK,aAAa,EAAEG,EAAM,OAAOA,EAAM,IAAI,UAAUA,EAAM,IAAI;AAChE,MAAAjoB,IAAS,EAAE,OAAO62D,EAAI,MAAM,MAAMA,EAAI,IAAI,MAAMA,EAAI,GAAE;AAAA,SAErD;AACD,UAAI5uC,EAAM,KAAK;AACX,YAAI4uC,IAAMilB,GAAiBh0D,GAAMA,EAAK,MAAM,KAAKG,EAAM,GAAG;AAC1D,YAAI4uC,KAAO,CAACA,EAAI,GAAG/uC,EAAK,MAAM,SAAS,GAAG;AACtC,cAAI8nB,IAAK9nB,EAAK,MAAM,GAAG,aAAa+uC,CAAG;AACvC,UAAI2kB,KACA5rC,EAAG,QAAQ,eAAe4rC,CAAa,GAC3C1zD,EAAK,SAAS8nB,CAAE;AAAA,QACpB;AAAA,MACJ;AACA;AAAA,IACJ;AAKJ,EAAI9nB,EAAK,MAAM,UAAU,OAAOA,EAAK,MAAM,UAAU,MACjD9nB,EAAO,SAASA,EAAO,QACvB8nB,EAAK,MAAM,qBAAqBmuC,MAC5Bj2D,EAAO,QAAQ8nB,EAAK,MAAM,UAAU,QAAQ9nB,EAAO,SAAS8nB,EAAK,MAAM,UAAU,OAAO,KACxFA,EAAK,MAAM,UAAU,QAAQG,EAAM,OACnCjoB,EAAO,QAAQ8nB,EAAK,MAAM,UAAU,OAE/B9nB,EAAO,OAAO8nB,EAAK,MAAM,UAAU,MAAM9nB,EAAO,QAAQ8nB,EAAK,MAAM,UAAU,KAAK,KACvFA,EAAK,MAAM,UAAU,MAAMG,EAAM,OACjCjoB,EAAO,QAAS8nB,EAAK,MAAM,UAAU,KAAK9nB,EAAO,MACjDA,EAAO,OAAO8nB,EAAK,MAAM,UAAU,MAMvCg2C,MAAMkE,MAAc,MAAMhiE,EAAO,QAAQA,EAAO,QAAQ,KACxDA,EAAO,QAAQA,EAAO,SAASA,EAAO,QAAQioB,EAAM,QACpDA,EAAM,IAAI,YAAYjoB,EAAO,QAAQioB,EAAM,OAAO,GAAGjoB,EAAO,QAAQioB,EAAM,OAAO,CAAC,KAAK,SACvFjoB,EAAO,SACPA,EAAO,QACPA,EAAO;AAEX,MAAIw9C,IAAQv1B,EAAM,IAAI,eAAejoB,EAAO,QAAQioB,EAAM,IAAI,GAC1Dw1B,IAAMx1B,EAAM,IAAI,eAAejoB,EAAO,OAAOioB,EAAM,IAAI,GACvD8zD,IAAStuD,EAAI,QAAQztB,EAAO,KAAK,GACjCg8E,IAAex+B,EAAM,WAAWC,CAAG,KAAKD,EAAM,OAAO,iBAAiBu+B,EAAO,IAAG,KAAM/7E,EAAO;AAGjG,OAAMk+D,MAAOp2C,EAAK,MAAM,eAAe,KAAK,IAAG,IAAK,QAC/C,CAACk0D,KAAgBT,EAAW,KAAK,CAAAzhF,MAAKA,EAAE,YAAY,SAASA,EAAE,YAAY,GAAG,MAC9E,CAACkiF,KAAgBx+B,EAAM,MAAMv1B,EAAM,IAAI,QAAQ,SAC3C,CAACu1B,EAAM,WAAWC,CAAG,KAAK,CAACD,EAAM,OAAO,kBACzCA,EAAM,MAAMC,EAAI,OAAO,CAAC,KAAK,KAAKx1B,EAAM,IAAI,YAAYu1B,EAAM,KAAKC,EAAI,KAAK,IAAI,EAAE,CAAC,MACvF31B,EAAK,SAAS,iBAAiB,CAAAqzB,MAAKA,EAAErzB,GAAM85C,GAAS,IAAI,OAAO,CAAC,CAAC,GAAG;AACrE,IAAA95C,EAAK,MAAM,eAAe;AAC1B;AAAA,EACJ;AAEA,MAAIA,EAAK,MAAM,UAAU,SAAS9nB,EAAO,SACrCi8E,GAAmBxuD,GAAKztB,EAAO,OAAOA,EAAO,MAAMw9C,GAAOC,CAAG,KAC7D31B,EAAK,SAAS,iBAAiB,CAAAqzB,MAAKA,EAAErzB,GAAM85C,GAAS,GAAG,WAAW,CAAC,CAAC,GAAG;AACxE,IAAIO,MAAWF,MACXn6C,EAAK,YAAY;AACrB;AAAA,EACJ;AAIA,EAAIm6C,MAAUjiE,EAAO,QAAQA,EAAO,UAChC8nB,EAAK,MAAM,mBAAmB,KAAK,IAAG,IAStCq6C,MAAW,CAAC6Z,KAAgBx+B,EAAM,MAAK,KAAMC,EAAI,MAAK,KAAMA,EAAI,gBAAgB,KAAKD,EAAM,SAASC,EAAI,SACxGx1B,EAAM,OAAOA,EAAM,IAAI,UAAUA,EAAM,IAAI,QAAQA,EAAM,IAAI,QAAQjoB,EAAO,SAC5EA,EAAO,QAAQ,GACfy9C,IAAMx1B,EAAM,IAAI,eAAejoB,EAAO,OAAOioB,EAAM,IAAI,GACvD,WAAW,MAAM;AACb,IAAAH,EAAK,SAAS,iBAAiB,SAAUqzB,GAAG;AAAE,aAAOA,EAAErzB,GAAM85C,GAAS,IAAI,OAAO,CAAC;AAAA,IAAG,CAAC;AAAA,EAC1F,GAAG,EAAE;AAET,MAAIsa,IAASl8E,EAAO,OAAOm8E,IAAOn8E,EAAO,MACrCo8E,IAAO,CAACltE,MAAS;AACjB,QAAI0gC,IAAK1gC,KAAQ4Y,EAAK,MAAM,GAAG,QAAQo0D,GAAQC,GAAMl0D,EAAM,IAAI,MAAMjoB,EAAO,QAAQioB,EAAM,MAAMjoB,EAAO,OAAOioB,EAAM,IAAI,CAAC;AACzH,QAAIA,EAAM,KAAK;AACX,UAAI4uC,IAAMilB,GAAiBh0D,GAAM8nB,EAAG,KAAK3nB,EAAM,GAAG;AAMlD,MAAI4uC,KAAO,EAAEoL,MAAUn6C,EAAK,aAAa+uC,EAAI,UACxC72D,EAAO,SAASA,EAAO,QAAQ8nB,EAAK,MAAM,mBAAmB,KAAK,IAAG,IAAK,SAC1E+uC,EAAI,QAAQqlB,KAAUrlB,EAAI,QAAQjnB,EAAG,QAAQ,IAAIusC,CAAI,IAAI,MAC1Dre,MAAMjH,EAAI,SAASA,EAAI,QAAQqlB,MAC/BtsC,EAAG,aAAainB,CAAG;AAAA,IAC3B;AACA,WAAI2kB,KACA5rC,EAAG,QAAQ,eAAe4rC,CAAa,GACpC5rC,EAAG,eAAc;AAAA,EAC5B,GACIysC;AACJ,MAAIL;AACA,QAAIx+B,EAAM,OAAOC,EAAI,KAAK;AAGtB,MAAIqgB,MAAMkE,MAAc,MAAMxkB,EAAM,gBAAgB,MAChD11B,EAAK,YAAY,yBAAwB,GACzC,WAAW,MAAMkmD,GAAelmD,CAAI,GAAG,EAAE;AAE7C,UAAI8nB,IAAKwsC,EAAKt0D,EAAK,MAAM,GAAG,OAAOo0D,GAAQC,CAAI,CAAC,GAC5Ct/B,IAAQpvB,EAAI,QAAQztB,EAAO,KAAK,EAAE,YAAYytB,EAAI,QAAQztB,EAAO,IAAI,CAAC;AAC1E,MAAI68C,KACAjN,EAAG,YAAYiN,CAAK,GACxB/0B,EAAK,SAAS8nB,CAAE;AAAA,IACpB;AAAA;AAAA,MAEA5vC,EAAO,QAAQA,EAAO,SACjBq8E,IAAaC,GAAa9+B,EAAM,OAAO,QAAQ,IAAIA,EAAM,cAAcC,EAAI,YAAY,GAAGs+B,EAAO,OAAO,QAAQ,IAAIA,EAAO,cAAc/7E,EAAO,OAAO+7E,EAAO,OAAO,CAAC;AAAA,MAAI;AAC3K,UAAInsC,IAAKwsC,EAAKt0D,EAAK,MAAM,EAAE;AAC3B,MAAIu0D,EAAW,QAAQ,QACnBzsC,EAAG,QAAQssC,GAAQC,GAAME,EAAW,IAAI,IAExCzsC,EAAG,WAAWssC,GAAQC,GAAME,EAAW,IAAI,GAC/Cv0D,EAAK,SAAS8nB,CAAE;AAAA,IACpB,WACS4N,EAAM,OAAO,MAAMA,EAAM,MAAK,CAAE,EAAE,UAAUA,EAAM,MAAK,KAAMC,EAAI,MAAK,KAAMA,EAAI,aAAa,IAAI,IAAI;AAE1G,UAAIlkD,IAAOikD,EAAM,OAAO,YAAYA,EAAM,cAAcC,EAAI,YAAY,GACpEqJ,IAAQ,MAAMs1B,EAAKt0D,EAAK,MAAM,GAAG,WAAWvuB,GAAM2iF,GAAQC,CAAI,CAAC;AACnE,MAAKr0D,EAAK,SAAS,mBAAmB,CAAAqzB,MAAKA,EAAErzB,GAAMo0D,GAAQC,GAAM5iF,GAAMutD,CAAK,CAAC,KACzEh/B,EAAK,SAASg/B,GAAO;AAAA,IAC7B;AAEI,MAAAh/B,EAAK,SAASs0D,GAAM;AAAA;AAIxB,IAAAt0D,EAAK,SAASs0D,GAAM;AAE5B;AACA,SAASN,GAAiBh0D,GAAM2F,GAAK8uD,GAAW;AAC5C,SAAI,KAAK,IAAIA,EAAU,QAAQA,EAAU,IAAI,IAAI9uD,EAAI,QAAQ,OAClD,OACJogD,GAAiB/lD,GAAM2F,EAAI,QAAQ8uD,EAAU,MAAM,GAAG9uD,EAAI,QAAQ8uD,EAAU,IAAI,CAAC;AAC5F;AAIA,SAASD,GAAa7/B,GAAKwb,GAAM;AAC7B,MAAIukB,IAAW//B,EAAI,WAAW,OAAOggC,IAAYxkB,EAAK,WAAW,OAC7DtiE,IAAQ6mF,GAAU5mF,IAAU6mF,GAAW/7E,GAAMuqC,GAAM4H;AACvD,WAASz8C,IAAI,GAAGA,IAAIqmF,EAAU,QAAQrmF;AAClC,IAAAT,IAAQ8mF,EAAUrmF,CAAC,EAAE,cAAcT,CAAK;AAC5C,WAASS,IAAI,GAAGA,IAAIomF,EAAS,QAAQpmF;AACjC,IAAAR,IAAU4mF,EAASpmF,CAAC,EAAE,cAAcR,CAAO;AAC/C,MAAID,EAAM,UAAU,KAAKC,EAAQ,UAAU;AACvC,IAAAq1C,IAAOt1C,EAAM,CAAC,GACd+K,IAAO,OACPmyC,IAAS,CAACluC,MAASA,EAAK,KAAKsmC,EAAK,SAAStmC,EAAK,KAAK,CAAC;AAAA,WAEjDhP,EAAM,UAAU,KAAKC,EAAQ,UAAU;AAC5C,IAAAq1C,IAAOr1C,EAAQ,CAAC,GAChB8K,IAAO,UACPmyC,IAAS,CAACluC,MAASA,EAAK,KAAKsmC,EAAK,cAActmC,EAAK,KAAK,CAAC;AAAA;AAG3D,WAAO;AAEX,MAAIjB,IAAU,CAAA;AACd,WAAStN,IAAI,GAAGA,IAAI6hE,EAAK,YAAY7hE;AACjC,IAAAsN,EAAQ,KAAKmvC,EAAOolB,EAAK,MAAM7hE,CAAC,CAAC,CAAC;AACtC,MAAI2lD,EAAS,KAAKr4C,CAAO,EAAE,GAAG+4C,CAAG;AAC7B,WAAO,EAAE,MAAAxR,GAAM,MAAAvqC,EAAI;AAC3B;AACA,SAASu7E,GAAmBS,GAAKx0E,GAAOO,GAAKk0E,GAAWC,GAAS;AAC7D;AAAA;AAAA,IACAn0E,IAAMP,KAAS00E,EAAQ,MAAMD,EAAU;AAAA,IAEnCE,GAAsBF,GAAW,IAAM,EAAK,IAAIC,EAAQ;AAAA;AACxD,WAAO;AACX,MAAIv+B,IAASq+B,EAAI,QAAQx0E,CAAK;AAE9B,MAAI,CAACy0E,EAAU,OAAO,aAAa;AAC/B,QAAIz8E,IAAQm+C,EAAO;AACnB,WAAOn+C,KAAS,QAAQuI,KAAOP,IAAQhI,EAAM;AAAA,EACjD;AAEA,MAAIm+C,EAAO,eAAeA,EAAO,OAAO,QAAQ,QAAQ,CAACA,EAAO,OAAO;AACnE,WAAO;AACX,MAAIy+B,IAAQJ,EAAI,QAAQG,GAAsBx+B,GAAQ,IAAM,EAAI,CAAC;AAEjE,SAAI,CAACy+B,EAAM,OAAO,eAAeA,EAAM,MAAMr0E,KACzCo0E,GAAsBC,GAAO,IAAM,EAAK,IAAIr0E,IACrC,KAEJk0E,EAAU,OAAO,QAAQ,IAAIA,EAAU,YAAY,EAAE,GAAGG,EAAM,OAAO,OAAO;AACvF;AACA,SAASD,GAAsB3rB,GAAM6rB,GAASC,GAAS;AACnD,MAAI/vD,IAAQikC,EAAK,OAAOzoD,IAAMs0E,IAAU7rB,EAAK,QAAQA,EAAK;AAC1D,SAAOjkC,IAAQ,MAAM8vD,KAAW7rB,EAAK,WAAWjkC,CAAK,KAAKikC,EAAK,KAAKjkC,CAAK,EAAE;AACvE,IAAAA,KACAxkB,KACAs0E,IAAU;AAEd,MAAIC,GAAS;AACT,QAAIzkF,IAAO24D,EAAK,KAAKjkC,CAAK,EAAE,WAAWikC,EAAK,WAAWjkC,CAAK,CAAC;AAC7D,WAAO10B,KAAQ,CAACA,EAAK;AACjB,MAAAA,IAAOA,EAAK,YACZkQ;AAAA,EAER;AACA,SAAOA;AACX;AACA,SAASozE,GAAS/7E,GAAGC,GAAG2H,GAAKi0E,GAAcC,GAAe;AACtD,MAAI1zE,IAAQpI,EAAE,cAAcC,GAAG2H,CAAG;AAClC,MAAIQ,KAAS;AACT,WAAO;AACX,MAAI,EAAE,GAAG+0E,GAAM,GAAGC,EAAI,IAAKp9E,EAAE,YAAYC,GAAG2H,IAAM5H,EAAE,MAAM4H,IAAM3H,EAAE,IAAI;AACtE,MAAI67E,KAAiB,OAAO;AACxB,QAAIhjE,IAAS,KAAK,IAAI,GAAG1Q,IAAQ,KAAK,IAAI+0E,GAAMC,CAAI,CAAC;AACrD,IAAAvB,KAAgBsB,IAAOrkE,IAAS1Q;AAAA,EACpC;AACA,MAAI+0E,IAAO/0E,KAASpI,EAAE,OAAOC,EAAE,MAAM;AACjC,QAAI+5B,IAAO6hD,KAAgBzzE,KAASyzE,KAAgBsB,IAAO/0E,IAAQyzE,IAAe;AAClF,IAAAzzE,KAAS4xB,GACL5xB,KAASA,IAAQnI,EAAE,QAAQo9E,GAAgBp9E,EAAE,YAAYmI,IAAQ,GAAGA,IAAQ,CAAC,CAAC,MAC9EA,KAAS4xB,IAAO,IAAI,KACxBojD,IAAOh1E,KAASg1E,IAAOD,IACvBA,IAAO/0E;AAAA,EACX,WACSg1E,IAAOh1E,GAAO;AACnB,QAAI4xB,IAAO6hD,KAAgBzzE,KAASyzE,KAAgBuB,IAAOh1E,IAAQyzE,IAAe;AAClF,IAAAzzE,KAAS4xB,GACL5xB,KAASA,IAAQpI,EAAE,QAAQq9E,GAAgBr9E,EAAE,YAAYoI,IAAQ,GAAGA,IAAQ,CAAC,CAAC,MAC9EA,KAAS4xB,IAAO,IAAI,KACxBmjD,IAAO/0E,KAAS+0E,IAAOC,IACvBA,IAAOh1E;AAAA,EACX;AACA,SAAO,EAAE,OAAAA,GAAO,MAAA+0E,GAAM,MAAAC,EAAI;AAC9B;AACA,SAASC,GAAgBn+B,GAAK;AAC1B,MAAIA,EAAI,UAAU;AACd,WAAO;AACX,MAAIl/C,IAAIk/C,EAAI,WAAW,CAAC,GAAGj/C,IAAIi/C,EAAI,WAAW,CAAC;AAC/C,SAAOl/C,KAAK,SAAUA,KAAK,SAAUC,KAAK,SAAUA,KAAK;AAC7D;AAeA,MAAMq9E,GAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQb,YAAYniC,GAAOqP,GAAO;AACtB,SAAK,QAAQ,MAIb,KAAK,UAAU,IAIf,KAAK,cAAc,MACnB,KAAK,UAAU,IAIf,KAAK,aAAa,MAIlB,KAAK,gBAAgB,MAIrB,KAAK,uBAAuB,QAI5B,KAAK,QAAQ,IAAIooB,MACjB,KAAK,oBAAoB,CAAA,GACzB,KAAK,cAAc,CAAA,GAMnB,KAAK,wBAAwB,IAM7B,KAAK,WAAW,MAChB,KAAK,SAASpoB,GACd,KAAK,QAAQA,EAAM,OACnB,KAAK,gBAAgBA,EAAM,WAAW,CAAA,GACtC,KAAK,cAAc,QAAQ+yB,EAAmB,GAC9C,KAAK,WAAW,KAAK,SAAS,KAAK,IAAI,GACvC,KAAK,MAAOpiC,KAASA,EAAM,SAAU,SAAS,cAAc,KAAK,GAC7DA,MACIA,EAAM,cACNA,EAAM,YAAY,KAAK,GAAG,IACrB,OAAOA,KAAS,aACrBA,EAAM,KAAK,GAAG,IACTA,EAAM,UACX,KAAK,UAAU,MAEvB,KAAK,WAAWqiC,GAAY,IAAI,GAChCC,GAAoB,IAAI,GACxB,KAAK,YAAYC,GAAe,IAAI,GACpC,KAAK,UAAUxS,GAAY,KAAK,MAAM,KAAKyS,GAAe,IAAI,GAAGhE,GAAgB,IAAI,GAAG,KAAK,KAAK,IAAI,GACtG,KAAK,cAAc,IAAII,GAAY,MAAM,CAAC50D,GAAMokB,GAAI8wC,GAAUxkF,MAAU2lF,GAAc,MAAMr2D,GAAMokB,GAAI8wC,GAAUxkF,CAAK,CAAC,GACtH,KAAK,YAAY,MAAK,GACtBg9E,GAAU,IAAI,GACd,KAAK,kBAAiB;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,YAAY;AAAE,WAAO,KAAK,MAAM;AAAA,EAAW;AAAA;AAAA;AAAA;AAAA,EAI/C,IAAI,QAAQ;AACR,QAAI,KAAK,OAAO,SAAS,KAAK,OAAO;AACjC,UAAI1a,IAAO,KAAK;AAChB,WAAK,SAAS,CAAA;AACd,eAASnyD,KAAQmyD;AACb,aAAK,OAAOnyD,CAAI,IAAImyD,EAAKnyD,CAAI;AACjC,WAAK,OAAO,QAAQ,KAAK;AAAA,IAC7B;AACA,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAOwkD,GAAO;AACV,IAAIA,EAAM,mBAAmB,KAAK,OAAO,mBACrCwoB,GAAgB,IAAI;AACxB,QAAI4K,IAAY,KAAK;AACrB,SAAK,SAASpzB,GACVA,EAAM,YACNA,EAAM,QAAQ,QAAQ+yB,EAAmB,GACzC,KAAK,gBAAgB/yB,EAAM,UAE/B,KAAK,iBAAiBA,EAAM,OAAOozB,CAAS;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,SAASpzB,GAAO;AACZ,QAAI5mD,IAAU,CAAA;AACd,aAASoC,KAAQ,KAAK;AAClB,MAAApC,EAAQoC,CAAI,IAAI,KAAK,OAAOA,CAAI;AACpC,IAAApC,EAAQ,QAAQ,KAAK;AACrB,aAASoC,KAAQwkD;AACb,MAAA5mD,EAAQoC,CAAI,IAAIwkD,EAAMxkD,CAAI;AAC9B,SAAK,OAAOpC,CAAO;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,YAAYN,GAAO;AACf,SAAK,iBAAiBA,GAAO,KAAK,MAAM;AAAA,EAC5C;AAAA,EACA,iBAAiBA,GAAOs6E,GAAW;AAC/B,QAAIvpF;AACJ,QAAI8jE,IAAO,KAAK,OAAO0lB,IAAS,IAAOC,IAAY;AAGnD,IAAIx6E,EAAM,eAAe,KAAK,cAC1B0xE,GAAiB,IAAI,GACrB8I,IAAY,KAEhB,KAAK,QAAQx6E;AACb,QAAIy6E,IAAiB5lB,EAAK,WAAW70D,EAAM,WAAW,KAAK,OAAO,WAAWs6E,EAAU;AACvF,QAAIG,KAAkB,KAAK,OAAO,WAAWH,EAAU,WAAW,KAAK,OAAO,aAAaA,EAAU,WAAW;AAC5G,UAAII,IAAYN,GAAe,IAAI;AACnC,MAAIO,GAAiBD,GAAW,KAAK,SAAS,MAC1C,KAAK,YAAYA,GACjBH,IAAS;AAAA,IAEjB;AACA,KAAIE,KAAkBH,EAAU,mBAAmB,KAAK,OAAO,oBAC3D5K,GAAgB,IAAI,GAExB,KAAK,WAAWwK,GAAY,IAAI,GAChCC,GAAoB,IAAI;AACxB,QAAIvV,IAAYyR,GAAgB,IAAI,GAAG1R,IAAY0V,GAAe,IAAI,GAClEO,IAAS/lB,EAAK,WAAW70D,EAAM,WAAW,CAAC60D,EAAK,IAAI,GAAG70D,EAAM,GAAG,IAAI,UAClEA,EAAM,oBAAoB60D,EAAK,oBAAoB,iBAAiB,YACtEgmB,IAAYN,KAAU,CAAC,KAAK,QAAQ,YAAYv6E,EAAM,KAAK2kE,GAAWC,CAAS;AACnF,KAAIiW,KAAa,CAAC76E,EAAM,UAAU,GAAG60D,EAAK,SAAS,OAC/C2lB,IAAY;AAChB,QAAIM,IAAeF,KAAU,cAAcJ,KAAa,KAAK,IAAI,MAAM,kBAAkB,QAAQpa,GAAe,IAAI;AACpH,QAAIoa,GAAW;AACX,WAAK,YAAY,KAAI;AAMrB,UAAIO,IAAiBF,MAAcngB,MAAMmE,OAAW,CAAC,KAAK,aACtD,CAAChK,EAAK,UAAU,SAAS,CAAC70D,EAAM,UAAU,SAASg7E,GAAwBnmB,EAAK,WAAW70D,EAAM,SAAS;AAC9G,UAAI66E,GAAW;AAKX,YAAII,IAAepc,KAAU,KAAK,cAAc,KAAK,kBAAiB,EAAG,YAAa;AACtF,QAAI,KAAK,cACL,KAAK,MAAM,kBAAkB+S,GAAoB,IAAI,KACrD2I,KAAU,CAAC,KAAK,QAAQ,OAAOv6E,EAAM,KAAK2kE,GAAWC,GAAW,IAAI,OACpE,KAAK,QAAQ,gBAAgBD,CAAS,GACtC,KAAK,QAAQ,QAAO,GACpB,KAAK,UAAUiD,GAAY5nE,EAAM,KAAK2kE,GAAWC,GAAW,KAAK,KAAK,IAAI,IAE1EqW,KAAgB,CAAC,KAAK,gBACtBF,IAAiB;AAAA,MACzB;AAKA,MAAIA,KACA,EAAE,KAAK,MAAM,aAAa,KAAK,YAAY,iBAAiB,GAAG,KAAK,mBAAmB,KACnFrP,GAAmB,IAAI,KAC3Bd,GAAe,MAAMmQ,CAAc,KAGnClQ,GAAkB,MAAM7qE,EAAM,SAAS,GACvC,KAAK,YAAY,gBAAe,IAEpC,KAAK,YAAY,MAAK;AAAA,IAC1B;AACA,SAAK,kBAAkB60D,CAAI,GACrB,GAAA9jE,IAAK,KAAK,cAAc,QAAQA,MAAO,WAAkBA,EAAG,QAAS,CAAC8jE,EAAK,IAAI,GAAG70D,EAAM,GAAG,KAC7F,KAAK,kBAAkB,KAAK,UAAU60D,CAAI,GAC1C+lB,KAAU,UACV,KAAK,IAAI,YAAY,IAEhBA,KAAU,iBACf,KAAK,kBAAiB,IAEjBE,KACLra,GAAeqa,CAAY;AAAA,EAEnC;AAAA;AAAA;AAAA;AAAA,EAIA,oBAAoB;AAChB,QAAIrb,IAAW,KAAK,kBAAiB,EAAG;AACxC,QAAI,GAACA,KAAY,CAAC,KAAK,IAAI,SAASA,EAAS,YAAY,IAAIA,IAAWA,EAAS,UAAU;AACtF,UAAI,MAAK,SAAS,2BAA2B,CAAA1nB,MAAKA,EAAE,IAAI,CAAC,EACzD,KAAI,KAAK,MAAM,qBAAqBub,GAAe;AACpD,YAAI9wD,IAAS,KAAK,QAAQ,YAAY,KAAK,MAAM,UAAU,IAAI;AAC/D,QAAIA,EAAO,YAAY,KACnBg9D,GAAmB,MAAMh9D,EAAO,sBAAqB,GAAIi9D,CAAQ;AAAA,MACzE;AAEI,QAAAD,GAAmB,MAAM,KAAK,YAAY,KAAK,MAAM,UAAU,MAAM,CAAC,GAAGC,CAAQ;AAAA;AAAA,EAEzF;AAAA,EACA,qBAAqB;AACjB,QAAI/6C;AACJ,WAAOA,IAAO,KAAK,YAAY,IAAG;AAC9B,MAAIA,EAAK,WACLA,EAAK,QAAO;AAAA,EACxB;AAAA,EACA,kBAAkBw2D,GAAW;AACzB,QAAI,CAACA,KAAaA,EAAU,WAAW,KAAK,MAAM,WAAW,KAAK,iBAAiB,KAAK,mBAAmB;AACvG,WAAK,oBAAoB,KAAK,eAC9B,KAAK,mBAAkB;AACvB,eAASloF,IAAI,GAAGA,IAAI,KAAK,cAAc,QAAQA,KAAK;AAChD,YAAIgX,IAAS,KAAK,cAAchX,CAAC;AACjC,QAAIgX,EAAO,KAAK,QACZ,KAAK,YAAY,KAAKA,EAAO,KAAK,KAAK,IAAI,CAAC;AAAA,MACpD;AACA,eAAShX,IAAI,GAAGA,IAAI,KAAK,MAAM,QAAQ,QAAQA,KAAK;AAChD,YAAIgX,IAAS,KAAK,MAAM,QAAQhX,CAAC;AACjC,QAAIgX,EAAO,KAAK,QACZ,KAAK,YAAY,KAAKA,EAAO,KAAK,KAAK,IAAI,CAAC;AAAA,MACpD;AAAA,IACJ;AAEI,eAAShX,IAAI,GAAGA,IAAI,KAAK,YAAY,QAAQA,KAAK;AAC9C,YAAImoF,IAAa,KAAK,YAAYnoF,CAAC;AACnC,QAAImoF,EAAW,UACXA,EAAW,OAAO,MAAMD,CAAS;AAAA,MACzC;AAAA,EAER;AAAA,EACA,kBAAkB9H,GAAUve,GAAM;AAC9B,QAAIpB,IAAM2f,EAAS,MAAMz7B,IAAQ;AACjC,QAAI,KAAK,MAAM,IAAI,OAAO8b,EAAI,IAAI,KAAKA,EAAI;AACvC,MAAA9b,IAAQ8b,EAAI;AAAA,SAEX;AACD,UAAI2nB,IAAW3nB,EAAI,QAAQ,KAAK,MAAM,IAAI,QAAQ,OAAOoB,EAAK,IAAI,QAAQ;AAE1E,OADYumB,IAAW,KAAK,KAAK,MAAM,IAAI,OAAOA,CAAQ,MAC7C3nB,EAAI,SACb9b,IAAQyjC;AAAA,IAChB;AACA,SAAK,WAAW,IAAItI,GAASM,EAAS,OAAOA,EAAS,MAAMz7B,IAAQ,IAAI,SAAY2b,EAAc,OAAO,KAAK,MAAM,KAAK3b,CAAK,CAAC;AAAA,EACnI;AAAA,EACA,SAAS24B,GAAUv4B,GAAG;AAClB,QAAIC,IAAO,KAAK,UAAU,KAAK,OAAOs4B,CAAQ,GAAGr/E;AACjD,QAAI+mD,KAAQ,SAAS/mD,IAAQ8mD,IAAIA,EAAEC,CAAI,IAAIA;AACvC,aAAO/mD;AACX,aAAS+B,IAAI,GAAGA,IAAI,KAAK,cAAc,QAAQA,KAAK;AAChD,UAAIglD,IAAO,KAAK,cAAchlD,CAAC,EAAE,MAAMs9E,CAAQ;AAC/C,UAAIt4B,KAAQ,SAAS/mD,IAAQ8mD,IAAIA,EAAEC,CAAI,IAAIA;AACvC,eAAO/mD;AAAA,IACf;AACA,QAAIgZ,IAAU,KAAK,MAAM;AACzB,QAAIA;AACA,eAASjX,IAAI,GAAGA,IAAIiX,EAAQ,QAAQjX,KAAK;AACrC,YAAIglD,IAAO/tC,EAAQjX,CAAC,EAAE,MAAMs9E,CAAQ;AACpC,YAAIt4B,KAAQ,SAAS/mD,IAAQ8mD,IAAIA,EAAEC,CAAI,IAAIA;AACvC,iBAAO/mD;AAAA,MACf;AAAA,EACR;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW;AAIP,QAAIypE,IAAI;AAGJ,UAAIn5D,IAAO,KAAK,KAAK;AACrB,UAAIA,KAAQ,KAAK;AACb,eAAO;AACX,UAAI,CAACA,KAAQ,CAAC,KAAK,IAAI,SAASA,CAAI;AAChC,eAAO;AACX,aAAOA,KAAQ,KAAK,OAAOA,KAAQ,KAAK,IAAI,SAASA,CAAI,KAAG;AACxD,YAAIA,EAAK,mBAAmB;AACxB,iBAAO;AACX,QAAAA,IAAOA,EAAK;AAAA,MAChB;AACA,aAAO;AAAA,IACX;AACA,WAAO,KAAK,KAAK,iBAAiB,KAAK;AAAA,EAC3C;AAAA;AAAA;AAAA;AAAA,EAIA,QAAQ;AACJ,SAAK,YAAY,KAAI,GACjB,KAAK,YACLu/D,GAAmB,KAAK,GAAG,GAC/B8J,GAAe,IAAI,GACnB,KAAK,YAAY,MAAK;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,IAAI,OAAO;AACP,QAAIjhC,IAAS,KAAK;AAClB,QAAIA,KAAU;AACV,eAASzkB,IAAS,KAAK,IAAI,YAAYA,GAAQA,IAASA,EAAO;AAC3D,YAAIA,EAAO,YAAY,KAAMA,EAAO,YAAY,MAAMA,EAAO;AACzD,iBAAKA,EAAO,iBACR,OAAO,eAAeA,CAAM,EAAE,eAAe,MAAMA,EAAO,cAAc,aAAY,IACjF,KAAK,QAAQA;AAAA;AAGhC,WAAOykB,KAAU;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa;AACT,SAAK,QAAQ;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,YAAYq3B,GAAQ;AAChB,WAAOuB,GAAY,MAAMvB,CAAM;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,YAAY18D,GAAK67B,IAAO,GAAG;AACvB,WAAOwiC,GAAY,MAAMr+D,GAAK67B,CAAI;AAAA,EACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,SAAS77B,GAAK67B,IAAO,GAAG;AACpB,WAAO,KAAK,QAAQ,WAAW77B,GAAK67B,CAAI;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,QAAQ77B,GAAK;AACT,QAAImwD,IAAO,KAAK,QAAQ,OAAOnwD,CAAG;AAClC,WAAOmwD,IAAOA,EAAK,UAAU;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,SAASlzD,GAAM2O,GAAQ8+C,IAAO,IAAI;AAC9B,QAAI1qD,IAAM,KAAK,QAAQ,WAAW/C,GAAM2O,GAAQ8+C,CAAI;AACpD,QAAI1qD,KAAO;AACP,YAAM,IAAI,WAAW,oCAAoC;AAC7D,WAAOA;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,eAAequD,GAAK3yD,GAAO;AACvB,WAAOokE,GAAe,MAAMpkE,KAAS,KAAK,OAAO2yD,CAAG;AAAA,EACxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,UAAUrsC,GAAM5R,GAAO;AACnB,WAAO89D,GAAQ,MAAM,IAAIlsD,GAAM,IAAO5R,KAAS,IAAI,eAAe,OAAO,CAAC;AAAA,EAC9E;AAAA;AAAA;AAAA;AAAA,EAIA,UAAUve,GAAMue,GAAO;AACnB,WAAO89D,GAAQ,MAAMr8E,GAAM,MAAM,IAAMue,KAAS,IAAI,eAAe,OAAO,CAAC;AAAA,EAC/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,sBAAsBgB,GAAO;AACzB,WAAO83D,GAAsB,MAAM93D,CAAK;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,UAAU;AACN,IAAK,KAAK,YAEVk6D,GAAa,IAAI,GACjB,KAAK,mBAAkB,GACnB,KAAK,WACL,KAAK,QAAQ,OAAO,KAAK,MAAM,KAAK,CAAA,GAAIyG,GAAgB,IAAI,GAAG,IAAI,GACnE,KAAK,IAAI,cAAc,MAElB,KAAK,IAAI,cACd,KAAK,IAAI,WAAW,YAAY,KAAK,GAAG,GAE5C,KAAK,QAAQ,QAAO,GACpB,KAAK,UAAU,MACf1Y,GAAgB;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,cAAc;AACd,WAAO,KAAK,WAAW;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA,EAIA,cAAcjpD,GAAO;AACjB,WAAOo7D,GAAc,MAAMp7D,CAAK;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA,EAIA,oBAAoB;AAChB,QAAI++C,IAAM,KAAK,aAAY;AAC3B,WAAKA,IAEEoH,MAAU,KAAK,KAAK,aAAa,MACpC6D,GAAkB,KAAK,IAAI,aAAa,KAAK,KAAK,OAAOgZ,GAA2B,MAAMjkB,CAAG,KAAKA,IAF3F,EAAE,WAAW,MAAM,aAAa,GAAG,YAAY,MAAM,cAAc,EAAC;AAAA,EAGnF;AAAA;AAAA;AAAA;AAAA,EAIA,eAAe;AACX,WAAO,KAAK,KAAK,aAAY;AAAA,EACjC;AACJ;AACAumB,GAAW,UAAU,WAAW,SAAUxtC,GAAI;AAC1C,MAAI6uC,IAAsB,KAAK,OAAO;AACtC,EAAIA,IACAA,EAAoB,KAAK,MAAM7uC,CAAE,IAEjC,KAAK,YAAY,KAAK,MAAM,MAAMA,CAAE,CAAC;AAC7C;AACA,SAAS6tC,GAAe31D,GAAM;AAC1B,MAAI1mB,IAAQ,uBAAO,OAAO,IAAI;AAC9B,SAAAA,EAAM,QAAQ,eACdA,EAAM,kBAAkB,OAAO0mB,EAAK,QAAQ,GAC5CA,EAAK,SAAS,cAAc,CAAAzzB,MAAS;AAGjC,QAFI,OAAOA,KAAS,eAChBA,IAAQA,EAAMyzB,EAAK,KAAK,IACxBzzB;AACA,eAASiN,KAAQjN;AACb,QAAIiN,KAAQ,UACRF,EAAM,SAAS,MAAM/M,EAAMiN,CAAI,IAC1BA,KAAQ,UACbF,EAAM,SAASA,EAAM,QAAQA,EAAM,QAAQ,MAAM,MAAM/M,EAAMiN,CAAI,IAC5D,CAACF,EAAME,CAAI,KAAKA,KAAQ,qBAAqBA,KAAQ,eAC1DF,EAAME,CAAI,IAAI,OAAOjN,EAAMiN,CAAI,CAAC;AAAA,EAEhD,CAAC,GACIF,EAAM,cACPA,EAAM,YAAY,OACf,CAAC+1E,GAAW,KAAK,GAAGrvD,EAAK,MAAM,IAAI,QAAQ,MAAM1mB,CAAK,CAAC;AAClE;AACA,SAASm8E,GAAoBz1D,GAAM;AAC/B,MAAIA,EAAK,YAAY;AACjB,QAAIo8B,IAAM,SAAS,cAAc,KAAK;AACtC,IAAAA,EAAI,YAAY,yBAChBA,EAAI,aAAa,oBAAoB,MAAM,GAC3CA,EAAI,aAAa,OAAO,EAAE,GAC1Bp8B,EAAK,gBAAgB,EAAE,KAAAo8B,GAAK,MAAMizB,GAAW,OAAOrvD,EAAK,MAAM,UAAU,MAAMo8B,GAAK,EAAE,KAAK,IAAM,OAAOp8B,EAAK,WAAU,CAAE,EAAC;AAAA,EAC9H;AAEI,IAAAA,EAAK,gBAAgB;AAE7B;AACA,SAASw1D,GAAYx1D,GAAM;AACvB,SAAO,CAACA,EAAK,SAAS,YAAY,CAAAzzB,MAASA,EAAMyzB,EAAK,KAAK,MAAM,EAAK;AAC1E;AACA,SAASs2D,GAAwBM,GAAMC,GAAM;AACzC,MAAI1xD,IAAQ,KAAK,IAAIyxD,EAAK,QAAQ,YAAYA,EAAK,IAAI,GAAGC,EAAK,QAAQ,YAAYA,EAAK,IAAI,CAAC;AAC7F,SAAOD,EAAK,QAAQ,MAAMzxD,CAAK,KAAK0xD,EAAK,QAAQ,MAAM1xD,CAAK;AAChE;AACA,SAASuwD,GAAe11D,GAAM;AAC1B,MAAI5uB,IAAS,uBAAO,OAAO,IAAI;AAC/B,WAASiU,EAAI5H,GAAK;AACd,aAAS61C,KAAQ71C;AACb,MAAK,OAAO,UAAU,eAAe,KAAKrM,GAAQkiD,CAAI,MAClDliD,EAAOkiD,CAAI,IAAI71C,EAAI61C,CAAI;AAAA,EACnC;AACA,SAAAtzB,EAAK,SAAS,aAAa3a,CAAG,GAC9B2a,EAAK,SAAS,aAAa3a,CAAG,GACvBjU;AACX;AACA,SAAS6kF,GAAiBj+E,GAAGC,GAAG;AAC5B,MAAI6+E,IAAK,GAAGC,IAAK;AACjB,WAASzjC,KAAQt7C,GAAG;AAChB,QAAIA,EAAEs7C,CAAI,KAAKr7C,EAAEq7C,CAAI;AACjB,aAAO;AACX,IAAAwjC;AAAA,EACJ;AACA,WAASl4D,KAAK3mB;AACV,IAAA8+E;AACJ,SAAOD,KAAMC;AACjB;AACA,SAASxB,GAAoBjwE,GAAQ;AACjC,MAAIA,EAAO,KAAK,SAASA,EAAO,KAAK,qBAAqBA,EAAO,KAAK;AAClE,UAAM,IAAI,WAAW,qEAAqE;AAClG;AC/qLA,SAAS0xE,GAAS1xE,GAAQ4I,GAAM;AAC9B,SAAA5I,EAAO,OAAO;AAAA,IACZ,SAAS;AAAA,IACT,OAAO;AAAA,IACP,GAAG4I;AAAA,EACP,GACS5I;AACT;AACA,MAAM2xE,KAAiB;AAAA,EACrB,MAAM,CAACp6E,GAAM+hB,GAAGtjB,GAAO0S,MAAS;AAC9B,UAAMzhB,IAAQsQ,EAAK;AACnB,WAAI,gBAAgB,KAAKtQ,CAAK,IACrBA,IAEF+O,EAAM,KAAK/O,GAAO,EAAE,GAAGyhB,GAAM,QAAQ,CAAA,GAAI;AAAA,EAClD;AAAA,EACA,QAAQ,CAACnR,GAAM+hB,GAAGtjB,GAAO0S,MAAS;AAChC,UAAMpX,IAASiG,EAAK,UAAUvB,EAAM,QAAQ,UAAU,KAChDoR,IAAOpR,EAAM,MAAM,QAAQ,GAC3BqvB,IAAUrvB,EAAM,cAAc0S,CAAI;AACxC,QAAIzhB,IAAQo+B,EAAQ,KAAK/zB,IAASA,CAAM;AACxC,WAAArK,KAASo+B,EAAQ;AAAA,MACfrvB,EAAM,kBAAkBuB,GAAM;AAAA,QAC5B,QAAQtQ;AAAA,QACR,OAAOqK;AAAA,QACP,GAAG+zB,EAAQ,QAAO;AAAA,MAC1B,CAAO;AAAA,IACP,GACIp+B,KAASo+B,EAAQ,KAAK/zB,IAASA,CAAM,GACrC8V,EAAI,GACGngB;AAAA,EACT;AAAA,EACA,UAAU,CAACsQ,GAAM+hB,GAAGtjB,GAAO0S,MAAS;AAClC,UAAMpX,IAASiG,EAAK,UAAUvB,EAAM,QAAQ,YAAY,KAClDoR,IAAOpR,EAAM,MAAM,UAAU,GAC7BqvB,IAAUrvB,EAAM,cAAc0S,CAAI;AACxC,QAAIzhB,IAAQo+B,EAAQ,KAAK/zB,CAAM;AAC/B,WAAArK,KAASo+B,EAAQ;AAAA,MACfrvB,EAAM,kBAAkBuB,GAAM;AAAA,QAC5B,QAAQtQ;AAAA,QACR,OAAOqK;AAAA,QACP,GAAG+zB,EAAQ,QAAO;AAAA,MAC1B,CAAO;AAAA,IACP,GACIp+B,KAASo+B,EAAQ,KAAK/zB,CAAM,GAC5B8V,EAAI,GACGngB;AAAA,EACT;AACF,GACM2qF,KAAgBnmC,EAAY,CAAA,GAAI,YAAY,GAC5ComC,KAAiBpmC,EAAY,CAAA,GAAI,aAAa,GAC9CqmC,KAAermC,EAAY,CAAA,GAAI,WAAW,GAC1CsmC,KAAYtmC,EAAY,CAAA,GAAI,QAAQ,GACpCumC,KAAgBvmC,EAAY,CAAA,GAAI,YAAY,GAC5CwmC,KAAkBxmC,EAAY,CAAA,GAAI,cAAc,GAChDymC,KAAmBzmC;AAAA,EACvB,CAAA;AAAA,EACA;AACF,GACM0mC,KAAc1mC,EAAY,CAAA,GAAI,UAAU,GACxC2mC,KAAc3mC,EAAY,CAAA,GAAI,UAAU,GACxC4mC,KAAY5mC;AAAA,EAChBjrC,GAAO,EAAG,IAAI4f,EAAW,EAAE,IAAIy6B,EAAe;AAAA,EAC9C;AACF,GACMy3B,KAA4B7mC;AAAA,EAChC;AAAA,IACE,UAAUkmC;AAAA,IACV,QAAQ,CAAA;AAAA,EACZ;AAAA,EACE;AACF,GACMY,KAAc9kC,GAAY,aAAa;AAC7C,SAAS1xB,GAAO8C,GAAW;AACzB,QAAM7e,IAAS,CAACwyE,OACdA,EAAI,OAAOD,EAAW,GACf,aACL,MAAM1zD,EAAU2zD,CAAG,GACnBA,EAAI,KAAKD,EAAW,GACb,MAAM;AACX,IAAAC,EAAI,WAAWD,EAAW;AAAA,EAC5B;AAGJb,SAAAA,GAAS1xE,GAAQ;AAAA,IACf,aAAa;AAAA,EACjB,CAAG,GACMA;AACT;AACA,MAAMyyE,KAAYhlC,GAAY,WAAW;AACzC,SAASilC,GAAKC,GAAQ;AACpB,QAAM3yE,IAAS,CAACwyE,OACdA,EAAI,OAAOT,IAAWY,CAAM,EAAE,OAAOV,IAAiB,EAAE,EAAE,OAAOC,IAAkB,CAAA,CAAE,EAAE,OAAOF,IAAe,CAAA,CAAE,EAAE,OAAOG,IAAa,CAAA,CAAE,EAAE,OAAOC,IAAa,CAAA,CAAE,EAAE,OAAOE,IAA2B;AAAA,IACjM,UAAUX;AAAA,IACV,QAAQ,CAAA;AAAA,EACd,CAAK,EAAE,OAAOU,IAAW7xE,GAAO,EAAG,IAAI4f,EAAW,EAAE,IAAIy6B,EAAe,CAAC,EAAE,OAAOi3B,IAAc,CAACS,EAAW,CAAC,EAAE,OAAOE,EAAS,GACnH,YAAY;AACjB,UAAMD,EAAI,WAAWV,EAAY;AACjC,UAAMrrF,IAAU+rF,EAAI,IAAIF,EAAyB;AACjD,WAAAE,EAAI;AAAA,MACFH;AAAA,MACA7xE,GAAO,EAAG,IAAI4f,EAAW,EAAE,IAAIy6B,IAAiBp0D,CAAO;AAAA,IAC/D,GACM+rF,EAAI,KAAKC,EAAS,GACX,MAAM;AACX,MAAAD,EAAI,OAAOT,EAAS,EAAE,OAAOE,EAAe,EAAE,OAAOC,EAAgB,EAAE,OAAOF,EAAa,EAAE,OAAOG,EAAW,EAAE,OAAOC,EAAW,EAAE,OAAOE,EAAyB,EAAE,OAAOD,EAAS,EAAE,OAAOP,EAAY,EAAE,WAAWW,EAAS;AAAA,IACpO;AAAA,EACF;AAEFf,SAAAA,GAAS1xE,GAAQ;AAAA,IACf,aAAa;AAAA,EACjB,CAAG,GACMA;AACT;AACA,MAAM4yE,KAAcnlC,GAAY,aAAa,GACvColC,KAAiBpnC,EAAY,CAAA,GAAI,aAAa,GAC9CqnC,KAAYrnC,EAAY,CAAA,GAAI,QAAQ,GACpCsnC,KAAWtnC,EAAY,CAAA,GAAI,OAAO,GAClCunC,KAAWvnC,EAAY,CAAA,GAAI,OAAO;AACxC,SAASwnC,GAAelwC,GAAG;AACzB,SAAO;AAAA,IACL,GAAGA;AAAA,IACH,UAAUA,EAAE,UAAU,IAAI,CAACyT,OAAU,EAAE,UAAUzT,EAAE,UAAU,GAAGyT,EAAI,EAAG;AAAA,EAC3E;AACA;AACA,MAAM9X,KAAS,CAAC8zC,OACdA,EAAI,OAAOM,IAAW,CAAA,CAAE,EAAE,OAAOC,IAAU,CAAA,CAAE,EAAE,OAAOC,IAAU,CAAA,CAAE,EAAE,OAAOH,IAAgB,CAACJ,EAAS,CAAC,EAAE,OAAOG,EAAW,GACnH,YAAY;AACjB,QAAMJ,EAAI,WAAWK,EAAc;AACnC,QAAM91B,IAASy1B,EAAI,IAAIH,EAAS,GAE1BttC,IADgBytC,EAAI,IAAIN,EAAgB,EACd;AAAA,IAC9B,CAACloC,GAAKkpC,MAASlpC,EAAI,IAAIkpC,EAAK,QAAQA,EAAK,OAAO;AAAA,IAChDn2B;AAAA,EACN;AACI,EAAAy1B,EAAI,IAAIH,IAAWttC,CAAS;AAC5B,QAAMniB,IAAQ,OAAO;AAAA,IACnB4vD,EAAI,IAAIO,EAAQ,EAAE,IAAI,CAAC,CAACI,GAAMpwC,CAAC,MAAM,CAACowC,GAAMF,GAAelwC,CAAC,CAAC,CAAC;AAAA,EACpE,GACU0M,IAAQ,OAAO;AAAA,IACnB+iC,EAAI,IAAIQ,EAAQ,EAAE,IAAI,CAAC,CAACG,GAAMpwC,CAAC,MAAM,CAACowC,GAAMF,GAAelwC,CAAC,CAAC,CAAC;AAAA,EACpE,GACUqwC,IAAU,IAAIx2C,GAAO,EAAE,OAAAha,GAAO,OAAA6sB,EAAK,CAAE;AAC3C,SAAA+iC,EAAI,IAAIM,IAAWM,CAAO,GAC1BZ,EAAI,KAAKI,EAAW,GACb,MAAM;AACX,IAAAJ,EAAI,OAAOM,EAAS,EAAE,OAAOC,EAAQ,EAAE,OAAOC,EAAQ,EAAE,OAAOH,EAAc,EAAE,WAAWD,EAAW;AAAA,EACvG;AACF;AAEFlB,GAAShzC,IAAQ;AAAA,EACf,aAAa;AACf,CAAC;AnPrKc,IAAAiN,IAAA0nC;AmPsKf,MAAMC,GAAe;AAAA,EACnB,cAAc;AA+Bd,IAAAvoC,EAAA,MAAAY;AACA,IAAAZ,EAAA,MAAAsoC;AA/BE,IAAAroC,EAAA,MAAKW,IAAa,IAAIlB,GAAS,IAC/BO,EAAA,MAAKqoC,IAAO,OACZ,KAAK,SAAS,CAACb,MAAQ;AACrB,MAAAxnC,EAAA,MAAKqoC,IAAOb;AAAA,IACd,GACA,KAAK,QAAQ,MAAM;AACjB,UAAIvnC,EAAA,MAAKooC,OAAQ,KAAM,OAAM/oC,GAA2B;AACxD,YAAMkoC,IAAMvnC,EAAA,MAAKooC,KACXE,IAAY,CAAA,GACZC,IAAM,KAAK,IAAI,KAAK,IAAI,GACxBC,IAAS;AAAA,QACb,KAAK,MAAM;AACT,gBAAMC,IAAUvkB,GAAc,GAAGokB,CAAS,GACpC74D,IAAO83D,EAAI,IAAIZ,EAAa;AAClC,iBAAO8B,EAAQh5D,EAAK,OAAOA,EAAK,UAAUA,CAAI;AAAA,QAChD;AAAA,QACA,QAAQ,CAACi5D,OACPJ,EAAU,KAAKI,CAAO,GACfF;AAAA,QAET,MAAMG,EAAK,KAAK,IAAI;AAAA,MAC5B;AACM,eAASA,EAAKloE,GAAOmoE,GAAS;AAC5B,cAAMC,IAAMN,EAAI9nE,CAAK;AACrB,eAAA6nE,EAAU,KAAKO,EAAID,CAAO,CAAC,GACpBJ;AAAA,MACT;AACA,aAAOA;AAAA,IACT;AAAA,EACF;AAAA,EAGA,IAAI,MAAM;AACR,WAAOxoC,EAAA,MAAKooC;AAAA,EACd;AAAA;AAAA,EAEA,OAAOzqE,GAAM3hB,GAAO;AAClB,UAAMykB,IAAQ9C,EAAK,OAAOqiC,EAAA,MAAKU,IAAW,QAAQ;AAClD,WAAAjgC,EAAM,IAAIzkB,CAAK,GACRykB;AAAA,EACT;AAAA,EACA,IAAIA,GAAO;AACT,WAAOu/B,EAAA,MAAKU,IAAW,IAAIjgC,CAAK,EAAE,IAAG;AAAA,EACvC;AAAA,EACA,OAAOA,GAAO;AACZ,WAAOu/B,EAAA,MAAKU,IAAW,OAAOjgC,CAAK;AAAA,EACrC;AAAA,EACA,KAAKA,GAAOmoE,GAAS;AACnB,QAAI5oC,EAAA,MAAKooC,OAAQ,KAAM,OAAM/oC,GAA2B;AAExD,UAAMqpC,IADM,KAAK,IAAIjoE,CAAK,EACNmoE,CAAO,GACrBn5D,IAAOuwB,EAAA,MAAKooC,IAAK,IAAIzB,EAAa;AACxC,WAAO+B,EAAQj5D,EAAK,OAAOA,EAAK,UAAUA,CAAI;AAAA,EAChD;AAAA;AAAA,EAEA,OAAOi5D,GAAS;AACd,QAAI1oC,EAAA,MAAKooC,OAAQ,KAAM,OAAM/oC,GAA2B;AACxD,UAAM5vB,IAAOuwB,EAAA,MAAKooC,IAAK,IAAIzB,EAAa;AACxC,WAAO+B,EAAQj5D,EAAK,OAAOA,EAAK,UAAUA,CAAI;AAAA,EAChD;AACF;AA9BEixB,KAAA,eACA0nC,KAAA;AA8BF,SAASU,GAAaZ,IAAO,UAAU;AACrC,SAAO1nC,GAAa,MAAM,MAAM,KAAQ0nC,CAAI;AAC9C;AACA,MAAMa,KAAcvoC,EAAY,IAAI6nC,GAAc,GAAI,UAAU,GAC1DW,KAAmBxoC,EAAY,CAACmnC,EAAW,GAAG,eAAe,GAC7DsB,KAAgBzmC,GAAY,eAAe,GAC3C2hB,KAAW,CAACojB,MAAQ;AACxB,QAAMsB,IAAM,IAAIR,GAAc;AAC9B,SAAAQ,EAAI,OAAOtB,CAAG,GACdA,EAAI,OAAOwB,IAAaF,CAAG,EAAE,OAAOG,IAAkB,CAACrB,EAAW,CAAC,EAAE,OAAOsB,EAAa,GAClF,aACL,MAAM1B,EAAI,WAAWyB,EAAgB,GACrCzB,EAAI,KAAK0B,EAAa,GACf,MAAM;AACX,IAAA1B,EAAI,OAAOwB,EAAW,EAAE,OAAOC,EAAgB,EAAE,WAAWC,EAAa;AAAA,EAC3E;AAEJ;AACAxC,GAAStiB,IAAU;AAAA,EACjB,aAAa;AACf,CAAC;AACD,SAAS+kB,GAAmBC,GAAS;AACnC,QAAMC,IAAkBllB;AAAA,IACtBU;AAAA,IACAjE;AAAA,IACAU;AAAA,IACAO;AAAA,EACJ;AACE,SAAAunB,EAAQ,YAAYC,GACbD;AACT;AnPnQe,IAAAf,IAAAiB;AmPoQf,MAAMC,GAAc;AAAA,EAClB,cAAc;AA8Dd,IAAAxpC,EAAA,MAAAsoC;AACA,IAAAtoC,EAAA,MAAAupC;AA9DE,IAAAtpC,EAAA,MAAKqoC,IAAO,OACZroC,EAAA,MAAKspC,IAAU,CAAA,IACf,KAAK,SAAS,CAAC9B,MAAQ;AACrB,MAAAxnC,EAAA,MAAKqoC,IAAOb;AAAA,IACd,GACA,KAAK,MAAM,CAAC4B,OACVnpC,EAAA,MAAKqpC,IAAQ,KAAKF,CAAO,GAClB,MAAM;AACX,MAAAppC,EAAA,MAAKspC,IAAUrpC,EAAA,MAAKqpC,IAAQ,OAAO,CAAClwE,MAASA,MAASgwE,CAAO;AAAA,IAC/D,IAEF,KAAK,kBAAkB,CAACI,MAAY;AAClC,YAAMvzE,IAAS,CAAA;AACf,oBAAO,QAAQuzE,CAAO,EAAE,QAAQ,CAAC,CAACrB,GAAMQ,CAAO,MAAM;AACnD,YAAI,OAAOA,KAAY,YAAY;AACjC,gBAAMc,IAAa;AAAA,YACjB,KAAKtB;AAAA,YACL,OAAO,MAAMQ;AAAA,UACzB;AACU,UAAA1oC,EAAA,MAAKqpC,IAAQ,KAAKG,CAAU,GAC5BxzE,EAAO,KAAK,MAAM;AAChB,YAAA+pC,EAAA,MAAKspC,IAAUrpC,EAAA,MAAKqpC,IAAQ,OAAO,CAAClwE,MAASA,MAASqwE,CAAU;AAAA,UAClE,CAAC;AAAA,QACH;AACE,UAAAxpC,EAAA,MAAKqpC,IAAQ,KAAKX,CAAO,GACzB1yE,EAAO,KAAK,MAAM;AAChB,YAAA+pC,EAAA,MAAKspC,IAAUrpC,EAAA,MAAKqpC,IAAQ,OAAO,CAAClwE,MAASA,MAASuvE,CAAO;AAAA,UAC/D,CAAC;AAAA,MAEL,CAAC,GACM,MAAM;AACX,QAAA1yE,EAAO,QAAQ,CAACvH,MAAOA,EAAE,CAAE;AAAA,MAC7B;AAAA,IACF,GACA,KAAK,gBAAgB,MAAM;AACzB,YAAMoI,IAAOqyE,GAAmB1kB,EAAU;AAC1C,aAAO,KAAK,gBAAgB3tD,CAAI;AAAA,IAClC,GACA,KAAK,QAAQ,MAAM;AACjB,YAAMsyE,IAAU,CAAA;AAChB,aAAAnpC,EAAA,MAAKqpC,IAAQ,QAAQ,CAAClwE,MAAS;AAC7B,QAAAgwE,EAAQhwE,EAAK,GAAG,IAAI,CAAC,GAAGgwE,EAAQhwE,EAAK,GAAG,KAAK,CAAA,GAAIA,CAAI;AAAA,MACvD,CAAC,GACc,OAAO;AAAA,QACpB,OAAO,QAAQgwE,CAAO,EAAE,IAAI,CAAC,CAACjB,GAAMjyE,CAAK,MAAM;AAC7C,gBAAMwzE,IAAcxzE,EAAM;AAAA,YACxB,CAACxO,GAAGC,OAAOA,EAAE,YAAY,OAAOD,EAAE,YAAY;AAAA,UAC1D;AAQU,iBAAO,CAACygF,GAPQ,CAACn9E,GAAO61D,GAAUnxC,MAAS;AACzC,kBAAM83D,IAAMvnC,EAAA,MAAKooC;AACjB,gBAAIb,KAAO,KAAM,OAAM/oC,GAAiB;AACxC,kBAAM8pC,IAAYmB,EAAY,IAAI,CAACtwE,MAASA,EAAK,MAAMouE,CAAG,CAAC;AAE3D,mBADgBrjB,GAAc,GAAGokB,CAAS,EAC3Bv9E,GAAO61D,GAAUnxC,CAAI;AAAA,UACtC,CACqB;AAAA,QACvB,CAAC;AAAA,MACT;AAAA,IAEI;AAAA,EACF;AAAA,EAGA,IAAI,MAAM;AACR,WAAOuwB,EAAA,MAAKooC;AAAA,EACd;AACF;AALEA,KAAA,eACAiB,KAAA;AAKF,MAAMK,KAAYlpC,EAAY,IAAI8oC,GAAa,GAAI,QAAQ,GACrDK,KAAiBnpC,EAAY,CAACmnC,EAAW,GAAG,aAAa,GACzDiC,KAAcpnC,GAAY,aAAa,GACvCulB,KAAS,CAACwf,MAAQ;AACtB,QAAMsC,IAAK,IAAIP,GAAa;AAC5B,SAAAO,EAAG,OAAOtC,CAAG,GACbA,EAAI,OAAOmC,IAAWG,CAAE,EAAE,OAAOF,IAAgB,CAAChC,EAAW,CAAC,EAAE,OAAOiC,EAAW,GAC3E,aACL,MAAMrC,EAAI,WAAWoC,EAAc,GACnCpC,EAAI,KAAKqC,EAAW,GACb,MAAM;AACX,IAAArC,EAAI,OAAOmC,EAAS,EAAE,OAAOC,EAAc,EAAE,WAAWC,EAAW;AAAA,EACrE;AAEJ,GACME,KAActnC,GAAY,aAAa,GACvCunC,MAAgB,MAAM;AAC1B,QAAMvrC,GAAiB;AACzB,IACMwrC,KAAYxpC,EAAYupC,IAAc,QAAQ,GAC9CE,KAAiBzpC,EAAY,CAAA,GAAI,aAAa,GAC9CltC,KAAS,CAACi0E,OACdA,EAAI,OAAOyC,IAAWD,EAAY,EAAE,OAAOE,IAAgB,CAACtC,EAAW,CAAC,EAAE,OAAOmC,EAAW,GACrF,YAAY;AACjB,QAAMvC,EAAI,WAAW0C,EAAc;AACnC,QAAMn4B,IAASy1B,EAAI,IAAIH,EAAS,GAC1Be,IAAUZ,EAAI,IAAIM,EAAS;AACjC,SAAAN,EAAI,IAAIyC,IAAWj4B,GAAY,OAAOo2B,GAASr2B,CAAM,CAAC,GACtDy1B,EAAI,KAAKuC,EAAW,GACb,MAAM;AACX,IAAAvC,EAAI,OAAOyC,EAAS,EAAE,OAAOC,EAAc,EAAE,WAAWH,EAAW;AAAA,EACrE;AACF;AAEFrD,GAASnzE,IAAQ;AAAA,EACf,aAAa;AACf,CAAC;AACD,MAAM42E,KAAkB1nC,GAAY,iBAAiB,GAC/C2nC,KAAqB3pC;AAAA,EACzB,CAAA;AAAA,EACA;AACF,GACM4pC,MAAc,MAAM;AACxB,QAAM5rC,GAAiB;AACzB,IACM6rC,KAAgB7pC;AAAA,EACpB4pC;AAAA,EACA;AACF,GACMl7C,KAAa,CAACq4C,OAClBA,EAAI,OAAO8C,IAAeD,EAAU,EAAE,OAAOD,IAAoB,CAACxC,EAAW,CAAC,EAAE,OAAOuC,EAAe,GAC/F,YAAY;AACjB,QAAM3C,EAAI,WAAW4C,EAAkB;AACvC,QAAMr4B,IAASy1B,EAAI,IAAIH,EAAS,GAC1Be,IAAUZ,EAAI,IAAIM,EAAS;AACjC,SAAAN,EAAI,IAAI8C,IAAel3B,GAAgB,OAAOg1B,GAASr2B,CAAM,CAAC,GAC9Dy1B,EAAI,KAAK2C,EAAe,GACjB,MAAM;AACX,IAAA3C,EAAI,OAAO8C,EAAa,EAAE,OAAOF,EAAkB,EAAE,WAAWD,EAAe;AAAA,EACjF;AACF;AAEFzD,GAASv3C,IAAY;AAAA,EACnB,aAAa;AACf,CAAC;AACD,MAAMo7C,KAAkB9pC,EAAY,IAAI,cAAc,GAChD+pC,KAAwB/pC;AAAA,EAC5B,CAAC1I,MAAMA;AAAA,EACP;AACF,GACM0yC,KAAsBhqC;AAAA,EAC1B,CAAA;AAAA,EACA;AACF,GACMiqC,KAAmBjoC,GAAY,kBAAkB;AACvD,SAASkoC,GAAOC,GAAcC,GAASzC,GAAS;AAC9C,MAAI,OAAOwC,KAAiB,SAAU,QAAOC,EAAQD,CAAY;AACjE,MAAIA,EAAa,SAAS;AACxB,WAAOl/B,GAAU,WAAW08B,CAAO,EAAE,MAAMwC,EAAa,GAAG;AAC7D,MAAIA,EAAa,SAAS;AACxB,WAAOxjC,GAAK,SAASghC,GAASwC,EAAa,KAAK;AAClD,QAAMtsC,GAAassC,CAAY;AACjC;AACA,MAAME,KAAQ,IAAInqB,GAAU,wBAAwB,GAC9CoqB,KAAc,CAACvD,OACnBA,EAAI,OAAO+C,IAAiB,EAAE,EAAE,OAAO1D,IAAgB,CAAA,CAAE,EAAE,OAAO2D,IAAuB,CAACzyC,MAAMA,CAAC,EAAE,OAAO0yC,IAAqB;AAAA,EAC7HV;AAAA,EACAI;AAAA,EACAjB;AAAA,EACAW;AACJ,CAAG,EAAE,OAAOa,EAAgB,GACnB,YAAY;AACjB,QAAMlD,EAAI,WAAWiD,EAAmB;AACxC,QAAMrC,IAAUZ,EAAI,IAAIM,EAAS,GAC3B+C,IAAUrD,EAAI,IAAIyC,EAAS,GAC3Bt+B,IAAQ67B,EAAI,IAAIR,EAAa,GAC7BgE,IAAkBxD,EAAI,IAAIgD,EAAqB,GAC/CS,IAAezD,EAAI,IAAIP,EAAe,GACtC2D,IAAepD,EAAI,IAAI+C,EAAe,GACtCl1D,IAAMs1D,GAAOC,GAAcC,GAASzC,CAAO,GAC3C0B,IAAKtC,EAAI,IAAImC,EAAS,GACtBuB,IAAoBpB,EAAG,cAAa,GACpC70E,IAAU;AAAA,IACd,GAAGg2E;AAAA,IACH,IAAIxqB,GAAO;AAAA,MACT,KAAKqqB;AAAAA,MACL,OAAO;AAAA,QACL,MAAM,MAAM;AAAA,QACZ;AAAA,QACA,OAAO,CAACK,GAAKxrC,GAAQyrC,GAAWlrB,MAAa;AAC3C,UAAAsnB,EAAI,IAAIX,IAAgB3mB,CAAQ;AAAA,QAClC;AAAA,MACV;AAAA,IACA,CAAO;AAAA,IACDkG,GAAiB,EAAE,OAAAza,GAAO;AAAA,IAC1B0/B,GAASvB,EAAG,MAAK,CAAE;AAAA,EACzB;AACI,EAAAtC,EAAI,IAAIP,IAAiBhyE,CAAO;AAChC,QAAMxZ,IAAUuvF,EAAgB;AAAA,IAC9B,QAAQ5C;AAAA,IACR,KAAA/yD;AAAA,IACA,SAAApgB;AAAA,EACN,CAAK,GACKjK,IAAQ+0D,GAAY,OAAOtkE,CAAO;AACxC,SAAA+rF,EAAI,IAAIX,IAAgB77E,CAAK,GAC7Bw8E,EAAI,KAAKkD,EAAgB,GAClB,MAAM;AACX,IAAAQ,EAAiB,GACjB1D,EAAI,OAAO+C,EAAe,EAAE,OAAO1D,EAAc,EAAE,OAAO2D,EAAqB,EAAE,OAAOC,EAAmB,EAAE,WAAWC,EAAgB;AAAA,EAC1I;AACF;AAEFhE,GAASqE,IAAa;AAAA,EACpB,aAAa;AACf,CAAC;AACD,MAAMO,KAAgB7qC,EAAY,CAAA,GAAI,WAAW,GAC3C8qC,KAAqB9qC,EAAY,CAACmnC,EAAW,GAAG,gBAAgB,GAChE4D,KAAkB/oC,GAAY,gBAAgB,GAC9CgpC,KAAY,CAACjE,OACjBA,EAAI,OAAO8D,IAAe,CAAA,CAAE,EAAE,OAAOC,IAAoB,CAAC3D,EAAW,CAAC,EAAE,OAAO4D,EAAe,GACvF,aACL,MAAMhE,EAAI,WAAW+D,EAAkB,GACvC/D,EAAI,KAAKgE,EAAe,GACjB,MAAM;AACX,EAAAhE,EAAI,OAAO8D,EAAa,EAAE,OAAOC,EAAkB,EAAE,WAAWC,EAAe;AACjF;AAGJ9E,GAAS+E,IAAW;AAAA,EAClB,aAAa;AACf,CAAC;AACD,MAAMC,KAAkBjpC,GAAY,iBAAiB,GAC/CkpC,KAAqBlrC;AAAA,EACzB,CAAA;AAAA,EACA;AACF,GACMmrC,KAAuBnrC;AAAA,EAC3B,CAAA;AAAA,EACA;AACF,GACMorC,KAAUprC,EAAY,MAAM,MAAM,GAClCqrC,KAAarrC,EAAY,MAAM,SAAS,GACxCsrC,KAAetrC;AAAA,EACnB,CAAA;AAAA,EACA;AACF;AACA,SAASurC,GAAoBlsD,GAAM0nD,GAAK;AACtC,QAAM1nC,IAAY,SAAS,cAAc,KAAK;AAC9C,EAAAA,EAAU,YAAY,YACtBhgB,EAAK,YAAYggB,CAAS,GAC1B0nC,EAAI,IAAIsE,IAAYhsC,CAAS;AAC7B,QAAM92C,IAAQw+E,EAAI,IAAIuE,EAAY;AAClC,gBAAO,QAAQ/iF,CAAK,EAAE;AAAA,IACpB,CAAC,CAACm/E,GAAMlsF,CAAK,MAAM6jD,EAAU,aAAaqoC,GAAMlsF,CAAK;AAAA,EACzD,GACS6jD;AACT;AACA,SAASmsC,GAAengC,GAAK;AAC3B,EAAAA,EAAI,UAAU,IAAI,QAAQ,GAC1BA,EAAI,aAAa,QAAQ,SAAS;AACpC;AACA,MAAMx+C,KAAM,IAAIqzD,GAAU,qBAAqB,GACzCurB,KAAa,CAAC1E,OAClBA,EAAI,OAAOqE,IAAS,SAAS,IAAI,EAAE,OAAOjF,IAAe,CAAA,CAAE,EAAE,OAAOgF,IAAsB,CAAA,CAAE,EAAE,OAAOE,IAAY,IAAI,EAAE,OAAOC,IAAc,CAAA,CAAE,EAAE,OAAOJ,IAAoB,CAACjB,IAAkBc,EAAe,CAAC,EAAE,OAAOE,EAAe,GAC/N,YAAY;AACjB,QAAMlE,EAAI,KAAKC,EAAS;AACxB,QAAM3nD,IAAO0nD,EAAI,IAAIqE,EAAO,KAAK,SAAS,MACpC3gF,IAAK,OAAO40B,KAAS,WAAW,SAAS,cAAcA,CAAI,IAAIA;AACrE,EAAA0nD,EAAI,OAAOP,IAAiB,CAACkF,MAAO;AAAA,IAClC,IAAI1rB,GAAO;AAAA,MACjB,KAAQnzD;AAAAA,MACA,MAAM,CAAC8+E,MAAgB;AACrB,cAAMtsC,IAAY50C,IAAK8gF,GAAoB9gF,GAAIs8E,CAAG,IAAI;AAQtD,gBAPkB,MAAM;AACtB,cAAI1nC,KAAa50C,GAAI;AACnB,kBAAMy8E,IAASyE,EAAY;AAC3B,YAAAlhF,EAAG,aAAa40C,GAAW6nC,CAAM,GACjC7nC,EAAU,YAAY6nC,CAAM;AAAA,UAC9B;AAAA,QACF,GACS,GACF;AAAA,UACL,SAAS,MAAM;AACb,YAAI7nC,GAAW,cACbA,GAAW,WAAW,aAAassC,EAAY,KAAKtsC,CAAS,GAC/DA,GAAW,OAAM;AAAA,UACnB;AAAA,QACZ;AAAA,MACQ;AAAA,IACR,CAAO;AAAA,IACD,GAAGqsC;AAAA,EACT,CAAK,GACD,MAAM3E,EAAI,WAAWmE,EAAkB;AACvC,QAAM3gF,IAAQw8E,EAAI,IAAIX,EAAc,GAC9BprF,IAAU+rF,EAAI,IAAIoE,EAAoB,GACtClG,IAAY,OAAO,YAAY8B,EAAI,IAAIL,EAAW,CAAC,GACnDkF,IAAY,OAAO,YAAY7E,EAAI,IAAIJ,EAAW,CAAC,GACnD13D,IAAO,IAAIs1D,GAAW95E,GAAI;AAAA,IAC9B,OAAAF;AAAA,IACA,WAAA06E;AAAA,IACA,WAAA2G;AAAA,IACA,iBAAiB,CAAC3rE,GAAO4rE,GAAOC,OAC9B/E,EAAI,IAAI8D,EAAa,EAAE,KAAK,CAAC5jF,GAAGC,OAAOA,EAAE,YAAY,OAAOD,EAAE,YAAY,GAAG,EAAE,IAAI,CAAC8jD,MAASA,EAAK,GAAG,EAAE,QAAQ,CAACghC,MAAW;AACzH,MAAA9rE,IAAQ8rE,EAAO9rE,GAAO4rE,GAAOC,CAAW;AAAA,IAC1C,CAAC,GACM7rE;AAAA,IAET,GAAGjlB;AAAA,EACT,CAAK;AACD,SAAAwwF,GAAev8D,EAAK,GAAG,GACvB83D,EAAI,IAAIZ,IAAel3D,CAAI,GAC3B83D,EAAI,KAAKkE,EAAe,GACjB,MAAM;AACX,IAAAh8D,GAAM,QAAO,GACb83D,EAAI,OAAOqE,EAAO,EAAE,OAAOjF,EAAa,EAAE,OAAOgF,EAAoB,EAAE,OAAOE,EAAU,EAAE,OAAOC,EAAY,EAAE,OAAOJ,EAAkB,EAAE,WAAWD,EAAe;AAAA,EACtK;AACF;AAEFhF,GAASwF,IAAY;AAAA,EACnB,aAAa;AACf,CAAC;AnPzjBc,IAAAO,IAAAvqC,IAAAwqC,IAAAC,IAAAhsC,IAAAC,IAAAgsC,IAAAC,IAAAxE,IAAAyE,IAAAC,IAAAC,IAAAC,IAAAC,IAAAC;AmPkkBf,MAAMC,KAAN,MAAMA,GAAO;AAAA,EACX,cAAc;AAmLd,IAAArtC,EAAA,MAAA0sC;AACA,IAAA1sC,EAAA,MAAAmC;AACA,IAAAnC,EAAA,MAAA2sC;AACA,IAAA3sC,EAAA,MAAA4sC;AACA,IAAA5sC,EAAA,MAAAY;AACA,IAAAZ,EAAA,MAAAa;AACA,IAAAb,EAAA,MAAA6sC;AACA,IAAA7sC,EAAA,MAAA8sC;AACA,IAAA9sC,EAAA,MAAAsoC;AACA,IAAAtoC,EAAA,MAAA+sC;AACA,IAAA/sC,EAAA,MAAAgtC;AACA,IAAAhtC,EAAA,MAAAitC;AACA,IAAAjtC,EAAA,MAAAktC;AACA,IAAAltC,EAAA,MAAAmtC;AACA,IAAAntC,EAAA,MAAAotC;AAhME,IAAAntC,EAAA,MAAKysC,IAAmB,KACxBzsC,EAAA,MAAKkC,IAAU,SACflC,EAAA,MAAK0sC,IAAiB,CAAA,IACtB1sC,EAAA,MAAK2sC,IAAkB;QACvB3sC,EAAA,MAAKW,IAAa,IAAIlB,GAAS,IAC/BO,EAAA,MAAKY,IAAS,IAAIkB,GAAK,IACvB9B,EAAA,MAAK4sC,IAAkC,oBAAI,IAAG,IAC9C5sC,EAAA,MAAK6sC,IAAkC,oBAAI,IAAG,IAC9C7sC,EAAA,MAAKqoC,IAAO,IAAIxmC,GAAI5B,EAAA,MAAKU,KAAYV,EAAA,MAAKW,GAAM,IAChDZ,EAAA,MAAK8sC,IAAgB,MAAM;AACzB,YAAMO,IAAet8D,GAAO,OAAOy2D,MAAQ;AACzC,cAAM,QAAQ;AAAA,UACZvnC,EAAA,MAAKysC,IAAe,IAAI,CAACh+E,MAAO,QAAQ,QAAQA,EAAG84E,CAAG,CAAC,CAAC;AAAA,QAClE;AAAA,MACM,CAAC,GACK8F,IAAkB;AAAA,QACtB55C;AAAAA,QACAngC;AAAA,QACA47B;AAAA,QACAi1B;AAAAA,QACA4D;AAAAA,QACAyjB;AAAA,QACAV;AAAA,QACAmB;AAAA,QACAxE,GAAK,IAAI;AAAA,QACT2F;AAAA,MACR;AACM,MAAAptC,EAAA,MAAK8sC,IAAL,WAAcO,GAAiBrtC,EAAA,MAAK4sC;AAAA,IACtC,IACA7sC,EAAA,MAAK+sC,IAAW,CAAC93E,GAAS8Z,MAAU;AAClC,MAAA9Z,EAAQ,QAAQ,CAACD,MAAW;AAC1B,cAAMwyE,IAAMvnC,EAAA,MAAKooC,IAAK;AAAA,UACpBpoC,EAAA,MAAKwsC,MAAmBz3E,EAAO,OAAO;AAAA,QAChD,GACckf,IAAUlf,EAAOwyE,CAAG;AAC1B,QAAAz4D,EAAM,IAAI/Z,GAAQ,EAAE,KAAAwyE,GAAK,SAAAtzD,GAAS,SAAS,QAAQ;AAAA,MACrD,CAAC;AAAA,IACH,IACA8rB,EAAA,MAAKgtC,IAAW,CAAC/3E,GAASgB,IAAS,OAC1B,QAAQ;AAAA,MACb,CAAChB,CAAO,EAAE,KAAI,EAAG,IAAI,OAAOD,MAAW;AAErC,cAAMu4E,IADSttC,EAAA,MAAK2sC,IAAgB,IAAI53E,CAAM,GACtB;AAQxB,eAPIiB,IAAQgqC,EAAA,MAAK2sC,IAAgB,OAAO53E,CAAM,IAE5CirC,EAAA,MAAK2sC,IAAgB,IAAI53E,GAAQ;AAAA,UAC/B,KAAK;AAAA,UACL,SAAS;AAAA,UACT,SAAS;AAAA,QACvB,CAAa,GACC,OAAOu4E,KAAY,aAAmBA,EAAO,IAC1CA;AAAA,MACT,CAAC;AAAA,IACT,IAEIvtC,EAAA,MAAKitC,IAAmB,YAAY;AAClC,YAAM,QAAQ;AAAA,QACZ,CAAC,GAAGhtC,EAAA,MAAK4sC,IAAgB,SAAS,EAAE,IAAI,OAAO,CAACv+D,GAAG,EAAE,SAAAi/D,EAAO,CAAE,MACxD,OAAOA,KAAY,aAAmBA,EAAO,IAC1CA,CACR;AAAA,MACT,GACMttC,EAAA,MAAK4sC,IAAgB,MAAK;AAAA,IAC5B,IACA7sC,EAAA,MAAKktC,IAAa,CAACM,MAAW;AAC5B,MAAAxtC,EAAA,MAAKkC,IAAUsrC,IACfvtC,EAAA,MAAK0sC,IAAL,WAAqBa;AAAA,IACvB,IACAxtC,EAAA,MAAKmtC,IAAqB,CAACp+D,MAClB,CAAC,GAAGA,EAAM,QAAO,CAAE,EAAE,IAAI,OAAO,CAACo5D,GAAMsF,CAAM,MAAM;AACxD,YAAM,EAAE,KAAAjG,GAAK,SAAAtzD,EAAO,IAAKu5D;AACzB,UAAI,CAACv5D,EAAS;AACd,YAAMq5D,IAAU,MAAMr5D,EAAO;AAC7B,MAAAnF,EAAM,IAAIo5D,GAAM,EAAE,KAAAX,GAAK,SAAAtzD,GAAS,SAAAq5D,GAAS;AAAA,IAC3C,CAAC,IAEH,KAAK,kBAAkB,CAACG,IAAS,QAC/B1tC,EAAA,MAAKysC,IAAmBiB,IACjB,OAET,KAAK,iBAAiB,CAACC,OACrB3tC,EAAA,MAAK2sC,IAAkBgB,IAChB,OAET,KAAK,SAAS,CAAC95D,OACbosB,EAAA,MAAKysC,IAAe,KAAK74D,CAAS,GAC3B,OAET,KAAK,eAAe,CAACA,OACnBmsB,EAAA,MAAK0sC,IAAiBzsC,EAAA,MAAKysC,IAAe,OAAO,CAAC30C,MAAMA,MAAMlkB,CAAS,IAChE,OAET,KAAK,MAAM,CAAC5e,MAAY;AACtB,YAAM24E,IAAW,CAAC34E,CAAO,EAAE,KAAI;AAC/B,aAAA24E,EAAS,KAAI,EAAG,QAAQ,CAAC54E,MAAW;AAClC,QAAAirC,EAAA,MAAK2sC,IAAgB,IAAI53E,GAAQ;AAAA,UAC/B,KAAK;AAAA,UACL,SAAS;AAAA,UACT,SAAS;AAAA,QACnB,CAAS;AAAA,MACH,CAAC,GACGirC,EAAA,MAAKiC,QAAY,aACnBjC,EAAA,MAAK8sC,IAAL,WAAca,GAAU3tC,EAAA,MAAK2sC,MACxB;AAAA,IACT,GACA,KAAK,SAAS,OAAO33E,MACfgrC,EAAA,MAAKiC,QAAY,cACnB,QAAQ;AAAA,MACN;AAAA,IACV,GACe,IAAI,QAAQ,CAACvuC,MAAY;AAC9B,iBAAW,MAAM;AACf,QAAAA,EAAQ,KAAK,OAAOsB,CAAO,CAAC;AAAA,MAC9B,GAAG,EAAE;AAAA,IACP,CAAC,MAEH,MAAMgrC,EAAA,MAAK+sC,IAAL,WAAc,CAAC/3E,CAAO,EAAE,KAAI,GAAI,KAC/B,OAET,KAAK,SAAS,YACRgrC,EAAA,MAAKiC,QAAY,aAAmB,QACpCjC,EAAA,MAAKiC,QAAY,aAAW,MAAM,KAAK,QAAO,GAClDjC,EAAA,MAAKitC,IAAL,WACE,aAGFjtC,EAAA,MAAK6sC,IAAL,YACA7sC,EAAA,MAAK8sC,IAAL,WAAc,CAAC,GAAG9sC,EAAA,MAAK2sC,IAAgB,KAAI,CAAE,GAAG3sC,EAAA,MAAK2sC,MACrD,MAAM,QAAQ;AAAA,MACZ;AAAA,QACE3sC,EAAA,MAAKktC,IAAL,WAAwBltC,EAAA,MAAK4sC;AAAA,QAC7B5sC,EAAA,MAAKktC,IAAL,WAAwBltC,EAAA,MAAK2sC;AAAA,MACvC,EAAU,KAAI;AAAA,IACd,GACM3sC,EAAA,MAAKitC,IAAL,WACE,YAGK,OAET,KAAK,UAAU,OAAOW,IAAe,OAC/B5tC,EAAA,MAAKiC,QAAY,eAAejC,EAAA,MAAKiC,QAAY,cAC5C,OACLjC,EAAA,MAAKiC,QAAY,aACZ,IAAI,QAAQ,CAACvuC,MAAY;AAC9B,iBAAW,MAAM;AACf,QAAAA,EAAQ,KAAK,QAAQk6E,CAAY,CAAC;AAAA,MACpC,GAAG,EAAE;AAAA,IACP,CAAC,KAECA,KAAc7tC,EAAA,MAAK0sC,IAAiB,CAAA,IACxCzsC,EAAA,MAAKitC,IAAL,WACE,cAGF,MAAMjtC,EAAA,MAAK+sC,IAAL,WAAc,CAAC,GAAG/sC,EAAA,MAAK2sC,IAAgB,KAAI,CAAE,GAAGiB,IACtD,MAAM5tC,EAAA,MAAKgtC,IAAL,YACNhtC,EAAA,MAAKitC,IAAL,WACE,cAGK,OAET,KAAK,SAAS,CAACY,MAAWA,EAAO7tC,EAAA,MAAKooC,GAAI,GAC1C,KAAK,UAAU,MACRpoC,EAAA,MAAKwsC,MAMH,CAAC,GAAGxsC,EAAA,MAAK4sC,IAAgB,OAAM,GAAI,GAAG5sC,EAAA,MAAK2sC,IAAgB,OAAM,CAAE,EAAE,IAAI,CAAC,EAAE,KAAApF,QAAUA,GAAK,WAAW,KAAI,CAAE,EAAE,OAAO,CAACzvC,MAAM,EAAQA,CAAE,KAL3I,QAAQ;AAAA,MACN;AAAA,IACV,GACe,CAAA;AAAA,EAIb;AAAA;AAAA,EAEA,OAAO,OAAO;AACZ,WAAO,IAAIq1C,GAAM;AAAA,EACnB;AAAA;AAAA,EAiBA,IAAI,MAAM;AACR,WAAOntC,EAAA,MAAKooC;AAAA,EACd;AAAA;AAAA,EAEA,IAAI,SAAS;AACX,WAAOpoC,EAAA,MAAKiC;AAAA,EACd;AACF;AAvBEuqC,KAAA,eACAvqC,KAAA,eACAwqC,KAAA,eACAC,KAAA,eACAhsC,KAAA,eACAC,KAAA,eACAgsC,KAAA,eACAC,KAAA,eACAxE,KAAA,eACAyE,KAAA,eACAC,KAAA,eACAC,KAAA,eACAC,KAAA,eACAC,KAAA,eACAC,KAAA;AAlMF,IAAMY,KAANX;AClkBA,SAASvhC,GAAEhhD,GAAE;AAAC,MAAImjF,GAAEjrC,GAAErhD,IAAE;AAAG,MAAa,OAAOmJ,KAAjB,YAA8B,OAAOA,KAAjB,SAAmB,CAAAnJ,KAAGmJ;AAAA,WAAoB,OAAOA,KAAjB,SAAmB,KAAG,MAAM,QAAQA,CAAC,GAAE;AAAC,QAAIojF,IAAEpjF,EAAE;AAAO,SAAImjF,IAAE,GAAEA,IAAEC,GAAED,IAAI,CAAAnjF,EAAEmjF,CAAC,MAAIjrC,IAAE8I,GAAEhhD,EAAEmjF,CAAC,CAAC,OAAKtsF,MAAIA,KAAG,MAAKA,KAAGqhD;AAAA,EAAE,MAAM,MAAIA,KAAKl4C,EAAE,CAAAA,EAAEk4C,CAAC,MAAIrhD,MAAIA,KAAG,MAAKA,KAAGqhD;AAAG,SAAOrhD;AAAC;AAAQ,SAASwsF,KAAM;AAAC,WAAQrjF,GAAEmjF,GAAEjrC,IAAE,GAAErhD,IAAE,IAAGusF,IAAE,UAAU,QAAOlrC,IAAEkrC,GAAElrC,IAAI,EAACl4C,IAAE,UAAUk4C,CAAC,OAAKirC,IAAEniC,GAAEhhD,CAAC,OAAKnJ,MAAIA,KAAG,MAAKA,KAAGssF;AAAG,SAAOtsF;AAAC;ACE/W,SAASysF,GAAK3G,GAAK;AACjB,EAAAA,EAAI,OAAOoE,IAAsB,CAAC/rB,MAAS;AACzC,UAAMuuB,IAAYvuB,EAAK;AACvB,WAAO;AAAA,MACL,GAAGA;AAAA,MACH,YAAY,CAAC70D,MAAU;AACrB,cAAMhC,IAAQ,OAAOolF,KAAc,aAAaA,EAAUpjF,CAAK,IAAIojF;AACnE,eAAO;AAAA,UACL,GAAGplF;AAAA,UACH,OAAOklF;AAAA,YACL;AAAA,YACAllF,GAAO,SAAS;AAAA,YAChB;AAAA,UACZ;AAAA,QACA;AAAA,MACM;AAAA,IACN;AAAA,EACE,CAAC;AACH;ACgBA,SAASqlF,EAAS/gF,GAAKw7E,GAAK;AAC1B,QAAMwF,IAASvF,GAAaz7E,CAAG,GACzB0H,IAAS,CAACwyE,MAAQ,YAAY;AAClC,IAAAxyE,EAAO,MAAMs5E,GACb,MAAM9G,EAAI,KAAK0B,EAAa;AAC5B,UAAMP,IAAUG,EAAItB,CAAG;AACvB,WAAAA,EAAI,IAAIwB,EAAW,EAAE,OAAOsF,GAAQ3F,CAAO,GAC3C3zE,EAAO,MAAM,CAAC6zE,MAAYrB,EAAI,IAAIwB,EAAW,EAAE,KAAK17E,GAAKu7E,CAAO,GACzD,MAAM;AACX,MAAArB,EAAI,IAAIwB,EAAW,EAAE,OAAOsF,CAAM;AAAA,IACpC;AAAA,EACF;AACA,SAAOt5E;AACT;AAkBA,SAASu5E,GAAWC,GAAW;AAC7B,QAAMx5E,IAAS,CAACwyE,MAAQ,YAAY;AAClC,UAAMA,EAAI,KAAKI,EAAW;AAC1B,UAAM6G,IAAKD,EAAUhH,CAAG;AACxB,WAAAA,EAAI,OAAOR,IAAe,CAAC0H,MAAQ,CAAC,GAAGA,GAAKD,CAAE,CAAC,GAC/Cz5E,EAAO,YAAYy5E,GACZ,MAAM;AACX,MAAAjH,EAAI,OAAOR,IAAe,CAAC0H,MAAQA,EAAI,OAAO,CAAC32C,MAAMA,MAAM02C,CAAE,CAAC;AAAA,IAChE;AAAA,EACF;AACA,SAAOz5E;AACT;AAgBA,SAAS25E,GAAWlD,GAAW;AAC7B,QAAMz2E,IAAS,CAACwyE,MAAQ,YAAY;AAClC,UAAMA,EAAI,KAAKI,EAAW;AAC1B,UAAMgH,IAAKnD,EAAUjE,CAAG;AACxB,WAAAA,EAAI,OAAO8D,IAAe,CAACuD,MAAQ,CAAC,GAAGA,GAAKD,CAAE,CAAC,GAC/C55E,EAAO,YAAY45E,GACZ,MAAM;AACX,MAAApH,EAAI,OAAO8D,IAAe,CAACuD,MAAQA,EAAI,OAAO,CAAC92C,MAAMA,MAAM62C,CAAE,CAAC;AAAA,IAChE;AAAA,EACF;AACA,SAAO55E;AACT;AAgBA,SAAS85E,GAAMzmF,GAAIqrC,GAAQ;AACzB,QAAM1+B,IAAS,CAACwyE,MAAQ,YAAY;AAClC,UAAMuH,IAAar7C,EAAO8zC,CAAG;AAC7B,WAAAA,EAAI,OAAOQ,IAAU,CAACgH,MAAO;AAAA,MAC3B,GAAGA,EAAG,OAAO,CAACttF,MAAMA,EAAE,CAAC,MAAM2G,CAAE;AAAA,MAC/B,CAACA,GAAI0mF,CAAU;AAAA,IACrB,CAAK,GACD/5E,EAAO,KAAK3M,GACZ2M,EAAO,SAAS+5E,GACT,MAAM;AACX,MAAAvH,EAAI,OAAOQ,IAAU,CAACgH,MAAOA,EAAG,OAAO,CAAC,CAACj3C,CAAC,MAAMA,MAAM1vC,CAAE,CAAC;AAAA,IAC3D;AAAA,EACF;AACA,SAAA2M,EAAO,OAAO,CAACwyE,MAAQ;AACrB,UAAM38B,IAAW28B,EAAI,IAAIM,EAAS,EAAE,MAAMz/E,CAAE;AAC5C,QAAI,CAACwiD,EAAU,OAAMrL,GAAoBn3C,CAAE;AAC3C,WAAOwiD;AAAA,EACT,GACO71C;AACT;AA0BA,SAASi6E,GAAM5mF,GAAIqrC,GAAQ;AACzB,QAAM1+B,IAAS,CAACwyE,MAAQ,YAAY;AAClC,UAAM0H,IAAax7C,EAAO8zC,CAAG;AAC7B,WAAAA,EAAI,OAAOO,IAAU,CAACiH,MAAO;AAAA,MAC3B,GAAGA,EAAG,OAAO,CAACttF,MAAMA,EAAE,CAAC,MAAM2G,CAAE;AAAA,MAC/B,CAACA,GAAI6mF,CAAU;AAAA,IACrB,CAAK,GACDl6E,EAAO,KAAK3M,GACZ2M,EAAO,SAASk6E,GACT,MAAM;AACX,MAAA1H,EAAI,OAAOO,IAAU,CAACiH,MAAOA,EAAG,OAAO,CAAC,CAACj3C,CAAC,MAAMA,MAAM1vC,CAAE,CAAC;AAAA,IAC3D;AAAA,EACF;AACA,SAAA2M,EAAO,OAAO,CAACwyE,MAAQ;AACrB,UAAM7oC,IAAW6oC,EAAI,IAAIM,EAAS,EAAE,MAAMz/E,CAAE;AAC5C,QAAI,CAACs2C,EAAU,OAAMY,GAAoBl3C,CAAE;AAC3C,WAAOs2C;AAAA,EACT,GACO3pC;AACT;AA0BA,SAASm6E,GAAOC,GAAO;AACrB,MAAIC;AACJ,QAAMr6E,IAAS,CAACwyE,MAAQ,aACtB,MAAMA,EAAI,KAAKI,EAAW,GAC1ByH,IAAcD,EAAM5H,CAAG,GACvBA,EAAI,OAAOP,IAAiB,CAACqI,MAAO,CAAC,GAAGA,GAAID,CAAW,CAAC,GACjD,MAAM;AACX,IAAA7H,EAAI,OAAOP,IAAiB,CAACqI,MAAOA,EAAG,OAAO,CAACv3C,MAAMA,MAAMs3C,CAAW,CAAC;AAAA,EACzE;AAEF,SAAAr6E,EAAO,SAAS,MAAMq6E,GACtBr6E,EAAO,MAAM,MAAMq6E,EAAY,KAAK,KAC7Br6E;AACT;AAmBA,SAASu6E,GAAUC,GAAU;AAC3B,QAAMx6E,IAAS,CAACwyE,MAAQ,YAAY;AAClC,UAAMA,EAAI,KAAKqC,EAAW;AAC1B,UAAMC,IAAKtC,EAAI,IAAImC,EAAS,GACtB3hB,IAASwnB,EAAShI,CAAG,GACrBiI,IAAU3F,EAAG,gBAAgB9hB,CAAM;AACzC,WAAAhzD,EAAO,SAASgzD,GACT,MAAM;AACX,MAAAynB,EAAO;AAAA,IACT;AAAA,EACF;AACA,SAAOz6E;AACT;AAoEA,SAAS06E,GAAKzzF,GAAOyR,GAAM;AACzB,QAAMgT,IAAQ+/B,EAAYxkD,GAAOyR,CAAI,GAC/BsH,IAAS,CAACwyE,OACdA,EAAI,OAAO9mE,CAAK,GACT,MACE,MAAM;AACX,IAAA8mE,EAAI,OAAO9mE,CAAK;AAAA,EAClB;AAGJ,SAAA1L,EAAO,MAAM0L,GACN1L;AACT;AACA,SAAS26E,GAAYtnF,GAAIqrC,GAAQ;AAC/B,QAAMk8C,IAAaF,GAAKh8C,GAAQrrC,CAAE,GAC5B6mF,IAAaD,GAAM5mF,GAAI,CAACm/E,MACTA,EAAI,IAAIoI,EAAW,GAAG,EACvBpI,CAAG,CACtB,GACK1mF,IAAS,CAAC8uF,GAAYV,CAAU;AACtC,SAAApuF,EAAO,KAAKouF,EAAW,IACvBpuF,EAAO,OAAOouF,GACdpuF,EAAO,OAAO,CAAC0mF,MAAQ0H,EAAW,KAAK1H,CAAG,GAC1C1mF,EAAO,MAAM8uF,GACb9uF,EAAO,MAAM8uF,EAAW,KACxB9uF,EAAO,eAAe,CAACozB,MAAY;AACjC,UAAM27D,IAAa37D,EAAQwf,CAAM;AACjC,WAAOi8C,GAAYtnF,GAAIwnF,CAAU;AAAA,EACnC,GACO/uF;AACT;AACA,SAASgvF,GAAYznF,GAAIqrC,GAAQ;AAC/B,QAAMk8C,IAAaF,GAAKh8C,GAAQrrC,CAAE,GAC5B0mF,IAAaD,GAAMzmF,GAAI,CAACm/E,MACTA,EAAI,IAAIoI,EAAW,GAAG,EACvBpI,CAAG,CACtB,GACK1mF,IAAS,CAAC8uF,GAAYb,CAAU;AACtC,SAAAjuF,EAAO,KAAKiuF,EAAW,IACvBjuF,EAAO,OAAOiuF,GACdjuF,EAAO,OAAO,CAAC0mF,MAAQuH,EAAW,KAAKvH,CAAG,GAC1C1mF,EAAO,MAAM8uF,GACb9uF,EAAO,MAAM8uF,EAAW,KACxB9uF,EAAO,eAAe,CAACozB,MAAY;AACjC,UAAM27D,IAAa37D,EAAQwf,CAAM;AACjC,WAAOo8C,GAAYznF,GAAIwnF,CAAU;AAAA,EACnC,GACO/uF;AACT;AACA,SAASivF,GAAWriF,GAAMsiF,GAAY;AACpC,QAAM1iF,IAAM,OAAO;AAAA,IACjB,OAAO,QAAQ0iF,CAAU,EAAE;AAAA,MACzB,CAAC,CAAC7H,GAAM,EAAE,WAAW8H,GAAY,UAAAjkC,EAAQ,CAAE,MAClC,CAACm8B,GAAM,EAAE,WAAW8H,GAAY,UAAAjkC,EAAQ,CAAE;AAAA,IAEzD;AAAA,EACA,GACQkkC,IAAYR,GAAKpiF,GAAK,GAAGI,CAAI,QAAQ,GACrCyiF,IAAYZ,GAAU,CAAC/H,MAAQ;AACnC,UAAM14C,IAAO04C,EAAI,IAAI0I,EAAU,GAAG,GAC5BE,IAAc,OAAO,QAAQJ,CAAU,EAAE;AAAA,MAC7C,CAAC,CAAC7H,GAAM,EAAE,SAAAQ,EAAO,CAAE,MAAM;AACvB,cAAMn7E,IAASshC,EAAKq5C,CAAI,GAClBkI,IAAa,CAAC7iF,EAAO,SAAS,EAAE,KAAI,GACpCw+C,IAAWx+C,EAAO;AACxB,eAAO6iF,EAAW;AAAA,UAChB,CAACC,MAAc;AAAA,YACbA;AAAA,YACA;AAAA,cACE,KAAKA;AAAA,cACL,OAAO3H;AAAA,cACP,UAAA38B;AAAA,YACd;AAAA,UACA;AAAA,QACA;AAAA,MACM;AAAA,IACN;AACI,WAAO,OAAO,YAAYokC,CAAW;AAAA,EACvC,CAAC,GACKtvF,IAAS,CAACovF,GAAWC,CAAS;AACpC,SAAArvF,EAAO,MAAMovF,GACbpvF,EAAO,YAAYqvF,GACnBrvF,EAAO,MAAMovF,EAAU,KACvBpvF,EAAO,SAASqvF,EAAU,QACnBrvF;AACT;AACA,MAAMyvF,KAAY,CAAC7iF,GAAMzR,IAAQ,OAAO,CAAA,OAAQyzF,GAAKzzF,GAAO,GAAGyR,CAAI,MAAM,GACnE8iF,KAAY,CAAC9iF,GAAMzR,IAAQ,OAAO,CAAA,OAAQyzF,GAAKzzF,GAAO,GAAGyR,CAAI,MAAM;AACzE,SAAS+iF,GAAQpoF,GAAI0pD,GAAQ2+B,GAAgB;AAC3C,QAAMj1F,IAAUi0F,GAAuB,CAAA,GAAIrnF,CAAE,GACvC2M,IAAS,CAACwyE,MAAQ,YAAY;AAClC,UAAMA,EAAI,KAAKC,EAAS;AAExB,UAAMkJ,IAAe;AAAA,MACnB,QAFS5+B,EAAOy1B,CAAG;AAAA,MAGnB,SAASA,EAAI,IAAI/rF,EAAQ,GAAG;AAAA,IAClC;AACI,WAAA+rF,EAAI,OAAON,IAAkB,CAAC0J,MAAO,CAAC,GAAGA,GAAID,CAAY,CAAC,GACnD,MAAM;AACX,MAAAnJ,EAAI,OAAON,IAAkB,CAAC0J,MAAOA,EAAG,OAAO,CAAC74C,MAAMA,MAAM44C,CAAY,CAAC;AAAA,IAC3E;AAAA,EACF,GACM7vF,IAAS,CAACrF,GAASuZ,CAAM;AAC/B,SAAAlU,EAAO,KAAKuH,GACZvH,EAAO,SAASkU,GAChBlU,EAAO,UAAUrF,GACVqF;AACT;ACvSA,SAAS+vF,GAAcC,GAAUC,GAAW;AACxC,SAAO,SAAU/lF,GAAO61D,GAAU;AAC9B,QAAI,EAAE,OAAAzb,GAAO,KAAAC,GAAK,MAAA94C,EAAI,IAAKvB,EAAM;AACjC,QAAKuB,KAAQA,EAAK,WAAY64C,EAAM,QAAQ,KAAK,CAACA,EAAM,WAAWC,CAAG;AAClE,aAAO;AACX,QAAI2rC,IAAc5rC,EAAM,KAAK,EAAE;AAC/B,QAAI4rC,EAAY,QAAQF;AACpB,aAAO;AACX,QAAI1rC,EAAM,OAAO,QAAQ,QAAQ,KAAKA,EAAM,KAAK,EAAE,EAAE,cAAcA,EAAM,WAAW,EAAE,GAAG;AAIrF,UAAIA,EAAM,SAAS,KAAKA,EAAM,KAAK,EAAE,EAAE,QAAQ0rC,KAC3C1rC,EAAM,MAAM,EAAE,KAAKA,EAAM,KAAK,EAAE,EAAE,aAAa;AAC/C,eAAO;AACX,UAAIyb,GAAU;AACV,YAAIlyD,IAAOg1C,EAAS,OAChBstC,IAAc7rC,EAAM,MAAM,EAAE,IAAI,IAAIA,EAAM,MAAM,EAAE,IAAI,IAAI;AAG9D,iBAASlwB,IAAIkwB,EAAM,QAAQ6rC,GAAa/7D,KAAKkwB,EAAM,QAAQ,GAAGlwB;AAC1D,UAAAvmB,IAAOg1C,EAAS,KAAKyB,EAAM,KAAKlwB,CAAC,EAAE,KAAKvmB,CAAI,CAAC;AACjD,YAAIuiF,IAAa9rC,EAAM,WAAW,EAAE,IAAIA,EAAM,KAAK,EAAE,EAAE,aAAa,IAC9DA,EAAM,WAAW,EAAE,IAAIA,EAAM,KAAK,EAAE,EAAE,aAAa,IAAI;AAE7D,QAAAz2C,IAAOA,EAAK,OAAOg1C,EAAS,KAAKmtC,EAAS,cAAa,CAAE,CAAC;AAC1D,YAAIhhF,IAAQs1C,EAAM,OAAOA,EAAM,SAAS6rC,IAAc,EAAE,GACpDz5C,IAAKxsC,EAAM,GAAG,QAAQ8E,GAAOs1C,EAAM,MAAM,CAAC8rC,CAAU,GAAG,IAAI1wC,EAAM7xC,GAAM,IAAIsiF,GAAa,CAAC,CAAC,GAC1FxyB,IAAM;AACV,QAAAjnB,EAAG,IAAI,aAAa1nC,GAAO0nC,EAAG,IAAI,QAAQ,MAAM,CAACjrC,GAAM+C,MAAQ;AAC3D,cAAImvD,IAAM;AACN,mBAAO;AACX,UAAIlyD,EAAK,eAAeA,EAAK,QAAQ,QAAQ,MACzCkyD,IAAMnvD,IAAM;AAAA,QACpB,CAAC,GACGmvD,IAAM,MACNjnB,EAAG,aAAa4lB,EAAU,KAAK5lB,EAAG,IAAI,QAAQinB,CAAG,CAAC,CAAC,GACvDoC,EAASrpB,EAAG,gBAAgB;AAAA,MAChC;AACA,aAAO;AAAA,IACX;AACA,QAAI25C,IAAW9rC,EAAI,OAAOD,EAAM,QAAQ4rC,EAAY,eAAe,CAAC,EAAE,cAAc,MAChFx5C,IAAKxsC,EAAM,GAAG,OAAOo6C,EAAM,KAAKC,EAAI,GAAG,GACvC3S,IAAQy+C,IAAW,CAAoD,MAAM,EAAE,MAAMA,EAAQ,CAAE,IAAI;AACvG,WAAKl4B,GAASzhB,EAAG,KAAK4N,EAAM,KAAK,GAAG1S,CAAK,KAErCmuB,KACAA,EAASrpB,EAAG,MAAM4N,EAAM,KAAK,GAAG1S,CAAK,EAAE,gBAAgB,GACpD,MAHI;AAAA,EAIf;AACJ;AAoBA,SAAS0+C,GAAaN,GAAU;AAC5B,SAAO,SAAU9lF,GAAO61D,GAAU;AAC9B,QAAI,EAAE,OAAAzb,GAAO,KAAAC,EAAG,IAAKr6C,EAAM,WACvBu/B,IAAQ6a,EAAM,WAAWC,GAAK,CAAA94C,MAAQA,EAAK,aAAa,KAAKA,EAAK,WAAW,QAAQukF,CAAQ;AACjG,WAAKvmD,IAEAs2B,IAEDzb,EAAM,KAAK7a,EAAM,QAAQ,CAAC,EAAE,QAAQumD,IAC7BO,GAAgBrmF,GAAO61D,GAAUiwB,GAAUvmD,CAAK,IAEhD+mD,GAActmF,GAAO61D,GAAUt2B,CAAK,IAJpC,KAFA;AAAA,EAOf;AACJ;AACA,SAAS8mD,GAAgBrmF,GAAO61D,GAAUiwB,GAAUvmD,GAAO;AACvD,MAAIiN,IAAKxsC,EAAM,IAAIqF,IAAMk6B,EAAM,KAAKgnD,IAAYhnD,EAAM,IAAI,IAAIA,EAAM,KAAK;AACzE,EAAIl6B,IAAMkhF,MAGN/5C,EAAG,KAAK,IAAI6e,GAAkBhmD,IAAM,GAAGkhF,GAAWlhF,GAAKkhF,GAAW,IAAI/wC,EAAMmD,EAAS,KAAKmtC,EAAS,OAAO,MAAMvmD,EAAM,OAAO,KAAI,CAAE,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAI,CAAC,GACtJA,IAAQ,IAAIoc,GAAUnP,EAAG,IAAI,QAAQjN,EAAM,MAAM,GAAG,GAAGiN,EAAG,IAAI,QAAQ+5C,CAAS,GAAGhnD,EAAM,KAAK;AAEjG,QAAM/8B,IAAS8pD,GAAW/sB,CAAK;AAC/B,MAAI/8B,KAAU;AACV,WAAO;AACX,EAAAgqC,EAAG,KAAKjN,GAAO/8B,CAAM;AACrB,MAAIs4C,IAAStO,EAAG,IAAI,QAAQA,EAAG,QAAQ,IAAInnC,GAAK,EAAE,IAAI,CAAC;AACvD,SAAImpD,GAAQhiB,EAAG,KAAKsO,EAAO,GAAG,KAAKA,EAAO,WAAW,QAAQA,EAAO,UAAU,QAC1EtO,EAAG,KAAKsO,EAAO,GAAG,GACtB+a,EAASrpB,EAAG,gBAAgB,GACrB;AACX;AACA,SAAS85C,GAActmF,GAAO61D,GAAUt2B,GAAO;AAC3C,MAAIiN,IAAKxsC,EAAM,IAAIgL,IAAOu0B,EAAM;AAEhC,WAASj7B,IAAMi7B,EAAM,KAAKvsC,IAAIusC,EAAM,WAAW,GAAG1/B,IAAI0/B,EAAM,YAAYvsC,IAAI6M,GAAG7M;AAC3E,IAAAsR,KAAO0G,EAAK,MAAMhY,CAAC,EAAE,UACrBw5C,EAAG,OAAOloC,IAAM,GAAGA,IAAM,CAAC;AAE9B,MAAI22C,IAASzO,EAAG,IAAI,QAAQjN,EAAM,KAAK,GAAGnxB,IAAO6sC,EAAO;AACxD,MAAIzO,EAAG,QAAQ,IAAIjN,EAAM,GAAG,KAAKA,EAAM,QAAQ0b,EAAO,UAAU;AAC5D,WAAO;AACX,MAAI2c,IAAUr4B,EAAM,cAAc,GAAGo4B,IAAQp4B,EAAM,YAAYv0B,EAAK,YAChEnG,IAASo2C,EAAO,KAAK,EAAE,GAAGurC,IAAcvrC,EAAO,MAAM,EAAE;AAC3D,MAAI,CAACp2C,EAAO,WAAW2hF,KAAe5uB,IAAU,IAAI,IAAI4uB,IAAc,GAAGp4E,EAAK,QAAQ,OAAOupD,IAAQhf,EAAS,QAAQA,EAAS,KAAK3tC,CAAI,CAAC,CAAC;AACtI,WAAO;AACX,MAAIlG,IAAQm2C,EAAO,KAAK51C,IAAMP,IAAQsJ,EAAK;AAI3C,SAAAo+B,EAAG,KAAK,IAAI6e,GAAkBvmD,KAAS8yD,IAAU,IAAI,IAAIvyD,KAAOsyD,IAAQ,IAAI,IAAI7yD,IAAQ,GAAGO,IAAM,GAAG,IAAImwC,GAAOoiB,IAAUjf,EAAS,QAAQA,EAAS,KAAK3tC,EAAK,KAAK2tC,EAAS,KAAK,CAAC,GAC5K,OAAOgf,IAAQhf,EAAS,QAAQA,EAAS,KAAK3tC,EAAK,KAAK2tC,EAAS,KAAK,CAAC,CAAC,GAAGif,IAAU,IAAI,GAAGD,IAAQ,IAAI,CAAC,GAAGC,IAAU,IAAI,CAAC,CAAC,GACjI/B,EAASrpB,EAAG,gBAAgB,GACrB;AACX;AAKA,SAASi6C,GAAaX,GAAU;AAC5B,SAAO,SAAU9lF,GAAO61D,GAAU;AAC9B,QAAI,EAAE,OAAAzb,GAAO,KAAAC,EAAG,IAAKr6C,EAAM,WACvBu/B,IAAQ6a,EAAM,WAAWC,GAAK,CAAA94C,MAAQA,EAAK,aAAa,KAAKA,EAAK,WAAW,QAAQukF,CAAQ;AACjG,QAAI,CAACvmD;AACD,aAAO;AACX,QAAIjb,IAAaib,EAAM;AACvB,QAAIjb,KAAc;AACd,aAAO;AACX,QAAIzf,IAAS06B,EAAM,QAAQ2iB,IAAar9C,EAAO,MAAMyf,IAAa,CAAC;AACnE,QAAI49B,EAAW,QAAQ4jC;AACnB,aAAO;AACX,QAAIjwB,GAAU;AACV,UAAI6wB,IAAexkC,EAAW,aAAaA,EAAW,UAAU,QAAQr9C,EAAO,MAC3ElJ,IAAQg9C,EAAS,KAAK+tC,IAAeZ,EAAS,OAAM,IAAK,IAAI,GAC7DpwE,IAAQ,IAAI8/B,EAAMmD,EAAS,KAAKmtC,EAAS,OAAO,MAAMntC,EAAS,KAAK9zC,EAAO,KAAK,OAAO,MAAMlJ,CAAK,CAAC,CAAC,CAAC,GAAG+qF,IAAe,IAAI,GAAG,CAAC,GAC/H7pF,IAAS0iC,EAAM,OAAOziC,IAAQyiC,EAAM;AACxC,MAAAs2B,EAAS71D,EAAM,GAAG,KAAK,IAAIqrD,GAAkBxuD,KAAU6pF,IAAe,IAAI,IAAI5pF,GAAOD,GAAQC,GAAO4Y,GAAO,GAAG,EAAI,CAAC,EAC9G,gBAAgB;AAAA,IACzB;AACA,WAAO;AAAA,EACX;AACJ;ACnQO,SAASoxB,GAAYh+B,GAAM;AAEhC,QAAMgzC,IAAQ,oBAAI,IAAG;AAErB,MAAI,CAAChzC,KAAQ,CAACA,EAAK;AACjB,UAAM,IAAI,MAAM,sCAAsC;AAGxD,SAAAkjB,GAAMljB,GAAM,cAAc,SAAUyO,GAAY;AAC9C,UAAMla,IAAKspF,GAAMpvE,EAAW,UAAU;AACtC,IAAIla,KAAM,CAACy+C,EAAM,IAAIz+C,CAAE,KACrBy+C,EAAM,IAAIz+C,GAAIka,CAAU;AAAA,EAE5B,CAAC,GAEMA;AAGP,WAASA,EAAWI,GAAY;AAC9B,UAAMta,IAAKspF,GAAMhvE,CAAU;AAC3B,WAAOmkC,EAAM,IAAIz+C,CAAE;AAAA,EACrB;AACF;AAMA,SAASspF,GAAM11F,GAAO;AACpB,SAAO,OAAOA,KAAS,EAAE,EAAE,YAAW;AACxC;AC5Ce,SAAS21F,KAAoB;AAS1C,SAAO,SAAU99E,GAAM;AACrB,UAAMyO,IAAauvB,GAAYh+B,CAAI;AAEnC,IAAAkjB,GAAMljB,GAAM,SAAUvH,GAAMrJ,GAAO2M,GAAQ;AACzC,UACEtD,EAAK,SAAS,gBACdsD,MAAW,UACX,OAAO3M,KAAU;AAEjB,eAAA2M,EAAO,SAAS,OAAO3M,GAAO,CAAC,GACxB,CAACszB,IAAMtzB,CAAK;AAGrB,UAAIqJ,EAAK,SAAS,oBAAoBA,EAAK,SAAS,iBAAiB;AACnE,cAAM2vD,IAAM35C,EAAWhW,EAAK,UAAU;AAEtC,YAAI2vD,KAAOrsD,KAAU,OAAO3M,KAAU;AACpC,iBAAA2M,EAAO,SAAS3M,CAAK,IACnBqJ,EAAK,SAAS,mBACV,EAAC,MAAM,SAAS,KAAK2vD,EAAI,KAAK,OAAOA,EAAI,OAAO,KAAK3vD,EAAK,IAAG,IAC7D;AAAA,YACE,MAAM;AAAA,YACN,KAAK2vD,EAAI;AAAA,YACT,OAAOA,EAAI;AAAA,YACX,UAAU3vD,EAAK;AAAA,UACjC,GACiB,CAACiqB,IAAMtzB,CAAK;AAAA,MAEvB;AAAA,IACF,CAAC;AAAA,EACH;AACF;ACvCA,SAAS2uF,GAAc7mF,GAAOuB,GAAM;AAElC,MAAI,EADoBA,EAAK,cAAc,KAAKA,EAAK,WAAW,KAAK,SAAS,cACxD;AACpB,IAAAvB,EAAM,KAAKuB,EAAK,OAAO;AACvB;AAAA,EACF;AACA,QAAMulF,IAAa,CAAA;AACnB,EAAAvlF,EAAK,QAAQ,QAAQ,CAAC7K,GAAG4sB,GAAGtwB,MAAM;AAChC,IAAIA,MAAMuO,EAAK,aAAa,KAC5BulF,EAAW,KAAKpwF,CAAC;AAAA,EACnB,CAAC,GACDsJ,EAAM,KAAK24C,EAAS,UAAUmuC,CAAU,CAAC;AAC3C;AACA,SAASpL,EAAS1xE,GAAQ4I,GAAM;AAC9B,gBAAO,OAAO5I,GAAQ;AAAA,IACpB,MAAM;AAAA,MACJ,SAAS;AAAA,MACT,GAAG4I;AAAA,IACT;AAAA,EACA,CAAG,GACM5I;AACT;AACA,MAAM+8E,KAAevB,GAAU,UAAU;AACzC9J,EAASqL,IAAc;AAAA,EACrB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAiBlC,GAAY,YAAY,CAACtI,OAAS;AAAA,EACvD,OAAO;AAAA,IACL,QAAQ;AAAA,MACN,SAASA,EAAI,IAAIF,EAAyB,EAAE,YAAY;AAAA,MACxD,UAAU;AAAA,IAChB;AAAA,EACA;AAAA,EACE,UAAU;AAAA,IACR,EAAE,KAAK,IAAG;AAAA,IACV,EAAE,KAAK,KAAI;AAAA,IACX,EAAE,OAAO,cAAc,UAAU,CAACrrF,MAAUA,MAAU,SAAQ;AAAA,EAClE;AAAA,EACE,OAAO,CAAC42C,MAAS,CAAC,MAAM20C,EAAI,IAAIuK,GAAa,GAAG,EAAEl/C,CAAI,CAAC;AAAA,EACvD,eAAe;AAAA,IACb,OAAO,CAACtmC,MAASA,EAAK,SAAS;AAAA,IAC/B,QAAQ,CAACvB,GAAOuB,GAAMs+C,MAAa;AACjC,MAAA7/C,EAAM,SAAS6/C,GAAU,EAAE,QAAQt+C,EAAK,QAAQ,GAChDvB,EAAM,KAAKuB,EAAK,QAAQ,GACxBvB,EAAM,UAAU6/C,CAAQ;AAAA,IAC1B;AAAA,EACJ;AAAA,EACE,YAAY;AAAA,IACV,OAAO,CAAChY,MAASA,EAAK,KAAK,SAAS;AAAA,IACpC,QAAQ,CAAC7nC,GAAO6nC,MAAS;AACvB,MAAA7nC,EAAM,SAAS6nC,GAAM,YAAY,QAAQ;AAAA,QACvC,QAAQA,EAAK,MAAM;AAAA,MAC3B,CAAO;AAAA,IACH;AAAA,EACJ;AACA,EAAE;AACF6zC,EAASsL,GAAe,MAAM;AAAA,EAC5B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDtL,EAASsL,GAAe,KAAK;AAAA,EAC3B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAwB5D,EAAS,kBAAkB,CAAC7G,MAAQ,MACzDxjB,GAAWguB,GAAe,KAAKxK,CAAG,CAAC,CAC3C;AACDd,EAASuL,IAAuB;AAAA,EAC9B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAwB3D,GAAW,CAAC/G,MACjClhB,GAAS,0BAA0B0rB,GAAe,KAAKxK,CAAG,GAAG;AAAA,EAClE,SAAS,OAAO;AAAA,IACd,QAAQ;AAAA,EACd;AAAA,EACI,gBAAgB,CAAC,EAAE,WAAAlsC,GAAW,OAAAxrC,EAAK,MAAQwrC,EAAU,WAAW,GAAG,IAA0D,CAAA,IAAtD,EAAE,WAAWA,EAAU,MAAM,CAAC,GAAG,OAAOxrC,IAAQ;AAC3H,CAAG,CACF;AACD42E,EAASwL,IAAuB;AAAA,EAC9B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAA8B5D,GAAW,CAAC/G,MACvClhB,GAAS,8BAA8B0rB,GAAe,KAAKxK,CAAG,GAAG;AAAA,EACtE,SAAS,OAAO;AAAA,IACd,QAAQ;AAAA,EACd;AAAA,EACI,gBAAgB,CAAC,EAAE,WAAAlsC,GAAW,OAAAxrC,EAAK,MAAQwrC,EAAU,WAAW,GAAG,IAA0D,CAAA,IAAtD,EAAE,WAAWA,EAAU,MAAM,CAAC,GAAG,OAAOxrC,IAAQ;AAC3H,CAAG,CACF;AACD42E,EAASyL,IAA6B;AAAA,EACpC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAiBrC,GAAW,kBAAkB;AAAA,EAClD,gBAAgB;AAAA,IACd,WAAW;AAAA,IACX,SAAS,CAACvI,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAK0J,GAAsB,GAAG;AAAA,IACvD;AAAA,EACJ;AACA,CAAC;AACDvL,EAAS0L,GAAe,KAAK;AAAA,EAC3B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD1L,EAAS0L,GAAe,WAAW;AAAA,EACjC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAa7B,GAAU,QAAQ;AACrC9J,EAAS2L,IAAY;AAAA,EACnB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAexC,GAAY,UAAU,CAACtI,OAAS;AAAA,EACnD,OAAO;AAAA,IACL,QAAQ;AAAA,MACN,SAASA,EAAI,IAAIF,EAAyB,EAAE,UAAU;AAAA,MACtD,UAAU;AAAA,IAChB;AAAA,EACA;AAAA,EACE,UAAU;AAAA;AAAA;AAAA;AAAA,IAIR;AAAA,MACE,KAAK;AAAA,MACL,UAAU,CAAC/6E,MAASA,EAAK,MAAM,cAAc,YAAY;AAAA,IAC/D;AAAA,IACI,EAAE,KAAK,SAAQ;AAAA,IACf,EAAE,OAAO,cAAc,UAAU,CAACtQ,MAAUA,MAAU,OAAM;AAAA,IAC5D,EAAE,OAAO,mBAAmB,WAAW,CAACwF,MAAMA,EAAE,KAAK,QAAQ,SAAQ;AAAA,IACrE;AAAA,MACE,OAAO;AAAA,MACP,UAAU,CAACxF,MAAU,4BAA4B,KAAKA,CAAK,KAAK;AAAA,IACtE;AAAA,EACA;AAAA,EACE,OAAO,CAAC42C,MAAS,CAAC,UAAU20C,EAAI,IAAI6K,GAAW,GAAG,EAAEx/C,CAAI,CAAC;AAAA,EACzD,eAAe;AAAA,IACb,OAAO,CAACtmC,MAASA,EAAK,SAAS;AAAA,IAC/B,QAAQ,CAACvB,GAAOuB,GAAMs+C,MAAa;AACjC,MAAA7/C,EAAM,SAAS6/C,GAAU,EAAE,QAAQt+C,EAAK,QAAQ,GAChDvB,EAAM,KAAKuB,EAAK,QAAQ,GACxBvB,EAAM,UAAU6/C,CAAQ;AAAA,IAC1B;AAAA,EACJ;AAAA,EACE,YAAY;AAAA,IACV,OAAO,CAAChY,MAASA,EAAK,KAAK,SAAS;AAAA,IACpC,QAAQ,CAAC7nC,GAAO6nC,MAAS;AACvB,MAAA7nC,EAAM,SAAS6nC,GAAM,UAAU,QAAQ;AAAA,QACrC,QAAQA,EAAK,MAAM;AAAA,MAC3B,CAAO;AAAA,IACH;AAAA,EACJ;AACA,EAAE;AACF6zC,EAAS4L,GAAa,MAAM;AAAA,EAC1B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD5L,EAAS4L,GAAa,KAAK;AAAA,EACzB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAsBlE,EAAS,gBAAgB,CAAC7G,MAAQ,MACrDxjB,GAAWsuB,GAAa,KAAK9K,CAAG,CAAC,CACzC;AACDd,EAAS6L,IAAqB;AAAA,EAC5B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAkBjE,GAAW,CAAC/G,MAC3BlhB;AAAA,EACL,IAAI,OAAO,4DAA4D;AAAA,EACvEgsB,GAAa,KAAK9K,CAAG;AAAA,EACrB;AAAA,IACE,SAAS,CAACrhF,OACD;AAAA,MACL,QAAQA,EAAM,CAAC,EAAE,WAAW,GAAG,IAAI,MAAM;AAAA,IACnD;AAAA,EAEA;AACA,CACC;AACDugF,EAAS8L,IAAiB;AAAA,EACxB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAe1C,GAAW,gBAAgB;AAAA,EAC9C,YAAY;AAAA,IACV,WAAW,CAAC,OAAO;AAAA,IACnB,SAAS,CAACvI,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAKgK,GAAoB,GAAG;AAAA,IACrD;AAAA,EACJ;AACA,CAAC;AACD7L,EAAS+L,GAAa,KAAK;AAAA,EACzB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD/L,EAAS+L,GAAa,WAAW;AAAA,EAC/B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAiBlC,GAAU,YAAY;AAC7C9J,EAASgM,IAAgB;AAAA,EACvB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAmB7C,GAAY,cAAc,CAACtI,OAAS;AAAA,EAC3D,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU,CAAC,EAAE,KAAK,QAAQ;AAAA,EAC1B,OAAO,CAAC30C,MAAS,CAAC,QAAQ20C,EAAI,IAAIkL,GAAe,GAAG,EAAE7/C,CAAI,CAAC;AAAA,EAC3D,eAAe;AAAA,IACb,OAAO,CAACtmC,MAASA,EAAK,SAAS;AAAA,IAC/B,QAAQ,CAACvB,GAAOuB,GAAMs+C,MAAa;AACjC,MAAA7/C,EAAM,SAAS6/C,CAAQ,GACvB7/C,EAAM,QAAQuB,EAAK,KAAK,GACxBvB,EAAM,UAAU6/C,CAAQ;AAAA,IAC1B;AAAA,EACJ;AAAA,EACE,YAAY;AAAA,IACV,OAAO,CAAChY,MAASA,EAAK,KAAK,SAAS;AAAA,IACpC,QAAQ,CAAC7nC,GAAO6nC,GAAMtmC,MAAS;AAC7B,MAAAvB,EAAM,SAAS6nC,GAAM,cAActmC,EAAK,QAAQ,EAAE;AAAA,IACpD;AAAA,EACJ;AACA,EAAE;AACFm6E,EAASiM,GAAiB,MAAM;AAAA,EAC9B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDjM,EAASiM,GAAiB,KAAK;AAAA,EAC7B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAA0BvE;AAAA,EAC9B;AAAA,EACA,CAAC7G,MAAQ,MAAM,CAACx8E,GAAO61D,MAAa;AAClC,UAAM,EAAE,WAAAzB,GAAW,IAAA5nB,EAAE,IAAKxsC;AAC1B,QAAIo0D,EAAU,MAAO,QAAO;AAC5B,UAAM,EAAE,MAAAvyC,GAAM,IAAAokB,EAAE,IAAKmuB;AAErB,WADYp0D,EAAM,IAAI,aAAa6hB,GAAMokB,GAAI0hD,GAAiB,KAAKnL,CAAG,CAAC,KAErE3mB,IAAWrpB,EAAG,WAAW3qB,GAAMokB,GAAI0hD,GAAiB,KAAKnL,CAAG,CAAC,CAAC,GACvD,OAEa,OAAO,KAAKx8E,EAAM,OAAO,KAAK,EAAE;AAAA,MACpD,CAAC+sC,MAAMA,MAAM46C,GAAiB,KAAK;AAAA,IACzC,EACkB,IAAI,CAACjlF,MAAS1C,EAAM,OAAO,MAAM0C,CAAI,CAAC,EAAE,QAAQ,CAACsgF,MAAM;AACnE,MAAAx2C,EAAG,WAAW3qB,GAAMokB,GAAI+8C,CAAC;AAAA,IAC3B,CAAC,GACDntB,IAAWrpB,EAAG,QAAQ3qB,GAAMokB,GAAI0hD,GAAiB,KAAKnL,CAAG,EAAE,OAAM,CAAE,CAAC,GAC7D;AAAA,EACT;AACF;AACAd,EAASkM,IAAyB;AAAA,EAChC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAsBtE,GAAW,CAAC/G,MAC/BlhB,GAAS,sBAAsBqsB,GAAiB,KAAKnL,CAAG,CAAC,CACjE;AACDd,EAASmM,IAAqB;AAAA,EAC5B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAmB/C,GAAW,oBAAoB;AAAA,EACtD,kBAAkB;AAAA,IAChB,WAAW;AAAA,IACX,SAAS,CAACvI,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAKqK,GAAwB,GAAG;AAAA,IACzD;AAAA,EACJ;AACA,CAAC;AACDlM,EAASoM,GAAiB,KAAK;AAAA,EAC7B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDpM,EAASoM,GAAiB,WAAW;AAAA,EACnC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAWvC,GAAU,MAAM;AACjC9J,EAASqM,IAAU;AAAA,EACjB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAalD,GAAY,QAAQ,CAACtI,OAAS;AAAA,EAC/C,OAAO;AAAA,IACL,MAAM,EAAE,UAAU,SAAQ;AAAA,IAC1B,OAAO,EAAE,SAAS,MAAM,UAAU,cAAa;AAAA,EACnD;AAAA,EACE,UAAU;AAAA,IACR;AAAA,MACE,KAAK;AAAA,MACL,UAAU,CAAC17B,MAAQ;AACjB,YAAI,EAAEA,aAAe,aAAc,OAAMzM,GAAmByM,CAAG;AAC/D,eAAO;AAAA,UACL,MAAMA,EAAI,aAAa,MAAM;AAAA,UAC7B,OAAOA,EAAI,aAAa,OAAO;AAAA,QACzC;AAAA,MACM;AAAA,IACN;AAAA,EACA;AAAA,EACE,OAAO,CAACjZ,MAAS,CAAC,KAAK,EAAE,GAAG20C,EAAI,IAAIuL,GAAS,GAAG,EAAElgD,CAAI,GAAG,GAAGA,EAAK,MAAK,CAAE;AAAA,EACxE,eAAe;AAAA,IACb,OAAO,CAACtmC,MAASA,EAAK,SAAS;AAAA,IAC/B,QAAQ,CAACvB,GAAOuB,GAAMs+C,MAAa;AACjC,YAAMh5C,IAAMtF,EAAK,KACX0yC,IAAQ1yC,EAAK;AACnB,MAAAvB,EAAM,SAAS6/C,GAAU,EAAE,MAAMh5C,GAAK,OAAAotC,GAAO,GAC7Cj0C,EAAM,KAAKuB,EAAK,QAAQ,GACxBvB,EAAM,UAAU6/C,CAAQ;AAAA,IAC1B;AAAA,EACJ;AAAA,EACE,YAAY;AAAA,IACV,OAAO,CAAChY,MAASA,EAAK,KAAK,SAAS;AAAA,IACpC,QAAQ,CAAC7nC,GAAO6nC,MAAS;AACvB,MAAA7nC,EAAM,SAAS6nC,GAAM,QAAQ,QAAQ;AAAA,QACnC,OAAOA,EAAK,MAAM;AAAA,QAClB,KAAKA,EAAK,MAAM;AAAA,MACxB,CAAO;AAAA,IACH;AAAA,EACJ;AACA,EAAE;AACF6zC,EAASsM,GAAW,MAAM;AAAA,EACxB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAoB5E;AAAA,EACxB;AAAA,EACA,CAAC7G,MAAQ,CAACqB,IAAU,CAAA,MAAO7kB,GAAWgvB,GAAW,KAAKxL,CAAG,GAAGqB,CAAO;AACrE;AACAnC,EAASuM,IAAmB;AAAA,EAC1B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAoB7E;AAAA,EACxB;AAAA,EACA,CAAC7G,MAAQ,CAACqB,IAAU,CAAA,MAAO,CAAC79E,GAAO61D,MAAa;AAC9C,QAAI,CAACA,EAAU,QAAO;AACtB,QAAIt0D,GACA+C,IAAM;AACV,UAAM,EAAE,WAAA8vD,EAAS,IAAKp0D,GAChB,EAAE,MAAA6hB,GAAM,IAAAokB,EAAE,IAAKmuB;AASrB,QARAp0D,EAAM,IAAI,aAAa6hB,GAAMA,MAASokB,IAAKA,IAAK,IAAIA,GAAI,CAACvvC,GAAGy1C,MAAM;AAChE,UAAI67C,GAAW,KAAKxL,CAAG,EAAE,QAAQ9lF,EAAE,KAAK;AACtC,eAAA6K,IAAO7K,GACP4N,IAAM6nC,GACC;AAAA,IAGX,CAAC,GACG,CAAC5qC,EAAM,QAAO;AAClB,UAAMsmC,IAAOtmC,EAAK,MAAM,KAAK,CAAC,EAAE,MAAAjE,EAAI,MAAOA,MAAS0qF,GAAW,KAAKxL,CAAG,CAAC;AACxE,QAAI,CAAC30C,EAAM,QAAO;AAClB,UAAM/iC,IAAQR,GACRe,IAAMf,IAAM/C,EAAK,UACjB,EAAE,IAAAirC,EAAE,IAAKxsC,GACTmoF,IAAWH,GAAW,KAAKxL,CAAG,EAAE,OAAO,EAAE,GAAG30C,EAAK,OAAO,GAAGg2C,EAAO,CAAE;AAC1E,WAAKsK,KACLtyB;AAAA,MACErpB,EAAG,WAAW1nC,GAAOO,GAAKwiC,CAAI,EAAE,QAAQ/iC,GAAOO,GAAK8iF,CAAQ,EAAE,aAAa,IAAIt1B,EAAcrmB,EAAG,UAAU,OAAO,CAAC,EAAE,eAAc;AAAA,IACxI,GACW,MAJe;AAAA,EAKxB;AACF;AACAkvC,EAASwM,IAAmB;AAAA,EAC1B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAME,KAAYnE,GAAM,OAAO,OAAO;AAAA,EACpC,SAAS;AAAA,EACT,eAAe;AAAA,IACb,OAAO,CAAC,EAAE,MAAA3mF,EAAI,MAAOA,MAAS;AAAA,IAC9B,QAAQ,CAAC0C,GAAOuB,GAAMjE,MAAS;AAC7B,MAAA0C,EAAM,WAAWuB,GAAMjE,CAAI;AAAA,IAC7B;AAAA,EACJ;AAAA,EACE,YAAY;AAAA,IACV,OAAO,CAACiE,MAASA,EAAK,KAAK,SAAS;AAAA,IACpC,QAAQ,CAACvB,GAAOuB,MAAS;AACvB,MAAAvB,EAAM,SAAS,MAAM,GACrBA,EAAM,KAAKuB,EAAK,OAAO;AAAA,IACzB;AAAA,EACJ;AACA,EAAE;AACFm6E,EAAS0M,IAAW;AAAA,EAClB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,SAASC,GAAeC,GAAK;AAC3B,SAAO78D;AAAA,IACL68D;AAAA,IACA,CAAC/mF,MAASA,EAAK,SAAS,UAAU,CAAC,UAAU,QAAQ,SAAS,OAAO,EAAE;AAAA,MACrEA,EAAK,OAAO,KAAI;AAAA,IACtB;AAAA,IACI,CAACA,GAAMwqB,MAAY;AACjB,UAAI,CAACA,EAAQ,OAAQ;AACrB,YAAMlnB,IAASknB,EAAQA,EAAQ,SAAS,CAAC;AACzC,UAAI,CAAClnB,EAAQ;AACb,YAAM3M,IAAQ2M,EAAO,SAAS,QAAQtD,CAAI;AAC1C,MAAIrJ,MAAU,MACd2M,EAAO,SAAS,OAAO3M,GAAO,CAAC;AAAA,IACjC;AAAA,IACA;AAAA,EACJ;AACA;AACA,MAAMqwF,KAAgC9C;AAAA,EACpC;AAAA,EACA,MAAM,MAAM4C;AACd;AACA3M,EAAS6M,GAA8B,QAAQ;AAAA,EAC7C,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD7M,EAAS6M,GAA8B,SAAS;AAAA,EAC9C,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAgBjD,GAAU,WAAW;AAC3C7J,EAAS8M,IAAe;AAAA,EACtB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAkB9D,GAAY,aAAa,CAACnI,OAAS;AAAA,EACzD,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU,CAAC,EAAE,KAAK,KAAK;AAAA,EACvB,OAAO,CAACj7E,MAAS,CAAC,KAAKi7E,EAAI,IAAIgM,GAAc,GAAG,EAAEjnF,CAAI,GAAG,CAAC;AAAA,EAC1D,eAAe;AAAA,IACb,OAAO,CAACA,MAASA,EAAK,SAAS;AAAA,IAC/B,QAAQ,CAACvB,GAAOuB,GAAMjE,MAAS;AAC7B,MAAA0C,EAAM,SAAS1C,CAAI,GACfiE,EAAK,WAAUvB,EAAM,KAAKuB,EAAK,QAAQ,IACtCvB,EAAM,QAAQuB,EAAK,SAAS,EAAE,GACnCvB,EAAM,UAAS;AAAA,IACjB;AAAA,EACJ;AAAA,EACE,YAAY;AAAA,IACV,OAAO,CAACuB,MAASA,EAAK,KAAK,SAAS;AAAA,IACpC,QAAQ,CAACvB,GAAOuB,MAAS;AAEvB,YAAMixD,IADOgqB,EAAI,IAAIZ,EAAa,EACZ,OAAO,IAAI;AACjC,MAAA57E,EAAM,SAAS,WAAW,IACrB,CAACuB,EAAK,WAAWA,EAAK,QAAQ,SAAS,MAAMA,MAASixD,KAAYk2B,GAAwBlM,CAAG,IAChGx8E,EAAM,QAAQ,QAAQ,QAAQ,QAAQ,IAEtC6mF,GAAc7mF,GAAOuB,CAAI,GAE3BvB,EAAM,UAAS;AAAA,IACjB;AAAA,EACJ;AACA,EAAE;AACF,SAAS0oF,GAAwBlM,GAAK;AACpC,MAAImM,IAA2B;AAC/B,MAAI;AACF,IAAAnM,EAAI,IAAI+L,GAA8B,EAAE,GACxCI,IAA2B;AAAA,EAC7B,QAAQ;AACN,IAAAA,IAA2B;AAAA,EAC7B;AACA,SAAOA;AACT;AACAjN,EAAS+M,GAAgB,MAAM;AAAA,EAC7B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD/M,EAAS+M,GAAgB,KAAK;AAAA,EAC5B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMG,KAAsBvF;AAAA,EAC1B;AAAA,EACA,CAAC7G,MAAQ,MAAMrvB,GAAas7B,GAAgB,KAAKjM,CAAG,CAAC;AACvD;AACAd,EAASkN,IAAqB;AAAA,EAC5B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAkB9D,GAAW,mBAAmB;AAAA,EACpD,cAAc;AAAA,IACZ,WAAW;AAAA,IACX,SAAS,CAACvI,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAKqL,GAAoB,GAAG;AAAA,IACrD;AAAA,EACJ;AACA,CAAC;AACDlN,EAASmN,GAAgB,KAAK;AAAA,EAC5B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDnN,EAASmN,GAAgB,WAAW;AAAA,EAClC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAe,MAAM,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,CAACxlE,GAAGtwB,MAAMA,IAAI,CAAC;AACzD,SAAS+1F,GAA0BxnF,GAAM;AACvC,SAAOA,EAAK,YAAY,YAAW,EAAG,KAAI,EAAG,QAAQ,QAAQ,GAAG;AAClE;AACA,MAAMynF,KAAqBtE;AAAA,EACzBqE;AAAA,EACA;AACF;AACArN,EAASsN,IAAoB;AAAA,EAC3B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAc1D,GAAU,SAAS;AACvC7J,EAASuN,IAAa;AAAA,EACpB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAgBvE,GAAY,WAAW,CAACnI,MAAQ;AACpD,QAAM2M,IAAQ3M,EAAI,IAAIwM,GAAmB,GAAG;AAC5C,SAAO;AAAA,IACL,SAAS;AAAA,IACT,OAAO;AAAA,IACP,UAAU;AAAA,IACV,OAAO;AAAA,MACL,IAAI;AAAA,QACF,SAAS;AAAA,QACT,UAAU;AAAA,MAClB;AAAA,MACM,OAAO;AAAA,QACL,SAAS;AAAA,QACT,UAAU;AAAA,MAClB;AAAA,IACA;AAAA,IACI,UAAUF,GAAa,IAAI,CAAC/7C,OAAO;AAAA,MACjC,KAAK,IAAIA,CAAC;AAAA,MACV,UAAU,CAACxrC,MAAS;AAClB,YAAI,EAAEA,aAAgB,aAAc,OAAM8yC,GAAmB9yC,CAAI;AACjE,eAAO,EAAE,OAAOwrC,GAAG,IAAIxrC,EAAK,GAAE;AAAA,MAChC;AAAA,IACN,EAAM;AAAA,IACF,OAAO,CAACA,MACC;AAAA,MACL,IAAIA,EAAK,MAAM,KAAK;AAAA,MACpB;AAAA,QACE,GAAGi7E,EAAI,IAAIyM,GAAY,GAAG,EAAE1nF,CAAI;AAAA,QAChC,IAAIA,EAAK,MAAM,MAAM4nF,EAAM5nF,CAAI;AAAA,MACzC;AAAA,MACQ;AAAA,IACR;AAAA,IAEI,eAAe;AAAA,MACb,OAAO,CAAC,EAAE,MAAAjE,EAAI,MAAOA,MAAS;AAAA,MAC9B,QAAQ,CAAC0C,GAAOuB,GAAMjE,MAAS;AAC7B,cAAMusB,IAAQtoB,EAAK;AACnB,QAAAvB,EAAM,SAAS1C,GAAM,EAAE,OAAOusB,EAAK,CAAE,GACrC7pB,EAAM,KAAKuB,EAAK,QAAQ,GACxBvB,EAAM,UAAS;AAAA,MACjB;AAAA,IACN;AAAA,IACI,YAAY;AAAA,MACV,OAAO,CAACuB,MAASA,EAAK,KAAK,SAAS;AAAA,MACpC,QAAQ,CAACvB,GAAOuB,MAAS;AACvB,QAAAvB,EAAM,SAAS,WAAW,QAAQ,EAAE,OAAOuB,EAAK,MAAM,OAAO,GAC7DslF,GAAc7mF,GAAOuB,CAAI,GACzBvB,EAAM,UAAS;AAAA,MACjB;AAAA,IACN;AAAA,EACA;AACA,CAAC;AACD07E,EAASwN,GAAc,MAAM;AAAA,EAC3B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDxN,EAASwN,GAAc,KAAK;AAAA,EAC1B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAME,KAAyB7F,GAAW,CAAC/G,MAClCpiB;AAAA,EACL;AAAA,EACA8uB,GAAc,KAAK1M,CAAG;AAAA,EACtB,CAACrhF,MAAU;AACT,UAAM4xC,IAAI5xC,EAAM,QAAQ,QAAQ,UAAU,GACpCupB,IAAO83D,EAAI,IAAIZ,EAAa,GAC5B,EAAE,OAAAxhC,EAAK,IAAK11B,EAAK,MAAM,WACvBnjB,IAAO64C,EAAM,KAAI;AACvB,QAAI74C,EAAK,KAAK,SAAS,WAAW;AAChC,UAAIhE,IAAQ,OAAOgE,EAAK,MAAM,KAAK,IAAI,OAAOwrC,CAAC;AAC/C,aAAIxvC,IAAQ,MAAGA,IAAQ,IAChB,EAAE,OAAAA,EAAK;AAAA,IAChB;AACA,WAAO,EAAE,OAAOwvC,EAAC;AAAA,EACnB;AACJ,CACC;AACD2uC,EAAS0N,IAAwB;AAAA,EAC/B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAuBhG,EAAS,iBAAiB,CAAC7G,MAC/C,CAACj/E,OACNA,UAAU,IACNA,IAAQ,IAAU4vD,GAAas7B,GAAgB,KAAKjM,CAAG,CAAC,IACrDrvB,GAAa+7B,GAAc,KAAK1M,CAAG,GAAG,EAAE,OAAAj/E,GAAO,EAEzD;AACDm+E,EAAS2N,IAAsB;AAAA,EAC7B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAA0BjG;AAAA,EAC9B;AAAA,EACA,CAAC7G,MAAQ,MAAM,CAACx8E,GAAO61D,GAAUnxC,MAAS;AACxC,UAAM,EAAE,OAAA01B,MAAUp6C,EAAM,WAClBuB,IAAO64C,EAAM,KAAI;AACvB,QAAI74C,EAAK,SAAS2nF,GAAc,KAAK1M,CAAG,KAAK,CAACx8E,EAAM,UAAU,SAASo6C,EAAM,iBAAiB;AAC5F,aAAO;AACT,UAAM78C,IAAQgE,EAAK,MAAM,QAAQ;AACjC,WAAKhE,KAELs4D;AAAA,MACE71D,EAAM,GAAG,cAAcA,EAAM,UAAU,MAAM,OAAM,GAAI,QAAQ;AAAA,QAC7D,GAAGuB,EAAK;AAAA,QACR,OAAAhE;AAAA,MACR,CAAO;AAAA,IACP,GACW,MAPE4vD,GAAas7B,GAAgB,KAAKjM,CAAG,CAAC,EAAEx8E,GAAO61D,GAAUnxC,CAAI;AAAA,EAQxE;AACF;AACAg3D,EAAS4N,IAAyB;AAAA,EAChC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAgBxE,GAAW,iBAAiB;AAAA,EAChD,YAAY;AAAA,IACV,WAAW;AAAA,IACX,SAAS,CAACvI,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAK8L,GAAqB,KAAK,CAAC;AAAA,IACzD;AAAA,EACJ;AAAA,EACE,YAAY;AAAA,IACV,WAAW;AAAA,IACX,SAAS,CAAC7M,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAK8L,GAAqB,KAAK,CAAC;AAAA,IACzD;AAAA,EACJ;AAAA,EACE,YAAY;AAAA,IACV,WAAW;AAAA,IACX,SAAS,CAAC7M,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAK8L,GAAqB,KAAK,CAAC;AAAA,IACzD;AAAA,EACJ;AAAA,EACE,YAAY;AAAA,IACV,WAAW;AAAA,IACX,SAAS,CAAC7M,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAK8L,GAAqB,KAAK,CAAC;AAAA,IACzD;AAAA,EACJ;AAAA,EACE,YAAY;AAAA,IACV,WAAW;AAAA,IACX,SAAS,CAAC7M,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAK8L,GAAqB,KAAK,CAAC;AAAA,IACzD;AAAA,EACJ;AAAA,EACE,YAAY;AAAA,IACV,WAAW;AAAA,IACX,SAAS,CAAC7M,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAK8L,GAAqB,KAAK,CAAC;AAAA,IACzD;AAAA,EACJ;AAAA,EACE,kBAAkB;AAAA,IAChB,WAAW,CAAC,UAAU,WAAW;AAAA,IACjC,SAAS,CAAC7M,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAK+L,GAAwB,GAAG;AAAA,IACzD;AAAA,EACJ;AACA,CAAC;AACD5N,EAAS6N,GAAc,KAAK;AAAA,EAC1B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD7N,EAAS6N,GAAc,WAAW;AAAA,EAChC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAiBjE,GAAU,YAAY;AAC7C7J,EAAS8N,IAAgB;AAAA,EACvB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAmB9E;AAAA,EACvB;AAAA,EACA,CAACnI,OAAS;AAAA,IACR,SAAS;AAAA,IACT,OAAO;AAAA,IACP,UAAU;AAAA,IACV,UAAU,CAAC,EAAE,KAAK,cAAc;AAAA,IAChC,OAAO,CAACj7E,MAAS,CAAC,cAAci7E,EAAI,IAAIgN,GAAe,GAAG,EAAEjoF,CAAI,GAAG,CAAC;AAAA,IACpE,eAAe;AAAA,MACb,OAAO,CAAC,EAAE,MAAAjE,EAAI,MAAOA,MAAS;AAAA,MAC9B,QAAQ,CAAC0C,GAAOuB,GAAMjE,MAAS;AAC7B,QAAA0C,EAAM,SAAS1C,CAAI,EAAE,KAAKiE,EAAK,QAAQ,EAAE,UAAS;AAAA,MACpD;AAAA,IACN;AAAA,IACI,YAAY;AAAA,MACV,OAAO,CAACA,MAASA,EAAK,KAAK,SAAS;AAAA,MACpC,QAAQ,CAACvB,GAAOuB,MAAS;AACvB,QAAAvB,EAAM,SAAS,YAAY,EAAE,KAAKuB,EAAK,OAAO,EAAE,UAAS;AAAA,MAC3D;AAAA,IACN;AAAA,EACA;AACA;AACAm6E,EAAS+N,GAAiB,MAAM;AAAA,EAC9B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD/N,EAAS+N,GAAiB,KAAK;AAAA,EAC7B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAA4BnG;AAAA,EAChC,CAAC/G,MAAQxiB,GAAkB,YAAYyvB,GAAiB,KAAKjN,CAAG,CAAC;AACnE;AACAd,EAASgO,IAA2B;AAAA,EAClC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAA0BtG;AAAA,EAC9B;AAAA,EACA,CAAC7G,MAAQ,MAAM5jB,GAAO6wB,GAAiB,KAAKjN,CAAG,CAAC;AAClD;AACAd,EAASiO,IAAyB;AAAA,EAChC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAmB7E,GAAW,oBAAoB;AAAA,EACtD,kBAAkB;AAAA,IAChB,WAAW;AAAA,IACX,SAAS,CAACvI,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAKoM,GAAwB,GAAG;AAAA,IACzD;AAAA,EACJ;AACA,CAAC;AACDjO,EAASkO,GAAiB,KAAK;AAAA,EAC7B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDlO,EAASkO,GAAiB,WAAW;AAAA,EACnC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAgBtE,GAAU,aAAa,OAAO;AAAA,EAClD,KAAK,CAAA;AAAA,EACL,MAAM,CAAA;AACR,EAAE;AACF7J,EAASmO,IAAe;AAAA,EACtB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAkBnF,GAAY,cAAc,CAACnI,OAC1C;AAAA,EACL,SAAS;AAAA,EACT,OAAO;AAAA,EACP,OAAO;AAAA,EACP,UAAU;AAAA,EACV,MAAM;AAAA,EACN,OAAO;AAAA,IACL,UAAU;AAAA,MACR,SAAS;AAAA,MACT,UAAU;AAAA,IAClB;AAAA,EACA;AAAA,EACI,UAAU;AAAA,IACR;AAAA,MACE,KAAK;AAAA,MACL,oBAAoB;AAAA,MACpB,UAAU,CAAC17B,MAAQ;AACjB,YAAI,EAAEA,aAAe,aAAc,OAAMzM,GAAmByM,CAAG;AAC/D,eAAO,EAAE,UAAUA,EAAI,QAAQ,SAAQ;AAAA,MACzC;AAAA,IACR;AAAA,EACA;AAAA,EACI,OAAO,CAACv/C,MAAS;AACf,UAAMrD,IAAOs+E,EAAI,IAAIqN,GAAc,GAAG,EAAEtoF,CAAI,GACtCwoF,IAAWxoF,EAAK,MAAM,UACtByoF,IAAgBD,KAAYA,EAAS,SAAS,IAAI,EAAE,iBAAiBA,EAAQ,IAAK;AACxF,WAAO;AAAA,MACL;AAAA,MACA;AAAA,QACE,GAAG7rF,EAAK;AAAA,QACR,GAAG8rF;AAAA,MACb;AAAA,MACQ,CAAC,QAAQ9rF,EAAK,MAAM,CAAC;AAAA,IAC7B;AAAA,EACI;AAAA,EACA,eAAe;AAAA,IACb,OAAO,CAAC,EAAE,MAAAZ,EAAI,MAAOA,MAAS;AAAA,IAC9B,QAAQ,CAAC0C,GAAOuB,GAAMjE,MAAS;AAC7B,YAAMysF,IAAWxoF,EAAK,QAAQ,IACxBtQ,IAAQsQ,EAAK;AACnB,MAAAvB,EAAM,SAAS1C,GAAM,EAAE,UAAAysF,EAAQ,CAAE,GAC7B94F,KAAO+O,EAAM,QAAQ/O,CAAK,GAC9B+O,EAAM,UAAS;AAAA,IACjB;AAAA,EACN;AAAA,EACI,YAAY;AAAA,IACV,OAAO,CAACuB,MAASA,EAAK,KAAK,SAAS;AAAA,IACpC,QAAQ,CAACvB,GAAOuB,MAAS;AACvB,MAAAvB,EAAM,QAAQ,QAAQ,QAAQuB,EAAK,QAAQ,YAAY,QAAQ,IAAI;AAAA,QACjE,MAAMA,EAAK,MAAM;AAAA,MAC3B,CAAS;AAAA,IACH;AAAA,EACN;AACA,EACC;AACDm6E,EAASoO,GAAgB,MAAM;AAAA,EAC7B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDpO,EAASoO,GAAgB,KAAK;AAAA,EAC5B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMG,KAA2B1G;AAAA,EAC/B,CAAC/G,MAAQpiB;AAAA,IACP;AAAA,IACA0vB,GAAgB,KAAKtN,CAAG;AAAA,IACxB,CAACrhF,OAAW;AAAA,MACV,UAAUA,EAAM,QAAQ,YAAY;AAAA,IAC1C;AAAA,EACA;AACA;AACAugF,EAASuO,IAA0B;AAAA,EACjC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAyB7G;AAAA,EAC7B;AAAA,EACA,CAAC7G,MAAQ,CAACuN,IAAW,OAAO58B,GAAa28B,GAAgB,KAAKtN,CAAG,GAAG,EAAE,UAAAuN,EAAQ,CAAE;AAClF;AACArO,EAASwO,IAAwB;AAAA,EAC/B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAiC9G;AAAA,EACrC;AAAA,EACA,MAAM,CAAC,EAAE,KAAA/+E,GAAK,UAAAylF,MAAa;AAAA,IACzB,KAAK;AAAA,IACL,UAAU;AAAA,EACd,MAAQ,CAAC/pF,GAAO61D,MACRvxD,KAAO,KACTuxD,IAAW71D,EAAM,GAAG,iBAAiBsE,GAAK,YAAYylF,CAAQ,CAAC,GACxD,MAEF;AAEX;AACArO,EAASyO,IAAgC;AAAA,EACvC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAkBrF,GAAW,mBAAmB;AAAA,EACpD,iBAAiB;AAAA,IACf,WAAW;AAAA,IACX,SAAS,CAACvI,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAK2M,GAAuB,GAAG;AAAA,IACxD;AAAA,EACJ;AACA,CAAC;AACDxO,EAAS0O,GAAgB,KAAK;AAAA,EAC5B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD1O,EAAS0O,GAAgB,WAAW;AAAA,EAClC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAY9E,GAAU,OAAO;AACnC7J,EAAS2O,IAAW;AAAA,EAClB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAc3F,GAAY,SAAS,CAACnI,OACjC;AAAA,EACL,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,OAAO;AAAA,EACP,MAAM;AAAA,EACN,UAAU;AAAA,EACV,WAAW;AAAA,EACX,OAAO;AAAA,IACL,KAAK,EAAE,SAAS,IAAI,UAAU,SAAQ;AAAA,IACtC,KAAK,EAAE,SAAS,IAAI,UAAU,SAAQ;AAAA,IACtC,OAAO,EAAE,SAAS,IAAI,UAAU,SAAQ;AAAA,EAC9C;AAAA,EACI,UAAU;AAAA,IACR;AAAA,MACE,KAAK;AAAA,MACL,UAAU,CAAC17B,MAAQ;AACjB,YAAI,EAAEA,aAAe,aAAc,OAAMzM,GAAmByM,CAAG;AAC/D,eAAO;AAAA,UACL,KAAKA,EAAI,aAAa,KAAK,KAAK;AAAA,UAChC,KAAKA,EAAI,aAAa,KAAK,KAAK;AAAA,UAChC,OAAOA,EAAI,aAAa,OAAO,KAAKA,EAAI,aAAa,KAAK,KAAK;AAAA,QAC3E;AAAA,MACQ;AAAA,IACR;AAAA,EACA;AAAA,EACI,OAAO,CAACv/C,MACC,CAAC,OAAO,EAAE,GAAGi7E,EAAI,IAAI6N,GAAU,GAAG,EAAE9oF,CAAI,GAAG,GAAGA,EAAK,MAAK,CAAE;AAAA,EAEnE,eAAe;AAAA,IACb,OAAO,CAAC,EAAE,MAAAjE,EAAI,MAAOA,MAAS;AAAA,IAC9B,QAAQ,CAAC0C,GAAOuB,GAAMjE,MAAS;AAC7B,YAAMuJ,IAAMtF,EAAK,KACXiyB,IAAMjyB,EAAK,KACX0yC,IAAQ1yC,EAAK;AACnB,MAAAvB,EAAM,QAAQ1C,GAAM;AAAA,QAClB,KAAKuJ;AAAA,QACL,KAAA2sB;AAAA,QACA,OAAAygB;AAAA,MACV,CAAS;AAAA,IACH;AAAA,EACN;AAAA,EACI,YAAY;AAAA,IACV,OAAO,CAAC1yC,MAASA,EAAK,KAAK,SAAS;AAAA,IACpC,QAAQ,CAACvB,GAAOuB,MAAS;AACvB,MAAAvB,EAAM,QAAQ,SAAS,QAAQ,QAAQ;AAAA,QACrC,OAAOuB,EAAK,MAAM;AAAA,QAClB,KAAKA,EAAK,MAAM;AAAA,QAChB,KAAKA,EAAK,MAAM;AAAA,MAC1B,CAAS;AAAA,IACH;AAAA,EACN;AACA,EACC;AACDm6E,EAAS4O,GAAY,MAAM;AAAA,EACzB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD5O,EAAS4O,GAAY,KAAK;AAAA,EACxB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAqBlH;AAAA,EACzB;AAAA,EACA,CAAC7G,MAAQ,CAACqB,IAAU,CAAA,MAAO,CAAC79E,GAAO61D,MAAa;AAC9C,QAAI,CAACA,EAAU,QAAO;AACtB,UAAM,EAAE,KAAAjzD,IAAM,IAAI,KAAA4wB,IAAM,IAAI,OAAAygB,IAAQ,GAAE,IAAK4pC,GACrCt8E,IAAO+oF,GAAY,KAAK9N,CAAG,EAAE,OAAO,EAAE,KAAA55E,GAAK,KAAA4wB,GAAK,OAAAygB,GAAO;AAC7D,WAAK1yC,KACLs0D,EAAS71D,EAAM,GAAG,qBAAqBuB,CAAI,EAAE,gBAAgB,GACtD;AAAA,EACT;AACF;AACAm6E,EAAS6O,IAAoB;AAAA,EAC3B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAqBnH;AAAA,EACzB;AAAA,EACA,CAAC7G,MAAQ,CAACqB,IAAU,CAAA,MAAO,CAAC79E,GAAO61D,MAAa;AAC9C,UAAM40B,IAAcnuB;AAAA,MAClBt8D,EAAM;AAAA,MACNsqF,GAAY,KAAK9N,CAAG;AAAA,IAC1B;AACI,QAAI,CAACiO,EAAa,QAAO;AACzB,UAAM,EAAE,MAAAlpF,GAAM,KAAA+C,EAAG,IAAKmmF,GAChBC,IAAW,EAAE,GAAGnpF,EAAK,MAAK,GAC1B,EAAE,KAAAqB,GAAK,KAAA4wB,GAAK,OAAAygB,EAAK,IAAK4pC;AAC5B,WAAIj7E,MAAQ,WAAQ8nF,EAAS,MAAM9nF,IAC/B4wB,MAAQ,WAAQk3D,EAAS,MAAMl3D,IAC/BygB,MAAU,WAAQy2C,EAAS,QAAQz2C,IACvC4hB;AAAA,MACE71D,EAAM,GAAG,cAAcsE,GAAK,QAAQomF,CAAQ,EAAE,eAAc;AAAA,IAClE,GACW;AAAA,EACT;AACF;AACAhP,EAAS8O,IAAoB;AAAA,EAC3B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMG,KAAuBpH;AAAA,EAC3B,CAAC/G,MAAQ,IAAI9iB;AAAA,IACX;AAAA,IACA,CAAC15D,GAAO7E,GAAO2J,GAAOO,MAAQ;AAC5B,YAAM,CAACu6C,GAASpsB,GAAK5wB,IAAM,IAAIqxC,CAAK,IAAI94C;AACxC,aAAIykD,IACK5/C,EAAM,GAAG;AAAA,QACd8E;AAAA,QACAO;AAAA,QACAilF,GAAY,KAAK9N,CAAG,EAAE,OAAO,EAAE,KAAA55E,GAAK,KAAA4wB,GAAK,OAAAygB,EAAK,CAAE;AAAA,MAC1D,IACa;AAAA,IACT;AAAA,EACJ;AACA;AACAynC,EAASiP,IAAsB;AAAA,EAC7B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAgBrF,GAAU,aAAa,CAAChkF,OACrC;AAAA,EACL,aAAa;AAAA,EACb,kBAAkBA,EAAK,MAAM;AACjC,EACC;AACDm6E,EAASkP,IAAe;AAAA,EACtB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAkBlG,GAAY,aAAa,CAACnI,OAAS;AAAA,EACzD,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,OAAO;AAAA,IACL,UAAU;AAAA,MACR,SAAS;AAAA,MACT,UAAU;AAAA,IAChB;AAAA,EACA;AAAA,EACE,YAAY;AAAA,EACZ,UAAU;AAAA,IACR,EAAE,KAAK,KAAI;AAAA,IACX;AAAA,MACE,KAAK;AAAA,MACL,UAAU,OAAO,EAAE,UAAU,GAAI;AAAA,IACvC;AAAA,EACA;AAAA,EACE,OAAO,CAACj7E,MAASA,EAAK,MAAM,WAAW,CAAC,QAAQi7E,EAAI,IAAIoO,GAAc,GAAG,EAAErpF,CAAI,GAAG,GAAG,IAAI,CAAC,MAAMi7E,EAAI,IAAIoO,GAAc,GAAG,EAAErpF,CAAI,CAAC;AAAA,EAChI,eAAe;AAAA,IACb,OAAO,CAAC,EAAE,MAAAjE,EAAI,MAAOA,MAAS;AAAA,IAC9B,QAAQ,CAAC0C,GAAOuB,GAAMjE,MAAS;AAC7B,MAAA0C,EAAM,QAAQ1C,GAAM;AAAA,QAClB,UAAU,EACRiE,EAAK,MAAM;AAAA,MAErB,CAAO;AAAA,IACH;AAAA,EACJ;AAAA,EACE,UAAU,MAAM;AAAA;AAAA,EAChB,YAAY;AAAA,IACV,OAAO,CAACA,MAASA,EAAK,KAAK,SAAS;AAAA,IACpC,QAAQ,CAACvB,GAAOuB,MAAS;AACvB,MAAIA,EAAK,MAAM,WAAUvB,EAAM,QAAQ,QAAQ,QAAQ;AAAA,CAAI,IACtDA,EAAM,QAAQ,OAAO;AAAA,IAC5B;AAAA,EACJ;AACA,EAAE;AACF07E,EAASmP,GAAgB,MAAM;AAAA,EAC7B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDnP,EAASmP,GAAgB,KAAK;AAAA,EAC5B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAyBzH;AAAA,EAC7B;AAAA,EACA,CAAC7G,MAAQ,MAAM,CAACx8E,GAAO61D,MAAa;AAClC,UAAM,EAAE,WAAAzB,GAAW,IAAA5nB,EAAE,IAAKxsC;AAC1B,QAAI,EAAEo0D,aAAqBvB,GAAgB,QAAO;AAClD,QAAIuB,EAAU,OAAO;AACnB,YAAM7yD,IAAO6yD,EAAU,MAAM,KAAI;AACjC,UAAI7yD,EAAK,aAAa,KAAKA,EAAK,WAAW,KAAK,SAAS;AACvD,eAAAs0D;AAAA,UACErpB,EAAG;AAAA,YACD4nB,EAAU,KAAK;AAAA,YACfA,EAAU;AAAA,YACVp0D,EAAM,OAAO,KAAK,WAAW;AAAA,UACzC,EAAY,aAAaoyD,EAAU,KAAK5lB,EAAG,IAAI,QAAQ4nB,EAAU,EAAE,CAAC,CAAC,EAAE,eAAc;AAAA,QACrF,GACe;AAAA,IAEX;AACA,WAAAyB;AAAA,MACErpB,EAAG,QAAQ,aAAa,EAAI,EAAE,qBAAqBq+C,GAAgB,KAAKrO,CAAG,EAAE,OAAM,CAAE,EAAE,eAAc;AAAA,IAC3G,GACW;AAAA,EACT;AACF;AACAd,EAASoP,IAAwB;AAAA,EAC/B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAkBhG,GAAW,mBAAmB;AAAA,EACpD,iBAAiB;AAAA,IACf,WAAW;AAAA,IACX,SAAS,CAACvI,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAKuN,GAAuB,GAAG;AAAA,IACxD;AAAA,EACJ;AACA,CAAC;AACDpP,EAASqP,GAAgB,KAAK;AAAA,EAC5B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDrP,EAASqP,GAAgB,WAAW;AAAA,EAClC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAASzF,GAAU,IAAI;AAC7B7J,EAASsP,IAAQ;AAAA,EACf,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAWtG,GAAY,MAAM,CAACnI,OAAS;AAAA,EAC3C,OAAO;AAAA,EACP,UAAU,CAAC,EAAE,KAAK,MAAM;AAAA,EACxB,OAAO,CAACj7E,MAAS,CAAC,MAAMi7E,EAAI,IAAIwO,GAAO,GAAG,EAAEzpF,CAAI,CAAC;AAAA,EACjD,eAAe;AAAA,IACb,OAAO,CAAC,EAAE,MAAAjE,EAAI,MAAOA,MAAS;AAAA,IAC9B,QAAQ,CAAC0C,GAAOsjB,GAAGhmB,MAAS;AAC1B,MAAA0C,EAAM,QAAQ1C,CAAI;AAAA,IACpB;AAAA,EACJ;AAAA,EACE,YAAY;AAAA,IACV,OAAO,CAACiE,MAASA,EAAK,KAAK,SAAS;AAAA,IACpC,QAAQ,CAACvB,MAAU;AACjB,MAAAA,EAAM,QAAQ,eAAe;AAAA,IAC/B;AAAA,EACJ;AACA,EAAE;AACF07E,EAASuP,GAAS,MAAM;AAAA,EACtB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDvP,EAASuP,GAAS,KAAK;AAAA,EACrB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAoB3H;AAAA,EACxB,CAAC/G,MAAQ,IAAI9iB,GAAU,4BAA4B,CAAC15D,GAAO7E,GAAO2J,GAAOO,MAAQ;AAC/E,UAAM,EAAE,IAAAmnC,EAAE,IAAKxsC;AACf,WAAI7E,EAAM,CAAC,KAAGqxC,EAAG,YAAY1nC,IAAQ,GAAGO,GAAK4lF,GAAS,KAAKzO,CAAG,EAAE,OAAM,CAAE,GACjEhwC;AAAA,EACT,CAAC;AACH;AACAkvC,EAASwP,IAAmB;AAAA,EAC1B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAkB9H;AAAA,EACtB;AAAA,EACA,CAAC7G,MAAQ,MAAM,CAACx8E,GAAO61D,MAAa;AAClC,QAAI,CAACA,EAAU,QAAO;AACtB,UAAMz1C,IAAYqoE,GAAgB,KAAK,KAAKjM,CAAG,EAAE,OAAM,GACjD,EAAE,IAAAhwC,GAAI,WAAA4nB,EAAS,IAAKp0D,GACpB,EAAE,MAAA6hB,EAAI,IAAKuyC,GACX7yD,IAAO0pF,GAAS,KAAKzO,CAAG,EAAE,OAAM;AACtC,QAAI,CAACj7E,EAAM,QAAO;AAClB,UAAM4+E,IAAM3zC,EAAG,qBAAqBjrC,CAAI,EAAE,OAAOsgB,GAAMzB,CAAS,GAC1DqzC,IAAMrB,EAAU,SAAS+tB,EAAI,IAAI,QAAQt+D,CAAI,GAAG,GAAG,EAAI;AAC7D,WAAK4xC,KACLoC,EAASsqB,EAAI,aAAa1sB,CAAG,EAAE,eAAc,CAAE,GACxC;AAAA,EACT;AACF;AACAioB,EAASyP,IAAiB;AAAA,EACxB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAiB7F,GAAU,YAAY;AAC7C7J,EAAS0P,IAAgB;AAAA,EACvB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAmB1G,GAAY,eAAe,CAACnI,OAC5C;AAAA,EACL,SAAS;AAAA,EACT,OAAO;AAAA,EACP,OAAO;AAAA,IACL,QAAQ;AAAA,MACN,SAAS;AAAA,MACT,UAAU;AAAA,IAClB;AAAA,EACA;AAAA,EACI,UAAU;AAAA,IACR;AAAA,MACE,KAAK;AAAA,MACL,UAAU,CAAC17B,MAAQ;AACjB,YAAI,EAAEA,aAAe,aAAc,OAAMzM,GAAmByM,CAAG;AAC/D,eAAO;AAAA,UACL,QAAQA,EAAI,QAAQ,WAAW;AAAA,QAC3C;AAAA,MACQ;AAAA,IACR;AAAA,EACA;AAAA,EACI,OAAO,CAACv/C,MACC;AAAA,IACL;AAAA,IACA;AAAA,MACE,GAAGi7E,EAAI,IAAI4O,GAAe,GAAG,EAAE7pF,CAAI;AAAA,MACnC,eAAeA,EAAK,MAAM;AAAA,IACpC;AAAA,IACQ;AAAA,EACR;AAAA,EAEI,eAAe;AAAA,IACb,OAAO,CAAC,EAAE,MAAAjE,GAAM,SAAAguF,EAAO,MAAOhuF,MAAS,UAAU,CAACguF;AAAA,IAClD,QAAQ,CAACtrF,GAAOuB,GAAMjE,MAAS;AAC7B,YAAMmkC,IAASlgC,EAAK,UAAU,OAAO,GAAGA,EAAK,MAAM,KAAK;AACxD,MAAAvB,EAAM,SAAS1C,GAAM,EAAE,QAAAmkC,EAAM,CAAE,EAAE,KAAKlgC,EAAK,QAAQ,EAAE,UAAS;AAAA,IAChE;AAAA,EACN;AAAA,EACI,YAAY;AAAA,IACV,OAAO,CAACA,MAASA,EAAK,KAAK,SAAS;AAAA,IACpC,QAAQ,CAACvB,GAAOuB,MAAS;AACvB,MAAAvB,EAAM,SAAS,QAAQ,QAAQ;AAAA,QAC7B,SAAS;AAAA,QACT,QAAQuB,EAAK,MAAM;AAAA,MAC7B,CAAS,EAAE,KAAKA,EAAK,OAAO,EAAE,UAAS;AAAA,IACjC;AAAA,EACN;AACA,EACC;AACDm6E,EAAS2P,GAAiB,MAAM;AAAA,EAC9B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD3P,EAAS2P,GAAiB,KAAK;AAAA,EAC7B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAME,KAA4BhI;AAAA,EAChC,CAAC/G,MAAQxiB,GAAkB,kBAAkBqxB,GAAiB,KAAK7O,CAAG,CAAC;AACzE;AACAd,EAAS6P,IAA2B;AAAA,EAClC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAA0BnI;AAAA,EAC9B;AAAA,EACA,CAAC7G,MAAQ,MAAM5jB,GAAOyyB,GAAiB,KAAK7O,CAAG,CAAC;AAClD;AACAd,EAAS8P,IAAyB;AAAA,EAChC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAmB1G,GAAW,oBAAoB;AAAA,EACtD,kBAAkB;AAAA,IAChB,WAAW;AAAA,IACX,SAAS,CAACvI,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAKiO,GAAwB,GAAG;AAAA,IACzD;AAAA,EACJ;AACA,CAAC;AACD9P,EAAS+P,GAAiB,KAAK;AAAA,EAC7B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD/P,EAAS+P,GAAiB,WAAW;AAAA,EACnC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAkBnG,GAAU,aAAa;AAC/C7J,EAASgQ,IAAiB;AAAA,EACxB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAoBhH,GAAY,gBAAgB,CAACnI,OAAS;AAAA,EAC9D,SAAS;AAAA,EACT,OAAO;AAAA,EACP,OAAO;AAAA,IACL,OAAO;AAAA,MACL,SAAS;AAAA,MACT,UAAU;AAAA,IAChB;AAAA,IACI,QAAQ;AAAA,MACN,SAAS;AAAA,MACT,UAAU;AAAA,IAChB;AAAA,EACA;AAAA,EACE,UAAU;AAAA,IACR;AAAA,MACE,KAAK;AAAA,MACL,UAAU,CAAC17B,MAAQ;AACjB,YAAI,EAAEA,aAAe,aAAc,OAAMzM,GAAmByM,CAAG;AAC/D,eAAO;AAAA,UACL,QAAQA,EAAI,QAAQ;AAAA,UACpB,OAAOA,EAAI,aAAa,OAAO,IAAI,OAAOA,EAAI,aAAa,OAAO,CAAC,IAAI;AAAA,QACjF;AAAA,MACM;AAAA,IACN;AAAA,EACA;AAAA,EACE,OAAO,CAACv/C,MAAS;AAAA,IACf;AAAA,IACA;AAAA,MACE,GAAGi7E,EAAI,IAAIkP,GAAgB,GAAG,EAAEnqF,CAAI;AAAA,MACpC,GAAGA,EAAK,MAAM,UAAU,IAAI,KAAKA,EAAK,MAAM;AAAA,MAC5C,eAAeA,EAAK,MAAM;AAAA,IAChC;AAAA,IACI;AAAA,EACJ;AAAA,EACE,eAAe;AAAA,IACb,OAAO,CAAC,EAAE,MAAAjE,GAAM,SAAAguF,EAAO,MAAOhuF,MAAS,UAAU,CAAC,CAACguF;AAAA,IACnD,QAAQ,CAACtrF,GAAOuB,GAAMjE,MAAS;AAC7B,YAAMmkC,IAASlgC,EAAK,UAAU,OAAO,GAAGA,EAAK,MAAM,KAAK;AACxD,MAAAvB,EAAM,SAAS1C,GAAM,EAAE,QAAAmkC,EAAM,CAAE,EAAE,KAAKlgC,EAAK,QAAQ,EAAE,UAAS;AAAA,IAChE;AAAA,EACJ;AAAA,EACE,YAAY;AAAA,IACV,OAAO,CAACA,MAASA,EAAK,KAAK,SAAS;AAAA,IACpC,QAAQ,CAACvB,GAAOuB,MAAS;AACvB,MAAAvB,EAAM,SAAS,QAAQ,QAAQ;AAAA,QAC7B,SAAS;AAAA,QACT,OAAO;AAAA,QACP,QAAQuB,EAAK,MAAM,WAAW;AAAA,MACtC,CAAO,GACDvB,EAAM,KAAKuB,EAAK,OAAO,GACvBvB,EAAM,UAAS;AAAA,IACjB;AAAA,EACJ;AACA,EAAE;AACF07E,EAASiQ,GAAkB,MAAM;AAAA,EAC/B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDjQ,EAASiQ,GAAkB,KAAK;AAAA,EAC9B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAA6BrI;AAAA,EACjC,CAAC/G,MAAQxiB;AAAA,IACP;AAAA,IACA2xB,GAAkB,KAAKnP,CAAG;AAAA,IAC1B,CAACrhF,OAAW,EAAE,OAAO,OAAOA,EAAM,CAAC,CAAC;IACpC,CAACA,GAAOoG,MAASA,EAAK,aAAaA,EAAK,MAAM,UAAU,OAAOpG,EAAM,CAAC,CAAC;AAAA,EAC3E;AACA;AACAugF,EAASkQ,IAA4B;AAAA,EACnC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAA2BxI;AAAA,EAC/B;AAAA,EACA,CAAC7G,MAAQ,MAAM5jB,GAAO+yB,GAAkB,KAAKnP,CAAG,CAAC;AACnD;AACAd,EAASmQ,IAA0B;AAAA,EACjC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAoB/G,GAAW,qBAAqB;AAAA,EACxD,mBAAmB;AAAA,IACjB,WAAW;AAAA,IACX,SAAS,CAACvI,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAKsO,GAAyB,GAAG;AAAA,IAC1D;AAAA,EACJ;AACA,CAAC;AACDnQ,EAASoQ,GAAkB,KAAK;AAAA,EAC9B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDpQ,EAASoQ,GAAkB,WAAW;AAAA,EACpC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAexG,GAAU,UAAU;AACzC7J,EAASqQ,IAAc;AAAA,EACrB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAiBrH,GAAY,aAAa,CAACnI,OAAS;AAAA,EACxD,OAAO;AAAA,EACP,SAAS;AAAA,EACT,OAAO;AAAA,IACL,OAAO;AAAA,MACL,SAAS;AAAA,MACT,UAAU;AAAA,IAChB;AAAA,IACI,UAAU;AAAA,MACR,SAAS;AAAA,MACT,UAAU;AAAA,IAChB;AAAA,IACI,QAAQ;AAAA,MACN,SAAS;AAAA,MACT,UAAU;AAAA,IAChB;AAAA,EACA;AAAA,EACE,UAAU;AAAA,EACV,UAAU;AAAA,IACR;AAAA,MACE,KAAK;AAAA,MACL,UAAU,CAAC17B,MAAQ;AACjB,YAAI,EAAEA,aAAe,aAAc,OAAMzM,GAAmByM,CAAG;AAC/D,eAAO;AAAA,UACL,OAAOA,EAAI,QAAQ;AAAA,UACnB,UAAUA,EAAI,QAAQ;AAAA,UACtB,QAAQA,EAAI,QAAQ,WAAW;AAAA,QACzC;AAAA,MACM;AAAA,IACN;AAAA,EACA;AAAA,EACE,OAAO,CAACv/C,MAAS;AAAA,IACf;AAAA,IACA;AAAA,MACE,GAAGi7E,EAAI,IAAIuP,GAAa,GAAG,EAAExqF,CAAI;AAAA,MACjC,cAAcA,EAAK,MAAM;AAAA,MACzB,kBAAkBA,EAAK,MAAM;AAAA,MAC7B,eAAeA,EAAK,MAAM;AAAA,IAChC;AAAA,IACI;AAAA,EACJ;AAAA,EACE,eAAe;AAAA,IACb,OAAO,CAAC,EAAE,MAAAjE,EAAI,MAAOA,MAAS;AAAA,IAC9B,QAAQ,CAAC0C,GAAOuB,GAAMjE,MAAS;AAC7B,YAAMggB,IAAQ/b,EAAK,SAAS,OAAO,GAAGA,EAAK,KAAK,MAAM,KAChD0qF,IAAW1qF,EAAK,SAAS,OAAO,YAAY,UAC5CkgC,IAASlgC,EAAK,UAAU,OAAO,GAAGA,EAAK,MAAM,KAAK;AACxD,MAAAvB,EAAM,SAAS1C,GAAM,EAAE,OAAAggB,GAAO,UAAA2uE,GAAU,QAAAxqD,GAAQ,GAChDzhC,EAAM,KAAKuB,EAAK,QAAQ,GACxBvB,EAAM,UAAS;AAAA,IACjB;AAAA,EACJ;AAAA,EACE,YAAY;AAAA,IACV,OAAO,CAACuB,MAASA,EAAK,KAAK,SAAS;AAAA,IACpC,QAAQ,CAACvB,GAAOuB,MAAS;AACvB,MAAAvB,EAAM,SAAS,YAAY,QAAQ;AAAA,QACjC,QAAQuB,EAAK,MAAM;AAAA,MAC3B,CAAO,GACDvB,EAAM,KAAKuB,EAAK,OAAO,GACvBvB,EAAM,UAAS;AAAA,IACjB;AAAA,EACJ;AACA,EAAE;AACF07E,EAASsQ,GAAe,MAAM;AAAA,EAC5B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDtQ,EAASsQ,GAAe,KAAK;AAAA,EAC3B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAME,KAAsB7I;AAAA,EAC1B;AAAA,EACA,CAAC7G,MAAQ,MAAMiK,GAAauF,GAAe,KAAKxP,CAAG,CAAC;AACtD;AACAd,EAASwQ,IAAqB;AAAA,EAC5B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAsB9I;AAAA,EAC1B;AAAA,EACA,CAAC7G,MAAQ,MAAM4J,GAAa4F,GAAe,KAAKxP,CAAG,CAAC;AACtD;AACAd,EAASyQ,IAAqB;AAAA,EAC5B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAuB/I;AAAA,EAC3B;AAAA,EACA,CAAC7G,MAAQ,MAAMqJ,GAAcmG,GAAe,KAAKxP,CAAG,CAAC;AACvD;AACAd,EAAS0Q,IAAsB;AAAA,EAC7B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,SAASC,GAAkB7P,GAAK;AAC9B,SAAO,CAACx8E,GAAO61D,GAAUnxC,MAAS;AAChC,UAAM,EAAE,WAAA0vC,EAAS,IAAKp0D;AACtB,QAAI,EAAEo0D,aAAqBvB,GAAgB,QAAO;AAClD,UAAM,EAAE,OAAAxnC,GAAO,OAAA+uB,EAAK,IAAKga;AAGzB,WAFI,CAAC/oC,KAAS+uB,EAAM,iBAAiB,KAClBA,EAAM,KAAK,EAAE,EACjB,SAAS4xC,GAAe,KAAKxP,CAAG,IAAU,KAClDxmB,GAAah2D,GAAO61D,GAAUnxC,CAAI;AAAA,EAC3C;AACF;AACA,MAAM4nE,KAA2BjJ;AAAA,EAC/B;AAAA,EACA,CAAC7G,MAAQ,MAAM6P,GAAkB7P,CAAG;AACtC;AACAd,EAAS4Q,IAA0B;AAAA,EACjC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAiBxH,GAAW,kBAAkB;AAAA,EAClD,cAAc;AAAA,IACZ,WAAW;AAAA,IACX,SAAS,CAACvI,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAK6O,GAAqB,GAAG;AAAA,IACtD;AAAA,EACJ;AAAA,EACE,cAAc;AAAA,IACZ,WAAW,CAAC,OAAO,OAAO;AAAA,IAC1B,SAAS,CAAC5P,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAK2O,GAAoB,GAAG;AAAA,IACrD;AAAA,EACJ;AAAA,EACE,cAAc;AAAA,IACZ,WAAW,CAAC,aAAa,OAAO;AAAA,IAChC,SAAS,CAAC1P,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAK4O,GAAoB,GAAG;AAAA,IACrD;AAAA,EACJ;AAAA,EACE,mBAAmB;AAAA,IACjB,WAAW,CAAC,aAAa,QAAQ;AAAA,IACjC,SAAS,CAAC3P,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAK+O,GAAyB,GAAG;AAAA,IAC1D;AAAA,EACJ;AACA,CAAC;AACD5Q,EAAS6Q,GAAe,KAAK;AAAA,EAC3B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD7Q,EAAS6Q,GAAe,WAAW;AAAA,EACjC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAavI,GAAM,QAAQ,OAAO;AAAA,EACtC,OAAO;AAAA,EACP,eAAe;AAAA,IACb,OAAO,CAAC,EAAE,MAAA3mF,EAAI,MAAOA,MAAS;AAAA,IAC9B,QAAQ,CAAC0C,GAAOuB,MAAS;AACvB,MAAAvB,EAAM,QAAQuB,EAAK,KAAK;AAAA,IAC1B;AAAA,EACJ;AAAA,EACE,YAAY;AAAA,IACV,OAAO,CAACA,MAASA,EAAK,KAAK,SAAS;AAAA,IACpC,QAAQ,CAACvB,GAAOuB,MAAS;AACvB,MAAAvB,EAAM,QAAQ,QAAQ,QAAQuB,EAAK,IAAI;AAAA,IACzC;AAAA,EACJ;AACA,EAAE;AACFm6E,EAAS8Q,IAAY;AAAA,EACnB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAWlH,GAAU,MAAM;AACjC7J,EAAS+Q,IAAU;AAAA,EACjB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAa/H,GAAY,QAAQ,CAACnI,OAC/B;AAAA,EACL,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,IACL,OAAO;AAAA,MACL,SAAS;AAAA,MACT,UAAU;AAAA,IAClB;AAAA,EACA;AAAA,EACI,OAAO,CAACj7E,MAAS;AACf,UAAMsyE,IAAO,SAAS,cAAc,MAAM,GACpC31E,IAAO;AAAA,MACX,GAAGs+E,EAAI,IAAIiQ,GAAS,GAAG,EAAElrF,CAAI;AAAA,MAC7B,cAAcA,EAAK,MAAM;AAAA,MACzB,aAAa;AAAA,IACrB;AACM,WAAAsyE,EAAK,cAActyE,EAAK,MAAM,OACvB,CAAC,QAAQrD,GAAMqD,EAAK,MAAM,KAAK;AAAA,EACxC;AAAA,EACA,UAAU;AAAA,IACR;AAAA,MACE,KAAK;AAAA,MACL,UAAU,CAACu/C,OACF;AAAA,QACL,OAAOA,EAAI,QAAQ,SAAS;AAAA,MACxC;AAAA,IAEA;AAAA,EACA;AAAA,EACI,eAAe;AAAA,IACb,OAAO,CAAC,EAAE,MAAAxjD,EAAI,MAAeA,MAAS;AAAA,IACtC,QAAQ,CAAC0C,GAAOuB,GAAMjE,MAAS;AAC7B,MAAA0C,EAAM,QAAQ1C,GAAM,EAAE,OAAOiE,EAAK,OAAO;AAAA,IAC3C;AAAA,EACN;AAAA,EACI,YAAY;AAAA,IACV,OAAO,CAACA,MAASA,EAAK,KAAK,SAAS;AAAA,IACpC,QAAQ,CAACvB,GAAOuB,MAAS;AACvB,MAAAvB,EAAM,QAAQ,QAAQ,QAAQuB,EAAK,MAAM,KAAK;AAAA,IAChD;AAAA,EACN;AACA,EACC;AACDm6E,EAASgR,GAAW,MAAM;AAAA,EACxB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDhR,EAASgR,GAAW,KAAK;AAAA,EACvB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMhkD,KAAS;AAAA,EACb0/C;AAAA,EACAI;AAAA,EACAC;AAAA,EACAO;AAAA,EACAC;AAAA,EACAC;AAAA,EACA0B;AAAA,EACAC;AAAA,EACArB;AAAA,EACAC;AAAA,EACAI;AAAA,EACAC;AAAA,EACAkB;AAAA,EACAC;AAAA,EACAZ;AAAA,EACAC;AAAA,EACAc;AAAA,EACAC;AAAA,EACAK;AAAA,EACAC;AAAA,EACAI;AAAA,EACAC;AAAA,EACAjF;AAAA,EACAC;AAAA,EACAK;AAAA,EACAC;AAAA,EACAI;AAAA,EACAC;AAAA,EACAI;AAAA,EACAC;AAAA,EACAyE;AAAA,EACAC;AAAA,EACAF;AACF,EAAE,KAAI,GACAG,KAAa;AAAA,EACjBjD;AAAA,EACA6B;AAAA,EACAK;AAAA,EACA3B;AAAA,EACAiB;AAAA,EACA9B;AACF,EAAE,KAAI,GACAwD,KAAiB;AAAA,EACrB1F;AAAA,EACAC;AAAA,EACAU;AAAA,EACAL;AACF,GACMqF,KAAwBxJ;AAAA,EAC5B;AAAA,EACA,MAAM,CAACxjC,MAAa,CAAC7/C,MAAU;AAC7B,QAAI,CAAC6/C,EAAU,QAAO;AACtB,UAAM,EAAE,KAAAx1B,GAAK,WAAA+pC,EAAS,IAAKp0D;AAE3B,WADgBqqB,EAAI,aAAa+pC,EAAU,MAAMA,EAAU,IAAIvU,CAAQ;AAAA,EAEzE;AACF,GACMitC,KAAwBzJ;AAAA,EAC5B;AAAA,EACA,MAAM,CAAC1vC,MAAa,CAAC3zC,MACd2zC,IACU4oB,GAAoBv8D,GAAO2zC,CAAQ,EACpC,UAFQ;AAI1B,GACMo5C,KAAiC1J;AAAA,EACrC;AAAA,EACA,MAAM,MAAM,CAACrjF,GAAO61D,MAAa;AAC/B,QAAIrpB,IAAKxsC,EAAM;AACf,UAAM,EAAE,OAAAo6C,GAAO,KAAAC,EAAG,IAAK7N,EAAG,WACpB,EAAE,KAAK3qB,EAAI,IAAKu4B,GAChB,EAAE,KAAKtnD,EAAK,IAAKunD,GACjBxnD,IAAOgvB,IAAOu4B,EAAM,KAAI,EAAG,QAAQ;AACzC,WAAIvnD,IAAO,IAAU,MACrB25C,IAAKA,EAAG,YAAY35C,GAAMC,CAAK,GAC/B+iE,IAAWrpB,CAAE,GACN;AAAA,EACT;AACF,GACMwgD,KAAsB3J;AAAA,EAC1B;AAAA,EACA,MAAM,CAACxF,MAAY,CAAC79E,GAAO61D,MAAa;AACtC,UAAM,EAAE,UAAAliB,GAAU,OAAA31C,IAAQ,KAAI,IAAK6/E,KAAW,CAAA;AAC9C,QAAI,CAAClqC,EAAU,QAAO;AACtB,UAAMnH,IAAKxsC,EAAM,IACX,EAAE,MAAA6hB,GAAM,IAAAokB,EAAE,IAAKuG,EAAG;AACxB,QAAI;AACF,MAAAA,EAAG,aAAa3qB,GAAMokB,GAAI0N,GAAU31C,CAAK;AAAA,IAC3C,QAAQ;AACN,aAAO;AAAA,IACT;AACA,WAAA63D,IAAWrpB,CAAE,GACN;AAAA,EACT;AACF,GACMygD,KAAyB5J;AAAA,EAC7B;AAAA,EACA,MAAM,CAACxF,MAAY,CAAC79E,GAAO61D,MAAa;AACtC,UAAM,EAAE,UAAAliB,GAAU,OAAA31C,IAAQ,KAAI,IAAK6/E,KAAW,CAAA;AAC9C,QAAI,CAAClqC,EAAU,QAAO;AACtB,QAAInH,IAAKxsC,EAAM;AACf,QAAI;AACF,YAAM,EAAE,OAAAo6C,GAAO,KAAAC,EAAG,IAAK7N,EAAG,WACpB0gD,IAAa9yC,EAAM,WAAWC,CAAG,GACjC8U,IAAW+9B,KAAcvgC,GAAaugC,GAAYv5C,GAAU31C,CAAK;AACvE,UAAI,CAACmxD,EAAU,QAAO;AACtB,MAAA3iB,IAAKA,EAAG,KAAK0gD,GAAY/9B,CAAQ;AAAA,IACnC,QAAQ;AACN,aAAO;AAAA,IACT;AACA,WAAA0G,IAAWrpB,CAAE,GACN;AAAA,EACT;AACF,GACM2gD,KAAsB9J;AAAA,EAC1B;AAAA,EACA,MAAM,CAACxF,MAAY,CAAC79E,GAAO61D,MAAa;AACtC,UAAM,EAAE,UAAAliB,GAAU,OAAA31C,IAAQ,KAAI,IAAK6/E,KAAW,CAAA;AAC9C,QAAI,CAAClqC,EAAU,QAAO;AACtB,UAAMnH,IAAKxsC,EAAM;AACjB,QAAI;AACF,YAAMuB,IAAOoyC,aAAoByI,KAAOzI,IAAWA,EAAS,cAAc31C,CAAK;AAC/E,UAAI,CAACuD,EAAM,QAAO;AAClB,MAAAirC,EAAG,qBAAqBjrC,CAAI;AAAA,IAC9B,QAAQ;AACN,aAAO;AAAA,IACT;AACA,WAAAs0D,IAAWrpB,CAAE,GACN;AAAA,EACT;AACF,GACM4gD,KAA2B/J;AAAA,EAC/B;AAAA,EACA,MAAM,CAACxF,MAAY,CAAC79E,GAAO61D,MAAa;AACtC,UAAM,EAAE,KAAAvxD,MAAQu5E,KAAW,CAAA;AAC3B,QAAIv5E,KAAO,KAAM,QAAO;AACxB,UAAM+oF,IAAQ,CAACp8F,GAAOgtD,GAAKjmD,MAAQ,KAAK,IAAI,KAAK,IAAI/G,GAAOgtD,CAAG,GAAGjmD,CAAG,GAC/Dw0C,IAAKxsC,EAAM;AACjB,QAAI;AACF,YAAM8tD,IAAO9tD,EAAM,IAAI,QAAQqtF,EAAM/oF,GAAK,GAAGtE,EAAM,IAAI,QAAQ,IAAI,CAAC;AACpE,MAAAwsC,EAAG,aAAaqmB,EAAc,KAAK/E,CAAI,CAAC;AAAA,IAC1C,QAAQ;AACN,aAAO;AAAA,IACT;AACA,WAAA+H,IAAWrpB,EAAG,gBAAgB,GACvB;AAAA,EACT;AACF,GACM4sB,KAAW;AAAA,EACfwvB;AAAA,EACAe;AAAA,EACAN;AAAA,EACAC;AAAA,EACAY;AAAA,EACAY;AAAA,EACAK;AAAA,EACAZ;AAAA,EACAC;AAAA,EACAqB;AAAA,EACAL;AAAA,EACAU;AAAA,EACAE;AAAA,EACAD;AAAA,EACAG;AAAA,EACArF;AAAA,EACAW;AAAA,EACAL;AAAA,EACAU;AAAA,EACAC;AAAA,EACA2E;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAE;AAAA,EACAC;AACF,GACMpwB,KAAS;AAAA,EACb4sB;AAAA,EACAQ;AAAA,EACAW;AAAA,EACAxB;AAAA,EACAgD;AAAA,EACAT;AAAA,EACAL;AAAA,EACA5C;AAAA,EACAzB;AAAA,EACAU;AAAA,EACAL;AACF,EAAE,KAAI,GACA6F,KAA6B7H;AAAA,EACjC;AAAA,EACA,MAAM,MAAM,CAAC38E,MAAS;AACpB,IAAAkjB,GAAMljB,GAAM,QAAQ,CAACvH,MAAS;AAC5B,UAAIA,EAAK,SAAS;AAChB,cAAMuD,IAAQvD,EAAK,SAAS;AAC5B,QAAAA,EAAK,SAAS,QAAQ,CAACtD,GAAO/F,MAAU;AACtC,UAAA+F,EAAM,QAAQ/F,IAAQ4M;AAAA,QACxB,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAAA,EACH;AACF;AACA42E,EAAS4R,GAA2B,QAAQ;AAAA,EAC1C,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD5R,EAAS4R,GAA2B,SAAS;AAAA,EAC3C,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAkB9H;AAAA,EACtB;AAAA,EACA,MAAM,MAAM,CAAC38E,MAAS;AACpB,UAAM6jB,IAAO;AACb,IAAAX;AAAA,MACEljB;AAAA,MACA;AAAA,MACA,CAACvH,GAAMrJ,GAAO2M,MAAW;AACvB,YAAI,CAACtD,EAAK,SAAS,OAAOA,EAAK,SAAU,SAAU;AACnD,cAAMzL,IAAS,CAAA;AACf,YAAIgP,IAAQ;AACZ,QAAA6nB,EAAK,YAAY;AACjB,YAAIxxB,IAAQwxB,EAAK,KAAKprB,EAAK,KAAK;AAChC,eAAOpG,KAAO;AACZ,gBAAMlG,IAAWkG,EAAM;AACvB,UAAI2J,MAAU7P,KACZa,EAAO,KAAK;AAAA,YACV,MAAM;AAAA,YACN,OAAOyL,EAAK,MAAM,MAAMuD,GAAO7P,CAAQ;AAAA,UACrD,CAAa,GACHa,EAAO,KAAK,EAAE,MAAM,SAAS,MAAM,EAAE,UAAU,GAAI,GAAI,GACvDgP,IAAQ7P,IAAWkG,EAAM,CAAC,EAAE,QAC5BA,IAAQwxB,EAAK,KAAKprB,EAAK,KAAK;AAAA,QAC9B;AAEA,YAD0BzL,EAAO,SAAS,KAAK+O,KAAU,OAAO3M,KAAU;AAE1E,iBAAI4M,IAAQvD,EAAK,MAAM,UACrBzL,EAAO,KAAK,EAAE,MAAM,QAAQ,OAAOyL,EAAK,MAAM,MAAMuD,CAAK,GAAG,GAC9DD,EAAO,SAAS,OAAO3M,GAAO,GAAG,GAAGpC,CAAM,GACnCoC,IAAQpC,EAAO;AAAA,MACxB;AAAA,IACN;AAAA,EACE;AACF;AACA4lF,EAAS6R,GAAgB,QAAQ;AAAA,EAC/B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD7R,EAAS6R,GAAgB,SAAS;AAAA,EAChC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAyB/H;AAAA,EAC7B;AAAA,EACA,MAAMmB;AACR;AACAlL,EAAS8R,GAAuB,QAAQ;AAAA,EACtC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD9R,EAAS8R,GAAuB,SAAS;AAAA,EACvC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAW,CAAClsF,MAAS,CAAC,CAACA,EAAK,UAC5BmsF,KAAS,CAACnsF,MAASA,EAAK,SAAS;AACvC,SAASosF,GAAiBrF,GAAK5kF,GAAI;AACjC,SAAOkqF,EAAUtF,GAAK,GAAG,IAAI,EAAE,CAAC;AAChC,WAASsF,EAAUrsF,GAAMrJ,GAAO2M,GAAQ;AACtC,QAAI4oF,GAASlsF,CAAI,GAAG;AAClB,YAAM+hC,IAAM,CAAA;AACZ,eAAStwC,IAAI,GAAG0D,IAAI6K,EAAK,SAAS,QAAQvO,IAAI0D,GAAG1D,KAAK;AACpD,cAAM66F,IAAWtsF,EAAK,SAASvO,CAAC;AAChC,YAAI66F,GAAU;AACZ,gBAAM1M,IAAKyM,EAAUC,GAAU76F,GAAGuO,CAAI;AACtC,cAAI4/E;AACF,qBAAShqF,IAAI,GAAGV,IAAI0qF,EAAG,QAAQhqF,IAAIV,GAAGU,KAAK;AACzC,oBAAMiX,IAAO+yE,EAAGhqF,CAAC;AACjB,cAAIiX,KAAMk1B,EAAI,KAAKl1B,CAAI;AAAA,YACzB;AAAA,QAEJ;AAAA,MACF;AACA,MAAA7M,EAAK,WAAW+hC;AAAA,IAClB;AACA,WAAO5/B,EAAGnC,GAAMrJ,GAAO2M,CAAM;AAAA,EAC/B;AACF;AACA,MAAMipF,KAAwB,CAAC,QAAQ,cAAc,UAAU,GACzDC,KAAwBtI;AAAA,EAC5B;AAAA,EACA,MAAM,MAAM,CAAC38E,MAAS;AACpB,IAAA6kF,GAAiB7kF,GAAM,CAACvH,GAAMwhB,GAAQle,MAC/B6oF,GAAOnsF,CAAI,KACZsD,KAAUipF,GAAsB,SAASjpF,EAAO,IAAI,MACtDtD,EAAK,WAAW,CAAC,EAAE,GAAGA,EAAI,CAAE,GAC5B,OAAOA,EAAK,OACZA,EAAK,OAAO,cAEP,CAACA,CAAI,KANc,CAACA,CAAI,CAOhC;AAAA,EACH;AACF;AACAm6E,EAASqS,GAAsB,QAAQ;AAAA,EACrC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDrS,EAASqS,GAAsB,SAAS;AAAA,EACtC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAevI;AAAA,EACnB;AAAA,EACA,MAAM,MAAM,CAAC38E,GAAMV,MAAS;AAC1B,UAAM6lF,IAAY,CAAC1sF,MACV6G,EAAK,MAAM,OAAO7G,EAAK,SAAS,MAAM,MAAM;AAErD,IAAAyqB;AAAA,MACEljB;AAAA,MACA,CAACvH,MAAS,CAAC,UAAU,UAAU,EAAE,SAASA,EAAK,IAAI;AAAA,MACnD,CAACA,MAAS;AACR,QAAAA,EAAK,SAAS0sF,EAAU1sF,CAAI;AAAA,MAC9B;AAAA,IACN;AAAA,EACE;AACF;AACAm6E,EAASsS,GAAa,QAAQ;AAAA,EAC5B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDtS,EAASsS,GAAa,SAAS;AAAA,EAC7B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAME,KAA0B/J,GAAO,MAAM;AAC3C,MAAIvb,IAAO;AACX,QAAMulB,IAA6B,IAAIx4B;AAAA,IACrC;AAAA,EACJ,GACQy4B,IAA2B,IAAI34B,GAAO;AAAA,IAC1C,KAAK04B;AAAA,IACL,OAAO;AAAA,MACL,OAAO;AACL,eAAO;AAAA,MACT;AAAA,MACA,MAAM3hD,GAAI;AACR,YAAI,CAACA,EAAG,UAAU,MAAO,QAAO;AAChC,cAAMloC,IAAMkoC,EAAG,UAAU,OACnB35C,IAAOyR,EAAI,YACXxR,IAAQwR,EAAI;AAClB,eAAI,GAAAzR,KAAQC,KAASD,EAAK,YAAY,CAACA,EAAK,UAAUC,EAAM,YAAY,CAACA,EAAM;AAAA,MAGjF;AAAA,IACN;AAAA,IACI,OAAO;AAAA,MACL,iBAAiB;AAAA,QACf,gBAAgB,CAAC4xB,GAAM7kB,MACjB+oE,KACFA,IAAO,IACP,sBAAsB,MAAM;AAE1B,cADewlB,EAAyB,SAAS1pE,EAAK,KAAK,GAC/C;AACV,kBAAM7C,IAAO6C,EAAK,MAAM,UAAU;AAClC,YAAA7kB,EAAE,eAAc,GAChB6kB,EAAK,SAASA,EAAK,MAAM,GAAG,WAAW7kB,EAAE,QAAQ,IAAIgiB,CAAI,CAAC;AAAA,UAC5D;AAAA,QACF,CAAC,GACM,MAEF;AAAA,QAET,kBAAkB,CAAC6C,OACF0pE,EAAyB,SAAS1pE,EAAK,KAAK,MAC/CkkD,IAAO,KACZ;AAAA,QAET,aAAa,CAAClkD,GAAM7kB,MAAM;AAExB,cADeuuF,EAAyB,SAAS1pE,EAAK,KAAK,KAC7C7kB,aAAa,cAAcA,EAAE,QAAQ,CAAC+oE,GAAM;AACxD,kBAAM/mD,IAAO6C,EAAK,MAAM,UAAU;AAClC,mBAAA7kB,EAAE,eAAc,GAChB6kB,EAAK,SAASA,EAAK,MAAM,GAAG,WAAW7kB,EAAE,QAAQ,IAAIgiB,CAAI,CAAC,GACnD;AAAA,UACT;AACA,iBAAO;AAAA,QACT;AAAA,MACR;AAAA,MACM,YAAY7hB,GAAO;AAEjB,YADeouF,EAAyB,SAASpuF,CAAK,GAC1C;AAEV,gBAAM/K,IADM+K,EAAM,UAAU,MACP,KACfnN,IAAO,SAAS,cAAc,MAAM,GACpCw7F,IAAUta,GAAW,OAAO9+E,GAAUpC,GAAM;AAAA,YAChD,MAAM;AAAA,UAClB,CAAW,GACKC,IAAQ,SAAS,cAAc,MAAM,GACrCw7F,IAAWva,GAAW,OAAO9+E,GAAUnC,CAAK;AAClD,4BAAW,MAAM;AACf,YAAAD,EAAK,kBAAkB,QACvBC,EAAM,kBAAkB;AAAA,UAC1B,CAAC,GACMmhF,GAAc,OAAOj0E,EAAM,KAAK,CAACquF,GAASC,CAAQ,CAAC;AAAA,QAC5D;AACA,eAAOra,GAAc;AAAA,MACvB;AAAA,IACN;AAAA,EACA,CAAG;AACD,SAAOma;AACT,CAAC;AACD1S,EAASwS,IAAyB;AAAA,EAChC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMK,KAA2BpK,GAAO,CAAC3H,MAChC,IAAI/mB,GAAO;AAAA,EAChB,KAAK,IAAIE,GAAU,0BAA0B;AAAA,EAC7C,mBAAmB,CAACV,GAAKmrB,GAAWlrB,MAAa;AAC/C,QAAI,CAACD,EAAI,OAAQ;AACjB,UAAM,CAACzoB,CAAE,IAAIyoB;AACb,QAAI,CAACzoB,EAAI;AACT,UAAM,CAAC3gB,CAAI,IAAI2gB,EAAG;AAElB,QADmBA,EAAG,QAAQ,WAAW,GACzB;AACd,UAAI,EAAE3gB,aAAgBs/B,IAAc;AACpC,YAAM,EAAE,MAAAtpC,EAAI,IAAKgK;AACjB,aAAOqpC,EAAS,GAAG;AAAA,QACjBrzC;AAAA,QACAgpE,GAAgB,KAAKrO,CAAG;AAAA,QACxB;AAAA,QACA,CAAA;AAAA,MACV;AAAA,IACM;AAEA,QADsB3wD,aAAgBg/B,IACnB;AACjB,UAAIs1B,IAAMjrB,EAAS;AACnB,YAAM,EAAE,MAAArzC,GAAM,IAAAokB,EAAE,IAAKpa;AACrB,aAAAqpC,EAAS,IAAI,aAAarzC,GAAMokB,GAAI,CAAC1kC,GAAM+C,MAAQ;AACjD,QAAI/C,EAAK,SAASspF,GAAgB,KAAKrO,CAAG,MACxC2D,IAAMA,EAAI;AAAA,UACR77E;AAAA,UACAumF,GAAgB,KAAKrO,CAAG;AAAA,UACxB;AAAA,UACA,CAAA;AAAA,QACd;AAAA,MACQ,CAAC,GACM2D;AAAA,IACT;AAAA,EAEF;AACJ,CAAG,CACF;AACDzE,EAAS6S,IAA0B;AAAA,EACjC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAuB9J;AAAA,EAC3B,CAAC,SAAS,YAAY;AAAA,EACtB;AACF;AACAhJ,EAAS8S,IAAsB;AAAA,EAC7B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAwBtK,GAAO,CAAC3H,MAAQ;AAC5C,QAAMkS,IAAQlS,EAAI,IAAIgS,GAAqB,GAAG;AAC9C,SAAO,IAAI/4B,GAAO;AAAA,IAChB,KAAK,IAAIE,GAAU,2BAA2B;AAAA,IAC9C,mBAAmB,CAACnpB,GAAIxsC,MAAU;AAChC,YAAM2uF,IAAaniD,EAAG,QAAQ,WAAW,GACnC,CAAC3gB,CAAI,IAAI2gB,EAAG;AAClB,UAAImiD,KAAc9iE,GAAM;AACtB,cAAM,EAAE,MAAAhK,EAAI,IAAKgK,GACXuuB,IAAQp6C,EAAM,IAAI,QAAQ6hB,CAAI;AACpC,YAAI+sE,IAAWx0C,EAAM,OACjBy0C,IAAW;AACf,eAAOD,IAAW;AAChB,UAAIF,EAAM,SAASt0C,EAAM,KAAKw0C,CAAQ,EAAE,KAAK,IAAI,MAAGC,IAAW,KAC/DD;AAEF,eAAOC;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAAA,EACJ,CAAG;AACH,CAAC;AACDnT,EAAS+S,IAAuB;AAAA,EAC9B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMK,KAAsB3K,GAAO,CAAC3H,MAAQ;AAC1C,QAAMuS,IAAqB,IAAIp5B,GAAU,qBAAqB,GACxDq5B,IAAW,CAACtqE,MAAS;AACzB,QAAIA,EAAK,UAAW;AACpB,UAAMykE,IAAQ3M,EAAI,IAAIwM,GAAmB,GAAG,GACtCx8C,IAAK9nB,EAAK,MAAM,GAAG,QAAQ,gBAAgB,EAAK;AACtD,QAAIizB,IAAQ;AACZ,UAAMs3C,IAAQ,CAAA;AACd,IAAAvqE,EAAK,MAAM,IAAI,YAAY,CAACnjB,GAAM+C,MAAQ;AACxC,UAAI/C,EAAK,SAAS2nF,GAAc,KAAK1M,CAAG,GAAG;AACzC,YAAIj7E,EAAK,YAAY,KAAI,EAAG,WAAW,EAAG;AAC1C,cAAMvD,IAAQuD,EAAK;AACnB,YAAIlE,IAAK8rF,EAAM5nF,CAAI;AACnB,QAAI0tF,EAAM5xF,CAAE,KACV4xF,EAAM5xF,CAAE,KAAK,GACbA,KAAM,KAAK4xF,EAAM5xF,CAAE,CAAC,MAEpB4xF,EAAM5xF,CAAE,IAAI,GAEVW,EAAM,OAAOX,MACfs6C,IAAQ,IACRnL,EAAG,QAAQuiD,GAAoB,EAAI,EAAE,cAAczqF,GAAK,QAAQ;AAAA,UAC9D,GAAGtG;AAAA,UACH,IAAAX;AAAA,QACZ,CAAW;AAAA,MAEL;AAAA,IACF,CAAC,GACGs6C,KAAOjzB,EAAK,SAAS8nB,CAAE;AAAA,EAC7B;AACA,SAAO,IAAIipB,GAAO;AAAA,IAChB,KAAKs5B;AAAA,IACL,MAAM,CAACrqE,OACLsqE,EAAStqE,CAAI,GACN;AAAA,MACL,QAAQ,CAAC48D,GAAOpG,MAAc;AAC5B,QAAIoG,EAAM,MAAM,IAAI,GAAGpG,EAAU,GAAG,KACpC8T,EAAS1N,CAAK;AAAA,MAChB;AAAA,IACR;AAAA,EAEA,CAAG;AACH,CAAC;AACD5F,EAASoT,IAAqB;AAAA,EAC5B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMI,KAAsB/K,GAAO,CAAC3H,MAAQ;AAC1C,QAAM2S,IAAiB,CAACC,GAAchP,GAAWlrB,MAAa;AAC5D,QAAI,CAACA,EAAS,aAAak6B,EAAa;AAAA,MACtC,CAACC,MAAQA,EAAI,QAAQ,cAAc,MAAM,MAAS,CAACA,EAAI;AAAA,IAC7D;AACM,aAAO;AACT,UAAMC,IAAkB3D,GAAkB,KAAKnP,CAAG,GAC5C+S,IAAiBlE,GAAiB,KAAK7O,CAAG,GAC1CgT,IAAexD,GAAe,KAAKxP,CAAG,GACtCiT,IAAiB,CAACzxF,GAAO9F,MAAU;AACvC,UAAIw3F,IAAU;AACd,YAAMC,IAAgB,GAAGz3F,IAAQ,CAAC;AAClC,aAAI8F,EAAM,UAAU2xF,MAClB3xF,EAAM,QAAQ2xF,GACdD,IAAU,KAELA;AAAA,IACT;AACA,QAAIljD,IAAK0oB,EAAS,IACd06B,IAAe;AACnB,WAAA16B,EAAS,IAAI;AAAA,MACX,CAAC3zD,GAAM+C,GAAKO,GAAQ3M,MAAU;AAC5B,YAAIqJ,EAAK,SAASguF,GAAgB;AAChC,gBAAMzjF,IAAOvK,EAAK,WAAW,CAAC;AAC9B,UAAIuK,GAAM,SAAS0jF,KAAgB1jF,EAAK,MAAM,aAAa,cACzD8jF,IAAe,IACfpjD,EAAG,cAAcloC,GAAKgrF,GAAiB,EAAE,QAAQ,QAAQ,GACzD/tF,EAAK;AAAA,YACH,CAACtD,GAAO4xF,GAAMC,GAASC,MAAW;AAChC,kBAAI9xF,EAAM,SAASuxF,GAAc;AAC/B,sBAAMxxF,IAAQ,EAAE,GAAGC,EAAM,MAAK;AAE9B,gBADgBwxF,EAAezxF,GAAO+xF,CAAM,MAC/BvjD,IAAKA,EAAG,cAAcqjD,GAAM,QAAQ7xF,CAAK;AAAA,cACxD;AACA,qBAAO;AAAA,YACT;AAAA,UACd;AAAA,QAEQ,WAAWuD,EAAK,SAASiuF,KAAgB3qF,GAAQ,SAASyqF,GAAiB;AACzE,gBAAMtxF,IAAQ,EAAE,GAAGuD,EAAK,MAAK;AAC7B,cAAImuF,IAAU;AACd,UAAI1xF,EAAM,aAAa,cACrBA,EAAM,WAAW,WACjB0xF,IAAU,KAEC7qF,GAAQ,WAAW,CAAC,MACvB6qF,IAAUD,EAAezxF,GAAO9F,CAAK,IAC3Cw3F,MACFljD,IAAKA,EAAG,cAAcloC,GAAK,QAAQtG,CAAK,GACxC4xF,IAAe;AAAA,QAEnB;AAAA,MACF;AAAA,IACN,GACWA,IAAepjD,EAAG,QAAQ,gBAAgB,EAAK,IAAI;AAAA,EAC5D;AACA,SAAO,IAAIipB,GAAO;AAAA,IAChB,KAAK,IAAIE,GAAU,0BAA0B;AAAA,IAC7C,mBAAmBw5B;AAAA,EACvB,CAAG;AACH,CAAC;AACDzT,EAASwT,IAAqB;AAAA,EAC5B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMjlF,KAAU;AAAA,EACdskF;AAAA,EACAC;AAAA,EACAC;AAAA,EACAP;AAAA,EACAZ;AAAA,EACAE;AAAA,EACAD;AAAA,EACAQ;AAAA,EACAC;AAAA,EACAzF;AAAA,EACAuG;AAAA,EACAI;AACF,EAAE,KAAI,GACAc,KAAa;AAAA,EACjBtnD;AAAAA,EACAikD;AAAAA,EACAC;AAAAA,EACAxzB;AAAAA,EACA4D;AAAAA,EACA/yD;AACF,EAAE,KAAI;AC7rEN,IAAIgmF,IACAC;AACJ,IAAI,OAAO,UAAW,KAAa;AACjC,MAAIp0C,IAAwB,oBAAI,QAAO;AACvC,EAAAm0C,KAAgB,CAAC3tF,MAAQw5C,EAAM,IAAIx5C,CAAG,GACtC4tF,KAAa,CAAC5tF,GAAKrR,OACjB6qD,EAAM,IAAIx5C,GAAKrR,CAAK,GACbA;AAEX,OAAO;AACL,QAAM6qD,IAAQ,CAAA;AAEd,MAAIq0C,IAAW;AACf,EAAAF,KAAgB,CAAC3tF,MAAQ;AACvB,aAAS,IAAI,GAAG,IAAIw5C,EAAM,QAAQ,KAAK;AACrC,UAAIA,EAAM,CAAC,KAAKx5C,EAAK,QAAOw5C,EAAM,IAAI,CAAC;AAAA,EAC3C,GACAo0C,KAAa,CAAC5tF,GAAKrR,OACbk/F,KAAY,OAAWA,IAAW,IACtCr0C,EAAMq0C,GAAU,IAAI7tF,GACbw5C,EAAMq0C,GAAU,IAAIl/F;AAE/B;AACA,IAAIm/F,KAAW,MAAM;AAAA,EACnB,YAAYC,GAAOC,GAAQxyF,GAAKyyF,GAAU;AACxC,SAAK,QAAQF,GACb,KAAK,SAASC,GACd,KAAK,MAAMxyF,GACX,KAAK,WAAWyyF;AAAA,EAClB;AAAA;AAAA,EAEA,SAASjsF,GAAK;AACZ,aAAStR,IAAI,GAAGA,IAAI,KAAK,IAAI,QAAQA,KAAK;AACxC,YAAMomD,IAAS,KAAK,IAAIpmD,CAAC;AACzB,UAAIomD,KAAU90C,EAAK;AACnB,YAAMzR,IAAOG,IAAI,KAAK,OAChBgvD,IAAMhvD,IAAI,KAAK,QAAQ;AAC7B,UAAIF,IAAQD,IAAO,GACf29F,IAASxuC,IAAM;AACnB,eAAS7qD,IAAI,GAAGrE,IAAQ,KAAK,SAAS,KAAK,IAAIE,IAAImE,CAAC,KAAKiiD,GAAQjiD;AAC/D,QAAArE;AAEF,eAASqE,IAAI,GAAGq5F,IAAS,KAAK,UAAU,KAAK,IAAIx9F,IAAI,KAAK,QAAQmE,CAAC,KAAKiiD,GAAQjiD;AAC9E,QAAAq5F;AAEF,aAAO,EAAE,MAAA39F,GAAM,KAAAmvD,GAAK,OAAAlvD,GAAO,QAAA09F,EAAM;AAAA,IACnC;AACA,UAAM,IAAI,WAAW,uBAAuBlsF,CAAG,QAAQ;AAAA,EACzD;AAAA;AAAA,EAEA,SAASA,GAAK;AACZ,aAAStR,IAAI,GAAGA,IAAI,KAAK,IAAI,QAAQA;AACnC,UAAI,KAAK,IAAIA,CAAC,KAAKsR;AACjB,eAAOtR,IAAI,KAAK;AAGpB,UAAM,IAAI,WAAW,uBAAuBsR,CAAG,QAAQ;AAAA,EACzD;AAAA;AAAA;AAAA,EAGA,SAASA,GAAKmsF,GAAM99B,GAAK;AACvB,UAAM,EAAE,MAAA9/D,GAAM,OAAAC,GAAO,KAAAkvD,GAAK,QAAAwuC,EAAM,IAAK,KAAK,SAASlsF,CAAG;AACtD,WAAImsF,KAAQ,WACN99B,IAAM,IAAI9/D,KAAQ,IAAIC,KAAS,KAAK,SAAc,OAC/C,KAAK,IAAIkvD,IAAM,KAAK,SAAS2Q,IAAM,IAAI9/D,IAAO,IAAIC,EAAM,KAE3D6/D,IAAM,IAAI3Q,KAAO,IAAIwuC,KAAU,KAAK,UAAe,OAChD,KAAK,IAAI39F,IAAO,KAAK,SAAS8/D,IAAM,IAAI3Q,IAAM,IAAIwuC,EAAO;AAAA,EAEpE;AAAA;AAAA,EAEA,YAAY9zF,GAAGC,GAAG;AAChB,UAAM;AAAA,MACJ,MAAM+zF;AAAA,MACN,OAAOC;AAAA,MACP,KAAKC;AAAA,MACL,QAAQC;AAAA,IACd,IAAQ,KAAK,SAASn0F,CAAC,GACb;AAAA,MACJ,MAAMo0F;AAAA,MACN,OAAOC;AAAA,MACP,KAAKC;AAAA,MACL,QAAQC;AAAA,IACd,IAAQ,KAAK,SAASt0F,CAAC;AACnB,WAAO;AAAA,MACL,MAAM,KAAK,IAAI+zF,GAAOI,CAAK;AAAA,MAC3B,KAAK,KAAK,IAAIF,GAAMI,CAAI;AAAA,MACxB,OAAO,KAAK,IAAIL,GAAQI,CAAM;AAAA,MAC9B,QAAQ,KAAK,IAAIF,GAASI,CAAO;AAAA,IACvC;AAAA,EACE;AAAA;AAAA;AAAA,EAGA,YAAY5xB,GAAM;AAChB,UAAMvpE,IAAS,CAAA,GACTsZ,IAAO,CAAA;AACb,aAAS4hB,IAAMquC,EAAK,KAAKruC,IAAMquC,EAAK,QAAQruC;AAC1C,eAASkgE,IAAM7xB,EAAK,MAAM6xB,IAAM7xB,EAAK,OAAO6xB,KAAO;AACjD,cAAMh5F,IAAQ84B,IAAM,KAAK,QAAQkgE,GAC3B5sF,IAAM,KAAK,IAAIpM,CAAK;AAC1B,QAAIkX,EAAK9K,CAAG,MACZ8K,EAAK9K,CAAG,IAAI,IACR,EAAA4sF,KAAO7xB,EAAK,QAAQ6xB,KAAO,KAAK,IAAIh5F,IAAQ,CAAC,KAAKoM,KAAO0sB,KAAOquC,EAAK,OAAOruC,KAAO,KAAK,IAAI94B,IAAQ,KAAK,KAAK,KAAKoM,MAGvHxO,EAAO,KAAKwO,CAAG;AAAA,MACjB;AAEF,WAAOxO;AAAA,EACT;AAAA;AAAA;AAAA,EAGA,WAAWk7B,GAAKkgE,GAAK3gE,GAAO;AAC1B,aAASv9B,IAAI,GAAGm+F,IAAW,KAAKn+F,KAAK;AACnC,YAAMwsC,IAAS2xD,IAAW5gE,EAAM,MAAMv9B,CAAC,EAAE;AACzC,UAAIA,KAAKg+B,GAAK;AACZ,YAAI94B,IAAQg5F,IAAMlgE,IAAM,KAAK;AAC7B,cAAMogE,KAAepgE,IAAM,KAAK,KAAK;AACrC,eAAO94B,IAAQk5F,KAAe,KAAK,IAAIl5F,CAAK,IAAIi5F,IAAU,CAAAj5F;AAC1D,eAAOA,KAASk5F,IAAc5xD,IAAS,IAAI,KAAK,IAAItnC,CAAK;AAAA,MAC3D;AACA,MAAAi5F,IAAW3xD;AAAA,IACb;AAAA,EACF;AAAA;AAAA,EAEA,OAAO,IAAIjP,GAAO;AAChB,WAAO0/D,GAAc1/D,CAAK,KAAK2/D,GAAW3/D,GAAO8gE,GAAW9gE,CAAK,CAAC;AAAA,EACpE;AACF;AACA,SAAS8gE,GAAW9gE,GAAO;AACzB,MAAIA,EAAM,KAAK,KAAK,aAAa;AAC/B,UAAM,IAAI,WAAW,uBAAuBA,EAAM,KAAK,IAAI;AAC7D,QAAM8/D,IAAQiB,GAAU/gE,CAAK,GAAG+/D,IAAS//D,EAAM,YACzCzyB,IAAM,CAAA;AACZ,MAAIyzF,IAAS,GACThB,IAAW;AACf,QAAMiB,IAAY,CAAA;AAClB,WAASx+F,IAAI,GAAG6M,IAAIwwF,IAAQC,GAAQt9F,IAAI6M,GAAG7M,IAAK,CAAA8K,EAAI9K,CAAC,IAAI;AACzD,WAASg+B,IAAM,GAAG1sB,IAAM,GAAG0sB,IAAMs/D,GAAQt/D,KAAO;AAC9C,UAAMygE,IAAUlhE,EAAM,MAAMS,CAAG;AAC/B,IAAA1sB;AACA,aAAStR,IAAI,KAAKA,KAAK;AACrB,aAAOu+F,IAASzzF,EAAI,UAAUA,EAAIyzF,CAAM,KAAK,IAAG,CAAAA;AAChD,UAAIv+F,KAAKy+F,EAAQ,WAAY;AAC7B,YAAMC,IAAWD,EAAQ,MAAMz+F,CAAC,GAC1B,EAAE,SAAA2+F,GAAS,SAAAC,GAAS,UAAAC,EAAQ,IAAKH,EAAS;AAChD,eAAS5+C,IAAI,GAAGA,IAAI8+C,GAAS9+C,KAAK;AAChC,YAAIA,IAAI9hB,KAAOs/D,GAAQ;AACrB,WAACC,MAAaA,IAAW,CAAA,IAAK,KAAK;AAAA,YACjC,MAAM;AAAA,YACN,KAAAjsF;AAAA,YACA,GAAGstF,IAAU9+C;AAAA,UACzB,CAAW;AACD;AAAA,QACF;AACA,cAAMhuC,IAAQysF,IAASz+C,IAAIu9C;AAC3B,iBAASh7C,IAAI,GAAGA,IAAIs8C,GAASt8C,KAAK;AAChC,UAAIv3C,EAAIgH,IAAQuwC,CAAC,KAAK,IAAGv3C,EAAIgH,IAAQuwC,CAAC,IAAI/wC,KAEvCisF,MAAaA,IAAW,CAAA,IAAK,KAAK;AAAA,YACjC,MAAM;AAAA,YACN,KAAAv/D;AAAA,YACA,KAAA1sB;AAAA,YACA,GAAGqtF,IAAUt8C;AAAA,UAC3B,CAAa;AACH,gBAAMy8C,IAAOD,KAAYA,EAASx8C,CAAC;AACnC,cAAIy8C,GAAM;AACR,kBAAMC,KAAcjtF,IAAQuwC,KAAKg7C,IAAQ,GAAGx7B,IAAO28B,EAAUO,CAAU;AACvE,YAAIl9B,KAAQ,QAAQA,KAAQi9B,KAAQN,EAAUO,IAAa,CAAC,KAAK,KAC/DP,EAAUO,CAAU,IAAID,GACxBN,EAAUO,IAAa,CAAC,IAAI,KACnBl9B,KAAQi9B,KACjBN,EAAUO,IAAa,CAAC;AAAA,UAE5B;AAAA,QACF;AAAA,MACF;AACA,MAAAR,KAAUI,GACVrtF,KAAOotF,EAAS;AAAA,IAClB;AACA,UAAMM,KAAehhE,IAAM,KAAKq/D;AAChC,QAAI4B,IAAU;AACd,WAAOV,IAASS,IAAa,CAAIl0F,EAAIyzF,GAAQ,KAAK,KAAGU;AACrD,IAAIA,MACD1B,MAAaA,IAAW,CAAA,IAAK,KAAK,EAAE,MAAM,WAAW,KAAAv/D,GAAK,GAAGihE,EAAO,CAAE,GACzE3tF;AAAA,EACF;AACA,GAAI+rF,MAAU,KAAKC,MAAW,OAC3BC,MAAaA,IAAW,CAAA,IAAK,KAAK,EAAE,MAAM,cAAc;AAC3D,QAAM2B,IAAW,IAAI9B,GAASC,GAAOC,GAAQxyF,GAAKyyF,CAAQ;AAC1D,MAAI4B,IAAY;AAChB,WAASn/F,IAAI,GAAG,CAACm/F,KAAan/F,IAAIw+F,EAAU,QAAQx+F,KAAK;AACvD,IAAIw+F,EAAUx+F,CAAC,KAAK,QAAQw+F,EAAUx+F,IAAI,CAAC,IAAIs9F,MAAQ6B,IAAY;AACrE,SAAIA,KAAWC,GAAiBF,GAAUV,GAAWjhE,CAAK,GACnD2hE;AACT;AACA,SAASZ,GAAU/gE,GAAO;AACxB,MAAI8/D,IAAQ,IACRgC,IAAa;AACjB,WAASrhE,IAAM,GAAGA,IAAMT,EAAM,YAAYS,KAAO;AAC/C,UAAMygE,IAAUlhE,EAAM,MAAMS,CAAG;AAC/B,QAAIshE,IAAW;AACf,QAAID;AACF,eAASl7F,IAAI,GAAGA,IAAI65B,GAAK75B,KAAK;AAC5B,cAAMo7F,IAAUhiE,EAAM,MAAMp5B,CAAC;AAC7B,iBAASnE,IAAI,GAAGA,IAAIu/F,EAAQ,YAAYv/F,KAAK;AAC3C,gBAAMyI,IAAO82F,EAAQ,MAAMv/F,CAAC;AAC5B,UAAImE,IAAIsE,EAAK,MAAM,UAAUu1B,MAAKshE,KAAY72F,EAAK,MAAM;AAAA,QAC3D;AAAA,MACF;AACF,aAASzI,IAAI,GAAGA,IAAIy+F,EAAQ,YAAYz+F,KAAK;AAC3C,YAAMyI,IAAOg2F,EAAQ,MAAMz+F,CAAC;AAC5B,MAAAs/F,KAAY72F,EAAK,MAAM,SACnBA,EAAK,MAAM,UAAU,MAAG42F,IAAa;AAAA,IAC3C;AACA,IAAIhC,KAAS,KAAIA,IAAQiC,IAChBjC,KAASiC,MAAUjC,IAAQ,KAAK,IAAIA,GAAOiC,CAAQ;AAAA,EAC9D;AACA,SAAOjC;AACT;AACA,SAAS+B,GAAiBt0F,GAAK0zF,GAAWjhE,GAAO;AAC/C,EAAKzyB,EAAI,aAAUA,EAAI,WAAW,CAAA;AAClC,QAAMsR,IAAO,CAAA;AACb,WAAS,IAAI,GAAG,IAAItR,EAAI,IAAI,QAAQ,KAAK;AACvC,UAAMwG,IAAMxG,EAAI,IAAI,CAAC;AACrB,QAAIsR,EAAK9K,CAAG,EAAG;AACf,IAAA8K,EAAK9K,CAAG,IAAI;AACZ,UAAM/C,IAAOgvB,EAAM,OAAOjsB,CAAG;AAC7B,QAAI,CAAC/C;AACH,YAAM,IAAI,WAAW,uBAAuB+C,CAAG,QAAQ;AAEzD,QAAIhE,IAAU;AACd,UAAMtC,IAAQuD,EAAK;AACnB,aAASpK,IAAI,GAAGA,IAAI6G,EAAM,SAAS7G,KAAK;AACtC,YAAM+5F,KAAO,IAAI/5F,KAAK2G,EAAI,OACpB00F,IAAWhB,EAAUN,IAAM,CAAC;AAClC,MAAIsB,KAAY,SAAS,CAACx0F,EAAM,YAAYA,EAAM,SAAS7G,CAAC,KAAKq7F,QAC9DlyF,MAAYA,IAAUmyF,GAAcz0F,CAAK,IAAI7G,CAAC,IAAIq7F;AAAA,IACvD;AACA,IAAIlyF,KACFxC,EAAI,SAAS,QAAQ;AAAA,MACnB,MAAM;AAAA,MACN,KAAAwG;AAAA,MACA,UAAUhE;AAAA,IAClB,CAAO;AAAA,EACL;AACF;AACA,SAASmyF,GAAcz0F,GAAO;AAC5B,MAAIA,EAAM,SAAU,QAAOA,EAAM,SAAS,MAAK;AAC/C,QAAMlI,IAAS,CAAA;AACf,WAAS9C,IAAI,GAAGA,IAAIgL,EAAM,SAAShL,IAAK,CAAA8C,EAAO,KAAK,CAAC;AACrD,SAAOA;AACT;AAMA,SAAS48F,GAAa5xC,GAAK6xC,GAAY;AACrC,MAAI,OAAO7xC,KAAQ;AACjB,WAAO,CAAA;AAET,QAAM8xC,IAAY9xC,EAAI,aAAa,eAAe,GAC5C+xC,IAASD,KAAa,eAAe,KAAKA,CAAS,IAAIA,EAAU,MAAM,GAAG,EAAE,IAAI,CAAC,MAAM,OAAO,CAAC,CAAC,IAAI,MACpGjB,IAAU,OAAO7wC,EAAI,aAAa,SAAS,KAAK,CAAC,GACjDhrD,IAAS;AAAA,IACb,SAAA67F;AAAA,IACA,SAAS,OAAO7wC,EAAI,aAAa,SAAS,KAAK,CAAC;AAAA,IAChD,UAAU+xC,KAAUA,EAAO,UAAUlB,IAAUkB,IAAS;AAAA,EAC5D;AACE,aAAW76C,KAAQ26C,GAAY;AAC7B,UAAMztC,IAASytC,EAAW36C,CAAI,EAAE,YAC1B/mD,IAAQi0D,KAAUA,EAAOpE,CAAG;AAClC,IAAI7vD,KAAS,SACX6E,EAAOkiD,CAAI,IAAI/mD;AAAA,EAEnB;AACA,SAAO6E;AACT;AACA,SAASg9F,GAAavxF,GAAMoxF,GAAY;AACtC,QAAM30F,IAAQ,CAAA;AACd,EAAIuD,EAAK,MAAM,WAAW,MAAGvD,EAAM,UAAUuD,EAAK,MAAM,UACpDA,EAAK,MAAM,WAAW,MAAGvD,EAAM,UAAUuD,EAAK,MAAM,UACpDA,EAAK,MAAM,aACbvD,EAAM,eAAe,IAAIuD,EAAK,MAAM,SAAS,KAAK,GAAG;AACvD,aAAWy2C,KAAQ26C,GAAY;AAC7B,UAAMxtC,IAASwtC,EAAW36C,CAAI,EAAE;AAChC,IAAImN,KAAQA,EAAO5jD,EAAK,MAAMy2C,CAAI,GAAGh6C,CAAK;AAAA,EAC5C;AACA,SAAOA;AACT;AACA,SAAS+0F,GAAiB9hG,GAAO;AAC/B,MAAIA,MAAU,MAGd;AAAA,QAAI,CAAC,MAAM,QAAQA,CAAK;AACtB,YAAM,IAAI,UAAU,mCAAmC;AAEzD,eAAWmd,KAAQnd;AACjB,UAAI,OAAOmd,KAAS;AAClB,cAAM,IAAI,UAAU,8CAA8C;AAAA;AAGxE;AACA,SAAS4kF,GAAWviG,GAAS;AAC3B,QAAMkiG,IAAaliG,EAAQ,kBAAkB,CAAA,GACvCwiG,IAAY;AAAA,IAChB,SAAS,EAAE,SAAS,GAAG,UAAU,SAAQ;AAAA,IACzC,SAAS,EAAE,SAAS,GAAG,UAAU,SAAQ;AAAA,IACzC,UAAU,EAAE,SAAS,MAAM,UAAUF,GAAgB;AAAA,EACzD;AACE,aAAW/6C,KAAQ26C;AACjB,IAAAM,EAAUj7C,CAAI,IAAI;AAAA,MAChB,SAAS26C,EAAW36C,CAAI,EAAE;AAAA,MAC1B,UAAU26C,EAAW36C,CAAI,EAAE;AAAA,IACjC;AACE,SAAO;AAAA,IACL,OAAO;AAAA,MACL,SAAS;AAAA,MACT,WAAW;AAAA,MACX,WAAW;AAAA,MACX,OAAOvnD,EAAQ;AAAA,MACf,UAAU,CAAC,EAAE,KAAK,SAAS;AAAA,MAC3B,QAAQ;AACN,eAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;AAAA,MAC/B;AAAA,IACN;AAAA,IACI,WAAW;AAAA,MACT,SAAS;AAAA,MACT,WAAW;AAAA,MACX,UAAU,CAAC,EAAE,KAAK,MAAM;AAAA,MACxB,QAAQ;AACN,eAAO,CAAC,MAAM,CAAC;AAAA,MACjB;AAAA,IACN;AAAA,IACI,YAAY;AAAA,MACV,SAASA,EAAQ;AAAA,MACjB,OAAOwiG;AAAA,MACP,WAAW;AAAA,MACX,WAAW;AAAA,MACX,UAAU;AAAA,QACR,EAAE,KAAK,MAAM,UAAU,CAACnyC,MAAQ4xC,GAAa5xC,GAAK6xC,CAAU,EAAC;AAAA,MACrE;AAAA,MACM,MAAMpxF,GAAM;AACV,eAAO,CAAC,MAAMuxF,GAAavxF,GAAMoxF,CAAU,GAAG,CAAC;AAAA,MACjD;AAAA,IACN;AAAA,IACI,cAAc;AAAA,MACZ,SAASliG,EAAQ;AAAA,MACjB,OAAOwiG;AAAA,MACP,WAAW;AAAA,MACX,WAAW;AAAA,MACX,UAAU;AAAA,QACR,EAAE,KAAK,MAAM,UAAU,CAACnyC,MAAQ4xC,GAAa5xC,GAAK6xC,CAAU,EAAC;AAAA,MACrE;AAAA,MACM,MAAMpxF,GAAM;AACV,eAAO,CAAC,MAAMuxF,GAAavxF,GAAMoxF,CAAU,GAAG,CAAC;AAAA,MACjD;AAAA,IACN;AAAA,EACA;AACA;AACA,SAASO,GAAexqD,GAAQ;AAC9B,MAAI5yC,IAAS4yC,EAAO,OAAO;AAC3B,MAAI,CAAC5yC,GAAQ;AACX,IAAAA,IAAS4yC,EAAO,OAAO,iBAAiB,CAAA;AACxC,eAAWhmC,KAAQgmC,EAAO,OAAO;AAC/B,YAAMprC,IAAOorC,EAAO,MAAMhmC,CAAI,GAAGywF,IAAO71F,EAAK,KAAK;AAClD,MAAI61F,MAAMr9F,EAAOq9F,CAAI,IAAI71F;AAAA,IAC3B;AAAA,EACF;AACA,SAAOxH;AACT;AAGA,IAAIs9F,KAAkB,IAAIz9B,GAAU,gBAAgB;AACpD,SAAS09B,GAAWvlC,GAAM;AACxB,WAAS5jC,IAAI4jC,EAAK,QAAQ,GAAG5jC,IAAI,GAAGA;AAClC,QAAI4jC,EAAK,KAAK5jC,CAAC,EAAE,KAAK,KAAK,aAAa;AACtC,aAAO4jC,EAAK,KAAK,CAAC,EAAE,QAAQA,EAAK,OAAO5jC,IAAI,CAAC,CAAC;AAClD,SAAO;AACT;AAQA,SAASopE,GAAUtzF,GAAO;AACxB,QAAMsyD,IAAQtyD,EAAM,UAAU;AAC9B,WAASkqB,IAAIooC,EAAM,OAAOpoC,IAAI,GAAGA;AAC/B,QAAIooC,EAAM,KAAKpoC,CAAC,EAAE,KAAK,KAAK,aAAa,MAAO,QAAO;AACzD,SAAO;AACT;AACA,SAASqpE,GAAcvzF,GAAO;AAC5B,QAAMyzD,IAAMzzD,EAAM;AAClB,MAAI,iBAAiByzD,KAAOA,EAAI;AAC9B,WAAOA,EAAI,YAAY,MAAMA,EAAI,UAAU,MAAMA,EAAI,cAAcA,EAAI;AAClE,MAAI,UAAUA,KAAOA,EAAI,QAAQA,EAAI,KAAK,KAAK,KAAK,aAAa;AACtE,WAAOA,EAAI;AAEb,QAAM+/B,IAAQH,GAAW5/B,EAAI,KAAK,KAAKggC,GAAShgC,EAAI,KAAK;AACzD,MAAI+/B;AACF,WAAOA;AAET,QAAM,IAAI,WAAW,iCAAiC//B,EAAI,IAAI,EAAE;AAClE;AACA,SAASggC,GAAS3lC,GAAM;AACtB,WAAShxD,IAAQgxD,EAAK,WAAWxpD,IAAMwpD,EAAK,KAAKhxD,GAAOA,IAAQA,EAAM,YAAYwH,KAAO;AACvF,UAAM6uF,IAAOr2F,EAAM,KAAK,KAAK;AAC7B,QAAIq2F,KAAQ,UAAUA,KAAQ,cAAe,QAAOrlC,EAAK,IAAI,QAAQxpD,CAAG;AAAA,EAC1E;AACA,WAASzH,IAASixD,EAAK,YAAYxpD,IAAMwpD,EAAK,KAAKjxD,GAAQA,IAASA,EAAO,WAAWyH,KAAO;AAC3F,UAAM6uF,IAAOt2F,EAAO,KAAK,KAAK;AAC9B,QAAIs2F,KAAQ,UAAUA,KAAQ;AAC5B,aAAOrlC,EAAK,IAAI,QAAQxpD,IAAMzH,EAAO,QAAQ;AAAA,EACjD;AACF;AACA,SAAS62F,GAAa5lC,GAAM;AAC1B,SAAOA,EAAK,OAAO,KAAK,KAAK,aAAa,SAAS,CAAC,CAACA,EAAK;AAC5D;AACA,SAAS6lC,GAAgB7lC,GAAM;AAC7B,SAAOA,EAAK,KAAK,CAAC,EAAE,QAAQA,EAAK,MAAMA,EAAK,UAAU,QAAQ;AAChE;AACA,SAAS8lC,GAAYC,GAAQC,GAAQ;AACnC,SAAOD,EAAO,SAASC,EAAO,SAASD,EAAO,OAAOC,EAAO,MAAM,EAAE,KAAKD,EAAO,OAAOC,EAAO,IAAI,EAAE;AACtG;AAOA,SAASC,GAASjmC,GAAM2iC,GAAM99B,GAAK;AACjC,QAAMpiC,IAAQu9B,EAAK,KAAK,EAAE,GACpBhwD,IAAMsyF,GAAS,IAAI7/D,CAAK,GACxByjE,IAAalmC,EAAK,MAAM,EAAE,GAC1BynB,IAAQz3E,EAAI,SAASgwD,EAAK,MAAMkmC,GAAYvD,GAAM99B,CAAG;AAC3D,SAAO4iB,KAAS,OAAO,OAAOznB,EAAK,KAAK,CAAC,EAAE,QAAQkmC,IAAaze,CAAK;AACvE;AACA,SAAS0e,GAAcj2F,GAAOsG,GAAK5N,IAAI,GAAG;AACxC,QAAMZ,IAAS,EAAE,GAAGkI,GAAO,SAASA,EAAM,UAAUtH,EAAC;AACrD,SAAIZ,EAAO,aACTA,EAAO,WAAWA,EAAO,SAAS,MAAK,GACvCA,EAAO,SAAS,OAAOwO,GAAK5N,CAAC,GACxBZ,EAAO,SAAS,KAAK,CAACu/C,MAAMA,IAAI,CAAC,MAAGv/C,EAAO,WAAW,QAEtDA;AACT;AACA,SAASo+F,GAAWl2F,GAAOsG,GAAK5N,IAAI,GAAG;AACrC,QAAMZ,IAAS,EAAE,GAAGkI,GAAO,SAASA,EAAM,UAAUtH,EAAC;AACrD,MAAIZ,EAAO,UAAU;AACnB,IAAAA,EAAO,WAAWA,EAAO,SAAS,MAAK;AACvC,aAAS,IAAI,GAAG,IAAIY,GAAG,IAAK,CAAAZ,EAAO,SAAS,OAAOwO,GAAK,GAAG,CAAC;AAAA,EAC9D;AACA,SAAOxO;AACT;AACA,SAASq+F,GAAer2F,GAAKyyB,GAAO2gE,GAAK;AACvC,QAAMkD,IAAalB,GAAe3iE,EAAM,KAAK,MAAM,EAAE;AACrD,WAASS,IAAM,GAAGA,IAAMlzB,EAAI,QAAQkzB;AAClC,QAAIT,EAAM,OAAOzyB,EAAI,IAAIozF,IAAMlgE,IAAMlzB,EAAI,KAAK,CAAC,EAAE,QAAQs2F;AACvD,aAAO;AACX,SAAO;AACT;AAGA,IAAIC,KAAgB,MAAMC,WAAuBliC,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKzD,YAAYmiC,GAAaC,IAAYD,GAAa;AAChD,UAAMhkE,IAAQgkE,EAAY,KAAK,EAAE,GAC3Bz2F,IAAMsyF,GAAS,IAAI7/D,CAAK,GACxByjE,IAAaO,EAAY,MAAM,EAAE,GACjCl1B,IAAOvhE,EAAI;AAAA,MACfy2F,EAAY,MAAMP;AAAA,MAClBQ,EAAU,MAAMR;AAAA,IACtB,GACU3pE,IAAMkqE,EAAY,KAAK,CAAC,GACxB/4F,IAAQsC,EAAI,YAAYuhE,CAAI,EAAE,OAAO,CAAClzB,MAAMA,KAAKqoD,EAAU,MAAMR,CAAU;AACjF,IAAAx4F,EAAM,QAAQg5F,EAAU,MAAMR,CAAU;AACxC,UAAMjjD,IAASv1C,EAAM,IAAI,CAAC8I,MAAQ;AAChC,YAAM7I,IAAO80B,EAAM,OAAOjsB,CAAG;AAC7B,UAAI,CAAC7I;AACH,cAAM,WAAW,uBAAuB6I,CAAG,QAAQ;AAErD,YAAMud,IAAOmyE,IAAa1vF,IAAM;AAChC,aAAO,IAAIiuD;AAAA,QACTloC,EAAI,QAAQxI,CAAI;AAAA,QAChBwI,EAAI,QAAQxI,IAAOpmB,EAAK,QAAQ,IAAI;AAAA,MAC5C;AAAA,IACI,CAAC;AACD,UAAMs1C,EAAO,CAAC,EAAE,OAAOA,EAAO,CAAC,EAAE,KAAKA,CAAM,GAC5C,KAAK,cAAcwjD,GACnB,KAAK,YAAYC;AAAA,EACnB;AAAA,EACA,IAAInqE,GAAK2/B,GAAS;AAChB,UAAMuqC,IAAclqE,EAAI,QAAQ2/B,EAAQ,IAAI,KAAK,YAAY,GAAG,CAAC,GAC3DwqC,IAAYnqE,EAAI,QAAQ2/B,EAAQ,IAAI,KAAK,UAAU,GAAG,CAAC;AAC7D,QAAI0pC,GAAaa,CAAW,KAAKb,GAAac,CAAS,KAAKZ,GAAYW,GAAaC,CAAS,GAAG;AAC/F,YAAMC,IAAe,KAAK,YAAY,KAAK,EAAE,KAAKF,EAAY,KAAK,EAAE;AACrE,aAAIE,KAAgB,KAAK,eAAc,IAC9BH,GAAe,aAAaC,GAAaC,CAAS,IAClDC,KAAgB,KAAK,eAAc,IACnCH,GAAe,aAAaC,GAAaC,CAAS,IAC/C,IAAIF,GAAeC,GAAaC,CAAS;AAAA,IACvD;AACA,WAAO3hC,EAAc,QAAQ0hC,GAAaC,CAAS;AAAA,EACrD;AAAA;AAAA;AAAA,EAGA,UAAU;AACR,UAAMjkE,IAAQ,KAAK,YAAY,KAAK,EAAE,GAChCzyB,IAAMsyF,GAAS,IAAI7/D,CAAK,GACxByjE,IAAa,KAAK,YAAY,MAAM,EAAE,GACtC30B,IAAOvhE,EAAI;AAAA,MACf,KAAK,YAAY,MAAMk2F;AAAA,MACvB,KAAK,UAAU,MAAMA;AAAA,IAC3B,GACU5kF,IAAO,CAAA,GACPwyB,IAAO,CAAA;AACb,aAAS5Q,IAAMquC,EAAK,KAAKruC,IAAMquC,EAAK,QAAQruC,KAAO;AACjD,YAAM0jE,IAAa,CAAA;AACnB,eAASx8F,IAAQ84B,IAAMlzB,EAAI,QAAQuhE,EAAK,MAAM6xB,IAAM7xB,EAAK,MAAM6xB,IAAM7xB,EAAK,OAAO6xB,KAAOh5F,KAAS;AAC/F,cAAMoM,IAAMxG,EAAI,IAAI5F,CAAK;AACzB,YAAIkX,EAAK9K,CAAG,EAAG;AACf,QAAA8K,EAAK9K,CAAG,IAAI;AACZ,cAAMqwF,IAAW72F,EAAI,SAASwG,CAAG;AACjC,YAAI7I,IAAO80B,EAAM,OAAOjsB,CAAG;AAC3B,YAAI,CAAC7I;AACH,gBAAM,WAAW,uBAAuB6I,CAAG,QAAQ;AAErD,cAAMswF,IAAYv1B,EAAK,OAAOs1B,EAAS,MACjCE,IAAaF,EAAS,QAAQt1B,EAAK;AACzC,YAAIu1B,IAAY,KAAKC,IAAa,GAAG;AACnC,cAAI72F,IAAQvC,EAAK;AAWjB,cAVIm5F,IAAY,MACd52F,IAAQi2F,GAAcj2F,GAAO,GAAG42F,CAAS,IAEvCC,IAAa,MACf72F,IAAQi2F;AAAA,YACNj2F;AAAA,YACAA,EAAM,UAAU62F;AAAA,YAChBA;AAAA,UACd,IAEcF,EAAS,OAAOt1B,EAAK;AAEvB,gBADA5jE,IAAOA,EAAK,KAAK,cAAcuC,CAAK,GAChC,CAACvC;AACH,oBAAM;AAAA,gBACJ,oCAAoC,KAAK,UAAUuC,CAAK,CAAC;AAAA,cACzE;AAAA;AAGY,YAAAvC,IAAOA,EAAK,KAAK,OAAOuC,GAAOvC,EAAK,OAAO;AAAA,QAE/C;AACA,YAAIk5F,EAAS,MAAMt1B,EAAK,OAAOs1B,EAAS,SAASt1B,EAAK,QAAQ;AAC5D,gBAAMrhE,IAAQ;AAAA,YACZ,GAAGvC,EAAK;AAAA,YACR,SAAS,KAAK,IAAIk5F,EAAS,QAAQt1B,EAAK,MAAM,IAAI,KAAK,IAAIs1B,EAAS,KAAKt1B,EAAK,GAAG;AAAA,UAC7F;AACU,UAAIs1B,EAAS,MAAMt1B,EAAK,MACtB5jE,IAAOA,EAAK,KAAK,cAAcuC,CAAK,IAEpCvC,IAAOA,EAAK,KAAK,OAAOuC,GAAOvC,EAAK,OAAO;AAAA,QAE/C;AACA,QAAAi5F,EAAW,KAAKj5F,CAAI;AAAA,MACtB;AACA,MAAAmmC,EAAK,KAAKrR,EAAM,MAAMS,CAAG,EAAE,KAAK2nB,EAAS,KAAK+7C,CAAU,CAAC,CAAC;AAAA,IAC5D;AACA,UAAM1qE,IAAW,KAAK,eAAc,KAAM,KAAK,eAAc,IAAKuG,IAAQqR;AAC1E,WAAO,IAAI4T,EAAMmD,EAAS,KAAK3uB,CAAQ,GAAG,GAAG,CAAC;AAAA,EAChD;AAAA,EACA,QAAQwiB,GAAIjyC,IAAUi7C,EAAM,OAAO;AACjC,UAAM4X,IAAU5gB,EAAG,MAAM,QAAQuE,IAAS,KAAK;AAC/C,aAAS/9C,IAAI,GAAGA,IAAI+9C,EAAO,QAAQ/9C,KAAK;AACtC,YAAM,EAAE,OAAAonD,GAAO,KAAAC,EAAG,IAAKtJ,EAAO/9C,CAAC,GAAGg3D,IAAUxd,EAAG,QAAQ,MAAM4gB,CAAO;AACpE,MAAA5gB,EAAG;AAAA,QACDwd,EAAQ,IAAI5P,EAAM,GAAG;AAAA,QACrB4P,EAAQ,IAAI3P,EAAI,GAAG;AAAA,QACnBrnD,IAAIwiD,EAAM,QAAQj7C;AAAA,MAC1B;AAAA,IACI;AACA,UAAMk5D,IAAMrB,EAAU;AAAA,MACpB5lB,EAAG,IAAI,QAAQA,EAAG,QAAQ,MAAM4gB,CAAO,EAAE,IAAI,KAAK,EAAE,CAAC;AAAA,MACrD;AAAA,IACN;AACI,IAAIqG,KAAKjnB,EAAG,aAAainB,CAAG;AAAA,EAC9B;AAAA,EACA,YAAYjnB,GAAIjrC,GAAM;AACpB,SAAK,QAAQirC,GAAI,IAAIgJ,EAAMmD,EAAS,KAAKp3C,CAAI,GAAG,GAAG,CAAC,CAAC;AAAA,EACvD;AAAA,EACA,YAAYw2C,GAAG;AACb,UAAMxnB,IAAQ,KAAK,YAAY,KAAK,EAAE,GAChCzyB,IAAMsyF,GAAS,IAAI7/D,CAAK,GACxByjE,IAAa,KAAK,YAAY,MAAM,EAAE,GACtCx4F,IAAQsC,EAAI;AAAA,MAChBA,EAAI;AAAA,QACF,KAAK,YAAY,MAAMk2F;AAAA,QACvB,KAAK,UAAU,MAAMA;AAAA,MAC7B;AAAA,IACA;AACI,aAAShhG,IAAI,GAAGA,IAAIwI,EAAM,QAAQxI;AAChC,MAAA+kD,EAAExnB,EAAM,OAAO/0B,EAAMxI,CAAC,CAAC,GAAGghG,IAAax4F,EAAMxI,CAAC,CAAC;AAAA,EAEnD;AAAA;AAAA;AAAA,EAGA,iBAAiB;AACf,UAAM8hG,IAAY,KAAK,YAAY,MAAM,EAAE,GACrCC,IAAU,KAAK,UAAU,MAAM,EAAE;AACvC,QAAI,KAAK,IAAID,GAAWC,CAAO,IAAI,EAAG,QAAO;AAC7C,UAAMC,IAAeF,IAAY,KAAK,YAAY,UAAU,MAAM,SAC5DG,IAAaF,IAAU,KAAK,UAAU,UAAU,MAAM;AAC5D,WAAO,KAAK,IAAIC,GAAcC,CAAU,KAAK,KAAK,UAAU,KAAK,EAAE,EAAE;AAAA,EACvE;AAAA;AAAA;AAAA,EAGA,OAAO,aAAaV,GAAaC,IAAYD,GAAa;AACxD,UAAMhkE,IAAQgkE,EAAY,KAAK,EAAE,GAC3Bz2F,IAAMsyF,GAAS,IAAI7/D,CAAK,GACxByjE,IAAaO,EAAY,MAAM,EAAE,GACjCW,IAAap3F,EAAI,SAASy2F,EAAY,MAAMP,CAAU,GACtDmB,IAAWr3F,EAAI,SAAS02F,EAAU,MAAMR,CAAU,GAClD3pE,IAAMkqE,EAAY,KAAK,CAAC;AAC9B,WAAIW,EAAW,OAAOC,EAAS,OACzBD,EAAW,MAAM,MACnBX,IAAclqE,EAAI,QAAQ2pE,IAAal2F,EAAI,IAAIo3F,EAAW,IAAI,CAAC,IAC7DC,EAAS,SAASr3F,EAAI,WACxB02F,IAAYnqE,EAAI;AAAA,MACd2pE,IAAal2F,EAAI,IAAIA,EAAI,SAASA,EAAI,SAAS,KAAKq3F,EAAS,QAAQ,CAAC;AAAA,IAChF,OAEUA,EAAS,MAAM,MACjBX,IAAYnqE,EAAI,QAAQ2pE,IAAal2F,EAAI,IAAIq3F,EAAS,IAAI,CAAC,IACzDD,EAAW,SAASp3F,EAAI,WAC1By2F,IAAclqE,EAAI;AAAA,MAChB2pE,IAAal2F,EAAI,IAAIA,EAAI,SAASA,EAAI,SAAS,KAAKo3F,EAAW,QAAQ,CAAC;AAAA,IAClF,KAEW,IAAIZ,GAAeC,GAAaC,CAAS;AAAA,EAClD;AAAA;AAAA;AAAA,EAGA,iBAAiB;AACf,UAAMjkE,IAAQ,KAAK,YAAY,KAAK,EAAE,GAChCzyB,IAAMsyF,GAAS,IAAI7/D,CAAK,GACxByjE,IAAa,KAAK,YAAY,MAAM,EAAE,GACtCoB,IAAat3F,EAAI,SAAS,KAAK,YAAY,MAAMk2F,CAAU,GAC3DqB,IAAWv3F,EAAI,SAAS,KAAK,UAAU,MAAMk2F,CAAU;AAC7D,QAAI,KAAK,IAAIoB,GAAYC,CAAQ,IAAI,EAAG,QAAO;AAC/C,UAAMC,IAAcF,IAAa,KAAK,YAAY,UAAU,MAAM,SAC5DG,IAAYF,IAAW,KAAK,UAAU,UAAU,MAAM;AAC5D,WAAO,KAAK,IAAIC,GAAaC,CAAS,KAAKz3F,EAAI;AAAA,EACjD;AAAA,EACA,GAAGm7C,GAAO;AACR,WAAOA,aAAiBq7C,MAAkBr7C,EAAM,YAAY,OAAO,KAAK,YAAY,OAAOA,EAAM,UAAU,OAAO,KAAK,UAAU;AAAA,EACnI;AAAA;AAAA;AAAA,EAGA,OAAO,aAAas7C,GAAaC,IAAYD,GAAa;AACxD,UAAMhkE,IAAQgkE,EAAY,KAAK,EAAE,GAC3Bz2F,IAAMsyF,GAAS,IAAI7/D,CAAK,GACxByjE,IAAaO,EAAY,MAAM,EAAE,GACjCW,IAAap3F,EAAI,SAASy2F,EAAY,MAAMP,CAAU,GACtDmB,IAAWr3F,EAAI,SAAS02F,EAAU,MAAMR,CAAU,GAClD3pE,IAAMkqE,EAAY,KAAK,CAAC;AAC9B,WAAIW,EAAW,QAAQC,EAAS,QAC1BD,EAAW,OAAO,MACpBX,IAAclqE,EAAI;AAAA,MAChB2pE,IAAal2F,EAAI,IAAIo3F,EAAW,MAAMp3F,EAAI,KAAK;AAAA,IACzD,IACUq3F,EAAS,QAAQr3F,EAAI,UACvB02F,IAAYnqE,EAAI;AAAA,MACd2pE,IAAal2F,EAAI,IAAIA,EAAI,SAASq3F,EAAS,MAAM,KAAK,CAAC;AAAA,IACjE,OAEUA,EAAS,OAAO,MAClBX,IAAYnqE,EAAI,QAAQ2pE,IAAal2F,EAAI,IAAIq3F,EAAS,MAAMr3F,EAAI,KAAK,CAAC,IACpEo3F,EAAW,QAAQp3F,EAAI,UACzBy2F,IAAclqE,EAAI;AAAA,MAChB2pE,IAAal2F,EAAI,IAAIA,EAAI,SAASo3F,EAAW,MAAM,KAAK,CAAC;AAAA,IACnE,KAEW,IAAIZ,GAAeC,GAAaC,CAAS;AAAA,EAClD;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,MAAM;AAAA,MACN,QAAQ,KAAK,YAAY;AAAA,MACzB,MAAM,KAAK,UAAU;AAAA,IAC3B;AAAA,EACE;AAAA,EACA,OAAO,SAASnqE,GAAKga,GAAM;AACzB,WAAO,IAAIiwD,GAAejqE,EAAI,QAAQga,EAAK,MAAM,GAAGha,EAAI,QAAQga,EAAK,IAAI,CAAC;AAAA,EAC5E;AAAA,EACA,OAAO,OAAOha,GAAKmrE,GAAYC,IAAWD,GAAY;AACpD,WAAO,IAAIlB,GAAejqE,EAAI,QAAQmrE,CAAU,GAAGnrE,EAAI,QAAQorE,CAAQ,CAAC;AAAA,EAC1E;AAAA,EACA,cAAc;AACZ,WAAO,IAAIC,GAAa,KAAK,YAAY,KAAK,KAAK,UAAU,GAAG;AAAA,EAClE;AACF;AACArB,GAAc,UAAU,UAAU;AAClCjiC,EAAU,OAAO,QAAQiiC,EAAa;AACtC,IAAIqB,KAAe,MAAMC,GAAc;AAAA,EACrC,YAAYviC,GAAQzuC,GAAM;AACxB,SAAK,SAASyuC,GACd,KAAK,OAAOzuC;AAAA,EACd;AAAA,EACA,IAAIqlC,GAAS;AACX,WAAO,IAAI2rC,GAAc3rC,EAAQ,IAAI,KAAK,MAAM,GAAGA,EAAQ,IAAI,KAAK,IAAI,CAAC;AAAA,EAC3E;AAAA,EACA,QAAQ3/B,GAAK;AACX,UAAMkqE,IAAclqE,EAAI,QAAQ,KAAK,MAAM,GAAGmqE,IAAYnqE,EAAI,QAAQ,KAAK,IAAI;AAC/E,WAAIkqE,EAAY,OAAO,KAAK,KAAK,aAAa,SAASC,EAAU,OAAO,KAAK,KAAK,aAAa,SAASD,EAAY,MAAK,IAAKA,EAAY,OAAO,cAAcC,EAAU,MAAK,IAAKA,EAAU,OAAO,cAAcZ,GAAYW,GAAaC,CAAS,IAC3O,IAAIH,GAAcE,GAAaC,CAAS,IACrCpiC,EAAU,KAAKoiC,GAAW,CAAC;AAAA,EACzC;AACF;AACA,SAASoB,GAAkB51F,GAAO;AAChC,MAAI,EAAEA,EAAM,qBAAqBq0F,IAAgB,QAAO;AACxD,QAAM74F,IAAQ,CAAA;AACd,SAAAwE,EAAM,UAAU,YAAY,CAACuB,GAAM+C,MAAQ;AACzC,IAAA9I,EAAM;AAAA,MACJu4E,GAAW,KAAKzvE,GAAKA,IAAM/C,EAAK,UAAU,EAAE,OAAO,eAAc,CAAE;AAAA,IACzE;AAAA,EACE,CAAC,GACM0yE,GAAc,OAAOj0E,EAAM,KAAKxE,CAAK;AAC9C;AACA,SAASq6F,GAAwB,EAAE,OAAAz7C,GAAO,KAAAC,KAAO;AAC/C,MAAID,EAAM,OAAOC,EAAI,OAAOD,EAAM,MAAMC,EAAI,MAAM,EAAG,QAAO;AAC5D,MAAIy7C,IAAY17C,EAAM,KAClB27C,IAAW17C,EAAI,KACfxwB,IAAQuwB,EAAM;AAClB,SAAOvwB,KAAS,KACV,EAAAuwB,EAAM,MAAMvwB,IAAQ,CAAC,IAAIuwB,EAAM,IAAIvwB,CAAK,IAD3BA,KAASisE;AAC1B;AACF,WAAS5rE,IAAImwB,EAAI,OAAOnwB,KAAK,KACvB,EAAAmwB,EAAI,OAAOnwB,IAAI,CAAC,IAAImwB,EAAI,MAAMnwB,CAAC,IADLA,KAAK6rE;AACnC;AACF,SAAOD,KAAaC,KAAY,YAAY,KAAK37C,EAAM,KAAKvwB,CAAK,EAAE,KAAK,KAAK,SAAS;AACxF;AACA,SAASmsE,GAA2B,EAAE,OAAA57C,GAAO,KAAAC,KAAO;AAClD,MAAI47C,GACAC;AACJ,WAAS,IAAI97C,EAAM,OAAO,IAAI,GAAG,KAAK;AACpC,UAAM74C,IAAO64C,EAAM,KAAK,CAAC;AACzB,QAAI74C,EAAK,KAAK,KAAK,cAAc,UAAUA,EAAK,KAAK,KAAK,cAAc,eAAe;AACrF,MAAA00F,IAAuB10F;AACvB;AAAA,IACF;AAAA,EACF;AACA,WAAS,IAAI84C,EAAI,OAAO,IAAI,GAAG,KAAK;AAClC,UAAM94C,IAAO84C,EAAI,KAAK,CAAC;AACvB,QAAI94C,EAAK,KAAK,KAAK,cAAc,UAAUA,EAAK,KAAK,KAAK,cAAc,eAAe;AACrF,MAAA20F,IAAqB30F;AACrB;AAAA,IACF;AAAA,EACF;AACA,SAAO00F,MAAyBC,KAAsB77C,EAAI,iBAAiB;AAC7E;AACA,SAAS87C,GAAmBn2F,GAAOwsC,GAAI4pD,GAAyB;AAC9D,QAAM3iC,KAAOjnB,KAAMxsC,GAAO,WACpBqqB,KAAOmiB,KAAMxsC,GAAO;AAC1B,MAAI+F,GACAotF;AACJ,MAAI1/B,aAAe4iC,MAAmBlD,IAAO1/B,EAAI,KAAK,KAAK,KAAK;AAC9D,QAAI0/B,KAAQ,UAAUA,KAAQ;AAC5B,MAAAptF,IAAYsuF,GAAc,OAAOhqE,GAAKopC,EAAI,IAAI;AAAA,aACrC0/B,KAAQ,OAAO;AACxB,YAAMK,IAAQnpE,EAAI,QAAQopC,EAAI,OAAO,CAAC;AACtC,MAAA1tD,IAAYsuF,GAAc,aAAab,GAAOA,CAAK;AAAA,IACrD,WAAW,CAAC4C,GAAyB;AACnC,YAAMt4F,IAAMsyF,GAAS,IAAI38B,EAAI,IAAI,GAC3B3uD,IAAQ2uD,EAAI,OAAO,GACnB10B,IAAWj6B,IAAQhH,EAAI,IAAIA,EAAI,QAAQA,EAAI,SAAS,CAAC;AAC3D,MAAAiI,IAAYsuF,GAAc,OAAOhqE,GAAKvlB,IAAQ,GAAGi6B,CAAQ;AAAA,IAC3D;AAAA,QACK,CAAI00B,aAAeZ,KAAiBgjC,GAAwBpiC,CAAG,IACpE1tD,IAAY8sD,EAAc,OAAOxoC,GAAKopC,EAAI,IAAI,IACrCA,aAAeZ,KAAiBmjC,GAA2BviC,CAAG,MACvE1tD,IAAY8sD,EAAc,OAAOxoC,GAAKopC,EAAI,MAAM,SAASA,EAAI,MAAM,IAAG,CAAE;AAE1E,SAAI1tD,MAAYymC,MAAOA,IAAKxsC,EAAM,KAAK,aAAa+F,CAAS,GACtDymC;AACT;AAIA,IAAI8pD,KAAe,IAAIC,GAAW,YAAY;AAC9C,SAASC,GAAmBld,GAAKjgC,GAAKnpC,GAAQ6nC,GAAG;AAC/C,QAAMwR,IAAU+vB,EAAI,YAAYmd,IAAUp9C,EAAI;AAC9C,EAAA2T,EAAO,UAASh6D,IAAI,GAAGmE,IAAI,GAAGnE,IAAIyjG,GAASzjG,KAAK;AAC9C,UAAMiL,IAAQo7C,EAAI,MAAMrmD,CAAC;AACzB,aAASyqD,IAAOtmD,GAAG0I,IAAI,KAAK,IAAI0pD,GAASv2D,IAAI,CAAC,GAAGyqD,IAAO59C,GAAG49C;AACzD,UAAI67B,EAAI,MAAM77B,CAAI,KAAKx/C,GAAO;AAC5B,QAAA9G,IAAIsmD,IAAO,GACXvtC,KAAUjS,EAAM;AAChB,iBAAS+uD;AAAA,MACX;AAEF,IAAAjV,EAAE95C,GAAOiS,CAAM,GACX/Y,IAAIoyD,KAAW+vB,EAAI,MAAMniF,CAAC,EAAE,WAAW8G,CAAK,IAC9Cu4F,GAAmBld,EAAI,MAAMniF,CAAC,GAAG8G,GAAOiS,IAAS,GAAG6nC,CAAC,IAClD95C,EAAM,aAAa,GAAGA,EAAM,QAAQ,MAAM85C,GAAG7nC,IAAS,CAAC,GAC5DA,KAAUjS,EAAM;AAAA,EAClB;AACF;AACA,SAASy4F,GAAU12F,GAAOo1D,GAAU;AAClC,MAAI5oB;AACJ,QAAM3/B,IAAQ,CAACtL,GAAM+C,MAAQ;AAC3B,IAAI/C,EAAK,KAAK,KAAK,aAAa,YAC9BirC,IAAKmqD,GAAS32F,GAAOuB,GAAM+C,GAAKkoC,CAAE;AAAA,EACtC;AACA,SAAK4oB,IACIA,EAAS,OAAOp1D,EAAM,OAC7Bw2F,GAAmBphC,EAAS,KAAKp1D,EAAM,KAAK,GAAG6M,CAAK,IAFvC7M,EAAM,IAAI,YAAY6M,CAAK,GAGnC2/B;AACT;AACA,SAASmqD,GAAS32F,GAAOuwB,GAAOqmE,GAAUpqD,GAAI;AAC5C,QAAM1uC,IAAMsyF,GAAS,IAAI7/D,CAAK;AAC9B,MAAI,CAACzyB,EAAI,SAAU,QAAO0uC;AAC1B,EAAKA,MAAIA,IAAKxsC,EAAM;AACpB,QAAM62F,IAAU,CAAA;AAChB,WAAS7jG,IAAI,GAAGA,IAAI8K,EAAI,QAAQ9K,IAAK,CAAA6jG,EAAQ,KAAK,CAAC;AACnD,WAAS7jG,IAAI,GAAGA,IAAI8K,EAAI,SAAS,QAAQ9K,KAAK;AAC5C,UAAM8jG,IAAOh5F,EAAI,SAAS9K,CAAC;AAC3B,QAAI8jG,EAAK,QAAQ,aAAa;AAC5B,YAAMr7F,IAAO80B,EAAM,OAAOumE,EAAK,GAAG;AAClC,UAAI,CAACr7F,EAAM;AACX,YAAMuC,IAAQvC,EAAK;AACnB,eAAStE,IAAI,GAAGA,IAAI6G,EAAM,SAAS7G,IAAK,CAAA0/F,EAAQC,EAAK,MAAM3/F,CAAC,KAAK2/F,EAAK;AACtE,MAAAtqD,EAAG;AAAA,QACDA,EAAG,QAAQ,IAAIoqD,IAAW,IAAIE,EAAK,GAAG;AAAA,QACtC;AAAA,QACA7C,GAAcj2F,GAAOA,EAAM,UAAU84F,EAAK,GAAGA,EAAK,CAAC;AAAA,MAC3D;AAAA,IACI,WAAWA,EAAK,QAAQ;AACtB,MAAAD,EAAQC,EAAK,GAAG,KAAKA,EAAK;AAAA,aACjBA,EAAK,QAAQ,oBAAoB;AAC1C,YAAMr7F,IAAO80B,EAAM,OAAOumE,EAAK,GAAG;AAClC,UAAI,CAACr7F,EAAM;AACX,MAAA+wC,EAAG,cAAcA,EAAG,QAAQ,IAAIoqD,IAAW,IAAIE,EAAK,GAAG,GAAG,MAAM;AAAA,QAC9D,GAAGr7F,EAAK;AAAA,QACR,SAASA,EAAK,MAAM,UAAUq7F,EAAK;AAAA,MAC3C,CAAO;AAAA,IACH,WAAWA,EAAK,QAAQ,qBAAqB;AAC3C,YAAMr7F,IAAO80B,EAAM,OAAOumE,EAAK,GAAG;AAClC,UAAI,CAACr7F,EAAM;AACX,MAAA+wC,EAAG,cAAcA,EAAG,QAAQ,IAAIoqD,IAAW,IAAIE,EAAK,GAAG,GAAG,MAAM;AAAA,QAC9D,GAAGr7F,EAAK;AAAA,QACR,UAAUq7F,EAAK;AAAA,MACvB,CAAO;AAAA,IACH,WAAWA,EAAK,QAAQ,cAAc;AACpC,YAAMxyF,IAAMkoC,EAAG,QAAQ,IAAIoqD,CAAQ;AACnC,MAAApqD,EAAG,OAAOloC,GAAKA,IAAMisB,EAAM,QAAQ;AAAA,IACrC;AAAA,EACF;AACA,MAAIwoB,GAAOrmD;AACX,WAASM,IAAI,GAAGA,IAAI6jG,EAAQ,QAAQ7jG;AAClC,IAAI6jG,EAAQ7jG,CAAC,MACP+lD,KAAS,SAAMA,IAAQ/lD,IAC3BN,IAAOM;AAEX,WAASA,IAAI,GAAGsR,IAAMsyF,IAAW,GAAG5jG,IAAI8K,EAAI,QAAQ9K,KAAK;AACvD,UAAMg+B,IAAMT,EAAM,MAAMv9B,CAAC,GACnBqS,IAAMf,IAAM0sB,EAAI,UAChBjnB,IAAM8sF,EAAQ7jG,CAAC;AACrB,QAAI+W,IAAM,GAAG;AACX,UAAIopF,IAAO;AACX,MAAIniE,EAAI,eACNmiE,IAAOniE,EAAI,WAAW,KAAK,KAAK;AAElC,YAAMpE,IAAQ,CAAA;AACd,eAASz1B,IAAI,GAAGA,IAAI4S,GAAK5S,KAAK;AAC5B,cAAMoK,IAAO2xF,GAAelzF,EAAM,MAAM,EAAEmzF,CAAI,EAAE,cAAa;AAC7D,QAAI5xF,KAAMqrB,EAAM,KAAKrrB,CAAI;AAAA,MAC3B;AACA,YAAM4+B,KAAQntC,KAAK,KAAK+lD,KAAS/lD,IAAI,MAAMN,KAAQM,IAAIsR,IAAM,IAAIe,IAAM;AACvE,MAAAmnC,EAAG,OAAOA,EAAG,QAAQ,IAAIrM,CAAI,GAAGvT,CAAK;AAAA,IACvC;AACA,IAAAtoB,IAAMe;AAAA,EACR;AACA,SAAOmnC,EAAG,QAAQ8pD,IAAc,EAAE,WAAW,GAAI,CAAE;AACrD;AAoBA,SAASS,GAA8BC,GAAW;AAChD,QAAMl5F,IAAMsyF,GAAS,IAAI4G,CAAS,GAC5Bp1D,IAAO,CAAA,GACPq1D,IAAWn5F,EAAI,QACfo5F,IAAYp5F,EAAI;AACtB,WAASizB,IAAW,GAAGA,IAAWkmE,GAAUlmE,KAAY;AACtD,UAAMC,IAAM,CAAA;AACZ,aAASmmE,IAAW,GAAGA,IAAWD,GAAWC,KAAY;AACvD,YAAMn1D,IAAYjR,IAAWmmE,IAAYC,GACnCC,IAAUt5F,EAAI,IAAIkkC,CAAS;AACjC,UAAIjR,IAAW,GAAG;AAChB,cAAMsmE,IAAer1D,IAAYk1D,GAC3BI,IAAax5F,EAAI,IAAIu5F,CAAY;AACvC,YAAID,MAAYE,GAAY;AAC1B,UAAAtmE,EAAI,KAAK,IAAI;AACb;AAAA,QACF;AAAA,MACF;AACA,UAAImmE,IAAW,GAAG;AAChB,cAAMI,IAAgBv1D,IAAY,GAC5Bw1D,IAAc15F,EAAI,IAAIy5F,CAAa;AACzC,YAAIH,MAAYI,GAAa;AAC3B,UAAAxmE,EAAI,KAAK,IAAI;AACb;AAAA,QACF;AAAA,MACF;AACA,MAAAA,EAAI,KAAKgmE,EAAU,OAAOI,CAAO,CAAC;AAAA,IACpC;AACA,IAAAx1D,EAAK,KAAK5Q,CAAG;AAAA,EACf;AACA,SAAO4Q;AACT;AACA,SAAS61D,GAA8BT,GAAWU,GAAc;AAC9D,QAAMC,IAAU,CAAA,GACV75F,IAAMsyF,GAAS,IAAI4G,CAAS,GAC5BC,IAAWn5F,EAAI,QACfo5F,IAAYp5F,EAAI;AACtB,WAASizB,IAAW,GAAGA,IAAWkmE,GAAUlmE,KAAY;AACtD,UAAM6mE,IAASZ,EAAU,MAAMjmE,CAAQ,GACjC92B,IAAW,CAAA;AACjB,aAASk9F,IAAW,GAAGA,IAAWD,GAAWC,KAAY;AACvD,YAAM17F,IAAOi8F,EAAa3mE,CAAQ,EAAEomE,CAAQ;AAC5C,UAAI,CAAC17F;AACH;AAEF,YAAM27F,IAAUt5F,EAAI,IAAIizB,IAAWjzB,EAAI,QAAQq5F,CAAQ,GACjD/8F,IAAU48F,EAAU,OAAOI,CAAO;AACxC,UAAI,CAACh9F;AACH;AAEF,YAAMC,IAAUD,EAAQ,KAAK;AAAA,QAC3BqB,EAAK;AAAA,QACLA,EAAK;AAAA,QACLA,EAAK;AAAA,MACb;AACM,MAAAxB,EAAS,KAAKI,CAAO;AAAA,IACvB;AACA,UAAMw9F,IAASD,EAAO,KAAK;AAAA,MACzBA,EAAO;AAAA,MACP39F;AAAA,MACA29F,EAAO;AAAA,IACb;AACI,IAAAD,EAAQ,KAAKE,CAAM;AAAA,EACrB;AAMA,SALiBb,EAAU,KAAK;AAAA,IAC9BA,EAAU;AAAA,IACVW;AAAA,IACAX,EAAU;AAAA,EACd;AAEA;AAMA,SAASc,GAAUhqC,GAAM;AACvB,SAAOiqC,GAAe,CAACx2F,MAASA,EAAK,KAAK,KAAK,cAAc,SAASusD,CAAI;AAC5E;AAoBA,SAASiqC,GAAe57B,GAAWrO,GAAM;AACvC,WAASjkC,IAAQikC,EAAK,OAAOjkC,KAAS,GAAGA,KAAS,GAAG;AACnD,UAAMtoB,IAAOusD,EAAK,KAAKjkC,CAAK;AAC5B,QAAIsyC,EAAU56D,CAAI,GAAG;AACnB,YAAM+C,IAAMulB,MAAU,IAAI,IAAIikC,EAAK,OAAOjkC,CAAK,GACzC/kB,IAAQgpD,EAAK,MAAMjkC,CAAK;AAC9B,aAAO,EAAE,MAAAtoB,GAAM,KAAA+C,GAAK,OAAAQ,GAAO,OAAA+kB,EAAK;AAAA,IAClC;AAAA,EACF;AACA,SAAO;AACT;AAGA,SAASmuE,GAAiB9mE,GAAakjC,GAAW;AAChD,QAAM7jC,IAAQunE,GAAU1jC,EAAU,KAAK;AACvC,MAAI,CAAC7jC;AACH;AAEF,QAAMzyB,IAAMsyF,GAAS,IAAI7/D,EAAM,IAAI;AACnC,SAAIW,IAAc,KAAKA,IAAcpzB,EAAI,QAAQ,IAC/C,SAEYA,EAAI,YAAY;AAAA,IAC5B,MAAMozB;AAAA,IACN,OAAOA,IAAc;AAAA,IACrB,KAAK;AAAA,IACL,QAAQpzB,EAAI;AAAA,EAChB,CAAG,EACY,IAAI,CAACkuE,MAAY;AAC5B,UAAMzqE,IAAOgvB,EAAM,KAAK,OAAOy7C,CAAO,GAChC1nE,IAAM0nE,IAAUz7C,EAAM;AAC5B,WAAO,EAAE,KAAAjsB,GAAK,OAAOA,IAAM,GAAG,MAAA/C,GAAM,OAAOgvB,EAAM,QAAQ,EAAC;AAAA,EAC5D,CAAC;AACH;AACA,SAAS0nE,GAAclnE,GAAUqjC,GAAW;AAC1C,QAAM7jC,IAAQunE,GAAU1jC,EAAU,KAAK;AACvC,MAAI,CAAC7jC;AACH;AAEF,QAAMzyB,IAAMsyF,GAAS,IAAI7/D,EAAM,IAAI;AACnC,SAAIQ,IAAW,KAAKA,IAAWjzB,EAAI,SAAS,IAC1C,SAEYA,EAAI,YAAY;AAAA,IAC5B,MAAM;AAAA,IACN,OAAOA,EAAI;AAAA,IACX,KAAKizB;AAAA,IACL,QAAQA,IAAW;AAAA,EACvB,CAAG,EACY,IAAI,CAACi7C,MAAY;AAC5B,UAAMzqE,IAAOgvB,EAAM,KAAK,OAAOy7C,CAAO,GAChC1nE,IAAM0nE,IAAUz7C,EAAM;AAC5B,WAAO,EAAE,KAAAjsB,GAAK,OAAOA,IAAM,GAAG,MAAA/C,GAAM,OAAOgvB,EAAM,QAAQ,EAAC;AAAA,EAC5D,CAAC;AACH;AAGA,SAAS2nE,GAA0B1rD,GAAI2rD,GAAeC,IAAcD,GAAe;AACjF,MAAI7zE,IAAa6zE,GACb3zE,IAAW4zE;AACf,WAASplG,IAAImlG,GAAenlG,KAAK,GAAGA,KAAK;AACvC,UAAMwI,IAAQw8F,GAAiBhlG,GAAGw5C,EAAG,SAAS;AAC9C,IAAIhxC,KACFA,EAAM,QAAQ,CAACC,MAAS;AACtB,YAAM48F,IAAgB58F,EAAK,KAAK,MAAM,UAAUzI,IAAI;AACpD,MAAIqlG,KAAiB/zE,MACnBA,IAAatxB,IAEXqlG,IAAgB7zE,MAClBA,IAAW6zE;AAAA,IAEf,CAAC;AAAA,EAEL;AACA,WAASrlG,IAAImlG,GAAenlG,KAAKwxB,GAAUxxB,KAAK;AAC9C,UAAMwI,IAAQw8F,GAAiBhlG,GAAGw5C,EAAG,SAAS;AAC9C,IAAIhxC,KACFA,EAAM,QAAQ,CAACC,MAAS;AACtB,YAAM48F,IAAgB58F,EAAK,KAAK,MAAM,UAAUzI,IAAI;AACpD,MAAIyI,EAAK,KAAK,MAAM,UAAU,KAAK48F,IAAgB7zE,MACjDA,IAAW6zE;AAAA,IAEf,CAAC;AAAA,EAEL;AACA,QAAMC,IAAU,CAAA;AAChB,WAAStlG,IAAIsxB,GAAYtxB,KAAKwxB,GAAUxxB,KAAK;AAC3C,UAAMulG,IAAaP,GAAiBhlG,GAAGw5C,EAAG,SAAS;AACnD,IAAI+rD,KAAcA,EAAW,SAAS,KACpCD,EAAQ,KAAKtlG,CAAC;AAAA,EAElB;AACA,EAAAsxB,IAAag0E,EAAQ,CAAC,GACtB9zE,IAAW8zE,EAAQA,EAAQ,SAAS,CAAC;AACrC,QAAME,IAA2BR,GAAiB1zE,GAAYkoB,EAAG,SAAS,GACpEisD,IAAgBR,GAAc,GAAGzrD,EAAG,SAAS;AACnD,MAAI,CAACgsD,KAA4B,CAACC;AAChC;AAEF,QAAMpmC,IAAU7lB,EAAG,IAAI;AAAA,IACrBgsD,EAAyBA,EAAyB,SAAS,CAAC,EAAE;AAAA,EAClE;AACE,MAAI/C;AACJ,WAASziG,IAAIwxB,GAAUxxB,KAAKsxB,GAAYtxB,KAAK;AAC3C,UAAM0lG,IAAcV,GAAiBhlG,GAAGw5C,EAAG,SAAS;AACpD,QAAIksD,KAAeA,EAAY,SAAS,GAAG;AACzC,eAASvhG,IAAIshG,EAAc,SAAS,GAAGthG,KAAK,GAAGA;AAC7C,YAAIshG,EAActhG,CAAC,EAAE,QAAQuhG,EAAY,CAAC,EAAE,KAAK;AAC/C,UAAAjD,IAAWiD,EAAY,CAAC;AACxB;AAAA,QACF;AAEF,UAAIjD;AACF;AAAA,IAEJ;AAAA,EACF;AACA,MAAI,CAACA;AACH;AAEF,QAAMnjC,IAAQ9lB,EAAG,IAAI,QAAQipD,EAAS,GAAG;AACzC,SAAO,EAAE,SAAApjC,GAAS,OAAAC,GAAO,SAAAgmC,EAAO;AAClC;AACA,SAASK,GAAuBnsD,GAAIosD,GAAeC,IAAcD,GAAe;AAC9E,MAAIt0E,IAAas0E,GACbp0E,IAAWq0E;AACf,WAAS7lG,IAAI4lG,GAAe5lG,KAAK,GAAGA,KAAK;AACvC,UAAMwI,IAAQy8F,GAAcjlG,GAAGw5C,EAAG,SAAS;AAC3C,IAAIhxC,KACFA,EAAM,QAAQ,CAACC,MAAS;AACtB,YAAM48F,IAAgB58F,EAAK,KAAK,MAAM,UAAUzI,IAAI;AACpD,MAAIqlG,KAAiB/zE,MACnBA,IAAatxB,IAEXqlG,IAAgB7zE,MAClBA,IAAW6zE;AAAA,IAEf,CAAC;AAAA,EAEL;AACA,WAASrlG,IAAI4lG,GAAe5lG,KAAKwxB,GAAUxxB,KAAK;AAC9C,UAAMwI,IAAQy8F,GAAcjlG,GAAGw5C,EAAG,SAAS;AAC3C,IAAIhxC,KACFA,EAAM,QAAQ,CAACC,MAAS;AACtB,YAAM48F,IAAgB58F,EAAK,KAAK,MAAM,UAAUzI,IAAI;AACpD,MAAIyI,EAAK,KAAK,MAAM,UAAU,KAAK48F,IAAgB7zE,MACjDA,IAAW6zE;AAAA,IAEf,CAAC;AAAA,EAEL;AACA,QAAMC,IAAU,CAAA;AAChB,WAAStlG,IAAIsxB,GAAYtxB,KAAKwxB,GAAUxxB,KAAK;AAC3C,UAAMulG,IAAaN,GAAcjlG,GAAGw5C,EAAG,SAAS;AAChD,IAAI+rD,KAAcA,EAAW,SAAS,KACpCD,EAAQ,KAAKtlG,CAAC;AAAA,EAElB;AACA,EAAAsxB,IAAag0E,EAAQ,CAAC,GACtB9zE,IAAW8zE,EAAQA,EAAQ,SAAS,CAAC;AACrC,QAAMQ,IAAwBb,GAAc3zE,GAAYkoB,EAAG,SAAS,GAC9DusD,IAAmBf,GAAiB,GAAGxrD,EAAG,SAAS;AACzD,MAAI,CAACssD,KAAyB,CAACC;AAC7B;AAEF,QAAM1mC,IAAU7lB,EAAG,IAAI;AAAA,IACrBssD,EAAsBA,EAAsB,SAAS,CAAC,EAAE;AAAA,EAC5D;AACE,MAAIrD;AACJ,WAASziG,IAAIwxB,GAAUxxB,KAAKsxB,GAAYtxB,KAAK;AAC3C,UAAMgmG,IAAWf,GAAcjlG,GAAGw5C,EAAG,SAAS;AAC9C,QAAIwsD,KAAYA,EAAS,SAAS,GAAG;AACnC,eAAS7hG,IAAI4hG,EAAiB,SAAS,GAAG5hG,KAAK,GAAGA;AAChD,YAAI4hG,EAAiB5hG,CAAC,EAAE,QAAQ6hG,EAAS,CAAC,EAAE,KAAK;AAC/C,UAAAvD,IAAWuD,EAAS,CAAC;AACrB;AAAA,QACF;AAEF,UAAIvD;AACF;AAAA,IAEJ;AAAA,EACF;AACA,MAAI,CAACA;AACH;AAEF,QAAMnjC,IAAQ9lB,EAAG,IAAI,QAAQipD,EAAS,GAAG;AACzC,SAAO,EAAE,SAAApjC,GAAS,OAAAC,GAAO,SAAAgmC,EAAO;AAClC;AAGA,SAASW,GAAqBr3D,GAAMs3D,GAAeC,GAAeC,GAAmB;AACnF,QAAMC,IAAYH,EAAc,CAAC,IAAIC,EAAc,CAAC,IAAI,KAAK,GACvDG,IAAgB13D,EAAK,OAAOs3D,EAAc,CAAC,GAAGA,EAAc,MAAM,GAClEK,IAAiBD,EAAc,SAAS,MAAM,IAAI,IAAI;AAC5D,MAAI92F;AAMF,SAAAA,IAAS62F,MAAc,KAAKF,EAAc,CAAC,IAAIA,EAAcA,EAAc,SAAS,CAAC,IAAII,GAE3F33D,EAAK,OAAOp/B,GAAQ,GAAG,GAAG82F,CAAa,GAChC13D;AACT;AAGA,SAAS43D,GAAUzmG,GAAO;AACxB,SAAOA,EAAM,CAAC,EAAE,IAAI,CAACuwB,GAAGtwB,MACfD,EAAM,IAAI,CAACiwB,MAAWA,EAAOhwB,CAAC,CAAC,CACvC;AACH;AAGA,SAASymG,GAAWC,GAAe;AACjC,MAAI3oG,GAAIwqE;AACR,QAAM,EAAE,IAAA/uB,GAAI,aAAAmtD,GAAa,aAAAC,GAAa,QAAAC,GAAQ,KAAAv1F,EAAG,IAAKo1F,GAChD5rC,IAAOthB,EAAG,IAAI,QAAQloC,CAAG,GACzBisB,IAAQunE,GAAUhqC,CAAI;AAC5B,MAAI,CAACv9B,EAAO,QAAO;AACnB,QAAMupE,KAAuB/oG,IAAKmnG;AAAA,IAChC1rD;AAAA,IACAmtD;AAAA,EACJ,MAAQ,OAAO,SAAS5oG,EAAG,SACnBgpG,KAAuBx+B,IAAK28B;AAAA,IAChC1rD;AAAA,IACAotD;AAAA,EACJ,MAAQ,OAAO,SAASr+B,EAAG;AAEzB,MADI,CAACu+B,KAAuB,CAACC,KACzBD,EAAoB,SAASF,CAAW,EAAG,QAAO;AACtD,QAAMI,IAAWC;AAAA,IACf1pE,EAAM;AAAA,IACNupE;AAAA,IACAC;AAAA,EAEF;AAEA,MADAvtD,EAAG,YAAYjc,EAAM,KAAKA,EAAM,MAAMA,EAAM,KAAK,UAAUypE,CAAQ,GAC/D,CAACH,EAAQ,QAAO;AACpB,QAAM/7F,IAAMsyF,GAAS,IAAI4J,CAAQ,GAC3Bl1F,IAAQyrB,EAAM,OACdr4B,IAAQ0hG,GACR76D,IAAWjhC,EAAI,WAAWA,EAAI,SAAS,GAAG5F,GAAO8hG,CAAQ,GACzDE,IAAY1tD,EAAG,IAAI,QAAQ1nC,IAAQi6B,CAAQ,GAC3Co7D,IAAYr8F,EAAI,WAAW,GAAG5F,GAAO8hG,CAAQ,GAC7CI,IAAa5tD,EAAG,IAAI,QAAQ1nC,IAAQq1F,CAAS;AACnD,SAAA3tD,EAAG,aAAa6nD,GAAc,aAAa6F,GAAWE,CAAU,CAAC,GAC1D;AACT;AACA,SAASH,GAAgB1pE,GAAO2oE,GAAeC,GAAeE,GAAW;AACvE,MAAIz3D,IAAO43D,GAAUzC,GAA8BxmE,CAAK,CAAC;AACzD,SAAAqR,IAAOq3D,GAAqBr3D,GAAMs3D,GAAeC,CAAwB,GACzEv3D,IAAO43D,GAAU53D,CAAI,GACd61D,GAA8BlnE,GAAOqR,CAAI;AAClD;AAGA,SAASy4D,GAAQC,GAAe;AAC9B,MAAIvpG,GAAIwqE;AACR,QAAM,EAAE,IAAA/uB,GAAI,aAAAmtD,GAAa,aAAAC,GAAa,QAAAC,GAAQ,KAAAv1F,EAAG,IAAKg2F,GAChDxsC,IAAOthB,EAAG,IAAI,QAAQloC,CAAG,GACzBisB,IAAQunE,GAAUhqC,CAAI;AAC5B,MAAI,CAACv9B,EAAO,QAAO;AACnB,QAAMgqE,KAAoBxpG,IAAK4nG,GAAuBnsD,GAAImtD,CAAW,MAAM,OAAO,SAAS5oG,EAAG,SACxFypG,KAAoBj/B,IAAKo9B,GAAuBnsD,GAAIotD,CAAW,MAAM,OAAO,SAASr+B,EAAG;AAE9F,MADI,CAACg/B,KAAoB,CAACC,KACtBD,EAAiB,SAASX,CAAW,EAAG,QAAO;AACnD,QAAMI,IAAWS;AAAA,IACflqE,EAAM;AAAA,IACNgqE;AAAA,IACAC;AAAA,EAEF;AAEA,MADAhuD,EAAG,YAAYjc,EAAM,KAAKA,EAAM,MAAMA,EAAM,KAAK,UAAUypE,CAAQ,GAC/D,CAACH,EAAQ,QAAO;AACpB,QAAM/7F,IAAMsyF,GAAS,IAAI4J,CAAQ,GAC3Bl1F,IAAQyrB,EAAM,OACdr4B,IAAQ0hG,GACR76D,IAAWjhC,EAAI,WAAW5F,GAAO4F,EAAI,QAAQ,GAAGk8F,CAAQ,GACxDE,IAAY1tD,EAAG,IAAI,QAAQ1nC,IAAQi6B,CAAQ,GAC3Co7D,IAAYr8F,EAAI,WAAW5F,GAAO,GAAG8hG,CAAQ,GAC7CI,IAAa5tD,EAAG,IAAI,QAAQ1nC,IAAQq1F,CAAS;AACnD,SAAA3tD,EAAG,aAAa6nD,GAAc,aAAa6F,GAAWE,CAAU,CAAC,GAC1D;AACT;AACA,SAASK,GAAalqE,GAAO2oE,GAAeC,GAAeE,GAAW;AACpE,MAAIz3D,IAAOm1D,GAA8BxmE,CAAK;AAC9C,SAAAqR,IAAOq3D,GAAqBr3D,GAAMs3D,GAAeC,CAAwB,GAClE1B,GAA8BlnE,GAAOqR,CAAI;AAClD;AAGA,SAAS84D,GAAa16F,GAAO;AAC3B,QAAMyzD,IAAMzzD,EAAM,WACZ8tD,IAAOylC,GAAcvzF,CAAK,GAC1BuwB,IAAQu9B,EAAK,KAAK,EAAE,GACpBkmC,IAAalmC,EAAK,MAAM,EAAE,GAC1BhwD,IAAMsyF,GAAS,IAAI7/D,CAAK;AAK9B,SAAO,EAAE,GAJIkjC,aAAe4gC,KAAgBv2F,EAAI;AAAA,IAC9C21D,EAAI,YAAY,MAAMugC;AAAA,IACtBvgC,EAAI,UAAU,MAAMugC;AAAA,EACxB,IAAMl2F,EAAI,SAASgwD,EAAK,MAAMkmC,CAAU,GACpB,YAAAA,GAAY,KAAAl2F,GAAK,OAAAyyB,EAAK;AAC1C;AACA,SAASoqE,GAAUnuD,GAAI,EAAE,KAAA1uC,GAAK,YAAAk2F,GAAY,OAAAzjE,EAAK,GAAI2gE,GAAK;AACtD,MAAI0J,IAAY1J,IAAM,IAAI,KAAK;AAC/B,EAAIiD,GAAer2F,GAAKyyB,GAAO2gE,IAAM0J,CAAS,MAC5CA,IAAY1J,KAAO,KAAKA,KAAOpzF,EAAI,QAAQ,OAAO;AAEpD,WAASkzB,IAAM,GAAGA,IAAMlzB,EAAI,QAAQkzB,KAAO;AACzC,UAAM94B,IAAQ84B,IAAMlzB,EAAI,QAAQozF;AAChC,QAAIA,IAAM,KAAKA,IAAMpzF,EAAI,SAASA,EAAI,IAAI5F,IAAQ,CAAC,KAAK4F,EAAI,IAAI5F,CAAK,GAAG;AACtE,YAAMoM,IAAMxG,EAAI,IAAI5F,CAAK,GACnBuD,IAAO80B,EAAM,OAAOjsB,CAAG;AAC7B,MAAAkoC,EAAG;AAAA,QACDA,EAAG,QAAQ,IAAIwnD,IAAa1vF,CAAG;AAAA,QAC/B;AAAA,QACA4vF,GAAWz4F,EAAK,OAAOy1F,IAAMpzF,EAAI,SAASwG,CAAG,CAAC;AAAA,MACtD,GACM0sB,KAAOv1B,EAAK,MAAM,UAAU;AAAA,IAC9B,OAAO;AACL,YAAM6B,IAAOs9F,KAAa,OAAO1H,GAAe3iE,EAAM,KAAK,MAAM,EAAE,OAAOA,EAAM,OAAOzyB,EAAI,IAAI5F,IAAQ0iG,CAAS,CAAC,EAAE,MAC7Gt2F,IAAMxG,EAAI,WAAWkzB,GAAKkgE,GAAK3gE,CAAK;AAC1C,MAAAic,EAAG,OAAOA,EAAG,QAAQ,IAAIwnD,IAAa1vF,CAAG,GAAGhH,EAAK,eAAe;AAAA,IAClE;AAAA,EACF;AACA,SAAOkvC;AACT;AACA,SAASquD,GAAgB76F,GAAO61D,GAAU;AACxC,MAAI,CAACy9B,GAAUtzF,CAAK,EAAG,QAAO;AAC9B,MAAI61D,GAAU;AACZ,UAAMwJ,IAAOq7B,GAAa16F,CAAK;AAC/B,IAAA61D,EAAS8kC,GAAU36F,EAAM,IAAIq/D,GAAMA,EAAK,IAAI,CAAC;AAAA,EAC/C;AACA,SAAO;AACT;AACA,SAASy7B,GAAe96F,GAAO61D,GAAU;AACvC,MAAI,CAACy9B,GAAUtzF,CAAK,EAAG,QAAO;AAC9B,MAAI61D,GAAU;AACZ,UAAMwJ,IAAOq7B,GAAa16F,CAAK;AAC/B,IAAA61D,EAAS8kC,GAAU36F,EAAM,IAAIq/D,GAAMA,EAAK,KAAK,CAAC;AAAA,EAChD;AACA,SAAO;AACT;AACA,SAAS07B,GAAavuD,GAAI,EAAE,KAAA1uC,GAAK,OAAAyyB,GAAO,YAAAyjE,EAAU,GAAI9C,GAAK;AACzD,QAAM8J,IAAWxuD,EAAG,QAAQ,KAAK;AACjC,WAASxb,IAAM,GAAGA,IAAMlzB,EAAI,UAAU;AACpC,UAAM5F,IAAQ84B,IAAMlzB,EAAI,QAAQozF,GAC1B5sF,IAAMxG,EAAI,IAAI5F,CAAK,GACnBuD,IAAO80B,EAAM,OAAOjsB,CAAG,GACvBtG,IAAQvC,EAAK;AACnB,QAAIy1F,IAAM,KAAKpzF,EAAI,IAAI5F,IAAQ,CAAC,KAAKoM,KAAO4sF,IAAMpzF,EAAI,QAAQ,KAAKA,EAAI,IAAI5F,IAAQ,CAAC,KAAKoM;AACvF,MAAAkoC,EAAG;AAAA,QACDA,EAAG,QAAQ,MAAMwuD,CAAQ,EAAE,IAAIhH,IAAa1vF,CAAG;AAAA,QAC/C;AAAA,QACA2vF,GAAcj2F,GAAOkzF,IAAMpzF,EAAI,SAASwG,CAAG,CAAC;AAAA,MACpD;AAAA,SACW;AACL,YAAMQ,IAAQ0nC,EAAG,QAAQ,MAAMwuD,CAAQ,EAAE,IAAIhH,IAAa1vF,CAAG;AAC7D,MAAAkoC,EAAG,OAAO1nC,GAAOA,IAAQrJ,EAAK,QAAQ;AAAA,IACxC;AACA,IAAAu1B,KAAOhzB,EAAM;AAAA,EACf;AACF;AACA,SAASi9F,GAAaj7F,GAAO61D,GAAU;AACrC,MAAI,CAACy9B,GAAUtzF,CAAK,EAAG,QAAO;AAC9B,MAAI61D,GAAU;AACZ,UAAMwJ,IAAOq7B,GAAa16F,CAAK,GACzBwsC,IAAKxsC,EAAM;AACjB,QAAIq/D,EAAK,QAAQ,KAAKA,EAAK,SAASA,EAAK,IAAI,MAAO,QAAO;AAC3D,aAAS,IAAIA,EAAK,QAAQ,GACxB07B,GAAavuD,GAAI6yB,GAAM,CAAC,GACpB,KAAKA,EAAK,MAFe,KAAK;AAGlC,YAAM9uC,IAAQ8uC,EAAK,aAAa7yB,EAAG,IAAI,OAAO6yB,EAAK,aAAa,CAAC,IAAI7yB,EAAG;AACxE,UAAI,CAACjc;AACH,cAAM,WAAW,gBAAgB;AAEnC,MAAA8uC,EAAK,QAAQ9uC,GACb8uC,EAAK,MAAM+wB,GAAS,IAAI7/D,CAAK;AAAA,IAC/B;AACA,IAAAslC,EAASrpB,CAAE;AAAA,EACb;AACA,SAAO;AACT;AAmDA,SAAS0uD,GAAU1uD,GAAI,EAAE,KAAA1uC,GAAK,OAAAyyB,GAAO,YAAAyjE,EAAU,GAAIhjE,GAAK;AACtD,MAAImqE,IAAS;AACb,WAASnoG,IAAI,GAAGA,IAAIg+B,GAAKh+B,IAAK,CAAAmoG,KAAU5qE,EAAM,MAAMv9B,CAAC,EAAE;AACvD,QAAMkE,IAAUikG,IAAS5qE,EAAM,MAAMS,CAAG,EAAE,UACpCo8B,IAAU5gB,EAAG,QAAQ,KAAK;AAChC,EAAAA,EAAG,OAAO2uD,IAASnH,GAAY98F,IAAU88F,CAAU;AACnD,QAAM5kF,IAAuB,oBAAI,IAAG;AACpC,WAAS8hF,IAAM,GAAGh5F,IAAQ84B,IAAMlzB,EAAI,OAAOozF,IAAMpzF,EAAI,OAAOozF,KAAOh5F,KAAS;AAC1E,UAAMoM,IAAMxG,EAAI,IAAI5F,CAAK;AACzB,QAAI,CAAAkX,EAAK,IAAI9K,CAAG;AAEhB,UADA8K,EAAK,IAAI9K,CAAG,GACR0sB,IAAM,KAAK1sB,KAAOxG,EAAI,IAAI5F,IAAQ4F,EAAI,KAAK,GAAG;AAChD,cAAME,IAAQuyB,EAAM,OAAOjsB,CAAG,EAAE;AAChC,QAAAkoC,EAAG,cAAcA,EAAG,QAAQ,MAAM4gB,CAAO,EAAE,IAAI9oD,IAAM0vF,CAAU,GAAG,MAAM;AAAA,UACtE,GAAGh2F;AAAA,UACH,SAASA,EAAM,UAAU;AAAA,QACjC,CAAO,GACDkzF,KAAOlzF,EAAM,UAAU;AAAA,MACzB,WAAWgzB,IAAMlzB,EAAI,UAAUwG,KAAOxG,EAAI,IAAI5F,IAAQ4F,EAAI,KAAK,GAAG;AAChE,cAAMrC,IAAO80B,EAAM,OAAOjsB,CAAG,GACvBtG,IAAQvC,EAAK,OACboH,IAAOpH,EAAK,KAAK;AAAA,UACrB,EAAE,GAAGuC,GAAO,SAASvC,EAAK,MAAM,UAAU,EAAC;AAAA,UAC3CA,EAAK;AAAA,QACb,GACYhK,IAASqM,EAAI,WAAWkzB,IAAM,GAAGkgE,GAAK3gE,CAAK;AACjD,QAAAic,EAAG,OAAOA,EAAG,QAAQ,MAAM4gB,CAAO,EAAE,IAAI4mC,IAAaviG,CAAM,GAAGoR,CAAI,GAClEquF,KAAOlzF,EAAM,UAAU;AAAA,MACzB;AAAA;AAAA,EACF;AACF;AACA,SAASo9F,GAAUp7F,GAAO61D,GAAU;AAClC,MAAI,CAACy9B,GAAUtzF,CAAK,EAAG,QAAO;AAC9B,MAAI61D,GAAU;AACZ,UAAMwJ,IAAOq7B,GAAa16F,CAAK,GAAGwsC,IAAKxsC,EAAM;AAC7C,QAAIq/D,EAAK,OAAO,KAAKA,EAAK,UAAUA,EAAK,IAAI,OAAQ,QAAO;AAC5D,aAAS,IAAIA,EAAK,SAAS,GACzB67B,GAAU1uD,GAAI6yB,GAAM,CAAC,GACjB,KAAKA,EAAK,KAFgB,KAAK;AAGnC,YAAM9uC,IAAQ8uC,EAAK,aAAa7yB,EAAG,IAAI,OAAO6yB,EAAK,aAAa,CAAC,IAAI7yB,EAAG;AACxE,UAAI,CAACjc;AACH,cAAM,WAAW,gBAAgB;AAEnC,MAAA8uC,EAAK,QAAQ9uC,GACb8uC,EAAK,MAAM+wB,GAAS,IAAI/wB,EAAK,KAAK;AAAA,IACpC;AACA,IAAAxJ,EAASrpB,CAAE;AAAA,EACb;AACA,SAAO;AACT;AA+IA,SAAS6uD,GAAY34F,GAAMzR,GAAO;AAChC,SAAO,SAAS+O,GAAO61D,GAAU;AAC/B,QAAI,CAACy9B,GAAUtzF,CAAK,EAAG,QAAO;AAC9B,UAAMwzF,IAAQD,GAAcvzF,CAAK;AACjC,QAAIwzF,EAAM,UAAU,MAAM9wF,CAAI,MAAMzR,EAAO,QAAO;AAClD,QAAI4kE,GAAU;AACZ,YAAMrpB,IAAKxsC,EAAM;AACjB,MAAIA,EAAM,qBAAqBq0F,KAC7Br0F,EAAM,UAAU,YAAY,CAACuB,GAAM+C,MAAQ;AACzC,QAAI/C,EAAK,MAAMmB,CAAI,MAAMzR,KACvBu7C,EAAG,cAAcloC,GAAK,MAAM;AAAA,UAC1B,GAAG/C,EAAK;AAAA,UACR,CAACmB,CAAI,GAAGzR;AAAA,QACtB,CAAa;AAAA,MACL,CAAC,IAEDu7C,EAAG,cAAcgnD,EAAM,KAAK,MAAM;AAAA,QAChC,GAAGA,EAAM,UAAU;AAAA,QACnB,CAAC9wF,CAAI,GAAGzR;AAAA,MAClB,CAAS,GACH4kE,EAASrpB,CAAE;AAAA,IACb;AACA,WAAO;AAAA,EACT;AACF;AACA,SAAS8uD,GAAwBh+F,GAAM;AACrC,SAAO,SAAS0C,GAAO61D,GAAU;AAC/B,QAAI,CAACy9B,GAAUtzF,CAAK,EAAG,QAAO;AAC9B,QAAI61D,GAAU;AACZ,YAAMnuB,IAAQwrD,GAAelzF,EAAM,MAAM,GACnCq/D,IAAOq7B,GAAa16F,CAAK,GAAGwsC,IAAKxsC,EAAM,IACvCxE,IAAQ6jE,EAAK,IAAI;AAAA,QACrB/hE,KAAQ,WAAW;AAAA,UACjB,MAAM+hE,EAAK;AAAA,UACX,KAAK;AAAA,UACL,OAAOA,EAAK;AAAA,UACZ,QAAQA,EAAK,IAAI;AAAA,QAC3B,IAAY/hE,KAAQ,QAAQ;AAAA,UAClB,MAAM;AAAA,UACN,KAAK+hE,EAAK;AAAA,UACV,OAAOA,EAAK,IAAI;AAAA,UAChB,QAAQA,EAAK;AAAA,QACvB,IAAYA;AAAA,MACZ,GACYzyC,IAAQpxB,EAAM,IAAI,CAAC8I,MAAQ+6D,EAAK,MAAM,OAAO/6D,CAAG,CAAC;AACvD,eAAStR,IAAI,GAAGA,IAAIwI,EAAM,QAAQxI;AAChC,QAAI45B,EAAM55B,CAAC,EAAE,QAAQ00C,EAAM,eACzB8E,EAAG;AAAA,UACD6yB,EAAK,aAAa7jE,EAAMxI,CAAC;AAAA,UACzB00C,EAAM;AAAA,UACN9a,EAAM55B,CAAC,EAAE;AAAA,QACrB;AACM,UAAIw5C,EAAG,MAAM,UAAU;AACrB,iBAASx5C,IAAI,GAAGA,IAAIwI,EAAM,QAAQxI;AAChC,UAAAw5C,EAAG;AAAA,YACD6yB,EAAK,aAAa7jE,EAAMxI,CAAC;AAAA,YACzB00C,EAAM;AAAA,YACN9a,EAAM55B,CAAC,EAAE;AAAA,UACrB;AACM,MAAA6iE,EAASrpB,CAAE;AAAA,IACb;AACA,WAAO;AAAA,EACT;AACF;AACA,SAAS+uD,GAAsBj+F,GAAM+hE,GAAM33B,GAAO;AAChD,QAAM8zD,IAAgBn8B,EAAK,IAAI,YAAY;AAAA,IACzC,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO/hE,KAAQ,QAAQ+hE,EAAK,IAAI,QAAQ;AAAA,IACxC,QAAQ/hE,KAAQ,WAAW+hE,EAAK,IAAI,SAAS;AAAA,EACjD,CAAG;AACD,WAAS,IAAI,GAAG,IAAIm8B,EAAc,QAAQ,KAAK;AAC7C,UAAM//F,IAAO4jE,EAAK,MAAM,OAAOm8B,EAAc,CAAC,CAAC;AAC/C,QAAI//F,KAAQA,EAAK,SAASisC,EAAM;AAC9B,aAAO;AAAA,EAEX;AACA,SAAO;AACT;AACA,SAAS+zD,GAAan+F,GAAM7M,GAAS;AAEnC,SADAA,IAAUA,KAAW,EAAE,oBAAoB,GAAK,GAC5CA,EAAQ,qBAA2B6qG,GAAwBh+F,CAAI,IAC5D,SAAS0C,GAAO61D,GAAU;AAC/B,QAAI,CAACy9B,GAAUtzF,CAAK,EAAG,QAAO;AAC9B,QAAI61D,GAAU;AACZ,YAAMnuB,IAAQwrD,GAAelzF,EAAM,MAAM,GACnCq/D,IAAOq7B,GAAa16F,CAAK,GAAGwsC,IAAKxsC,EAAM,IACvC07F,IAAqBH,GAAsB,OAAOl8B,GAAM33B,CAAK,GAC7Di0D,IAAwBJ;AAAA,QAC5B;AAAA,QACAl8B;AAAA,QACA33B;AAAA,MACR,GAEYk0D,KADkBt+F,MAAS,WAAWo+F,IAAqBp+F,MAAS,QAAQq+F,IAAwB,MAC9D,IAAI,GAC1CE,IAAYv+F,KAAQ,WAAW;AAAA,QACnC,MAAM;AAAA,QACN,KAAKs+F;AAAA,QACL,OAAO;AAAA,QACP,QAAQv8B,EAAK,IAAI;AAAA,MACzB,IAAU/hE,KAAQ,QAAQ;AAAA,QAClB,MAAMs+F;AAAA,QACN,KAAK;AAAA,QACL,OAAOv8B,EAAK,IAAI;AAAA,QAChB,QAAQ;AAAA,MAChB,IAAUA,GACEy8B,IAAUx+F,KAAQ,WAAWq+F,IAAwBj0D,EAAM,OAAOA,EAAM,cAAcpqC,KAAQ,QAAQo+F,IAAqBh0D,EAAM,OAAOA,EAAM,cAAcA,EAAM;AACxK,MAAA23B,EAAK,IAAI,YAAYw8B,CAAS,EAAE,QAAQ,CAACE,MAAoB;AAC3D,cAAM3E,IAAU2E,IAAkB18B,EAAK,YACjC5jE,IAAO+wC,EAAG,IAAI,OAAO4qD,CAAO;AAClC,QAAI37F,KACF+wC,EAAG,cAAc4qD,GAAS0E,GAASrgG,EAAK,KAAK;AAAA,MAEjD,CAAC,GACDo6D,EAASrpB,CAAE;AAAA,IACb;AACA,WAAO;AAAA,EACT;AACF;AACsBivD,GAAa,OAAO;AAAA,EACxC,oBAAoB;AACtB,CAAC;AACwBA,GAAa,UAAU;AAAA,EAC9C,oBAAoB;AACtB,CAAC;AACsBA,GAAa,QAAQ;AAAA,EAC1C,oBAAoB;AACtB,CAAC;AACD,SAASO,GAAaxI,GAAO7gC,GAAK;AAChC,MAAIA,IAAM,GAAG;AACX,UAAM91D,IAAS22F,EAAM;AACrB,QAAI32F,EAAQ,QAAO22F,EAAM,MAAM32F,EAAO;AACtC,aAASm0B,IAAMwiE,EAAM,MAAM,EAAE,IAAI,GAAGh0D,IAASg0D,EAAM,OAAM,GAAIxiE,KAAO,GAAGA,KAAO;AAC5E,YAAMygE,IAAU+B,EAAM,KAAK,EAAE,EAAE,MAAMxiE,CAAG,GAClCk3B,IAAYupC,EAAQ;AAC1B,UAAIvpC;AACF,eAAO1oB,IAAS,IAAI0oB,EAAU;AAEhC,MAAA1oB,KAAUiyD,EAAQ;AAAA,IACpB;AAAA,EACF,OAAO;AACL,QAAI+B,EAAM,MAAK,IAAKA,EAAM,OAAO,aAAa;AAC5C,aAAOA,EAAM,MAAMA,EAAM,UAAU;AAErC,UAAMjjE,IAAQijE,EAAM,KAAK,EAAE;AAC3B,aAASxiE,IAAMwiE,EAAM,WAAW,EAAE,GAAGrC,IAAWqC,EAAM,MAAK,GAAIxiE,IAAMT,EAAM,YAAYS,KAAO;AAC5F,YAAMygE,IAAUlhE,EAAM,MAAMS,CAAG;AAC/B,UAAIygE,EAAQ,WAAY,QAAON,IAAW;AAC1C,MAAAA,KAAYM,EAAQ;AAAA,IACtB;AAAA,EACF;AACA,SAAO;AACT;AACA,SAASwK,GAAa5C,GAAW;AAC/B,SAAO,SAASr5F,GAAO61D,GAAU;AAC/B,QAAI,CAACy9B,GAAUtzF,CAAK,EAAG,QAAO;AAC9B,UAAMvE,IAAOugG,GAAazI,GAAcvzF,CAAK,GAAGq5F,CAAS;AACzD,QAAI59F,KAAQ,KAAM,QAAO;AACzB,QAAIo6D,GAAU;AACZ,YAAM29B,IAAQxzF,EAAM,IAAI,QAAQvE,CAAI;AACpC,MAAAo6D;AAAA,QACE71D,EAAM,GAAG,aAAak8F,EAAe,QAAQ1I,GAAOG,GAAgBH,CAAK,CAAC,CAAC,EAAE,eAAc;AAAA,MACnG;AAAA,IACI;AACA,WAAO;AAAA,EACT;AACF;AACA,SAAS2I,GAAYn8F,GAAO61D,GAAU;AACpC,QAAM/H,IAAO9tD,EAAM,UAAU;AAC7B,WAASkqB,IAAI4jC,EAAK,OAAO5jC,IAAI,GAAGA;AAE9B,QADa4jC,EAAK,KAAK5jC,CAAC,EACf,KAAK,KAAK,aAAa;AAC9B,aAAI2rC,KACFA;AAAA,QACE71D,EAAM,GAAG,OAAO8tD,EAAK,OAAO5jC,CAAC,GAAG4jC,EAAK,MAAM5jC,CAAC,CAAC,EAAE,eAAc;AAAA,MACvE,GACa;AAGX,SAAO;AACT;AACA,SAASkyE,GAAoBp8F,GAAO61D,GAAU;AAC5C,QAAMpC,IAAMzzD,EAAM;AAClB,MAAI,EAAEyzD,aAAe4gC,IAAgB,QAAO;AAC5C,MAAIx+B,GAAU;AACZ,UAAMrpB,IAAKxsC,EAAM,IACXq8F,IAAcnJ,GAAelzF,EAAM,MAAM,EAAE,KAAK,cAAa,EAAG;AACtE,IAAAyzD,EAAI,YAAY,CAACh4D,GAAM6I,MAAQ;AAC7B,MAAK7I,EAAK,QAAQ,GAAG4gG,CAAW,KAC9B7vD,EAAG;AAAA,QACDA,EAAG,QAAQ,IAAIloC,IAAM,CAAC;AAAA,QACtBkoC,EAAG,QAAQ,IAAIloC,IAAM7I,EAAK,WAAW,CAAC;AAAA,QACtC,IAAI6gG,EAAOD,GAAa,GAAG,CAAC;AAAA,MACtC;AAAA,IACI,CAAC,GACG7vD,EAAG,cAAYqpB,EAASrpB,CAAE;AAAA,EAChC;AACA,SAAO;AACT;AACA,SAAS+vD,GAAc9rG,GAAS;AAC9B,SAAO,CAACuP,GAAO61D,MAAa;AAC1B,UAAM;AAAA,MACJ,MAAM8jC;AAAA,MACN,IAAIC;AAAA,MACJ,QAAAC,IAAS;AAAA,MACT,KAAAv1F,IAAMtE,EAAM,UAAU;AAAA,IAC5B,IAAQvP,GACE+7C,IAAKxsC,EAAM;AACjB,WAAIq6F,GAAQ,EAAE,IAAA7tD,GAAI,aAAAmtD,GAAa,aAAAC,GAAa,QAAAC,GAAQ,KAAAv1F,EAAG,CAAE,KAC3BuxD,IAASrpB,CAAE,GAChC,MAEF;AAAA,EACT;AACF;AACA,SAASgwD,GAAiB/rG,GAAS;AACjC,SAAO,CAACuP,GAAO61D,MAAa;AAC1B,UAAM;AAAA,MACJ,MAAM8jC;AAAA,MACN,IAAIC;AAAA,MACJ,QAAAC,IAAS;AAAA,MACT,KAAAv1F,IAAMtE,EAAM,UAAU;AAAA,IAC5B,IAAQvP,GACE+7C,IAAKxsC,EAAM;AACjB,WAAIy5F,GAAW,EAAE,IAAAjtD,GAAI,aAAAmtD,GAAa,aAAAC,GAAa,QAAAC,GAAQ,KAAAv1F,EAAG,CAAE,KAC9BuxD,IAASrpB,CAAE,GAChC,MAEF;AAAA,EACT;AACF;AAKA,SAASiwD,GAAY/mF,GAAO;AAC1B,MAAI,CAACA,EAAM,KAAM,QAAO;AACxB,MAAI,EAAE,SAAAnb,GAAS,WAAAo/C,GAAW,SAAAC,EAAO,IAAKlkC;AACtC,SAAOnb,EAAQ,cAAc,MAAMo/C,IAAY,KAAKC,IAAU,KAAKr/C,EAAQ,MAAM,CAAC,EAAE,KAAK,KAAK,aAAa;AACzG,IAAAo/C,KACAC,KACAr/C,IAAUA,EAAQ,MAAM,CAAC,EAAE;AAE7B,QAAMw+C,IAAQx+C,EAAQ,MAAM,CAAC,GACvB44F,IAAOp6C,EAAM,KAAK,KAAK,WACvBrQ,IAASqQ,EAAM,KAAK,QAAQnX,IAAO,CAAA;AACzC,MAAIuxD,KAAQ;AACV,aAASngG,IAAI,GAAGA,IAAIuH,EAAQ,YAAYvH,KAAK;AAC3C,UAAIwI,IAAQjB,EAAQ,MAAMvH,CAAC,EAAE;AAC7B,YAAMH,IAAOG,IAAI,IAAI,KAAK,IAAI,GAAG2mD,IAAY,CAAC,GACxC7mD,IAAQE,IAAIuH,EAAQ,aAAa,IAAI,IAAI,KAAK,IAAI,GAAGq/C,IAAU,CAAC;AACtE,OAAI/mD,KAAQC,OACV0I,IAAQkhG;AAAA,QACNxJ,GAAexqD,CAAM,EAAE;AAAA,QACvB,IAAIi0D,EAAOnhG,GAAO3I,GAAMC,CAAK;AAAA,MACvC,EAAU,UACJ8uC,EAAK,KAAKpmC,CAAK;AAAA,IACjB;AAAA,WACS23F,KAAQ,UAAUA,KAAQ;AACnC,IAAAvxD,EAAK;AAAA,MACH+X,KAAaC,IAAU8iD;AAAA,QACrBxJ,GAAexqD,CAAM,EAAE;AAAA,QACvB,IAAIi0D,EAAOpiG,GAASo/C,GAAWC,CAAO;AAAA,MAC9C,EAAQ,UAAUr/C;AAAA,IAClB;AAAA;AAEI,WAAO;AAET,SAAOqiG,GAAkBl0D,GAAQ9G,CAAI;AACvC;AACA,SAASg7D,GAAkBl0D,GAAQ9G,GAAM;AACvC,QAAMixD,IAAS,CAAA;AACf,WAAS,IAAI,GAAG,IAAIjxD,EAAK,QAAQ,KAAK;AACpC,UAAM5Q,IAAM4Q,EAAK,CAAC;AAClB,aAASzqC,IAAI65B,EAAI,aAAa,GAAG75B,KAAK,GAAGA,KAAK;AAC5C,YAAM,EAAE,SAAAy6F,GAAS,SAAAD,EAAO,IAAK3gE,EAAI,MAAM75B,CAAC,EAAE;AAC1C,eAAS0pD,IAAI,GAAGA,IAAI,IAAI+wC,GAAS/wC;AAC/B,QAAAgyC,EAAOhyC,CAAC,KAAKgyC,EAAOhyC,CAAC,KAAK,KAAK8wC;AAAA,IACnC;AAAA,EACF;AACA,MAAItB,IAAQ;AACZ,WAASxvC,IAAI,GAAGA,IAAIgyC,EAAO,QAAQhyC,IAAK,CAAAwvC,IAAQ,KAAK,IAAIA,GAAOwC,EAAOhyC,CAAC,CAAC;AACzE,WAASA,IAAI,GAAGA,IAAIgyC,EAAO,QAAQhyC;AAEjC,QADIA,KAAKjf,EAAK,UAAQA,EAAK,KAAKi7D,EAAU,KAAK,GAC3ChK,EAAOhyC,CAAC,IAAIwvC,GAAO;AACrB,YAAMhlE,IAAQ6nE,GAAexqD,CAAM,EAAE,KAAK,cAAa,GACjDltC,IAAQ,CAAA;AACd,eAASxI,IAAI6/F,EAAOhyC,CAAC,GAAG7tD,IAAIq9F,GAAOr9F;AACjC,QAAAwI,EAAM,KAAK6vB,CAAK;AAElB,MAAAuW,EAAKif,CAAC,IAAIjf,EAAKif,CAAC,EAAE,OAAOg8C,EAAU,KAAKrhG,CAAK,CAAC;AAAA,IAChD;AAEF,SAAO,EAAE,QAAQomC,EAAK,QAAQ,OAAAyuD,GAAO,MAAAzuD,EAAI;AAC3C;AACA,SAAS86D,GAAS/oD,GAAUj+B,GAAO;AACjC,QAAMnU,IAAOoyC,EAAS,cAAa;AAEnC,SADW,IAAIse,GAAU1wD,CAAI,EAAE,QAAQ,GAAGA,EAAK,QAAQ,MAAMmU,CAAK,EACxD;AACZ;AACA,SAASonF,GAAU,EAAE,OAAAzM,GAAO,QAAAC,GAAQ,MAAA1uD,EAAI,GAAIm7D,GAAUC,GAAW;AAC/D,MAAI3M,KAAS0M,GAAU;AACrB,UAAMxqG,IAAQ,CAAA,GACRolG,IAAU,CAAA;AAChB,aAAS3mE,IAAM,GAAGA,IAAM4Q,EAAK,QAAQ5Q,KAAO;AAC1C,YAAMmsB,IAAOvb,EAAK5Q,CAAG,GAAGx1B,IAAQ,CAAA;AAChC,eAAS01F,IAAM3+F,EAAMy+B,CAAG,KAAK,GAAGh+B,IAAI,GAAGk+F,IAAM6L,GAAU/pG,KAAK;AAC1D,YAAIyI,IAAO0hD,EAAK,MAAMnqD,IAAImqD,EAAK,UAAU;AACzC,QAAI+zC,IAAMz1F,EAAK,MAAM,UAAUshG,MAC7BthG,IAAOA,EAAK,KAAK;AAAA,UACfw4F;AAAA,YACEx4F,EAAK;AAAA,YACLA,EAAK,MAAM;AAAA,YACXy1F,IAAMz1F,EAAK,MAAM,UAAUshG;AAAA,UACzC;AAAA,UACYthG,EAAK;AAAA,QACjB,IACQD,EAAM,KAAKC,CAAI,GACfy1F,KAAOz1F,EAAK,MAAM;AAClB,iBAAStE,IAAI,GAAGA,IAAIsE,EAAK,MAAM,SAAStE;AACtC,UAAA5E,EAAMy+B,IAAM75B,CAAC,KAAK5E,EAAMy+B,IAAM75B,CAAC,KAAK,KAAKsE,EAAK,MAAM;AAAA,MACxD;AACA,MAAAk8F,EAAQ,KAAKkF,EAAU,KAAKrhG,CAAK,CAAC;AAAA,IACpC;AACA,IAAAomC,IAAO+1D,GACPtH,IAAQ0M;AAAA,EACV;AACA,MAAIzM,KAAU0M,GAAW;AACvB,UAAMrF,IAAU,CAAA;AAChB,aAAS3mE,IAAM,GAAGh+B,IAAI,GAAGg+B,IAAMgsE,GAAWhsE,KAAOh+B,KAAK;AACpD,YAAMwI,IAAQ,CAAA,GAAI+uB,IAASqX,EAAK5uC,IAAIs9F,CAAM;AAC1C,eAASn5F,IAAI,GAAGA,IAAIozB,EAAO,YAAYpzB,KAAK;AAC1C,YAAIsE,IAAO8uB,EAAO,MAAMpzB,CAAC;AACzB,QAAI65B,IAAMv1B,EAAK,MAAM,UAAUuhG,MAC7BvhG,IAAOA,EAAK,KAAK;AAAA,UACf;AAAA,YACE,GAAGA,EAAK;AAAA,YACR,SAAS,KAAK,IAAI,GAAGuhG,IAAYvhG,EAAK,MAAM,OAAO;AAAA,UACjE;AAAA,UACYA,EAAK;AAAA,QACjB,IACQD,EAAM,KAAKC,CAAI;AAAA,MACjB;AACA,MAAAk8F,EAAQ,KAAKkF,EAAU,KAAKrhG,CAAK,CAAC;AAAA,IACpC;AACA,IAAAomC,IAAO+1D,GACPrH,IAAS0M;AAAA,EACX;AACA,SAAO,EAAE,OAAA3M,GAAO,QAAAC,GAAQ,MAAA1uD,EAAI;AAC9B;AACA,SAASq7D,GAAUzwD,GAAI1uC,GAAKyyB,GAAOzrB,GAAOurF,GAAOC,GAAQljC,GAAS;AAChE,QAAM1kB,IAAS8D,EAAG,IAAI,KAAK,QACrB9E,IAAQwrD,GAAexqD,CAAM;AACnC,MAAIrd,GACA6xE;AACJ,MAAI7M,IAAQvyF,EAAI;AACd,aAASkzB,IAAM,GAAGwO,IAAS,GAAGxO,IAAMlzB,EAAI,QAAQkzB,KAAO;AACrD,YAAMygE,IAAUlhE,EAAM,MAAMS,CAAG;AAC/B,MAAAwO,KAAUiyD,EAAQ;AAClB,YAAMj2F,IAAQ,CAAA;AACd,UAAIuO;AACJ,MAAI0nF,EAAQ,aAAa,QAAQA,EAAQ,UAAU,QAAQ/pD,EAAM,OAC/D39B,IAAMshB,MAAUA,IAAQqc,EAAM,KAAK,cAAa,KAC7C39B,IAAMmzF,MAAcA,IAAYx1D,EAAM,YAAY,cAAa;AACpE,eAAS10C,IAAI8K,EAAI,OAAO9K,IAAIq9F,GAAOr9F,IAAK,CAAAwI,EAAM,KAAKuO,CAAG;AACtD,MAAAyiC,EAAG,OAAOA,EAAG,QAAQ,MAAM4gB,CAAO,EAAE,IAAI5tB,IAAS,IAAI16B,CAAK,GAAGtJ,CAAK;AAAA,IACpE;AAEF,MAAI80F,IAASxyF,EAAI,QAAQ;AACvB,UAAMtC,IAAQ,CAAA;AACd,aAASxI,IAAI,GAAGmqG,KAAUr/F,EAAI,SAAS,KAAKA,EAAI,OAAO9K,IAAI,KAAK,IAAI8K,EAAI,OAAOuyF,CAAK,GAAGr9F,KAAK;AAC1F,YAAMoqG,IAASpqG,KAAK8K,EAAI,QAAQ,KAAQyyB,EAAM,OAAOzyB,EAAI,IAAIq/F,IAASnqG,CAAC,CAAC,EAAE,QAAQ00C,EAAM;AACxF,MAAAlsC,EAAM;AAAA,QACJ4hG,IAASF,MAAcA,IAAYx1D,EAAM,YAAY,mBAAmBrc,MAAUA,IAAQqc,EAAM,KAAK,cAAa;AAAA,MAC1H;AAAA,IACI;AACA,UAAM21D,IAAW31D,EAAM,IAAI,OAAO,MAAMm1D,EAAU,KAAKrhG,CAAK,CAAC,GAAGomC,IAAO,CAAA;AACvE,aAAS5uC,IAAI8K,EAAI,QAAQ9K,IAAIs9F,GAAQt9F,IAAK,CAAA4uC,EAAK,KAAKy7D,CAAQ;AAC5D,IAAA7wD,EAAG,OAAOA,EAAG,QAAQ,MAAM4gB,CAAO,EAAE,IAAItoD,IAAQyrB,EAAM,WAAW,CAAC,GAAGqR,CAAI;AAAA,EAC3E;AACA,SAAO,CAAC,EAAEvW,KAAS6xE;AACrB;AACA,SAASI,GAAkB9wD,GAAI1uC,GAAKyyB,GAAOzrB,GAAOjS,GAAMC,GAAOkvD,GAAKoL,GAAS;AAC3E,MAAIpL,KAAO,KAAKA,KAAOlkD,EAAI,OAAQ,QAAO;AAC1C,MAAI65C,IAAQ;AACZ,WAASu5C,IAAMr+F,GAAMq+F,IAAMp+F,GAAOo+F,KAAO;AACvC,UAAMh5F,IAAQ8pD,IAAMlkD,EAAI,QAAQozF,GAAK5sF,IAAMxG,EAAI,IAAI5F,CAAK;AACxD,QAAI4F,EAAI,IAAI5F,IAAQ4F,EAAI,KAAK,KAAKwG,GAAK;AACrC,MAAAqzC,IAAQ;AACR,YAAMl8C,IAAO80B,EAAM,OAAOjsB,CAAG,GACvB,EAAE,KAAKi5F,GAAS,MAAMC,EAAQ,IAAK1/F,EAAI,SAASwG,CAAG;AACzD,MAAAkoC,EAAG,cAAcA,EAAG,QAAQ,MAAM4gB,CAAO,EAAE,IAAI9oD,IAAMQ,CAAK,GAAG,MAAM;AAAA,QACjE,GAAGrJ,EAAK;AAAA,QACR,SAASumD,IAAMu7C;AAAA,MACvB,CAAO,GACD/wD,EAAG;AAAA,QACDA,EAAG,QAAQ,MAAM4gB,CAAO,EAAE,IAAItvD,EAAI,WAAWkkD,GAAKw7C,GAAUjtE,CAAK,CAAC;AAAA,QAClE90B,EAAK,KAAK,cAAc;AAAA,UACtB,GAAGA,EAAK;AAAA,UACR,SAAS8hG,IAAU9hG,EAAK,MAAM,UAAUumD;AAAA,QAClD,CAAS;AAAA,MACT,GACMkvC,KAAOz1F,EAAK,MAAM,UAAU;AAAA,IAC9B;AAAA,EACF;AACA,SAAOk8C;AACT;AACA,SAAS8lD,GAAgBjxD,GAAI1uC,GAAKyyB,GAAOzrB,GAAOk9C,GAAKwuC,GAAQ39F,GAAMu6D,GAAS;AAC1E,MAAIv6D,KAAQ,KAAKA,KAAQiL,EAAI,MAAO,QAAO;AAC3C,MAAI65C,IAAQ;AACZ,WAAS3mB,IAAMgxB,GAAKhxB,IAAMw/D,GAAQx/D,KAAO;AACvC,UAAM94B,IAAQ84B,IAAMlzB,EAAI,QAAQjL,GAAMyR,IAAMxG,EAAI,IAAI5F,CAAK;AACzD,QAAI4F,EAAI,IAAI5F,IAAQ,CAAC,KAAKoM,GAAK;AAC7B,MAAAqzC,IAAQ;AACR,YAAMl8C,IAAO80B,EAAM,OAAOjsB,CAAG,GACvBk5F,IAAW1/F,EAAI,SAASwG,CAAG,GAC3Bo5F,IAAYlxD,EAAG,QAAQ,MAAM4gB,CAAO,EAAE,IAAI9oD,IAAMQ,CAAK;AAC3D,MAAA0nC,EAAG;AAAA,QACDkxD;AAAA,QACA;AAAA,QACAzJ;AAAA,UACEx4F,EAAK;AAAA,UACL5I,IAAO2qG;AAAA,UACP/hG,EAAK,MAAM,WAAW5I,IAAO2qG;AAAA,QACvC;AAAA,MACA,GACMhxD,EAAG;AAAA,QACDkxD,IAAYjiG,EAAK;AAAA,QACjBA,EAAK,KAAK;AAAA,UACRw4F,GAAcx4F,EAAK,OAAO,GAAG5I,IAAO2qG,CAAQ;AAAA,QACtD;AAAA,MACA,GACMxsE,KAAOv1B,EAAK,MAAM,UAAU;AAAA,IAC9B;AAAA,EACF;AACA,SAAOk8C;AACT;AACA,SAASgmD,GAAY39F,GAAO61D,GAAUm+B,GAAY30B,GAAM7jE,GAAO;AAC7D,MAAI+0B,IAAQyjE,IAAah0F,EAAM,IAAI,OAAOg0F,IAAa,CAAC,IAAIh0F,EAAM;AAClE,MAAI,CAACuwB;AACH,UAAM,IAAI,MAAM,gBAAgB;AAElC,MAAIzyB,IAAMsyF,GAAS,IAAI7/D,CAAK;AAC5B,QAAM,EAAE,KAAAyxB,GAAK,MAAAnvD,EAAI,IAAKwsE,GAChBvsE,IAAQD,IAAO2I,EAAM,OAAOg1F,IAASxuC,IAAMxmD,EAAM,QACjDgxC,IAAKxsC,EAAM;AACjB,MAAIotD,IAAU;AACd,WAASwwC,IAAS;AAEhB,QADArtE,IAAQyjE,IAAaxnD,EAAG,IAAI,OAAOwnD,IAAa,CAAC,IAAIxnD,EAAG,KACpD,CAACjc;AACH,YAAM,IAAI,MAAM,gBAAgB;AAElC,IAAAzyB,IAAMsyF,GAAS,IAAI7/D,CAAK,GACxB68B,IAAU5gB,EAAG,QAAQ,KAAK;AAAA,EAC5B;AACA,EAAIywD,GAAUzwD,GAAI1uC,GAAKyyB,GAAOyjE,GAAYlhG,GAAO09F,GAAQpjC,CAAO,KAAGwwC,EAAM,GACrEN,GAAkB9wD,GAAI1uC,GAAKyyB,GAAOyjE,GAAYnhG,GAAMC,GAAOkvD,GAAKoL,CAAO,KACzEwwC,EAAM,GACJN,GAAkB9wD,GAAI1uC,GAAKyyB,GAAOyjE,GAAYnhG,GAAMC,GAAO09F,GAAQpjC,CAAO,KAC5EwwC,EAAM,GACJH,GAAgBjxD,GAAI1uC,GAAKyyB,GAAOyjE,GAAYhyC,GAAKwuC,GAAQ39F,GAAMu6D,CAAO,KACxEwwC,EAAM,GACJH,GAAgBjxD,GAAI1uC,GAAKyyB,GAAOyjE,GAAYhyC,GAAKwuC,GAAQ19F,GAAOs6D,CAAO,KACzEwwC,EAAM;AACR,WAAS5sE,IAAMgxB,GAAKhxB,IAAMw/D,GAAQx/D,KAAO;AACvC,UAAMnP,IAAO/jB,EAAI,WAAWkzB,GAAKn+B,GAAM09B,CAAK,GAAG0V,IAAKnoC,EAAI,WAAWkzB,GAAKl+B,GAAOy9B,CAAK;AACpF,IAAAic,EAAG;AAAA,MACDA,EAAG,QAAQ,MAAM4gB,CAAO,EAAE,IAAIvrC,IAAOmyE,CAAU;AAAA,MAC/CxnD,EAAG,QAAQ,MAAM4gB,CAAO,EAAE,IAAInnB,IAAK+tD,CAAU;AAAA,MAC7C,IAAI2I,EAAOnhG,EAAM,KAAKw1B,IAAMgxB,CAAG,GAAG,GAAG,CAAC;AAAA,IAC5C;AAAA,EACE;AACA,EAAA47C,EAAM,GACNpxD,EAAG;AAAA,IACD,IAAI6nD;AAAA,MACF7nD,EAAG,IAAI,QAAQwnD,IAAal2F,EAAI,WAAWkkD,GAAKnvD,GAAM09B,CAAK,CAAC;AAAA,MAC5Dic,EAAG,IAAI,QAAQwnD,IAAal2F,EAAI,WAAW0yF,IAAS,GAAG19F,IAAQ,GAAGy9B,CAAK,CAAC;AAAA,IAC9E;AAAA,EACA,GACEslC,EAASrpB,CAAE;AACb;AAGA,IAAIqxD,KAAgB3gC,GAAe;AAAA,EACjC,WAAW4gC,GAAM,SAAS,EAAE;AAAA,EAC5B,YAAYA,GAAM,SAAS,CAAC;AAAA,EAC5B,SAASA,GAAM,QAAQ,EAAE;AAAA,EACzB,WAAWA,GAAM,QAAQ,CAAC;AAAA,EAC1B,mBAAmBC,GAAW,SAAS,EAAE;AAAA,EACzC,oBAAoBA,GAAW,SAAS,CAAC;AAAA,EACzC,iBAAiBA,GAAW,QAAQ,EAAE;AAAA,EACtC,mBAAmBA,GAAW,QAAQ,CAAC;AAAA,EACvC,WAAW3B;AAAA,EACX,iBAAiBA;AAAA,EACjB,QAAQA;AAAA,EACR,cAAcA;AAChB,CAAC;AACD,SAAS4B,GAAkBh+F,GAAO61D,GAAUzB,GAAW;AACrD,SAAIA,EAAU,GAAGp0D,EAAM,SAAS,IAAU,MACtC61D,KAAUA,EAAS71D,EAAM,GAAG,aAAao0D,CAAS,EAAE,gBAAgB,GACjE;AACT;AACA,SAAS0pC,GAAMrN,GAAM99B,GAAK;AACxB,SAAO,CAAC3yD,GAAO61D,GAAUnxC,MAAS;AAChC,QAAI,CAACA,EAAM,QAAO;AAClB,UAAM+uC,IAAMzzD,EAAM;AAClB,QAAIyzD,aAAe4gC;AACjB,aAAO2J;AAAA,QACLh+F;AAAA,QACA61D;AAAA,QACAooC,EAAW,KAAKxqC,EAAI,WAAWd,CAAG;AAAA,MAC1C;AAEI,QAAI89B,KAAQ,WAAW,CAACh9B,EAAI,MAAO,QAAO;AAC1C,UAAMpuD,IAAM64F,GAAYx5E,GAAM+rE,GAAM99B,CAAG;AACvC,QAAIttD,KAAO,KAAM,QAAO;AACxB,QAAIorF,KAAQ;AACV,aAAOuN;AAAA,QACLh+F;AAAA,QACA61D;AAAA,QACAooC,EAAW,KAAKj+F,EAAM,IAAI,QAAQyzD,EAAI,OAAOd,CAAG,GAAGA,CAAG;AAAA,MAC9D;AACW;AACL,YAAM6gC,IAAQxzF,EAAM,IAAI,QAAQqF,CAAG,GAC7Bq0E,IAAQqa,GAASP,GAAO/C,GAAM99B,CAAG;AACvC,UAAImkB;AACJ,aAAI4C,IAAO5C,IAASmnB,EAAW,KAAKvkB,GAAO,CAAC,IACnC/mB,IAAM,IACbmkB,IAASmnB,EAAW,KAAKj+F,EAAM,IAAI,QAAQwzF,EAAM,OAAO,EAAE,CAAC,GAAG,EAAE,IAC7D1c,IAASmnB,EAAW,KAAKj+F,EAAM,IAAI,QAAQwzF,EAAM,MAAM,EAAE,CAAC,GAAG,CAAC,GAC5DwK,GAAkBh+F,GAAO61D,GAAUihB,CAAM;AAAA,IAClD;AAAA,EACF;AACF;AACA,SAASinB,GAAWtN,GAAM99B,GAAK;AAC7B,SAAO,CAAC3yD,GAAO61D,GAAUnxC,MAAS;AAChC,QAAI,CAACA,EAAM,QAAO;AAClB,UAAM+uC,IAAMzzD,EAAM;AAClB,QAAIm+F;AACJ,QAAI1qC,aAAe4gC;AACjB,MAAA8J,IAAU1qC;AAAA,SACL;AACL,YAAMpuD,IAAM64F,GAAYx5E,GAAM+rE,GAAM99B,CAAG;AACvC,UAAIttD,KAAO,KAAM,QAAO;AACxB,MAAA84F,IAAU,IAAI9J,GAAcr0F,EAAM,IAAI,QAAQqF,CAAG,CAAC;AAAA,IACpD;AACA,UAAMitD,IAAQyhC,GAASoK,EAAQ,WAAW1N,GAAM99B,CAAG;AACnD,WAAKL,IACE0rC;AAAA,MACLh+F;AAAA,MACA61D;AAAA,MACA,IAAIw+B,GAAc8J,EAAQ,aAAa7rC,CAAK;AAAA,IAClD,IALuB;AAAA,EAMrB;AACF;AACA,SAASye,GAAkBrsD,GAAMpgB,GAAK;AACpC,QAAM+lB,IAAM3F,EAAK,MAAM,KAAK8uE,IAAQH,GAAWhpE,EAAI,QAAQ/lB,CAAG,CAAC;AAC/D,SAAKkvF,KACL9uE,EAAK,SAASA,EAAK,MAAM,GAAG,aAAa,IAAI2vE,GAAcb,CAAK,CAAC,CAAC,GAC3D,MAFY;AAGrB;AACA,SAAS4K,GAAY15E,GAAMpB,GAAG5N,GAAO;AACnC,MAAI,CAAC49E,GAAU5uE,EAAK,KAAK,EAAG,QAAO;AACnC,MAAIlpB,IAAQihG,GAAY/mF,CAAK;AAC7B,QAAM+9C,IAAM/uC,EAAK,MAAM;AACvB,MAAI+uC,aAAe4gC,IAAe;AAChC,IAAK74F,MACHA,IAAQ;AAAA,MACN,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,MAAM;AAAA,QACJ6iG,EAAU;AAAA,UACR3B,GAASxJ,GAAexuE,EAAK,MAAM,MAAM,EAAE,MAAMhP,CAAK;AAAA,QAClE;AAAA,MACA;AAAA,IACA;AACI,UAAM6a,IAAQkjC,EAAI,YAAY,KAAK,EAAE,GAC/B3uD,IAAQ2uD,EAAI,YAAY,MAAM,EAAE,GAChC4L,IAAO+wB,GAAS,IAAI7/D,CAAK,EAAE;AAAA,MAC/BkjC,EAAI,YAAY,MAAM3uD;AAAA,MACtB2uD,EAAI,UAAU,MAAM3uD;AAAA,IAC1B;AACI,WAAAtJ,IAAQshG,GAAUthG,GAAO6jE,EAAK,QAAQA,EAAK,MAAMA,EAAK,SAASA,EAAK,GAAG,GACvEs+B,GAAYj5E,EAAK,OAAOA,EAAK,UAAU5f,GAAOu6D,GAAM7jE,CAAK,GAClD;AAAA,EACT,WAAWA,GAAO;AAChB,UAAMg4F,IAAQD,GAAc7uE,EAAK,KAAK,GAChC5f,IAAQ0uF,EAAM,MAAM,EAAE;AAC5B,WAAAmK;AAAA,MACEj5E,EAAK;AAAA,MACLA,EAAK;AAAA,MACL5f;AAAA,MACAsrF,GAAS,IAAIoD,EAAM,KAAK,EAAE,CAAC,EAAE,SAASA,EAAM,MAAM1uF,CAAK;AAAA,MACvDtJ;AAAA,IACN,GACW;AAAA,EACT;AACE,WAAO;AAEX;AACA,SAAS8iG,GAAgB55E,GAAM65E,GAAY;AACzC,MAAIxtG;AACJ,MAAIwtG,EAAW,WAAWA,EAAW,QAAS;AAC9C,QAAMC,IAAeC,GAAU/5E,GAAM65E,EAAW,MAAM;AACtD,MAAIlsC;AACJ,MAAIksC,EAAW,YAAY75E,EAAK,MAAM,qBAAqB2vE;AACzD,IAAAqK,EAAiBh6E,EAAK,MAAM,UAAU,aAAa65E,CAAU,GAC7DA,EAAW,eAAc;AAAA,WAChBA,EAAW,YAAYC,MAAiBnsC,IAAUghC,GAAW3uE,EAAK,MAAM,UAAU,OAAO,MAAM,UAAU3zB,IAAK4tG,GAAej6E,GAAM65E,CAAU,MAAM,OAAO,SAASxtG,EAAG,QAAQshE,EAAQ;AAC/L,IAAAqsC,EAAiBrsC,GAASksC,CAAU,GACpCA,EAAW,eAAc;AAAA,WAChB,CAACC;AACV;AAEF,WAASE,EAAiBE,GAAUlqF,GAAO;AACzC,QAAI49C,IAAQqsC,GAAej6E,GAAMhQ,CAAK;AACtC,UAAMmqF,IAAWzL,GAAgB,SAAS1uE,EAAK,KAAK,KAAK;AACzD,QAAI,CAAC4tC,KAAS,CAACshC,GAAYgL,GAAUtsC,CAAK;AACxC,UAAIusC,EAAU,CAAAvsC,IAAQssC;AAAA,UACjB;AAEP,UAAMxqC,IAAY,IAAIigC,GAAcuK,GAAUtsC,CAAK;AACnD,QAAIusC,KAAY,CAACn6E,EAAK,MAAM,UAAU,GAAG0vC,CAAS,GAAG;AACnD,YAAM5nB,IAAK9nB,EAAK,MAAM,GAAG,aAAa0vC,CAAS;AAC/C,MAAIyqC,KAAUryD,EAAG,QAAQ4mD,IAAiBwL,EAAS,GAAG,GACtDl6E,EAAK,SAAS8nB,CAAE;AAAA,IAClB;AAAA,EACF;AACA,WAASr4B,IAAO;AACd,IAAAuQ,EAAK,KAAK,oBAAoB,WAAWvQ,CAAI,GAC7CuQ,EAAK,KAAK,oBAAoB,aAAavQ,CAAI,GAC/CuQ,EAAK,KAAK,oBAAoB,aAAagS,CAAI,GAC3C08D,GAAgB,SAAS1uE,EAAK,KAAK,KAAK,QAC1CA,EAAK,SAASA,EAAK,MAAM,GAAG,QAAQ0uE,IAAiB,EAAE,CAAC;AAAA,EAC5D;AACA,WAAS18D,EAAKq5C,GAAQ;AACpB,UAAMr7D,IAAQq7D,GACR3c,IAASggC,GAAgB,SAAS1uE,EAAK,KAAK;AAClD,QAAIk6E;AACJ,QAAIxrC,KAAU;AACZ,MAAAwrC,IAAWl6E,EAAK,MAAM,IAAI,QAAQ0uC,CAAM;AAAA,aAC/BqrC,GAAU/5E,GAAMhQ,EAAM,MAAM,KAAK8pF,MAC1CI,IAAWD,GAAej6E,GAAM65E,CAAU,GACtC,CAACK;AAAU,aAAOzqF,EAAI;AAE5B,IAAIyqF,KAAUF,EAAiBE,GAAUlqF,CAAK;AAAA,EAChD;AACA,EAAAgQ,EAAK,KAAK,iBAAiB,WAAWvQ,CAAI,GAC1CuQ,EAAK,KAAK,iBAAiB,aAAavQ,CAAI,GAC5CuQ,EAAK,KAAK,iBAAiB,aAAagS,CAAI;AAC9C;AACA,SAASwnE,GAAYx5E,GAAM+rE,GAAM99B,GAAK;AACpC,MAAI,EAAEjuC,EAAK,MAAM,qBAAqBo6E,GAAiB,QAAO;AAC9D,QAAM,EAAE,OAAAxsC,EAAK,IAAK5tC,EAAK,MAAM;AAC7B,WAASwF,IAAIooC,EAAM,QAAQ,GAAGpoC,KAAK,GAAGA,KAAK;AACzC,UAAMrlB,IAASytD,EAAM,KAAKpoC,CAAC;AAC3B,SADsCyoC,IAAM,IAAIL,EAAM,MAAMpoC,CAAC,IAAIooC,EAAM,WAAWpoC,CAAC,OACrEyoC,IAAM,IAAI,IAAI9tD,EAAO,YAAa,QAAO;AACvD,QAAIA,EAAO,KAAK,KAAK,aAAa,UAAUA,EAAO,KAAK,KAAK,aAAa,eAAe;AACvF,YAAMuyF,IAAU9kC,EAAM,OAAOpoC,CAAC,GACxB60E,IAAStO,KAAQ,SAAS99B,IAAM,IAAI,SAAS,OAAOA,IAAM,IAAI,UAAU;AAC9E,aAAOjuC,EAAK,eAAeq6E,CAAM,IAAI3H,IAAU;AAAA,IACjD;AAAA,EACF;AACA,SAAO;AACT;AACA,SAASqH,GAAU/5E,GAAMo8B,GAAK;AAC5B,SAAOA,KAAOA,KAAOp8B,EAAK,KAAKo8B,IAAMA,EAAI;AACvC,QAAIA,EAAI,YAAY,QAAQA,EAAI,YAAY;AAC1C,aAAOA;AAGX,SAAO;AACT;AACA,SAAS69C,GAAej6E,GAAMhQ,GAAO;AACnC,QAAMsqF,IAAWt6E,EAAK,YAAY;AAAA,IAChC,MAAMhQ,EAAM;AAAA,IACZ,KAAKA,EAAM;AAAA,EACf,CAAG;AACD,SAAKsqF,KACEA,IAAW3L,GAAW3uE,EAAK,MAAM,IAAI,QAAQs6E,EAAS,GAAG,CAAC,IAD3C;AAExB;AAUA,IAAIC,KAAY,MAAM;AAAA,EACpB,YAAY19F,GAAM29F,GAAqB;AACrC,SAAK,OAAO39F,GACZ,KAAK,sBAAsB29F,GAC3B,KAAK,MAAM,SAAS,cAAc,KAAK,GACvC,KAAK,IAAI,YAAY,gBACrB,KAAK,QAAQ,KAAK,IAAI,YAAY,SAAS,cAAc,OAAO,CAAC,GACjE,KAAK,MAAM,MAAM;AAAA,MACf;AAAA,MACA,GAAGA,CAAmB;AAAA,IAC5B,GACI,KAAK,WAAW,KAAK,MAAM,YAAY,SAAS,cAAc,UAAU,CAAC,GACzEC,GAAsB59F,GAAM,KAAK,UAAU,KAAK,OAAO29F,CAAmB,GAC1E,KAAK,aAAa,KAAK,MAAM,YAAY,SAAS,cAAc,OAAO,CAAC;AAAA,EAC1E;AAAA,EACA,OAAO39F,GAAM;AACX,WAAIA,EAAK,QAAQ,KAAK,KAAK,OAAa,MACxC,KAAK,OAAOA,GACZ49F;AAAA,MACE59F;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACX,GACW;AAAA,EACT;AAAA,EACA,eAAe69F,GAAQ;AACrB,WAAOA,EAAO,QAAQ,iBAAiBA,EAAO,UAAU,KAAK,SAAS,KAAK,SAAS,SAASA,EAAO,MAAM;AAAA,EAC5G;AACF;AACA,SAASD,GAAsB59F,GAAMmrC,GAAUnc,GAAO2uE,GAAqBG,GAAaC,GAAe;AACrG,MAAIvuG;AACJ,MAAIwuG,IAAa,GACbC,IAAa,IACbt2B,IAAUx8B,EAAS;AACvB,QAAM1b,IAAMzvB,EAAK;AACjB,MAAKyvB,GACL;AAAA,aAASh+B,IAAI,GAAGk+F,IAAM,GAAGl+F,IAAIg+B,EAAI,YAAYh+B,KAAK;AAChD,YAAM,EAAE,SAAA2+F,GAAS,UAAAE,EAAQ,IAAK7gE,EAAI,MAAMh+B,CAAC,EAAE;AAC3C,eAASmE,IAAI,GAAGA,IAAIw6F,GAASx6F,KAAK+5F,KAAO;AACvC,cAAMuO,IAAWJ,KAAenO,IAAMoO,IAAgBzN,KAAYA,EAAS16F,CAAC,GACtEuoG,IAAWD,IAAWA,IAAW,OAAO;AAG9C,YAFAF,KAAcE,KAAYP,GACrBO,MAAUD,IAAa,KACvBt2B;AAKH,UAAIA,EAAQ,MAAM,SAASw2B,MACzBx2B,EAAQ,MAAM,QAAQw2B,IAExBx2B,IAAUA,EAAQ;AAAA,aARN;AACZ,gBAAMy2B,IAAO,SAAS,cAAc,KAAK;AACzC,UAAAA,EAAK,MAAM,QAAQD,GACnBhzD,EAAS,YAAYizD,CAAI;AAAA,QAC3B;AAAA,MAMF;AAAA,IACF;AACA,WAAOz2B,KAAS;AACd,YAAMpsE,IAAQosE,EAAQ;AACtB,OAACn4E,IAAKm4E,EAAQ,eAAe,QAAgBn4E,EAAG,YAAYm4E,CAAO,GACnEA,IAAUpsE;AAAA,IACZ;AACA,IAAI0iG,KACFjvE,EAAM,MAAM,QAAQgvE,IAAa,MACjChvE,EAAM,MAAM,WAAW,OAEvBA,EAAM,MAAM,QAAQ,IACpBA,EAAM,MAAM,WAAWgvE,IAAa;AAAA;AAExC;AAGA,IAAIK,KAA0B,IAAIC;AAAAA,EAChC;AACF;AACA,SAASC,GAAe;AAAA,EACtB,aAAAC,IAAc;AAAA,EACd,cAAAC,IAAe;AAAA,EACf,qBAAAd,IAAsB;AAAA,EACtB,MAAAe,IAAOhB;AAAA,EACP,qBAAAiB,IAAsB;AACxB,IAAI,IAAI;AACN,QAAMl2F,IAAS,IAAIyrD,GAAO;AAAA,IACxB,KAAKmqC;AAAA,IACL,OAAO;AAAA,MACL,KAAKt8E,GAAGtjB,GAAO;AACb,YAAIjP,GAAIwqE;AACR,cAAMmf,KAAanf,KAAMxqE,IAAKiZ,EAAO,SAAS,OAAO,SAASjZ,EAAG,UAAU,OAAO,SAASwqE,EAAG,WACxF4kC,IAAYjN,GAAelzF,EAAM,MAAM,EAAE,MAAM;AACrD,eAAIigG,KAAQvlB,MACVA,EAAUylB,CAAS,IAAI,CAAC5+F,GAAMmjB,MACrB,IAAIu7E,EAAK1+F,GAAM29F,GAAqBx6E,CAAI,IAG5C,IAAI07E,GAAY,IAAI,EAAK;AAAA,MAClC;AAAA,MACA,MAAM5zD,GAAIqoB,GAAM;AACd,eAAOA,EAAK,MAAMroB,CAAE;AAAA,MACtB;AAAA,IACN;AAAA,IACI,OAAO;AAAA,MACL,YAAY,CAACxsC,MAAU;AACrB,cAAMqgG,IAAcT,GAAwB,SAAS5/F,CAAK;AAC1D,eAAOqgG,KAAeA,EAAY,eAAe,KAAK,EAAE,OAAO,gBAAe,IAAK,CAAA;AAAA,MACrF;AAAA,MACA,iBAAiB;AAAA,QACf,WAAW,CAAC37E,GAAMhQ,MAAU;AAC1B,UAAA4rF,GAAgB57E,GAAMhQ,GAAOqrF,GAAaG,CAAmB;AAAA,QAC/D;AAAA,QACA,YAAY,CAACx7E,MAAS;AACpB,UAAA67E,GAAiB77E,CAAI;AAAA,QACvB;AAAA,QACA,WAAW,CAACA,GAAMhQ,MAAU;AAC1B,UAAA8rF,GAAiB97E,GAAMhQ,GAAOsrF,GAAcd,CAAmB;AAAA,QACjE;AAAA,MACR;AAAA,MACM,aAAa,CAACl/F,MAAU;AACtB,cAAMqgG,IAAcT,GAAwB,SAAS5/F,CAAK;AAC1D,YAAIqgG,KAAeA,EAAY,eAAe;AAC5C,iBAAOI,GAAkBzgG,GAAOqgG,EAAY,YAAY;AAAA,MAE5D;AAAA,MACA,WAAW,CAAA;AAAA,IACjB;AAAA,EACA,CAAG;AACD,SAAOr2F;AACT;AACA,IAAIo2F,KAAc,MAAMM,GAAa;AAAA,EACnC,YAAYC,GAAcvtB,GAAU;AAClC,SAAK,eAAeutB,GACpB,KAAK,WAAWvtB;AAAA,EAClB;AAAA,EACA,MAAM5mC,GAAI;AACR,UAAMxsC,IAAQ,MACR8iF,IAASt2C,EAAG,QAAQozD,EAAuB;AACjD,QAAI9c,KAAUA,EAAO,aAAa;AAChC,aAAO,IAAI4d,GAAa5d,EAAO,WAAW,EAAK;AACjD,QAAIA,KAAUA,EAAO,gBAAgB;AACnC,aAAO,IAAI4d,GAAa1gG,EAAM,cAAc8iF,EAAO,WAAW;AAChE,QAAI9iF,EAAM,eAAe,MAAMwsC,EAAG,YAAY;AAC5C,UAAIrX,IAASqX,EAAG,QAAQ,IAAIxsC,EAAM,cAAc,EAAE;AAClD,aAAK0zF,GAAalnD,EAAG,IAAI,QAAQrX,CAAM,CAAC,MACtCA,IAAS,KAEJ,IAAIurE,GAAavrE,GAAQn1B,EAAM,QAAQ;AAAA,IAChD;AACA,WAAOA;AAAA,EACT;AACF;AACA,SAASsgG,GAAgB57E,GAAMhQ,GAAOqrF,GAAaG,GAAqB;AACtE,MAAI,CAACx7E,EAAK,SAAU;AACpB,QAAM27E,IAAcT,GAAwB,SAASl7E,EAAK,KAAK;AAC/D,MAAK27E,KACD,CAACA,EAAY,UAAU;AACzB,UAAM79F,IAASo+F,GAAclsF,EAAM,MAAM;AACzC,QAAIjZ,IAAO;AACX,QAAI+G,GAAQ;AACV,YAAM,EAAE,MAAA3P,GAAM,OAAAC,MAAU0P,EAAO,sBAAqB;AACpD,MAAIkS,EAAM,UAAU7hB,KAAQktG,IAC1BtkG,IAAOolG,GAASn8E,GAAMhQ,GAAO,QAAQqrF,CAAW,IACzCjtG,IAAQ4hB,EAAM,WAAWqrF,MAChCtkG,IAAOolG,GAASn8E,GAAMhQ,GAAO,SAASqrF,CAAW;AAAA,IACrD;AACA,QAAItkG,KAAQ4kG,EAAY,cAAc;AACpC,UAAI,CAACH,KAAuBzkG,MAAS,IAAI;AACvC,cAAM+3F,IAAQ9uE,EAAK,MAAM,IAAI,QAAQjpB,CAAI,GACnC80B,IAAQijE,EAAM,KAAK,EAAE,GACrB11F,IAAMsyF,GAAS,IAAI7/D,CAAK,GACxByjE,IAAaR,EAAM,MAAM,EAAE;AAEjC,YADY11F,EAAI,SAAS01F,EAAM,MAAMQ,CAAU,IAAIR,EAAM,UAAU,MAAM,UAAU,KACxE11F,EAAI,QAAQ;AACrB;AAAA,MAEJ;AACA,MAAAgjG,GAAap8E,GAAMjpB,CAAI;AAAA,IACzB;AAAA,EACF;AACF;AACA,SAAS8kG,GAAiB77E,GAAM;AAC9B,MAAI,CAACA,EAAK,SAAU;AACpB,QAAM27E,IAAcT,GAAwB,SAASl7E,EAAK,KAAK;AAC/D,EAAI27E,KAAeA,EAAY,eAAe,MAAM,CAACA,EAAY,YAC/DS,GAAap8E,GAAM,EAAE;AACzB;AACA,SAAS87E,GAAiB97E,GAAMhQ,GAAOsrF,GAAcd,GAAqB;AACxE,MAAInuG;AACJ,MAAI,CAAC2zB,EAAK,SAAU,QAAO;AAC3B,QAAMq8E,KAAOhwG,IAAK2zB,EAAK,IAAI,cAAc,gBAAgB,OAAO3zB,IAAK,QAC/DsvG,IAAcT,GAAwB,SAASl7E,EAAK,KAAK;AAC/D,MAAI,CAAC27E,KAAeA,EAAY,gBAAgB,MAAMA,EAAY;AAChE,WAAO;AACT,QAAM5kG,IAAOipB,EAAK,MAAM,IAAI,OAAO27E,EAAY,YAAY,GACrDhQ,IAAQ2Q,GAAgBt8E,GAAM27E,EAAY,cAAc5kG,EAAK,KAAK;AACxE,EAAAipB,EAAK;AAAA,IACHA,EAAK,MAAM,GAAG,QAAQk7E,IAAyB;AAAA,MAC7C,aAAa,EAAE,QAAQlrF,EAAM,SAAS,YAAY27E,EAAK;AAAA,IAC7D,CAAK;AAAA,EACL;AACE,WAAS4Q,EAAOC,GAAQ;AACtB,IAAAH,EAAI,oBAAoB,WAAWE,CAAM,GACzCF,EAAI,oBAAoB,aAAarqE,CAAI;AACzC,UAAMyqE,IAAevB,GAAwB,SAASl7E,EAAK,KAAK;AAChE,IAAoCy8E,GAAa,aAC/CC;AAAA,MACE18E;AAAA,MACAy8E,EAAa;AAAA,MACbE,GAAaF,EAAa,UAAUD,GAAQlB,CAAY;AAAA,IAChE,GACMt7E,EAAK;AAAA,MACHA,EAAK,MAAM,GAAG,QAAQk7E,IAAyB,EAAE,aAAa,KAAI,CAAE;AAAA,IAC5E;AAAA,EAEE;AACA,WAASlpE,EAAKwqE,GAAQ;AACpB,QAAI,CAACA,EAAO,MAAO,QAAOD,EAAOC,CAAM;AACvC,UAAMC,IAAevB,GAAwB,SAASl7E,EAAK,KAAK;AAChE,QAAKy8E,KACDA,EAAa,UAAU;AACzB,YAAMG,IAAUD,GAAaF,EAAa,UAAUD,GAAQlB,CAAY;AACxE,MAAAuB;AAAA,QACE78E;AAAA,QACAy8E,EAAa;AAAA,QACbG;AAAA,QACApC;AAAA,MACR;AAAA,IACI;AAAA,EACF;AACA,SAAAqC;AAAA,IACE78E;AAAA,IACA27E,EAAY;AAAA,IACZhQ;AAAA,IACA6O;AAAA,EACJ,GACE6B,EAAI,iBAAiB,WAAWE,CAAM,GACtCF,EAAI,iBAAiB,aAAarqE,CAAI,GACtChiB,EAAM,eAAc,GACb;AACT;AACA,SAASssF,GAAgBt8E,GAAM0yE,GAAS,EAAE,SAAAzF,GAAS,UAAAE,EAAQ,GAAI;AAC7D,QAAMxB,IAAQwB,KAAYA,EAASA,EAAS,SAAS,CAAC;AACtD,MAAIxB,EAAO,QAAOA;AAClB,QAAMvvC,IAAMp8B,EAAK,SAAS0yE,CAAO;AAEjC,MAAIoK,IADS1gD,EAAI,KAAK,WAAWA,EAAI,MAAM,EACvB,aAAalrD,IAAQ+7F;AACzC,MAAIE;AACF,aAAS7+F,IAAI,GAAGA,IAAI2+F,GAAS3+F;AAC3B,MAAI6+F,EAAS7+F,CAAC,MACZwuG,KAAY3P,EAAS7+F,CAAC,GACtB4C;AAGN,SAAO4rG,IAAW5rG;AACpB;AACA,SAASgrG,GAAcp+F,GAAQ;AAC7B,SAAOA,KAAUA,EAAO,YAAY,QAAQA,EAAO,YAAY;AAC7D,IAAAA,IAASA,EAAO,aAAaA,EAAO,UAAU,SAAS,aAAa,IAAI,OAAOA,EAAO;AACxF,SAAOA;AACT;AACA,SAASq+F,GAASn8E,GAAMhQ,GAAOyrB,GAAM4/D,GAAa;AAChD,QAAM7vF,IAASiwB,KAAQ,UAAU,CAAC4/D,IAAcA,GAC1CpoD,IAAQjzB,EAAK,YAAY;AAAA,IAC7B,MAAMhQ,EAAM,UAAUxE;AAAA,IACtB,KAAKwE,EAAM;AAAA,EACf,CAAG;AACD,MAAI,CAACijC,EAAO,QAAO;AACnB,QAAM,EAAE,KAAArzC,EAAG,IAAKqzC,GACV67C,IAAQH,GAAW3uE,EAAK,MAAM,IAAI,QAAQpgB,CAAG,CAAC;AACpD,MAAI,CAACkvF,EAAO,QAAO;AACnB,MAAIrzD,KAAQ,QAAS,QAAOqzD,EAAM;AAClC,QAAM11F,IAAMsyF,GAAS,IAAIoD,EAAM,KAAK,EAAE,CAAC,GAAG1uF,IAAQ0uF,EAAM,MAAM,EAAE,GAC1Dt7F,IAAQ4F,EAAI,IAAI,QAAQ01F,EAAM,MAAM1uF,CAAK;AAC/C,SAAO5M,IAAQ4F,EAAI,SAAS,IAAI,KAAKgH,IAAQhH,EAAI,IAAI5F,IAAQ,CAAC;AAChE;AACA,SAASmpG,GAAajuB,GAAU1+D,GAAO+sF,GAAgB;AACrD,QAAMvxF,IAASwE,EAAM,UAAU0+D,EAAS;AACxC,SAAO,KAAK,IAAIquB,GAAgBruB,EAAS,aAAaljE,CAAM;AAC9D;AACA,SAAS4wF,GAAap8E,GAAMzzB,GAAO;AACjC,EAAAyzB,EAAK;AAAA,IACHA,EAAK,MAAM,GAAG,QAAQk7E,IAAyB,EAAE,WAAW3uG,EAAK,CAAE;AAAA,EACvE;AACA;AACA,SAASmwG,GAAkB18E,GAAMjpB,GAAM40F,GAAO;AAC5C,QAAMmD,IAAQ9uE,EAAK,MAAM,IAAI,QAAQjpB,CAAI,GACnC80B,IAAQijE,EAAM,KAAK,EAAE,GAAG11F,IAAMsyF,GAAS,IAAI7/D,CAAK,GAAGzrB,IAAQ0uF,EAAM,MAAM,EAAE,GACzEtC,IAAMpzF,EAAI,SAAS01F,EAAM,MAAM1uF,CAAK,IAAI0uF,EAAM,UAAU,MAAM,UAAU,GACxEhnD,IAAK9nB,EAAK,MAAM;AACtB,WAASsM,IAAM,GAAGA,IAAMlzB,EAAI,QAAQkzB,KAAO;AACzC,UAAM0wE,IAAW1wE,IAAMlzB,EAAI,QAAQozF;AACnC,QAAIlgE,KAAOlzB,EAAI,IAAI4jG,CAAQ,KAAK5jG,EAAI,IAAI4jG,IAAW5jG,EAAI,KAAK,EAAG;AAC/D,UAAMwG,IAAMxG,EAAI,IAAI4jG,CAAQ,GACtB1jG,IAAQuyB,EAAM,OAAOjsB,CAAG,EAAE,OAC1BpM,IAAQ8F,EAAM,WAAW,IAAI,IAAIkzF,IAAMpzF,EAAI,SAASwG,CAAG;AAC7D,QAAItG,EAAM,YAAYA,EAAM,SAAS9F,CAAK,KAAKm4F,EAAO;AACtD,UAAMwB,IAAW7zF,EAAM,WAAWA,EAAM,SAAS,UAAU2jG,GAAO3jG,EAAM,OAAO;AAC/E,IAAA6zF,EAAS35F,CAAK,IAAIm4F,GAClB7jD,EAAG,cAAc1nC,IAAQR,GAAK,MAAM,EAAE,GAAGtG,GAAO,UAAA6zF,GAAU;AAAA,EAC5D;AACA,EAAIrlD,EAAG,cAAY9nB,EAAK,SAAS8nB,CAAE;AACrC;AACA,SAAS+0D,GAAmB78E,GAAMjpB,GAAM40F,GAAO6O,GAAqB;AAClE,QAAM1L,IAAQ9uE,EAAK,MAAM,IAAI,QAAQjpB,CAAI,GACnC80B,IAAQijE,EAAM,KAAK,EAAE,GAAG1uF,IAAQ0uF,EAAM,MAAM,EAAE,GAC9CtC,IAAMd,GAAS,IAAI7/D,CAAK,EAAE,SAASijE,EAAM,MAAM1uF,CAAK,IAAI0uF,EAAM,UAAU,MAAM,UAAU;AAC9F,MAAI1yC,IAAMp8B,EAAK,SAAS8uE,EAAM,MAAM,EAAE,CAAC,EAAE;AACzC,SAAO1yC,KAAOA,EAAI,YAAY;AAC5B,IAAAA,IAAMA,EAAI;AAEZ,EAAKA,KACLq+C;AAAA,IACE5uE;AAAA,IACAuwB,EAAI;AAAA,IACJA;AAAA,IACAo+C;AAAA,IACAhO;AAAA,IACAb;AAAA,EACJ;AACA;AACA,SAASsR,GAAO,GAAG;AACjB,SAAO,MAAM,CAAC,EAAE,KAAK,CAAC;AACxB;AACA,SAASlB,GAAkBzgG,GAAOvE,GAAM;AACtC,MAAI1K;AACJ,QAAMojF,IAAc,CAAA,GACdqf,IAAQxzF,EAAM,IAAI,QAAQvE,CAAI,GAC9B80B,IAAQijE,EAAM,KAAK,EAAE;AAC3B,MAAI,CAACjjE;AACH,WAAOqxE,GAAe;AAExB,QAAM9jG,IAAMsyF,GAAS,IAAI7/D,CAAK,GACxBzrB,IAAQ0uF,EAAM,MAAM,EAAE,GACtBtC,IAAMpzF,EAAI,SAAS01F,EAAM,MAAM1uF,CAAK,IAAI0uF,EAAM,UAAU,MAAM,UAAU;AAC9E,WAASxiE,IAAM,GAAGA,IAAMlzB,EAAI,QAAQkzB,KAAO;AACzC,UAAM94B,IAAQg5F,IAAMlgE,IAAMlzB,EAAI;AAC9B,SAAKozF,KAAOpzF,EAAI,QAAQ,KAAKA,EAAI,IAAI5F,CAAK,KAAK4F,EAAI,IAAI5F,IAAQ,CAAC,OAAO84B,KAAO,KAAKlzB,EAAI,IAAI5F,CAAK,KAAK4F,EAAI,IAAI5F,IAAQ4F,EAAI,KAAK,IAAI;AAChI,YAAMs5F,IAAUt5F,EAAI,IAAI5F,CAAK,GACvBoM,IAAMQ,IAAQsyF,IAAU7mE,EAAM,OAAO6mE,CAAO,EAAE,WAAW,GACzDt2C,IAAM,SAAS,cAAc,KAAK;AACxC,MAAAA,EAAI,YAAY,yBACX/vD,IAAK6uG,GAAwB,SAAS5/F,CAAK,MAAM,QAAgBjP,EAAG,YACvEojF,EAAY;AAAA,QACV0tB,GAAY;AAAA,UACV/8F,IAAQsyF;AAAA,UACRtyF,IAAQsyF,IAAU7mE,EAAM,OAAO6mE,CAAO,EAAE;AAAA,UACxC;AAAA,YACE,OAAO;AAAA,UACrB;AAAA,QACA;AAAA,MACA,GAEMjjB,EAAY,KAAK0tB,GAAY,OAAOv9F,GAAKw8C,CAAG,CAAC;AAAA,IAC/C;AAAA,EACF;AACA,SAAO8gD,GAAe,OAAO5hG,EAAM,KAAKm0E,CAAW;AACrD;AAGA,SAAS2tB,GAAa;AAAA,EACpB,yBAAA1L,IAA0B;AAC5B,IAAI,IAAI;AACN,SAAO,IAAI2L,GAAQ;AAAA,IACjB,KAAK3O;AAAA;AAAA;AAAA;AAAA,IAIL,OAAO;AAAA,MACL,OAAO;AACL,eAAO;AAAA,MACT;AAAA,MACA,MAAM5mD,GAAI6M,GAAK;AACb,cAAM3V,IAAM8I,EAAG,QAAQ4mD,EAAe;AACtC,YAAI1vD,KAAO,KAAM,QAAOA,KAAO,KAAK,OAAOA;AAC3C,YAAI2V,KAAO,QAAQ,CAAC7M,EAAG,WAAY,QAAO6M;AAC1C,cAAM,EAAE,SAAAka,GAAS,KAAAjvD,EAAG,IAAKkoC,EAAG,QAAQ,UAAU6M,CAAG;AACjD,eAAOka,IAAU,OAAOjvD;AAAA,MAC1B;AAAA,IACN;AAAA,IACI,OAAO;AAAA,MACL,aAAasxF;AAAA,MACb,iBAAiB;AAAA,QACf,WAAW0I;AAAA,MACnB;AAAA,MACM,uBAAuB55E,GAAM;AAC3B,eAAO0uE,GAAgB,SAAS1uE,EAAK,KAAK,KAAK,OAAOA,EAAK,MAAM,YAAY;AAAA,MAC/E;AAAA,MACA,mBAAAqsD;AAAA,MACA,eAAA8sB;AAAA,MACA,aAAAO;AAAA,IACN;AAAA,IACI,kBAAkB96E,GAAG8xC,GAAUp1D,GAAO;AACpC,aAAOm2F;AAAA,QACLn2F;AAAA,QACA02F,GAAU12F,GAAOo1D,CAAQ;AAAA,QACzBghC;AAAA,MACR;AAAA,IACI;AAAA,EACJ,CAAG;AACH;AClqFA,IAAI/7B,KAAM,OAAO,YAAa,MAAc,YAAY,MACpDC,KAAQD,MAAOA,GAAI,aAAa,IAChCE,KAAU,cAAc,KAAKD,EAAK,GAClCE,KAAY,UAAU,KAAKF,EAAK,GAChCG,KAAU,wCAAwC,KAAKH,EAAK,GAC5DI,KAAK,CAAC,EAAEF,MAAaC,MAAWF,KAChCM,KAAS,CAACH,MAAM,CAAC,CAACL,MAAO,iBAAiB,KAAKA,GAAI,MAAM,GAGzD/3D,KAAM,IAAIqzD,GAAU,iBAAiB,GACrCqsC,KAAc,IACdriD,KAAO;AAAA,EACX,KAAEr9C;AAAAA,EACA,OAAO;AAAA,IACL,aAAa2/F;AAAA,IACb,iBAAiB;AAAA,MACf,kBAAkB,MAAM;AACtB,QAAAD,KAAc;AAAA,MAChB;AAAA,MACA,gBAAgB,MAAM;AACpB,QAAAA,KAAc;AAAA,MAChB;AAAA,IACN;AAAA,EACA;AACA;AACA,SAASC,GAAkBjiG,GAAO;AAChC,QAAM,EAAE,OAAAo6C,GAAO,KAAAC,GAAK,IAAApU,EAAE,IAAKjmC,EAAM;AACjC,MAAIgiG,MAAe5nD,EAAM,WAAWC,CAAG,GAAG;AACxC,UAAMmuB,IAAOuL,GAAW,OAAO9tC,GAAIi8D,IAAY;AAAA,MAC7C,iBAAiB;AAAA,MACjB,KAAK;AAAA,IACX,CAAK;AACD,WAAOjuB,GAAc,OAAOj0E,EAAM,KAAK,CAACwoE,CAAI,CAAC;AAAA,EAC/C;AACF;AACA,SAAS05B,GAAWx9E,GAAM;AACxB,QAAMmvD,IAAOnvD,EAAK,IAAI,cAAc,cAAc,MAAM;AACxD,SAAAmvD,EAAK,YAAY,+BACVA;AACT;AACA,IAAIsuB,KAAU,IAAI1sC,GAAOoF,KAASlb,KAAO,EAAA,KAAEr9C,GAAG,CAAE;ACpChD,SAASo5E,EAAS1xE,GAAQ4I,GAAM;AAC9B,gBAAO,OAAO5I,GAAQ;AAAA,IACpB,MAAM;AAAA,MACJ,SAAS;AAAA,MACT,GAAG4I;AAAA,IACT;AAAA,EACA,CAAG,GACM5I;AACT;AACA,MAAMo4F,KAAoB5c,GAAU,gBAAgB;AACpD9J,EAAS0mB,IAAmB;AAAA,EAC1B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAsBvd,GAAY,kBAAkB,CAACtI,OAAS;AAAA,EAClE,UAAU;AAAA,IACR,EAAE,KAAK,MAAK;AAAA,IACZ;AAAA,MACE,OAAO;AAAA,MACP,UAAU,CAACvrF,MAAUA,MAAU;AAAA,IACrC;AAAA,EACA;AAAA,EACE,OAAO,CAAC42C,MAAS,CAAC,OAAO20C,EAAI,IAAI4lB,GAAkB,GAAG,EAAEv6D,CAAI,CAAC;AAAA,EAC7D,eAAe;AAAA,IACb,OAAO,CAACtmC,MAASA,EAAK,SAAS;AAAA,IAC/B,QAAQ,CAACvB,GAAOuB,GAAMs+C,MAAa;AACjC,MAAA7/C,EAAM,SAAS6/C,CAAQ,GACvB7/C,EAAM,KAAKuB,EAAK,QAAQ,GACxBvB,EAAM,UAAU6/C,CAAQ;AAAA,IAC1B;AAAA,EACJ;AAAA,EACE,YAAY;AAAA,IACV,OAAO,CAAChY,MAASA,EAAK,KAAK,SAAS;AAAA,IACpC,QAAQ,CAAC7nC,GAAO6nC,MAAS;AACvB,MAAA7nC,EAAM,SAAS6nC,GAAM,QAAQ;AAAA,IAC/B;AAAA,EACJ;AACA,EAAE;AACF6zC,EAAS2mB,GAAoB,MAAM;AAAA,EACjC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD3mB,EAAS2mB,GAAoB,KAAK;AAAA,EAChC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAA6Bjf;AAAA,EACjC;AAAA,EACA,CAAC7G,MAAQ,MACAxjB,GAAWqpC,GAAoB,KAAK7lB,CAAG,CAAC;AAEnD;AACAd,EAAS4mB,IAA4B;AAAA,EACnC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAyBhf,GAAW,CAAC/G,MAClClhB;AAAA,EACL,IAAI,OAAO,yCAAyC;AAAA,EACpD+mC,GAAoB,KAAK7lB,CAAG;AAChC,CACC;AACDd,EAAS6mB,IAAwB;AAAA,EAC/B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAsBzd,GAAW,uBAAuB;AAAA,EAC5D,qBAAqB;AAAA,IACnB,WAAW;AAAA,IACX,SAAS,CAACvI,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAK+kB,GAA2B,GAAG;AAAA,IAC5D;AAAA,EACJ;AACA,CAAC;AACD5mB,EAAS8mB,GAAoB,KAAK;AAAA,EAChC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD9mB,EAAS8mB,GAAoB,WAAW;AAAA,EACtC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAiBzP,GAAW;AAAA,EAChC,YAAY;AAAA,EACZ,aAAa;AAAA,EACb,gBAAgB;AAAA,IACd,WAAW;AAAA,MACT,SAAS;AAAA,MACT,YAAY,CAAClyC,MAAQA,EAAI,MAAM,aAAa;AAAA,MAC5C,YAAY,CAAC7vD,GAAO+M,MAAU;AAC5B,QAAAA,EAAM,QAAQ,eAAe/M,KAAS,MAAM;AAAA,MAC9C;AAAA,IACN;AAAA,EACA;AACA,CAAC,GACKyxG,KAAc/d,GAAY,SAAS,OAAO;AAAA,EAC9C,GAAG8d,GAAe;AAAA,EAClB,SAAS;AAAA,EACT,mBAAmB;AAAA,EACnB,eAAe;AAAA,IACb,OAAO,CAAClhG,MAASA,EAAK,SAAS;AAAA,IAC/B,QAAQ,CAACvB,GAAOuB,GAAMjE,MAAS;AAC7B,YAAMkzB,IAAQjvB,EAAK,OACb0oB,IAAW1oB,EAAK,SAAS,IAAI,CAACwrC,GAAG/5C,OAAO;AAAA,QAC5C,GAAG+5C;AAAA,QACH,OAAAvc;AAAA,QACA,UAAUx9B,MAAM;AAAA,MACxB,EAAQ;AACF,MAAAgN,EAAM,SAAS1C,CAAI,GACnB0C,EAAM,KAAKiqB,CAAQ,GACnBjqB,EAAM,UAAS;AAAA,IACjB;AAAA,EACJ;AAAA,EACE,YAAY;AAAA,IACV,OAAO,CAACuB,MAASA,EAAK,KAAK,SAAS;AAAA,IACpC,QAAQ,CAACvB,GAAOuB,MAAS;AACvB,YAAMohG,IAAYphG,EAAK,QAAQ,YAAY;AAC3C,UAAI,CAACohG,EAAW;AAChB,YAAMnyE,IAAQ,CAAA;AACd,MAAAmyE,EAAU,QAAQ,CAAClnG,MAAS;AAC1B,QAAA+0B,EAAM,KAAK/0B,EAAK,MAAM,SAAS;AAAA,MACjC,CAAC,GACDuE,EAAM,SAAS,SAAS,QAAQ,EAAE,OAAAwwB,EAAK,CAAE,GACzCxwB,EAAM,KAAKuB,EAAK,OAAO,GACvBvB,EAAM,UAAS;AAAA,IACjB;AAAA,EACJ;AACA,EAAE;AACF07E,EAASgnB,GAAY,MAAM;AAAA,EACzB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDhnB,EAASgnB,GAAY,KAAK;AAAA,EACxB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAME,KAAuBje,GAAY,oBAAoB,OAAO;AAAA,EAClE,GAAG8d,GAAe;AAAA,EAClB,mBAAmB;AAAA,EACnB,SAAS;AAAA,EACT,UAAU,CAAC,EAAE,KAAK,sBAAsB;AAAA,EACxC,QAAQ;AACN,WAAO,CAAC,MAAM,EAAE,kBAAkB,GAAI,GAAI,CAAC;AAAA,EAC7C;AAAA,EACA,eAAe;AAAA,IACb,OAAO,CAAClhG,MAAS,GAAQA,EAAK,SAAS,cAAcA,EAAK;AAAA,IAC1D,QAAQ,CAACvB,GAAOuB,GAAMjE,MAAS;AAC7B,YAAMkzB,IAAQjvB,EAAK,OACb0oB,IAAW1oB,EAAK,SAAS,IAAI,CAACwrC,GAAG/5C,OAAO;AAAA,QAC5C,GAAG+5C;AAAA,QACH,OAAOvc,EAAMx9B,CAAC;AAAA,QACd,UAAUuO,EAAK;AAAA,MACvB,EAAQ;AACF,MAAAvB,EAAM,SAAS1C,CAAI,GACnB0C,EAAM,KAAKiqB,CAAQ,GACnBjqB,EAAM,UAAS;AAAA,IACjB;AAAA,EACJ;AAAA,EACE,YAAY;AAAA,IACV,OAAO,CAACuB,MAASA,EAAK,KAAK,SAAS;AAAA,IACpC,QAAQ,CAACvB,GAAOuB,MAAS;AACvB,MAAAvB,EAAM,SAAS,YAAY,QAAQ,EAAE,UAAU,IAAM,GACrDA,EAAM,KAAKuB,EAAK,OAAO,GACvBvB,EAAM,UAAS;AAAA,IACjB;AAAA,EACJ;AACA,EAAE;AACF07E,EAASknB,GAAqB,MAAM;AAAA,EAClC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDlnB,EAASknB,GAAqB,KAAK;AAAA,EACjC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAiBle,GAAY,aAAa,OAAO;AAAA,EACrD,GAAG8d,GAAe;AAAA,EAClB,mBAAmB;AAAA,EACnB,SAAS;AAAA,EACT,eAAe;AAAA,IACb,OAAO,CAAClhG,MAASA,EAAK,SAAS;AAAA,IAC/B,QAAQ,CAACvB,GAAOuB,GAAMjE,MAAS;AAC7B,YAAMkzB,IAAQjvB,EAAK,OACb0oB,IAAW1oB,EAAK,SAAS,IAAI,CAACwrC,GAAG/5C,OAAO;AAAA,QAC5C,GAAG+5C;AAAA,QACH,OAAOvc,EAAMx9B,CAAC;AAAA,MACtB,EAAQ;AACF,MAAAgN,EAAM,SAAS1C,CAAI,GACnB0C,EAAM,KAAKiqB,CAAQ,GACnBjqB,EAAM,UAAS;AAAA,IACjB;AAAA,EACJ;AAAA,EACE,YAAY;AAAA,IACV,OAAO,CAACuB,MAASA,EAAK,KAAK,SAAS;AAAA,IACpC,QAAQ,CAACvB,GAAOuB,MAAS;AACvB,MAAIA,EAAK,QAAQ,SAAS,MAG1BvB,EAAM,SAAS,UAAU,GACzBA,EAAM,KAAKuB,EAAK,OAAO,GACvBvB,EAAM,UAAS;AAAA,IACjB;AAAA,EACJ;AACA,EAAE;AACF07E,EAASmnB,GAAe,MAAM;AAAA,EAC5B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDnnB,EAASmnB,GAAe,KAAK;AAAA,EAC3B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAkBne,GAAY,cAAc,OAAO;AAAA,EACvD,GAAG8d,GAAe;AAAA,EAClB,mBAAmB;AAAA,EACnB,eAAe;AAAA,IACb,OAAO,CAAClhG,MAASA,EAAK,SAAS,eAAe,CAACA,EAAK;AAAA,IACpD,QAAQ,CAACvB,GAAOuB,GAAMjE,MAAS;AAC7B,YAAMkzB,IAAQjvB,EAAK;AACnB,MAAAvB,EAAM,SAAS1C,GAAM,EAAE,WAAWkzB,EAAK,CAAE,EAAE,SAASxwB,EAAM,OAAO,MAAM,SAAS,EAAE,KAAKuB,EAAK,QAAQ,EAAE,UAAS,EAAG,UAAS;AAAA,IAC7H;AAAA,EACJ;AAAA,EACE,YAAY;AAAA,IACV,OAAO,CAACA,MAASA,EAAK,KAAK,SAAS;AAAA,IACpC,QAAQ,CAACvB,GAAOuB,MAAS;AACvB,MAAAvB,EAAM,SAAS,WAAW,EAAE,KAAKuB,EAAK,OAAO,EAAE,UAAS;AAAA,IAC1D;AAAA,EACJ;AACA,EAAE;AACFm6E,EAASonB,GAAgB,MAAM;AAAA,EAC7B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDpnB,EAASonB,GAAgB,KAAK;AAAA,EAC5B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAoBpe,GAAY,gBAAgB,OAAO;AAAA,EAC3D,GAAG8d,GAAe;AAAA,EAClB,mBAAmB;AAAA,EACnB,eAAe;AAAA,IACb,OAAO,CAAClhG,MAASA,EAAK,SAAS,eAAe,CAAC,CAACA,EAAK;AAAA,IACrD,QAAQ,CAACvB,GAAOuB,GAAMjE,MAAS;AAC7B,YAAMkzB,IAAQjvB,EAAK;AACnB,MAAAvB,EAAM,SAAS1C,GAAM,EAAE,WAAWkzB,EAAK,CAAE,GACzCxwB,EAAM,SAASA,EAAM,OAAO,MAAM,SAAS,GAC3CA,EAAM,KAAKuB,EAAK,QAAQ,GACxBvB,EAAM,UAAS,GACfA,EAAM,UAAS;AAAA,IACjB;AAAA,EACJ;AAAA,EACE,YAAY;AAAA,IACV,OAAO,CAACuB,MAASA,EAAK,KAAK,SAAS;AAAA,IACpC,QAAQ,CAACvB,GAAOuB,MAAS;AACvB,MAAAvB,EAAM,SAAS,WAAW,GAC1BA,EAAM,KAAKuB,EAAK,OAAO,GACvBvB,EAAM,UAAS;AAAA,IACjB;AAAA,EACJ;AACA,EAAE;AACF07E,EAASqnB,GAAkB,MAAM;AAAA,EAC/B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDrnB,EAASqnB,GAAkB,KAAK;AAAA,EAC9B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,SAASC,GAAYxmB,GAAKymB,IAAY,GAAGC,IAAY,GAAG;AACtD,QAAM1nG,IAAQ,MAAM0nG,CAAS,EAAE,KAAK,CAAC,EAAE,IAAI,MAAMJ,GAAgB,KAAKtmB,CAAG,EAAE,cAAa,CAAE,GACpF2mB,IAAc,MAAMD,CAAS,EAAE,KAAK,CAAC,EAAE,IAAI,MAAMH,GAAkB,KAAKvmB,CAAG,EAAE,cAAa,CAAE,GAC5F56C,IAAO,MAAMqhE,CAAS,EAAE,KAAK,CAAC,EAAE;AAAA,IACpC,CAAC3/E,GAAGtwB,MAAMA,MAAM,IAAI4vG,GAAqB,KAAKpmB,CAAG,EAAE,OAAO,MAAM2mB,CAAW,IAAIN,GAAe,KAAKrmB,CAAG,EAAE,OAAO,MAAMhhF,CAAK;AAAA,EAC9H;AACE,SAAOknG,GAAY,KAAKlmB,CAAG,EAAE,OAAO,MAAM56C,CAAI;AAChD;AAyCA,SAASwhE,GAAW9lG,GAAM;AACxB,SAAO,CAACpF,GAAOoM,MAAQ,CAACkoC,MAAO;AAC7B,IAAAloC,IAAMA,KAAOkoC,EAAG,UAAU;AAC1B,UAAMshB,IAAOthB,EAAG,IAAI,QAAQloC,CAAG,GACzB2/E,IAAQ5nB;AAAA,MACZ,CAAC96D,MAASA,EAAK,KAAK,SAAS;AAAA,IACnC,EAAMusD,CAAI,GACAv9B,IAAQ0zD,IAAQ;AAAA,MACpB,MAAMA,EAAM;AAAA,MACZ,MAAMA,EAAM;AAAA,IAClB,IAAQ,QACEof,IAAiB/lG,MAAS;AAChC,QAAIizB,GAAO;AACT,YAAMzyB,IAAMsyF,GAAS,IAAI7/D,EAAM,IAAI;AACnC,UAAIr4B,KAAS,KAAKA,KAASmrG,IAAiBvlG,EAAI,SAASA,EAAI,QAAQ;AACnE,cAAMihC,IAAWjhC,EAAI;AAAA,UACnBulG,IAAiBnrG,IAAQ4F,EAAI,SAAS;AAAA,UACtCulG,IAAiBvlG,EAAI,QAAQ,IAAI5F;AAAA,UACjCq4B,EAAM;AAAA,QAChB,GACc2pE,IAAY1tD,EAAG,IAAI,QAAQjc,EAAM,OAAOwO,CAAQ,GAChDukE,IAAsBD,IAAiBhP,GAAc,eAAeA,GAAc,cAClF8F,IAAYr8F,EAAI;AAAA,UACpBulG,IAAiBnrG,IAAQ;AAAA,UACzBmrG,IAAiB,IAAInrG;AAAA,UACrBq4B,EAAM;AAAA,QAChB,GACc6pE,IAAa5tD,EAAG,IAAI,QAAQjc,EAAM,OAAO4pE,CAAS;AACxD,eAAOn+B;AAAA,UACLxvB,EAAG;AAAA,YACD82D,EAAoBpJ,GAAWE,CAAU;AAAA,UACrD;AAAA,QACA;AAAA,MACM;AAAA,IACF;AACA,WAAO5tD;AAAA,EACT;AACF;AACA,MAAM+2D,KAAYH,GAAW,KAAK,GAC5BI,KAAYJ,GAAW,KAAK;AAClC,SAASK,GAAoBjnB,GAAKhwC,GAAI,EAAE,KAAA1uC,GAAK,YAAAk2F,GAAY,OAAAzjE,EAAK,GAAIS,GAAK;AACrE,QAAMmqE,IAAS,MAAMnqE,CAAG,EAAE,KAAK,CAAC,EAAE,OAAO,CAACgjB,GAAK1wB,GAAGtwB,MACzCghD,IAAMzjB,EAAM,MAAMv9B,CAAC,EAAE,UAC3BghG,CAAU,GACPx4F,IAAQ,MAAMsC,EAAI,KAAK,EAAE,KAAK,CAAC,EAAE,IAAI,CAACwlB,GAAG4tE,MAAQ;AACrD,UAAMwS,IAAYnzE,EAAM,OAAOzyB,EAAI,IAAIozF,CAAG,CAAC;AAC3C,WAAO4R,GAAgB,KAAKtmB,CAAG,EAAE,cAAc,EAAE,WAAWknB,GAAW,MAAM,WAAW;AAAA,EAC1F,CAAC;AACD,SAAAl3D,EAAG,OAAO2uD,GAAQ0H,GAAe,KAAKrmB,CAAG,EAAE,OAAO,MAAMhhF,CAAK,CAAC,GACvDgxC;AACT;AACA,SAASm3D,GAAmBvvC,GAAW;AACrC,QAAM7jC,IAAQunE,GAAU1jC,EAAU,KAAK;AACvC,MAAI,CAAC7jC,EAAO;AACZ,QAAMzyB,IAAMsyF,GAAS,IAAI7/D,EAAM,IAAI;AAOnC,SANczyB,EAAI,YAAY;AAAA,IAC5B,MAAM;AAAA,IACN,OAAOA,EAAI;AAAA,IACX,KAAK;AAAA,IACL,QAAQA,EAAI;AAAA,EAChB,CAAG,EACY,IAAI,CAACkuE,MAAY;AAC5B,UAAMzqE,IAAOgvB,EAAM,KAAK,OAAOy7C,CAAO,GAChC1nE,IAAM0nE,IAAUz7C,EAAM;AAC5B,WAAO,EAAE,KAAAjsB,GAAK,OAAOA,IAAM,GAAG,MAAA/C,EAAI;AAAA,EACpC,CAAC;AACH;AACA,SAASqiG,GAAYp3D,GAAI;AACvB,QAAMhxC,IAAQmoG,GAAmBn3D,EAAG,SAAS;AAC7C,MAAIhxC,KAASA,EAAM,CAAC,GAAG;AACrB,UAAM4+F,IAAa5tD,EAAG,IAAI,QAAQhxC,EAAM,CAAC,EAAE,GAAG,GACxC9I,IAAO8I,EAAMA,EAAM,SAAS,CAAC;AACnC,QAAI9I,GAAM;AACR,YAAMwnG,IAAY1tD,EAAG,IAAI,QAAQ95C,EAAK,GAAG;AACzC,aAAOspE,GAAQxvB,EAAG,aAAa,IAAI6nD,GAAc6F,GAAWE,CAAU,CAAC,CAAC;AAAA,IAC1E;AAAA,EACF;AACA,SAAO5tD;AACT;AACA,MAAMq3D,KAA2BxgB;AAAA,EAC/B;AAAA,EACA,MAAM,MAAM4Y,GAAa,EAAE;AAC7B;AACAvgB,EAASmoB,IAA0B;AAAA,EACjC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAA2BzgB;AAAA,EAC/B;AAAA,EACA,MAAM,MAAM4Y,GAAa,CAAC;AAC5B;AACAvgB,EAASooB,IAA0B;AAAA,EACjC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMtsE,KAAY6rD;AAAA,EAChB;AAAA,EACA,CAAC7G,MAAQ,MAAM,CAACx8E,GAAO61D,MAAa;AAClC,QAAI,CAACy9B,GAAUtzF,CAAK,EAAG,QAAO;AAC9B,UAAM,EAAE,OAAAsyD,MAAUtyD,EAAM,WAClBuwB,IAAQ6rC,GAAmB9J,GAAOowC,GAAY,KAAKlmB,CAAG,CAAC;AAC7D,QAAI,CAACjsD,EAAO,QAAO;AACnB,UAAM,EAAE,IAAA0V,EAAE,IAAK1V,GACTic,IAAKxsC,EAAM,GAAG;AAAA,MAClBimC;AAAA,MACAA;AAAA,MACAwiD,GAAgB,KAAKjM,CAAG,EAAE,cAAa;AAAA,IAC7C;AACI,WAAAhwC,EAAG,aAAa4lB,EAAU,KAAK5lB,EAAG,IAAI,QAAQvG,CAAE,GAAG,CAAC,CAAC,EAAE,eAAc,GACrE4vB,IAAWrpB,CAAE,GACN;AAAA,EACT;AACF;AACAkvC,EAASlkD,IAAW;AAAA,EAClB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMusE,KAAqB1gB;AAAA,EACzB;AAAA,EACA,CAAC7G,MAAQ,CAAC,EAAE,KAAAxrD,GAAK,KAAAkgE,EAAG,IAAK,OAAO,CAAClxF,GAAO61D,MAAa;AACnD,UAAM,EAAE,WAAAzB,GAAW,IAAA5nB,EAAE,IAAKxsC,GACpB,EAAE,MAAA6hB,EAAI,IAAKuyC,GACX7jC,IAAQyyE,GAAYxmB,GAAKxrD,GAAKkgE,CAAG,GACjC/Q,IAAM3zC,EAAG,qBAAqBjc,CAAK,GACnCkjC,IAAMrB,EAAU,SAAS+tB,EAAI,IAAI,QAAQt+D,CAAI,GAAG,GAAG,EAAI;AAC7D,WAAI4xC,KAAK0sB,EAAI,aAAa1sB,CAAG,GAC7BoC,IAAWsqB,CAAG,GACP;AAAA,EACT;AACF;AACAzE,EAASqoB,IAAoB;AAAA,EAC3B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAiB3gB;AAAA,EACrB;AAAA,EACA,MAAM,CAAC,EAAE,MAAAxhE,GAAM,IAAAokB,GAAI,KAAA3hC,EAAG,IAAK,CAAA,MAAOm2F,GAAa;AAAA,IAC7C,MAAM54E,KAAQ;AAAA,IACd,IAAIokB,KAAM;AAAA,IACV,KAAA3hC;AAAA,EACJ,CAAG;AACH;AACAo3E,EAASsoB,IAAgB;AAAA,EACvB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAiB5gB;AAAA,EACrB;AAAA,EACA,MAAM,CAAC,EAAE,MAAAxhE,GAAM,IAAAokB,GAAI,KAAA3hC,EAAG,IAAK,CAAA,MAAO21F,GAAgB;AAAA,IAChD,MAAMp4E,KAAQ;AAAA,IACd,IAAIokB,KAAM;AAAA,IACV,KAAA3hC;AAAA,EACJ,CAAG;AACH;AACAo3E,EAASuoB,IAAgB;AAAA,EACvB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAmB7gB;AAAA,EACvB;AAAA,EACA,MAAM,CAACxF,IAAU,EAAE,OAAO,EAAC,MAAO,CAAC79E,GAAO61D,MAAa;AACrD,UAAM,EAAE,IAAArpB,EAAE,IAAKxsC;AAEf,WAAO,EADQ61D,IAAW0tC,GAAU1lB,EAAQ,OAAOA,EAAQ,GAAG,EAAErxC,CAAE,CAAC;AAAA,EAErE;AACF;AACAkvC,EAASwoB,IAAkB;AAAA,EACzB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAmB9gB;AAAA,EACvB;AAAA,EACA,MAAM,CAACxF,IAAU,EAAE,OAAO,EAAC,MAAO,CAAC79E,GAAO61D,MAAa;AACrD,UAAM,EAAE,IAAArpB,EAAE,IAAKxsC;AAEf,WAAO,EADQ61D,IAAW2tC,GAAU3lB,EAAQ,OAAOA,EAAQ,GAAG,EAAErxC,CAAE,CAAC;AAAA,EAErE;AACF;AACAkvC,EAASyoB,IAAkB;AAAA,EACzB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAqB/gB;AAAA,EACzB;AAAA,EACA,MAAM,MAAM,CAACrjF,GAAO61D,MAAa;AAC/B,UAAM,EAAE,IAAArpB,EAAE,IAAKxsC;AAEf,WAAO,EADQ61D,IAAW+tC,GAAYp3D,CAAE,CAAC;AAAA,EAE3C;AACF;AACAkvC,EAAS0oB,IAAoB;AAAA,EAC3B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAA6BhhB;AAAA,EACjC;AAAA,EACA,MAAM,MAAM,CAACrjF,GAAO61D,MAAa;AAC/B,UAAM,EAAE,WAAAzB,EAAS,IAAKp0D;AACtB,QAAI,EAAEo0D,aAAqBigC,IAAgB,QAAO;AAClD,UAAMiQ,IAAQlwC,EAAU,eAAc,GAChCmwC,IAAQnwC,EAAU,eAAc;AACtC,WAAIkwC,KAASC,IAAcpI,GAAYn8F,GAAO61D,CAAQ,IAClD0uC,IAActJ,GAAaj7F,GAAO61D,CAAQ,IAClCulC,GAAUp7F,GAAO61D,CAAQ;AAAA,EACvC;AACF;AACA6lB,EAAS2oB,IAA4B;AAAA,EACnC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMG,KAAsBnhB;AAAA,EAC1B;AAAA,EACA,MAAM,MAAMwX;AACd;AACAnf,EAAS8oB,IAAqB;AAAA,EAC5B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAqBphB;AAAA,EACzB;AAAA,EACA,MAAM,MAAMyX;AACd;AACApf,EAAS+oB,IAAoB;AAAA,EAC3B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAsBrhB;AAAA,EAC1B;AAAA,EACA,CAAC7G,MAAQ,MAAM,CAACx8E,GAAO61D,MAAa;AAClC,QAAI,CAACy9B,GAAUtzF,CAAK,EAAG,QAAO;AAC9B,QAAI61D,GAAU;AACZ,YAAMwJ,IAAOq7B,GAAa16F,CAAK;AAC/B,MAAA61D,EAAS4tC,GAAoBjnB,GAAKx8E,EAAM,IAAIq/D,GAAMA,EAAK,GAAG,CAAC;AAAA,IAC7D;AACA,WAAO;AAAA,EACT;AACF;AACAqc,EAASgpB,IAAqB;AAAA,EAC5B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAqBthB;AAAA,EACzB;AAAA,EACA,CAAC7G,MAAQ,MAAM,CAACx8E,GAAO61D,MAAa;AAClC,QAAI,CAACy9B,GAAUtzF,CAAK,EAAG,QAAO;AAC9B,QAAI61D,GAAU;AACZ,YAAMwJ,IAAOq7B,GAAa16F,CAAK;AAC/B,MAAA61D,EAAS4tC,GAAoBjnB,GAAKx8E,EAAM,IAAIq/D,GAAMA,EAAK,MAAM,CAAC;AAAA,IAChE;AACA,WAAO;AAAA,EACT;AACF;AACAqc,EAASipB,IAAoB;AAAA,EAC3B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAkBvhB;AAAA,EACtB;AAAA,EACA,MAAM,CAACwhB,IAAY,WAAWxJ,GAAY,aAAawJ,CAAS;AAClE;AACAnpB,EAASkpB,IAAiB;AAAA,EACxB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAME,KAAuBvhB;AAAA,EAC3B,CAAC/G,MAAQ,IAAI9iB;AAAA,IACX;AAAA,IACA,CAAC15D,GAAO7E,GAAO2J,GAAOO,MAAQ;AAC5B,YAAM41C,IAASj7C,EAAM,IAAI,QAAQ8E,CAAK;AACtC,UAAI,CAACm2C,EAAO,KAAK,EAAE,EAAE;AAAA,QACnBA,EAAO,MAAM,EAAE;AAAA,QACfA,EAAO,WAAW,EAAE;AAAA,QACpBynD,GAAY,KAAKlmB,CAAG;AAAA,MAC5B;AACQ,eAAO;AACT,YAAMxrD,IAAM,KAAK,IAAI,OAAO71B,EAAM,QAAQ,OAAO,CAAC,GAAG,CAAC,GAChD67F,IAAYgM,GAAYxmB,GAAKxrD,GAAK,OAAO71B,EAAM,QAAQ,GAAG,CAAC,GAC3DqxC,IAAKxsC,EAAM,GAAG,iBAAiB8E,GAAOO,GAAK2xF,CAAS;AAC1D,aAAOxqD,EAAG,aAAaqmB,EAAc,OAAOrmB,EAAG,KAAK1nC,IAAQ,CAAC,CAAC,EAAE,eAAc;AAAA,IAChF;AAAA,EACJ;AACA;AACA42E,EAASopB,IAAsB;AAAA,EAC7B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAiBphB,GAAW,CAACnH,OAAS;AAAA,EAC1C,KAAK,CAAC9mE,GAAOsvF,GAAOzjB,MAAgB;AAClC,QAAIA;AACF,aAAO7rE;AAET,QAAIsU,IAAWtU,EAAM;AACrB,WAAAA,EAAM,QAAQ,QAAQ,CAACnU,GAAM0jG,GAAS/sG,MAAU;AAC9C,UAAIqJ,GAAM,SAASmhG,GAAY,KAAKlmB,CAAG;AACrC;AAEF,YAAMymB,IAAY1hG,EAAK,YACjB2hG,IAAY3hG,EAAK,WAAW,cAAc;AAChD,UAAI0hG,MAAc,KAAKC,MAAc,GAAG;AACtC,QAAAl5E,IAAWA,EAAS;AAAA,UAClB9xB;AAAA,UACAuwF,GAAgB,KAAKjM,CAAG,EAAE,OAAM;AAAA,QAC1C;AACQ;AAAA,MACF;AACA,YAAM0oB,IAAY3jG,EAAK;AAEvB,UAAI,EADuB2hG,IAAY,KAAKgC,KAAaA,EAAU,eAAe;AAEhF;AAEF,YAAM/B,IAAc,MAAMD,CAAS,EAAE,KAAK,CAAC,EAAE,IAAI,MAAMH,GAAkB,KAAKvmB,CAAG,EAAE,cAAa,CAAE,GAC5F2oB,IAAa,IAAI3vD,EAAMmD,EAAS,KAAKwqD,CAAW,GAAG,GAAG,CAAC,GACvDiC,IAAeF,EAAU,QAAQ,GAAG,GAAGC,CAAU,GACjDnL,IAAWz4F,EAAK;AAAA,QACpB;AAAA,QACA2jG,EAAU;AAAA,QACV,IAAI1vD,EAAMmD,EAAS,KAAKysD,CAAY,GAAG,GAAG,CAAC;AAAA,MACnD;AACM,MAAAp7E,IAAWA,EAAS,aAAa9xB,GAAO8hG,CAAQ;AAAA,IAClD,CAAC,GACM,IAAIxkD,EAAMmD,EAAS,KAAK3uB,CAAQ,GAAGtU,EAAM,WAAWA,EAAM,OAAO;AAAA,EAC1E;AACF,EAAE;AACFgmE,EAASqpB,IAAgB;AAAA,EACvB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMM,KAActgB,GAAW,eAAe;AAAA,EAC5C,UAAU;AAAA,IACR,UAAU;AAAA,IACV,WAAW,CAAC,SAAS,KAAK;AAAA,IAC1B,SAAS,CAACvI,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAKumB,GAAyB,GAAG;AAAA,IAC1D;AAAA,EACJ;AAAA,EACE,UAAU;AAAA,IACR,WAAW,CAAC,SAAS,WAAW;AAAA,IAChC,SAAS,CAACtnB,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAKsmB,GAAyB,GAAG;AAAA,IAC1D;AAAA,EACJ;AAAA,EACE,WAAW;AAAA,IACT,WAAW,CAAC,aAAa,OAAO;AAAA,IAChC,SAAS,CAACrnB,MAAQ;AAChB,YAAMe,IAAYf,EAAI,IAAIwB,EAAW;AACrC,aAAO,MAAMT,EAAU,KAAK/lD,GAAU,GAAG;AAAA,IAC3C;AAAA,EACJ;AACA,CAAC;AACDkkD,EAAS2pB,GAAY,KAAK;AAAA,EACxB,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD3pB,EAAS2pB,GAAY,WAAW;AAAA,EAC9B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAO,uBACPC,KAAa,sBACbC,KAA2B7gB;AAAA,EAC/B;AAAA,EACA,OAAO;AAAA,IACL,OAAO;AAAA,IACP,SAAS;AAAA,IACT,UAAU;AAAA,IACV,OAAO;AAAA,MACL,OAAO;AAAA,QACL,SAAS;AAAA,QACT,UAAU;AAAA,MAClB;AAAA,IACA;AAAA,IACI,UAAU;AAAA,MACR;AAAA,QACE,KAAK,iBAAiB2gB,EAAI;AAAA,QAC1B,UAAU,CAACxkD,MAAQ;AACjB,cAAI,EAAEA,aAAe,aAAc,OAAMzM,GAAmByM,CAAG;AAC/D,iBAAO;AAAA,YACL,OAAOA,EAAI,QAAQ;AAAA,UAC/B;AAAA,QACQ;AAAA,QACA,gBAAgB;AAAA,MACxB;AAAA,IACA;AAAA,IACI,OAAO,CAACv/C,MAAS;AACf,YAAM+b,IAAQ/b,EAAK,MAAM;AACzB,aAAO;AAAA,QACL;AAAA,QACA;AAAA;AAAA,UAEE,cAAc+b;AAAA,UACd,aAAagoF;AAAA,QACvB;AAAA,QACQ,CAAC,MAAMhoF,CAAK;AAAA,QACZ,CAAC,MAAM,CAAC;AAAA,MAChB;AAAA,IACI;AAAA,IACA,eAAe;AAAA,MACb,OAAO,CAAC,EAAE,MAAAhgB,EAAI,MAAOA,MAASioG;AAAA,MAC9B,QAAQ,CAACvlG,GAAOuB,GAAMjE,MAAS;AAC7B,QAAA0C,EAAM,SAAS1C,GAAM;AAAA,UACnB,OAAOiE,EAAK;AAAA,QACtB,CAAS,EAAE,KAAKA,EAAK,QAAQ,EAAE,UAAS;AAAA,MAClC;AAAA,IACN;AAAA,IACI,YAAY;AAAA,MACV,OAAO,CAACA,MAASA,EAAK,KAAK,SAAS+jG;AAAA,MACpC,QAAQ,CAACtlG,GAAOuB,MAAS;AACvB,QAAAvB,EAAM,SAASulG,IAAY,QAAQ;AAAA,UACjC,OAAOhkG,EAAK,MAAM;AAAA,UAClB,YAAYA,EAAK,MAAM;AAAA,QACjC,CAAS,EAAE,KAAKA,EAAK,OAAO,EAAE,UAAS;AAAA,MACjC;AAAA,IACN;AAAA,EACA;AACA;AACAm6E,EAAS8pB,GAAyB,KAAK;AAAA,EACrC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD9pB,EAAS8pB,GAAyB,MAAM;AAAA,EACtC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMnoG,KAAK,sBACLooG,KAA0B9gB;AAAA,EAC9B;AAAA,EACA,OAAO;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,MACL,OAAO;AAAA,QACL,SAAS;AAAA,QACT,UAAU;AAAA,MAClB;AAAA,IACA;AAAA,IACI,UAAU;AAAA,MACR;AAAA,QACE,KAAK,kBAAkBtnF,EAAE;AAAA,QACzB,UAAU,CAACyjD,MAAQ;AACjB,cAAI,EAAEA,aAAe,aAAc,OAAMzM,GAAmByM,CAAG;AAC/D,iBAAO;AAAA,YACL,OAAOA,EAAI,QAAQ;AAAA,UAC/B;AAAA,QACQ;AAAA,MACR;AAAA,IACA;AAAA,IACI,OAAO,CAACv/C,MAAS;AACf,YAAM+b,IAAQ/b,EAAK,MAAM;AACzB,aAAO;AAAA,QACL;AAAA,QACA;AAAA;AAAA,UAEE,cAAc+b;AAAA,UACd,aAAajgB;AAAA,QACvB;AAAA,QACQigB;AAAA,MACR;AAAA,IACI;AAAA,IACA,eAAe;AAAA,MACb,OAAO,CAAC,EAAE,MAAAhgB,EAAI,MAAOA,MAAS;AAAA,MAC9B,QAAQ,CAAC0C,GAAOuB,GAAMjE,MAAS;AAC7B,QAAA0C,EAAM,QAAQ1C,GAAM;AAAA,UAClB,OAAOiE,EAAK;AAAA,QACtB,CAAS;AAAA,MACH;AAAA,IACN;AAAA,IACI,YAAY;AAAA,MACV,OAAO,CAACA,MAASA,EAAK,KAAK,SAASlE;AAAA,MACpC,QAAQ,CAAC2C,GAAOuB,MAAS;AACvB,QAAAvB,EAAM,QAAQ,qBAAqB,QAAQ,QAAQ;AAAA,UACjD,OAAOuB,EAAK,MAAM;AAAA,UAClB,YAAYA,EAAK,MAAM;AAAA,QACjC,CAAS;AAAA,MACH;AAAA,IACN;AAAA,EACA;AACA;AACAm6E,EAAS+pB,GAAwB,KAAK;AAAA,EACpC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD/pB,EAAS+pB,GAAwB,MAAM;AAAA,EACrC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAA8B1Z,GAAe;AAAA,EACjD,CAACn3B,MACQ,CAAC2nB,MAAQ;AACd,UAAMmpB,IAAa9wC,EAAK2nB,CAAG;AAC3B,WAAO;AAAA,MACL,GAAGmpB;AAAA,MACH,OAAO;AAAA,QACL,GAAGA,EAAW;AAAA,QACd,SAAS;AAAA,UACP,SAAS;AAAA,UACT,UAAU;AAAA,QACtB;AAAA,MACA;AAAA,MACQ,UAAU;AAAA,QACR;AAAA,UACE,KAAK;AAAA,UACL,UAAU,CAAC7kD,MAAQ;AACjB,gBAAI,EAAEA,aAAe,aAAc,OAAMzM,GAAmByM,CAAG;AAC/D,mBAAO;AAAA,cACL,OAAOA,EAAI,QAAQ;AAAA,cACnB,UAAUA,EAAI,QAAQ;AAAA,cACtB,QAAQA,EAAI,QAAQ;AAAA,cACpB,SAASA,EAAI,QAAQ,UAAUA,EAAI,QAAQ,YAAY,SAAS;AAAA,YAChF;AAAA,UACY;AAAA,QACZ;AAAA,QACU,GAAG6kD,GAAY,YAAY,CAAA;AAAA,MACrC;AAAA,MACQ,OAAO,CAACpkG,MACFokG,EAAW,SAASpkG,EAAK,MAAM,WAAW,OACrCokG,EAAW,MAAMpkG,CAAI,IACvB;AAAA,QACL;AAAA,QACA;AAAA,UACE,kBAAkB;AAAA,UAClB,cAAcA,EAAK,MAAM;AAAA,UACzB,kBAAkBA,EAAK,MAAM;AAAA,UAC7B,eAAeA,EAAK,MAAM;AAAA,UAC1B,gBAAgBA,EAAK,MAAM;AAAA,QACzC;AAAA,QACY;AAAA,MACZ;AAAA,MAEQ,eAAe;AAAA,QACb,OAAO,CAAC,EAAE,MAAAjE,EAAI,MAAOA,MAAS;AAAA,QAC9B,QAAQ,CAAC0C,GAAOuB,GAAMjE,MAAS;AAC7B,cAAIiE,EAAK,WAAW,MAAM;AACxB,YAAAokG,EAAW,cAAc,OAAO3lG,GAAOuB,GAAMjE,CAAI;AACjD;AAAA,UACF;AACA,gBAAMggB,IAAQ/b,EAAK,SAAS,OAAO,GAAGA,EAAK,KAAK,MAAM,KAChDqkG,IAAUrkG,EAAK,WAAW,OAAO,EAAQA,EAAK,UAAW,MACzD0qF,IAAW1qF,EAAK,SAAS,OAAO,YAAY,UAC5CkgC,IAASlgC,EAAK,UAAU,OAAO,GAAGA,EAAK,MAAM,KAAK;AACxD,UAAAvB,EAAM,SAAS1C,GAAM,EAAE,OAAAggB,GAAO,UAAA2uE,GAAU,QAAAxqD,GAAQ,SAAAmkE,GAAS,GACzD5lG,EAAM,KAAKuB,EAAK,QAAQ,GACxBvB,EAAM,UAAS;AAAA,QACjB;AAAA,MACV;AAAA,MACQ,YAAY;AAAA,QACV,OAAO,CAACuB,MAASA,EAAK,KAAK,SAAS;AAAA,QACpC,QAAQ,CAACvB,GAAOuB,MAAS;AACvB,cAAIA,EAAK,MAAM,WAAW,MAAM;AAC9B,YAAAokG,EAAW,WAAW,OAAO3lG,GAAOuB,CAAI;AACxC;AAAA,UACF;AACA,gBAAM+b,IAAQ/b,EAAK,MAAM,OACnB0qF,IAAW1qF,EAAK,MAAM,UACtBkgC,IAASlgC,EAAK,MAAM,WAAW,QAC/BqkG,IAAUrkG,EAAK,MAAM;AAC3B,UAAAvB,EAAM,SAAS,YAAY,QAAQ;AAAA,YACjC,OAAAsd;AAAA,YACA,UAAA2uE;AAAA,YACA,QAAAxqD;AAAA,YACA,SAAAmkE;AAAA,UACd,CAAa,GACD5lG,EAAM,KAAKuB,EAAK,OAAO,GACvBvB,EAAM,UAAS;AAAA,QACjB;AAAA,MACV;AAAA,IACA;AAAA,EACI;AAEJ;AACA07E,EAASgqB,GAA4B,MAAM;AAAA,EACzC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDhqB,EAASgqB,GAA4B,KAAK;AAAA,EACxC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMG,KAA0BtiB,GAAW,MAClC,IAAI7pB;AAAA,EACT;AAAA,EACA,CAAC15D,GAAO7E,GAAO2J,GAAOO,MAAQ;AAC5B,UAAMf,IAAMtE,EAAM,IAAI,QAAQ8E,CAAK;AACnC,QAAI+kB,IAAQ,GACRtoB,IAAO+C,EAAI,KAAKulB,CAAK;AACzB,WAAOtoB,KAAQA,EAAK,KAAK,SAAS;AAChC,MAAAsoB,KACAtoB,IAAO+C,EAAI,KAAKulB,CAAK;AAEvB,QAAI,CAACtoB,KAAQA,EAAK,MAAM,WAAW,KAAM,QAAO;AAChD,UAAMqkG,IAAkBzqG,EAAM,QAAQ,YAAY,KAC5C2qG,IAASxhG,EAAI,OAAOulB,CAAK,GACzB2iB,IAAKxsC,EAAM;AACjB,WAAAwsC,EAAG,YAAY1nC,GAAOO,CAAG,EAAE,cAAcygG,GAAQ,QAAQ;AAAA,MACvD,GAAGvkG,EAAK;AAAA,MACR,SAAAqkG;AAAA,IACR,CAAO,GACMp5D;AAAA,EACT;AACJ,CACC;AACDkvC,EAASmqB,IAAyB;AAAA,EAChC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAM7oC,KAAS;AAAA,EACbwlC;AAAA,EACA6C;AACF,EAAE,KAAI,GACA1Y,KAAa;AAAA,EACjBmY;AAAA,EACAe;AACF,GACMjZ,KAAiB,CAAC2V,EAAsB,GACxCwD,KAAa,CAAChB,EAAc,GAC5BiB,KAAuB7hB,GAAO,MAAMge,EAAO;AACjDzmB,EAASsqB,IAAsB;AAAA,EAC7B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAuB9hB,GAAO,MAAM2b,GAAe,CAAA,CAAE,CAAC;AAC5DpkB,EAASuqB,IAAsB;AAAA,EAC7B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAqB/hB;AAAA,EACzB,MAAM2d,GAAa,EAAE,yBAAyB,GAAI,CAAE;AACtD;AACApmB,EAASwqB,IAAoB;AAAA,EAC3B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMC,KAAkB1gB,GAAQ,aAAa,MAAM2gB,EAAS;AAC5D1qB,EAASyqB,GAAgB,QAAQ;AAAA,EAC/B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACDzqB,EAASyqB,GAAgB,SAAS;AAAA,EAChC,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAME,KAAY,IAAI1wC,GAAU,kCAAkC;AAClE,SAAS2wC,GAAc/kG,GAAMsD,GAAQ;AACnC,MAAI3M,IAAQ;AACZ,SAAA2M,EAAO,QAAQ,CAAC5G,GAAOgnG,GAASjyG,MAAM;AACpC,IAAIiL,MAAUsD,MAAMrJ,IAAQlF;AAAA,EAC9B,CAAC,GACMkF;AACT;AACA,MAAMquG,KAAuBpiB,GAAO,MAC3B,IAAI1uB,GAAO;AAAA,EAChB,KAAK4wC;AAAA,EACL,mBAAmB,CAAClmB,GAAK/qB,GAAUp1D,MAAU;AAC3C,QAAIwsC;AACJ,UAAM3/B,IAAQ,CAACtL,GAAM+C,MAAQ;AAE3B,UADKkoC,MAAIA,IAAKxsC,EAAM,KAChBuB,EAAK,KAAK,SAAS,aAAc;AACrC,YAAMusD,IAAO9tD,EAAM,IAAI,QAAQsE,CAAG,GAC5By9B,IAAW+rB,EAAK,KAAKA,EAAK,KAAK,GAE/B04C,IADQ14C,EAAK,KAAKA,EAAK,QAAQ,CAAC,EACT;AAC7B,UAAI,CAAC04C,EAAgB;AACrB,YAAMtuG,IAAQouG,GAAc/kG,GAAMwgC,CAAQ,GACpCqyD,IAAaoS,EAAe,WAAWtuG,CAAK;AAClD,UAAI,CAACk8F,EAAY;AACjB,YAAM5jE,IAAQ4jE,EAAW,MAAM,WACzBqS,IAAellG,EAAK,MAAM;AAChC,MAAIivB,MAAUi2E,KACdj6D,EAAG,cAAcloC,GAAK,QAAQ,EAAE,GAAG/C,EAAK,OAAO,WAAWivB,GAAO;AAAA,IACnE;AACA,WAAI4kC,EAAS,QAAQp1D,EAAM,OAAKA,EAAM,IAAI,YAAY6M,CAAK,GACpD2/B;AAAA,EACT;AACJ,CAAG,CACF;AACDkvC,EAAS6qB,IAAsB;AAAA,EAC7B,aAAa;AAAA,EACb,OAAO;AACT,CAAC;AACD,MAAMt8F,KAAU;AAAA,EACds8F;AAAA,EACAP;AAAA,EACAG;AAAA,EACAD;AACF,EAAE,KAAI,GACAx9D,KAAS;AAAA,EACbg9D;AAAA,EACAhD;AAAA,EACAE;AAAA,EACAC;AAAA,EACAE;AAAA,EACAD;AAAA,EACA0C;AAAA,EACAC;AAAA,EACArD;AAAA,EACAC;AACF,EAAE,KAAI,GACAjpC,KAAW;AAAA,EACf0qC;AAAA,EACAD;AAAA,EACArsE;AAAA,EACAusE;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAK;AAAA,EACAC;AAAA,EACAH;AAAA,EACAC;AAAA,EACAG;AAAA,EACAtC;AACF,GACM9hE,KAAM;AAAA,EACVkI;AAAA,EACAikD;AAAA,EACAoZ;AAAA,EACAnZ;AAAA,EACA5vB;AAAA,EACA5D;AAAA,EACAnvD;AACF,EAAE,KAAI;AC7hCN,IAAIy8F,KAAa,OAAO,UAAU,YAAY,UAAU,OAAO,WAAW,UAAU,QCEhFC,KAAW,OAAO,QAAQ,YAAY,QAAQ,KAAK,WAAW,UAAU,MAGxE7xE,KAAO4xE,MAAcC,MAAY,SAAS,aAAa,EAAC,GCHxDC,KAAS9xE,GAAK,QCAd+xE,KAAc,OAAO,WAGrBx7F,KAAiBw7F,GAAY,gBAO7BC,KAAuBD,GAAY,UAGnCE,KAAiBH,KAASA,GAAO,cAAc;AASnD,SAASI,GAAU/1G,GAAO;AACxB,MAAIg2G,IAAQ57F,GAAe,KAAKpa,GAAO81G,EAAc,GACjDG,IAAMj2G,EAAM81G,EAAc;AAE9B,MAAI;AACF,IAAA91G,EAAM81G,EAAc,IAAI;AACxB,QAAII,IAAW;AAAA,EACjB,QAAY;AAAA,EAAC;AAEb,MAAIrxG,IAASgxG,GAAqB,KAAK71G,CAAK;AAC5C,SAAIk2G,MACEF,IACFh2G,EAAM81G,EAAc,IAAIG,IAExB,OAAOj2G,EAAM81G,EAAc,IAGxBjxG;AACT;AC1CA,IAAI+wG,KAAc,OAAO,WAOrBC,KAAuBD,GAAY;AASvC,SAASO,GAAen2G,GAAO;AAC7B,SAAO61G,GAAqB,KAAK71G,CAAK;AACxC;ACdA,IAAIo2G,KAAU,iBACVC,KAAe,sBAGfP,KAAiBH,KAASA,GAAO,cAAc;AASnD,SAASW,GAAWt2G,GAAO;AACzB,SAAIA,KAAS,OACJA,MAAU,SAAYq2G,KAAeD,KAEtCN,MAAkBA,MAAkB,OAAO91G,CAAK,IACpD+1G,GAAU/1G,CAAK,IACfm2G,GAAen2G,CAAK;AAC1B;ACDA,SAASu2G,GAAav2G,GAAO;AAC3B,SAAOA,KAAS,QAAQ,OAAOA,KAAS;AAC1C;ACtBA,IAAIw2G,KAAY;AAmBhB,SAASC,GAASz2G,GAAO;AACvB,SAAO,OAAOA,KAAS,YACpBu2G,GAAav2G,CAAK,KAAKs2G,GAAWt2G,CAAK,KAAKw2G;AACjD;ACzBA,IAAIE,KAAe;AAUnB,SAASC,GAAgBjnF,GAAQ;AAG/B,WAFIzoB,IAAQyoB,EAAO,QAEZzoB,OAAWyvG,GAAa,KAAKhnF,EAAO,OAAOzoB,CAAK,CAAC;AAAG;AAC3D,SAAOA;AACT;ACbA,IAAI2vG,KAAc;AASlB,SAASC,GAASnnF,GAAQ;AACxB,SAAOA,KACHA,EAAO,MAAM,GAAGinF,GAAgBjnF,CAAM,IAAI,CAAC,EAAE,QAAQknF,IAAa,EAAE;AAE1E;ACSA,SAASE,GAAS92G,GAAO;AACvB,MAAIqM,IAAO,OAAOrM;AAClB,SAAOA,KAAS,SAASqM,KAAQ,YAAYA,KAAQ;AACvD;ACvBA,IAAI0qG,KAAM,KAGNC,KAAa,sBAGbC,KAAa,cAGbC,KAAY,eAGZC,KAAe;AAyBnB,SAASC,GAASp3G,GAAO;AACvB,MAAI,OAAOA,KAAS;AAClB,WAAOA;AAET,MAAIy2G,GAASz2G,CAAK;AAChB,WAAO+2G;AAET,MAAID,GAAS92G,CAAK,GAAG;AACnB,QAAIgoD,IAAQ,OAAOhoD,EAAM,WAAW,aAAaA,EAAM,QAAO,IAAKA;AACnE,IAAAA,IAAQ82G,GAAS9uD,CAAK,IAAKA,IAAQ,KAAMA;AAAA,EAC3C;AACA,MAAI,OAAOhoD,KAAS;AAClB,WAAOA,MAAU,IAAIA,IAAQ,CAACA;AAEhC,EAAAA,IAAQ62G,GAAS72G,CAAK;AACtB,MAAIq3G,IAAWJ,GAAW,KAAKj3G,CAAK;AACpC,SAAQq3G,KAAYH,GAAU,KAAKl3G,CAAK,IACpCm3G,GAAan3G,EAAM,MAAM,CAAC,GAAGq3G,IAAW,IAAI,CAAC,IAC5CL,GAAW,KAAKh3G,CAAK,IAAI+2G,KAAM,CAAC/2G;AACvC;AC3CA,IAAIoxB,KAAM,WAAW;AACnB,SAAOyS,GAAK,KAAK,IAAG;AACtB,GCfIyzE,KAAkB,uBAGlBC,KAAY,KAAK,KACjBC,KAAY,KAAK;AAwDrB,SAASC,GAASC,GAAMC,GAAMn4G,GAAS;AACrC,MAAIo4G,GACAC,GACAC,GACAjzG,GACAkzG,GACAC,GACAC,IAAiB,GACjBruG,IAAU,IACVsuG,IAAS,IACTruG,IAAW;AAEf,MAAI,OAAO6tG,KAAQ;AACjB,UAAM,IAAI,UAAUJ,EAAe;AAErC,EAAAK,IAAOP,GAASO,CAAI,KAAK,GACrBb,GAASt3G,CAAO,MAClBoK,IAAU,CAAC,CAACpK,EAAQ,SACpB04G,IAAS,aAAa14G,GACtBs4G,IAAUI,IAASX,GAAUH,GAAS53G,EAAQ,OAAO,KAAK,GAAGm4G,CAAI,IAAIG,GACrEjuG,IAAW,cAAcrK,IAAU,CAAC,CAACA,EAAQ,WAAWqK;AAG1D,WAASsuG,EAAW/0C,GAAM;AACxB,QAAIg1C,IAAOR,GACPS,IAAUR;AAEd,WAAAD,IAAWC,IAAW,QACtBI,IAAiB70C,GACjBv+D,IAAS6yG,EAAK,MAAMW,GAASD,CAAI,GAC1BvzG;AAAA,EACT;AAEA,WAASyzG,EAAYl1C,GAAM;AAEzB,WAAA60C,IAAiB70C,GAEjB20C,IAAU,WAAWQ,GAAcZ,CAAI,GAEhC/tG,IAAUuuG,EAAW/0C,CAAI,IAAIv+D;AAAA,EACtC;AAEA,WAAS2zG,EAAcp1C,GAAM;AAC3B,QAAIq1C,IAAoBr1C,IAAO40C,GAC3BU,IAAsBt1C,IAAO60C,GAC7BU,IAAchB,IAAOc;AAEzB,WAAOP,IACHV,GAAUmB,GAAab,IAAUY,CAAmB,IACpDC;AAAA,EACN;AAEA,WAASC,EAAax1C,GAAM;AAC1B,QAAIq1C,IAAoBr1C,IAAO40C,GAC3BU,IAAsBt1C,IAAO60C;AAKjC,WAAQD,MAAiB,UAAcS,KAAqBd,KACzDc,IAAoB,KAAOP,KAAUQ,KAAuBZ;AAAA,EACjE;AAEA,WAASS,IAAe;AACtB,QAAIn1C,IAAOhyC,GAAG;AACd,QAAIwnF,EAAax1C,CAAI;AACnB,aAAOy1C,EAAaz1C,CAAI;AAG1B,IAAA20C,IAAU,WAAWQ,GAAcC,EAAcp1C,CAAI,CAAC;AAAA,EACxD;AAEA,WAASy1C,EAAaz1C,GAAM;AAK1B,WAJA20C,IAAU,QAINluG,KAAY+tG,IACPO,EAAW/0C,CAAI,KAExBw0C,IAAWC,IAAW,QACfhzG;AAAA,EACT;AAEA,WAASi0G,IAAS;AAChB,IAAIf,MAAY,UACd,aAAaA,CAAO,GAEtBE,IAAiB,GACjBL,IAAWI,IAAeH,IAAWE,IAAU;AAAA,EACjD;AAEA,WAASgB,IAAQ;AACf,WAAOhB,MAAY,SAAYlzG,IAASg0G,EAAaznF,GAAG,CAAE;AAAA,EAC5D;AAEA,WAAS4nF,IAAY;AACnB,QAAI51C,IAAOhyC,GAAG,GACV6nF,IAAaL,EAAax1C,CAAI;AAMlC,QAJAw0C,IAAW,WACXC,IAAW,MACXG,IAAe50C,GAEX61C,GAAY;AACd,UAAIlB,MAAY;AACd,eAAOO,EAAYN,CAAY;AAEjC,UAAIE;AAEF,4BAAaH,CAAO,GACpBA,IAAU,WAAWQ,GAAcZ,CAAI,GAChCQ,EAAWH,CAAY;AAAA,IAElC;AACA,WAAID,MAAY,WACdA,IAAU,WAAWQ,GAAcZ,CAAI,IAElC9yG;AAAA,EACT;AACA,SAAAm0G,EAAU,SAASF,GACnBE,EAAU,QAAQD,GACXC;AACT;ACxLA,MAAME,GAAgB;AAAA,EACpB,cAAc;AACZ,SAAK,yBAAyB,CAAA,GAC9B,KAAK,mBAAmB,CAAA,GACxB,KAAK,mBAAmB,CAAA,GACxB,KAAK,4BAA4B,CAAA,GACjC,KAAK,2BAA2B,CAAA,GAChC,KAAK,gBAAgB,CAAA,GACrB,KAAK,iBAAiB,CAAA,GACtB,KAAK,mBAAmB,CAAA,GACxB,KAAK,cAAc,CAACzmG,OAClB,KAAK,uBAAuB,KAAKA,CAAE,GAC5B,OAET,KAAK,UAAU,CAACA,OACd,KAAK,iBAAiB,KAAKA,CAAE,GACtB,OAET,KAAK,UAAU,CAACA,OACd,KAAK,iBAAiB,KAAKA,CAAE,GACtB;AAAA,EAEX;AAAA;AAAA,EAEA,IAAI,YAAY;AACd,WAAO;AAAA,MACL,aAAa,KAAK;AAAA,MAClB,SAAS,KAAK;AAAA,MACd,SAAS,KAAK;AAAA,MACd,iBAAiB,KAAK;AAAA,MACtB,MAAM,KAAK;AAAA,MACX,OAAO,KAAK;AAAA,MACZ,SAAS,KAAK;AAAA,MACd,kBAAkB,KAAK;AAAA,IAC7B;AAAA,EACE;AAAA;AAAA;AAAA;AAAA,EAIA,gBAAgBA,GAAI;AAClB,gBAAK,yBAAyB,KAAKA,CAAE,GAC9B;AAAA,EACT;AAAA;AAAA;AAAA,EAGA,KAAKA,GAAI;AACP,gBAAK,cAAc,KAAKA,CAAE,GACnB;AAAA,EACT;AAAA;AAAA;AAAA,EAGA,MAAMA,GAAI;AACR,gBAAK,eAAe,KAAKA,CAAE,GACpB;AAAA,EACT;AAAA;AAAA;AAAA,EAGA,QAAQA,GAAI;AACV,gBAAK,iBAAiB,KAAKA,CAAE,GACtB;AAAA,EACT;AAAA;AAAA;AAAA,EAGA,iBAAiBA,GAAI;AACnB,gBAAK,0BAA0B,KAAKA,CAAE,GAC/B;AAAA,EACT;AACF;AACA,MAAM0mG,KAAc30D;AAAA,EAClB,IAAI00D,GAAe;AAAA,EACnB;AACF,GACM7nG,KAAM,IAAIqzD,GAAU,mBAAmB,GACvC00C,KAAW,CAAC7tB,OAChBA,EAAI,OAAO4tB,IAAa,IAAID,GAAe,CAAE,GACtC,YAAY;AACjB,QAAM3tB,EAAI,KAAKC,EAAS;AACxB,QAAM6tB,IAAY9tB,EAAI,IAAI4tB,EAAW,GAC/B,EAAE,WAAAG,EAAS,IAAKD;AACtB,EAAAC,EAAU,YAAY,QAAQ,CAAC7mG,MAAOA,EAAG84E,CAAG,CAAC,GAC7C,MAAMA,EAAI,KAAK2C,EAAe;AAC9B,QAAMh7C,IAAaq4C,EAAI,IAAI8C,EAAa;AACxC,MAAIkrB,IAAU,MACVC,IAAe,MACfC,IAAgB;AACpB,QAAM1gG,IAAS,IAAIyrD,GAAO;AAAA,IACxB,KAAAnzD;AAAA,IACA,MAAM,OACG;AAAA,MACL,SAAS,MAAM;AACb,QAAAioG,EAAU,QAAQ,QAAQ,CAAC7mG,MAAOA,EAAG84E,CAAG,CAAC;AAAA,MAC3C;AAAA,IACV;AAAA,IAEM,OAAO;AAAA,MACL,iBAAiB;AAAA,QACf,OAAO,OACL+tB,EAAU,MAAM,QAAQ,CAAC7mG,MAAOA,EAAG84E,CAAG,CAAC,GAChC;AAAA,QAET,MAAM,OACJ+tB,EAAU,KAAK,QAAQ,CAAC7mG,MAAOA,EAAG84E,CAAG,CAAC,GAC/B;AAAA,MAEnB;AAAA,IACA;AAAA,IACM,OAAO;AAAA,MACL,MAAM,CAACl5D,GAAGqxC,MAAa;AACrB,QAAA61C,IAAU71C,EAAS,KACnB81C,IAAetmE,EAAWwwB,EAAS,GAAG;AAAA,MACxC;AAAA,MACA,OAAO,CAACnoB,MAAO;AACb,cAAMm+D,IAAmBn+D,EAAG;AAO5B,gBANI,CAACk+D,KAAiBC,KAAoBD,KAAiB,CAACC,EAAiB,GAAGD,CAAa,OAC3FH,EAAU,iBAAiB,QAAQ,CAAC7mG,MAAO;AACzC,UAAAA,EAAG84E,GAAKmuB,GAAkBD,CAAa;AAAA,QACzC,CAAC,GACDA,IAAgBC,IAEd,CAACn+D,EAAG,cAAcA,EAAG,QAAQ,cAAc,MAAM,KAAO,SAC5Ck8D,GAAS,MAAM;AAC7B,gBAAM,EAAE,KAAAr+E,EAAG,IAAKmiB;AAMhB,cALI+9D,EAAU,QAAQ,SAAS,KAAKC,KAAW,CAACA,EAAQ,GAAGngF,CAAG,KAC5DkgF,EAAU,QAAQ,QAAQ,CAAC7mG,MAAO;AAChC,YAAAA,EAAG84E,GAAKnyD,GAAKmgF,CAAO;AAAA,UACtB,CAAC,GAECD,EAAU,gBAAgB,SAAS,KAAKC,KAAW,CAACA,EAAQ,GAAGngF,CAAG,GAAG;AACvE,kBAAMxsB,IAAWsmC,EAAW9Z,CAAG;AAC/B,YAAAkgF,EAAU,gBAAgB,QAAQ,CAAC7mG,MAAO;AACxC,cAAAA,EAAG84E,GAAK3+E,GAAU4sG,CAAY;AAAA,YAChC,CAAC,GACDA,IAAe5sG;AAAA,UACjB;AACA,UAAA2sG,IAAUngF;AAAA,QACZ,GAAG,GAAG,EACQ;AAAA,MAChB;AAAA,IACR;AAAA,EACA,CAAK;AACD,EAAAmyD,EAAI,OAAOP,IAAiB,CAAClvC,MAAMA,EAAE,OAAO/iC,CAAM,CAAC,GACnD,MAAMwyE,EAAI,KAAKkE,EAAe,GAC9B6pB,EAAU,QAAQ,QAAQ,CAAC7mG,MAAOA,EAAG84E,CAAG,CAAC;AAC3C;AAEF6tB,GAAS,OAAO;AAAA,EACd,SAAS;AAAA,EACT,aAAa;AACf;ACxJA,IAAIO,KAAiB,KAKjBC,KAAe,WAAyB;AAAC;AAE7CA,GAAa,UAAU,SAAS,SAAiB5xD,GAAO;AACtD,SAAKA,EAAM,UACXA,IAAQ4xD,GAAa,KAAK5xD,CAAK,GAEvB,CAAC,KAAK,UAAUA,KACrBA,EAAM,SAAS2xD,MAAkB,KAAK,WAAW3xD,CAAK,KACtD,KAAK,SAAS2xD,MAAkB3xD,EAAM,YAAY,IAAI,KACvD,KAAK,YAAYA,CAAK,KANI;AAO9B;AAIA4xD,GAAa,UAAU,UAAU,SAAkB5xD,GAAO;AACxD,SAAKA,EAAM,SACJ4xD,GAAa,KAAK5xD,CAAK,EAAE,OAAO,IAAI,IADf;AAE9B;AAEA4xD,GAAa,UAAU,cAAc,SAAsB5xD,GAAO;AAChE,SAAO,IAAI6xD,GAAO,MAAM7xD,CAAK;AAC/B;AAIA4xD,GAAa,UAAU,QAAQ,SAAgBhpF,GAAMokB,GAAI;AAIvD,SAHOpkB,MAAS,WAASA,IAAO,IACzBokB,MAAO,WAASA,IAAK,KAAK,SAE7BpkB,KAAQokB,IAAa4kE,GAAa,QAC/B,KAAK,WAAW,KAAK,IAAI,GAAGhpF,CAAI,GAAG,KAAK,IAAI,KAAK,QAAQokB,CAAE,CAAC;AACrE;AAIA4kE,GAAa,UAAU,MAAM,SAAc73G,GAAG;AAC5C,MAAI,EAAAA,IAAI,KAAKA,KAAK,KAAK;AACvB,WAAO,KAAK,SAASA,CAAC;AACxB;AAOA63G,GAAa,UAAU,UAAU,SAAkB9yD,GAAGl2B,GAAMokB,GAAI;AAC5D,EAAKpkB,MAAS,WAASA,IAAO,IACzBokB,MAAO,WAASA,IAAK,KAAK,SAE7BpkB,KAAQokB,IACR,KAAK,aAAa8R,GAAGl2B,GAAMokB,GAAI,CAAC,IAEhC,KAAK,qBAAqB8R,GAAGl2B,GAAMokB,GAAI,CAAC;AAC9C;AAKA4kE,GAAa,UAAU,MAAM,SAAc9yD,GAAGl2B,GAAMokB,GAAI;AACpD,EAAKpkB,MAAS,WAASA,IAAO,IACzBokB,MAAO,WAASA,IAAK,KAAK;AAEjC,MAAInwC,IAAS,CAAA;AACb,cAAK,QAAQ,SAAUkmD,GAAKhpD,GAAG;AAAE,WAAO8C,EAAO,KAAKiiD,EAAEiE,GAAKhpD,CAAC,CAAC;AAAA,EAAG,GAAG6uB,GAAMokB,CAAE,GACpEnwC;AACT;AAKA+0G,GAAa,OAAO,SAAeppG,GAAQ;AACzC,SAAIA,aAAkBopG,KAAuBppG,IACtCA,KAAUA,EAAO,SAAS,IAAIspG,GAAKtpG,CAAM,IAAIopG,GAAa;AACnE;AAEA,IAAIE,KAAqB,0BAAUF,GAAc;AAC/C,WAASE,EAAKtpG,GAAQ;AACpB,IAAAopG,EAAa,KAAK,IAAI,GACtB,KAAK,SAASppG;AAAA,EAChB;AAEA,EAAKopG,MAAeE,EAAK,YAAYF,IACrCE,EAAK,YAAY,OAAO,OAAQF,KAAgBA,EAAa,SAAS,GACtEE,EAAK,UAAU,cAAcA;AAE7B,MAAIC,IAAqB,EAAE,QAAQ,EAAE,cAAc,GAAI,GAAG,OAAO,EAAE,cAAc,KAAM;AAEvF,SAAAD,EAAK,UAAU,UAAU,WAAoB;AAC3C,WAAO,KAAK;AAAA,EACd,GAEAA,EAAK,UAAU,aAAa,SAAqBlpF,GAAMokB,GAAI;AACzD,WAAIpkB,KAAQ,KAAKokB,KAAM,KAAK,SAAiB,OACtC,IAAI8kE,EAAK,KAAK,OAAO,MAAMlpF,GAAMokB,CAAE,CAAC;AAAA,EAC7C,GAEA8kE,EAAK,UAAU,WAAW,SAAmB,GAAG;AAC9C,WAAO,KAAK,OAAO,CAAC;AAAA,EACtB,GAEAA,EAAK,UAAU,eAAe,SAAuBhzD,GAAGl2B,GAAMokB,GAAInhC,GAAO;AACvE,aAAS9R,IAAI6uB,GAAM7uB,IAAIizC,GAAIjzC;AACvB,UAAI+kD,EAAE,KAAK,OAAO/kD,CAAC,GAAG8R,IAAQ9R,CAAC,MAAM;AAAS,eAAO;AAAA,EAC3D,GAEA+3G,EAAK,UAAU,uBAAuB,SAA+BhzD,GAAGl2B,GAAMokB,GAAInhC,GAAO;AACvF,aAAS9R,IAAI6uB,IAAO,GAAG7uB,KAAKizC,GAAIjzC;AAC5B,UAAI+kD,EAAE,KAAK,OAAO/kD,CAAC,GAAG8R,IAAQ9R,CAAC,MAAM;AAAS,eAAO;AAAA,EAC3D,GAEA+3G,EAAK,UAAU,aAAa,SAAqB9xD,GAAO;AACtD,QAAI,KAAK,SAASA,EAAM,UAAU2xD;AAC9B,aAAO,IAAIG,EAAK,KAAK,OAAO,OAAO9xD,EAAM,QAAO,CAAE,CAAC;AAAA,EACzD,GAEA8xD,EAAK,UAAU,cAAc,SAAsB9xD,GAAO;AACxD,QAAI,KAAK,SAASA,EAAM,UAAU2xD;AAC9B,aAAO,IAAIG,EAAK9xD,EAAM,QAAO,EAAG,OAAO,KAAK,MAAM,CAAC;AAAA,EACzD,GAEA+xD,EAAmB,OAAO,MAAM,WAAY;AAAE,WAAO,KAAK,OAAO;AAAA,EAAO,GAExEA,EAAmB,MAAM,MAAM,WAAY;AAAE,WAAO;AAAA,EAAE,GAEtD,OAAO,iBAAkBD,EAAK,WAAWC,CAAkB,GAEpDD;AACT,GAAEF,EAAY;AAIdA,GAAa,QAAQ,IAAIE,GAAK,EAAE;AAEhC,IAAID,KAAuB,0BAAUD,GAAc;AACjD,WAASC,EAAOj4G,GAAMC,GAAO;AAC3B,IAAA+3G,EAAa,KAAK,IAAI,GACtB,KAAK,OAAOh4G,GACZ,KAAK,QAAQC,GACb,KAAK,SAASD,EAAK,SAASC,EAAM,QAClC,KAAK,QAAQ,KAAK,IAAID,EAAK,OAAOC,EAAM,KAAK,IAAI;AAAA,EACnD;AAEA,SAAK+3G,MAAeC,EAAO,YAAYD,IACvCC,EAAO,YAAY,OAAO,OAAQD,KAAgBA,EAAa,SAAS,GACxEC,EAAO,UAAU,cAAcA,GAE/BA,EAAO,UAAU,UAAU,WAAoB;AAC7C,WAAO,KAAK,KAAK,QAAO,EAAG,OAAO,KAAK,MAAM,QAAO,CAAE;AAAA,EACxD,GAEAA,EAAO,UAAU,WAAW,SAAmB93G,GAAG;AAChD,WAAOA,IAAI,KAAK,KAAK,SAAS,KAAK,KAAK,IAAIA,CAAC,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,KAAK,MAAM;AAAA,EACtF,GAEA83G,EAAO,UAAU,eAAe,SAAuB/yD,GAAGl2B,GAAMokB,GAAInhC,GAAO;AACzE,QAAImmG,IAAU,KAAK,KAAK;AAIxB,QAHIppF,IAAOopF,KACP,KAAK,KAAK,aAAalzD,GAAGl2B,GAAM,KAAK,IAAIokB,GAAIglE,CAAO,GAAGnmG,CAAK,MAAM,MAElEmhC,IAAKglE,KACL,KAAK,MAAM,aAAalzD,GAAG,KAAK,IAAIl2B,IAAOopF,GAAS,CAAC,GAAG,KAAK,IAAI,KAAK,QAAQhlE,CAAE,IAAIglE,GAASnmG,IAAQmmG,CAAO,MAAM;AAClH,aAAO;AAAA,EACb,GAEAH,EAAO,UAAU,uBAAuB,SAA+B/yD,GAAGl2B,GAAMokB,GAAInhC,GAAO;AACzF,QAAImmG,IAAU,KAAK,KAAK;AAIxB,QAHIppF,IAAOopF,KACP,KAAK,MAAM,qBAAqBlzD,GAAGl2B,IAAOopF,GAAS,KAAK,IAAIhlE,GAAIglE,CAAO,IAAIA,GAASnmG,IAAQmmG,CAAO,MAAM,MAEzGhlE,IAAKglE,KACL,KAAK,KAAK,qBAAqBlzD,GAAG,KAAK,IAAIl2B,GAAMopF,CAAO,GAAGhlE,GAAInhC,CAAK,MAAM;AAC1E,aAAO;AAAA,EACb,GAEAgmG,EAAO,UAAU,aAAa,SAAqBjpF,GAAMokB,GAAI;AAC3D,QAAIpkB,KAAQ,KAAKokB,KAAM,KAAK;AAAU,aAAO;AAC7C,QAAIglE,IAAU,KAAK,KAAK;AACxB,WAAIhlE,KAAMglE,IAAkB,KAAK,KAAK,MAAMppF,GAAMokB,CAAE,IAChDpkB,KAAQopF,IAAkB,KAAK,MAAM,MAAMppF,IAAOopF,GAAShlE,IAAKglE,CAAO,IACpE,KAAK,KAAK,MAAMppF,GAAMopF,CAAO,EAAE,OAAO,KAAK,MAAM,MAAM,GAAGhlE,IAAKglE,CAAO,CAAC;AAAA,EAChF,GAEAH,EAAO,UAAU,aAAa,SAAqB7xD,GAAO;AACxD,QAAIt9C,IAAQ,KAAK,MAAM,WAAWs9C,CAAK;AACvC,QAAIt9C;AAAS,aAAO,IAAImvG,EAAO,KAAK,MAAMnvG,CAAK;AAAA,EACjD,GAEAmvG,EAAO,UAAU,cAAc,SAAsB7xD,GAAO;AAC1D,QAAIt9C,IAAQ,KAAK,KAAK,YAAYs9C,CAAK;AACvC,QAAIt9C;AAAS,aAAO,IAAImvG,EAAOnvG,GAAO,KAAK,KAAK;AAAA,EAClD,GAEAmvG,EAAO,UAAU,cAAc,SAAsB7xD,GAAO;AAC1D,WAAI,KAAK,KAAK,SAAS,KAAK,IAAI,KAAK,MAAM,OAAOA,EAAM,KAAK,IAAI,IACtD,IAAI6xD,EAAO,KAAK,MAAM,IAAIA,EAAO,KAAK,OAAO7xD,CAAK,CAAC,IACvD,IAAI6xD,EAAO,MAAM7xD,CAAK;AAAA,EAC/B,GAEO6xD;AACT,GAAED,EAAY;ACxLd,MAAMK,KAAkB;AACxB,MAAMC,GAAO;AAAA,EACT,YAAYjgG,GAAOkgG,GAAY;AAC3B,SAAK,QAAQlgG,GACb,KAAK,aAAakgG;AAAA,EACtB;AAAA;AAAA;AAAA,EAGA,SAASprG,GAAOqrG,GAAe;AAC3B,QAAI,KAAK,cAAc;AACnB,aAAO;AACX,QAAIhmG,IAAM,KAAK,MAAM;AACrB,aAAQA;AAEJ,UADW,KAAK,MAAM,IAAIA,IAAM,CAAC,EACxB,WAAW;AAChB,UAAEA;AACF;AAAA,MACJ;AAEJ,QAAIimG,GAAOl+C;AACX,IAAIi+C,MACAC,IAAQ,KAAK,UAAUjmG,GAAK,KAAK,MAAM,MAAM,GAC7C+nD,IAAUk+C,EAAM,KAAK;AAEzB,QAAI1d,IAAY5tF,EAAM,IAClBo0D,GAAWm3C,GACXC,IAAW,IAAIC,IAAY,CAAA;AAC/B,gBAAK,MAAM,QAAQ,CAACr9F,GAAMpb,MAAM;AAC5B,UAAI,CAACob,EAAK,MAAM;AACZ,QAAKk9F,MACDA,IAAQ,KAAK,UAAUjmG,GAAKrS,IAAI,CAAC,GACjCo6D,IAAUk+C,EAAM,KAAK,SAEzBl+C,KACAq+C,EAAU,KAAKr9F,CAAI;AACnB;AAAA,MACJ;AACA,UAAIk9F,GAAO;AACP,QAAAG,EAAU,KAAK,IAAIC,GAAKt9F,EAAK,GAAG,CAAC;AACjC,YAAIyd,IAAOzd,EAAK,KAAK,IAAIk9F,EAAM,MAAMl+C,CAAO,CAAC,GAAGtvD;AAChD,QAAI+tB,KAAQ+hE,EAAU,UAAU/hE,CAAI,EAAE,QAClC/tB,IAAM8vF,EAAU,QAAQ,KAAKA,EAAU,QAAQ,KAAK,SAAS,CAAC,GAC9D4d,EAAS,KAAK,IAAIE,GAAK5tG,GAAK,QAAW,QAAW0tG,EAAS,SAASC,EAAU,MAAM,CAAC,IAEzFr+C,KACItvD,KACAwtG,EAAM,UAAUxtG,GAAKsvD,CAAO;AAAA,MACpC;AAEI,QAAAwgC,EAAU,UAAUx/E,EAAK,IAAI;AAEjC,UAAIA,EAAK;AACL,eAAAgmD,IAAYk3C,IAAQl9F,EAAK,UAAU,IAAIk9F,EAAM,MAAMl+C,CAAO,CAAC,IAAIh/C,EAAK,WACpEm9F,IAAY,IAAIJ,GAAO,KAAK,MAAM,MAAM,GAAG9lG,CAAG,EAAE,OAAOomG,EAAU,QAAO,EAAG,OAAOD,CAAQ,CAAC,GAAG,KAAK,aAAa,CAAC,GAC1G;AAAA,IAEf,GAAG,KAAK,MAAM,QAAQ,CAAC,GAChB,EAAE,WAAWD,GAAW,WAAA3d,GAAW,WAAWx5B,EAAS;AAAA,EAClE;AAAA;AAAA,EAEA,aAAaw5B,GAAWx5B,GAAWu3C,GAAaN,GAAe;AAC3D,QAAIO,IAAW,CAAA,GAAIR,IAAa,KAAK,YACjCS,IAAW,KAAK,OAAOC,IAAW,CAACT,KAAiBQ,EAAS,SAASA,EAAS,IAAIA,EAAS,SAAS,CAAC,IAAI;AAC9G,aAAS74G,IAAI,GAAGA,IAAI46F,EAAU,MAAM,QAAQ56F,KAAK;AAC7C,UAAI64B,IAAO+hE,EAAU,MAAM56F,CAAC,EAAE,OAAO46F,EAAU,KAAK56F,CAAC,CAAC,GAClDob,IAAO,IAAIs9F,GAAK9d,EAAU,QAAQ,KAAK56F,CAAC,GAAG64B,GAAMuoC,CAAS,GAAGjjB;AACjE,OAAIA,IAAS26D,KAAYA,EAAS,MAAM19F,CAAI,OACxCA,IAAO+iC,GACHn+C,IACA44G,EAAS,IAAG,IAEZC,IAAWA,EAAS,MAAM,GAAGA,EAAS,SAAS,CAAC,IAExDD,EAAS,KAAKx9F,CAAI,GACdgmD,MACAg3C,KACAh3C,IAAY,SAEXi3C,MACDS,IAAW19F;AAAA,IACnB;AACA,QAAI29F,IAAWX,IAAaO,EAAY;AACxC,WAAII,IAAWC,OACXH,IAAWI,GAAaJ,GAAUE,CAAQ,GAC1CX,KAAcW,IAEX,IAAIZ,GAAOU,EAAS,OAAOD,CAAQ,GAAGR,CAAU;AAAA,EAC3D;AAAA,EACA,UAAUvpF,GAAMokB,GAAI;AAChB,QAAI4jB,IAAO,IAAID;AACf,gBAAK,MAAM,QAAQ,CAACx7C,GAAMpb,MAAM;AAC5B,UAAIk5G,IAAY99F,EAAK,gBAAgB,QAAQpb,IAAIob,EAAK,gBAAgByT,IAChEgoC,EAAK,KAAK,SAASz7C,EAAK,eAAe;AAC7C,MAAAy7C,EAAK,UAAUz7C,EAAK,KAAK89F,CAAS;AAAA,IACtC,GAAGrqF,GAAMokB,CAAE,GACJ4jB;AAAA,EACX;AAAA,EACA,QAAQ92D,GAAO;AACX,WAAI,KAAK,cAAc,IACZ,OACJ,IAAIo4G,GAAO,KAAK,MAAM,OAAOp4G,EAAM,IAAI,CAAA+K,MAAO,IAAI4tG,GAAK5tG,CAAG,CAAC,CAAC,GAAG,KAAK,UAAU;AAAA,EACzF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQquG,GAAkBC,GAAc;AACpC,QAAI,CAAC,KAAK;AACN,aAAO;AACX,QAAIC,IAAe,CAAA,GAAIvnG,IAAQ,KAAK,IAAI,GAAG,KAAK,MAAM,SAASsnG,CAAY,GACvEpiD,IAAUmiD,EAAiB,SAC3BG,IAAWH,EAAiB,MAAM,QAClCf,IAAa,KAAK;AACtB,SAAK,MAAM,QAAQ,CAAAh9F,MAAQ;AAAE,MAAIA,EAAK,aAClCg9F;AAAA,IAAc,GAAGtmG,CAAK;AAC1B,QAAIynG,IAAWH;AACf,SAAK,MAAM,QAAQ,CAAAh+F,MAAQ;AACvB,UAAI9J,IAAM0lD,EAAQ,UAAU,EAAEuiD,CAAQ;AACtC,UAAIjoG,KAAO;AACP;AACJ,MAAAgoG,IAAW,KAAK,IAAIA,GAAUhoG,CAAG;AACjC,UAAIxG,IAAMksD,EAAQ,KAAK1lD,CAAG;AAC1B,UAAI8J,EAAK,MAAM;AACX,YAAIyd,IAAOsgF,EAAiB,MAAM7nG,CAAG,EAAE,OAAO6nG,EAAiB,KAAK7nG,CAAG,CAAC,GACpE8vD,IAAYhmD,EAAK,aAAaA,EAAK,UAAU,IAAI47C,EAAQ,MAAMuiD,IAAW,GAAGjoG,CAAG,CAAC;AACrF,QAAI8vD,KACAg3C,KACJiB,EAAa,KAAK,IAAIX,GAAK5tG,GAAK+tB,GAAMuoC,CAAS,CAAC;AAAA,MACpD;AAEI,QAAAi4C,EAAa,KAAK,IAAIX,GAAK5tG,CAAG,CAAC;AAAA,IAEvC,GAAGgH,CAAK;AACR,QAAI0nG,IAAU,CAAA;AACd,aAASx5G,IAAIo5G,GAAcp5G,IAAIs5G,GAAUt5G;AACrC,MAAAw5G,EAAQ,KAAK,IAAId,GAAK1hD,EAAQ,KAAKh3D,CAAC,CAAC,CAAC;AAC1C,QAAIkY,IAAQ,KAAK,MAAM,MAAM,GAAGpG,CAAK,EAAE,OAAO0nG,CAAO,EAAE,OAAOH,CAAY,GACtEI,IAAS,IAAItB,GAAOjgG,GAAOkgG,CAAU;AACzC,WAAIqB,EAAO,eAAc,IAAKvB,OAC1BuB,IAASA,EAAO,SAAS,KAAK,MAAM,SAASJ,EAAa,MAAM,IAC7DI;AAAA,EACX;AAAA,EACA,iBAAiB;AACb,QAAIp4F,IAAQ;AACZ,gBAAK,MAAM,QAAQ,CAAAjG,MAAQ;AAAE,MAAKA,EAAK,QACnCiG;AAAA,IAAS,CAAC,GACPA;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,SAASq4F,IAAO,KAAK,MAAM,QAAQ;AAC/B,QAAIpB,IAAQ,KAAK,UAAU,GAAGoB,CAAI,GAAGt/C,IAAUk+C,EAAM,KAAK,QACtDpgG,IAAQ,IAAIsE,IAAS;AACzB,gBAAK,MAAM,QAAQ,CAACpB,GAAMpb,MAAM;AAC5B,UAAIA,KAAK05G;AACL,QAAAxhG,EAAM,KAAKkD,CAAI,GACXA,EAAK,aACLoB;AAAA,eAECpB,EAAK,MAAM;AAChB,YAAIyd,IAAOzd,EAAK,KAAK,IAAIk9F,EAAM,MAAMl+C,CAAO,CAAC,GAAGtvD,IAAM+tB,KAAQA,EAAK,OAAM;AAIzE,YAHAuhC,KACItvD,KACAwtG,EAAM,UAAUxtG,GAAKsvD,CAAO,GAC5BvhC,GAAM;AACN,cAAIuoC,IAAYhmD,EAAK,aAAaA,EAAK,UAAU,IAAIk9F,EAAM,MAAMl+C,CAAO,CAAC;AACzE,UAAIgH,KACA5kD;AACJ,cAAIm9F,IAAU,IAAIjB,GAAK5tG,EAAI,OAAM,GAAI+tB,GAAMuoC,CAAS,GAAGjjB,GAAQz+C,IAAOwY,EAAM,SAAS;AACrF,WAAIimC,IAASjmC,EAAM,UAAUA,EAAMxY,CAAI,EAAE,MAAMi6G,CAAO,KAClDzhG,EAAMxY,CAAI,IAAIy+C,IAEdjmC,EAAM,KAAKyhG,CAAO;AAAA,QAC1B;AAAA,MACJ,MACK,CAAIv+F,EAAK,OACVg/C;AAAA,IAER,GAAG,KAAK,MAAM,QAAQ,CAAC,GAChB,IAAI+9C,GAAON,GAAa,KAAK3/F,EAAM,QAAO,CAAE,GAAGsE,CAAM;AAAA,EAChE;AACJ;AACA27F,GAAO,QAAQ,IAAIA,GAAON,GAAa,OAAO,CAAC;AAC/C,SAASoB,GAAa/gG,GAAOxU,GAAG;AAC5B,MAAIk2G;AACJ,SAAA1hG,EAAM,QAAQ,CAACkD,GAAM,MAAM;AACvB,QAAIA,EAAK,aAAc1X,OAAO;AAC1B,aAAAk2G,IAAW,GACJ;AAAA,EAEf,CAAC,GACM1hG,EAAM,MAAM0hG,CAAQ;AAC/B;AACA,MAAMlB,GAAK;AAAA,EACP,YAEA5tG,GAEA+tB,GAIAuoC,GAGAy4C,GAAc;AACV,SAAK,MAAM/uG,GACX,KAAK,OAAO+tB,GACZ,KAAK,YAAYuoC,GACjB,KAAK,eAAey4C;AAAA,EACxB;AAAA,EACA,MAAM5zD,GAAO;AACT,QAAI,KAAK,QAAQA,EAAM,QAAQ,CAACA,EAAM,WAAW;AAC7C,UAAIptB,IAAOotB,EAAM,KAAK,MAAM,KAAK,IAAI;AACrC,UAAIptB;AACA,eAAO,IAAI6/E,GAAK7/E,EAAK,OAAM,EAAG,UAAUA,GAAM,KAAK,SAAS;AAAA,IACpE;AAAA,EACJ;AACJ;AAIA,MAAMihF,GAAa;AAAA,EACf,YAAY97G,GAAM+7G,GAAQC,GAAYC,GAAUC,GAAiB;AAC7D,SAAK,OAAOl8G,GACZ,KAAK,SAAS+7G,GACd,KAAK,aAAaC,GAClB,KAAK,WAAWC,GAChB,KAAK,kBAAkBC;AAAA,EAC3B;AACJ;AACA,MAAMlB,KAAiB;AAEvB,SAASmB,GAAiBC,GAASptG,GAAOwsC,GAAI/7C,GAAS;AACnD,MAAI48G,IAAY7gE,EAAG,QAAQ8gE,EAAU,GAAGC;AACxC,MAAIF;AACA,WAAOA,EAAU;AACrB,EAAI7gE,EAAG,QAAQghE,EAAe,MAC1BJ,IAAU,IAAIN,GAAaM,EAAQ,MAAMA,EAAQ,QAAQ,MAAM,GAAG,EAAE;AACxE,MAAIK,IAAWjhE,EAAG,QAAQ,qBAAqB;AAC/C,MAAIA,EAAG,MAAM,UAAU;AACnB,WAAO4gE;AAEN,MAAIK,KAAYA,EAAS,QAAQH,EAAU;AAC5C,WAAIG,EAAS,QAAQH,EAAU,EAAE,OACtB,IAAIR,GAAaM,EAAQ,KAAK,aAAa5gE,GAAI,QAAW/7C,GAASi9G,GAAkB1tG,CAAK,CAAC,GAAGotG,EAAQ,QAAQO,GAAUnhE,EAAG,QAAQ,IAAI,GAAG4gE,EAAQ,UAAUA,EAAQ,eAAe,IAEnL,IAAIN,GAAaM,EAAQ,MAAMA,EAAQ,OAAO,aAAa5gE,GAAI,QAAW/7C,GAASi9G,GAAkB1tG,CAAK,CAAC,GAAG,MAAMotG,EAAQ,UAAUA,EAAQ,eAAe;AAEvK,MAAI5gE,EAAG,QAAQ,cAAc,MAAM,MAAS,EAAEihE,KAAYA,EAAS,QAAQ,cAAc,MAAM,KAAQ;AAExG,QAAI5mC,IAAcr6B,EAAG,QAAQ,aAAa,GACtCohE,IAAWR,EAAQ,YAAY,KAC9B,CAACK,KAAYL,EAAQ,mBAAmBvmC,MACpCumC,EAAQ,YAAY5gE,EAAG,QAAQ,KAAK/7C,EAAQ,iBAAiB,CAACo9G,GAAarhE,GAAI4gE,EAAQ,UAAU,IACtGJ,IAAaS,IAAWK,GAAUV,EAAQ,YAAY5gE,EAAG,OAAO,IAAImhE,GAAUnhE,EAAG,QAAQ,IAAI;AACjG,WAAO,IAAIsgE,GAAaM,EAAQ,KAAK,aAAa5gE,GAAIohE,IAAW5tG,EAAM,UAAU,YAAW,IAAK,QAAWvP,GAASi9G,GAAkB1tG,CAAK,CAAC,GAAGmrG,GAAO,OAAO6B,GAAYxgE,EAAG,MAAMq6B,KAAsBumC,EAAQ,eAA6B;AAAA,EAClP,MACK,SAAIG,IAAU/gE,EAAG,QAAQ,SAAS,KAG5B,IAAIsgE,GAAaM,EAAQ,KAAK,QAAQ5gE,GAAI+gE,CAAO,GAAGH,EAAQ,OAAO,QAAQ5gE,GAAI+gE,CAAO,GAAGO,GAAUV,EAAQ,YAAY5gE,EAAG,OAAO,GAAG4gE,EAAQ,UAAUA,EAAQ,eAAe,IAG7K,IAAIN,GAAaM,EAAQ,KAAK,QAAQ5gE,EAAG,QAAQ,IAAI,GAAG4gE,EAAQ,OAAO,QAAQ5gE,EAAG,QAAQ,IAAI,GAAGshE,GAAUV,EAAQ,YAAY5gE,EAAG,OAAO,GAAG4gE,EAAQ,UAAUA,EAAQ,eAAe;AAEpM;AACA,SAASS,GAAajgB,GAAWof,GAAY;AACzC,MAAI,CAACA;AACD,WAAO;AACX,MAAI,CAACpf,EAAU;AACX,WAAO;AACX,MAAImgB,IAAW;AACf,SAAAngB,EAAU,QAAQ,KAAK,CAAC,EAAE,QAAQ,CAAC9oF,GAAOO,MAAQ;AAC9C,aAASrS,IAAI,GAAGA,IAAIg6G,EAAW,QAAQh6G,KAAK;AACxC,MAAI8R,KAASkoG,EAAWh6G,IAAI,CAAC,KAAKqS,KAAO2nG,EAAWh6G,CAAC,MACjD+6G,IAAW;AAAA,EACvB,CAAC,GACMA;AACX;AACA,SAASJ,GAAU9jD,GAAM;AACrB,MAAI/zD,IAAS,CAAA;AACb,WAAS9C,IAAI62D,EAAK,SAAS,GAAG72D,KAAK,KAAK8C,EAAO,UAAU,GAAG9C;AACxD,IAAA62D,EAAK72D,CAAC,EAAE,QAAQ,CAAC4gE,GAAOC,GAAKhyC,GAAMokB,MAAOnwC,EAAO,KAAK+rB,GAAMokB,CAAE,CAAC;AACnE,SAAOnwC;AACX;AACA,SAASg4G,GAAU/8D,GAAQiZ,GAAS;AAChC,MAAI,CAACjZ;AACD,WAAO;AACX,MAAIj7C,IAAS,CAAA;AACb,WAAS9C,IAAI,GAAGA,IAAI+9C,EAAO,QAAQ/9C,KAAK,GAAG;AACvC,QAAI6uB,IAAOmoC,EAAQ,IAAIjZ,EAAO/9C,CAAC,GAAG,CAAC,GAAGizC,IAAK+jB,EAAQ,IAAIjZ,EAAO/9C,IAAI,CAAC,GAAG,EAAE;AACxE,IAAI6uB,KAAQokB,KACRnwC,EAAO,KAAK+rB,GAAMokB,CAAE;AAAA,EAC5B;AACA,SAAOnwC;AACX;AAGA,SAASk4G,GAAgBZ,GAASptG,GAAOiuG,GAAM;AAC3C,MAAI5C,IAAgBqC,GAAkB1tG,CAAK,GACvC2rG,IAAc2B,GAAW,IAAIttG,CAAK,EAAE,KAAK,QACzCkuG,KAAOD,IAAOb,EAAQ,SAASA,EAAQ,MAAM,SAASptG,GAAOqrG,CAAa;AAC9E,MAAI,CAAC6C;AACD,WAAO;AACX,MAAI95C,IAAY85C,EAAI,UAAU,QAAQA,EAAI,UAAU,GAAG,GACnD37G,KAAS07G,IAAOb,EAAQ,OAAOA,EAAQ,QAAQ,aAAac,EAAI,WAAWluG,EAAM,UAAU,YAAW,GAAI2rG,GAAaN,CAAa,GACpI8C,IAAU,IAAIrB,GAAamB,IAAO17G,IAAQ27G,EAAI,WAAWD,IAAOC,EAAI,YAAY37G,GAAO,MAAM,GAAG,EAAE;AACtG,SAAO27G,EAAI,UAAU,aAAa95C,CAAS,EAAE,QAAQk5C,IAAY,EAAE,MAAAW,GAAM,cAAcE,EAAO,CAAE;AACpG;AACA,IAAIC,KAAsB,IAAOC,KAA6B;AAK9D,SAASX,GAAkB1tG,GAAO;AAC9B,MAAIiK,IAAUjK,EAAM;AACpB,MAAIquG,MAA8BpkG,GAAS;AACvC,IAAAmkG,KAAsB,IACtBC,KAA6BpkG;AAC7B,aAASjX,IAAI,GAAGA,IAAIiX,EAAQ,QAAQjX;AAChC,UAAIiX,EAAQjX,CAAC,EAAE,KAAK,sBAAsB;AACtC,QAAAo7G,KAAsB;AACtB;AAAA,MACJ;AAAA,EACR;AACA,SAAOA;AACX;AASA,MAAMd,KAAa,IAAI33C,GAAU,SAAS,GACpC63C,KAAkB,IAAI73C,GAAU,cAAc;AAUpD,SAASy3C,GAAQrnF,IAAS,IAAI;AAC1B,SAAAA,IAAS;AAAA,IAAE,OAAOA,EAAO,SAAS;AAAA,IAC9B,eAAeA,EAAO,iBAAiB;AAAA,EAAG,GACvC,IAAI0vC,GAAO;AAAA,IACd,KAAK63C;AAAA,IACL,OAAO;AAAA,MACH,OAAO;AACH,eAAO,IAAIR,GAAa3B,GAAO,OAAOA,GAAO,OAAO,MAAM,GAAG,EAAE;AAAA,MACnE;AAAA,MACA,MAAM3+D,GAAI8hE,GAAMtuG,GAAO;AACnB,eAAOmtG,GAAiBmB,GAAMtuG,GAAOwsC,GAAIzmB,CAAM;AAAA,MACnD;AAAA,IACZ;AAAA,IACQ,QAAAA;AAAA,IACA,OAAO;AAAA,MACH,iBAAiB;AAAA,QACb,YAAYrB,GAAM7kB,GAAG;AACjB,cAAI0uG,IAAY1uG,EAAE,WACd89E,IAAU4wB,KAAa,gBAAgBC,KAAOD,KAAa,gBAAgBN,KAAO;AACtF,iBAAKtwB,KAEL99E,EAAE,eAAc,GACT89E,EAAQj5D,EAAK,OAAOA,EAAK,QAAQ,KAF7B;AAAA,QAGf;AAAA,MAChB;AAAA,IACA;AAAA,EACA,CAAK;AACL;AACA,SAAS+pF,GAAaR,GAAMrzB,GAAQ;AAChC,SAAO,CAAC56E,GAAO61D,MAAa;AACxB,QAAIy4C,IAAOhB,GAAW,SAASttG,CAAK;AACpC,QAAI,CAACsuG,MAASL,IAAOK,EAAK,SAASA,EAAK,MAAM,cAAc;AACxD,aAAO;AACX,QAAIz4C,GAAU;AACV,UAAIrpB,IAAKwhE,GAAgBM,GAAMtuG,GAAOiuG,CAAI;AAC1C,MAAIzhE,KACAqpB,EAAS+kB,IAASpuC,EAAG,eAAc,IAAKA,CAAE;AAAA,IAClD;AACA,WAAO;AAAA,EACX;AACJ;AAIA,MAAMgiE,KAAOC,GAAa,IAAO,EAAI,GAI/BR,KAAOQ,GAAa,IAAM,EAAI;AChapC,SAAS/yB,GAAS1xE,GAAQ4I,GAAM;AAC9B,gBAAO,OAAO5I,GAAQ;AAAA,IACpB,MAAM;AAAA,MACJ,SAAS;AAAA,MACT,GAAG4I;AAAA,IACT;AAAA,EACA,CAAG,GACM5I;AACT;AACA,MAAM0kG,KAAcrrB,EAAS,QAAQ,MAAM,MAAMmrB,EAAI;AACrD9yB,GAASgzB,IAAa;AAAA,EACpB,aAAa;AACf,CAAC;AACD,MAAMC,KAActrB,EAAS,QAAQ,MAAM,MAAM4qB,EAAI;AACrDvyB,GAASizB,IAAa;AAAA,EACpB,aAAa;AACf,CAAC;AACD,MAAMC,KAAwBlqB,GAAK,CAAA,GAAI,uBAAuB;AAC9DhJ,GAASkzB,IAAuB;AAAA,EAC9B,aAAa;AACf,CAAC;AACD,MAAMC,KAAwB1qB;AAAA,EAC5B,CAAC3H,MAAQsyB,GAAUtyB,EAAI,IAAIoyB,GAAsB,GAAG,CAAC;AACvD;AACAlzB,GAASmzB,IAAuB;AAAA,EAC9B,aAAa;AACf,CAAC;AACD,MAAME,KAAgBhqB,GAAW,iBAAiB;AAAA,EAChD,MAAM;AAAA,IACJ,WAAW;AAAA,IACX,SAAS,CAACvI,MAAQ;AAChB,YAAMpjB,IAAWojB,EAAI,IAAIwB,EAAW;AACpC,aAAO,MAAM5kB,EAAS,KAAKs1C,GAAY,GAAG;AAAA,IAC5C;AAAA,EACJ;AAAA,EACE,MAAM;AAAA,IACJ,WAAW,CAAC,SAAS,aAAa;AAAA,IAClC,SAAS,CAAClyB,MAAQ;AAChB,YAAMpjB,IAAWojB,EAAI,IAAIwB,EAAW;AACpC,aAAO,MAAM5kB,EAAS,KAAKu1C,GAAY,GAAG;AAAA,IAC5C;AAAA,EACJ;AACA,CAAC;AACDjzB,GAASqzB,GAAc,KAAK;AAAA,EAC1B,aAAa;AACf,CAAC;AACDrzB,GAASqzB,GAAc,WAAW;AAAA,EAChC,aAAa;AACf,CAAC;AACD,MAAM3B,KAAU;AAAA,EACdwB;AAAA,EACAC;AAAA,EACAE;AAAA,EACAL;AAAA,EACAC;AACF,EAAE,KAAI;;AC3CN,MAAMK,KAA6C;AAAA,EACjD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAEMC,KAAuC;AAAA,EAC3C,OACE;AAAA,EACF,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OACE;AAAA,EACF,OACE;AACJ;AAEA,MAAMC,GAAY;AAAA,EAGhB,YAAYnpF,GAA+B;AAFnC,IAAA7oB,EAAA;AAON,UAAMiyG,IAHY,IAAI;AAAA,MACpB,OAAO,SAAW,MAAc,OAAO,SAAS,SAAS;AAAA,IAAA,EAE5B,IAAI,OAAO,GAEpCjsE,IACJ,OAAO,UAAY,OAAeksE,KAAcA,KAAc,CAAA,GAC1DC,IAAWnsE,EAAI,OACfosE,IAAgBpsE,EAAI,aACpBqsE,IAAkBrsE,EAAI,eACtBssE,IAAkBtsE,EAAI,eAEtBqf,IAAgB,CACpBtxD,MACyB;AACzB,UAAKA;AACL,eAAI,MAAM,QAAQA,CAAK,IACdA,EACJ,IAAI,CAAC0G,MAAUA,GAAO,SAAA,EAAW,KAAA,CAAM,EACvC,OAAO,CAACA,MAA2B,EAAQA,CAAM,IAE/C1G,EACJ,MAAM,GAAG,EACT,IAAI,CAAC0G,MAAUA,EAAM,KAAA,CAAM,EAC3B,OAAO,CAACA,MAAUA,EAAM,SAAS,CAAC;AAAA,IACvC;AAEA,SAAK,SAAS;AAAA,MACZ,SAASw3G,MAAiB,QAAQE,MAAa;AAAA,MAC/C,OACGF,KAA8BG,KAA8B;AAAA,MAC/D,SAAS/sD,EAAcgtD,CAAe;AAAA,MACtC,gBAAgBhtD,EAAcitD,CAAe;AAAA,MAC7C,iBAAiB;AAAA,MACjB,GAAGzpF;AAAA,IAAA,GAGL,KAAK,OAAO,UAAUw8B,EAAc,KAAK,OAAO,OAAO,GACvD,KAAK,OAAO,iBAAiBA,EAAc,KAAK,OAAO,cAAc;AAAA,EACvE;AAAA;AAAA;AAAA;AAAA,EAKA,UAAUx8B,GAAoC;AAC5C,UAAMw8B,IAAgB,CACpBtxD,MACyB;AACzB,UAAKA;AACL,eAAI,MAAM,QAAQA,CAAK,IACdA,EACJ,IAAI,CAAC0G,MAAUA,GAAO,SAAA,EAAW,KAAA,CAAM,EACvC,OAAO,CAACA,MAA2B,EAAQA,CAAM,IAE/C1G,EACJ,MAAM,GAAG,EACT,IAAI,CAAC0G,MAAUA,EAAM,KAAA,CAAM,EAC3B,OAAO,CAACA,MAAUA,EAAM,SAAS,CAAC;AAAA,IACvC,GAEMxC,IAAoB;AAAA,MACxB,GAAG,KAAK;AAAA,MACR,GAAG4wB;AAAA,IAAA;AAGL,IAAA5wB,EAAK,UAAUotD,EAAcx8B,EAAO,WAAW,KAAK,OAAO,OAAO,GAClE5wB,EAAK,iBAAiBotD;AAAA,MACpBx8B,EAAO,kBAAkB,KAAK,OAAO;AAAA,IAAA,GAGvC,KAAK,SAAS5wB;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA,EAKA,YAAyB;AACvB,WAAO,EAAE,GAAG,KAAK,OAAA;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA,EAKA,OAAOoI,IAAkB,QAAc;AACrC,SAAK,OAAO,UAAU,IACtB,KAAK,OAAO,QAAQA;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA,EAKA,UAAgB;AACd,SAAK,OAAO,UAAU;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA,EAKQ,UAAUkyG,GAAgBlyG,GAA0B;AAkB1D,WAjBI,GAAC,KAAK,OAAO,WAKbyxG,GAAiBzxG,CAAK,IAAIyxG,GAAiB,KAAK,OAAO,KAAK,KAK5D,KAAK,OAAO,WAAW,KAAK,OAAO,QAAQ,SAAS,KAClD,CAAC,KAAK,OAAO,QAAQ,KAAK,CAACv4G,MAAMg5G,EAAO,SAASh5G,CAAC,CAAC,KAMrD,KAAK,OAAO,kBAAkB,KAAK,OAAO,eAAe,SAAS,KAChE,KAAK,OAAO,eAAe,KAAK,CAACA,MAAMg5G,EAAO,SAASh5G,CAAC,CAAC;AAAA,EAMjE;AAAA;AAAA;AAAA;AAAA,EAKQ,aAAqB;AAC3B,QAAI,CAAC,KAAK,OAAO;AACf,aAAO;AAET,UAAM4rB,wBAAU,KAAA;AAChB,WAAO,GAAGA,EAAI,SAAA,EAAW,SAAA,EAAW,SAAS,GAAG,GAAG,CAAC,IAAIA,EAAI,WAAA,EAAa,SAAA,EAAW,SAAS,GAAG,GAAG,CAAC,IAAIA,EAAI,aAAa,WAAW,SAAS,GAAG,GAAG,CAAC,IAAIA,EAAI,kBAAkB,SAAA,EAAW,SAAS,GAAG,GAAG,CAAC;AAAA,EAC3M;AAAA;AAAA;AAAA;AAAA,EAKQ,IACNotF,GACAlyG,GACAgK,GACAlJ,GACM;AACN,QAAI,CAAC,KAAK,UAAUoxG,GAAQlyG,CAAK;AAC/B;AAGF,UAAMmyG,IAAY,KAAK,WAAA,GACjBC,IAAgBpyG,MAAU,UAAUA,MAAU,UAAUA,IAAQ;AAEtE,QAAI,OAAO,SAAW,OAAe,OAAO,SAAS;AACnD,YAAM3H,IAAQ;AAAA,QACZ,MAAM2H,EAAM,YAAA,CAAa;AAAA,QACzB0xG,GAAW1xG,CAAK;AAAA,QAChBmyG,IAAY,IAAIA,CAAS,MAAM;AAAA,QAC/B,IAAID,CAAM;AAAA,QACVloG;AAAA,MAAA,EACA,OAAO,CAAC4kC,MAAMA,MAAM,EAAE;AAExB,MAAI9tC,MAAS,SACX,QAAQsxG,CAAyC,EAAE,GAAG/5G,GAAOyI,CAAI,IAEjE,QAAQsxG,CAAyC,EAAE,GAAG/5G,CAAK;AAAA,IAE/D;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM65G,GAAgBloG,GAAiB5F,GAAuB;AAC5D,SAAK,IAAI8tG,GAAQ,SAASloG,GAAS5F,CAAK;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA,EAKA,KAAK8tG,GAAgBloG,GAAiBlJ,GAAsB;AAC1D,SAAK,IAAIoxG,GAAQ,QAAQloG,GAASlJ,CAAI;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA,EAKA,KAAKoxG,GAAgBloG,GAAiBlJ,GAAsB;AAC1D,SAAK,IAAIoxG,GAAQ,QAAQloG,GAASlJ,CAAI;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA,EAKA,MAAMoxG,GAAgBloG,GAAiBlJ,GAAsB;AAC3D,SAAK,IAAIoxG,GAAQ,SAASloG,GAASlJ,CAAI;AAAA,EACzC;AAAA;AAAA;AAAA;AAAA,EAKA,MAAMoxG,GAAgBloG,GAAiBlJ,GAAsB;AAC3D,SAAK,IAAIoxG,GAAQ,SAASloG,GAASlJ,CAAI;AAAA,EACzC;AACF;AAGO,MAAMuxG,KAAc,IAAIV,GAAA;AAKxB,SAASW,GAAmBC,GAAoB;AACrD,SAAO;AAAA,IACL,OAAO,CAACvoG,GAAiB5F,MACvBiuG,GAAY,MAAME,GAAYvoG,GAAS5F,CAAK;AAAA,IAC9C,MAAM,CAAC4F,GAAiBlJ,MACtBuxG,GAAY,KAAKE,GAAYvoG,GAASlJ,CAAI;AAAA,IAC5C,MAAM,CAACkJ,GAAiBlJ,MACtBuxG,GAAY,KAAKE,GAAYvoG,GAASlJ,CAAI;AAAA,IAC5C,OAAO,CAACkJ,GAAiBlJ,MACvBuxG,GAAY,MAAME,GAAYvoG,GAASlJ,CAAI;AAAA,IAC7C,OAAO,CAACkJ,GAAiBlJ,MACvBuxG,GAAY,MAAME,GAAYvoG,GAASlJ,CAAI;AAAA,EAAA;AAEjD;AAKO,SAAS0xG,KAAuB;AACrC,UAAQ;AAAA,IACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA+BA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEJ;AAGI,OAAO,SAAW,QACnB,OAAe,cAAcH,IAC7B,OAAe,iBAAiBG;AC5SnC,MAAMpiE,KAAW;AAAA,EACf,UAAU;AAAA,EACV,UAAU;AAAA,EACV,cAAc;AAAA,EACd,SAAS;AAAA,EACT,WAAW;AACb;AAKA,SAASM,GAAgB93C,GAAuB;AAC9C,SAAO,OAAO,OAAOw3C,EAAQ,EAAE,KAAK,CAACptC,OACnCA,EAAQ,YAAY,GACbA,EAAQ,KAAKpK,CAAI,EACzB;AACH;AAGA,MAAM65G,KAAa,CAAC/+G,OAAyB;AAAA,EAC3C,MAAM;AAAA,EACN,OAAAA;AACF,IAGMg/G,KAAe,CAACliE,GAAgB98C,OAAmB;AAAA,EACvD,MAAM;AAAA,EACN,QAAA88C;AAAA,EACA,UAAU,CAACiiE,GAAW/+G,CAAK,CAAC;AAC9B;AAMA,SAASi/G,GAAkB/5G,GAAqB;AAC9C,QAAMy2B,IAAe,CAAA;AACrB,MAAIujF,IAAY;AAGhB,QAAMC,IACJ;AAEF,MAAIj1G;AACJ,UAAQA,IAAQi1G,EAAgB,KAAKj6G,CAAI,OAAO,QAAM;AACpD,UAAMm6C,IAAYn1C,IAAQ,CAAC,KAAK,IAC1Bk1G,IAAal1G,GAAO,SAAS;AAEnC,IAAIk1G,IAAaF,KACfvjF,EAAM,KAAKojF,GAAW75G,EAAK,UAAUg6G,GAAWE,CAAU,CAAC,CAAC,GAI1Dl1G,IAAQ,CAAC,IAEXyxB,EAAM,KAAKqjF,GAAa,YAAY90G,IAAQ,CAAC,KAAK,EAAE,CAAC,IAC5CA,IAAQ,CAAC,IAElByxB,EAAM,KAAKqjF,GAAa,YAAY90G,IAAQ,CAAC,KAAK,EAAE,CAAC,IAC5CA,IAAQ,CAAC,KAElByxB,EAAM,KAAKqjF,GAAa,YAAY90G,IAAQ,CAAC,KAAK,EAAE,CAAC,GACrDyxB,EAAM,KAAKqjF,GAAa,YAAY90G,IAAQ,CAAC,KAAK,EAAE,CAAC,KAC5CA,IAAQ,CAAC,IAElByxB,EAAM,KAAKqjF,GAAa,WAAW90G,IAAQ,CAAC,KAAK,EAAE,CAAC,IAC3CA,IAAQ,EAAE,MAEnByxB,EAAM,KAAKqjF,GAAa,aAAa90G,IAAQ,EAAE,KAAK,EAAE,CAAC,GACnDA,IAAQ,EAAE,KACZyxB,EAAM,KAAKqjF,GAAa,WAAW90G,EAAM,EAAE,KAAK,EAAE,CAAC,IAIvDg1G,IAAYE,IAAa//D,EAAU;AAAA,EACrC;AAGA,SAAI6/D,IAAYh6G,EAAK,UACnBy2B,EAAM,KAAKojF,GAAW75G,EAAK,UAAUg6G,CAAS,CAAC,CAAC,GAG3CvjF;AACT;AAMA,SAAS0jF,GAAc/uG,GAAgB;AAIrC,MAHIA,KAAS,QAGT,OAAOA,KAAS,SAAU,QAAOA;AAGrC,MAAI,MAAM,QAAQA,CAAI;AACpB,WAAOA,EAAK,IAAI,CAAC6M,MAASkiG,GAAcliG,CAAI,CAAC;AAI/C,QAAM5N,IAAe,CAAA;AAGrB,EAAI,UAAUe,MACZf,EAAQ,OAAOe,EAAK;AAItB,aAAWe,KAAOf;AAChB,IAAIe,MAAQ,YAAYA,MAAQ,cAC3Bf,EAAK,eAAee,CAAG,KACxBA,MAAQ,UACRA,MAAQ,eAGZ9B,EAAQ8B,CAAG,IAAIguG,GAAc/uG,EAAKe,CAAG,CAAC;AAGxC,SAAO9B;AACT;AAMA,SAAS2tC,GAAoB5sC,GAAqB;AAChD,MAAI,CAACA,EAAK,SAAU,QAAO,CAAA;AAE3B,QAAM6sC,IAAsB,CAAA;AAE5B,aAAWnwC,KAASsD,EAAK,UAAU;AACjC,QAAItD,EAAM,SAAS,QAAQ;AAEzB,UAAI,cAAcA,KAAS,MAAM,QAASA,EAAc,QAAQ,GAAG;AACjE,cAAMsyG,IAAyBpiE,GAAoBlwC,CAAe,GAE5DuyG,IAAWF,GAAcryG,CAAK;AACpC,QAAAuyG,EAAS,WAAWD,GACpBniE,EAAa,KAAKoiE,CAAQ;AAAA,MAC5B;AAEE,QAAApiE,EAAa,KAAKkiE,GAAcryG,CAAK,CAAC;AAExC;AAAA,IACF;AAEA,UAAMwyG,IAAYxyG;AAClB,QAAI,CAACgwC,GAAgBwiE,EAAU,KAAK,GAAG;AAErC,MAAAriE,EAAa,KAAK4hE,GAAWS,EAAU,KAAK,CAAC;AAC7C;AAAA,IACF;AAEA,UAAM1iC,IAASmiC,GAAkBO,EAAU,KAAK;AAChD,IAAAriE,EAAa,KAAK,GAAG2/B,CAAM;AAAA,EAC7B;AAEA,SAAO3/B;AACT;AAMA,SAASsiE,GAASnvG,GAAkB;AAClC,MAAI,EAAE,cAAcA,MAAS,CAAC,MAAM,QAASA,EAAa,QAAQ;AAEhE,WAAO+uG,GAAc/uG,CAAI;AAO3B,QAAMovG,IAAcxiE,GAJL5sC,CAI+B,GAGxCqvG,IAAYN,GAAc/uG,CAAI;AACpC,SAAAqvG,EAAU,WAAWD,GACdC;AACT;AAKA,SAASC,GAActvG,GAAgB;AACrC,MAAIA,MAAS,QAAQ,OAAOA,KAAS;AACnC,WAAOA;AAGT,MAAI,MAAM,QAAQA,CAAI;AACpB,WAAOA,EAAK,IAAIsvG,EAAa;AAI/B,QAAMrwG,IAAe,CAAA;AAErB,aAAW8B,KAAOf;AAEhB,IAAIe,MAAQ,YAAYA,MAAQ,cAI5Bf,EAAK,eAAee,CAAG,MACzB9B,EAAQ8B,CAAG,IAAIuuG,GAActvG,EAAKe,CAAG,CAAC;AAI1C,SAAO9B;AACT;AAOA,MAAMswG,KAAsD;AAAA,EAC1D,UAAU,CAAC,OAAO,KAAK;AAAA,EACvB,UAAU,CAAC,OAAO,KAAK;AAAA,EACvB,WAAW,CAAC,OAAO,KAAK;AAAA,EACxB,SAAS,CAAC,OAAO,KAAK;AAAA,EACtB,cAAc,CAAC,OAAO,KAAK;AAC7B,GAEMC,KAA8C;AAAA,EAClD,QAAQ;AAAA,IACN,EAAE,WAAW,KAAK,aAAa,WAAA;AAAA,IAC/B,EAAE,WAAW,KAAK,aAAa,WAAA;AAAA,EAAW;AAAA,EAE5C,UAAU;AAAA,IACR,eAAe,CAACxvG,GAAMuuF,GAAS9vF,GAAO0S,MAAS;AAC7C,YAAM,EAAE,QAAAq7B,MAAWxsC,GACb,CAACsO,GAAMS,CAAK,IAAIwgG,GAAkB/iE,CAAM,KAAK,CAAC,IAAI,EAAE,GAEpD1e,IAAUrvB,EAAM,cAAc0S,CAAI,GAClCtB,IAAOpR,EAAM,MAAM,cAAqB;AAE9C,UAAI/O,IAAQo+B,EAAQ,KAAKxf,CAAI;AAE7B,aAAA5e,KAAS+O,EAAM,kBAAkBuB,GAAa;AAAA,QAC5C,GAAG8tB,EAAQ,QAAA;AAAA,QACX,QAAQp+B;AAAA,QACR,OAAOqf,IAAQA,EAAM,OAAO,CAAC,IAAI;AAAA,MAAA,CAClC,GAEDrf,KAASo+B,EAAQ,KAAK/e,CAAK,GAC3Bc,EAAA,GACOngB;AAAA,IACT;AAAA,EAAA;AAEJ,GAMa+/G,KAA+C,WAAY;AAEtE,QAAM3yG,IAAO,KAAK,KAAA;AAKlB,UAHGA,EAAK,yBACLA,EAAK,uBAAuB,CAAA,IAEpB,KAAK0yG,EAAsB,GAE/B,CAACjoG,MAAe;AAErB,UAAMmoG,IAAUP,GAAS5nG,CAAI;AAE7B,WAAO+nG,GAAcI,CAAO;AAAA,EAC9B;AACF;ACpRA,SAASC,GACPC,GACAC,GACAC,GACY;AACZ,SAAO;AAAA;AAAA,IAEL,UAAU;AAAA,IAEV,UAAU;AAAA,MACR,EAAE,KAAK,qBAAqBD,CAAU,KAAA;AAAA,MACtC,GAAIA,MAAe,aAAa,CAAC,EAAE,KAAK,MAAA,CAAO,IAAI,CAAA;AAAA,MACnD,GAAIA,MAAe,aAAa,CAAC,EAAE,KAAK,MAAA,CAAO,IAAI,CAAA;AAAA,MACnD,GAAIA,MAAe,cAAc,CAAC,EAAE,KAAK,OAAA,CAAQ,IAAI,CAAA;AAAA,IAAC;AAAA,IAGxD,OAAO,MACDA,MAAe,aACV,CAAC,OAAO,EAAE,eAAeA,GAAY,OAAOC,EAAA,GAAa,CAAC,IAC/DD,MAAe,aACV,CAAC,OAAO,EAAE,eAAeA,GAAY,OAAOC,EAAA,GAAa,CAAC,IAC/DD,MAAe,cACV,CAAC,QAAQ,EAAE,eAAeA,GAAY,OAAOC,EAAA,GAAa,CAAC,IAC7D,CAAC,QAAQ,EAAE,eAAeD,GAAY,OAAOC,EAAA,GAAa,CAAC;AAAA,IAGpE,eAAe;AAAA,MACb,OAAO,CAAC9vG,MACNA,EAAK,SAAS,kBAAkBA,EAAK,WAAW6vG;AAAA,MAClD,QAAQ,CAACpxG,GAAYuB,GAAWs+C,MAAkB;AAChD,QAAA7/C,EAAM,SAAS6/C,CAAQ;AAIvB,cAAMyxD,IAAuB,CAAA;AAE7B,YAAI/vG,EAAK,YAAY,MAAM,QAAQA,EAAK,QAAQ;AAC9C,qBAAWtD,KAASsD,EAAK;AACvB,YAAItD,KAASA,EAAM,SAAS,UAAUA,EAAM,SAC1CqzG,EAAW,KAAK,OAAOrzG,EAAM,KAAK,CAAC;AAMzC,cAAMszG,IAAYD,EAAW,IAAI,CAACrgH,OAAW;AAAA,UAC3C,MAAM;AAAA,UACN,OAAAA;AAAA,QAAA,EACA;AAEF,QAAA+O,EAAM,KAAKuxG,CAAS,GACpBvxG,EAAM,UAAU6/C,CAAQ;AAAA,MAC1B;AAAA,IAAA;AAAA,IAGF,YAAY;AAAA,MACV,OAAO,CAAChY,MAAcA,EAAK,KAAK,SAASspE;AAAA,MACzC,QAAQ,CAACnxG,GAAY6nC,MAAc;AACjC,QAAA7nC,EAAM,SAAS6nC,GAAM,gBAAgB,QAAW;AAAA,UAC9C,QAAQupE;AAAA,QAAA,CACT;AAAA,MACH;AAAA,IAAA;AAAA,EACF;AAEJ;AAOO,MAAMI,KAAiB1tB;AAAA,EAAM;AAAA,EAAkB,MACpDotB,GAAiB,kBAAkB,YAAY,iBAAiB;AAClE,GACaO,KAAiB3tB;AAAA,EAAM;AAAA,EAAkB,MACpDotB,GAAiB,kBAAkB,YAAY,iBAAiB;AAClE,GACaQ,KAAkB5tB;AAAA,EAAM;AAAA,EAAmB,MACtDotB,GAAiB,mBAAmB,aAAa,kBAAkB;AACrE,GACaS,KAAgB7tB;AAAA,EAAM;AAAA,EAAiB,MAClDotB,GAAiB,iBAAiB,WAAW,gBAAgB;AAC/D,GACaU,KAAqB9tB;AAAA,EAAM;AAAA,EAAsB,MAC5DotB,GAAiB,sBAAsB,gBAAgB,qBAAqB;AAC9E,GA6BaW,KAAe9sB;AAAA,EAC1B;AAAA,EACA,CAACvI,MAAqC;AACpC,UAAM9zC,IAAS8zC,EAAI,IAAIM,EAAS;AAEhC,WAAO;AAAA,MACL,eAAe9jB,GAAWtwB,EAAO,MAAM,cAAc;AAAA,MACrD,eAAeswB,GAAWtwB,EAAO,MAAM,cAAc;AAAA,MACrD,eAAeswB,GAAWtwB,EAAO,MAAM,eAAe;AAAA,MACtD,eAAeswB,GAAWtwB,EAAO,MAAM,aAAa;AAAA,MACpD,eAAeswB,GAAWtwB,EAAO,MAAM,kBAAkB;AAAA,IAAA;AAAA,EAE7D;AACF;AAIsCy7C,GAAO,MACpC,IAAI1uB,GAAO;AAAA,EAChB,KAAK,IAAIE,GAAU,kBAAkB;AAAA,EACrC,OAAO;AAAA,IACL,cAAc;AACZ,aAAO;AAAA,IACT;AAAA,EAAA;AACF,CACD,CACF;AAEM,MAAMm8C,KAAqB3tB,GAAO,MAChC,IAAI1uB,GAAO;AAAA,EAChB,KAAK,IAAIE,GAAU,cAAc;AAAA,CAClC,CACF,GAIYo8C,KAA2BtsB;AAAA,EACtC;AAAA,EACA,MAAMurB;AACR,GC3IMgB,KAASnC,GAAmB,iBAAiB;AA8B5C,MAAMoC,GAAgB;AAAA,EAAtB;AACG,IAAA/0G,EAAA,sCAA+C,IAAA;AAC/C,IAAAA,EAAA,gBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKhC,UAAUy/E,GAAsB;AAC9B,SAAK,SAASA;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA,EAKA,SAASplE,GAAqC;AAC5C,IAAI,KAAK,SAAS,IAAIA,EAAW,EAAE,KACjCy6F,GAAO;AAAA,MACL,YAAYz6F,EAAW,EAAE;AAAA,IAAA,GAG7B,KAAK,SAAS,IAAIA,EAAW,IAAIA,CAAU,GAC3Cy6F,GAAO,MAAM,uBAAuBz6F,EAAW,EAAE,EAAE;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA,EAKA,cAAcuvB,GAAwC;AACpD,IAAAA,EAAY,QAAQ,CAACoqB,MAAQ,KAAK,SAASA,CAAG,CAAC;AAAA,EACjD;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQghD,GAA4B;AAClC,QAAI,CAAC,KAAK;AACRF,aAAAA,GAAO,MAAM,wBAAwB,GAC9B;AAGT,UAAMr0B,IAAU,KAAK,SAAS,IAAIu0B,CAAS;AAC3C,QAAI,CAACv0B;AACHq0B,aAAAA,GAAO,KAAK,YAAYE,CAAS,aAAa,GACvC;AAGT,QAAI;AACF,UAAIp8G,IAAS;AACb,kBAAK,OAAO,OAAO,CAAC0mF,MAAa;AAC/B,cAAM/sE,IAA0B;AAAA,UAC9B,QAAQ,KAAK;AAAA,UACb,UAAU+sE,EAAI,IAAIwB,EAAW;AAAA,UAC7B,MAAMxB,EAAI,IAAIZ,EAAa;AAAA,UAC3B,OAAOY,EAAI,IAAIZ,EAAa,EAAE;AAAA,QAAA;AAEhC,QAAA9lF,IAAS6nF,EAAQ,QAAQluE,CAAO;AAAA,MAClC,CAAC,GACM3Z;AAAA,IACT,SAAS6L,GAAO;AACdqwG,aAAAA,GAAO,MAAM,4BAA4BE,CAAS,MAAMvwG,CAAK,GACtD;AAAA,IACT;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,WAAWuwG,GAAkD;AAC3D,WAAO,KAAK,SAAS,IAAIA,CAAS;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA,EAKA,iBAAsC;AACpC,WAAO,MAAM,KAAK,KAAK,SAAS,QAAQ;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA,EAKA,WAAWA,GAA4B;AACrC,WAAO,KAAK,SAAS,IAAIA,CAAS;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA,EAKA,eAAeA,GAA4B;AACzC,QAAI,CAAC,KAAK;AACR,aAAO;AAGT,UAAMv0B,IAAU,KAAK,SAAS,IAAIu0B,CAAS;AAC3C,QAAI,CAACv0B,KAAW,CAACA,EAAQ;AACvB,aAAO;AAGT,QAAIw0B,IAAc;AAClB,gBAAK,OAAO,OAAO,CAAC31B,MAAa;AAC/B,YAAM93D,IAAO83D,EAAI,IAAIZ,EAAa;AAClC,MAAAu2B,IAAcx0B,EAAQ,SAAUj5D,EAAK,KAAK;AAAA,IAC5C,CAAC,GAEMytF;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,aAAanyG,GAAoBm+C,GAA2B;AACjE,UAAM,EAAE,MAAAt8B,GAAM,IAAAokB,EAAA,IAAOjmC,EAAM,WACrB,EAAE,OAAAy5C,MAAUz5C,EAAM;AAGxB,QAAI,CAFey5C,EAAM0E,CAAQ,EAEhB,QAAO;AAExB,QAAIi0D,IAAiB;AAErB,WAAApyG,EAAM,IAAI,aAAa6hB,GAAMokB,GAAI,CAAC1kC,MAC5BA,EAAK,WACOA,EAAK,SAAS,CAAA,GACN,KAAK,CAACsmC,MAASA,EAAK,KAAK,SAASsW,CAAQ,KAE9Di0D,IAAiB,IACV,MAGJ,EACR,GAEMA;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,aACLpyG,GACAm+C,GACAngD,GACS;AACT,UAAM,EAAE,OAAAo8C,MAAUp6C,EAAM;AACxB,QAAI6pB,IAAQuwB,EAAM;AAElB,WAAOvwB,IAAQ,KAAG;AAChB,YAAMtoB,IAAO64C,EAAM,KAAKvwB,CAAK;AAC7B,UAAItoB,EAAK,KAAK,SAAS48C,GAAU;AAC/B,YAAI,CAACngD,EAAO,QAAO;AAEnB,cAAMq0G,IAAY9wG,EAAK,SAAS,CAAA;AAChC,eAAO,OAAO,KAAKvD,CAAK,EAAE,MAAM,CAACsE,MAAQ+vG,EAAU/vG,CAAG,MAAMtE,EAAMsE,CAAG,CAAC;AAAA,MACxE;AACA,MAAAunB;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,eAAenF,GAA2B;AAC/C,UAAM,EAAE,OAAA1kB,GAAO,UAAA61D,EAAA,IAAanxC,GACtB,EAAE,OAAA01B,MAAUp6C,EAAM;AAGxB,QAAI6pB,IAAQuwB,EAAM;AAClB,WAAOvwB,IAAQ,KACTuwB,EAAM,KAAKvwB,CAAK,EAAE,KAAK,SAAS;AAGpC,MAAAA;AAGF,QAAIA,MAAU,EAAG,QAAO;AAExB,UAAMyoF,IAAiBl4D,EAAM,KAAKvwB,CAAK,GACjC0oF,IAAkBn4D,EAAM,OAAOvwB,CAAK,GACpC2oF,IAAgBD,IAAkBD,EAAe,UAEjD9lE,IAAKxsC,EAAM,IACXzF,IAAU+3G,EAAe;AAE/B,WAAA9lE,EAAG,YAAY+lE,GAAiBC,GAAej4G,CAAO,GACtDs7D,EAASrpB,CAAE,GAEJ;AAAA,EACT;AACF;AAKO,SAASimE,KAA8C;AAC5D,SAAO;AAAA;AAAA,IAEL;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,SAAS,CAACj2B,MAAQA,EAAI,SAAS,KAAKkyB,GAAY,GAAG;AAAA,MACnD,UAAU,MAAM;AAAA;AAAA,IAAA;AAAA,IAElB;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,SAAS,CAAClyB,MAAQA,EAAI,SAAS,KAAKmyB,GAAY,GAAG;AAAA,MACnD,UAAU,MAAM;AAAA,IAAA;AAAA;AAAA,IAGlB;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,SAAS,CAACnyB,MAAQA,EAAI,SAAS,KAAK+K,GAAoB,GAAG;AAAA,MAC3D,UAAU,CAACvnF,MAAUiyG,GAAgB,aAAajyG,GAAO,QAAQ;AAAA,IAAA;AAAA,IAEnE;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,SAAS,CAACw8E,MAAQA,EAAI,SAAS,KAAKyK,GAAsB,GAAG;AAAA,MAC7D,UAAU,CAACjnF,MAAUiyG,GAAgB,aAAajyG,GAAO,UAAU;AAAA,IAAA;AAAA,IAErE;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,SAAS,CAACw8E,MAAQA,EAAI,SAAS,KAAK8lB,GAA2B,GAAG;AAAA,MAClE,UAAU,CAACtiG,MACTiyG,GAAgB,aAAajyG,GAAO,gBAAgB;AAAA,IAAA;AAAA,IAExD;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,SAAS,CAACw8E,MAAQA,EAAI,SAAS,KAAKoL,GAAwB,GAAG;AAAA,MAC/D,UAAU,CAAC5nF,MAAUiyG,GAAgB,aAAajyG,GAAO,YAAY;AAAA,IAAA;AAAA;AAAA,IAGvE;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,SAAS,CAACw8E,MACJy1B,GAAgB,aAAaz1B,EAAI,OAAO,WAAW,EAAE,OAAO,EAAA,CAAG,IAC1DA,EAAI,SAAS,KAAKoM,GAAoB,GAAG,IAE3CpM,EAAI,SAAS,KAAK6M,GAAqB,KAAK,CAAC;AAAA,MAEtD,UAAU,CAACrpF,MACTiyG,GAAgB,aAAajyG,GAAO,WAAW,EAAE,OAAO,EAAA,CAAG;AAAA,IAAA;AAAA,IAE/D;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,SAAS,CAACw8E,MACJy1B,GAAgB,aAAaz1B,EAAI,OAAO,WAAW,EAAE,OAAO,EAAA,CAAG,IAC1DA,EAAI,SAAS,KAAKoM,GAAoB,GAAG,IAE3CpM,EAAI,SAAS,KAAK6M,GAAqB,KAAK,CAAC;AAAA,MAEtD,UAAU,CAACrpF,MACTiyG,GAAgB,aAAajyG,GAAO,WAAW,EAAE,OAAO,EAAA,CAAG;AAAA,IAAA;AAAA,IAE/D;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,SAAS,CAACw8E,MACJy1B,GAAgB,aAAaz1B,EAAI,OAAO,YAAY,IAC/Cy1B,GAAgB,eAAez1B,EAAI,IAAI,IAEzCA,EAAI,SAAS,KAAKmN,GAAwB,GAAG;AAAA,MAEtD,UAAU,CAAC3pF,MAAUiyG,GAAgB,aAAajyG,GAAO,YAAY;AAAA,IAAA;AAAA,IAEvE;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,SAAS,CAACw8E,MACJy1B,GAAgB,aAAaz1B,EAAI,OAAO,YAAY,IAC/CA,EAAI,SAAS,KAAKoM,GAAoB,GAAG,IAE3CpM,EAAI,SAAS,KAAK0N,GAAuB,GAAG;AAAA,MAErD,UAAU,CAAClqF,MAAUiyG,GAAgB,aAAajyG,GAAO,YAAY;AAAA,IAAA;AAAA;AAAA,IAGvE;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,SAAS,CAACw8E,MACJy1B,GAAgB,aAAaz1B,EAAI,OAAO,aAAa,IAChDA,EAAI,SAAS,KAAK2P,GAAoB,GAAG,IAE3C3P,EAAI,SAAS,KAAKgP,GAAwB,GAAG;AAAA,MAEtD,UAAU,CAACxrF,MAAUiyG,GAAgB,aAAajyG,GAAO,aAAa;AAAA,IAAA;AAAA,IAExE;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,SAAS,CAACw8E,MACJy1B,GAAgB,aAAaz1B,EAAI,OAAO,cAAc,IACjDA,EAAI,SAAS,KAAK2P,GAAoB,GAAG,IAE3C3P,EAAI,SAAS,KAAKqP,GAAyB,GAAG;AAAA,MAEvD,UAAU,CAAC7rF,MAAUiyG,GAAgB,aAAajyG,GAAO,cAAc;AAAA,IAAA;AAAA,EACzE;AAEJ;AChUO,MAAM0yG,KAAiD;AAAA;AAAA,EAE5D;AAAA,IACE;AAAA,MACE,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA,IAAA;AAAA,IAET;AAAA,MACE,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA,IAAA;AAAA,IAET;AAAA,MACE,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA,IAAA;AAAA,IAET;AAAA,MACE,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA,IAAA;AAAA,EACT;AAAA;AAAA,EAGF;AAAA,IACE;AAAA,MACE,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA,IAAA;AAAA,IAET;AAAA,MACE,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA,IAAA;AAAA,IAET;AAAA,MACE,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA,MACP,eAAe;AAAA,IAAA;AAAA,IAEjB;AAAA,MACE,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA,IAAA;AAAA,EACT;AAAA;AAAA,EAGF;AAAA,IACE;AAAA,MACE,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA,IAAA;AAAA,IAET;AAAA,MACE,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA,IAAA;AAAA,EACT;AAEJ,GAMaC,KACX;AAAA;AAAA,EAEE,SAAS;AAAA,IACP;AAAA,MACE;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,MAET;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,MAET;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,IACT;AAAA,IAEF;AAAA,MACE;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,MAET;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,MAET;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,IACT;AAAA,EACF;AAAA;AAAA,EAIF,WAAW;AAAA,IACT;AAAA,MACE;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,MAET;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,MAET;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,QACP,eAAe;AAAA,MAAA;AAAA,MAEjB;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,IACT;AAAA,IAEF;AAAA,MACE;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,MAET;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,IACT;AAAA,EACF;AAAA;AAAA,EAIF,YAAY;AAAA,IACV;AAAA,MACE;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,IACT;AAAA,EACF;AAAA;AAAA,EAIF,aAAa;AAAA,IACX;AAAA,MACE;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,MAET;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,IACT;AAAA,IAEF;AAAA,MACE;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,MAET;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,MAET;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,IACT;AAAA,EACF;AAAA,EAGF,cAAc;AAAA,IACZ;AAAA,MACE;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,MAET;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,IACT;AAAA,IAEF;AAAA,MACE;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,MAET;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,MAET;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,IACT;AAAA,EACF;AAAA;AAAA,EAIF,YAAY;AAAA,IACV;AAAA,MACE;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,IACT;AAAA,IAEF;AAAA,MACE;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,MAET;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,MAET;AAAA,QACE,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MAAA;AAAA,IACT;AAAA,EACF;AAEJ;AAKK,MAAMC,GAAc;AAAA;AAAA,EASzB,YAAYC,GAAyB;AAR7B,IAAA31G,EAAA,iBAA8B;AAC9B,IAAAA,EAAA,0BAAmB;AACnB,IAAAA,EAAA,wBAAgC;AAChC,IAAAA,EAAA;AACA,IAAAA,EAAA,qBAAc;AACd;AAAA,IAAAA,EAAA,qBAAsB;AACtB;AAAA,IAAAA,EAAA,wBAAiB;AAGvB,SAAK,iBAAiB21G,KAAkB,MACxC,KAAK,kBAAkB,IAAIZ,GAAA,GAGvBY,MACF,KAAK,gBAAgB,UAAUA,CAAc,GAC7C,KAAK,gBAAgB,cAAcJ,IAAwB,IAI7D,KAAK,iBAAiB,KAAK,0BAAA;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA,EAKA,eAAen1G,GAAoB;AACjC,SAAK,cAAcA,KAAQ;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA,EAKA,iBAAyB;AACvB,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,oBAA0B;AACxB,SAAK,iBAAiB,CAAC,KAAK,gBAC5B,KAAK,0BAAA,GACL,KAAK,QAAA;AAAA,EACP;AAAA;AAAA;AAAA;AAAA,EAKQ,4BAAqC;AAC3C,QAAI;AACF,YAAMw1G,IAAQ,aAAa,QAAQ,6BAA6B;AAChE,aAAOA,IAAQ,KAAK,MAAMA,CAAK,IAAI;AAAA,IACrC,QAAQ;AACN,aAAO;AAAA,IACT;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKQ,4BAAkC;AACxC,QAAI;AACF,mBAAa;AAAA,QACX;AAAA,QACA,KAAK,UAAU,KAAK,cAAc;AAAA,MAAA;AAAA,IAEtC,QAAQ;AAAA,IAER;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKQ,kBAA2C;AACjD,QAAI,CAAC,KAAK;AACR,aAAOJ;AAIT,UAAM3sF,IAAS4sF,GAAwB,KAAK,WAAW;AACvD,WAAI5sF,KAKG2sF;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKQ,UAAgB;AACtB,QAAI,CAAC,KAAK,QAAS;AAMnB,IAHkB,KAAK,QAAQ;AAAA,MAC7B;AAAA,IAAA,EAEQ,QAAQ,CAAC5iG,MAAUA,EAAM,QAAQ;AAG3C,UAAMijG,IAAe,KAAK,gBAAA;AAC1B,QAAIC,IAAc;AAClB,UAAMC,IAAoB;AAE1B,IAAAF,EAAa,QAAQ,CAACjjG,GAAOojG,MAAe;AAC1C,YAAMC,IAAY,SAAS,cAAc,KAAK;AAC9C,MAAAA,EAAU,YAAY,+BACtBA,EAAU,aAAa,QAAQ,OAAO,GACtCA,EAAU;AAAA,QACR;AAAA,QACA,6BAA6BD,IAAa,CAAC;AAAA,MAAA,GAG7CpjG,EAAM,QAAQ,CAACsjG,MAAiB;AAC9B,cAAMC,IAAS,SAAS,cAAc,QAAQ;AAC9C,QAAAA,EAAO,OAAO,UACdA,EAAO,YAAY,6BACfD,EAAa,iBACfC,EAAO,UAAU,IAAID,EAAa,aAAa,GAG7CJ,IAAcC,KAChBI,EAAO,UAAU,IAAI,gCAAgC,GAEvDA,EAAO,QAAQ,UAAUD,EAAa,QACtCC,EAAO,cAAcD,EAAa,OAClCC,EAAO,aAAa,SAASD,EAAa,KAAK,GAC/CC,EAAO,aAAa,cAAcD,EAAa,KAAK,GACpDC,EAAO,aAAa,gBAAgB,OAAO,GAE3CF,EAAU,YAAYE,CAAM,GAC5BL;AAAA,MACF,CAAC;AAGD,YAAMM,IAAY,KAAK,QAAS;AAAA,QAC9B;AAAA,MAAA;AAEF,MAAIA,IACF,KAAK,QAAS,aAAaH,GAAWG,CAAS,IAE/C,KAAK,QAAS,YAAYH,CAAS;AAAA,IAEvC,CAAC,GAGG,KAAK,oBACP,KAAK,eAAA;AAAA,EAET;AAAA;AAAA;AAAA;AAAA,EAKA,UAAUx2B,GAAsB;AAC9B,SAAK,iBAAiBA,GACtB,KAAK,gBAAgB,UAAUA,CAAM,GAEjC,KAAK,gBAAgB,eAAA,EAAiB,WAAW,KACnD,KAAK,gBAAgB,cAAc81B,IAAwB;AAAA,EAE/D;AAAA;AAAA;AAAA;AAAA,EAKA,SAAsB;AACpB,UAAMc,IAAU,SAAS,cAAc,KAAK;AAC5C,IAAAA,EAAQ,YAAY,yDACpBA,EAAQ,aAAa,QAAQ,SAAS,GACtCA,EAAQ,aAAa,cAAc,oBAAoB;AAGvD,UAAMC,IAAU,SAAS,cAAc,QAAQ;AAC/C,IAAAA,EAAQ,OAAO,UACfA,EAAQ,YACN,8DACFA,EAAQ,aAAa,cAAc,eAAe,GAClDA,EAAQ,aAAa,SAAS,eAAe,GAC7CA,EAAQ,cAAc,KACtBA,EAAQ,QAAQ,UAAU,QAC1BA,EAAQ,WAAW,IACnBD,EAAQ,YAAYC,CAAO;AAG3B,UAAMC,IAAU,SAAS,cAAc,QAAQ;AAC/C,IAAAA,EAAQ,OAAO,UACfA,EAAQ,YACN,8DACFA,EAAQ,aAAa,cAAc,eAAe,GAClDA,EAAQ,aAAa,SAAS,eAAe,GAC7CA,EAAQ,cAAc,KACtBA,EAAQ,QAAQ,UAAU,QAC1BA,EAAQ,WAAW,IACnBF,EAAQ,YAAYE,CAAO;AAE3B,QAAIT,IAAc;AAClB,UAAMC,IAAoB;AAK1B,IAFqB,KAAK,gBAAA,EAEb,QAAQ,CAACnjG,GAAOojG,MAAe;AAC1C,YAAMC,IAAY,SAAS,cAAc,KAAK;AAC9C,MAAAA,EAAU,YAAY,+BACtBA,EAAU,aAAa,QAAQ,OAAO,GACtCA,EAAU;AAAA,QACR;AAAA,QACA,6BAA6BD,IAAa,CAAC;AAAA,MAAA,GAG7CpjG,EAAM,QAAQ,CAACsjG,MAAiB;AAC9B,cAAMC,IAAS,SAAS,cAAc,QAAQ;AAC9C,QAAAA,EAAO,OAAO,UACdA,EAAO,YAAY,6BACfD,EAAa,iBACfC,EAAO,UAAU,IAAID,EAAa,aAAa,GAG7CJ,IAAcC,KAChBI,EAAO,UAAU,IAAI,gCAAgC,GAEvDA,EAAO,QAAQ,UAAUD,EAAa,QACtCC,EAAO,cAAcD,EAAa,OAClCC,EAAO,aAAa,SAASD,EAAa,KAAK,GAC/CC,EAAO,aAAa,cAAcD,EAAa,KAAK,GACpDC,EAAO,aAAa,gBAAgB,OAAO,GAE3CF,EAAU,YAAYE,CAAM,GAC5BL;AAAA,MACF,CAAC,GAEDO,EAAQ,YAAYJ,CAAS;AAAA,IAC/B,CAAC;AAGD,UAAMO,IAAmB,SAAS,cAAc,QAAQ;AACxD,IAAAA,EAAiB,OAAO,UACxBA,EAAiB,YAAY,wCAC7BA,EAAiB;AAAA,MACf;AAAA,MACA,KAAK,iBAAiB,qBAAqB;AAAA,IAAA,GAE7CA,EAAiB;AAAA,MACf;AAAA,MACA,KAAK,iBAAiB,yBAAyB;AAAA,IAAA,GAEjDA,EAAiB,cAAc,KAC/BH,EAAQ,YAAYG,CAAgB;AAGpC,UAAMJ,IAAY,SAAS,cAAc,QAAQ;AACjD,WAAAA,EAAU,OAAO,UACjBA,EAAU,YAAY,gCACtBA,EAAU,aAAa,cAAc,gBAAgB,GACrDA,EAAU,cAAc,KACxBC,EAAQ,YAAYD,CAAS,GAE7B,KAAK,UAAUC,GACRA;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKQ,kBAAwB;AAC9B,QAAI,CAAC,KAAK,QAAS;AAEnB,SAAK,cAAc,CAAC,KAAK,aACzB,KAAK,QAAQ,UAAU;AAAA,MACrB;AAAA,MACA,KAAK;AAAA,IAAA;AAIP,UAAMD,IAAY,KAAK,QAAQ;AAAA,MAC7B;AAAA,IAAA;AAEF,IAAIA,KACFA,EAAU;AAAA,MACR;AAAA,MACA,KAAK,cAAc,mBAAmB;AAAA,IAAA;AAAA,EAG5C;AAAA;AAAA;AAAA;AAAA,EAKA,iBAAuB;AACrB,QAAI,CAAC,KAAK,WAAW,KAAK;AACxB;AAGF,SAAK,QAAQ,iBAAiB,aAAa,CAAC5+F,MAAU;AAIpD,MAHgBA,EAAM,OAAuB;AAAA,QAC3C;AAAA,MAAA,KAGAA,EAAM,eAAA;AAAA,IAEV,CAAC,GAED,KAAK,QAAQ,iBAAiB,SAAS,CAACA,MAAU;AAChD,YAAMlS,IAAUkS,EAAM,OAAuB;AAAA,QAC3C;AAAA,MAAA;AAEF,UAAI,CAAClS,KAAUA,EAAO;AACpB;AAEF,MAAAkS,EAAM,eAAA;AACN,YAAMipE,IAAUn7E,EAAO,QAAQ;AAC/B,MAAKm7E,KAGL,KAAK,eAAeA,CAAO;AAAA,IAC7B,CAAC;AAGD,UAAM+1B,IAAmB,KAAK,QAAQ;AAAA,MACpC;AAAA,IAAA;AAEF,IAAIA,KACFA,EAAiB,iBAAiB,SAAS,CAACh/F,MAAU;AACpD,MAAAA,EAAM,eAAA,GACNA,EAAM,gBAAA,GACN,KAAK,kBAAA;AAAA,IACP,CAAC;AAIH,UAAM4+F,IAAY,KAAK,QAAQ;AAAA,MAC7B;AAAA,IAAA;AAEF,IAAIA,KACFA,EAAU,iBAAiB,SAAS,CAAC5+F,MAAU;AAC7C,MAAAA,EAAM,eAAA,GACNA,EAAM,gBAAA,GACN,KAAK,gBAAA;AAAA,IACP,CAAC,GAGH,KAAK,mBAAmB;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA,EAKQ,eAAeouE,GAAmC;AACxD,QAAI,CAAC,KAAK,eAAgB;AAG1B,SAAK,eAAe,OAAO,CAACtG,MAAa;AAEvC,MADaA,EAAI,IAAIZ,EAAa,EAC7B,MAAA;AAAA,IACP,CAAC,GAGe,KAAK,gBAAgB,QAAQkH,CAAM,KAGjD,sBAAsB,MAAM;AAC1B,WAAK,YAAA;AAAA,IACP,CAAC;AAAA,EAEL;AAAA;AAAA;AAAA;AAAA,EAKA,cAAoB;AAClB,QAAI,CAAC,KAAK,WAAW,CAAC,KAAK;AACzB;AAOF,IAJgB,MAAM;AAAA,MACpB,KAAK,QAAQ,iBAAoC,sBAAsB;AAAA,IAAA,EAGjE,QAAQ,CAACuwB,MAAW;AAC1B,YAAMvwB,IAASuwB,EAAO,QAAQ;AAG9B,UAAIvwB,MAAW,UAAUA,MAAW,QAAQ;AAC1C,cAAM6wB,IAAa,KAAK,kBAAkB7wB,CAAM;AAChD,QAAAuwB,EAAO,WAAW,CAACM,GACnBN,EAAO,UAAU;AAAA,UACf;AAAA,UACA,CAACM;AAAA,QAAA;AAAA,MAEL,OAAO;AAEL,cAAMC,IAAW,KAAK,gBAAgB,eAAe9wB,CAAM;AAC3D,QAAAuwB,EAAO,UAAU,OAAO,oCAAoCO,CAAQ,GACpEP,EAAO,aAAa,gBAAgBO,IAAW,SAAS,OAAO;AAAA,MACjE;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKQ,kBAAkB9wB,GAAsC;AAC9D,QAAI,CAAC,KAAK;AACR,aAAO;AAIT,QAAIA,MAAW,UAAUA,MAAW,QAAQ;AAC1C,UAAI6wB,IAAa;AACjB,kBAAK,eAAe,OAAO,CAACn3B,MAAa;AACvC,cAAMx8E,IAAQw8E,EAAI,IAAIZ,EAAa,EAAE;AACrC,QAAIkH,MAAW,SAEb6wB,IACE3zG,EAAM,WACNA,EAAM,QAAQ,QACdA,EAAM,QAAQ,KAAK,SAAS,IACrB8iF,MAAW,WAEpB6wB,IACE3zG,EAAM,WACNA,EAAM,QAAQ,UACdA,EAAM,QAAQ,OAAO,SAAS;AAAA,MAEpC,CAAC,GACM2zG;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,aAAiC;AAC/B,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,qBAAsC;AACpC,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,UAAgB;AACd,SAAK,UAAU,MACf,KAAK,mBAAmB;AAAA,EAC1B;AACF;AC5sBA,MAAM3B,KAASnC,GAAmB,gBAAgB;AAe3C,MAAMgE,WAAuBlhE,GAAmB;AAAA,EAAhD;AAAA;AACG,IAAAz1C,EAAA,kBAA0B;AAC1B,IAAAA,EAAA,iBAAgC;AAChC,IAAAA,EAAA,wBAAyB;AACzB,IAAAA,EAAA,+BAA4D;AAAA;AAAA;AAAA;AAAA;AAAA,EAKpE,yBAAyBxM,GAA2C;AAClE,SAAK,wBAAwBA;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA,EAKA,cAA6B;AAC3B,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,aAAmC;AACjC,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,aAAqB;AACnB,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAM,WACJokD,GACAv6C,GACAu5G,IAAuC,CAAA,GACvCC,IAAsB,WACP;AAEf,UAAMC,IACHl/D,EAAU,cAAc,qBAAqB,KAC7CA,EAAU;AAAA,MACT;AAAA,IAAA;AAEJ,QAAI,CAACk/D;AACH,YAAM,IAAI,MAAM,4BAA4B;AAG9C,UAAM,EAAE,OAAAC,GAAO,gBAAAC,EAAA,IAAmB,KAAK,cAAcF,CAAe;AAEpE,QAAI;AAEF,YAAMG,IAAiB9hE,GAAqB93C,CAAO;AACnD,WAAK,iBAAiB45G;AAEtB,YAAMC,IAAgBrxB,GAAO,KAAA,EAC1B,OAAO,CAACvG,MAAQ;AACf,QAAAA,EAAI,IAAIqE,IAASozB,CAAK,GACtBz3B,EAAI,IAAI+C,IAAiB40B,CAAc,GAEvC33B,EAAI,IAAIoyB,GAAsB,KAAK;AAAA,UACjC,OAAO;AAAA,UACP,eAAe;AAAA,QAAA,CAChB,GAEuBpyB,EAAI,IAAI4tB,EAAW,EAGxC,gBAAgB,CAAC/sB,GAAMx/E,MAAa;AACnC,gBAAMw2G,IAAahiE,GAAqBx0C,CAAQ;AAChD,eAAK,iBAAiBw2G,GAClB,KAAK,yBACP,KAAK,sBAAsBA,CAAU,GAGvC,KAAK,KAAK3hE,GAAc,wBAAwB;AAAA,YAC9C,UAAU2hE;AAAA,UAAA,CACX,GACDrC,GAAO,MAAM,qBAAqBqC,CAAU;AAAA,QAC9C,CAAC,EACA,iBAAiB,MAAM;AACtB,UAAI,KAAK,WACP,KAAK,QAAQ,YAAA,GAGf,KAAK,KAAK3hE,GAAc,0BAA0B;AAAA,YAChD,MAAM;AAAA,YACN,IAAI;AAAA,UAAA,CACL;AAAA,QACH,CAAC,EACA,MAAM,MAAM;AACX,UAAI,KAAK,WACP,KAAK,QAAQ,YAAA,GAGf,KAAK,KAAKA,GAAc,gBAAgB,CAAA,CAAE;AAAA,QAC5C,CAAC,EACA,KAAK,MAAM;AACV,UAAI,KAAK,WACP,KAAK,QAAQ,YAAA,GAGf,KAAK,KAAKA,GAAc,gBAAgB,CAAA,CAAE;AAAA,QAC5C,CAAC;AAAA,MACL,CAAC,EACA,OAAOywC,EAAI,EACX,IAAI6M,EAAU,EACd,IAAIxvD,EAAG,EACP,IAAI6pE,EAAQ,EACZ,IAAI+C,EAAO,EAGX,IAAI2E,EAAwB,EAC5B,IAAIP,EAAc,EAClB,IAAIC,EAAc,EAClB,IAAIC,EAAe,EACnB,IAAIC,EAAa,EACjB,IAAIC,EAAkB,EACtB,IAAIC,EAAY,EAChB,IAAIC,EAAkB;AAEzB,MAAIgC,EAAe,SAAS,KAC1BM,EAAc,IAAI,KAAK,6BAA6BN,CAAc,CAAC,GAIrE,KAAK,WAAW,MAAMM,EAAc,OAAA,GAGpC,KAAK,UAAU,IAAIxB,GAAA,GACnB,KAAK,QAAQ,UAAU,KAAK,QAAQ,GACpC,KAAK,QAAQ,eAAemB,CAAW;AACvC,YAAMO,IAAkB,KAAK,QAAQ,OAAA;AACrC,MAAAJ,EAAe,YAAYI,CAAe,GAC1C,KAAK,QAAQ,eAAA,GACb,KAAK,QAAQ,YAAA,GAGb,KAAK,KAAK5hE,GAAc,cAAc;AAAA,QACpC,QAAQ,KAAK;AAAA,MAAA,CACP,GAERs/D,GAAO,MAAM,0CAA0C;AAAA,IACzD,SAASrwG,GAAO;AACdqwG,MAAAA,GAAO,MAAM,kCAAkCrwG,CAAK;AACpD,YAAM4yG,IACJ5yG,aAAiB,QAAQA,EAAM,UAAU,OAAOA,CAAK;AACvD,YAAAqyG,EAAgB,YAAY;AAAA;AAAA;AAAA,iBAGjBO,CAAY;AAAA;AAAA,SAGjB5yG;AAAA,IACR;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKQ,cAAcmzC,GAGpB;AACA,QAAI0/D,IAAS1/D,EAAU;AAAA,MACrB;AAAA,IAAA,GAEEm/D,IAAQO,GAAQ;AAAA,MAClB;AAAA,IAAA,GAEEN,IAAiBM,GAAQ;AAAA,MAC3B;AAAA,IAAA;AAGF,QAAI,CAACA,KAAU,CAACP,KAAS,CAACC,GAAgB;AACxC,MAAAp/D,EAAU,YAAY,IAEtB0/D,IAAS,SAAS,cAAc,KAAK,GACrCA,EAAO,YAAY;AAEnB,YAAMC,IAAiB,SAAS,cAAc,KAAK;AACnD,MAAAA,EAAe,YAAY,yBAE3BR,IAAQ,SAAS,cAAc,KAAK,GACpCA,EAAM,YAAY,yBAClBQ,EAAe,YAAYR,CAAK,GAEhCC,IAAiB,SAAS,cAAc,KAAK,GAC7CA,EAAe,YAAY,mCAC3BO,EAAe,YAAYP,CAAc,GAEzCM,EAAO,YAAYC,CAAc,GACjC3/D,EAAU,YAAY0/D,CAAM;AAAA,IAC9B;AAEA,QAAI,CAACP,KAAS,CAACC;AACb,YAAM,IAAI,MAAM,iCAAiC;AAGnD,WAAO,EAAE,OAAAD,GAAO,gBAAAC,EAAA;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA,EAKQ,6BAA6BnjE,GAA8B;AACjE,UAAM2jE,IAA4B,IAAI/+C,GAAU,wBAAwB;AAGxE,WAAOwuB,GAAO,MACL,IAAI1uB,GAAO;AAAA,MAChB,KAAKi/C;AAAA,MACL,OAAO;AAAA,QACL,MAAM,CAACC,GAAc,EAAE,KAAAtqF,QACjB0mB,EAAO,WAAW,IACbkjC,GAAc,QAEhBA,GAAc;AAAA,UACnB5pD;AAAA,UACA,KAAK,iCAAiCA,GAAK0mB,CAAM;AAAA,QAAA;AAAA,QAGrD,MAAMvE,GAAS8sC,GAAmC;AAIhD,iBAHIvoC,EAAO,WAAW,KAAKuoC,MAAQrF,GAAc,SAG7C,CAACznC,EAAG,aACC8sC,IAEFA,EAAI,IAAI9sC,EAAG,SAASA,EAAG,GAAG;AAAA,QACnC;AAAA,MAAA;AAAA,MAEF,OAAO;AAAA,QACL,YAAYxsC,GAAkC;AAI5C,iBAHoB00G,EAA0B,SAAS10G,CAAK,KAGtC;AAAA,QACxB;AAAA,MAAA;AAAA,IACF,CACD,CACF;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKQ,iCACNqqB,GACA0mB,GACc;AACd,QAAIA,EAAO,WAAW;AACpB,aAAO,CAAA;AAGT,UAAMojC,IAA4B,CAAA;AAElC,WAAApjC,EAAO,QAAQ,CAACxR,MAAU;AACxB,UAAIA,EAAM,OAAOA,EAAM;AACrB;AAGF,YAAM1d,IAAO,KAAK,oBAAoBwI,GAAKkV,EAAM,KAAK,GAChD0G,IAAK,KAAK,oBAAoB5b,GAAKkV,EAAM,GAAG;AAElD,UAAI1d,MAAS,MAAMokB,MAAO;AACxB;AAGF,YAAMorE,IACJ9xE,EAAM,SAAS,aACX,4BACAA,EAAM,SAAS,aACb,4BACA;AAER,MAAA40C,EAAY,KAAKJ,GAAW,OAAOlyD,GAAMokB,GAAI,EAAE,OAAOorE,EAAA,CAAW,CAAC;AAAA,IACpE,CAAC,GAEMl9B;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKQ,oBAAoB9pD,GAAgBna,GAAwB;AAClE,QAAI0kG,IAAgB,GAChBC,IAAW;AAEf,WAAAxqF,EAAI,YAAY,CAAC9oB,GAAW+C,MAAgB;AAC1C,UAAIuwG,MAAa,GAAI,QAAO;AAE5B,UAAItzG,EAAK,QAAQ;AACf,cAAMuzG,IAAavzG,EAAK,KAAK;AAC7B,YAAIqzG,IAAgBE,KAAc5kG;AAChC,iBAAA2kG,IAAWvwG,KAAO4L,IAAS0kG,IACpB;AAET,QAAAA,KAAiBE;AAAA,MACnB,MAAA,CAAWvzG,EAAK,WAAWA,MAAS8oB,MAClCuqF,KAAiB;AAGnB,aAAO;AAAA,IACT,CAAC,GAEMC,MAAa,KAAKA,IAAW;AAAA,EACtC;AAAA;AAAA;AAAA;AAAA,EAKA,UAAgB;AACd,IAAI,KAAK,aACP,KAAK,SAAS,QAAA,GACd,KAAK,WAAW,OAEd,KAAK,YACP,KAAK,QAAQ,QAAA,GACb,KAAK,UAAU,OAEjB,KAAK,iBAAiB,IACtB,KAAK,wBAAwB,MAC7B,KAAK,eAAA;AAAA,EACP;AACF;AClXO,MAAME,GAAgB;AAAA,EAK3B,YAAYjpF,IAAgC,MAAM,IAAI+nF,MAAkB;AAJvD,IAAA32G,EAAA;AACT,IAAAA,EAAA,gBAAgC;AAChC,IAAAA,EAAA,gBAAwB;AAG9B,SAAK,eAAe4uB;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,WAAWr7B,GAA6C;AAC5D,SAAK,QAAA;AAEL,UAAMg/G,IAAS,KAAK,aAAA;AAoBpB,QAnBA,KAAK,SAASA,GAEVh/G,EAAQ,mBACVg/G,EAAO;AAAA,MACL/8D,GAAc;AAAA,MACd,CAACD,MAAiC;AAChC,QAAAhiD,EAAQ,kBAAkBgiD,EAAO,QAAQ;AAAA,MAC3C;AAAA,IAAA,GAIJ,MAAMg9D,EAAO;AAAA,MACXh/G,EAAQ;AAAA,MACRA,EAAQ;AAAA,MACRA,EAAQ,kBAAkB,CAAA;AAAA,MAC1BA,EAAQ;AAAA,IAAA,GAGV,KAAK,SAASg/G,EAAO,YAAA,GACjB,CAAC,KAAK;AACR,YAAM,IAAI;AAAA,QACR;AAAA,MAAA;AAIJ,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,YAA2B;AACzB,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,UAAgB;AACd,IAAI,KAAK,WACP,KAAK,OAAO,QAAA,GACZ,KAAK,SAAS,OAEhB,KAAK,SAAS;AAAA,EAChB;AACF;AC3EA,MAAMuC,KAASnC,GAAmB,iBAAiB;AAa5C,MAAMmF,GAAgB;AAAA,EAM3B,cAAc;AALN,IAAA93G,EAAA,iBAA8B;AAC9B,IAAAA,EAAA,mBAAY;AACZ,IAAAA,EAAA,kBAAqC,CAAA;AACrC,IAAAA,EAAA,mBAA6C;AAGnD,SAAK,qBAAA;AAAA,EACP;AAAA,EAEA,SAAsB;AACpB,gBAAK,qBAAA,GACE,KAAK;AAAA,EACd;AAAA,EAEA,aAAiC;AAC/B,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,OAAa;AAEX,IADA,KAAK,qBAAA,GACA,KAAK,YAEL,KAAK,QAAQ,cAChB,SAAS,KAAK,YAAY,KAAK,OAAO,GAGxC,KAAK,QAAQ,UAAU,IAAI,qBAAqB,GAChD,KAAK,YAAY,IACjB,KAAK,QAAQ,aAAa,eAAe,OAAO,GAChD80G,GAAO,MAAM,wBAAwB;AAAA,EACvC;AAAA,EAEA,OAAa;AACX,IAAK,KAAK,YAEV,KAAK,QAAQ,UAAU,OAAO,qBAAqB,GACnD,KAAK,YAAY,IACjB,KAAK,QAAQ,aAAa,eAAe,MAAM,GAC/CA,GAAO,MAAM,yBAAyB;AAAA,EACxC;AAAA,EAEA,SAAe;AACb,IAAI,KAAK,YACP,KAAK,KAAA,KAEL,KAAK,KAAA,GACL,KAAK,QAAA;AAAA,EAET;AAAA,EAEA,eAAwB;AACtB,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,eACEiD,GACAC,GACM;AACN,SAAK,WAAWD,GAChB,KAAK,YAAYC,GACjB,KAAK,QAAA,GACLlD,GAAO,MAAM,oBAAoB,EAAE,OAAOiD,EAAS,QAAQ;AAAA,EAC7D;AAAA,EAEA,UAAgB;AACd,QAAI,CAAC,KAAK,QAAS;AAEnB,UAAM16G,IAAU,KAAK,QAAQ;AAAA,MAC3B;AAAA,IAAA;AAEF,QAAKA,GAIL;AAAA,UAFAA,EAAQ,YAAY,IAEhB,KAAK,SAAS,WAAW,GAAG;AAC9B,cAAM46G,IAAW,SAAS,cAAc,KAAK;AAC7C,QAAAA,EAAS,YAAY,yBACrBA,EAAS,cAAc,mBACvB56G,EAAQ,YAAY46G,CAAQ;AAC5B;AAAA,MACF;AAEA,WAAK,SAAS,QAAQ,CAACC,MAAa;AAClC,cAAMC,IAAU,SAAS,cAAc,KAAK;AAC5C,QAAAA,EAAQ,YAAY,2BACpBA,EAAQ,QAAQ,YAAYD,EAAS,QAAQ;AAE7C,cAAMhY,IAAS,SAAS,cAAc,KAAK;AAC3C,QAAAA,EAAO,YAAY,kCACnBA,EAAO,cAAc,KAAK,gBAAgBgY,CAAQ,GAClDC,EAAQ,YAAYjY,CAAM;AAE1B,cAAMpyF,IAAO,SAAS,cAAc,KAAK;AACzC,QAAAA,EAAK,YAAY,wBAEjBoqG,EAAS,QAAQ,QAAQ,CAACj6G,GAAOjD,MAAU;AACzC,gBAAMkW,IAAO,KAAK,cAAcgnG,GAAUj6G,GAAOjD,CAAK;AACtD,UAAA8S,EAAK,YAAYoD,CAAI;AAAA,QACvB,CAAC,GAEDinG,EAAQ,YAAYrqG,CAAI,GACxBzQ,EAAQ,YAAY86G,CAAO;AAAA,MAC7B,CAAC,GAEDrD,GAAO,MAAM,4BAA4B;AAAA;AAAA,EAC3C;AAAA,EAEA,UAAgB;AACd,IAAI,KAAK,YACP,KAAK,QAAQ,OAAA,GACb,KAAK,UAAU,OAEjB,KAAK,WAAW,CAAA,GAChB,KAAK,YAAY,MACjB,KAAK,YAAY;AAAA,EACnB;AAAA,EAEQ,uBAA6B;AACnC,QAAI,KAAK,QAAS;AAElB,UAAMsD,IAAU,SAAS,cAAc,KAAK;AAC5C,IAAAA,EAAQ,YAAY,2BACpBA,EAAQ,aAAa,QAAQ,QAAQ,GACrCA,EAAQ,aAAa,cAAc,UAAU;AAE7C,UAAMlY,IAAS,SAAS,cAAc,KAAK;AAC3C,IAAAA,EAAO,YAAY;AAEnB,UAAMnpD,IAAQ,SAAS,cAAc,IAAI;AACzC,IAAAA,EAAM,cAAc,YACpBmpD,EAAO,YAAYnpD,CAAK;AAExB,UAAMshE,IAAW,SAAS,cAAc,QAAQ;AAChD,IAAAA,EAAS,YAAY,iCACrBA,EAAS,aAAa,cAAc,gBAAgB,GACpDA,EAAS,cAAc,KACvBA,EAAS,iBAAiB,SAAS,MAAM,KAAK,MAAM,GACpDnY,EAAO,YAAYmY,CAAQ,GAE3BD,EAAQ,YAAYlY,CAAM;AAE1B,UAAM7iG,IAAU,SAAS,cAAc,KAAK;AAC5C,IAAAA,EAAQ,YAAY,mCACpB+6G,EAAQ,YAAY/6G,CAAO,GAE3B,KAAK,UAAU+6G;AAAA,EACjB;AAAA,EAEQ,cACNF,GACAj6G,GACAjD,GACa;AACb,UAAMkG,IAAYg3G,EAAS,QAAQ,IAC7BI,IAAa,GAAGp3G,CAAS,IAAIjD,EAAM,KAAK,IAExC25C,IAAY,SAAS,cAAc,KAAK;AAC9C,IAAAA,EAAU,YAAY,uBACtBA,EAAU,QAAQ,aAAa0gE,GAC/B1gE,EAAU,QAAQ,YAAY12C,GAC9B02C,EAAU,QAAQ,eAAe,OAAO35C,EAAM,KAAK,GACnD25C,EAAU,aAAa,QAAQ,SAAS;AAExC,UAAMsoD,IAAS,SAAS,cAAc,KAAK;AAC3C,IAAAA,EAAO,YAAY,8BACnBA,EAAO,YAAY;AAAA,8CACuBllG,IAAQ,CAAC,IAAIk9G,EAAS,QAAQ,MAAM;AAAA;AAAA,OAG9EtgE,EAAU,YAAYsoD,CAAM;AAE5B,UAAM5iG,IAAO,SAAS,cAAc,KAAK;AACzC,IAAAA,EAAK,YAAY,4BACjBA,EAAK,YAAY,oCAAoC,KAAK;AAAA,MACxD,KAAK,iBAAiBW,EAAM,OAAO;AAAA,IAAA,CACpC,UACD25C,EAAU,YAAYt6C,CAAI;AAE1B,UAAMi7G,IAAU,SAAS,cAAc,KAAK;AAC5C,WAAAA,EAAQ,YAAY,+BACpBA,EAAQ,YAAY;AAAA;AAAA;AAAA,OAIpB3gE,EAAU,YAAY2gE,CAAO,GAEzB,KAAK,cACP3gE,EACG,cAAc,sBAAsB,GACnC,iBAAiB,SAAS,MAAM;AAChC,WAAK,WAAW,WAAW12C,GAAWo3G,CAAU;AAAA,IAClD,CAAC,GAEH1gE,EACG,cAAc,wBAAwB,GACrC,iBAAiB,SAAS,MAAM;AAChC,WAAK,WAAW,SAAS12C,GAAWjD,CAAK;AAAA,IAC3C,CAAC,GAEH25C,EAAU,iBAAiB,cAAc,MAAM;AAC7C,WAAK,WAAW,QAAQ12C,GAAWo3G,CAAU;AAAA,IAC/C,CAAC,GAED1gE,EAAU,iBAAiB,cAAc,MAAM;AAC7C,WAAK,WAAW,QAAA;AAAA,IAClB,CAAC,GAEDA,EAAU,iBAAiB,YAAY,MAAM;AAC3C,WAAK,WAAW,OAAO12C,GAAWjD,CAAK;AAAA,IACzC,CAAC,IAGI25C;AAAA,EACT;AAAA,EAEQ,gBAAgBsgE,GAA0C;AAChE,UAAM7iC,IAAQ,KAAK,iBAAiB6iC,EAAS,QAAQ,OAAO,GACtD93G,IAAO83G,EAAS,QAAQ,SAAS;AACvC,WAAO7iC,IAAQ,GAAGj1E,CAAI,KAAKi1E,CAAK,KAAKj1E;AAAA,EACvC;AAAA,EAEQ,iBAAiBrM,GAAuB;AAC9C,WAAOA,EAAM,QAAQ,QAAQ,GAAG,EAAE,KAAA;AAAA,EACpC;AAAA,EAEQ,WAAWA,GAAuB;AACxC,WAAOA,EACJ,QAAQ,MAAM,OAAO,EACrB,QAAQ,MAAM,MAAM,EACpB,QAAQ,MAAM,MAAM,EACpB,QAAQ,MAAM,QAAQ,EACtB,QAAQ,MAAM,OAAO;AAAA,EAC1B;AACF;ACzOA,MAAM+gH,KAASnC,GAAmB,iBAAiB;AAa5C,MAAM6F,WAAwB/iE,GAAmB;AAAA,EAAjD;AAAA;AACG,IAAAz1C,EAAA,iBAA8B;AAC9B,IAAAA,EAAA,gBAAS;AACT,IAAAA,EAAA,wBAAyC;AACzC,IAAAA,EAAA,yBAAsC;AACtC,IAAAA,EAAA,sBAAmC;AACnC,IAAAA,EAAA,0BAEG;AACH,IAAAA,EAAA,0BAAwC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKhD,SAAsB;AACpB,UAAMy4G,IAAW,SAAS,cAAc,KAAK;AAC7C,IAAAA,EAAS,YAAY,2BACrBA,EAAS,aAAa,QAAQ,QAAQ,GACtCA,EAAS,aAAa,cAAc,kBAAkB;AAGtD,UAAMvY,IAAS,SAAS,cAAc,KAAK;AAC3C,IAAAA,EAAO,YAAY;AAEnB,UAAMnpD,IAAQ,SAAS,cAAc,IAAI;AACzC,IAAAA,EAAM,cAAc,eACpBmpD,EAAO,YAAYnpD,CAAK;AAExB,UAAMshE,IAAW,SAAS,cAAc,QAAQ;AAChD,IAAAA,EAAS,YAAY,iCACrBA,EAAS,aAAa,cAAc,gBAAgB,GACpDA,EAAS,cAAc,KACvBA,EAAS,iBAAiB,SAAS,MAAM,KAAK,QAAQ,GACtDnY,EAAO,YAAYmY,CAAQ,GAE3BI,EAAS,YAAYvY,CAAM;AAG3B,UAAMwY,IAAoB,SAAS,cAAc,KAAK;AACtD,IAAAA,EAAkB,YAAY;AAE9B,UAAMC,IAAW,SAAS,cAAc,UAAU;AAClD,IAAAA,EAAS,YAAY,oCACrBA,EAAS,cAAc,yBACvBA,EAAS,aAAa,QAAQ,GAAG,GACjCA,EAAS,aAAa,cAAc,cAAc,GAClDD,EAAkB,YAAYC,CAAQ,GAEtCF,EAAS,YAAYC,CAAiB;AAGtC,UAAM9wE,IAAS,SAAS,cAAc,KAAK;AAC3C,IAAAA,EAAO,YAAY;AAEnB,UAAMgxE,IAAY,SAAS,cAAc,QAAQ;AACjD,IAAAA,EAAU,YAAY,sCACtBA,EAAU,cAAc,UACxBA,EAAU,iBAAiB,SAAS,MAAM,KAAK,QAAQ,GACvDhxE,EAAO,YAAYgxE,CAAS;AAE5B,UAAMC,IAAY,SAAS,cAAc,QAAQ;AACjD,WAAAA,EAAU,YAAY,sCACtBA,EAAU,cAAc,gBACxBA,EAAU,iBAAiB,SAAS,MAAM,KAAK,QAAQ,GACvDjxE,EAAO,YAAYixE,CAAS,GAE5BJ,EAAS,YAAY7wE,CAAM,GAE3B,KAAK,UAAU6wE,GACRA;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,aAAiC;AAC/B,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,KACElmG,GACAumG,GACAC,GACM;AAEN,SAAK,MAAA,GAEA,KAAK,WACR,KAAK,OAAA,GAGP,KAAK,iBAAiBxmG,GAElBwmG,MACF,KAAK,mBAAmBA;AAI1B,QAAIC,IAAsC;AAC1C,IAAIzmG,EAAQ,oBACVymG,IAAkBF,EAAY;AAAA,MAC5B,yCAAyCvmG,EAAQ,SAAS,wBAAwBA,EAAQ,SAAS,IAAIA,EAAQ,eAAe;AAAA,IAAA,IAIlI,KAAK,kBAAkBymG,GACnBA,MACFA,EAAgB,UAAU,IAAI,4BAA4B,GAC1D,KAAK,eAAeA;AAItB,UAAMC,IAAY,EAAQ1mG,EAAQ,iBAC5B2mG,IAAe3mG,EAAQ,gBAAgB;AAE7C,SAAK,QAAS,YAAY;AAAA;AAAA,gBAEd0mG,IAAY,iBAAiB,aAAa;AAAA;AAAA;AAAA,mDAGPrkE,GAAWskE,CAAY,CAAC;AAAA;AAAA;AAAA;AAAA,yFAIcD,IAAY,WAAW,KAAK;AAAA;AAAA,OAK7G,KAAK,kBACP,KAAK,gBAAgB,sBAAsB,eAAe,KAAK,OAAQ,IAEvEH,EAAY,QAAQ,KAAK,OAAQ,GAIhBA,EAAY,cAAc,wBAAwB,GACzD,OAAA,GAGZA,EAAY,YAAY,GAGxB,KAAK,QAAS,cAAc,uBAAuB,GAAG;AAAA,MACpD;AAAA,MACA,MAAM,KAAK,OAAA;AAAA,IAAO,GAEpB,KAAK,QAAS,cAAc,wBAAwB,GAAG;AAAA,MACrD;AAAA,MACA,MAAM,KAAK,OAAA;AAAA,IAAO,GAEpB,KAAK,QAAS,cAAc,sBAAsB,GAAG;AAAA,MACnD;AAAA,MACA,MAAM,KAAK,OAAA;AAAA,IAAO;AAIpB,UAAMH,IAAW,KAAK,QAAS;AAAA,MAC7B;AAAA,IAAA;AAEF,IAAIA,MACEpmG,EAAQ,oBACVomG,EAAS,QAAQpmG,EAAQ,iBACzBomG,EAAS,OAAA,IAEXA,EAAS,MAAA,IAIX,KAAK,SAAS,IACd,KAAK,QAAS,MAAM,UAAU,SAC9B,KAAK,QAAS,aAAa,eAAe,OAAO,GAGjD,KAAK,KAAKnjE,GAAc,yBAAyB;AAAA,MAC/C,WAAWjjC,EAAQ;AAAA,MACnB,iBAAiBA,EAAQ,kBACrB,EAAE,SAASA,EAAQ,oBACnB;AAAA,IAAA,CACE,GAERuiG,GAAO,MAAM,2BAA2B,EAAE,SAAAviG,EAAA,CAAS;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA,EAKA,QAAc;AACZ,IAAI,KAAK,YACP,KAAK,QAAQ,MAAM,UAAU,QAC7B,KAAK,QAAQ,aAAa,eAAe,MAAM,IAI7C,KAAK,iBACP,KAAK,aAAa,UAAU,OAAO,4BAA4B,GAC/D,KAAK,eAAe,OAGtB,KAAK,kBAAkB,MACvB,KAAK,SAAS,IACd,KAAK,UAAA;AAAA,EACP;AAAA;AAAA;AAAA;AAAA,EAKA,YAAqB;AACnB,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,aAAqB;AACnB,QAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,UAAMomG,IAAW,KAAK,QAAQ;AAAA,MAC5B;AAAA,IAAA;AAEF,WAAOA,IAAWA,EAAS,MAAM,KAAA,IAAS;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA,EAKQ,SAAe;AACrB,UAAMt7G,IAAU,KAAK,WAAA;AAErB,QAAI,CAACA,GAAS;AACZy3G,MAAAA,GAAO,KAAK,yBAAyB;AACrC;AAAA,IACF;AAEA,QAAI,CAAC,KAAK,gBAAgB;AACxBA,MAAAA,GAAO,MAAM,mCAAmC;AAChD;AAAA,IACF;AAGA,UAAMqE,IAAS,EAAQ,KAAK,eAAe;AAC3C,SAAK,KAAK3jE,GAAc,mBAAmB;AAAA,MACzC,WAAW,KAAK,eAAe;AAAA,MAC/B,SAAAn4C;AAAA,MACA,QAAA87G;AAAA,IAAA,CACyB,GAGvB,KAAK,oBACP,KAAK,iBAAiB97G,GAAS,KAAK,cAAc,GAGpD,KAAK,MAAA,GACLy3G,GAAO,MAAM,qBAAqB;AAAA,MAChC,SAAS,KAAK;AAAA,MACd,SAAAz3G;AAAA,IAAA,CACD;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKQ,SAAe;AACrB,IAAI,KAAK,kBAEP,KAAK,KAAKm4C,GAAc,mBAAmB;AAAA,MACzC,WAAW,KAAK,eAAe;AAAA,IAAA,CAChC,GAGH,KAAK,MAAA,GACD,KAAK,oBACP,KAAK,iBAAA,GAEPs/D,GAAO,MAAM,4BAA4B;AAAA,EAC3C;AAAA;AAAA;AAAA;AAAA,EAKQ,YAAkB;AACxB,QAAI,CAAC,KAAK,QAAS;AACnB,UAAM6D,IAAW,KAAK,QAAQ;AAAA,MAC5B;AAAA,IAAA;AAEF,IAAIA,MACFA,EAAS,QAAQ,KAEnB,KAAK,iBAAiB;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA,EAKA,SACEnlH,GACM;AACN,SAAK,mBAAmBA;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA,EAKA,SAASA,GAA4B;AACnC,SAAK,mBAAmBA;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA,EAKA,UAAgB;AACd,SAAK,MAAA,GACD,KAAK,WACP,KAAK,QAAQ,OAAA,GAEf,KAAK,UAAU,MACf,KAAK,iBAAiB,MACtB,KAAK,kBAAkB,MACvB,KAAK,eAAe,MACpB,KAAK,mBAAmB,MACxB,KAAK,mBAAmB,MACxB,KAAK,eAAA;AAAA,EACP;AACF;ACxVO,MAAM4lH,GAAc;AAAA,EAApB;AACG,IAAAp5G,EAAA,wCAAiB,IAAA;AACjB,IAAAA,EAAA,yCAAkB,IAAA;AAAA;AAAA,EAE1B,eACE+3G,GACAC,GACM;AACN,UAAMn1G,IAAY,IAAI,IAAIk1G,EAAS,IAAI,CAACI,MAAYA,EAAQ,QAAQ,EAAE,CAAC;AAEvE,eAAW,CAACkB,GAAWC,CAAS,KAAK,KAAK;AACxC,MAAKz2G,EAAU,IAAIw2G,CAAS,MAC1BC,EAAU,OAAA,GACV,KAAK,WAAW,OAAOD,CAAS,GAChC,KAAK,YAAY,OAAOA,CAAS;AAIrC,IAAAtB,EAAS,QAAQ,CAACG,MAAa;AAC7B,YAAMqB,IAAa,SAAS;AAAA,QAC1B,oBAAoBrB,EAAS,QAAQ,EAAE;AAAA,MAAA;AAEzC,UACE,CAACqB,KACDA,EAAW,UAAU,SAAS,yBAAyB;AAEvD;AAGF,YAAMD,IAAY,KAAK;AAAA,QACrBpB,EAAS,QAAQ;AAAA,QACjBqB;AAAA,QACAvB;AAAA,MAAA;AAEF,WAAK,gBAAgBsB,GAAWC,GAAYrB,CAAQ;AAAA,IACtD,CAAC;AAAA,EACH;AAAA,EAEA,WAAiB;AACf,eAAWoB,KAAa,KAAK,WAAW,OAAA;AACtC,MAAAA,EAAU,OAAA;AAEZ,SAAK,WAAW,MAAA,GAChB,KAAK,YAAY,MAAA;AAAA,EACnB;AAAA,EAEQ,gBACND,GACAE,GACAvB,GACmB;AACnB,QAAIsB,IAAY,KAAK,WAAW,IAAID,CAAS;AAE7C,YAAI,CAACC,KAAa,CAACA,EAAU,iBAC3BA,GAAW,OAAA,GACXA,IAAY,KAAK,gBAAgBD,GAAWrB,CAAS,GACrD,KAAK,WAAW,IAAIqB,GAAWC,CAAS,IAGrCC,EAAW,SAASD,CAAS,KAChCC,EAAW,YAAYD,CAAS,GAG3BA;AAAA,EACT;AAAA,EAEQ,gBACND,GACArB,GACmB;AACnB,UAAMsB,IAAY,SAAS,cAAc,QAAQ;AACjD,IAAAA,EAAU,OAAO,UACjBA,EAAU,YACR;AAEF,UAAME,IAAO,SAAS,cAAc,MAAM;AAC1C,IAAAA,EAAK,YAAY,qBACjBA,EAAK,cAAc,MACnBF,EAAU,YAAYE,CAAI;AAE1B,UAAMC,IAAY,SAAS,cAAc,MAAM;AAC/C,IAAAA,EAAU,YAAY,gCACtBA,EAAU,cAAc,KACxBH,EAAU,YAAYG,CAAS;AAE/B,UAAMxiG,IAAO,CAACO,MAAiB;AAC7B,MAAAA,EAAM,gBAAA,GACFA,aAAiB,cACnBA,EAAM,eAAA;AAAA,IAEV;AAEA,WAAA8hG,EAAU,iBAAiB,aAAariG,CAAI,GAC5CqiG,EAAU,iBAAiB,WAAWriG,CAAI,GAC1CqiG,EAAU,iBAAiB,SAAS,CAAC9hG,MAAU;AAC7C,MAAAP,EAAKO,CAAK;AACV,YAAM8gG,IAAagB,EAAU,QAAQ,cAAc;AACnD,MAAAtB,EAAU,eAAeqB,GAAWf,CAAU;AAAA,IAChD,CAAC,GAEDgB,EAAU,iBAAiB,YAAY,CAAC9hG,MAAU;AAChD,MAAAP,EAAKO,CAAK;AACV,YAAMvZ,IAAQ,KAAK,YAAY,IAAIo7G,CAAS,KAAK;AACjD,MAAArB,EAAU,eAAeqB,GAAWp7G,CAAK;AAAA,IAC3C,CAAC,GAEDq7G,EAAU,iBAAiB,cAAc,MAAM;AAC7C,MAAAtB,EAAU,QAAQqB,CAAS;AAAA,IAC7B,CAAC,GAEDC,EAAU,iBAAiB,cAAc,MAAM;AAC7C,MAAAtB,EAAU,QAAA;AAAA,IACZ,CAAC,GAEMsB;AAAA,EACT;AAAA,EAEQ,gBACNA,GACAC,GACArB,GACM;AACN,UAAM,EAAE,SAAAz3G,GAAS,SAAAizC,EAAA,IAAYwkE,GACvBwB,IAAahmE,EAAQ,CAAC,KAAK;AACjC,SAAK,YAAY,IAAIjzC,EAAQ,IAAIi5G,CAAU;AAE3C,UAAMviG,IAAQu8B,EAAQ,QAChB+lE,IAAYH,EAAU,cAAc,qBAAqB;AAC/D,IAAIG,MACFA,EAAU,cAActiG,IAAQ,IAAI,OAAOA,CAAK,IAAI,KACpDsiG,EAAU,UAAU,OAAO,aAAatiG,KAAS,CAAC;AAGpD,UAAMmhG,IAAaoB,IACf,GAAGj5G,EAAQ,EAAE,IAAIi5G,EAAW,KAAK,KACjCj5G,EAAQ;AACZ,IAAA64G,EAAU,QAAQ,aAAahB,GAC/BgB,EAAU,QAAQ,eAAeI,IAAa,OAAOA,EAAW,KAAK,IAAI;AAEzE,UAAMC,KAAWD,GAAY,WAAWA,GAAY,WAAW,IAC5D,QAAQ,QAAQ,GAAG,EACnB,KAAA,GACGE,IACJziG,IAAQ,IACJ,GAAGA,CAAK,YAAYwiG,IAAU,OAAOA,CAAO,MAAM,EAAE,KACpD,UAAUA,IAAU,OAAOA,CAAO,MAAM,EAAE;AAEhD,IAAAL,EAAU,aAAa,SAASM,CAAO,GACvCN,EAAU,aAAa,cAAcM,CAAO,GAExC,iBAAiBL,CAAU,EAAE,aAAa,aAC5CA,EAAW,MAAM,WAAW,aAG9BA,EACG,iBAAiB,mCAAmC,EACpD,QAAQ,CAAC7qG,MAAa;AACrB,MAAIA,MAAa4qG,KACf5qG,EAAS,eAAe,YAAYA,CAAQ;AAAA,IAEhD,CAAC;AAAA,EACL;AAAA,EAEA,UAAgB;AACd,SAAK,SAAA;AAAA,EACP;AACF;AC3KO,MAAMmrG,KAAe;AAAA;AAAA,EAE1B,+BAA+B;AAAA,EAC/B,wBAAwB;AAAA;AAAA,EACxB,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA,EASpB,uBAAuB;AAAA,IACrB,MAAM;AAAA;AAAA,IACN,QAAQ;AAAA;AAAA,IACR,MAAM;AAAA;AAAA,IACN,iBAAiB;AAAA;AAAA,IACjB,gBAAgB;AAAA;AAAA,IAChB,sBAAsB;AAAA;AAAA,EAAA;AAAA,EAaxB,kCAAkC;AAepC;AAKO,SAASC,GACd10G,GACQ;AACR,SAAOy0G,GAAa,sBAAsBz0G,CAAG;AAC/C;AC/BO,MAAM20G,GAAkB;AAAA,EAS7B,YAAYxmH,GAOT;AAfK,IAAAyM,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA,iDAA0B,IAAA;AAUhC,SAAK,SAASzM,EAAQ,QACtB,KAAK,eAAeA,EAAQ,cAC5B,KAAK,UAAUA,EAAQ,SACvB,KAAK,WAAWA,EAAQ,UACxB,KAAK,SAASA,EAAQ,QACtB,KAAK,YAAYA,EAAQ,WAEzB,KAAK,UAAU,GAAGiiD,GAAc,mBAAmB,CAACD,MAAgB;AAClE,WAAK,iBAAiBA,CAAM;AAAA,IAC9B,CAAC,GACD,KAAK,UAAU,GAAGC,GAAc,mBAAmB,MAAM;AACvD,WAAK,cAAA;AAAA,IACP,CAAC;AAAA,EACH;AAAA,EAEO,aAAajjC,GAAuC;AACzD,QAAI,CAAC,KAAK,YAAY,CAAC,KAAK,QAAS;AAErC,UAAMynG,IAAiB,KAAK,QAAQ,WAAA;AACpC,QAAI,CAACA;AACH;AAGF,UAAM18G,IAAO08G,EAAe;AAAA,MAC1B;AAAA,IAAA;AAEF,QAAI,CAAC18G;AACH;AAGF,SAAK,cAAA;AAEL,UAAMmD,IAAU,KAAK,OAAO,QAAQ,eAAe8R,EAAQ,SAAS,GAC9D2mG,IAAez4G,IACjB,KAAK,gBAAgBA,EAAQ,SAASA,EAAQ,SAAS,IAAI,IAC3D,oBAEEw5G,IAAyB1nG,EAAQ,iBAAiB;AAExD,SAAK,SAAS;AAAA,MACZ;AAAA,QACE,WAAWA,EAAQ;AAAA,QACnB,WAAWA,EAAQ;AAAA,QACnB,iBAAiB0nG;AAAA,QACjB,cAAAf;AAAA,MAAA;AAAA,MAEF57G;AAAA,IAAA;AAGF,UAAM48G,IAAkB58G,EAAK;AAAA,MAC3B;AAAA,IAAA;AAgBF,QAdI48G,MACFA,EAAgB,QAAQ,YAAY3nG,EAAQ,WAC5C2nG,EAAgB,QAAQ,aAAa3nG,EAAQ,cAAc,IACvDA,EAAQ,oBACV2nG,EAAgB,QAAQ,eAAe;AAAA,MACrC3nG,EAAQ,gBAAgB;AAAA,IAAA,IAG5B,KAAK,aAAa,wBAAwB2nG,GAC1C,KAAK,aAAa,gCAChBA,EAAgB,yBAIhB3nG,EAAQ,YAAY;AACtB,YAAM4nG,IAAe78G,EAAK;AAAA,QACxB,0CAA0CiV,EAAQ,UAAU;AAAA,MAAA;AAE9D,MAAI4nG,MACFA,EAAa,UAAU,IAAI,4BAA4B,GACvD,KAAK,aAAa,6BAA6BA;AAAA,IAEnD;AAKA,IAHiB78G,EAAK;AAAA,MACpB;AAAA,IAAA,GAEQ,MAAA;AAAA,EACZ;AAAA,EAEO,gBAAsB;AAC3B,SAAK,UAAU,MAAA,GAEX,KAAK,aAAa,0BACpB,KAAK,aAAa,sBAAsB,OAAA,GACxC,KAAK,aAAa,wBAAwB,OAG5C,KAAK,aAAa,gCAAgC,MAE9C,KAAK,aAAa,+BACpB,KAAK,aAAa,2BAA2B,UAAU;AAAA,MACrD;AAAA,IAAA,GAEF,KAAK,aAAa,6BAA6B,OAGjD,KAAK,UAAU,mBAAA,GACf,KAAK,eAAe,UAAU;AAAA,EAChC;AAAA,EAEO,iBAAiBi4C,GAAmB;AACzC,UAAM,EAAE,WAAAr0C,GAAW,SAAA7D,GAAS,QAAA87G,GAAQ,OAAAvxG,EAAA,IAAU2tC,KAAU,CAAA;AACxD,IAAI,CAACr0C,KAAa,OAAO7D,KAAY,aAIjC87G,KAAU,OAAOvxG,KAAU,WAC7B,KAAK,qBAAqB1G,GAAW0G,GAAOvK,CAAO,IAEnD,KAAK,kBAAkB6D,GAAW7D,CAAO,GAG3C,KAAK,cAAA;AAAA,EACP;AAAA,EAEO,cACL6D,GACAjD,GACM;AACN,QAAI;AACF,YAAMm8G,IAAiB,KAAK,OAAO,QAAQ,kBAAkBl5G,CAAS,GAChEvJ,IAAa,KAAK,OAAO,SAAS,OAAOyiH,GAAgBn8G,CAAK;AACpE,WAAK,OAAO,QAAQ,KAAKiD,GAAWvJ,CAAU;AAC9C,YAAM0iH,IAAY,KAAK,uBAAuB1iH,CAAU;AACxD,WAAK,0BAA0BuJ,GAAWm5G,EAAU,aAAa,GACjE,KAAK,UAAU,eAAA,GACf,KAAK,UAAU,uBAAA,GACf,KAAK,UAAU,iBAAiB,mBAAmB,SAAS;AAAA,IAC9D,SAAS51G,GAAO;AACd,cAAQ,MAAM,6BAA6BA,CAAK,GAChD,KAAK,UAAU,iBAAiB,4BAA4B,OAAO;AAAA,IACrE;AAAA,EACF;AAAA,EAEQ,kBAAkBvD,GAAmBod,GAAuB;AAClE,QAAI;AACF,YAAM87F,IAAiB,KAAK,OAAO,QAAQ,kBAAkBl5G,CAAS,GAEhEo5G,IAAmB,KAAK,OAAO,SAClC,MAAMF,CAAc,EACpB,OAAO,CAAC7gH,MAAMA,EAAE,SAAS,SAAS,GAE/BghH,IAAmBD,EAAiB,SAAS,GAC7CE,IACJD,KAAoB,IAAID,EAAiBC,CAAgB,IAAI,QACzD5iH,IAAa6iH,IACfJ,EAAe,UAAU,GAAGI,EAAY,KAAK,IAC7C,KAAK,OAAO,SAAS,cAAcl8F,CAAO,IAC1C87F,EAAe,UAAUI,EAAY,GAAG,IACxCJ,IAAiB,KAAK,OAAO,SAAS,cAAc97F,CAAO;AAE/D,WAAK,OAAO,QAAQ,KAAKpd,GAAWvJ,CAAU;AAC9C,YAAM0iH,IAAY,KAAK,uBAAuB1iH,CAAU;AACxD,WAAK,0BAA0BuJ,GAAWm5G,EAAU,aAAa,GACjE,KAAK,UAAU,eAAA,GACf,KAAK,UAAU,uBAAA,GACf,OAAO,aAAA,GAAgB,gBAAA,GACvB,KAAK,UAAU,iBAAiB,8BAA8B,SAAS;AAAA,IACzE,SAAS51G,GAAO;AACd,cAAQ,MAAM,kCAAkCA,CAAK,GACrD,KAAK,UAAU,iBAAiB,yBAAyB,OAAO;AAAA,IAClE;AAAA,EACF;AAAA,EAEQ,qBACNvD,GACA0G,GACA0W,GACM;AACN,QAAI;AACF,YAAM87F,IAAiB,KAAK,OAAO,QAAQ,kBAAkBl5G,CAAS,GAIhEoE,IAHW,KAAK,OAAO,SAC1B,MAAM80G,CAAc,EACpB,OAAO,CAAC7gH,MAAMA,EAAE,SAAS,SAAS,EACb,KAAK,CAAC0E,MAAUA,EAAM,UAAU2J,CAAK;AAC7D,UAAI,CAACtC,GAAQ;AACX,aAAK,kBAAkBpE,GAAWod,CAAO;AACzC;AAAA,MACF;AAEA,YAAM3mB,IACJyiH,EAAe,UAAU,GAAG90G,EAAO,KAAK,IACxC,KAAK,OAAO,SAAS,cAAcgZ,CAAO,IAC1C87F,EAAe,UAAU90G,EAAO,GAAG;AAErC,WAAK,OAAO,QAAQ,KAAKpE,GAAWvJ,CAAU;AAC9C,YAAM0iH,IAAY,KAAK,uBAAuB1iH,CAAU;AACxD,WAAK,0BAA0BuJ,GAAWm5G,EAAU,aAAa,GACjE,KAAK,UAAU,eAAA,GACf,KAAK,UAAU,uBAAA,GACf,KAAK,UAAU,iBAAiB,mBAAmB,SAAS;AAAA,IAC9D,SAAS51G,GAAO;AACd,cAAQ,MAAM,6BAA6BA,CAAK,GAChD,KAAK,UAAU,iBAAiB,4BAA4B,OAAO;AAAA,IACrE;AAAA,EACF;AAAA,EAEQ,gBAAgBpH,GAAiB+C,GAAsB;AAC7D,UAAMi1E,IAAQ,KAAK,OAAO,SACvB,YAAYh4E,CAAO,EACnB,QAAQ,QAAQ,GAAG,EACnB,KAAA;AACH,WAAOg4E,IAAQ,GAAGj1E,CAAI,KAAKi1E,CAAK,KAAKj1E;AAAA,EACvC;AAAA,EAEO,qBAA+C;AACpD,UAAMq6G,IAAW,KAAK,OAAO,QAAQ,kBAAA,KAAuB,CAAA;AAC5D,QAAI,CAAC,MAAM,QAAQA,CAAQ;AACzB,aAAO,CAAA;AAET,UAAM9yF,IACJ,OAAO,KAAK,OAAO,SAAS,SAAU,aAClC,KAAK,OAAO,SAAS,MAAM,KAAK,KAAK,OAAO,QAAQ,IACpD,MAAM,CAAA,GACN+yF,IAAsC,CAAA;AAE5C,WAAAD,EAAS,QAAQ,CAACh6G,MAAY;AAC5B,YAAMizC,IAAU/rB,EAAMlnB,EAAQ,OAAO,EAAE;AAAA,QACrC,CAAClH,MAAMA,EAAE,SAAS;AAAA,MAAA;AAGpB,MAAIm6C,EAAQ,SAAS,KACnBgnE,EAAU,KAAK,EAAE,SAAAj6G,GAAS,SAAAizC,EAAA,CAAS;AAAA,IAEvC,CAAC,GAEMgnE;AAAA,EACT;AAAA,EAEO,mBAAwC;AAC7C,UAAM92G,wBAAa,IAAA;AACnB,gBAAK,qBAAqB,QAAQ,CAAC,EAAE,SAAAnD,GAAS,SAAAizC,QAAc;AAC1D,MAAA9vC,EAAO,IAAInD,EAAQ,IAAIizC,EAAQ,MAAM;AAAA,IACvC,CAAC,GACM9vC;AAAA,EACT;AAAA,EAEO,UAAUrQ,GAA0C;AACzD,UAAMwkH,IAAW,KAAK,mBAAA;AAEtB,IAAIxkH,EAAQ,eACV,KAAK,SAAS,KAAA,GAGhB,KAAK,SAAS,eAAewkH,GAAU;AAAA,MACrC,YAAY,CAAC72G,GAAWo3G,MAAe;AACrC,aAAK,mBAAmBp3G,GAAWo3G,CAAU;AAAA,MAC/C;AAAA,MACA,UAAU,CAACp3G,GAAWjD,MAAU;AAC9B,aAAK,cAAciD,GAAWjD,CAAK,GACnC,KAAK,eAAA;AAAA,MACP;AAAA,MACA,QAAQ,CAACiD,GAAWjD,MAAU;AAC5B,aAAK,aAAa;AAAA,UAChB,WAAAiD;AAAA,UACA,iBAAiBjD;AAAA,UACjB,YAAYA,IAAQ,GAAGiD,CAAS,IAAIjD,EAAM,KAAK,KAAK;AAAA,QAAA,CACrD;AAAA,MACH;AAAA,MACA,SAAS,CAACiD,GAAWo3G,MAAe;AAClC,aAAK,iBAAiBp3G,GAAW,SAASo3G,CAAU;AAAA,MACtD;AAAA,MACA,SAAS,MAAM;AACb,aAAK,eAAe,OAAO;AAAA,MAC7B;AAAA,IAAA,CACD,GAED,KAAK,QAAQ,eAAeP,GAAU;AAAA,MACpC,gBAAgB,CAAC72G,GAAWo3G,MAAe;AACzC,aAAK,SAAS,KAAA,GACVA,IACF,KAAK,mBAAmBp3G,GAAWo3G,CAAU,IAE7C,KAAK,iBAAiBp3G,GAAW,OAAO;AAAA,MAE5C;AAAA,MACA,gBAAgB,CAACA,GAAWjD,MAAU;AACpC,aAAK,aAAa;AAAA,UAChB,WAAAiD;AAAA,UACA,iBAAiBjD,KAAS;AAAA,UAC1B,YAAYA,IAAQ,GAAGiD,CAAS,IAAIjD,EAAM,KAAK,KAAK;AAAA,QAAA,CACrD;AAAA,MACH;AAAA,MACA,SAAS,CAAC08G,MAAe;AACvB,aAAK,iBAAiBA,GAAY,OAAO;AAAA,MAC3C;AAAA,MACA,SAAS,MAAM;AACb,aAAK,eAAe,OAAO;AAAA,MAC7B;AAAA,IAAA,CACD;AAAA,EACH;AAAA,EAEO,0BACLz5G,GACA2vC,GACM;AACN,IAAIA,KAAUA,EAAO,SACnB,KAAK,oBAAoB,IAAI3vC,GAAW2vC,CAAM,IAE9C,KAAK,oBAAoB,OAAO3vC,CAAS;AAAA,EAE7C;AAAA,EAEO,4BAA4BA,GAAuC;AACxE,UAAM2vC,IAAS,KAAK,oBAAoB,IAAI3vC,CAAS;AACrD,WAAI2vC,MAAW,UACb,KAAK,oBAAoB,OAAO3vC,CAAS,GAEpC2vC;AAAA,EACT;AAAA,EAEO,0BAA0B3vC,GAAyB;AACxD,SAAK,oBAAoB,OAAOA,CAAS;AAAA,EAC3C;AAAA,EAEO,6BAA6B05G,GAAqB;AACvD,IAAAA,EAAI,QAAQ,CAACz6G,MAAO,KAAK,oBAAoB,OAAOA,CAAE,CAAC;AAAA,EACzD;AAAA,EAEO,uBAAuB9C,GAG5B;AACA,QAAI21C,IAAU31C;AACd,UAAMshE,IAAqB,CAAA,GACrBt7D,IAAU;AAEhB,eAAa;AACX,YAAMpF,IAAQ+0C,EAAQ,MAAM3vC,CAAO;AACnC,UAAI,CAACpF,KAASA,EAAM,UAAU;AAC5B;AAEF,MAAA0gE,EAAS,QAAQ1gE,EAAM,CAAC,CAAC,GACzB+0C,IAAUA,EAAQ,MAAM,GAAG/0C,EAAM,KAAK;AAAA,IACxC;AAEA,WAAO;AAAA,MACL,SAAS+0C,EAAQ,QAAQ,SAAS,EAAE;AAAA,MACpC,eAAe2rB,EAAS,SAAS,IAAIA,EAAS,KAAK,EAAE,IAAI;AAAA,IAAA;AAAA,EAE7D;AAAA,EAEO,sBAAsBthE,GAAiBw9G,GAA+B;AAE3E,WAAO,GADMx9G,EAAQ,QAAQ,SAAS,EAAE,CAC1B,GAAGw9G,CAAa;AAAA,EAChC;AAAA,EAEO,iBACL35G,GACAmsB,GACAirF,GACM;AACN,UAAM73G,IAAU,SAAS;AAAA,MACvB,oBAAoBS,CAAS;AAAA,IAAA;AAE/B,QAAKT,GAmBL;AAAA,UAdE,KAAK,aAAa,4BAClB,KAAK,aAAa,6BAA6BA,KAE/C,KAAK,aAAa,yBAAyB,UAAU;AAAA,QACnD;AAAA,MAAA,GAIJ,KAAK,aAAa,2BAA2BA,GAC7C,KAAK,aAAa,gBAAgB4sB,GAClC5sB,EAAQ,UAAU,IAAI,kCAAkC,GAExD,KAAK,wBAAwBS,GAAWo3G,GAAYjrF,CAAM,GAEtD,KAAK,aAAa,uBAAuB;AAC3C,cAAMytF,IACJ,KAAK,aAAa,sBAAsB,QAAQ,cAAc55G;AAChE,QAAImsB,MAAW,cAAcytF,IAC3B,KAAK,aAAa,sBAAsB,UAAU;AAAA,UAChD;AAAA,QAAA,IAEOztF,MAAW,WACpB,KAAK,aAAa,sBAAsB,UAAU;AAAA,UAChD;AAAA,QAAA;AAAA,MAGN;AAEA,WAAK,+BAA+B5sB,CAAO;AAAA;AAAA,EAC7C;AAAA,EAEO,eAAe4sB,GAAqC;AACzD,QACE,EAAAA,KACA,KAAK,aAAa,iBAClB,KAAK,aAAa,kBAAkBA,OAKlC,KAAK,aAAa,4BACpB,KAAK,aAAa,yBAAyB,UAAU;AAAA,MACnD;AAAA,IAAA,GAGJ,KAAK,aAAa,2BAA2B,MAC7C,KAAK,aAAa,gBAAgB,MAElC,KAAK,wBAAwB,MAAM,QAAWA,KAAU,OAAO,GAG7DA,MAAW,WACX,KAAK,aAAa,yBAClBA,MAAW,cAEX,KAAK,aAAa,sBAAsB,UAAU;AAAA,MAChD;AAAA,IAAA,GAIAA,MAAW,WAAW,KAAK,aAAa,wBAAuB;AACjE,YAAM0tF,IACJ,KAAK,aAAa,sBAAsB,QAAQ,WAC5CC,IACJ,KAAK,aAAa,sBAAsB,QAAQ;AAClD,MAAID,KACF,KAAK;AAAA,QACHA;AAAA,QACA;AAAA,QACAC,IAAe,GAAGD,CAAiB,IAAIC,CAAY,KAAK;AAAA,MAAA;AAAA,IAG9D;AAAA,EACF;AAAA,EAEO,mBAAmB95G,GAAmBo3G,GAA0B;AACrE,UAAM73G,IAAU,SAAS;AAAA,MACvB,oBAAoBS,CAAS;AAAA,IAAA;AAE/B,QAAI,CAACT;AACH;AAGF,UAAMy1D,IAASz1D,EAAQ;AAAA,MACrB,yBAAyB63G,CAAU;AAAA,IAAA;AAGrC,IAAIpiD,KACFA,EAAO,eAAe,EAAE,UAAU,UAAU,OAAO,UAAU,GAC7DA,EAAO,UAAU,IAAI,iCAAiC,GACtD,WAAW,MAAM;AACf,MAAAA,EAAO,UAAU,OAAO,iCAAiC;AAAA,IAC3D,GAAG4jD,GAAqB,gBAAgB,CAAC,GACzC5jD,EAAO,MAAM,EAAE,eAAe,GAAA,CAAM,MAEpCz1D,EAAQ,eAAe,EAAE,UAAU,UAAU,OAAO,UAAU,GAC9DA,EAAQ,UAAU,IAAI,wBAAwB,GAC9C,WAAW,MAAM;AACf,MAAAA,EAAQ,UAAU,OAAO,wBAAwB;AAAA,IACnD,GAAGq5G,GAAqB,gBAAgB,CAAC;AAAA,EAE7C;AAAA,EAEQ,wBACN54G,GACAo3G,GACAjrF,GACM;AAON,QANA,SACG,iBAA8B,sBAAsB,EACpD;AAAA,MAAQ,CAACnc,MACRA,EAAK,UAAU,OAAO,+BAA+B;AAAA,IAAA,GAGrD,CAAChQ;AACH;AAGF,UAAM8M,IAAQ,SAAS;AAAA,MACrB,yCAAyC9M,CAAS;AAAA,IAAA;AAGpD,IAAIo3G,IACFtqG,EAAM,QAAQ,CAACkD,MAAS;AACtB,MAAIA,EAAK,QAAQ,eAAeonG,KAC9BpnG,EAAK,UAAU,IAAI,+BAA+B;AAAA,IAEtD,CAAC,IACQmc,MAAW,WACpBrf,EAAM;AAAA,MAAQ,CAACkD,MACbA,EAAK,UAAU,IAAI,+BAA+B;AAAA,IAAA;AAAA,EAGxD;AAAA,EAEO,WACL6mG,GACAC,GACM;AACN,SAAK,QAAQ,eAAeD,GAAUC,CAAS;AAAA,EACjD;AAAA,EAEO,cAAoB;AACzB,SAAK,QAAQ,SAAA;AAAA,EACf;AAAA,EAEO,+BAA+Bv3G,GAA4B;AAChE,IAAAA,EACG,iBAA8B,8BAA8B,EAC5D,QAAQ,CAAC4D,MAAS;AACjB,MAAAA,EAAK,MAAM,UAAU,QACrBA,EAAK,aAAa,eAAe,MAAM;AAAA,IACzC,CAAC,GAEH5D,EACG,iBAA8B,gCAAgC,EAC9D,QAAQ,CAAC4D,MAAS;AACjB,MAAAA,EAAK,UAAU,OAAO,uBAAuB,GAC7CA,EAAK,gBAAgB,qBAAqB,GAC1CA,EAAK,gBAAgB,UAAU,GAC/BA,EAAK,gBAAgB,MAAM,GAC3BA,EAAK,MAAM,kBAAkB;AAAA,IAC/B,CAAC;AAAA,EACL;AACF;AC/jBA,MAAMywG,KAASnC,GAAmB,aAAa;AAOxC,MAAMsI,GAAY;AAAA,EAAlB;AACG,IAAAj7G,EAAA,iBAA8B;AAC9B,IAAAA,EAAA,iBAAoC;AACpC,IAAAA,EAAA,iBAAoC;AACpC,IAAAA,EAAA,8BAAgD;AAChD,IAAAA,EAAA,qBAAwC;AACxC,IAAAA,EAAA,mBAAsC;AACtC,IAAAA,EAAA,0BAAuC;AAEvC,IAAAA,EAAA,wBAAsC;AACtC,IAAAA,EAAA,wBAAsC;AACtC,IAAAA,EAAA,kCAAgE;AAChE,IAAAA,EAAA,gCAA8C;AAC9C,IAAAA,EAAA,iCAA+C;AAAA;AAAA;AAAA;AAAA;AAAA,EAKvD,SAAsB;AACpB,QAAI,KAAK;AACP,aAAO,KAAK;AAGd,UAAM43C,IAAY,SAAS,cAAc,KAAK;AAC9C,IAAAA,EAAU,YAAY,4CACtBA,EAAU,aAAa,QAAQ,SAAS,GACxCA,EAAU,aAAa,cAAc,cAAc;AAEnD,UAAMsoD,IAAS,SAAS,cAAc,KAAK;AAC3C,IAAAA,EAAO,YAAY;AAEnB,UAAMnpD,IAAQ,SAAS,cAAc,IAAI;AACzC,IAAAA,EAAM,cAAc,gBACpBmpD,EAAO,YAAYnpD,CAAK,GAExB,KAAK,YAAY,SAAS,cAAc,QAAQ,GAChD,KAAK,UAAU,YAAY,8BAC3B,KAAK,UAAU,aAAa,eAAe,gBAAgB,GAC3D,KAAK,UAAU,aAAa,SAAS,kBAAkB,GACvD,KAAK,UAAU,aAAa,cAAc,kBAAkB,GAC5D,KAAK,UAAU,aAAa,iBAAiB,MAAM,GACnD,KAAK,UAAU,aAAa,cAAc,2BAA2B;AAErE,UAAMmkE,IAAU,SAAS,cAAc,MAAM;AAC7C,IAAAA,EAAQ,YAAY,uBACpBA,EAAQ,cAAc,KACtB,KAAK,UAAU,YAAYA,CAAO,GAElC,KAAK,UAAU,iBAAiB,SAAS,MAAM;AAC7C,WAAK,0BAAA;AAAA,IACP,CAAC,GACDhb,EAAO,YAAY,KAAK,SAAS,GAEjCtoD,EAAU,YAAYsoD,CAAM;AAE5B,UAAM5iG,IAAO,SAAS,cAAc,KAAK;AACzC,IAAAA,EAAK,YAAY;AAGjB,UAAM69G,IAAiB,SAAS,cAAc,KAAK;AACnD,IAAAA,EAAe,YAAY;AAE3B,UAAMC,IAAe,SAAS,cAAc,IAAI;AAChD,IAAAA,EAAa,cAAc,WAC3BD,EAAe,YAAYC,CAAY,GAEvC,KAAK,UAAU,SAAS,cAAc,QAAQ,GAC9C,KAAK,QAAQ,YAAY,oDACzB,KAAK,QAAQ,aAAa,eAAe,MAAM,GAC/C,KAAK,QAAQ,aAAa,SAAS,eAAe,GAClD,KAAK,QAAQ,aAAa,cAAc,eAAe,GACvD,KAAK,QAAQ,cAAc,UAC3B,KAAK,QAAQ,WAAW,IACxB,KAAK,QAAQ,iBAAiB,SAAS,MAAM;AAC3C,WAAK,iBAAA;AAAA,IACP,CAAC,GACDD,EAAe,YAAY,KAAK,OAAO,GAEvC,KAAK,UAAU,SAAS,cAAc,QAAQ,GAC9C,KAAK,QAAQ,YAAY,oDACzB,KAAK,QAAQ,aAAa,eAAe,MAAM,GAC/C,KAAK,QAAQ,aAAa,SAAS,eAAe,GAClD,KAAK,QAAQ,aAAa,cAAc,eAAe,GACvD,KAAK,QAAQ,cAAc,UAC3B,KAAK,QAAQ,WAAW,IACxB,KAAK,QAAQ,iBAAiB,SAAS,MAAM;AAC3C,WAAK,iBAAA;AAAA,IACP,CAAC,GACDA,EAAe,YAAY,KAAK,OAAO,GAEvC79G,EAAK,YAAY69G,CAAc;AAG/B,UAAME,IAAc,SAAS,cAAc,KAAK;AAChD,IAAAA,EAAY,YAAY;AAExB,UAAMC,IAAY,SAAS,cAAc,IAAI;AAC7C,IAAAA,EAAU,cAAc,QACxBD,EAAY,YAAYC,CAAS;AAEjC,UAAMC,IAAe,SAAS,cAAc,OAAO;AACnD,IAAAA,EAAa,YAAY,yBAEzB,KAAK,uBAAuB,SAAS,cAAc,OAAO,GAC1D,KAAK,qBAAqB,OAAO,YACjC,KAAK,qBAAqB;AAAA,MACxB;AAAA,MACA;AAAA,IAAA,GAEF,KAAK,qBAAqB;AAAA,MACxB;AAAA,MACA;AAAA,IAAA,GAEF,KAAK,qBAAqB,YAAY,2BACtC,KAAK,qBAAqB,iBAAiB,UAAU,CAAC/jG,MAAU;AAC9D,YAAMlS,IAASkS,EAAM;AACrB,WAAK,2BAA2BlS,EAAO,OAAO;AAAA,IAChD,CAAC,GACDi2G,EAAa,YAAY,KAAK,oBAAoB;AAElD,UAAMC,IAAc,SAAS,cAAc,MAAM;AACjD,IAAAA,EAAY,YAAY,6BACxBA,EAAY,cAAc,wBAC1BD,EAAa,YAAYC,CAAW,GAEpCH,EAAY,YAAYE,CAAY,GACpCj+G,EAAK,YAAY+9G,CAAW;AAG5B,UAAMI,IAAkB,SAAS,cAAc,KAAK;AACpD,IAAAA,EAAgB,YAAY;AAE5B,UAAMC,IAAgB,SAAS,cAAc,IAAI;AACjD,IAAAA,EAAc,cAAc,YAC5BD,EAAgB,YAAYC,CAAa,GAEzC,KAAK,cAAc,SAAS,cAAc,QAAQ,GAClD,KAAK,YAAY,YACf,kDACF,KAAK,YAAY,aAAa,eAAe,eAAe,GAC5D,KAAK,YAAY,cAAc,oBAC/B,KAAK,YAAY,iBAAiB,SAAS,MAAM;AAC/C,WAAK,yBAAA;AAAA,IACP,CAAC,GACDD,EAAgB,YAAY,KAAK,WAAW,GAE5Cn+G,EAAK,YAAYm+G,CAAe;AAGhC,UAAME,IAAc,SAAS,cAAc,KAAK;AAChD,WAAAA,EAAY,YAAY,8CACxBA,EAAY,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQxBr+G,EAAK,YAAYq+G,CAAW,GAE5B/jE,EAAU,YAAYt6C,CAAI,GAE1B,KAAK,UAAUs6C,GACfk9D,GAAO,MAAM,sBAAsB,GAC5Bl9D;AAAA,EACT;AAAA,EAEA,aAAiC;AAC/B,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,oBAAoBgkE,GAAkBC,GAAwB;AAC5D,IAAI,KAAK,YACP,KAAK,QAAQ,WAAW,CAACD,GACzB,KAAK,QAAQ,UAAU,OAAO,uBAAuB,CAACA,CAAO,IAE3D,KAAK,YACP,KAAK,QAAQ,WAAW,CAACC,GACzB,KAAK,QAAQ,UAAU,OAAO,uBAAuB,CAACA,CAAO,IAE/D/G,GAAO,MAAM,2BAA2B,EAAE,SAAA8G,GAAS,SAAAC,GAAS;AAAA,EAC9D;AAAA,EAEA,yBAAyBC,GAAwB;AAC/C,IAAI,KAAK,yBACP,KAAK,qBAAqB,UAAUA,GACtB,KAAK,qBAAqB,QAAQ,wBAAwB,GACjE,UAAU,OAAO,0BAA0BA,CAAO,IAE3DhH,GAAO,MAAM,kCAAkC,EAAE,SAAAgH,EAAA,CAAS;AAAA,EAC5D;AAAA,EAEA,2BAAoC;AAClC,WAAO,KAAK,sBAAsB,WAAW;AAAA,EAC/C;AAAA,EAEA,OAAOtoH,GAA4B;AACjC,SAAK,iBAAiBA;AAAA,EACxB;AAAA,EAEA,OAAOA,GAA4B;AACjC,SAAK,iBAAiBA;AAAA,EACxB;AAAA,EAEA,uBAAuBA,GAA4C;AACjE,SAAK,2BAA2BA;AAAA,EAClC;AAAA,EAEA,eAAeA,GAA4B;AACzC,SAAK,yBAAyBA;AAAA,EAChC;AAAA,EAEA,gBAAgBA,GAA4B;AAC1C,SAAK,0BAA0BA;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA,EAKA,aAAauoH,GAA0B;AACrC,QAAI,CAAC,KAAK,UAAW;AACrB,UAAMb,IAAU,KAAK,UAAU,cAAc,sBAAsB;AACnE,IAAIA,MACFA,EAAQ,cAAca,IAAY,MAAM,MAE1C,KAAK,UAAU;AAAA,MACb;AAAA,MACAA,IAAY,mBAAmB;AAAA,IAAA,GAEjC,KAAK,UAAU;AAAA,MACb;AAAA,MACAA,IAAY,mBAAmB;AAAA,IAAA,GAEjC,KAAK,UAAU,aAAa,iBAAiBA,IAAY,UAAU,MAAM;AAAA,EAC3E;AAAA,EAEA,qBAAqBC,GAA2B;AAC9C,QAAK,KAAK;AAGV,UAAIA;AACF,YAAI,CAAC,KAAK,kBAAkB;AAC1B,gBAAM1C,IAAY,SAAS,cAAc,KAAK;AAC9C,UAAAA,EAAU,YAAY,4BACtBA,EAAU,aAAa,SAAS,iBAAiB,GACjD,KAAK,QAAQ,YAAYA,CAAS,GAClC,KAAK,mBAAmBA;AAAA,QAC1B;AAAA;AAEA,aAAK,kBAAkB,OAAA,GACvB,KAAK,mBAAmB;AAAA,EAE5B;AAAA,EAEA,UAAgB;AACd,SAAK,SAAS,OAAA,GACd,KAAK,UAAU,MACf,KAAK,UAAU,MACf,KAAK,UAAU,MACf,KAAK,uBAAuB,MAC5B,KAAK,cAAc,MACnB,KAAK,YAAY,MACjB,KAAK,mBAAmB,MACxB,KAAK,iBAAiB,MACtB,KAAK,iBAAiB,MACtB,KAAK,2BAA2B,MAChC,KAAK,yBAAyB,MAC9B,KAAK,0BAA0B;AAAA,EACjC;AACF;AC5QA,MAAMxE,KAASnC,GAAmB,aAAa;AAUxC,MAAMsJ,GAAY;AAAA,EAAlB;AACG,IAAAj8G,EAAA,iBAA8B;AAC9B,IAAAA,EAAA,gBAAS;AACT,IAAAA,EAAA,0BAAkC;AAClC,IAAAA,EAAA,wBAAuD;AACvD,IAAAA,EAAA,2BAA0D;AAC1D,IAAAA,EAAA,uBAA6C;AAC7C,IAAAA,EAAA,yBAAuD;AAAA;AAAA;AAAA;AAAA;AAAA,EAK/D,SAAsB;AACpB,UAAMk8G,IAAO,SAAS,cAAc,KAAK;AACzC,IAAAA,EAAK,YAAY,uBACjBA,EAAK,aAAa,QAAQ,MAAM,GAChCA,EAAK,MAAM,UAAU;AAGrB,UAAMC,IAAW,SAAS,cAAc,QAAQ;AAChD,IAAAA,EAAS,YAAY,qDACrBA,EAAS,aAAa,QAAQ,UAAU,GACxCA,EAAS,cAAc,QACvBA,EAAS,iBAAiB,SAAS,MAAM;AACvC,MAAI,KAAK,oBAAoB,KAAK,kBAChC,KAAK,eAAe,KAAK,gBAAgB,GAE3C,KAAK,MAAA;AAAA,IACP,CAAC,GACDD,EAAK,YAAYC,CAAQ;AAGzB,UAAMC,IAAc,SAAS,cAAc,QAAQ;AACnD,WAAAA,EAAY,YACV,wDACFA,EAAY,aAAa,QAAQ,UAAU,GAC3CA,EAAY,cAAc,eAC1BA,EAAY,iBAAiB,SAAS,MAAM;AAC1C,MAAI,KAAK,oBAAoB,KAAK,qBAChC,KAAK,kBAAkB,KAAK,gBAAgB,GAE9C,KAAK,MAAA;AAAA,IACP,CAAC,GACDF,EAAK,YAAYE,CAAW,GAG5B,KAAK,gBAAgB,MAAM;AACzB,MAAI,KAAK,UAAQ,KAAK,MAAA;AAAA,IACxB,GACA,SAAS,iBAAiB,SAAS,KAAK,aAAa,GAGrD,KAAK,kBAAkB,CAACz5G,MAAqB;AAC3C,MAAIA,EAAE,QAAQ,YAAY,KAAK,UAC7B,KAAK,MAAA;AAAA,IAET,GACA,SAAS,iBAAiB,WAAW,KAAK,eAAe,GAEzD,KAAK,UAAUu5G,GACf,SAAS,KAAK,YAAYA,CAAI,GACvBA;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,aAAiC;AAC/B,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,KAAK7C,GAAmBthH,GAA8B;AACpD,IAAK,KAAK,WACR,KAAK,OAAA,GAGP,KAAK,mBAAmBshH,GAGxB,KAAK,QAAS,MAAM,OAAO,GAAGthH,EAAS,CAAC,MACxC,KAAK,QAAS,MAAM,MAAM,GAAGA,EAAS,CAAC,MAGvC,KAAK,QAAS,MAAM,UAAU,SAC9B,KAAK,SAAS;AAGd,UAAMskH,IAAY,KAAK,QAAS;AAAA,MAC9B;AAAA,IAAA;AAEF,IAAIA,KACFA,EAAU,MAAA,GAGZvH,GAAO,MAAM,uBAAuB,EAAE,WAAAuE,GAAW,UAAAthH,GAAU;AAAA,EAC7D;AAAA;AAAA;AAAA;AAAA,EAKA,QAAc;AACZ,IAAK,KAAK,YACV,KAAK,QAAQ,MAAM,UAAU,QAC7B,KAAK,SAAS,IACd,KAAK,mBAAmB,MACxB+8G,GAAO,MAAM,qBAAqB;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA,EAKA,YAAqB;AACnB,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,OAAOthH,GAA6C;AAClD,SAAK,iBAAiBA;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA,EAKA,UAAUA,GAA6C;AACrD,SAAK,oBAAoBA;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA,EAKA,UAAgB;AACd,IAAI,KAAK,WACP,KAAK,QAAQ,OAAA,GAGX,KAAK,kBACP,SAAS,oBAAoB,SAAS,KAAK,aAAa,GACxD,KAAK,gBAAgB,OAEnB,KAAK,oBACP,SAAS,oBAAoB,WAAW,KAAK,eAAe,GAC5D,KAAK,kBAAkB,OAEzB,KAAK,UAAU,MACf,KAAK,iBAAiB,MACtB,KAAK,oBAAoB;AAAA,EAC3B;AACF;ACtKO,MAAM8oH,GAAuB;AAAA,EAGlC,YAAYloF,GAA0C;AAFrC,IAAAp0B,EAAA;AAGf,SAAK,OAAO,IAAIi8G,GAAA,GAChB,KAAK,KAAK,OAAO7nF,EAAS,MAAM,GAChC,KAAK,KAAK,UAAUA,EAAS,SAAS;AAAA,EACxC;AAAA,EAEA,cAAc9uB,GAAqBkS,GAAyB;AAC1D,UAAM6hG,IAAY/zG,EAAO,aAAa,gBAAgB;AACtD,QAAI,CAAC+zG;AACH;AAGF,UAAMthH,IAAyB;AAAA,MAC7B,GAAGyf,EAAM;AAAA,MACT,GAAGA,EAAM;AAAA,IAAA;AAGX,SAAK,KAAK,KAAK6hG,GAAWthH,CAAQ;AAAA,EACpC;AAAA,EAEA,QAAc;AACZ,SAAK,KAAK,MAAA;AAAA,EACZ;AAAA,EAEA,UAAgB;AACd,SAAK,KAAK,QAAA;AAAA,EACZ;AACF;AC7BO,SAASwkH,GACdj7G,GACAu5G,GACA2B,GACAC,GACM;AACN,MAAI,CAAC5B,KAAiBv5G,EAAS,WAAW;AACxC;AAGF,QAAM2xG,IAAY3xG,EAAS,SAAS,GAC9Bo7G,IAAcp7G,EAAS2xG,CAAS;AACtC,EAAKyJ,MAILp7G,EAAS2xG,CAAS,IAAI;AAAA,IACpB,GAAGyJ;AAAA,IACH,SAASD,EAAsBC,EAAY,SAAS7B,CAAa;AAAA,IACjE,UAAU6B,EAAY,YAAYF;AAAA,EAAA;AAEtC;AAEO,SAASG,GAA8Bj+D,GAAqB;AACjE,SAAOvJ,GAAqBuJ,EAAI,QAAQ,SAAS;AAAA,CAAI,CAAC,EACnD,QAAQ,aAAa,EAAE,EACvB,KAAA;AACL;AChBO,MAAMk+D,GAAqB;AAAA,EAGhC,YAA6BrpH,GAAsC;AAFlD,IAAAyM,EAAA,gBAAS2yG,GAAmB,sBAAsB;AAEtC,SAAA,UAAAp/G;AAAA,EAAuC;AAAA,EAEpE,KAAK2N,GAAmB7D,GAAuB;AAC7C,QAAI,CAAC6D,EAAW;AAEhB,UAAMgvG,IAAU,KAAK,IAAIhvG,CAAS;AAClC,IAAAgvG,EAAQ,OAAO,KAAK,EAAE,SAAA7yG,GAAS,WAAW,KAAK,IAAA,GAAO,GAElD6yG,EAAQ,OAAO,SAAS,KAAK,QAAQ,aACvCA,EAAQ,OAAO,MAAA,GAGjBA,EAAQ,cAAc,KAAK,IAAA,GAE3B,KAAK,QAAQhvG,GAAWgvG,CAAO;AAAA,EACjC;AAAA,EAEA,IAAIhvG,GAAgC;AAClC,QAAI;AACF,YAAMi9D,IAAS,aAAa,QAAQ,KAAK,WAAWj9D,CAAS,CAAC;AAC9D,UAAIi9D,GAAQ;AACV,cAAM0S,IAAS,KAAK,MAAM1S,CAAM;AAChC,eAAO;AAAA,UACL,WAAAj9D;AAAA,UACA,QAAQ2vE,EAAO,UAAU,CAAA;AAAA,UACzB,aAAaA,EAAO,eAAe,KAAK,IAAA;AAAA,QAAI;AAAA,MAEhD;AAAA,IACF,SAASpsE,GAAO;AACd,WAAK,OAAO,KAAK,sCAAsCA,CAAK;AAAA,IAC9D;AAEA,WAAO;AAAA,MACL,WAAAvD;AAAA,MACA,QAAQ,CAAA;AAAA,MACR,aAAa,KAAK,IAAA;AAAA,IAAI;AAAA,EAE1B;AAAA,EAEA,OAKG;AACD,UAAMu3B,IAKD,CAAA;AAEL,QAAI;AACF,eAAS3iC,IAAI,GAAGA,IAAI,aAAa,QAAQA,KAAK;AAC5C,cAAMsP,IAAM,aAAa,IAAItP,CAAC;AAC9B,YAAI,CAACsP,KAAO,CAACA,EAAI,WAAW,KAAK,QAAQ,MAAM;AAC7C;AAEF,cAAM+4D,IAAS,aAAa,QAAQ/4D,CAAG;AACvC,YAAK+4D;AAGL,cAAI;AACF,kBAAMh9D,IAAO,KAAK,MAAMg9D,CAAM;AAC9B,YAAA1lC,EAAQ,KAAK;AAAA,cACX,WAAWt3B,EAAK;AAAA,cAChB,YAAYA,EAAK,QAAQ,UAAU;AAAA,cACnC,aAAaA,EAAK,cACd,IAAI,KAAKA,EAAK,WAAW,EAAE,eAAA,IAC3B;AAAA,cACJ,MAAMg9D,EAAO;AAAA,YAAA,CACd;AAAA,UACH,SAAS0+C,GAAY;AACnB,iBAAK,OAAO,KAAK,kCAAkC;AAAA,cACjD,KAAAz3G;AAAA,cACA,OAAOy3G;AAAA,YAAA,CACR;AAAA,UACH;AAAA,MACF;AAAA,IACF,SAASp4G,GAAO;AACd,WAAK,OAAO,KAAK,yCAAyCA,CAAK;AAAA,IACjE;AAEA,WAAOg0B;AAAA,EACT;AAAA,EAEA,MAAMv3B,GAAyB;AAC7B,QAAI;AACF,mBAAa,WAAW,KAAK,WAAWA,CAAS,CAAC,GAClD,KAAK,OAAO,MAAM,0BAA0B,EAAE,WAAAA,GAAW;AAAA,IAC3D,SAASuD,GAAO;AACd,WAAK,OAAO,KAAK,mCAAmCA,CAAK;AAAA,IAC3D;AAAA,EACF;AAAA,EAEA,WAAiB;AACf,QAAI;AACF,YAAMq4G,IAAyB,CAAA;AAC/B,eAAShnH,IAAI,GAAGA,IAAI,aAAa,QAAQA,KAAK;AAC5C,cAAMsP,IAAM,aAAa,IAAItP,CAAC;AAC9B,QAAIsP,GAAK,WAAW,KAAK,QAAQ,MAAM,KACrC03G,EAAa,KAAK13G,CAAG;AAAA,MAEzB;AACA,MAAA03G,EAAa,QAAQ,CAAC13G,MAAQ,aAAa,WAAWA,CAAG,CAAC,GAC1D,KAAK,OAAO,MAAM,4BAA4B;AAAA,QAC5C,OAAO03G,EAAa;AAAA,MAAA,CACrB;AAAA,IACH,SAASr4G,GAAO;AACd,WAAK,OAAO,KAAK,qCAAqCA,CAAK;AAAA,IAC7D;AAAA,EACF;AAAA,EAEQ,QAAQvD,GAAmBgvG,GAA4B;AAC7D,QAAI;AACF,WAAK,MAAMhvG,GAAWgvG,CAAO;AAAA,IAC/B,SAASzrG,GAAO;AACd,MAAIA,aAAiB,SAASA,EAAM,SAAS,wBAC3C,KAAK,OAAO,KAAK,kDAAkD;AAAA,QACjE,WAAAvD;AAAA,MAAA,CACD,GACD,KAAK,kBAAA,GACL,KAAK,MAAMA,GAAWgvG,CAAO,KAE7B,KAAK,OAAO,KAAK,kCAAkCzrG,CAAK;AAAA,IAE5D;AAAA,EACF;AAAA,EAEQ,MAAMvD,GAAmBgvG,GAA4B;AAE3D,QAAIxpE,IAAa,KAAK,UAAUwpE,CAAO;AACvC,IAAIxpE,EAAW,SAAS,KAAK,QAAQ,YACnCwpE,EAAQ,SAASA,EAAQ,OAAO;AAAA,MAC9B,KAAK,MAAMA,EAAQ,OAAO,SAAS,CAAC;AAAA,IAAA,GAEtCxpE,IAAa,KAAK,UAAUwpE,CAAO,IAGrC,aAAa,QAAQ,KAAK,WAAWhvG,CAAS,GAAGwlC,CAAU,GAC3D,KAAK,OAAO,MAAM,wBAAwB;AAAA,MACxC,WAAAxlC;AAAA,MACA,YAAYgvG,EAAQ,OAAO;AAAA,IAAA,CAC5B;AAAA,EACH;AAAA,EAEQ,oBAA0B;AAChC,QAAI;AACF,YAAM6M,IAAuD,CAAA;AAE7D,eAASjnH,IAAI,GAAGA,IAAI,aAAa,QAAQA,KAAK;AAC5C,cAAMsP,IAAM,aAAa,IAAItP,CAAC;AAC9B,YAAI,CAACsP,KAAO,CAACA,EAAI,WAAW,KAAK,QAAQ,MAAM,EAAG;AAElD,cAAM+4D,IAAS,aAAa,QAAQ/4D,CAAG;AACvC,YAAK+4D;AAEL,cAAI;AACF,kBAAMh9D,IAAO,KAAK,MAAMg9D,CAAM;AAC9B,YAAA4+C,EAAU,KAAK;AAAA,cACb,KAAA33G;AAAA,cACA,WAAWjE,EAAK,eAAe;AAAA,YAAA,CAChC;AAAA,UACH,QAAQ;AACN,YAAA47G,EAAU,KAAK,EAAE,KAAA33G,GAAK,WAAW,GAAG;AAAA,UACtC;AAAA,MACF;AAEA,MAAA23G,EAAU,KAAK,CAACv9G,GAAGC,MAAMD,EAAE,YAAYC,EAAE,SAAS;AAClD,YAAMovD,IAAW,KAAK,KAAKkuD,EAAU,SAAS,CAAC;AAE/C,eAASjnH,IAAI,GAAGA,IAAI+4D,GAAU/4D,KAAK;AACjC,cAAM2E,IAAQsiH,EAAUjnH,CAAC;AACzB,QAAI2E,KACF,aAAa,WAAWA,EAAM,GAAG;AAAA,MAErC;AAEA,WAAK,OAAO,MAAM,2BAA2B;AAAA,QAC3C,SAASo0D;AAAA,QACT,WAAWkuD,EAAU,SAASluD;AAAA,MAAA,CAC/B;AAAA,IACH,SAASpqD,GAAO;AACd,WAAK,OAAO,KAAK,qCAAqCA,CAAK;AAAA,IAC7D;AAAA,EACF;AAAA,EAEQ,WAAWvD,GAA2B;AAC5C,WAAO,GAAG,KAAK,QAAQ,MAAM,GAAGA,CAAS;AAAA,EAC3C;AACF;AC1MA,MAAM4zG,KAASnC,GAAmB,eAAe;AAsB1C,MAAMqK,GAAuB;AAAA,EAKlC,YAAYn0F,GAA6B;AAJjC,IAAA7oB,EAAA;AACA,IAAAA,EAAA,wBAAqC;AACrC,IAAAA,EAAA,iBAAgC;AAGtC,SAAK,SAAS6oB;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA,EAKA,mBAAkC;AAChC,UAAMo0F,IAAa,KAAK,OAAO,QAAQ,cAAA,GACjCC,IAAe,KAAK,OAAO,QAAQ,gBAAA,GAEnCC,IAAyB;AAAA,MAC7B,cAAcF,EAAW,OAAO,CAACx6G,MAAYA,EAAG,SAAS,MAAM,EAAE;AAAA,MACjE,WAAW;AAAA,MACX,WAAW;AAAA,MACX,eAAe;AAAA,MACf,0CAA0B,IAAA;AAAA,MAC1B,iBAAiB;AAAA,MACjB,mBAAmB;AAAA,MACnB,kBAAkB;AAAA,MAClB,UAAU;AAAA,IAAA,GAIN26G,wBAAuB,IAAA;AAG7B,WAAAH,EAAW,QAAQ,CAACx6G,MAAY;AAC9B,UAAIA,EAAG,SAAS,OAAQ;AAExB,MAAA26G,EAAiB,IAAI36G,EAAG,SAAS;AAGjC,YAAMpF,IAAU,KAAK,OAAO,QAAQ;AAAA,QAClCoF,EAAG;AAAA,MAAA,GAGC46G,IAAkBhgH,EAAQ,MAAM,yBAAyB,KAAK,CAAA,GAC9DigH,IAAkBjgH,EAAQ,MAAM,qBAAqB,KAAK,CAAA,GAC1DkgH,IACJlgH,EAAQ,MAAM,iCAAiC,KAAK,CAAA;AAEtD,MAAA8/G,EAAQ,aAAaE,EAAgB,QACrCF,EAAQ,aAAaG,EAAgB,QACrCH,EAAQ,iBAAiBI,EAAoB,QAG7CF,EAAgB,QAAQ,CAACp/G,MAAkB;AACzC,cAAMhF,IAAOgF,EAAM,QAAQ,kBAAkB,EAAE;AAC/C,QAAAk/G,EAAQ,mBAAmBlkH,EAAK;AAAA,MAClC,CAAC,GAEDqkH,EAAgB,QAAQ,CAACr/G,MAAkB;AACzC,cAAMhF,IAAOgF,EAAM,QAAQ,cAAc,EAAE;AAC3C,QAAAk/G,EAAQ,qBAAqBlkH,EAAK;AAAA,MACpC,CAAC;AAGD,YAAMwH,IAAU,KAAK,OAAO,QAAQ,eAAegC,EAAG,SAAS;AAC/D,UAAIhC,GAAS;AACX,cAAML,IAAOK,EAAQ,SAAS;AAC9B,QAAA08G,EAAQ,qBAAqB;AAAA,UAC3B/8G;AAAA,WACC+8G,EAAQ,qBAAqB,IAAI/8G,CAAI,KAAK,KAAK;AAAA,QAAA;AAAA,MAEpD;AAAA,IACF,CAAC,GAED+8G,EAAQ,mBAAmBC,EAAiB,MAG5CF,EAAa,QAAQ,CAACz8G,MAAiB;AACrC,YAAM+8G,IAAiB,KAAK,OAAO,SAAS,MAAM/8G,EAAQ,OAAO;AACjE,MAAA08G,EAAQ,YAAYK,EAAe;AAAA,IACrC,CAAC,GAED,KAAK,UAAUL,GACRA;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,iBAAmC;AACjC,UAAMF,IAAa,KAAK,OAAO,QAAQ,cAAA,GACjCrlH,IAA4B,CAAA;AAClC,QAAIG,IAAW;AAEf,WAAAklH,EAAW,QAAQ,CAACx6G,MAAY;AAC9B,UAAIA,EAAG,SAAS,OAAQ;AAExB,YAAMhC,IAAU,KAAK,OAAO,QAAQ,eAAegC,EAAG,SAAS;AAC/D,UAAI,CAAChC,EAAS;AAGd,YAAMk5G,KADY,KAAK,OAAO,SAAS,YAAYl5G,EAAQ,OAAO,KAAK,IAC7C,UAAU,GAAG,GAAG,EAAE,QAAQ,QAAQ,GAAG,EAAE,KAAA;AAGjE,UAAIg9G,IAAuD;AAC3D,YAAMpgH,IAAU,KAAK,OAAO,QAAQ;AAAA,QAClCoF,EAAG;AAAA,MAAA;AAGL,MAAIpF,EAAQ,SAAS,KAAK,KAAK,CAACA,EAAQ,SAAS,KAAK,IACpDogH,IAAa,aACJpgH,EAAQ,SAAS,KAAK,KAAK,CAACA,EAAQ,SAAS,KAAK,MAC3DogH,IAAa,aAGf7lH,EAAQ,KAAK;AAAA,QACX,WAAW6K,EAAG;AAAA,QACd,aAAahC,EAAQ,SAAS;AAAA,QAC9B,UAAU1I;AAAA,QACV,SAAA4hH;AAAA,QACA,MAAM8D;AAAA,MAAA,CACP;AAAA,IACH,CAAC,GAEM7lH;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,kBAA+B;AAC7B,QAAI;AACF,YAAMulH,IAAU,KAAK,iBAAA,GACfO,IAAY,SAAS,cAAc,KAAK;AAC9C,MAAAA,EAAU,YAAY,mCACtBA,EAAU,aAAa,QAAQ,QAAQ,GACvCA,EAAU,aAAa,cAAc,2BAA2B;AAEhE,YAAMC,IACJR,EAAQ,eAAe,IACnB,KAAK,MAAOA,EAAQ,YAAYA,EAAQ,eAAgB,GAAG,IAC3D,GACAS,IACJT,EAAQ,eAAe,IACnB,KAAK,MAAOA,EAAQ,YAAYA,EAAQ,eAAgB,GAAG,IAC3D,GACAU,IACJV,EAAQ,eAAe,IACnB,KAAK,MAAOA,EAAQ,gBAAgBA,EAAQ,eAAgB,GAAG,IAC/D;AAEN,aAAAO,EAAU,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CASiBP,EAAQ,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,6CAKpBA,EAAQ,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,6CAKxBA,EAAQ,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAYXA,EAAQ,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,gCAKnCQ,CAAe;AAAA;AAAA;AAAA,+CAGAR,EAAQ,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAOpBA,EAAQ,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,gCAKnCS,CAAe;AAAA;AAAA;AAAA,+CAGAT,EAAQ,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAOtBA,EAAQ,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,gCAKvCU,CAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cASrC,MAAM,KAAKV,EAAQ,qBAAqB,QAAA,CAAS,EAChD;AAAA,QACC,CAAC,CAAC/8G,GAAM+W,CAAK,MAAM;AAAA;AAAA,2DAEwB,KAAK,mBAAmB/W,CAAI,CAAC,IAAIA,CAAI;AAAA,4DACpC+W,CAAK;AAAA;AAAA;AAAA,MAAA,EAIlD,KAAK,EAAE,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAmCwB,KAAK,eAAA,EAAiB,MAAM;AAAA;AAAA;AAAA,YAG/D,KAAK,mBAAmB;AAAA;AAAA;AAAA,OAK9B,KAAK,iBAAiBumG,GACtB,KAAK,wBAAwBA,CAAS,GAE/BA;AAAA,IACT,SAASj5G,GAAO;AACdqwG,MAAAA,GAAO,MAAM,8CAA8CrwG,CAAK;AAEhE,YAAMq5G,IAAiB,SAAS,cAAc,KAAK;AACnD,aAAAA,EAAe,YAAY,gDAC3BA,EAAe,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUpBA;AAAA,IACT;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKQ,oBAA4B;AAClC,UAAMlmH,IAAU,KAAK,eAAA;AAErB,WAAIA,EAAQ,WAAW,IACd;AAAA;AAAA;AAAA;AAAA,UAOFA,EACJ;AAAA,MACC,CAAC8H,GAAQ1E,MAAU;AAAA,6DACkC0E,EAAO,SAAS;AAAA,qDACxB1E,IAAQ,CAAC;AAAA;AAAA;AAAA,0EAGY0E,EAAO,IAAI;AAAA,oBACjE,KAAK,kBAAkBA,EAAO,IAAI,CAAC;AAAA;AAAA,2DAEIA,EAAO,WAAW;AAAA;AAAA,wDAErBk1C,GAAWl1C,EAAO,OAAO,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,iCAKjDA,EAAO,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAA,EAS1C,KAAK,EAAE;AAAA,EACZ;AAAA;AAAA;AAAA;AAAA,EAKQ,wBAAwBg+G,GAA8B;AAE5D,IAAAA,EACG,cAAc,yBAAyB,GACtC,iBAAiB,SAAS,MAAM;AAChC,YAAMK,IAAY,KAAK,gBAAA;AACvB,WAAK,gBAAgB,YAAYA,CAAS;AAAA,IAC5C,CAAC,GAGHL,EACG,cAAc,+BAA+B,GAC5C,iBAAiB,SAAS,MAAM;AAChC,WAAK,aAAa,OAAO;AAAA,IAC3B,CAAC,GAEHA,EACG,cAAc,8BAA8B,GAC3C,iBAAiB,SAAS,MAAM;AAChC,WAAK,aAAa,MAAM;AAAA,IAC1B,CAAC,GAGHA,EACG,cAAc,gCAAgC,GAC7C,iBAAiB,SAAS,MAAM;AAChC,WAAK,cAAA;AAAA,IACP,CAAC,GAGHA,EACG,iBAAiB,gCAAgC,EACjD,QAAQ,CAACM,MAAQ;AAChB,MAAAA,EAAI,iBAAiB,SAAS,CAACr7G,MAAM;AACnC,cAAMzB,IAAayB,EAAE,cAA8B;AAAA,UACjD;AAAA,QAAA;AAEF,QAAIzB,KACF,KAAK,cAAcA,CAAS;AAAA,MAEhC,CAAC;AAAA,IACH,CAAC,GAGHw8G,EAAU,iBAAiB,qBAAqB,EAAE,QAAQ,CAACxsG,MAAS;AAClE,MAAAA,EAAK,iBAAiB,SAAS,CAACvO,MAAM;AACpC,YAAKA,EAAE,OAAuB,QAAQ,gCAAgC;AACpE;AACF,cAAMzB,IAAagQ,EAAqB,aAAa,iBAAiB;AACtE,QAAIhQ,KACF,KAAK,cAAcA,CAAS;AAAA,MAEhC,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKQ,aAAai7F,GAAmC;AACtD,UAAMvkG,IAAU,KAAK,eAAA;AACrB,QAAIA,EAAQ,WAAW,EAAG;AAE1B,UAAM8kG,IAAcP,MAAc,UAAU,IAAIvkG,EAAQ,SAAS,GAC3D0N,IAAS1N,EAAQ8kG,CAAW;AAClC,IAAKp3F,KAGL,KAAK,cAAcA,EAAO,SAAS;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA,EAKQ,cAAcpE,GAAyB;AAC7C,UAAMT,IAAU,SAAS;AAAA,MACvB,oBAAoBS,CAAS;AAAA,IAAA;AAE/B,IAAKT,MAGLA,EAAQ,eAAe,EAAE,UAAU,UAAU,OAAO,UAAU,GAG9DA,EAAQ,UAAU,IAAI,wBAAwB,GAC9C,WAAW,MAAM;AACf,MAAAA,EAAQ,UAAU,OAAO,wBAAwB;AAAA,IACnD,GAAGq5G,GAAqB,gBAAgB,CAAC,GAGzCr5G,EAAQ,UAAU,IAAI,oBAAoB,GAC1C,WAAW,MAAM;AACf,MAAAA,EAAQ,UAAU,OAAO,oBAAoB;AAAA,IAC/C,GAAGq5G,GAAqB,iBAAiB,CAAC;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA,EAKQ,gBAAsB;AAC5B,UAAMqD,IAAU,KAAK,WAAW,KAAK,iBAAA,GAC/BvlH,IAAU,KAAK,eAAA;AAErB,QAAI+I,IAAW;AAAA;AAAA;AACf,IAAAA,KAAY,mBAAkB,oBAAI,KAAA,GAAO,gBAAgB;AAAA;AAAA,GAEzDA,KAAY;AAAA;AAAA,GACZA,KAAY,wBAAwBw8G,EAAQ,YAAY;AAAA,GACxDx8G,KAAY,4BAA4Bw8G,EAAQ,gBAAgB;AAAA,GAChEx8G,KAAY,mBAAmBw8G,EAAQ,QAAQ;AAAA,GAC/Cx8G,KAAY,2BAA2Bw8G,EAAQ,eAAe;AAAA,GAC9Dx8G,KAAY,6BAA6Bw8G,EAAQ,iBAAiB;AAAA;AAAA,GAElEx8G,KAAY;AAAA;AAAA,GACZA,KAAY,oBAAoBw8G,EAAQ,SAAS;AAAA,GACjDx8G,KAAY,oBAAoBw8G,EAAQ,SAAS;AAAA,GACjDx8G,KAAY,wBAAwBw8G,EAAQ,aAAa;AAAA;AAAA,GAEzDx8G,KAAY;AAAA;AAAA;AACZ,eAAW,CAACP,GAAM+W,CAAK,KAAKgmG,EAAQ;AAClC,MAAAx8G,KAAY,KAAKP,CAAI,KAAK+W,CAAK;AAAA;AAGjC,IAAAxW,KAAY;AAAA;AAAA;AAAA,GACZ/I,EAAQ,QAAQ,CAAC8H,GAAQ1E,MAAU;AACjC,MAAA2F,KAAY,GAAG3F,IAAQ,CAAC,MAAM0E,EAAO,KAAK,YAAA,CAAa,KAAKA,EAAO,WAAW;AAAA,GAC9EiB,KAAY,QAAQjB,EAAO,OAAO;AAAA;AAAA;AAAA,IACpC,CAAC,GAGD,UAAU,UAAU,UAAUiB,CAAQ,EAAE,KAAK,MAAM;AACjD,WAAK,iBAAiB,+BAA+B,SAAS;AAAA,IAChE,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKQ,mBAAmBP,GAAsB;AAU/C,WATsC;AAAA,MACpC,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,KAAK;AAAA,IAAA,EAEMA,CAAI,KAAK;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA,EAKQ,kBAAkBA,GAAsB;AAM9C,WALsC;AAAA,MACpC,UAAU;AAAA,MACV,UAAU;AAAA,MACV,cAAc;AAAA,IAAA,EAEHA,CAAI,KAAK;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA,EAKQ,iBACNiK,GACAjK,GACM;AACN,UAAM69G,IAAe,SAAS,cAAc,KAAK;AACjD,IAAAA,EAAa,YAAY,2CAA2C79G,CAAI,IACxE69G,EAAa,cAAc5zG,GAC3B4zG,EAAa,aAAa,QAAQ,OAAO,GACzCA,EAAa,aAAa,aAAa,WAAW,GAClDA,EAAa,aAAa,eAAe,MAAM,GAC/C,SAAS,KAAK,YAAYA,CAAY,GAEtC,WAAW,MAAM;AACf,MAAAA,EAAa,UAAU,IAAI,0BAA0B;AAAA,IACvD,GAAG,EAAE,GAEL,WAAW,MAAM;AACf,MAAAA,EAAa,UAAU,OAAO,0BAA0B,GACxD,WAAW,MAAMA,EAAa,OAAA,GAAUnE,GAAqB,MAAM,CAAC;AAAA,IACtE,GAAGD,GAAa,gCAAgC;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA,EAKA,UAAgB;AACd,IAAI,KAAK,mBACP,KAAK,eAAe,OAAA,GACpB,KAAK,iBAAiB,OAExB,KAAK,UAAU;AAAA,EACjB;AACF;AC1iBO,MAAMqE,GAAW;AAAA,EAKtB,YAAY3qH,GAA4B;AAJvB,IAAAyM,EAAA,gBAAS2yG,GAAmB,YAAY;AACxC,IAAA3yG,EAAA;AACT,IAAAA,EAAA,2BAAoB;AAG1B,SAAK,UAAUzM,EAAQ;AAAA,EACzB;AAAA,EAEA,SAAe;AACb,IAAKm/G,GAAY,UAAA,EAAY,YAG7B,KAAK,wBAAA,GACL,KAAK,sBAAA;AAAA,EACP;AAAA,EAEQ,0BAAgC;AACtC,QAAI,KAAK,QAAQ;AACf;AAEF,UAAMyL,IAAuB,KAAK,QAAQ,aAAa,KAAK,KAAK,OAAO;AACxE,SAAK,QAAQ,gBAAgB,CAAC/9G,GAAMc,GAAWC,GAAMC,OACnD,KAAK,OAAO,MAAM,sBAAsB;AAAA,MACtC,MAAAhB;AAAA,MACA,WAAAc;AAAA,MACA,MAAAC;AAAA,MACA,QAAAC;AAAA,IAAA,CACD,GACM+8G,EAAqB/9G,GAAMc,GAAWC,GAAMC,CAAM;AAG3D,UAAMg9G,IAAkB,KAAK,QAAQ,4BAA4B;AAAA,MAC/D,KAAK;AAAA,IAAA;AAEP,IAAIA,MACF,KAAK,QAAQ,8BAA8B,CAACl9G,GAAWI,OACrD,KAAK,OAAO,MAAM,sCAAsC;AAAA,MACtD,WAAAJ;AAAA,MACA,cAAcI,EAAS;AAAA,IAAA,CACxB,GACM88G,EAAgBl9G,GAAWI,CAAQ,MAI9C,KAAK,QAAQ,sBAAsB;AAAA,EACrC;AAAA,EAEQ,wBAA8B;AACpC,QAAI,KAAK;AACP;AAGF,UAAM+8G,IAA8B;AAAA,MAClC,YAAY,MACV,MAAM,QAAQ,KAAK,QAAQ,gBAAA,CAAiB,IACxC,KAAK,QAAQ,cAAA,IACb,CAAA;AAAA,MACN,gBAAgB,CAACn9G,MAAsB;AACrC,YAAI,CAACA;AACH,sBAAK,OAAO,KAAK,4CAA4C,GACtD;AAGT,cAAMo9G,IAAkB,KAAK;AAAA,UAAW,MACtC,KAAK,QAAQ,oBAAoBp9G,CAAS;AAAA,QAAA,GAKtCkoB,IAHU,SAAS;AAAA,UACvB,oBAAoBloB,CAAS;AAAA,QAAA,GAET,aAAa;AAEnC,oBAAK,OAAO,KAAK,mBAAmB;AAAA,UAClC,WAAAA;AAAA,UACA,UAAUo9G;AAAA,UACV,MAAAl1F;AAAA,QAAA,CACD,GAEM;AAAA,UACL,WAAAloB;AAAA,UACA,UAAUo9G,KAAmB;AAAA,UAC7B,MAAAl1F;AAAA,QAAA;AAAA,MAEJ;AAAA,MACA,cAAc,CAACloB,MAAsB;AACnC,cAAMq9G,IAAaF,EAAQ,eAAen9G,CAAS;AACnD,QAAKq9G,MACL,QAAQ,eAAe,iBAAiBr9G,CAAS,EAAE,GACnD,QAAQ,KAAK;AAAA,GAAeq9G,EAAW,YAAY,QAAQ,GAC3D,QAAQ;AAAA,UACN;AAAA;AAAA,UACAA,EAAW,QAAQ;AAAA,QAAA,GAErB,QAAQ,SAAA;AAAA,MACV;AAAA,IAAA,GAGI7vG,IAAY,OAAe,eAAe,CAAA;AAC/C,WAAe,cAAc;AAAA,MAC5B,GAAGA;AAAA,MACH,GAAG2vG;AAAA,IAAA,GAGL,KAAK,OAAO,KAAK,kCAAkC;AAAA,MACjD,SAAS,OAAO,KAAKA,CAAO;AAAA,IAAA,CAC7B,GACD,KAAK,oBAAoB;AAAA,EAC3B;AAAA,EAEQ,WAAc73G,GAA4B;AAChD,QAAI;AACF,aAAOA,EAAA;AAAA,IACT,SAAS/B,GAAO;AACd,WAAK,OAAO,KAAK,kCAAkCA,CAAK;AACxD;AAAA,IACF;AAAA,EACF;AACF;AAEO,SAAS+5G,GAAqBjrH,GAAwC;AAC3E,QAAMkrH,IAAQ,IAAIP,GAAW3qH,CAAO;AACpC,SAAAkrH,EAAM,OAAA,GACCA;AACT;AChGA,MAAM3J,KAASnC,GAAmB,UAAU;AAerC,MAAM+L,GAAS;AAAA,EA2BpB,YAAY71F,GAAkB;AA1BtB,IAAA7oB,EAAA;AAGA;AAAA,IAAAA,EAAA,qBAA2B61C,GAAA;AAC3B,IAAA71C,EAAA,iBAAmB81C,GAAA;AACnB,IAAA91C,EAAA,sBAA6B+1C,GAAA;AAG7B;AAAA,IAAA/1C,EAAA,oDAA6B,IAAA;AAC7B,IAAAA,EAAA,yDAAkC,IAAA;AAGlC;AAAA,IAAAA,EAAA,gCAAwD;AAGxD;AAAA,IAAAA,EAAA;AACA,IAAAA,EAAA,6BAA4C;AAC5C,IAAAA,EAAA;AACA,IAAAA,EAAA,+BAAgD;AAChD,IAAAA,EAAA,+BAAgD;AAChD,IAAAA,EAAA,6BAA4C;AAC5C,IAAAA,EAAA,gCAAwD;AACxD,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA,8BAAuB;AAG7B,SAAK,SAAS6oB,GACdisF,GAAO;AAAA,MACL;AAAA,MACA,KAAK,YAAY;AAAA,IAAA,GAKnB,KAAK,kBAAkB,IAAI+C,GAAA,GAC3B,KAAK,sBAAsB,IAAInC,GAAA,GAC/B,KAAK,oBAAoB,IAAIuF,GAAA,GAC7B,KAAK,wBAAwB,IAAInD,GAAA,GACjC,KAAK,wBAAwB,IAAIU,GAAA,GACjC,KAAK,sBAAsB,IAAIY,GAAA,GAC/B,KAAK,oBAAoB,IAAIW,GAAkB;AAAA,MAC7C,QAAQ;AAAA,QACN,SAAS,KAAK,OAAO;AAAA,QACrB,UAAU,KAAK,OAAO;AAAA,QACtB,UAAU,KAAK,OAAO;AAAA,MAAA;AAAA,MAExB,cAAc,KAAK;AAAA,MACnB,SAAS,KAAK;AAAA,MACd,UAAU,KAAK;AAAA,MACf,QAAQ,KAAK;AAAA,MACb,WAAW;AAAA,QACT,gBAAgB,MAAM,KAAK,QAAA;AAAA,QAC3B,sBAAsB,MACpB,KAAK,iBAAiB,EAAE,aAAa,IAAM;AAAA,QAC7C,kBAAkB,CAAC1vG,GAASjK,MAC1B,KAAK,iBAAiBiK,GAASjK,CAAI;AAAA,QACrC,kBAAkB,MAChB,KAAK,kBAAkB,eAAe,UAAU;AAAA,MAAA;AAAA,IACpD,CACD,GACD,KAAK,yBAAyB,IAAIk8G,GAAuB;AAAA,MACvD,QAAQ,CAACjD,MAAc;AACrB,aAAK,WAAWA,CAAS;AAAA,MAC3B;AAAA,MACA,WAAW,CAACA,MAAc;AAExB,QADgB,KAAK,OAAO,QAAQ,eAAeA,CAAS,KAE1D,KAAK,oBAAoB,EAAE,WAAWA,EAAA,CAAW;AAAA,MAErD;AAAA,IAAA,CACD,GACD,KAAK,iBAAiB,IAAIuD,GAAqB;AAAA,MAC7C,QAAQ/C,GAAa;AAAA,MACrB,SAASA,GAAa;AAAA,MACtB,WAAWA,GAAa;AAAA,IAAA,CACzB,GAED,KAAK,kBAAkB,OAAO,MAAM;AAClC,MAAI,KAAK,OAAO,QAAQ,KAAA,KACtB,KAAK,QAAA;AAAA,IAET,CAAC,GACD2E,GAAqB;AAAA,MACnB,SAAS,KAAK,OAAO;AAAA,IAAA,CACtB,GACD,KAAK,kBAAkB,OAAO,MAAM;AAClC,MAAI,KAAK,OAAO,QAAQ,KAAA,KACtB,KAAK,QAAA;AAAA,IAET,CAAC,GACD,KAAK,kBAAkB,uBAAuB,CAACnsE,MAAY;AACzD,WAAK,qBAAqBA,CAAO;AAAA,IACnC,CAAC,GACD,KAAK,kBAAkB,eAAe,MAAM;AAE1C,MADkB,KAAK,uBAAuB,aAAA,IAI5C,KAAK,uBAAuB,OAAA,IAF5B,KAAK,iBAAiB,EAAE,aAAa,GAAA,CAAM;AAAA,IAI/C,CAAC,GACD,KAAK,kBAAkB,gBAAgB,MAAM;AAC3C,WAAK,uBAAA;AAAA,IACP,CAAC,GAED,KAAK,8BAAA,GAEL,KAAK,kBAAA,GACL,sBAAsB,MAAM;AAC1B,WAAK,iBAAA;AAAA,IACP,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKQ,oBAA0B;AAEhC,IAAI,SAAS,eAAe,YAC1B,SAAS,iBAAiB,oBAAoB,MAAM;AAClD,WAAK,mBAAA;AAAA,IACP,CAAC,IAED,KAAK,mBAAA;AAAA,EAET;AAAA,EAEO,uBAAuBg2B,GAAuB;AACnD,UAAM+vC,IAAU,KAAK,mBAAA,GACfuG,IACJ,OAAOt2C,KAAU,YACbA,IACA,CAAC+vC,EAAQ,UAAU,SAAS,0BAA0B;AAC5D,SAAK,2BAA2BuG,GAAWvG,CAAO;AAAA,EACpD;AAAA,EAEQ,2BACN2D,GACA3D,GACM;AACN,UAAM/B,IAAU+B,KAAW,KAAK,mBAAA;AAChC,SAAK,QAAQ,qBAAqB2D,GAElC1F,EAAQ,UAAU,OAAO,4BAA4B0F,CAAS,GAC1D,SAAS,QACX,SAAS,KAAK,UAAU;AAAA,MACtB;AAAA,MACAA;AAAA,IAAA,GAIJ,KAAK,kBAAkB,aAAaA,CAAS;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA,EAKO,qBAAqB1zC,GAAuB;AACjD,UAAMs2C,IACJ,OAAOt2C,KAAU,YAAYA,IAAQ,CAAC,KAAK,YAAY;AAEzD,QAAI,KAAK,YAAY,uBAAuBs2C,GAAW;AACrD,WAAK,kBAAkB,yBAAyBA,CAAS;AACzD;AAAA,IACF;AAEA,SAAK,YAAY,qBAAqBA,GACtC,KAAK,kBAAkB,yBAAyBA,CAAS,GACzD,KAAK,QAAA;AAAA,EACP;AAAA;AAAA;AAAA;AAAA,EAKO,0BAAmC;AACxC,WAAO,KAAK,YAAY;AAAA,EAC1B;AAAA,EAEO,uBAA6B;AAClC,SAAK,qBAAqB,QAAQ,GAClC,KAAK,oBAAA;AAAA,EACP;AAAA,EAEQ,0BAA0Bz+G,GAAyB;AACzD,IAAIA,EAAK,QAAQ,sBAAsB,WAGvCA,EAAK,QAAQ,oBAAoB,QAEjCA,EAAK,iBAAiB,SAAS,CAACyC,MAAM;AAIpC,UAHI,KAAK,wBAAwBA,GAAGzC,CAAI,KAGpCyC,aAAa,cAAcA,EAAE,SAAS;AACxC;AAMF,UAHAA,EAAE,gBAAA,GACFA,EAAE,eAAA,GACSzC,EAAK,aAAa,gBAAgB,GACrC;AACN,cAAM0+G,IAAaj8G;AACnB,aAAK,wBAAwB,cAAczC,GAAM0+G,CAAU;AAAA,MAC7D;AAAA,IACF,CAAC,GAED1+G,EAAK,iBAAiB,YAAY,CAACyC,MAAM;AACvC,UAAI,KAAK,wBAAwBA,GAAGzC,CAAI;AACtC;AAEF,MAAAyC,EAAE,eAAA;AACF,YAAMxC,IAAKD,EAAK,aAAa,gBAAgB;AAC7C,MAAIC,KACF,KAAK,WAAWA,CAAE;AAAA,IAEtB,CAAC,GAEDD,EAAK,iBAAiB,cAAc,MAAM;AACxC,MAAKA,EAAK,UAAU,SAAS,yBAAyB,KACpDA,EAAK,UAAU,IAAI,cAAc;AAAA,IAErC,CAAC,GAEDA,EAAK,iBAAiB,cAAc,MAAM;AACxC,MAAAA,EAAK,UAAU,OAAO,cAAc;AAAA,IACtC,CAAC,GAEDA,EAAK,iBAAiB,eAAe,CAACyC,MAAM;AAC1C,MAAAA,EAAE,eAAA;AAAA,IACJ,CAAC;AAAA,EACH;AAAA,EAEQ,wBAAwB6U,GAActX,GAA4B;AAIxE,QAHIsX,aAAiB,cAAcA,EAAM,WAAW,KAGhDtX,EAAK,UAAU,SAAS,yBAAyB;AACnD,aAAO;AAET,UAAMoF,IAASkS,EAAM;AAIrB,WAHI,GAAAlS,GAAQ,QAAQ,iCAAiC,KAGjDA,GAAQ,QAAQ,mCAAmC;AAAA,EAIzD;AAAA,EAEQ,qBAAqBsyB,GAAwB;AAEnD,KADyBA,EAAK,mBAAmB,kBAAkB,KAAK,CAAA,GACvD,QAAQ,CAAC13B,MAAS;AACjC,MAAIA,aAAgB,eAClB,KAAK,0BAA0BA,CAAI;AAAA,IAEvC,CAAC;AAAA,EACH;AAAA,EAEQ,sBAA4B;AAClC,IAAI,KAAK,yBAGT,KAAK,uBAAuB,IAC5B,SAAS,iBAAiB,WAAW,CAAC,MAAM;AAC1C,MAAI,EAAE,QAAQ,YAAY,KAAK,YAAY,gBACzC,KAAK,YAAA;AAAA,IAET,CAAC;AAAA,EACH;AAAA,EAEO,WAAWgB,GAAyB;AACzC,UAAMT,IAAU,SAAS;AAAA,MACvB,oBAAoBS,CAAS;AAAA,IAAA;AAE/B,QAAI,CAACT,EAAS;AAGd,UAAMo+G,KADgB,KAAK,wBAAwBp+G,CAAO,KAAKA,GAChC,aAAa,gBAAgB;AAC5D,IAAKo+G,MAEDA,MAAa39G,KACf4zG,GAAO;AAAA,MACL,iCAAiC+J,CAAQ,aAAa39G,CAAS;AAAA,IAAA,GAK/D,KAAK,OAAO,gBACd,KAAK,iBAAiB29G,CAAQ,IAE9B,KAAK,gBAAgBA,CAAQ;AAAA,EAEjC;AAAA,EAEQ,gBAAgB39G,GAAyB;AAC/C,UAAMT,IAAU,SAAS,cAAc,oBAAoBS,CAAS,IAAI;AACxE,QAAI,CAACT,EAAS;AAEd,SAAK,YAAY,mBAAmBS,GACpC4zG,GAAO,MAAM,sBAAsB,EAAE,WAAA5zG,EAAA,CAAW,GAChD4zG,GAAO;AAAA,MACL;AAAA,MACA,KAAK,YAAY;AAAA,IAAA,GAInB,KAAK,qBAAqB5zG,CAAS;AAEnC,UAAMd,IAAOK,EAAQ,aAAa,kBAAkB,KAAK,QAEnD,EAAE,cAAAq+G,GAAc,gBAAAC,GAAgB,gBAAAnI,EAAA,IACpC,KAAK,oBAAoB11G,GAAWd,CAAI;AAE1C00G,IAAAA,GAAO,MAAM,2BAA2BgK,CAAY,GAChD,KAAK,YAAY,sBACnBhK,GAAO,MAAM,6BAA6BiK,CAAc;AAG1D,UAAMC,IAAQ,KAAK,kBAAkBF,GAAc1+G,CAAI;AACvD,aAAS,KAAK,YAAY4+G,CAAK,GAC/B,KAAK,YAAY,eAAeA,GAGhC,sBAAsB,MAAM;AAC1B,WAAK,mBAAmBA,GAAOF,GAAclI,CAAc;AAAA,IAC7D,CAAC;AAAA,EACH;AAAA,EAEQ,iBAAiB11G,GAAyB;AAChD,UAAMT,IAAU,SAAS;AAAA,MACvB,oBAAoBS,CAAS;AAAA,IAAA;AAE/B,QAAI,CAACT,EAAS;AAGd,SAAK,YAAA,GAEL,KAAK,YAAY,mBAAmBS,GAGpC,KAAK,qBAAqBA,CAAS;AAEnC,UAAMd,IAAOK,EAAQ,aAAa,kBAAkB,KAAK,QAEnD,EAAE,cAAAq+G,GAAc,gBAAAlI,EAAA,IAAmB,KAAK;AAAA,MAC5C11G;AAAA,MACAd;AAAA,IAAA;AAIF,IAAAK,EAAQ,UAAU,IAAI,yBAAyB;AAG/C,UAAMw+G,IAAkBx+G,EAAQ;AAChC,IAAAA,EAAQ,aAAa,6BAA6Bw+G,CAAe,GACjEx+G,EAAQ,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUpB,UAAMy+G,IAAez+G,EAAQ;AAAA,MAC3B;AAAA,IAAA;AAEF,SAAK,YAAY,eAAey+G,GAGhCA,EAAa,iBAAiB,wBAAwB,EAAE,QAAQ,CAAClB,MAAQ;AACvE,MAAAA,EAAI,iBAAiB,SAAS,MAAM,KAAK,aAAa;AAAA,IACxD,CAAC,GAEDkB,EACG,cAAc,sBAAsB,GACnC,iBAAiB,SAAS,MAAM;AAChC,WAAK,WAAA;AAAA,IACP,CAAC,GAGH,sBAAsB,MAAM;AAC1B,WAAK,mBAAmBA,GAAcJ,GAAclI,CAAc;AAAA,IACpE,CAAC;AAAA,EACH;AAAA,EAEA,MAAc,mBACZh/D,GACAv6C,GACAu5G,IAAuC,CAAA,GACxB;AACf,QAAI;AAEF,YAAM11G,IAAY,KAAK,YAAY;AACnC,UAAI21G,IAAc;AAClB,UAAI31G,GAAW;AACb,cAAMT,IAAU,SAAS;AAAA,UACvB,oBAAoBS,CAAS;AAAA,QAAA;AAE/B,QAAIT,MACFo2G,IAAcp2G,EAAQ,aAAa,kBAAkB,KAAK;AAAA,MAE9D;AAEA,YAAMg/E,IAAS,MAAM,KAAK,gBAAgB,WAAW;AAAA,QACnD,WAAA7nC;AAAA,QACA,SAAAv6C;AAAA,QACA,gBAAAu5G;AAAA,QACA,aAAAC;AAAA,QACA,iBAAiB,CAACl2G,MAAa;AAC7B,eAAK,YAAY,uBAAuBA;AAAA,QAC1C;AAAA,MAAA,CACD;AAED,WAAK,YAAY,iBAAiB8+E,GAElCq1B,GAAO,MAAM,0CAA0C;AAAA,IACzD,SAASrwG,GAAO;AACdqwG,MAAAA,GAAO,MAAM,kCAAkCrwG,CAAK;AACpD,YAAMqyG,IACHl/D,EAAU;AAAA,QACT;AAAA,MAAA,KAEDA,EAAU;AAAA,QACT;AAAA,MAAA;AAEJ,MAAIk/D,MACFA,EAAgB,YAAY;AAAA;AAAA;AAAA,mBAGjBryG,aAAiB,QAAQA,EAAM,UAAU,OAAOA,CAAK,CAAC;AAAA;AAAA,YAInE,KAAK,YAAY,sBAAsB,MACvC,KAAK,gBAAgB,QAAA,GACrB,KAAK,YAAY,iBAAiB;AAAA,IACpC;AAAA,EACF;AAAA,EAEO,cAAoB;AASzB,QAPI,KAAK,YAAY,oBACnB,KAAK,kBAAkB,KAAK,YAAY,gBAAgB,GAG1D,KAAK,gBAAgB,QAAA,GACrB,KAAK,YAAY,iBAAiB,MAClC,KAAK,YAAY,sBAAsB,MACnC,KAAK,YAAY,cAAc;AAEjC,UAAI,KAAK,OAAO,iBAAiB,KAAK,YAAY,kBAAkB;AAClE,cAAMhE,IAAU,SAAS;AAAA,UACvB,oBAAoB,KAAK,YAAY,gBAAgB;AAAA,QAAA;AAEvD,YAAIA,GAAS;AACX,UAAAA,EAAQ,UAAU,OAAO,yBAAyB;AAClD,gBAAM0+G,IAAa1+G,EAAQ,aAAa,2BAA2B;AACnE,UAAI0+G,MAAe,SACjB1+G,EAAQ,YAAY0+G,GACpB1+G,EAAQ,gBAAgB,2BAA2B,IAEjD,KAAK,YAAY,oBACnB,KAAK,kBAAkB;AAAA,YACrB,KAAK,YAAY;AAAA,UAAA;AAAA,QAGvB;AAAA,MACF;AAEE,aAAK,YAAY,aAAa,OAAA;AAEhC,WAAK,YAAY,eAAe,MAC5B,KAAK,YAAY,oBACnB,KAAK,4BAA4B;AAAA,QAC/B,KAAK,YAAY;AAAA,MAAA,GAGrB,KAAK,YAAY,mBAAmB,MACpC,KAAK,YAAY,uBAAuB;AAAA,IAC1C;AAAA,EACF;AAAA,EAEQ,aAAmB;AACzB,QAAI,CAAC,KAAK,YAAY,kBAAkB,CAAC,KAAK,YAAY;AACxD;AACF,UAAMS,IAAY,KAAK,YAAY;AAGnC,QAAIvJ,IAAaw9C;AAAA,MACf,KAAK,YAAY;AAAA,IAAA;AAEnB,UAAMiqE,IACJ,KAAK,4BAA4B,IAAIl+G,CAAS;AAChD,IAAIk+G,MACFznH,IAAa,KAAK;AAAA,MAChBA;AAAA,MACAynH;AAAA,IAAA;AAIJ,UAAMC,IAA0B,KAAK,uBAAuB1nH,CAAU;AACtE,IAAI0nH,EAAwB,YAC1B1nH,IAAa0nH,EAAwB,SACrC,KAAK,kCAAA,IAEP,KAAK,YAAY,uBAAuB1nH;AAExC,UAAM2nH,IAAc,KAAK,OAAO,QAAQ,eAAep+G,CAAS;AAChE,QAAI,CAACo+G,GAAa;AAChBxK,MAAAA,GAAO,MAAM,+BAA+B,EAAE,WAAA5zG,EAAA,CAAW,GACzD,KAAK,YAAA;AACL;AAAA,IACF;AAEA,UAAMq+G,IACJ,KAAK,kBAAkB,4BAA4Br+G,CAAS,GAExDI,IAAW,KAAK;AAAA,MACpB3J;AAAA,MACA2nH,EAAY;AAAA,IAAA;AAGd,IAAIC,KACFhD;AAAA,MACEj7G;AAAA,MACAi+G;AAAA,MACAD,EAAY;AAAA,MACZ,CAACjiH,GAASwzC,MACR,KAAK,kBAAkB,sBAAsBxzC,GAASwzC,CAAM;AAAA,IAAA;AAIlE,UAAM2uE,IAAqB,KAAK,OAAO,QAAQ,kBAAkBt+G,CAAS,GACpE+9G,IAAkB9pE,GAAqBqqE,CAAkB,GACzDC,IAAmB,KAAK,uBAAuBR,CAAe,EAAE,SAEhES,IAAqB/C,GAA8B8C,CAAgB,GACnEE,IAAgBhD,GAA8BhlH,CAAU;AAG9D,QAFqB+nH,MAAuBC,GAE1B;AAChB,YAAMC,IAAoB,KAAK,yBAAyB1+G,CAAS;AACjE,MAAI0+G,EAAkB,SAAS,KAC7Bt+G,EAAS,KAAK,GAAGs+G,CAAiB;AAAA,IAEtC;AAEA9K,IAAAA,GAAO,MAAM,eAAe,GAC5BA,GAAO,MAAM,wBAAwB4K,CAAkB,GACvD5K,GAAO,MAAM,mBAAmB6K,CAAa;AAE7C,UAAM,EAAE,YAAAE,GAAY,YAAAn+G,EAAA,IAClB,KAAK,OAAO,QAAQ,2BAA2BR,GAAWI,CAAQ;AAMpE,QAJA,KAAK,iBAAiBu+G,GAAYv+G,GAAUI,CAAU,GAEtD,KAAK,kBAAkB,0BAA0BR,CAAS,GAC1D,KAAK,kBAAkB,6BAA6BQ,CAAU,GAC1D69G,KAAwBM,EAAW,SAAS,GAAG;AACjD,YAAMC,IAAkBD,EAAWA,EAAW,SAAS,CAAC;AACxD,MAAI,OAAOC,KAAoB,YAC7B,KAAK,kBAAkB;AAAA,QACrBA;AAAA,QACAP;AAAA,MAAA;AAAA,IAGN;AAEA,SAAK;AAAA,MACHr+G;AAAA,MACAI;AAAA,MACAu+G;AAAA,MACAn+G;AAAA,IAAA,GAGEg+G,MAAuBC,KAAiBr+G,EAAS,WAAW,KAC9DwzG,GAAO,MAAM,2DAA2D,GAG1E,KAAK,YAAA,GACL,KAAK,QAAA;AAAA,EACP;AAAA,EAEQ,kBAAkBiL,GAAkB3/G,GAA2B;AACrE,UAAM4+G,IAAQ,SAAS,cAAc,KAAK;AAC1C,WAAAA,EAAM,YAAY,uBAClBA,EAAM,YAAY;AAAA;AAAA;AAAA,qBAGD5+G,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWrB4+G,EACG,cAAc,uBAAuB,GACpC,iBAAiB,SAAS,MAAM,KAAK,aAAa,GACtDA,EACG,cAAc,wBAAwB,GACrC,iBAAiB,SAAS,MAAM,KAAK,aAAa,GACtDA,EACG,cAAc,sBAAsB,GACnC,iBAAiB,SAAS,MAAM,KAAK,YAAY,GAErDA,EAAM,iBAAiB,SAAS,CAACr8G,MAAM;AACrC,MAAIA,EAAE,WAAWq8G,KACf,KAAK,YAAA;AAAA,IAET,CAAC,GAEMA;AAAA,EACT;AAAA,EAEO,UAAgB;AACrB,UAAM9B,IAAe,KAAK,OAAO,QAAQ,gBAAA,GACnCD,IAAa,KAAK,OAAO,QAAQ,cAAA,GAKjC+C,IAAuB,IAAI;AAAA,MAC/B/C,EAAW,OAAO,CAACx6G,MAAOA,EAAG,SAAS,MAAM,EAAE,IAAI,CAACA,MAAOA,EAAG,SAAS;AAAA,IAAA;AAGxE,IAAAy6G,EAAa,QAAQ,CAACh9G,MAAS;AAC7B,YAAM+/G,IAAqBhD,EAAW;AAAA,QACpC,CAACx6G,MAAOA,EAAG,cAAcvC,EAAK;AAAA,MAAA,GAE1BggH,IAAaD,EAAmB,SAAS,GAIzCE,IACJjgH,EAAK,OAAO,KAAK,YAAY,oBAC7B,SAAS;AAAA,QACP,oBAAoBA,EAAK,EAAE;AAAA,MAAA;AAG/B,UAAI,GAACggH,KAAc,CAACC;AAKpB,YAAI,KAAK,YAAY;AAGnB,cAFiBF,EAAmB,KAAK,CAACx9G,MAAOA,EAAG,SAAS,MAAM,GAErD;AAEZ,kBAAM29G,IACJ,KAAK,OAAO,QAAQ,oCAAoClgH,EAAK,EAAE,GAG3DmgH,IAAc;AAAA,cAClB,GAAGngH;AAAA,cACH,SAASkgH;AAAA,YAAA;AAEX,iBAAK,qBAAqBC,CAAW;AAAA,UACvC;AACE,iBAAK,qBAAqBngH,CAAI;AAAA;AAGhC,eAAK,qBAAqBA,CAAI;AAAA,IAElC,CAAC,GAIDg9G,EAAa,QAAQ,CAACh9G,MAAS;AAC7B,YAAMq5G,IAAa,SAAS;AAAA,QAC1B,oBAAoBr5G,EAAK,EAAE;AAAA,MAAA;AAE7B,MAAKq5G,MAEDyG,EAAqB,IAAI9/G,EAAK,EAAE,IAClCq5G,EAAW,aAAa,wBAAwB,MAAM,IAGtDA,EAAW,gBAAgB,sBAAsB;AAAA,IAErD,CAAC,GAED,KAAK,uBAAA,GACL,KAAK,iBAAA,GACL,KAAK,iBAAA;AAAA,EACP;AAAA;AAAA;AAAA;AAAA;AAAA,EAMQ,gBAAgBl8G,GAAyB;AAI/C,WAAOA,EAAQ;AAAA,MACb;AAAA,MACA;AAAA,IAAA;AAAA,EAEJ;AAAA,EAEQ,qBACN6D,GACA7D,GACA+C,GACA7M,IAA0C,CAAA,GAClC;AACR,UAAM,EAAE,kBAAA+sH,IAAmB,GAAA,IAAU/sH;AAErC,QAAI6M,MAAS;AACX,aAAKkgH,KACH,KAAK,4BAA4B,OAAOp/G,CAAS,GAE5C7D;AAGT,UAAMkjH,IAAmB,KAAK;AAAA,MAC5Br/G;AAAA,MACA7D;AAAA,IAAA;AAGF,QAAIkjH,GAAkB;AACpB,YAAMC,IAAkB,KAAK;AAAA,QAC3BnjH;AAAA,QACAkjH;AAAA,MAAA;AAEF,aAAKD,KACH,KAAK,4BAA4B,IAAIp/G,GAAWq/G,CAAgB,GAE3DC;AAAA,IACT;AAEA,WAAKF,KACH,KAAK,4BAA4B,OAAOp/G,CAAS,GAE5C7D;AAAA,EACT;AAAA,EAEQ,6BACN6D,GACAd,GACAqgH,GAKA;AACA,UAAMC,IAAW,KAAK,OAAO,QAAQ,kBAAkBx/G,CAAS,GAC1Dy/G,IAAaF,IACf,KAAK,OAAO,QAAQ,oCAAoCv/G,CAAS,IACjEw/G,GAEEE,IAAe,KAAK,gBAAgBF,CAAQ,GAC5CG,IAAiB,KAAK,gBAAgBF,CAAU,GAEhDG,IAAgB,KAAK;AAAA,MACzB5/G;AAAA,MACA0/G;AAAA,MACAxgH;AAAA,IAAA,GAEI2gH,IAAkB,KAAK;AAAA,MAC3B7/G;AAAA,MACA2/G;AAAA,MACAzgH;AAAA,MACA,EAAE,kBAAkB,GAAA;AAAA,IAAK,GAGrB4gH,IACJ,KAAK,kBAAkB,uBAAuBF,CAAa,GACvDG,IACJ,KAAK,kBAAkB,uBAAuBF,CAAe;AAE/D,WAAO;AAAA,MACL,cAAcC,EAAY;AAAA,MAC1B,gBAAgBC,EAAc;AAAA,MAC9B,eAAeD,EAAY;AAAA,IAAA;AAAA,EAE/B;AAAA,EAEQ,oBACN9/G,GACAd,GAKA;AACA,UAAM,EAAE,cAAA0+G,GAAc,gBAAAC,GAAgB,eAAAlE,EAAA,IACpC,KAAK;AAAA,MACH35G;AAAA,MACAd;AAAA,MACA,KAAK,YAAY;AAAA,IAAA;AAGrB,SAAK,kBAAkB,0BAA0Bc,GAAW25G,CAAa;AAEzE,UAAMjE,IAAiB,KAAK,YAAY,qBACpC,KAAK,2BAA2BmI,CAAc,IAC9C,CAAA;AAEJ,WAAO,EAAE,cAAAD,GAAc,gBAAAC,GAAgB,gBAAAnI,EAAA;AAAA,EACzC;AAAA,EAEQ,iCACN11G,GACAI,GACA4/G,GACAx/G,GACM;AACN,SAAK,uBAAuB,OAAOR,CAAS,GAC5CQ,EAAW,QAAQ,CAACvB,MAAO;AACzB,WAAK,uBAAuB,OAAOA,CAAE,GACrC,KAAK,4BAA4B,OAAOA,CAAE;AAAA,IAC5C,CAAC,GACD+gH,EAAkB,QAAQ,CAAC/gH,GAAInF,MAAU;AACvC,YAAM+G,IAAUT,EAAStG,CAAK;AAC9B,MAAI,CAAC+G,KAAW,CAAC5B,KAGb4B,EAAQ,UAAU,SAAS,YAC7B,KAAK,qBAAqB5B,GAAI4B,EAAQ,OAAO;AAAA,IAEjD,CAAC;AAAA,EACH;AAAA,EAEQ,2BACNg9G,GACsB;AACtB,QAAI,CAACA;AACH,aAAO,CAAA;AAGT,UAAMlrE,IAA+B,CAAA,GAE/BS,IAAkB;AACxB,QAAI6sE;AACJ,YAAQA,IAAgB7sE,EAAgB,KAAKyqE,CAAc,OAAO,QAAM;AACtE,YAAM5L,IAAagO,GAAe,SAAS,GACrCC,IAAgBD,IAAgB,CAAC,KAAK;AAC5C,UAAI,CAACC;AACH;AAEF,YAAM9kH,IAASyiH,EAAe,MAAM,GAAG5L,CAAU,GAC3CvrG,IAAQ,KAAK,mBAAmBtL,CAAM,GACtC+kH,IAAW,KAAK,gBAAgBD,CAAa;AACnD,MAAKC,KAGLxtE,EAAO,KAAK;AAAA,QACV,OAAAjsC;AAAA,QACA,KAAKA,IAAQy5G,EAAS;AAAA,QACtB,MAAM;AAAA,MAAA,CACP;AAAA,IACH;AAEA,UAAM7sE,IAAsB;AAC5B,QAAI8sE;AACJ,YACGA,IAAoB9sE,EAAoB,KAAKuqE,CAAc,OAAO,QACnE;AACA,YAAM5L,IAAamO,GAAmB,SAAS,GACzCC,IAAmBD,IAAoB,CAAC,KAAK;AACnD,UAAI,CAACC;AACH;AAEF,YAAMjlH,IAASyiH,EAAe,MAAM,GAAG5L,CAAU,GAC3CvrG,IAAQ,KAAK,mBAAmBtL,CAAM,GACtC4iC,IAAc,KAAK,gBAAgBqiF,CAAgB;AACzD,MAAKriF,KAGL2U,EAAO,KAAK;AAAA,QACV,OAAAjsC;AAAA,QACA,KAAKA,IAAQs3B,EAAY;AAAA,QACzB,MAAM;AAAA,MAAA,CACP;AAAA,IACH;AAEA,WAAO2U;AAAA,EACT;AAAA,EAEQ,mBAAmB9xC,GAAyB;AAClD,WAAKA,IAGE,KAAK,gBAAgBA,CAAO,EAAE,SAF5B;AAAA,EAGX;AAAA,EAEQ,gBAAgBA,GAAyB;AAC/C,WAAKA,IAGEA,EACJ,QAAQ,2BAA2B,IAAI,EACvC,QAAQ,uBAAuB,EAAE,EACjC,QAAQ,mCAAmC,IAAI,EAC/C,QAAQ,uBAAuB,IAAI,EACnC,QAAQ,uBAAuB,EAAE,IAP3B;AAAA,EAQX;AAAA,EAEQ,2BACN1E,GACAmkH,GACkD;AAElD,QAAI,CADYnkH,EAAQ,KAAA;AAEtB,aAAO;AAAA,QACL;AAAA,UACE,SAAS;AAAA,UACT,UAAUmkH;AAAA,QAAA;AAAA,MACZ;AAKJ,UAAMz0F,IADM,KAAK,OAAO,SAAS,WAAW1vB,CAAO,EAC9B;AACrB,QAAI,CAAC0vB,KAAYA,EAAS,WAAW;AACnC,aAAO;AAAA,QACL;AAAA,UACE,SAAA1vB;AAAA,UACA,UAAUmkH;AAAA,QAAA;AAAA,MACZ;AAIJ,UAAMC,IAAU,KAAK,iBAAiBpkH,CAAO,GACvCiE,IAA6D,CAAA;AAyBnE,WAvBAyrB,EAAS,QAAQ,CAAC1oB,GAAMrJ,MAAU;AAChC,YAAM4M,IAAQ,KAAK,gBAAgB65G,GAASp9G,EAAK,UAAU,KAAK,GAC1D0rE,IAAWhjD,EAAS/xB,IAAQ,CAAC,GAC7BmN,IAAM4nE,IACR,KAAK,gBAAgB0xC,GAAS1xC,EAAS,UAAU,KAAK,IACtD1yE,EAAQ;AAEZ,UAAIqkH,IAAiBrkH,EAAQ,MAAMuK,GAAOO,CAAG;AAE7C,UADAu5G,IAAiB,KAAK,wBAAwBA,CAAc,GACxD,CAACA,EAAe;AAClB;AAGF,YAAMlhH,IAAW,KAAK;AAAA,QACpB6D;AAAA,QACArJ,MAAU,IAAIwmH,IAAmB;AAAA,MAAA;AAEnC,MAAAlgH,EAAS,KAAK;AAAA,QACZ,SAASogH;AAAA,QACT,UAAAlhH;AAAA,MAAA,CACD;AAAA,IACH,CAAC,GAEGc,EAAS,WAAW,IACf;AAAA,MACL;AAAA,QACE,SAAAjE;AAAA,QACA,UAAUmkH;AAAA,MAAA;AAAA,IACZ,IAIGlgH;AAAA,EACT;AAAA,EAEQ,iBAAiBrI,GAAwB;AAC/C,UAAMwoH,IAAoB,CAAC,CAAC;AAC5B,QAAIzmH,IAAQ;AACZ,UAAM8K,IAAS7M,EAAK;AAEpB,WAAO+B,IAAQ8K,KAAQ;AACrB,YAAM6uC,IAAO17C,EAAK+B,CAAK;AACvB,UAAI25C,MAAS,MAAM;AACjB,YAAI35C,IAAQ,IAAI8K,KAAU7M,EAAK+B,IAAQ,CAAC,MAAM;AAAA,GAAM;AAClD,UAAAymH,EAAQ,KAAKzmH,IAAQ,CAAC,GACtBA,KAAS;AACT;AAAA,QACF;AACA,QAAAymH,EAAQ,KAAKzmH,IAAQ,CAAC,GACtBA,KAAS;AACT;AAAA,MACF;AACA,MAAI25C,MAAS;AAAA,KACX8sE,EAAQ,KAAKzmH,IAAQ,CAAC,GAExBA,KAAS;AAAA,IACX;AAEA,WAAOymH;AAAA,EACT;AAAA,EAEQ,gBACNA,GACA1pH,GACQ;AACR,QAAI,CAACA;AACH,aAAO;AAGT,UAAMZ,KAAO,UAAUY,GAAWA,EAAS,OACrC+tB,KACJ,YAAY/tB,GAAWA,EAAS,SAE5B0f,IAAY,KAAK,IAAI,GAAG,KAAK,IAAIgqG,EAAQ,SAAS,GAAGtqH,IAAO,CAAC,CAAC;AAEpE,YADasqH,EAAQhqG,CAAS,KAAK,KACrB,KAAK,IAAI,GAAGqO,IAAS,CAAC;AAAA,EACtC;AAAA,EAEQ,wBAAwB7sB,GAAsB;AACpD,QAAIqK,IAAUrK;AACd,UAAM0oH,IAAiB,kBACjBC,IAAkB;AAExB,WAAAt+G,IAAUA,EAAQ,QAAQq+G,GAAgB,EAAE,GAC5Cr+G,IAAUA,EAAQ,QAAQs+G,GAAiB,CAAC3jH,MACnCA,EAAM,SAAS;AAAA,CAAI,IAAI,KAAKA,CACpC,GAEMqF,EAAQ,QAAA;AAAA,EACjB;AAAA,EAEQ,uBAAuBjG,GAG7B;AACA,QAAI,CAACA;AACH,aAAO,EAAE,SAAAA,GAAS,SAAS,GAAA;AAE7B,UAAMsG,IAAWtG,EAAQ;AAAA,MACvB;AAAA,MACA;AAAA,IAAA;AAEF,WAAO;AAAA,MACL,SAASsG;AAAA,MACT,SAASA,EAAS,WAAWtG,EAAQ;AAAA,IAAA;AAAA,EAEzC;AAAA,EAEQ,oCAA0C;AAChD,SAAK;AAAA,MACH;AAAA,MACA;AAAA,IAAA;AAAA,EAEJ;AAAA,EAEQ,yBACN6D,GACkD;AAClD,UAAM+7G,IAAa,KAAK,OAAO,QAAQ,gBAAA,KAAqB,CAAA;AAC5D,QAAI,CAACA,EAAW;AACd,aAAO,CAAA;AAGT,UAAMp6G,wBAAgB,IAAA;AACtB,eAAWJ,KAAMw6G;AACf,MAAIx6G,EAAG,SAAS,WACKA,EAAG,KACP,aAAavB,KAC1B2B,EAAU,IAAIJ,EAAG,SAAS,IAEnBA,EAAG,SAAS,YACjBI,EAAU,IAAIJ,EAAG,SAAS,KAC5BI,EAAU,OAAOJ,EAAG,SAAS;AAKnC,QAAII,EAAU,SAAS;AACrB,aAAO,CAAA;AAGT,UAAMC,IAAQ,KAAK,OAAO,QAAQ,kBAAA,KAAuB,CAAA;AACzD,QAAI,CAACA,EAAM;AACT,aAAO,CAAA;AAGT,UAAMsrF,IAA4D,CAAA;AAClE,QAAIyzB,IAAc;AAClB,eAAWphH,KAAWqC,GAAO;AAC3B,UAAIrC,EAAQ,OAAOS,GAAW;AAC5B,QAAA2gH,IAAc;AACd;AAAA,MACF;AACA,UAAKA;AAGL,YAAIh/G,EAAU,IAAIpC,EAAQ,EAAE;AAC1B,UAAA2tF,EAAQ,KAAK;AAAA,YACX,SAAS3tF,EAAQ;AAAA,YACjB,UAAUA,EAAQ;AAAA,UAAA,CACnB;AAAA,aACH;AAAA,cAAW2tF,EAAQ,SAAS;AAC1B;AAEA;AAAA;AAAA,IAEJ;AAEA,WAAOA;AAAA,EACT;AAAA,EAEQ,uBACN/pF,GACAy9G,GACiB;AACjB,YAAQz9G,EAAK,MAAA;AAAA,MACX,KAAK;AAEH,eAAO;AAAA,UACL,MAAM;AAAA,UACN,OAHcA,EAGC;AAAA,UACf,YACEy9G,KAAYA,EAAS,SAAS,WAC1B,EAAE,GAAGA,EAAS,WAAA,IACd;AAAA,UACN,SACEA,KAAYA,EAAS,SAAS,WAC1B,CAAC,GAAIA,EAAS,WAAW,CAAA,CAAG,IAC5B;AAAA,QAAA;AAAA,MAGV,KAAK;AACH,eAAO;AAAA,UACL,MAAM;AAAA,QAAA;AAAA,MAGV,KAAK;AAEH,eAAO;AAAA,UACL,MAFWz9G,EAEA,UAAU,gBAAgB;AAAA,QAAA;AAAA,MAGzC,KAAK;AACH,eAAO;AAAA,UACL,MAAM;AAAA,QAAA;AAAA,MAGV,KAAK;AACH,eAAO;AAAA,UACL,MAAM;AAAA,QAAA;AAAA,MAGV,KAAK;AACH,eAAO;AAAA,UACL,MAAM;AAAA,UACN,YACEy9G,KAAYA,EAAS,SAAS,SAC1B,EAAE,GAAGA,EAAS,WAAA,IACd;AAAA,UACN,SACEA,KAAYA,EAAS,SAAS,SAC1B,CAAC,GAAIA,EAAS,WAAW,CAAA,CAAG,IAC5B;AAAA,QAAA;AAAA,MAGV;AACE,eAAIA,IACK;AAAA,UACL,GAAGA;AAAA,QAAA,IAGA;AAAA,UACL,MAAM;AAAA,QAAA;AAAA,IAEV;AAAA,EAEJ;AAAA,EAEQ,iBACNjC,GACAv+G,GACAI,GACM;AACN,SAAK,2BAA2BA,CAAU,GAC1C,KAAK,iBAAiBm+G,GAAYv+G,CAAQ;AAAA,EAC5C;AAAA,EAEQ,2BAA2Bs5G,GAAqB;AACtD,IAAAA,EAAI,QAAQ,CAACz6G,MAAO;AAClB,YAAMuO,IAAW,SAAS;AAAA,QACxB,oBAAoBvO,CAAE;AAAA,MAAA;AAExB,MAAIuO,GAAU,iBACZA,EAAS,cAAc,YAAYA,CAAQ;AAAA,IAE/C,CAAC;AAAA,EACH;AAAA,EAEQ,iBACNmxG,GACAv+G,GACM;AACN,aAAStG,IAAQ,GAAGA,IAAQ6kH,EAAW,QAAQ7kH,KAAS;AACtD,YAAMmF,IAAK0/G,EAAW7kH,CAAK,GACrB+mH,IAAalC,EAAW7kH,IAAQ,CAAC;AACvC,UAAI,CAACmF,KAAM,CAAC4hH;AACV;AAEF,YAAMrzG,IAAW,SAAS;AAAA,QACxB,oBAAoBvO,CAAE;AAAA,MAAA;AAExB,UAAI,CAACuO,GAAU;AACb,aAAK,2BAA2BvO,GAAI4hH,GAAYzgH,EAAStG,CAAK,CAAC;AAC/D;AAAA,MACF;AACA,WAAK,mBAAmB0T,GAAUqzG,CAAU;AAAA,IAC9C;AAAA,EACF;AAAA,EAEQ,2BACN5hH,GACA4hH,GACAhgH,GACM;AACN,UAAMvB,IAAWuB,GAAS;AAC1B,QAAI,CAACA,KAAW,CAACvB;AACf;AAEF,UAAM6D,IAAO,KAAK,oBAAoBlE,GAAIK,CAAQ;AAClD,SAAK,oBAAoBuhH,GAAY19G,CAAI,GACzC,KAAK,0BAA0BA,CAAI;AAAA,EACrC;AAAA,EAEQ,mBAAmBA,GAAmB09G,GAA0B;AACtE,UAAMC,IAAe,SAAS;AAAA,MAC5B,oBAAoBD,CAAU;AAAA,IAAA;AAEhC,QAAI,CAACC,KAAgB,CAACA,EAAa;AACjC;AAEF,UAAMC,IAAgBD,EAAa,YAC7B9rD,IAAS8rD,EAAa;AAC5B,KACE39G,EAAK,eAAe49G,KACpB59G,EAAK,oBAAoB29G,MAEzBC,EAAc,aAAa59G,GAAM6xD,CAAM;AAAA,EAE3C;AAAA,EAEQ,oBACN/1D,GACAK,GACa;AACb,UAAM0rE,IAAU,SAAS,cAAc,KAAK;AAC5C,WAAAA,EAAQ,YAAY,6CACpBA,EAAQ,aAAa,kBAAkB/rE,CAAE,GACzC+rE,EAAQ,aAAa,oBAAoB1rE,EAAS,IAAI,GAClDA,EAAS,SACX0rE,EAAQ,aAAa,qBAAqB,OAAO1rE,EAAS,KAAK,CAAC,GAElE0rE,EAAQ,aAAa,sBAAsB,WAAW,GAC/CA;AAAA,EACT;AAAA,EAEQ,oBAAoBg2C,GAAqBzhH,GAA4B;AAC3E,UAAM81B,IAAY,SAAS;AAAA,MACzB,oBAAoB2rF,CAAW;AAAA,IAAA;AAEjC,QAAI3rF,KAAaA,EAAU,YAAY;AACrC,MAAAA,EAAU,WAAW,aAAa91B,GAAS81B,EAAU,WAAW;AAChE;AAAA,IACF;AACA,aAAS,KAAK,YAAY91B,CAAO;AAAA,EACnC;AAAA,EAEQ,mBAAyB;AAC/B,UAAMm7G,IAAU,KAAK,OAAO,QAAQ,QAAA,GAC9BC,IAAU,KAAK,OAAO,QAAQ,QAAA;AACpC,SAAK,kBAAkB,oBAAoBD,GAASC,CAAO,GAC3D,KAAK,kBAAkB;AAAA,MACrB,KAAK,YAAY;AAAA,IAAA;AAAA,EAErB;AAAA,EAEQ,gCAAsC;AAC5C,QAAI;AAEF,MADiB,KAAK,OAAO,QAAQ,gBAAA,EAC5B,QAAQ,CAACp7G,MAAY;AAC5B,YAAIA,EAAQ,SAAS,SAAS;AAC5B;AAEF,cAAM+U,IAAO,KAAK,4BAA4B/U,EAAQ,OAAO;AAC7D,QAAI+U,KACF,KAAK,uBAAuB,IAAI/U,EAAQ,IAAI+U,CAAI;AAAA,MAEpD,CAAC;AAAA,IACH,SAAS/Q,GAAO;AACdqwG,MAAAA,GAAO,MAAM,4CAA4CrwG,CAAK;AAAA,IAChE;AAAA,EACF;AAAA,EAEQ,2BACNvD,GACA7D,GAC6B;AAC7B,UAAMqR,IAAW,KAAK,uBAAuB,IAAIxN,CAAS;AAC1D,QAAIwN;AACF,aAAOA;AAET,UAAM2rG,IAAY,KAAK,4BAA4Bh9G,CAAO;AAC1D,WAAIg9G,KACF,KAAK,uBAAuB,IAAIn5G,GAAWm5G,CAAS,GAC7CA,KAEF;AAAA,EACT;AAAA,EAEQ,4BACNh9G,GAC6B;AAC7B,QAAI,CAACA;AACH,aAAO;AAET,UAAMd,IAAUc,EAAQ,SAAS;AAAA,CAAM,IAAI;AAAA,IAAS;AAAA,GAC9CqB,IAAQrB,EAAQ,MAAMd,CAAO;AACnC,QAAImC,EAAM,WAAW;AACnB,aAAO;AAGT,UAAMyjH,IAAoBzjH,EAAM,CAAC,GAC3B+mG,IAAY0c,IAAoBptE,GAAYotE,CAAiB,IAAI,IACjEC,IAAe3c,EAAU,YAAY,GAAG;AAC9C,QAAI2c,MAAiB,MAAMA,MAAiB3c,EAAU,SAAS;AAC7D,aAAO;AAGT,UAAM4c,IAAe5c,EAAU,YAAY,KAAK2c,CAAY;AAC5D,QAAIC,MAAiB;AACnB,aAAO;AAGT,UAAM9rF,IAAYkvE,EAAU,MAAM4c,GAAcD,IAAe,CAAC,EAAE,KAAA;AAClE,QAAI,CAAC7rF,EAAU,WAAW,IAAI;AAC5B,aAAO;AAGT,QAAI+rF,IAAcD;AAClB,WAAOC,IAAc,KAAK7c,EAAU,OAAO6c,IAAc,CAAC,MAAM;AAC9D,MAAAA;AAEF,UAAMhmH,IAASmpG,EAAU,MAAM6c,GAAaD,CAAY,GAGlD5qF,IADiBud,GAAcywD,CAAS,EACC,WAAW,GAAG,IACzD,QACA;AAEJ,WAAO;AAAA,MACL,WAAAlvE;AAAA,MACA,QAAAj6B;AAAA,MACA,OAAAm7B;AAAA,IAAA;AAAA,EAEJ;AAAA,EAEQ,uBACNp6B,GACAmY,GACQ;AACR,QAAI,CAACnY;AACH,aAAOA;AAET,UAAMd,IAAUc,EAAQ,SAAS;AAAA,CAAM,IAAI;AAAA,IAAS;AAAA,GAC9CqB,IAAQrB,EAAQ,MAAMd,CAAO;AACnC,QAAImC,EAAM,WAAW;AACnB,aAAOrB;AAGT,UAAMklH,IAAiB7jH,EAAM,CAAC;AAC9B,QAAI,CAAC6jH;AACH,aAAOllH;AAET,UAAMmlH,IAAoBD,EAAe,YAAY/sG,EAAK,SAAS;AACnE,QAAIgtG,MAAsB;AACxB,aAAOnlH;AAGT,UAAMilH,IAAcE,IAAoBhtG,EAAK,OAAO;AACpD,QAAI8sG,IAAc;AAChB,aAAOjlH;AAET,UAAMolH,IAAgBF,EAAe,MAAMD,GAAaE,CAAiB;AAEzE,QAAIE,IAAeF;AAEnB,QAAIhtG,EAAK,OAAO,SAAS;AACvB,UAAIitG,MAAkBjtG,EAAK;AACzB,QAAAktG,IAAeJ;AAAA,WACV;AAEL,YAAIK,IAAkBH;AACtB,eACEG,IAAkB,KAClB7tE,GAAiBytE,EAAe,OAAOI,IAAkB,CAAC,CAAC;AAE3D,UAAAA;AAEF,QAAAD,IAAeC;AAAA,MACjB;AAAA;AAEA,aACED,IAAe,KACf5tE,GAAiBytE,EAAe,OAAOG,IAAe,CAAC,CAAC;AAExD,QAAAA;AAIJ,UAAM/iH,IAAS4iH,EAAe,MAAM,GAAGG,CAAY,GAC7C9iH,IAAQ2iH,EAAe;AAAA,MAC3BC,IAAoBhtG,EAAK,UAAU;AAAA,IAAA;AAErC,WAAA9W,EAAM,CAAC,IAAIq2C,GAAYp1C,IAASC,CAAK,GAE9BlB,EAAM,KAAKnC,CAAO;AAAA,EAC3B;AAAA,EAEQ,sBACNc,GACAmY,GACQ;AACR,QAAI,CAACnY;AACH,aAAOA;AAET,UAAMiG,IAAU,KAAK,uBAAuBjG,GAASmY,CAAI,GACnDjZ,IAAU+G,EAAQ,SAAS;AAAA,CAAM,IAAI;AAAA,IAAS;AAAA,GAC9C5E,IAAQ4E,EAAQ,MAAM/G,CAAO;AACnC,QAAImC,EAAM,WAAW;AACnB,aAAO4E;AAGT,UAAMi/G,IAAiB7jH,EAAM,CAAC;AAC9B,QAAI,CAAC6jH;AACH,aAAOj/G;AAGT,UAAMs/G,IADiB5tE,GAAcutE,CAAc,EACtB,WAAW,GAAG,GACrCM,IAAankH,EAAM,SAAS,IAAIA,EAAM,CAAC,IAAI,QAC3CokH,IAAWD,IACb5tE,GAAkBF,GAAY8tE,CAAU,CAAC,IACzC;AAKJ,QAHIrtG,EAAK,UAAU,SAAS,CAACotG,KAGzBptG,EAAK,UAAU,YAAY,CAACstG;AAC9B,aAAOx/G;AAGT,UAAMy/G,IAAavtG,EAAK,OAAO,SAAS,IAAIA,EAAK,SAAS,KACpDwtG,IAAkBjuE,GAAYwtE,CAAc;AAClD,WAAA7jH,EAAM,CAAC,IAAIq2C,GAAY,GAAGiuE,CAAe,GAAGD,CAAU,GAAGvtG,EAAK,SAAS,EAAE,GAElE9W,EAAM,KAAKnC,CAAO;AAAA,EAC3B;AAAA,EAEQ,qBAAqB2E,GAAmB7D,GAAuB;AACrE,UAAM+F,IAAU,KAAK,4BAA4B/F,CAAO;AACxD,IAAI+F,IACF,KAAK,uBAAuB,IAAIlC,GAAWkC,CAAO,IAElD,KAAK,uBAAuB,OAAOlC,CAAS;AAAA,EAEhD;AAAA,EAEQ,qBAAqBhB,GAA2B;AACtD,UAAMq5G,IAAa,SAAS;AAAA,MAC1B,oBAAoBr5G,EAAK,EAAE;AAAA,IAAA;AAE7B,QAAI,CAACq5G,EAAY;AAEjB,IAAAA,EAAW,aAAa,oBAAoBr5G,EAAK,SAAS,IAAI,GAC1DA,EAAK,SAAS,UAAU,SAC1Bq5G,EAAW,aAAa,qBAAqB,OAAOr5G,EAAK,SAAS,KAAK,CAAC,IAExEq5G,EAAW,gBAAgB,mBAAmB;AAIhD,QAAI0J,IAAe,KAAK,gBAAgB/iH,EAAK,OAAO;AAIpD,QAAIA,EAAK,SAAS,SAAS,UAAU;AACnC,YAAMqgH,IAAmB,KAAK;AAAA,QAC5BrgH,EAAK;AAAA,QACL+iH;AAAA,MAAA;AAEF,MAAI1C,MACF0C,IAAe,KAAK;AAAA,QAClBA;AAAA,QACA1C;AAAA,MAAA,IAGJ0C,IAAe,KAAK,8BAA8BA,CAAY;AAAA,IAChE;AAEAnO,IAAAA,GAAO,MAAM,wBAAwB,EAAE,WAAW50G,EAAK,IAAI,GAC3D40G,GAAO,MAAM,YAAYmO,CAAY;AAGrC,UAAM75F,IAAO,KAAK,OAAO,SAAS;AAAA,MAChC65F;AAAA,MACA/iH,EAAK,SAAS;AAAA,MACdA,EAAK,SAAS;AAAA,IAAA;AAKhB,QAFA40G,GAAO,MAAM,kBAAkB1rF,CAAI,GAE/BmwF,EAAW,UAAU,SAAS,yBAAyB;AACzD;AAGF,UAAM2J,IAAc3J,EAAW;AAAA,MAC7B;AAAA,IAAA;AAgBF,IAbuB,MAAM,KAAKA,EAAW,UAAU,EAAE,OAAO,CAACl1G,MAC3D,EAAAA,MAAS6+G,KACT7+G,aAAgB,gBACdA,EAAK,UAAU,SAAS,kCAAkC,KAG1DA,EAAK,aAAa,gBAAgB,GAKzC,EAEc,QAAQ,CAACA,MAAS;AAC/B,MAAIA,EAAK,eAAek1G,KACtBA,EAAW,YAAYl1G,CAAI;AAAA,IAE/B,CAAC;AAED,UAAM6tC,IAAO,SAAS,cAAc,KAAK;AACzC,IAAAA,EAAK,YAAY9oB;AACjB,UAAM+5F,IAAwB,CAAA;AAC9B,WAAOjxE,EAAK,cAAY;AACtB,YAAMnxC,IAAQmxC,EAAK;AACnB,MAAAixE,EAAS,KAAKpiH,CAAK,GACnBmxC,EAAK,YAAYnxC,CAAK;AAAA,IACxB;AAEA,QAAImiH,GAAa;AACf,YAAME,IAAkBD,EAAS;AAAA,QAC/B,CAAC9+G,MAA8BA,aAAgB;AAAA,MAAA;AAGjD,UAAI++G,KAAmBF,aAAuB,aAAa;AACzD,cAAMG,wBAAsB,IAAA;AAC5B,QAAAD,EAAgB,UACb,MAAM,KAAK,EACX,OAAO,OAAO,EACd,QAAQ,CAACniH,MAAQoiH,EAAgB,IAAIpiH,CAAG,CAAC,GAC5CiiH,EAAY,UAAU,QAAQ,CAACjiH,MAAQoiH,EAAgB,IAAIpiH,CAAG,CAAC,GAC/DmiH,EAAgB,YAAY,MAAM,KAAKC,CAAe,EAAE,KAAK,GAAG,GAEhE,MAAM,KAAKH,EAAY,UAAU,EAAE,QAAQ,CAACliH,MAAS;AACnD,UAAIA,EAAK,SAAS,YACboiH,EAAgB,aAAapiH,EAAK,IAAI,KACzCoiH,EAAgB,aAAapiH,EAAK,MAAMA,EAAK,KAAK;AAAA,QAEtD,CAAC;AAAA,MACH;AAEA,UAAImiH,EAAS,SAAS,GAAG;AACvB,cAAMj3C,IAAU,KAAK;AAAA,UACnBg3C,EAAY,aAAa,qBAAqB,MAAM;AAAA,UACpDC;AAAA,QAAA;AAEF,QAAAD,EAAY,YAAYh3C,CAAO;AAAA,MACjC;AACE,QAAAg3C,EAAY,OAAA;AAAA,IAEhB,WAAWC,EAAS,SAAS,GAAG;AAC9B,YAAM7J,IAAYC,EAAW;AAAA,QAC3B;AAAA,MAAA,GAEIrtC,IAAU,KAAK,mBAAmB,IAAOi3C,CAAQ;AACvD,MAAI7J,IACFC,EAAW,aAAartC,GAASotC,CAAS,IAE1CC,EAAW,YAAYrtC,CAAO;AAAA,IAElC;AAEA,SAAK,kBAAkB,+BAA+BqtC,CAAU;AAAA,EAClE;AAAA;AAAA;AAAA;AAAA;AAAA,EAMQ,8BAA8Bl8G,GAAyB;AAE7D,WAAOA,EACJ,QAAQ,2BAA2B,CAACmG,GAAQvK,MACpC,MAAMA,EAAK,QAAQ,QAAQ,GAAG,EAAE,MAAM,KAC9C,EACA,QAAQ,uBAAuB,CAACuK,GAAQvK,MAChC,MAAMA,EAAK,QAAQ,QAAQ,GAAG,EAAE,MAAM,KAC9C,EACA,QAAQ,mCAAmC,CAACuK,GAAQ44E,GAAK1+E,MACjD,MAAM0+E,EAAI,QAAQ,QAAQ,GAAG,EAAE,KAAA,CAAM,KAAK1+E,EAAQ,QAAQ,QAAQ,GAAG,EAAE,MAAM,KACrF,EACA,QAAQ,uBAAuB,CAAC8F,GAAQvK,MAChC,MAAMA,EAAK,QAAQ,QAAQ,GAAG,EAAE,MAAM,KAC9C,EACA,QAAQ,uBAAuB,CAACuK,GAAQvK,MAChC,MAAMA,EAAK,QAAQ,QAAQ,GAAG,EAAE,MAAM,KAC9C;AAAA,EACL;AAAA;AAAA;AAAA;AAAA,EAKQ,wBAAwBwH,GAA0C;AACxE,UAAMimD,IACJ;AACF,QAAIruC,IAAU5X,EAAQ,QAAQimD,CAAQ;AACtC,QAAI,CAACruC;AACH,aAAO;AAGT,QAAIirG,IAAUjrG;AACd,WAAOA,KAAS;AACd,YAAM1Q,IAAS0Q,EAAQ,eAAe;AAAA,QACpCquC;AAAA,MAAA;AAEF,UAAI,CAAC/+C,EAAQ;AACb,MAAA27G,IAAU37G,GACV0Q,IAAU1Q;AAAA,IACZ;AAEA,WAAO27G;AAAA,EACT;AAAA,EAEQ,yBAA+B;AACrC,UAAMtH,IAAa,KAAK,OAAO,QAAQ,qBAAA;AACvC,IAAIA,KACF,KAAK,mBAAA,GAEP,KAAK,kBAAkB,qBAAqBA,CAAU;AAAA,EACxD;AAAA,EAEQ,qBAAkC;AACxC,QAAI3F,IAAU,SAAS;AAAA,MACrB;AAAA,IAAA;AAEF,WAAKA,MACHA,IAAU,KAAK,wBAAA,GACf,SAAS,KAAK,YAAYA,CAAO,GACjC,KAAK,kBAAkB;AAAA,MACrB,KAAK,YAAY;AAAA,IAAA,GAEnB,KAAK,iBAAA,GACL,KAAK,2BAA2B,KAAK,QAAQ,oBAAoBA,CAAO,IAEnEA;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKQ,0BAAuC;AAC7C,UAAM+B,IAAU,KAAK,kBAAkB,OAAA;AAEvC,WAAK,KAAK,2BACR,KAAK,yBAAyB,IAAI4E,GAAuB,KAAK,MAAM,IAG/D5E;AAAA,EACT;AAAA,EAEQ,oBAAoB7lG,GAGnB;AACP,SAAK,wBAAwB,MAAA,GAC7B,KAAK,uBAAuB,KAAA;AAE5B,UAAM+lG,IAAa/lG,EAAQ,kBACvB,GAAGA,EAAQ,SAAS,IAAIA,EAAQ,gBAAgB,KAAK,KACrD;AAEJ,SAAK,kBAAkB,aAAa;AAAA,MAClC,WAAWA,EAAQ;AAAA,MACnB,iBAAiBA,EAAQ;AAAA,MACzB,YAAA+lG;AAAA,IAAA,CACD,GAED,KAAK,kBAAkB;AAAA,MACrB/lG,EAAQ;AAAA,MACR;AAAA,MACA+lG;AAAA,IAAA;AAAA,EAEJ;AAAA,EAEQ,iBAAiB/kH,IAAqC,IAAU;AACtE,SAAK,kBAAkB,UAAU;AAAA,MAC/B,aAAaA,EAAQ;AAAA,IAAA,CACtB;AAAA,EACH;AAAA,EAEQ,mBACNgwH,GACA7zF,GACa;AACb,QAAI6zF,GAAgB;AAClB,YAAMz2F,IAAW,SAAS,uBAAA;AAC1B,MAAA4C,EAAM,QAAQ,CAACrrB,MAASyoB,EAAS,YAAYzoB,CAAI,CAAC;AAClD,YAAMuzC,IAAY,SAAS,cAAc,KAAK;AAC9C,aAAAA,EAAU,aAAa,uBAAuB,MAAM,GACpDA,EAAU,YAAY,0BACtBA,EAAU,YAAY9qB,CAAQ,GACvB8qB;AAAA,IACT;AAEA,UAAMs0B,IAAU,SAAS,cAAc,KAAK;AAC5C,IAAAA,EAAQ,YAAY,0BACpBA,EAAQ,aAAa,uBAAuB,MAAM;AAClD,UAAMp/C,IAAW,SAAS,uBAAA;AAC1B,WAAA4C,EAAM,QAAQ,CAACrrB,MAASyoB,EAAS,YAAYzoB,CAAI,CAAC,GAClD6nE,EAAQ,YAAYp/C,CAAQ,GACrBo/C;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQO,iBACL7hE,GACAjK,IAAqC,QAC/B;AACN,UAAM69G,IAAe,SAAS,cAAc,KAAK;AACjD,IAAAA,EAAa,YAAY,2CAA2C79G,CAAI,IACxE69G,EAAa,cAAc5zG,GAC3B,SAAS,KAAK,YAAY4zG,CAAY,GACtC,WAAW,MAAM;AACf,MAAAA,EAAa,UAAU,IAAI,0BAA0B;AAAA,IACvD,GAAG,EAAE,GACL,WAAW,MAAM;AACf,MAAAA,EAAa,UAAU,OAAO,0BAA0B,GACxD,WAAW,MAAMA,EAAa,OAAA,GAAUnE,GAAqB,MAAM,CAAC;AAAA,IACtE,GAAGD,GAAa,gCAAgC;AAAA,EAClD;AAAA,EAEO,YAAYxvG,IAAU,cAA2B;AACtD,UAAMm5G,IAAU,SAAS,cAAc,KAAK;AAC5C,WAAAA,EAAQ,YAAY,kBACpBA,EAAQ,YAAY;AAAA;AAAA;AAAA,aAGXn5G,CAAO;AAAA;AAAA,OAGhB,SAAS,KAAK,YAAYm5G,CAAO,GAC1BA;AAAA,EACT;AAAA,EAEO,YAAYA,GAA4B;AAC7C,IAAAA,EAAQ,OAAA;AAAA,EACV;AAAA,EAEO,UAAgB;AACrB,SAAK,YAAA,GAGL,KAAK,qBAAqB,QAAA,GAC1B,KAAK,uBAAuB,QAAA,GAC5B,KAAK,uBAAuB,QAAA,GAC5B,KAAK,qBAAqB,QAAA,GAC1B,KAAK,wBAAwB,QAAA,GAC7B,KAAK,wBAAwB,QAAA,GAC7B,KAAK,kBAAkB,QAAA,GAGP,SAAS,cAAc,iBAAiB,GAC/C,OAAA,GACgB,SAAS,iBAAiB,kBAAkB,EACpD,QAAQ,CAACtjH,MAAS;AACjC,YAAM2F,IAAQ3F,EAAK,UAAU,EAAI;AACjC,MAAAA,EAAK,YAAY,aAAa2F,GAAO3F,CAAI;AAAA,IAC3C,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAMQ,kBAAkBgB,GAAyB;AACjD,IAAKA,KAIL,KAAK,eAAe,KAAKA,GAAW,KAAK,YAAY,oBAAoB;AAAA,EAC3E;AAAA;AAAA;AAAA;AAAA,EAKQ,qBAAqBA,GAAyB;AACpD,UAAMuiH,IAAc,KAAK,eAAe,IAAIviH,CAAS;AACrD,IAAIuiH,EAAY,OAAO,WAAW,KAIlC3O,GAAO,MAAM,uCAAuC;AAAA,MAClD,WAAA5zG;AAAA,MACA,YAAYuiH,EAAY,OAAO;AAAA,MAC/B,aAAa,IAAI,KAAKA,EAAY,WAAW,EAAE,eAAA;AAAA,IAAe,CAC/D;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKO,qBAKJ;AACD,WAAO,KAAK,eAAe,KAAA;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA,EAKO,oBAAoBviH,GAAyB;AAClD,SAAK,eAAe,MAAMA,CAAS;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA,EAKO,oBAA0B;AAC/B,SAAK,eAAe,SAAA;AAAA,EACtB;AACF;ACl3DA,MAAM4zG,KAASnC,GAAmB,WAAW,GAEvC+Q,KAAsB,QACtBC,KAA2C,UAE3CC,KAAqC;AAAA,EACzC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAKO,SAASC,GACdC,GAC4B;AAC5B,MAAI,CAACA;AACH,WAAO;AAGT,QAAMC,IAAWC,GAAkBF,EAAU,QAAQ;AACrD,MAAI,CAACC;AACHjP,WAAAA,GAAO;AAAA,MACL;AAAA,IAAA,GAEK;AAGT,QAAMmP,KAASH,EAAU,SAAS,IAAI,KAAA,GAChCt+G,KAAQs+G,EAAU,QAAQ,IAAI,KAAA;AAEpC,MAAI,CAACG,KAAS,CAACz+G;AACbsvG,WAAAA,GAAO;AAAA,MACL;AAAA,IAAA,GAEK;AAGT,QAAMoP,KAEFJ,EAAU,cACTA,EAAU,aAAa,KACxBJ,IACA,UAAUA,IAERS,IACHL,EAAU,cACVA,EAAU,aAAa,KACxB,QAEIM,IAAaC,GAAoBP,EAAU,IAAI;AAcrD,SAAO;AAAA,IACL,QAbkC;AAAA,MAClC,UAAAC;AAAA,MACA,YAAY;AAAA,QACV,OAAAE;AAAA,QACA,MAAAz+G;AAAA,QACA,YAAA0+G;AAAA,QACA,YAAAC;AAAA,MAAA;AAAA,MAEF,MAAMC,KAAc;AAAA,MACpB,SAASN,EAAU;AAAA,IAAA;AAAA,IAKnB,KAAKA;AAAA,EAAA;AAET;AAIA,SAASE,GAAkBD,GAA2C;AACpE,MAAI,CAACA,EAAU,QAAO;AACtB,QAAM5M,IAAa4M,EAAS,YAAA,EAAc,KAAA;AAC1C,SAAOH,GAAgB,SAASzM,CAA6B,IACxDA,IACD;AACN;AAEA,SAASkN,GACPx7F,GACsB;AACtB,MAAI,CAACA;AACH,WAAO;AAGT,QAAMy7F,IAAOC,GAAkB17F,CAAM,GAC/Bq5E,IAASr5E,GAET27F,IACJC,GAAcviB,GAAQ,YAAY,KAAKuiB,GAAcviB,GAAQ,aAAa,GACtEwiB,IACJD,GAAcviB,GAAQ,YAAY,KAAKuiB,GAAcviB,GAAQ,aAAa,GACtEppG,IAAQ2rH,GAAcviB,GAAQ,OAAO;AAE3C,SAAO;AAAA,IACL,MAAAoiB;AAAA,IACA,YAAYE,KAAc;AAAA,IAC1B,YAAYE,KAAc;AAAA,IAC1B,OAAO5rH,KAAS;AAAA,EAAA;AAEpB;AAEA,SAASyrH,GACP17F,GACuB;AACvB,QAAM87F,IAAa97F,GAAQ,MAA6B,YAAA;AACxD,SAAI87F,MAAc,YAAYA,MAAc,YAAYA,MAAc,QAC7DA,IAELF,GAAc57F,GAAmC,OAAO,IACnD,QAEF86F;AACT;AAEA,SAASc,GACPx/G,GACAG,GACoB;AACpB,MAAI,CAACH,EAAK;AACV,QAAMlR,IAAQkR,EAAIG,CAAG;AACrB,MAAI,OAAOrR,KAAU,UAAU;AAC7B,UAAMsK,IAAUtK,EAAM,KAAA;AACtB,WAAOsK,EAAQ,SAAS,IAAIA,IAAU;AAAA,EACxC;AAEF;AClGO,MAAeumH,GAAa;AAAA,EAGjC,YAAY/7F,GAAwB;AAFjB,IAAA7oB,EAAA;AAGjB,SAAK,SAAS6oB;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA,EA4HA,MAAgB,QACdg8F,GACAtxH,IAAuB,IACX;AACZ,QAAI,CAAC,KAAK,OAAO;AACf,YAAM,IAAI,MAAM,gCAAgC;AAIlD,UAAMuxH,IAAa,KAAK,cAAA,GAClBN,IAAa,KAAK,OAAO,MAAM,cAAc,iBAO7CO,IAA4B;AAAA,MAChC,QAAQ;AAAA,MACR,GAAID,IAAa,EAAE,CAACN,CAAU,GAAGM,EAAA,IAAe,CAAA;AAAA,MAChD,GAAIvxH,EAAQ,WAAW,CAAA;AAAA,IAAC,GAGpByxH,IAA2B;AAAA,MAC/B,GAAGzxH;AAAA,MACH,SAASwxH;AAAA,IAAA;AAGX,IAAI,KAAK,OAAO,MAAM,SAAS,aAC7BC,EAAY,cAAcA,EAAY,eAAe;AAGvD,UAAMr7G,IACJk7G,EAAS,WAAW,MAAM,KAAKA,EAAS,WAAW,OAAO,IACtDA,IACA,GAAG,KAAK,OAAO,GAAG,GAAGA,CAAQ,IAE7BI,IAAW,MAAM,MAAMt7G,GAAKq7G,CAAW;AAE7C,QAAI,CAACC,EAAS;AAEZ,YADc,MAAM,KAAK,WAAWA,CAAQ;AAI9C,QAAIA,EAAS,WAAW;AAEtB;AAGF,UAAMhsH,IAAO,MAAMgsH,EAAS,KAAA;AAC5B,QAAKhsH;AAIL,UAAI;AACF,eAAO,KAAK,MAAMA,CAAI;AAAA,MACxB,SAASwL,GAAO;AACd,cAAM,IAAI;AAAA,UACR,sCAAuCA,EAAgB,OAAO;AAAA,QAAA;AAAA,MAElE;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAgB,WAAWwgH,GAAoC;AAC7D,QAAI56G,IAAU,GAAG46G,EAAS,MAAM,IAAIA,EAAS,UAAU;AAEvD,QAAI;AACF,YAAM3nH,IAAO,MAAM2nH,EAAS,KAAA;AAC5B,MAAI3nH,KAAQ,OAAOA,EAAK,WAAY,aAClC+M,IAAU/M,EAAK;AAAA,IAEnB,QAAQ;AAAA,IAER;AAEA,UAAMmH,IAAQ,IAAI,MAAM4F,CAAO;AAC9B,WAAA5F,EAAsC,SAASwgH,EAAS,QAClDxgH;AAAA,EACT;AAMF;ACzPA,SAASygH,GAAa7nH,GAAyB;AAC7C,MAAI,OAAO,QAAS;AAClB,WAAO;AAAA,MACL,MAAM,UAAU,IACb;AAAA,QACC,KAAKA,CAAO;AAAA,QACZ,CAACg0C,MAAc,IAAI,KAAKA,EAAE,WAAW,CAAC,EAAE,SAAS,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC;AAAA,MAAA,EAEjE,KAAK,EAAE;AAAA,IAAA;AAKd,MAAI,OAAO,SAAW;AACpB,WAAO,OAAO,KAAKh0C,GAAS,QAAQ,EAAE,SAAS,OAAO;AAExD,QAAM,IAAI,MAAM,sDAAsD;AACxE;AAEA,SAAS8nH,GAAa9nH,GAAyB;AAC7C,MAAI,OAAO,QAAS;AAClB,WAAO,KAAK,SAAS,mBAAmBA,CAAO,CAAC,CAAC;AAEnD,MAAI,OAAO,SAAW;AACpB,WAAO,OAAO,KAAKA,GAAS,OAAO,EAAE,SAAS,QAAQ;AAExD,QAAM,IAAI,MAAM,sDAAsD;AACxE;AAEO,MAAM+nH,WAAuBR,GAAa;AAAA,EACrC,gBAAoC;AAC5C,QAAI,KAAK,OAAO,MAAM,SAAS,UAG/B;AAAA,UAAI,KAAK,OAAO,MAAM;AACpB,eAAO,UAAU,KAAK,OAAO,KAAK,KAAK;AAEzC,UAAI,KAAK,OAAO;AACd,eAAO,UAAU,KAAK,OAAO,KAAK;AAAA;AAAA,EAGtC;AAAA,EAEA,MAAM,iBAAmC;AACvC,UAAMK,IAAW,MAAM,KAAK,QAAoB,OAAO;AACvD,WAAO;AAAA,MACL,OAAOA,EAAS;AAAA,MAChB,MAAMA,EAAS,QAAQ;AAAA,MACvB,WAAWA,EAAS,cAAc;AAAA,IAAA;AAAA,EAEtC;AAAA,EAEA,MAAM,aACJI,GACAC,GAC6B;AAC7B,UAAMC,IAAU,MAAM,KAAK;AAAA,MACzB,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,kBAAkBD,CAAU;AAAA,IAAA,GAGvEL,IAAW,MAAM,KAAK;AAAA,MAC1B,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI;AAAA,MAC/C;AAAA,QACE,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,mBAAA;AAAA,QAC3B,MAAM,KAAK,UAAU;AAAA,UACnB,KAAK,cAAcI,CAAU;AAAA,UAC7B,KAAKE,EAAQ,OAAO;AAAA,QAAA,CACrB;AAAA,MAAA;AAAA,IACH;AAGF,WAAO;AAAA,MACL,MAAMN,EAAS;AAAA,MACf,KAAKA,EAAS,OAAO;AAAA,IAAA;AAAA,EAEzB;AAAA,EAEA,MAAM,eACJ7vH,GACAowH,GACgC;AAChC,QAAI;AACF,YAAMP,IAAW,MAAM,KAAK;AAAA,QAC1B,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,aAAa;AAAA,UAC1D7vH;AAAA,QAAA,CACD,QAAQ,mBAAmBowH,CAAG,CAAC;AAAA,QAChC;AAAA,UACE,SAAS,EAAE,QAAQ,iCAAA;AAAA,QAAiC;AAAA,MACtD;AAGF,aAAO;AAAA,QACL,MAAMP,EAAS;AAAA,QACf,KAAKA,EAAS;AAAA,QACd,SAASC,GAAaD,EAAS,OAAO;AAAA,MAAA;AAAA,IAE1C,SAASxgH,GAAO;AACd,UACEA,aAAiB,SAChBA,EAAsC,WAAW;AAElD,eAAO;AAET,YAAMA;AAAA,IACR;AAAA,EACF;AAAA,EAEA,MAAM,mBACJrP,GACAiI,GACAgN,GACAklG,GACAkW,GAC2B;AAC3B,UAAMR,IAAW,MAAM,KAAK;AAAA,MAC1B,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,aAAa;AAAA,QAC1D7vH;AAAA,MAAA,CACD;AAAA,MACD;AAAA,QACE,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,mBAAA;AAAA,QAC3B,MAAM,KAAK,UAAU;AAAA,UACnB,SAAAiV;AAAA,UACA,SAAS86G,GAAa9nH,CAAO;AAAA,UAC7B,QAAAkyG;AAAA,UACA,KAAAkW;AAAA,QAAA,CACD;AAAA,MAAA;AAAA,IACH;AAGF,WAAO;AAAA,MACL,MAAMR,EAAS,QAAQ;AAAA,MACvB,KAAKA,EAAS,QAAQ;AAAA,MACtB,WAAWA,EAAS,OAAO;AAAA,MAC3B,KAAKA,EAAS,QAAQ;AAAA,IAAA;AAAA,EAE1B;AAAA,EAEA,MAAM,kBACJluE,GACAz5C,GACAmqB,GACA7Y,GACsB;AACtB,UAAMq2G,IAAW,MAAM,KAAK;AAAA,MAC1B,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI;AAAA,MAC/C;AAAA,QACE,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,mBAAA;AAAA,QAC3B,MAAM,KAAK,UAAU,EAAE,OAAAluE,GAAO,MAAAz5C,GAAM,MAAAmqB,GAAM,MAAA7Y,GAAM;AAAA,MAAA;AAAA,IAClD;AAGF,WAAO,KAAK,eAAeq2G,CAAQ;AAAA,EACrC;AAAA,EAEA,MAAM,kBACJ76E,GACAs7E,GACsB;AACtB,UAAMT,IAAW,MAAM,KAAK;AAAA,MAC1B,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,UAAU76E,CAAM;AAAA,MAC/D;AAAA,QACE,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,mBAAA;AAAA,QAC3B,MAAM,KAAK,UAAU;AAAA,UACnB,OAAOs7E,EAAQ;AAAA,UACf,MAAMA,EAAQ;AAAA,QAAA,CACf;AAAA,MAAA;AAAA,IACH;AAGF,WAAO,KAAK,eAAeT,CAAQ;AAAA,EACrC;AAAA,EAEA,MAAM,eAAe76E,GAAsC;AACzD,UAAM66E,IAAW,MAAM,KAAK;AAAA,MAC1B,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,UAAU76E,CAAM;AAAA,IAAA;AAEjE,WAAO,KAAK,eAAe66E,CAAQ;AAAA,EACrC;AAAA,EAEA,MAAM,iBACJniH,IAAmC,QACX;AAIxB,YAHiB,MAAM,KAAK;AAAA,MAC1B,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,gBAAgBA,CAAK;AAAA,IAAA,GAEtD,IAAI,CAAC4jF,MAAO,KAAK,eAAeA,CAAE,CAAC;AAAA,EACrD;AAAA,EAEA,MAAM,iBACJt8C,GACAu7E,IAAwC,SACzB;AACf,UAAM,KAAK;AAAA,MACT,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,UAAUv7E,CAAM;AAAA,MAC/D;AAAA,QACE,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,mBAAA;AAAA,QAC3B,MAAM,KAAK,UAAU,EAAE,cAAcu7E,GAAQ;AAAA,MAAA;AAAA,IAC/C;AAAA,EAEJ;AAAA,EAEA,MAAM,qBACJv7E,GACAw7E,GACAC,GACgC;AAChC,QAAI,CAACD,EAAS;AACZ,aAAO,CAAA;AAGT,UAAMX,IAAW,MAAM,KAAK;AAAA,MAC1B,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,UAAU76E,CAAM;AAAA,MAC/D;AAAA,QACE,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,QAAQ;AAAA,UACR,wBAAwB;AAAA,QAAA;AAAA,QAE1B,MAAM,KAAK,UAAU;AAAA,UACnB,WAAWy7E;AAAA,UACX,OAAO;AAAA,UACP,UAAUD,EAAS,IAAI,CAACtnG,OAAa;AAAA,YACnC,MAAMA,EAAQ;AAAA,YACd,MAAMA,EAAQ;AAAA,YACd,MAAMA,EAAQ,QAAQ;AAAA,YACtB,MAAMA,EAAQ;AAAA,UAAA,EACd;AAAA,QAAA,CACH;AAAA,MAAA;AAAA,IACH;AAGF,WAAO2mG,GAAU,WACbA,EAAS,SAAS,IAAI,CAAC3mG,OAAa;AAAA,MAClC,IAAIA,EAAQ;AAAA,MACZ,KAAKA,EAAQ;AAAA,MACb,MAAMA,EAAQ;AAAA,MACd,MAAMA,EAAQ;AAAA,IAAA,EACd,IACF,CAAA;AAAA,EACN;AAAA,EAEA,MAAM,YAAYy4B,GAAez5C,GAA8B;AAC7D,UAAM2nH,IAAW,MAAM,KAAK;AAAA,MAC1B,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI;AAAA,MAC/C;AAAA,QACE,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,mBAAA;AAAA,QAC3B,MAAM,KAAK,UAAU,EAAE,OAAAluE,GAAO,MAAAz5C,GAAM;AAAA,MAAA;AAAA,IACtC;AAEF,WAAO,KAAK,SAAS2nH,CAAQ;AAAA,EAC/B;AAAA,EAEA,MAAM,SAAS76E,GAAgC;AAC7C,UAAM66E,IAAW,MAAM,KAAK;AAAA,MAC1B,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,WAAW76E,CAAM;AAAA,IAAA;AAElE,WAAO,KAAK,SAAS66E,CAAQ;AAAA,EAC/B;AAAA,EAEA,MAAM,WACJniH,IAAmC,QACjB;AAIlB,YAHiB,MAAM,KAAK;AAAA,MAC1B,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,iBAAiBA,CAAK;AAAA,IAAA,GAEvD,IAAI,CAACgjH,MAAU,KAAK,SAASA,CAAK,CAAC;AAAA,EACrD;AAAA,EAEA,MAAM,sBAAsB17E,GAAgB9sC,GAA6B;AACvE,UAAM,KAAK;AAAA,MACT,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,WAAW8sC,CAAM;AAAA,MAChE;AAAA,QACE,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,mBAAA;AAAA,QAC3B,MAAM,KAAK,UAAU,EAAE,MAAA9sC,GAAM;AAAA,MAAA;AAAA,IAC/B;AAAA,EAEJ;AAAA,EAEA,MAAM,gBAAgB8sC,GAAgB9sC,GAA6B;AACjE,UAAM,KAAK;AAAA,MACT,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,WAAW8sC,CAAM;AAAA,MAChE;AAAA,QACE,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,mBAAA;AAAA,QAC3B,MAAM,KAAK,UAAU,EAAE,MAAA9sC,GAAM;AAAA,MAAA;AAAA,IAC/B;AAAA,EAEJ;AAAA,EAEA,MAAM,gBAKH;AACD,UAAM2nH,IAAW,MAAM,KAAK;AAAA,MAC1B,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI;AAAA,IAAA;AAGjD,WAAO;AAAA,MACL,MAAMA,EAAS;AAAA,MACf,aAAaA,EAAS;AAAA,MACtB,KAAKA,EAAS;AAAA,MACd,eAAeA,EAAS;AAAA,IAAA;AAAA,EAE5B;AAAA,EAEA,MAAM,iBAAmC;AAIvC,WAAO,GAHU,MAAM,KAAK;AAAA,MAC1B,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI;AAAA,IAAA,GAEzB,aAAa;AAAA,EACvC;AAAA,EAEQ,eAAev+B,GAAoC;AACzD,WAAO;AAAA,MACL,QAAQA,EAAG;AAAA,MACX,OAAOA,EAAG;AAAA,MACV,MAAMA,EAAG;AAAA,MACT,OAAOA,EAAG,YAAY,WAAWA,EAAG;AAAA,MACpC,QAAQA,EAAG,KAAK;AAAA,MAChB,WAAWA,EAAG;AAAA,MACd,WAAWA,EAAG;AAAA,MACd,KAAKA,EAAG;AAAA,IAAA;AAAA,EAEZ;AAAA,EAEQ,SAASo/B,GAA2B;AAC1C,WAAO;AAAA,MACL,QAAQA,EAAM;AAAA,MACd,OAAOA,EAAM;AAAA,MACb,MAAMA,EAAM;AAAA,MACZ,OAAOA,EAAM;AAAA,MACb,QAAQA,EAAM,KAAK;AAAA,MACnB,WAAWA,EAAM;AAAA,MACjB,KAAKA,EAAM;AAAA,IAAA;AAAA,EAEf;AACF;AChVO,MAAMC,WAAuBnB,GAAa;AAAA,EAG/C,YACE/7F,GACA;AACA,UAAM;AAAA,MACJ,KAAKA,EAAO,OAAO;AAAA,MACnB,GAAGA;AAAA,IAAA,CACJ;AARK,IAAA7oB,EAAA;AASN,SAAK,YAAY6oB,EAAO,aAAa,GAAGA,EAAO,KAAK,MAAMA,EAAO,IAAI;AAAA,EACvE;AAAA,EAEU,gBAAwB;AAChC,WAAO,UAAU,KAAK,OAAO,KAAK;AAAA,EACpC;AAAA,EAEA,MAAM,iBAAmC;AACvC,WAAO,KAAK,eAAA;AAAA,EACd;AAAA,EAEA,MAAM,aACJm9F,GACAC,GAC6B;AAC7B,WAAO,KAAK,eAAA;AAAA,EACd;AAAA,EAEA,MAAM,eACJC,GACAC,GACgC;AAChC,WAAO,KAAK,eAAA;AAAA,EACd;AAAA,EAEA,MAAM,mBACJD,GACAnG,GACAqG,GACAC,GACAC,GAC2B;AAC3B,WAAO,KAAK,eAAA;AAAA,EACd;AAAA,EAEA,MAAM,kBACJvvE,GACAz5C,GACAmqB,GACA7Y,GACsB;AACtB,UAAMi2G,IAAW,aAAa,KAAK,SAAS,mBAEtCI,IAAW,MAAM,KAAK,QAA4BJ,GAAU;AAAA,MAChE,QAAQ;AAAA,MACR,MAAM,KAAK,UAAU;AAAA,QACnB,OAAA9tE;AAAA,QACA,aAAaz5C;AAAA,QACb,eAAemqB;AAAA,QACf,eAAe7Y;AAAA,MAAA,CAChB;AAAA,IAAA,CACF;AAED,WAAO,KAAK,gBAAgBq2G,CAAQ;AAAA,EACtC;AAAA,EAEA,MAAM,kBACJsB,GACAC,GACsB;AACtB,WAAO,KAAK,eAAA;AAAA,EACd;AAAA,EAEA,MAAM,eAAep8E,GAAsC;AACzD,UAAMy6E,IAAW,aAAa,KAAK,SAAS,mBAAmBz6E,CAAM,IAC/D66E,IAAW,MAAM,KAAK,QAA4BJ,CAAQ;AAChE,WAAO,KAAK,gBAAgBI,CAAQ;AAAA,EACtC;AAAA,EAEA,MAAM,iBACJniH,IAAmC,QACX;AACxB,UAAM2jH,IAAa3jH,MAAU,SAAS,WAAWA,GAC3C+hH,IAAW,aAAa,KAAK,SAAS,yBAAyB4B,CAAU;AAE/E,YADiB,MAAM,KAAK,QAA8B5B,CAAQ,GAClD,IAAI,CAAC6B,MAAO,KAAK,gBAAgBA,CAAE,CAAC;AAAA,EACtD;AAAA,EAEA,MAAM,iBACJt8E,GACAu8E,IAAyC,SAC1B;AACf,UAAM9B,IAAW,aAAa,KAAK,SAAS,mBAAmBz6E,CAAM;AAErE,UAAM,KAAK,QAAQy6E,GAAU;AAAA,MAC3B,QAAQ;AAAA,IAAA,CACT;AAAA,EACH;AAAA,EAEA,MAAM,qBACJ0B,GACAK,GACAC,GACgC;AAChC,WAAO,KAAK,eAAA;AAAA,EACd;AAAA,EAEA,MAAM,YAAY9vE,GAAez5C,GAA8B;AAC7D,UAAMunH,IAAW,aAAa,KAAK,SAAS,WAEtCI,IAAW,MAAM,KAAK,QAAqBJ,GAAU;AAAA,MACzD,QAAQ;AAAA,MACR,MAAM,KAAK,UAAU;AAAA,QACnB,OAAA9tE;AAAA,QACA,aAAaz5C;AAAA,MAAA,CACd;AAAA,IAAA,CACF;AAED,WAAO,KAAK,SAAS2nH,CAAQ;AAAA,EAC/B;AAAA,EAEA,MAAM,SAAS76E,GAAgC;AAC7C,UAAMy6E,IAAW,aAAa,KAAK,SAAS,WAAWz6E,CAAM,IACvD66E,IAAW,MAAM,KAAK,QAAqBJ,CAAQ;AACzD,WAAO,KAAK,SAASI,CAAQ;AAAA,EAC/B;AAAA,EAEA,MAAM,WACJniH,IAAmC,QACjB;AAClB,UAAM2jH,IAAa3jH,MAAU,SAAS,WAAWA,GAC3C+hH,IAAW,aAAa,KAAK,SAAS,iBAAiB4B,CAAU;AAEvE,YADiB,MAAM,KAAK,QAAuB5B,CAAQ,GAC3C,IAAI,CAACiB,MAAU,KAAK,SAASA,CAAK,CAAC;AAAA,EACrD;AAAA,EAEA,MAAM,sBAAsB17E,GAAgB9sC,GAA6B;AACvE,UAAMunH,IAAW,aAAa,KAAK,SAAS,mBAAmBz6E,CAAM;AAErE,UAAM,KAAK,QAAQy6E,GAAU;AAAA,MAC3B,QAAQ;AAAA,MACR,MAAM,KAAK,UAAU,EAAE,MAAAvnH,GAAM;AAAA,IAAA,CAC9B;AAAA,EACH;AAAA,EAEA,MAAM,gBAAgB8sC,GAAgB9sC,GAA6B;AACjE,UAAMunH,IAAW,aAAa,KAAK,SAAS,WAAWz6E,CAAM;AAE7D,UAAM,KAAK,QAAQy6E,GAAU;AAAA,MAC3B,QAAQ;AAAA,MACR,MAAM,KAAK,UAAU,EAAE,MAAAvnH,GAAM;AAAA,IAAA,CAC9B;AAAA,EACH;AAAA,EAEA,MAAM,gBAKH;AACD,UAAMunH,IAAW,aAAa,KAAK,SAAS,IACtCI,IAAW,MAAM,KAAK,QAAuBJ,CAAQ;AAE3D,WAAO;AAAA,MACL,MAAMI,EAAS;AAAA,MACf,aAAaA,EAAS;AAAA,MACtB,KAAKA,EAAS;AAAA,MACd,eAAeA,EAAS;AAAA,IAAA;AAAA,EAE5B;AAAA,EAEA,MAAM,iBAAmC;AACvC,WAAO,KAAK,eAAA;AAAA,EACd;AAAA,EAEQ,gBAAgByB,GAAqC;AAE3D,QAAI5jH;AACJ,WAAI4jH,EAAG,UAAU,WACf5jH,IAAQ,WACC4jH,EAAG,UAAU,WACtB5jH,IAAQ,SAERA,IAAQ,UAGH;AAAA,MACL,QAAQ4jH,EAAG;AAAA,MACX,OAAOA,EAAG;AAAA,MACV,MAAMA,EAAG;AAAA,MACT,OAAA5jH;AAAA,MACA,QAAQ4jH,EAAG,OAAO;AAAA,MAClB,WAAWA,EAAG;AAAA,MACd,WAAWA,EAAG;AAAA,MACd,KAAKA,EAAG;AAAA,IAAA;AAAA,EAEZ;AAAA,EAEQ,SAASZ,GAA2B;AAE1C,UAAMhjH,IAAwBgjH,EAAM,UAAU,WAAW,SAAS;AAElE,WAAO;AAAA,MACL,QAAQA,EAAM;AAAA,MACd,OAAOA,EAAM;AAAA,MACb,MAAMA,EAAM;AAAA,MACZ,OAAAhjH;AAAA,MACA,QAAQgjH,EAAM,OAAO;AAAA,MACrB,WAAWA,EAAM;AAAA,MACjB,KAAKA,EAAM;AAAA,IAAA;AAAA,EAEf;AAAA,EAEQ,iBAA+B;AACrC,UAAM,IAAI,MAAM,wDAAwD;AAAA,EAC1E;AACF;ACxNO,MAAMgB,WAAsBlC,GAAa;AAAA,EAC9C,YAAY/7F,GAAwB;AAElC,UAAMk+F,KAAUl+F,EAAO,OAAO,4BAA4B;AAAA,MACxD;AAAA,MACA;AAAA,IAAA,GAEIlf,IAAMo9G,EAAO,SAAS,SAAS,IAAIA,IAAS,GAAGA,CAAM;AAE3D,UAAM;AAAA,MACJ,GAAGl+F;AAAA,MACH,KAAAlf;AAAA,IAAA,CACD;AAAA,EACH;AAAA,EAEU,gBAAwB;AAChC,WAAO,SAAS,KAAK,OAAO,KAAK;AAAA,EACnC;AAAA,EAEA,MAAM,iBAAmC;AACvC,WAAO,KAAK,eAAA;AAAA,EACd;AAAA,EAEA,MAAM,aACJq8G,GACAC,GAC6B;AAC7B,WAAO,KAAK,eAAA;AAAA,EACd;AAAA,EAEA,MAAM,eACJC,GACAC,GACgC;AAChC,WAAO,KAAK,eAAA;AAAA,EACd;AAAA,EAEA,MAAM,mBACJD,GACAnG,GACAqG,GACAC,GACAC,GAC2B;AAC3B,WAAO,KAAK,eAAA;AAAA,EACd;AAAA,EAEA,MAAM,kBACJvvE,GACAz5C,GACAmqB,GACA7Y,GACsB;AACtB,UAAMi2G,IAAW,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,UAE1DI,IAAW,MAAM,KAAK,QAA0BJ,GAAU;AAAA,MAC9D,QAAQ;AAAA,MACR,MAAM,KAAK,UAAU;AAAA,QACnB,OAAA9tE;AAAA,QACA,MAAAz5C;AAAA,QACA,MAAAmqB;AAAA,QACA,MAAA7Y;AAAA,MAAA,CACD;AAAA,IAAA,CACF;AAED,WAAO,KAAK,eAAeq2G,CAAQ;AAAA,EACrC;AAAA,EAEA,MAAM,kBACJsB,GACAC,GACsB;AACtB,WAAO,KAAK,eAAA;AAAA,EACd;AAAA,EAEA,MAAM,eAAep8E,GAAsC;AACzD,UAAMy6E,IAAW,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,UAAUz6E,CAAM,IAC1E66E,IAAW,MAAM,KAAK,QAA0BJ,CAAQ;AAC9D,WAAO,KAAK,eAAeI,CAAQ;AAAA,EACrC;AAAA,EAEA,MAAM,iBACJniH,IAAmC,QACX;AACxB,UAAM+hH,IAAW,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,gBAAgB/hH,CAAK;AAErF,YADiB,MAAM,KAAK,QAA4B+hH,CAAQ,GAChD,IAAI,CAACn+B,MAAO,KAAK,eAAeA,CAAE,CAAC;AAAA,EACrD;AAAA,EAEA,MAAM,iBACJt8C,GACAu7E,IAAwC,SACzB;AACf,UAAMd,IAAW,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,UAAUz6E,CAAM;AAEhF,UAAM,KAAK,QAAQy6E,GAAU;AAAA,MAC3B,QAAQ;AAAA,MACR,MAAM,KAAK,UAAU;AAAA,QACnB,IAAIc;AAAA,MAAA,CACL;AAAA,IAAA,CACF;AAAA,EACH;AAAA,EAEA,MAAM,qBACJY,GACAK,GACAC,GACgC;AAChC,WAAO,KAAK,eAAA;AAAA,EACd;AAAA,EAEA,MAAM,YAAY9vE,GAAez5C,GAA8B;AAC7D,UAAMunH,IAAW,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,WAE1DI,IAAW,MAAM,KAAK,QAAoBJ,GAAU;AAAA,MACxD,QAAQ;AAAA,MACR,MAAM,KAAK,UAAU;AAAA,QACnB,OAAA9tE;AAAA,QACA,MAAAz5C;AAAA,MAAA,CACD;AAAA,IAAA,CACF;AAED,WAAO,KAAK,SAAS2nH,CAAQ;AAAA,EAC/B;AAAA,EAEA,MAAM,SAAS76E,GAAgC;AAC7C,UAAMy6E,IAAW,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,WAAWz6E,CAAM,IAC3E66E,IAAW,MAAM,KAAK,QAAoBJ,CAAQ;AACxD,WAAO,KAAK,SAASI,CAAQ;AAAA,EAC/B;AAAA,EAEA,MAAM,WACJniH,IAAmC,QACjB;AAClB,UAAM+hH,IAAW,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,iBAAiB/hH,CAAK;AAEtF,YADiB,MAAM,KAAK,QAAsB+hH,CAAQ,GAC1C,IAAI,CAACiB,MAAU,KAAK,SAASA,CAAK,CAAC;AAAA,EACrD;AAAA,EAEA,MAAM,sBAAsB17E,GAAgB9sC,GAA6B;AACvE,UAAMunH,IAAW,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,WAAWz6E,CAAM;AAEjF,UAAM,KAAK,QAAQy6E,GAAU;AAAA,MAC3B,QAAQ;AAAA,MACR,MAAM,KAAK,UAAU,EAAE,MAAAvnH,GAAM;AAAA,IAAA,CAC9B;AAAA,EACH;AAAA,EAEA,MAAM,gBAAgB8sC,GAAgB9sC,GAA6B;AACjE,UAAMunH,IAAW,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,WAAWz6E,CAAM;AAEjF,UAAM,KAAK,QAAQy6E,GAAU;AAAA,MAC3B,QAAQ;AAAA,MACR,MAAM,KAAK,UAAU,EAAE,MAAAvnH,GAAM;AAAA,IAAA,CAC9B;AAAA,EACH;AAAA,EAEA,MAAM,gBAKH;AACD,UAAMunH,IAAW,UAAU,KAAK,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,IAC1DI,IAAW,MAAM,KAAK,QAAyBJ,CAAQ;AAE7D,WAAO;AAAA,MACL,MAAMI,EAAS;AAAA,MACf,aAAaA,EAAS;AAAA,MACtB,KAAKA,EAAS;AAAA,MACd,eAAeA,EAAS;AAAA,IAAA;AAAA,EAE5B;AAAA,EAEA,MAAM,iBAAmC;AACvC,WAAO,KAAK,eAAA;AAAA,EACd;AAAA,EAEQ,eAAev+B,GAAmC;AACxD,WAAO;AAAA,MACL,QAAQA,EAAG;AAAA,MACX,OAAOA,EAAG;AAAA,MACV,MAAMA,EAAG;AAAA,MACT,OAAOA,EAAG,SAAS,WAAWA,EAAG;AAAA,MACjC,QAAQA,EAAG,KAAK;AAAA,MAChB,WAAWA,EAAG;AAAA,MACd,WAAWA,EAAG;AAAA,MACd,KAAKA,EAAG;AAAA,IAAA;AAAA,EAEZ;AAAA,EAEQ,SAASo/B,GAA0B;AACzC,WAAO;AAAA,MACL,QAAQA,EAAM;AAAA,MACd,OAAOA,EAAM;AAAA,MACb,MAAMA,EAAM;AAAA,MACZ,OAAOA,EAAM;AAAA,MACb,QAAQA,EAAM,KAAK;AAAA,MACnB,WAAWA,EAAM;AAAA,MACjB,KAAKA,EAAM;AAAA,IAAA;AAAA,EAEf;AAAA,EAEQ,iBAA+B;AACrC,UAAM,IAAI,MAAM,uDAAuD;AAAA,EACzE;AACF;ACnNO,MAAMkB,WAAsBpC,GAAa;AAAA,EAC9C,cAAc;AACZ,UAAM;AAAA,MACJ,KAAK;AAAA,MACL,OAAO;AAAA,MACP,MAAM;AAAA,IAAA,CACP;AAAA,EACH;AAAA,EAEU,gBAAoC;AAAA,EAE9C;AAAA,EAEA,iBAAmC;AACjC,WAAO,QAAQ,QAAQ,EAAE,OAAO,SAAS;AAAA,EAC3C;AAAA,EAEA,eAA4C;AAC1C,WAAO,QAAQ;AAAA,MACb,IAAI,MAAM,+CAA+C;AAAA,IAAA;AAAA,EAE7D;AAAA,EAEA,iBAAiD;AAC/C,WAAO,QAAQ;AAAA,MACb,IAAI,MAAM,iDAAiD;AAAA,IAAA;AAAA,EAE/D;AAAA,EAEA,qBAAgD;AAC9C,WAAO,QAAQ;AAAA,MACb,IAAI,MAAM,kDAAkD;AAAA,IAAA;AAAA,EAEhE;AAAA,EAEA,oBAA0C;AACxC,WAAO,QAAQ;AAAA,MACb,IAAI,MAAM,gDAAgD;AAAA,IAAA;AAAA,EAE9D;AAAA,EAEA,iBAAuC;AACrC,WAAO,QAAQ;AAAA,MACb,IAAI,MAAM,gDAAgD;AAAA,IAAA;AAAA,EAE9D;AAAA,EAEA,oBAA0C;AACxC,WAAO,QAAQ;AAAA,MACb,IAAI,MAAM,gDAAgD;AAAA,IAAA;AAAA,EAE9D;AAAA,EAEA,mBAA2C;AACzC,WAAO,QAAQ,QAAQ,EAAE;AAAA,EAC3B;AAAA,EAEA,mBAAkC;AAChC,WAAO,QAAQ;AAAA,MACb,IAAI,MAAM,gDAAgD;AAAA,IAAA;AAAA,EAE9D;AAAA,EAEA,qBACE2B,GACAK,GACAC,GACgC;AAChC,WAAO,QAAQ,QAAQ,EAAE;AAAA,EAC3B;AAAA,EAEA,cAA8B;AAC5B,WAAO,QAAQ,OAAO,IAAI,MAAM,yCAAyC,CAAC;AAAA,EAC5E;AAAA,EAEA,WAA2B;AACzB,WAAO,QAAQ,OAAO,IAAI,MAAM,yCAAyC,CAAC;AAAA,EAC5E;AAAA,EAEA,aAA+B;AAC7B,WAAO,QAAQ,QAAQ,EAAE;AAAA,EAC3B;AAAA,EAEA,wBAAuC;AACrC,WAAO,QAAQ;AAAA,MACb,IAAI,MAAM,2CAA2C;AAAA,IAAA;AAAA,EAEzD;AAAA,EAEA,kBAAiC;AAC/B,WAAO,QAAQ;AAAA,MACb,IAAI,MAAM,2CAA2C;AAAA,IAAA;AAAA,EAEzD;AAAA,EAEA,gBAKG;AACD,WAAO,QAAQ,QAAQ;AAAA,MACrB,MAAM;AAAA,MACN,aAAa;AAAA,MACb,KAAK;AAAA,MACL,eAAe;AAAA,IAAA,CAChB;AAAA,EACH;AAAA,EAEA,iBAAmC;AACjC,WAAO,QAAQ,QAAQ,EAAI;AAAA,EAC7B;AACF;ACxGO,SAASI,GAAex0E,GAA2C;AACxE,QAAM,EAAE,UAAAsxE,GAAU,YAAAmD,GAAY,MAAAC,GAAM,SAAA5zH,MAAYk/C,GAE1C20E,IAASC,GAAS9zH,GAAS,MAAM,IAClCA,GAAS,SACV,QAEE+zH,IAAgBD,GAAS9zH,GAAS,KAAK,IACxCA,GAAS,QACV,QAEEg0H,IAA6B;AAAA,IACjC,KAAKH;AAAA,IACL,OAAOD,GAAM,SAAS,QAAQA,EAAK,QAAQG;AAAA,IAC3C,OAAOJ,EAAW;AAAA,IAClB,MAAMA,EAAW;AAAA,IACjB,MAAAC;AAAA,EAAA;AAGF,UAAQpD,GAAA;AAAA,IACN,KAAK;AACH,aAAO,IAAIqB,GAAe;AAAA,QACxB,GAAGmC;AAAA,QACH,KAAKA,EAAW,OAAO;AAAA,MAAA,CACxB;AAAA,IACH,KAAK;AACH,aAAO,IAAIxB,GAAe;AAAA,QACxB,GAAGwB;AAAA,QACH,KAAKA,EAAW,OAAO;AAAA,QACvB,WAAWF,GAAS9zH,GAAS,SAAS,IACjCA,GAAS,YACV;AAAA,MAAA,CACL;AAAA,IACH,KAAK;AAAA,IACL,KAAK;AACH,aAAO,IAAIuzH,GAAc;AAAA,QACvB,GAAGS;AAAA,QACH,KAAKA,EAAW,OAAO;AAAA,MAAA,CACxB;AAAA,IACH,KAAK;AACH,aAAO,IAAIP,GAAAA;AAAAA,IACb;AACE,YAAM,IAAI,MAAM,0BAA0BjD,CAAkB,EAAE;AAAA,EAAA;AAEpE;AAIA,SAASsD,GAAStzH,GAAiC;AACjD,SAAO,OAAOA,KAAU,YAAYA,EAAM,KAAA,EAAO,SAAS;AAC5D;ACrEA,MAAM+gH,KAASnC,GAAmB,gBAAgB;AAS3C,MAAM6U,GAAsB;AAAA,EACjC,YACmBzD,GACAl7F,GACjB;AAFiB,SAAA,WAAAk7F,GACA,KAAA,SAAAl7F;AAAA,EAChB;AAAA,EAEI,sBAAuD;AAC5D,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EAEO,cAA4B;AACjC,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,MAAa,aAAa4+F,GAAkD;AAC1E3S,UAAAA,GAAO,KAAK,qDAAqD,GAC3D,IAAI,MAAM,iDAAiD;AAAA,EACnE;AACF;ACDA,MAAM4S,KAAsB,kCACtBC,KAAsB;AAOrB,MAAMC,GAAoB;AAAA,EAO/B,YAAYr0H,GAAmC;AAN9B,IAAAyM,EAAA,gBAAS2yG,GAAmB,qBAAqB;AACjD,IAAA3yG,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA,qCAAc,IAAA;AACd,IAAAA,EAAA;AAGf,SAAK,aAAazM,GAAS,cAAcm0H,IACzC,KAAK,UAAU,KAAK,oBAAA,GACpB,KAAK,eAAe,KAAK,WAAA;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA,EAKA,IAAW,QAAuB;AAChC,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,MAAa,cAA+C;AAC1D,iBAAM,KAAK,cACJ,MAAM,KAAK,KAAK,QAAQ,QAAQ,EAAE,IAAI,CAACxlB,OAAY;AAAA,MACxD,GAAGA;AAAA,IAAA,EACH;AAAA,EACJ;AAAA,EAEA,MAAa,UACX2lB,GAC2C;AAC3C,UAAM,KAAK;AACX,UAAM3lB,IAAS,KAAK,QAAQ,IAAI2lB,CAAQ;AACxC,WAAO3lB,IAAS,EAAE,GAAGA,EAAA,IAAW;AAAA,EAClC;AAAA,EAEA,MAAa,SACX2lB,GACAxqH,GACAgN,IAAU,eACW;AACrB,UAAM,KAAK;AAEX,UAAMmoG,KAAY,oBAAI,KAAA,GAAO,YAAA,GACvBsV,IAAU,KAAK,kBAAA,GACfp5G,IAAW,KAAK,QAAQ,IAAIm5G,CAAQ;AAE1C,gBAAK,QAAQ,IAAIA,GAAU;AAAA,MACzB,UAAAA;AAAA,MACA,SAAAxqH;AAAA,MACA,iBAAiBqR,GAAU,mBAAmBrR;AAAA,MAC9C,cAAcm1G;AAAA,MACd,SAAAsV;AAAA,MACA,eAAez9G;AAAA,IAAA,CAChB,GAED,KAAK,sBAAA,GACL,KAAK,mBAAA,GAEE,EAAE,SAAAy9G,GAAS,WAAAtV,EAAA;AAAA,EACpB;AAAA,EAEA,MAAa,kBAAiC;AAE5C,IADA,MAAM,KAAK,cACN,KAAK,WACV,KAAK,QAAQ,WAAW,KAAK,UAAU;AAAA,EACzC;AAAA,EAEA,MAAc,aAA4B;AACxC,SAAK,iBAAA,GACL,KAAK,qBAAA;AAAA,EACP;AAAA,EAEQ,mBAAyB;AAC/B,QAAI,OAAO,WAAa;AACtB;AAGF,UAAMuV,IAAS,SAAS,eAAeJ,EAAmB;AAC1D,QAAI,GAACI,KAAU,CAACA,EAAO;AAIvB,UAAI;AACF,cAAMpnC,IAAU,KAAK,MAAMonC,EAAO,WAAW;AAC7C,QAAIpnC,GAAS,WACX,OAAO,QAAQA,EAAQ,OAAO,EAAE,QAAQ,CAAC,CAACknC,GAAU1mH,CAAI,MAAM;AAC5D,eAAK,QAAQ,IAAI0mH,GAAU;AAAA,YACzB,UAAAA;AAAA,YACA,SAAS1mH,EAAK;AAAA,YACd,iBAAiBA,EAAK,mBAAmBA,EAAK;AAAA,YAC9C,cAAcA,EAAK,gBAAgBw/E,EAAQ;AAAA,YAC3C,SACEx/E,EAAK,WAAWw/E,EAAQ,WAAW,KAAK,kBAAA;AAAA,YAC1C,eAAex/E,EAAK;AAAA,UAAA,CACrB;AAAA,QACH,CAAC,GAEH,KAAK,OAAO;AAAA,UACV;AAAA,UACA,KAAK,QAAQ;AAAA,QAAA;AAAA,MAEjB,SAASsD,GAAO;AACd,aAAK,OAAO,KAAK,iDAAiDA,CAAK;AAAA,MACzE;AAAA,EACF;AAAA,EAEQ,uBAA6B;AACnC,QAAI,CAAC,KAAK,QAAS;AACnB,UAAMgV,IAAM,KAAK,QAAQ,QAAQ,KAAK,UAAU;AAChD,QAAKA;AAEL,UAAI;AACF,cAAMknE,IAAU,KAAK,MAAMlnE,CAAG;AAC9B,YAAI,CAACknE,GAAS,QAAS;AAEvB,eAAO,QAAQA,EAAQ,OAAO,EAAE,QAAQ,CAAC,CAACknC,GAAU1mH,CAAI,MAAM;AAC5D,gBAAMuN,IAAW,KAAK,QAAQ,IAAIm5G,CAAQ;AAC1C,cAAI,CAACn5G,GAAU;AACb,iBAAK,QAAQ,IAAIm5G,GAAU;AAAA,cACzB,UAAAA;AAAA,cACA,SAAS1mH,EAAK;AAAA,cACd,iBAAiBA,EAAK,mBAAmBA,EAAK;AAAA,cAC9C,cAAcA,EAAK;AAAA,cACnB,SAASA,EAAK;AAAA,cACd,eAAeA,EAAK;AAAA,YAAA,CACrB;AACD;AAAA,UACF;AAGA,UACE,IAAI,KAAKA,EAAK,YAAY,EAAE,QAAA,IAC5B,IAAI,KAAKuN,EAAS,YAAY,EAAE,aAEhC,KAAK,QAAQ,IAAIm5G,GAAU;AAAA,YACzB,UAAAA;AAAA,YACA,SAAS1mH,EAAK;AAAA,YACd,iBAAiBuN,EAAS;AAAA,YAC1B,cAAcvN,EAAK;AAAA,YACnB,SAASA,EAAK;AAAA,YACd,eAAeA,EAAK,iBAAiBuN,EAAS;AAAA,UAAA,CAC/C;AAAA,QAEL,CAAC,GAED,KAAK,OAAO;AAAA,UACV;AAAA,UACA,OAAO,KAAKiyE,EAAQ,OAAO,EAAE;AAAA,QAAA;AAAA,MAEjC,SAASl8E,GAAO;AACd,aAAK,OAAO;AAAA,UACV;AAAA,UACAA;AAAA,QAAA;AAAA,MAEJ;AAAA,EACF;AAAA,EAEQ,wBAA8B;AACpC,QAAI,OAAO,WAAa;AACtB;AAGF,UAAMk8E,IAAkC;AAAA,MACtC,YAAW,oBAAI,KAAA,GAAO,YAAA;AAAA,MACtB,SAAS,CAAA;AAAA,MACT,SAAS,KAAK,kBAAA;AAAA,IAAkB;AAGlC,SAAK,QAAQ,QAAQ,CAACuhB,GAAQ2lB,MAAa;AACzC,MAAAlnC,EAAQ,QAAQknC,CAAQ,IAAI;AAAA,QAC1B,SAAS3lB,EAAO;AAAA,QAChB,iBAAiBA,EAAO;AAAA,QACxB,cAAcA,EAAO;AAAA,QACrB,SAASA,EAAO;AAAA,QAChB,eAAeA,EAAO;AAAA,MAAA;AAAA,IAE1B,CAAC;AAED,UAAM6lB,IAAS,KAAK,qBAAA;AACpB,IAAAA,EAAO,cAAc,KAAK,UAAUpnC,GAAS,MAAM,CAAC;AAAA,EACtD;AAAA,EAEQ,qBAA2B;AACjC,QAAI,CAAC,KAAK,QAAS;AACnB,UAAMA,IAAkC;AAAA,MACtC,YAAW,oBAAI,KAAA,GAAO,YAAA;AAAA,MACtB,SAAS,CAAA;AAAA,IAAC;AAGZ,SAAK,QAAQ,QAAQ,CAACuhB,GAAQ2lB,MAAa;AACzC,MAAAlnC,EAAQ,QAAQknC,CAAQ,IAAI;AAAA,QAC1B,SAAS3lB,EAAO;AAAA,QAChB,iBAAiBA,EAAO;AAAA,QACxB,cAAcA,EAAO;AAAA,QACrB,SAASA,EAAO;AAAA,QAChB,eAAeA,EAAO;AAAA,MAAA;AAAA,IAE1B,CAAC;AAED,QAAI;AACF,WAAK,QAAQ,QAAQ,KAAK,YAAY,KAAK,UAAUvhB,CAAO,CAAC;AAAA,IAC/D,SAASl8E,GAAO;AACd,WAAK,OAAO;AAAA,QACV;AAAA,QACAA;AAAA,MAAA;AAAA,IAEJ;AAAA,EACF;AAAA,EAEQ,uBAA0C;AAChD,QAAIsjH,IAAS,SAAS;AAAA,MACpBJ;AAAA,IAAA;AAEF,WAAKI,MACHA,IAAS,SAAS,cAAc,QAAQ,GACxCA,EAAO,KAAKJ,IACZI,EAAO,OAAO,oBACd,SAAS,KAAK,YAAYA,CAAM,IAE3BA;AAAA,EACT;AAAA,EAEQ,sBAAsC;AAC5C,QAAI;AACF,UAAI,OAAO,SAAW,OAAe,OAAO;AAC1C,eAAO,OAAO;AAAA,IAElB,SAAStjH,GAAO;AACd,WAAK,OAAO,MAAM,6BAA6BA,CAAK;AAAA,IACtD;AACA,WAAO;AAAA,EACT;AAAA,EAEQ,oBAA4B;AAClC,WAAO,GAAG,KAAK,IAAA,EAAM,SAAS,EAAE,CAAC,IAAI,KAAK,OAAA,EAAS,SAAS,EAAE,EAAE,MAAM,GAAG,CAAC,CAAC;AAAA,EAC7E;AACF;AC1QA,MAAMqwG,KAASnC,GAAmB,WAAW;AAEtC,MAAMqV,GAAU;AAAA,EAMrB,YAAYlE,GAA6B;AALxB,IAAA9jH,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AAMf,QAHA,KAAK,aAAa6jH,GAAiBC,CAAS,GAC5C,KAAK,gBAAgB,IAAI8D,GAAA,GAErB,CAAC,KAAK,YAAY;AACpB9S,MAAAA,GAAO,KAAK,sDAAsD;AAClE;AAAA,IACF;AAEA,QAAI;AACF,WAAK,WAAWmS,GAAe,KAAK,WAAW,MAAM,GACrD,KAAK,cAAc,IAAIO;AAAA,QACrB,KAAK;AAAA,QACL,KAAK,WAAW;AAAA,MAAA;AAElB,YAAMS,IAAO,KAAK,WAAW,OAAO;AACpCnT,MAAAA,GAAO;AAAA,QACL,kCAAkCmT,EAAK,KAAK,IAAIA,EAAK,IAAI,WAAWA,EAAK,UAAU;AAAA,MAAA;AAAA,IAEvF,SAASxjH,GAAO;AACdqwG,MAAAA,GAAO,MAAM,sCAAsCrwG,CAAK;AAAA,IAC1D;AAAA,EACF;AAAA,EAEO,YAAqB;AAC1B,WAAO,EAAQ,KAAK;AAAA,EACtB;AAAA,EAEO,YAAsC;AAC3C,WAAO,KAAK,YAAY,UAAU;AAAA,EACpC;AAAA,EAEO,cAAwC;AAC7C,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,MAAa,aAAak8E,GAAiD;AACzE,QAAI,CAAC,KAAK;AACR,YAAM,IAAI,MAAM,mCAAmC;AAGrD,UAAM,KAAK,YAAY,aAAaA,CAAO;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAa,KACXo/B,GACAmI,GACAC,IAAY,gBACK;AACjB,UAAM99G,IAAU,OAAO69G,KAAa,WAAWA,IAAW;AAE1D,WAAK,KAAK,eASVpT,GAAO;AAAA,MACL;AAAA,IAAA,GAEK,OAXU,MAAM,KAAK,cAAc;AAAA,MACtCqT;AAAA,MACApI;AAAA,MACA11G;AAAA,IAAA,GAEY;AAAA,EAOlB;AAAA,EAEA,MAAa,sBAAuD;AAClE,WAAO,KAAK,cAAc,YAAA;AAAA,EAC5B;AAAA,EAEA,MAAa,kBACXw9G,GAC2C;AAC3C,WAAO,KAAK,cAAc,UAAUA,CAAQ;AAAA,EAC9C;AACF;AC1FA,MAAM/S,KAASnC,GAAmB,YAAY;AAOvC,MAAMyV,GAAW;AAAA,EAKtB,YAAYv/F,IAAqB,IAAI;AAJ7B,IAAA7oB,EAAA,qBAA2B;AAC3B,IAAAA,EAAA;AACA,IAAAA,EAAA,sBAAqD;AAG3D,SAAK,SAAS;AAAA,MACZ,YAAY6oB,EAAO,cAAc;AAAA,MACjC,gBAAgBA,EAAO,kBAAkB;AAAA;AAAA,IAAA,GAG3C,KAAK,gBAAA;AAAA,EACP;AAAA;AAAA;AAAA;AAAA,EAKO,MAAMw/F,GAAkB;AAC7B,SAAK,cAAcA,GACnB,KAAK,cAAA,GACL,KAAK,kBAAA;AAAA,EACP;AAAA;AAAA;AAAA;AAAA,EAKO,SAAe;AACpB,SAAK,cAAc,MACnB,KAAK,aAAA,GACL,KAAK,kBAAA;AAAA,EACP;AAAA;AAAA;AAAA;AAAA,EAKO,iBAA8B;AACnC,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKO,kBAA2B;AAChC,WAAO,KAAK,gBAAgB;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA,EAKO,QAAQpyB,GAA6B;AAC1C,WAAO,KAAK,aAAa,SAASA;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA,EAKO,UAAmB;AACxB,WAAK,KAAK,cAER,KAAK,YAAY,SAAS,YAAY,KAAK,YAAY,SAAS,UAFpC;AAAA,EAIhC;AAAA;AAAA;AAAA;AAAA,EAKO,UAAmB;AACxB,WAAO,KAAK,gBAAA;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKO,UAAmB;AACxB,WAAO,KAAK,aAAa,SAAS;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA,EAKO,aAAsB;AAC3B,WAAO,KAAK,gBAAA;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKO,iBAAiBqyB,GAAgC;AACtD,WAAK,KAAK,cAGN,KAAK,YAAY,SAAS,UAAgB,KAGvC,KAAK,YAAY,OAAOA,IAND;AAAA,EAOhC;AAAA;AAAA;AAAA;AAAA,EAKO,oBAA6B;AAClC,WAAO,KAAK,QAAA;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKO,UAAmB;AACxB,WAAO,KAAK,QAAA;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKO,WAAoB;AACzB,WAAO,KAAK,QAAA;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKO,WAAW5C,GAA8B;AAC9C,IAAK,KAAK,gBAEV,KAAK,cAAc;AAAA,MACjB,GAAG,KAAK;AAAA,MACR,GAAGA;AAAA,IAAA,GAGL,KAAK,cAAA;AAAA,EACP;AAAA;AAAA;AAAA;AAAA,EAKQ,gBAAsB;AAC5B,QAAK,KAAK;AAEV,UAAI;AACF,qBAAa;AAAA,UACX,KAAK,OAAO;AAAA,UACZ,KAAK,UAAU,KAAK,WAAW;AAAA,QAAA;AAAA,MAEnC,SAASjhH,GAAO;AACd,QAAAqwG,GAAO,MAAM,mCAAmCrwG,CAAK;AAAA,MACvD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKQ,kBAAwB;AAC9B,QAAI;AACF,YAAM05D,IAAS,aAAa,QAAQ,KAAK,OAAO,UAAU;AAC1D,MAAIA,MACF,KAAK,cAAc,KAAK,MAAMA,CAAM,GACpC,KAAK,kBAAA;AAAA,IAET,SAAS15D,GAAO;AACd,MAAAqwG,GAAO,MAAM,qCAAqCrwG,CAAK;AAAA,IACzD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKQ,eAAqB;AAC3B,QAAI;AACF,mBAAa,WAAW,KAAK,OAAO,UAAU;AAAA,IAChD,SAASA,GAAO;AACd,MAAAqwG,GAAO,MAAM,4BAA4BrwG,CAAK;AAAA,IAChD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKQ,oBAA0B;AAChC,SAAK,kBAAA,GAEL,KAAK,eAAe,WAAW,MAAM;AACnC,WAAK,OAAA;AAAA,IACP,GAAG,KAAK,OAAO,cAAc;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA,EAKQ,oBAA0B;AAChC,IAAI,KAAK,iBACP,aAAa,KAAK,YAAY,GAC9B,KAAK,eAAe;AAAA,EAExB;AAAA;AAAA;AAAA;AAAA,EAKO,iBAAuB;AAC5B,IAAI,KAAK,qBACP,KAAK,kBAAA;AAAA,EAET;AAAA;AAAA;AAAA;AAAA,EAKA,OAAc,YAAYe,GAAqB;AAC7C,WAAO;AAAA,MACL,IAAI,SAAS,KAAK,IAAA,CAAK;AAAA,MACvB,MAAMA,KAAQ;AAAA,MACd,MAAM;AAAA,IAAA;AAAA,EAEV;AAAA;AAAA;AAAA;AAAA,EAKA,OAAc,aAAarF,GAAYqF,GAAcgsB,GAAsB;AACzE,WAAO;AAAA,MACL,IAAArxB;AAAA,MACA,MAAAqF;AAAA,MACA,OAAAgsB;AAAA,MACA,MAAM;AAAA,IAAA;AAAA,EAEV;AAAA;AAAA;AAAA;AAAA,EAKA,OAAc,YAAYrxB,GAAYqF,GAAcgsB,GAAsB;AACxE,WAAO;AAAA,MACL,IAAArxB;AAAA,MACA,MAAAqF;AAAA,MACA,OAAAgsB;AAAA,MACA,MAAM;AAAA,IAAA;AAAA,EAEV;AAAA;AAAA;AAAA;AAAA,EAKO,iBAOL;AACA,WAAO;AAAA,MACL,SAAS,KAAK,QAAA;AAAA,MACd,SAAS,KAAK,QAAA;AAAA,MACd,YAAY,KAAK,WAAA;AAAA,MACjB,SAAS,KAAK,QAAA;AAAA,MACd,UAAU,KAAK,SAAA;AAAA,MACf,SAAS,KAAK,QAAA;AAAA,IAAQ;AAAA,EAE1B;AACF;AC9MO,MAAM+2F,GAAa;AAAA,EAUxB,YAAY1/F,IAA6B,IAAI;AATrC,IAAA7oB,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACD,IAAAA,EAAA;AACC;AAAA,IAAAA,EAAA;AACA,IAAAA,EAAA;AAGN,SAAK,SAAS;AAAA,MACZ,UAAU;AAAA,MACV,kBAAkB;AAAA;AAAA,MAClB,gBAAgB;AAAA,MAChB,mBAAmB;AAAA,MACnB,GAAG6oB;AAAA,IAAA,GAID,KAAK,OAAO,SACd6pF,GAAY,UAAU,KAAK,OAAO,KAAK,GAIzC,KAAK,UAAU,IAAI3yG,GAAA,GACnB,KAAK,WAAW,IAAIqyC,GAAe,KAAK,OAAO,QAAQ,GACvD,KAAK,WAAW,IAAIqB,GAAA,GACpB,KAAK,OAAO,IAAI20E,GAAA,GAChB,KAAK,MAAM,IAAIJ,GAAU,KAAK,OAAO,GAAG,GACxC,KAAK,KAAK,IAAItJ,GAAS;AAAA,MACrB,SAAS,KAAK;AAAA,MACd,UAAU,KAAK;AAAA,MACf,UAAU,KAAK;AAAA,MACf,eAAe;AAAA;AAAA,IAAA,CAChB,GAED,KAAK,WAAA;AAAA,EACP;AAAA,EAEQ,aAAmB;AAEzB,SAAK,QAAQ,kBAAA,GAGb,KAAK,GAAG,qBAAA,GAGJ,KAAK,OAAO,YACd,KAAK,cAAA,GAEP,KAAK,GAAG,QAAA;AAAA,EACV;AAAA,EAEQ,gBAAsB;AAC5B,SAAK,mBAAmB,OAAO,YAAY,MAAM;AAC/C,MAAI,KAAK,QAAQ,0BACf,KAAK,KAAA,EAAO,MAAM,CAACj6G,MAAU;AAC3B,gBAAQ,MAAM,qBAAqBA,CAAK;AAAA,MAC1C,CAAC;AAAA,IAEL,GAAG,KAAK,OAAO,gBAAgB;AAAA,EACjC;AAAA,EAEA,MAAa,OAAsB;AAEjC,UAAM9D,IAAW,KAAK,QAAQ,gBAAA;AAC9B,UAAM,KAAK,IAAI,KAAKA,GAAU,KAAK,QAAQ,qBAAqB,GAChE,KAAK,QAAQ,YAAA;AAAA,EACf;AAAA,EAEO,OAAa;AAClB,SAAK,QAAQ,KAAA,GACb,KAAK,GAAG,QAAA;AAAA,EACV;AAAA,EAEO,OAAa;AAClB,SAAK,QAAQ,KAAA,GACb,KAAK,GAAG,QAAA;AAAA,EACV;AAAA,EAEO,UAAgB;AAErB,IAAI,KAAK,qBACP,cAAc,KAAK,gBAAgB,GACnC,KAAK,mBAAmB,SAG1B,KAAK,GAAG,QAAA;AAAA,EACV;AACF;AAGI,OAAO,SAAW,OACpB,OAAO,iBAAiB,oBAAoB,MAAM;AAChD,QAAM6nH,IAAgB,SAAS,cAAc,eAAe;AAC5D,MAAIA,GAAe;AACjB,UAAM3/F,IAAS2/F,EAAc,aAAa,oBAAoB,GACxDC,IAAe5/F,IAAS,KAAK,MAAMA,CAAM,IAAI,CAAA;AACnD,QAAI0/F,GAAaE,CAAY;AAAA,EAC/B;AACF,CAAC;","x_google_ignoreList":[0,1,2,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271]}